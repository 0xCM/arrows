/*******************************************************************************
* Copyright 2019 Intel Corporation
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*******************************************************************************/

#ifndef MKLDNN_CONFIG_H
#define MKLDNN_CONFIG_H

#ifndef DOXYGEN_SHOULD_SKIP_THIS

// All symbols shall be internal unless marked as MKLDNN_API
#if defined _WIN32 || defined __CYGWIN__
#   define MKLDNN_HELPER_DLL_IMPORT __declspec(dllimport)
#   define MKLDNN_HELPER_DLL_EXPORT __declspec(dllexport)
#else
#   if __GNUC__ >= 4
#       define MKLDNN_HELPER_DLL_IMPORT __attribute__((visibility("default")))
#       define MKLDNN_HELPER_DLL_EXPORT __attribute__((visibility("default")))
#   else
#       define MKLDNN_HELPER_DLL_IMPORT
#       define MKLDNN_HELPER_DLL_EXPORT
#   endif
#endif

#ifdef MKLDNN_DLL
#   ifdef MKLDNN_DLL_EXPORTS
#       define MKLDNN_API MKLDNN_HELPER_DLL_EXPORT
#   else
#       define MKLDNN_API MKLDNN_HELPER_DLL_IMPORT
#   endif
#else
#   define MKLDNN_API
#endif

#if defined (__GNUC__)
#   define MKLDNN_DEPRECATED __attribute__((deprecated))
#elif defined(_MSC_VER)
#   define MKLDNN_DEPRECATED __declspec(deprecated)
#else
#   define MKLDNN_DEPRECATED
#endif
#endif // DOXYGEN_SHOULD_SKIP_THIS

// No backend.
#define MKLDNN_BACKEND_NONE 0

// Native backend (CPU only).
#define MKLDNN_BACKEND_NATIVE 1

// OpenCL backend.
#define MKLDNN_BACKEND_OPENCL 2

// MKL-DNN CPU engine backend.
#cmakedefine MKLDNN_CPU_BACKEND MKLDNN_BACKEND_${MKLDNN_CPU_BACKEND}

// MKL-DNN GPU engine backend.
#cmakedefine MKLDNN_GPU_BACKEND MKLDNN_BACKEND_${MKLDNN_GPU_BACKEND}

#if defined(MKLDNN_CPU_BACKEND) && defined(MKLDNN_GPU_BACKEND)
#    if MKLDNN_CPU_BACKEND != MKLDNN_BACKEND_NATIVE
#        error "Unexpected MKLDNN_CPU_BACKEND"
#    endif
#    if (MKLDNN_GPU_BACKEND != MKLDNN_BACKEND_NONE) \
             && (MKLDNN_GPU_BACKEND != MKLDNN_BACKEND_OPENCL)
#        error "Unexpected MKLDNN_GPU_BACKEND"
#    endif
#else
#    error "MKLDNN_CPU_BACKEND and MKLDNN_GPU_BACKEND must be defined"
#endif

#if MKLDNN_GPU_BACKEND == MKLDNN_BACKEND_OPENCL
#    define MKLDNN_WITH_OPENCL 1
#else
#    define MKLDNN_WITH_OPENCL 0
#endif

#endif
