; 2019-09-24 17:05:46:838
; function: int sub(int lhs, int rhs)
; location: [7FFC872B3400h, 7FFC872B3409h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov eax,ecx                   ; MOV(Mov_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 8b c1
0007h sub eax,edx                   ; SUB(Sub_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 2b c2
0009h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> subBytes => new byte[10]{0x0F,0x1F,0x44,0x00,0x00,0x8B,0xC1,0x2B,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: uint sub(uint lhs, uint rhs)
; location: [7FFC872B3420h, 7FFC872B3429h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov eax,ecx                   ; MOV(Mov_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 8b c1
0007h sub eax,edx                   ; SUB(Sub_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 2b c2
0009h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> subBytes => new byte[10]{0x0F,0x1F,0x44,0x00,0x00,0x8B,0xC1,0x2B,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: long sub(long lhs, long rhs)
; location: [7FFC872B3440h, 7FFC872B344Bh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0008h sub rax,rdx                   ; SUB(Sub_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 2b c2
000bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> subBytes => new byte[12]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0xC1,0x48,0x2B,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ulong sub(ulong lhs, ulong rhs)
; location: [7FFC872B3460h, 7FFC872B346Bh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0008h sub rax,rdx                   ; SUB(Sub_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 2b c2
000bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> subBytes => new byte[12]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0xC1,0x48,0x2B,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: float sub(float lhs, float rhs)
; location: [7FFC872B3480h, 7FFC872B3489h]
0000h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0003h xchg ax,ax                    ; NOP(Nopw)                                            encoding(2 bytes) = 66 90
0005h vsubss xmm0,xmm0,xmm1         ; VSUBSS(VEX_Vsubss_xmm_xmm_xmmm32) [XMM0,XMM0,XMM1]   encoding(VEX, 4 bytes) = c5 fa 5c c1
0009h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> subBytes => new byte[10]{0xC5,0xF8,0x77,0x66,0x90,0xC5,0xFA,0x5C,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: double sub(double lhs, double rhs)
; location: [7FFC872B34A0h, 7FFC872B34A9h]
0000h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0003h xchg ax,ax                    ; NOP(Nopw)                                            encoding(2 bytes) = 66 90
0005h vsubsd xmm0,xmm0,xmm1         ; VSUBSD(VEX_Vsubsd_xmm_xmm_xmmm64) [XMM0,XMM0,XMM1]   encoding(VEX, 4 bytes) = c5 fb 5c c1
0009h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> subBytes => new byte[10]{0xC5,0xF8,0x77,0x66,0x90,0xC5,0xFB,0x5C,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref sbyte sub(ref sbyte lhs, sbyte rhs)
; location: [7FFC872B34C0h, 7FFC872B34CEh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,dl                  ; MOVSX(Movsx_r64_rm8) [RAX,DL]                        encoding(4 bytes) = 48 0f be c2
0009h sub [rcx],al                  ; SUB(Sub_rm8_r8) [mem(8u,RCX:br,DS:sr),AL]            encoding(2 bytes) = 28 01
000bh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> subBytes => new byte[15]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBE,0xC2,0x28,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref byte sub(ref byte lhs, byte rhs)
; location: [7FFC872B34E0h, 7FFC872B34EDh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,dl                  ; MOVZX(Movzx_r32_rm8) [EAX,DL]                        encoding(3 bytes) = 0f b6 c2
0008h sub [rcx],al                  ; SUB(Sub_rm8_r8) [mem(8u,RCX:br,DS:sr),AL]            encoding(2 bytes) = 28 01
000ah mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> subBytes => new byte[14]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC2,0x28,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref short sub(ref short lhs, short rhs)
; location: [7FFC872B3500h, 7FFC872B350Fh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,dx                  ; MOVSX(Movsx_r64_rm16) [RAX,DX]                       encoding(4 bytes) = 48 0f bf c2
0009h sub [rcx],ax                  ; SUB(Sub_rm16_r16) [mem(16u,RCX:br,DS:sr),AX]         encoding(3 bytes) = 66 29 01
000ch mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> subBytes => new byte[16]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBF,0xC2,0x66,0x29,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref ushort sub(ref ushort lhs, ushort rhs)
; location: [7FFC872B3520h, 7FFC872B352Eh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,dx                  ; MOVZX(Movzx_r32_rm16) [EAX,DX]                       encoding(3 bytes) = 0f b7 c2
0008h sub [rcx],ax                  ; SUB(Sub_rm16_r16) [mem(16u,RCX:br,DS:sr),AX]         encoding(3 bytes) = 66 29 01
000bh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> subBytes => new byte[15]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB7,0xC2,0x66,0x29,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref int sub(ref int lhs, int rhs)
; location: [7FFC872B3540h, 7FFC872B354Ah]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h sub [rcx],edx                 ; SUB(Sub_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(2 bytes) = 29 11
0007h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> subBytes => new byte[11]{0x0F,0x1F,0x44,0x00,0x00,0x29,0x11,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref uint sub(ref uint lhs, uint rhs)
; location: [7FFC872B3560h, 7FFC872B356Ah]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h sub [rcx],edx                 ; SUB(Sub_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(2 bytes) = 29 11
0007h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> subBytes => new byte[11]{0x0F,0x1F,0x44,0x00,0x00,0x29,0x11,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref long sub(ref long lhs, long rhs)
; location: [7FFC872B3580h, 7FFC872B358Bh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h sub [rcx],rdx                 ; SUB(Sub_rm64_r64) [mem(64u,RCX:br,DS:sr),RDX]        encoding(3 bytes) = 48 29 11
0008h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> subBytes => new byte[12]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x29,0x11,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref ulong sub(ref ulong lhs, ulong rhs)
; location: [7FFC872B35A0h, 7FFC872B35ABh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h sub [rcx],rdx                 ; SUB(Sub_rm64_r64) [mem(64u,RCX:br,DS:sr),RDX]        encoding(3 bytes) = 48 29 11
0008h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> subBytes => new byte[12]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x29,0x11,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref float sub(ref float lhs, float rhs)
; location: [7FFC872B35C0h, 7FFC872B35D4h]
0000h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0003h xchg ax,ax                    ; NOP(Nopw)                                            encoding(2 bytes) = 66 90
0005h vmovss xmm0,dword ptr [rcx]   ; VMOVSS(VEX_Vmovss_xmm_m32) [XMM0,mem(Float32,RCX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 10 01
0009h vsubss xmm0,xmm0,xmm1         ; VSUBSS(VEX_Vsubss_xmm_xmm_xmmm32) [XMM0,XMM0,XMM1]   encoding(VEX, 4 bytes) = c5 fa 5c c1
000dh vmovss dword ptr [rcx],xmm0   ; VMOVSS(VEX_Vmovss_m32_xmm) [mem(Float32,RCX:br,DS:sr),XMM0] encoding(VEX, 4 bytes) = c5 fa 11 01
0011h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0014h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> subBytes => new byte[21]{0xC5,0xF8,0x77,0x66,0x90,0xC5,0xFA,0x10,0x01,0xC5,0xFA,0x5C,0xC1,0xC5,0xFA,0x11,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref double sub(ref double lhs, double rhs)
; location: [7FFC872B35F0h, 7FFC872B3604h]
0000h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0003h xchg ax,ax                    ; NOP(Nopw)                                            encoding(2 bytes) = 66 90
0005h vmovsd xmm0,qword ptr [rcx]   ; VMOVSD(VEX_Vmovsd_xmm_m64) [XMM0,mem(Float64,RCX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fb 10 01
0009h vsubsd xmm0,xmm0,xmm1         ; VSUBSD(VEX_Vsubsd_xmm_xmm_xmmm64) [XMM0,XMM0,XMM1]   encoding(VEX, 4 bytes) = c5 fb 5c c1
000dh vmovsd qword ptr [rcx],xmm0   ; VMOVSD(VEX_Vmovsd_m64_xmm) [mem(Float64,RCX:br,DS:sr),XMM0] encoding(VEX, 4 bytes) = c5 fb 11 01
0011h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0014h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> subBytes => new byte[21]{0xC5,0xF8,0x77,0x66,0x90,0xC5,0xFB,0x10,0x01,0xC5,0xFB,0x5C,0xC1,0xC5,0xFB,0x11,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<sbyte> sub(ReadOnlySpan<sbyte> lhs, ReadOnlySpan<sbyte> rhs, Span<sbyte> dst)
; location: [7FFC872B3A20h, 7FFC872B3AF9h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000dh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
0011h mov r10,[r8]                  ; MOV(Mov_r64_rm64) [R10,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 4d 8b 10
0014h mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0018h mov r11,[rdx]                 ; MOV(Mov_r64_rm64) [R11,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 1a
001bh mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
001eh mov esi,84h                   ; MOV(Mov_r32_imm32) [ESI,84h:imm32]                   encoding(5 bytes) = be 84 00 00 00
0023h mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0028h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
002ah mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
002dh cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0030h jne short 007bh               ; JNE(Jne_rel8_64) [7Bh:jmp64]                         encoding(2 bytes) = 75 49
0032h xor ebx,ebx                   ; XOR(Xor_r32_rm32) [EBX,EBX]                          encoding(2 bytes) = 33 db
0034h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0036h jle short 0066h               ; JLE(Jle_rel8_64) [66h:jmp64]                         encoding(2 bytes) = 7e 2e
0038h cmp ebx,r9d                   ; CMP(Cmp_r32_rm32) [EBX,R9D]                          encoding(3 bytes) = 41 3b d9
003bh jae near ptr 00d4h            ; JAE(Jae_rel32_64) [D4h:jmp64]                        encoding(6 bytes) = 0f 83 93 00 00 00
0041h movsxd rbp,ebx                ; MOVSXD(Movsxd_r64_rm32) [RBP,EBX]                    encoding(3 bytes) = 48 63 eb
0044h lea rdi,[rax+rbp]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 28
0048h movsx rsi,byte ptr [r11+rbp]  ; MOVSX(Movsx_r64_rm8) [RSI,mem(8i,R11:br,DS:sr)]      encoding(5 bytes) = 49 0f be 34 2b
004dh cmp ebx,r8d                   ; CMP(Cmp_r32_rm32) [EBX,R8D]                          encoding(3 bytes) = 41 3b d8
0050h jae near ptr 00d4h            ; JAE(Jae_rel32_64) [D4h:jmp64]                        encoding(6 bytes) = 0f 83 7e 00 00 00
0056h movsx rbp,byte ptr [r10+rbp]  ; MOVSX(Movsx_r64_rm8) [RBP,mem(8i,R10:br,DS:sr)]      encoding(5 bytes) = 49 0f be 2c 2a
005bh sub esi,ebp                   ; SUB(Sub_r32_rm32) [ESI,EBP]                          encoding(2 bytes) = 2b f5
005dh mov [rdi],sil                 ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),SIL]           encoding(3 bytes) = 40 88 37
0060h inc ebx                       ; INC(Inc_rm32) [EBX]                                  encoding(2 bytes) = ff c3
0062h cmp ebx,edx                   ; CMP(Cmp_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 3b da
0064h jl short 0038h                ; JL(Jl_rel8_64) [38h:jmp64]                           encoding(2 bytes) = 7c d2
0066h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0069h mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
006dh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0070h add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0074h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0075h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0076h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0077h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0078h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
007ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
007bh mov ecx,0D55h                 ; MOV(Mov_r32_imm32) [ECX,d55h:imm32]                  encoding(5 bytes) = b9 55 0d 00 00
0080h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
008ah call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F47FF00h:jmp64]                encoding(5 bytes) = e8 71 fe 47 5f
008fh mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0092h mov ecx,0D5Dh                 ; MOV(Mov_r32_imm32) [ECX,d5dh:imm32]                  encoding(5 bytes) = b9 5d 0d 00 00
0097h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00a1h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F47FF00h:jmp64]                encoding(5 bytes) = e8 5a fe 47 5f
00a6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00a9h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
00aeh mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00b1h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00b5h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00b8h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00bah mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00bch mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00c1h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00c6h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFCAA558h:jmp64]        encoding(5 bytes) = e8 8d a4 ca ff
00cbh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00ceh call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F462F30h:jmp64]                encoding(5 bytes) = e8 5d 2e 46 5f
00d3h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00d4h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5B1390h:jmp64]                encoding(5 bytes) = e8 b7 12 5b 5f
00d9h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> subBytes => new byte[218]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4D,0x8B,0x10,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x1A,0x8B,0x52,0x08,0xBE,0x84,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x49,0x33,0xDB,0x85,0xD2,0x7E,0x2E,0x41,0x3B,0xD9,0x0F,0x83,0x93,0x00,0x00,0x00,0x48,0x63,0xEB,0x48,0x8D,0x3C,0x28,0x49,0x0F,0xBE,0x34,0x2B,0x41,0x3B,0xD8,0x0F,0x83,0x7E,0x00,0x00,0x00,0x49,0x0F,0xBE,0x2C,0x2A,0x2B,0xF5,0x40,0x88,0x37,0xFF,0xC3,0x3B,0xDA,0x7C,0xD2,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x55,0x0D,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x71,0xFE,0x47,0x5F,0x4C,0x8B,0xF0,0xB9,0x5D,0x0D,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x5A,0xFE,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x8D,0xA4,0xCA,0xFF,0x48,0x8B,0xC8,0xE8,0x5D,0x2E,0x46,0x5F,0xCC,0xE8,0xB7,0x12,0x5B,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<byte> sub(ReadOnlySpan<byte> lhs, ReadOnlySpan<byte> rhs, Span<byte> dst)
; location: [7FFC872B3B20h, 7FFC872B3BF9h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000dh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
0011h mov r10,[r8]                  ; MOV(Mov_r64_rm64) [R10,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 4d 8b 10
0014h mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0018h mov r11,[rdx]                 ; MOV(Mov_r64_rm64) [R11,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 1a
001bh mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
001eh mov esi,8Ch                   ; MOV(Mov_r32_imm32) [ESI,8ch:imm32]                   encoding(5 bytes) = be 8c 00 00 00
0023h mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0028h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
002ah mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
002dh cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0030h jne short 007bh               ; JNE(Jne_rel8_64) [7Bh:jmp64]                         encoding(2 bytes) = 75 49
0032h xor ebx,ebx                   ; XOR(Xor_r32_rm32) [EBX,EBX]                          encoding(2 bytes) = 33 db
0034h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0036h jle short 0066h               ; JLE(Jle_rel8_64) [66h:jmp64]                         encoding(2 bytes) = 7e 2e
0038h cmp ebx,r9d                   ; CMP(Cmp_r32_rm32) [EBX,R9D]                          encoding(3 bytes) = 41 3b d9
003bh jae near ptr 00d4h            ; JAE(Jae_rel32_64) [D4h:jmp64]                        encoding(6 bytes) = 0f 83 93 00 00 00
0041h movsxd rbp,ebx                ; MOVSXD(Movsxd_r64_rm32) [RBP,EBX]                    encoding(3 bytes) = 48 63 eb
0044h lea rdi,[rax+rbp]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 28
0048h movzx esi,byte ptr [r11+rbp]  ; MOVZX(Movzx_r32_rm8) [ESI,mem(8u,R11:br,DS:sr)]      encoding(5 bytes) = 41 0f b6 34 2b
004dh cmp ebx,r8d                   ; CMP(Cmp_r32_rm32) [EBX,R8D]                          encoding(3 bytes) = 41 3b d8
0050h jae near ptr 00d4h            ; JAE(Jae_rel32_64) [D4h:jmp64]                        encoding(6 bytes) = 0f 83 7e 00 00 00
0056h movzx ebp,byte ptr [r10+rbp]  ; MOVZX(Movzx_r32_rm8) [EBP,mem(8u,R10:br,DS:sr)]      encoding(5 bytes) = 41 0f b6 2c 2a
005bh sub esi,ebp                   ; SUB(Sub_r32_rm32) [ESI,EBP]                          encoding(2 bytes) = 2b f5
005dh mov [rdi],sil                 ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),SIL]           encoding(3 bytes) = 40 88 37
0060h inc ebx                       ; INC(Inc_rm32) [EBX]                                  encoding(2 bytes) = ff c3
0062h cmp ebx,edx                   ; CMP(Cmp_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 3b da
0064h jl short 0038h                ; JL(Jl_rel8_64) [38h:jmp64]                           encoding(2 bytes) = 7c d2
0066h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0069h mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
006dh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0070h add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0074h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0075h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0076h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0077h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0078h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
007ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
007bh mov ecx,0D55h                 ; MOV(Mov_r32_imm32) [ECX,d55h:imm32]                  encoding(5 bytes) = b9 55 0d 00 00
0080h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
008ah call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F47FE00h:jmp64]                encoding(5 bytes) = e8 71 fd 47 5f
008fh mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0092h mov ecx,0D5Dh                 ; MOV(Mov_r32_imm32) [ECX,d5dh:imm32]                  encoding(5 bytes) = b9 5d 0d 00 00
0097h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00a1h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F47FE00h:jmp64]                encoding(5 bytes) = e8 5a fd 47 5f
00a6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00a9h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
00aeh mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00b1h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00b5h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00b8h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00bah mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00bch mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00c1h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00c6h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFCAA458h:jmp64]        encoding(5 bytes) = e8 8d a3 ca ff
00cbh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00ceh call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F462E30h:jmp64]                encoding(5 bytes) = e8 5d 2d 46 5f
00d3h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00d4h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5B1290h:jmp64]                encoding(5 bytes) = e8 b7 11 5b 5f
00d9h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> subBytes => new byte[218]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4D,0x8B,0x10,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x1A,0x8B,0x52,0x08,0xBE,0x8C,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x49,0x33,0xDB,0x85,0xD2,0x7E,0x2E,0x41,0x3B,0xD9,0x0F,0x83,0x93,0x00,0x00,0x00,0x48,0x63,0xEB,0x48,0x8D,0x3C,0x28,0x41,0x0F,0xB6,0x34,0x2B,0x41,0x3B,0xD8,0x0F,0x83,0x7E,0x00,0x00,0x00,0x41,0x0F,0xB6,0x2C,0x2A,0x2B,0xF5,0x40,0x88,0x37,0xFF,0xC3,0x3B,0xDA,0x7C,0xD2,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x55,0x0D,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x71,0xFD,0x47,0x5F,0x4C,0x8B,0xF0,0xB9,0x5D,0x0D,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x5A,0xFD,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x8D,0xA3,0xCA,0xFF,0x48,0x8B,0xC8,0xE8,0x5D,0x2D,0x46,0x5F,0xCC,0xE8,0xB7,0x11,0x5B,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<short> sub(ReadOnlySpan<short> lhs, ReadOnlySpan<short> rhs, Span<short> dst)
; location: [7FFC872B3C20h, 7FFC872B3CF9h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000dh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
0011h mov r10,[r8]                  ; MOV(Mov_r64_rm64) [R10,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 4d 8b 10
0014h mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0018h mov r11,[rdx]                 ; MOV(Mov_r64_rm64) [R11,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 1a
001bh mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
001eh mov esi,94h                   ; MOV(Mov_r32_imm32) [ESI,94h:imm32]                   encoding(5 bytes) = be 94 00 00 00
0023h mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0028h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
002ah mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
002dh cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0030h jne short 007bh               ; JNE(Jne_rel8_64) [7Bh:jmp64]                         encoding(2 bytes) = 75 49
0032h xor ebx,ebx                   ; XOR(Xor_r32_rm32) [EBX,EBX]                          encoding(2 bytes) = 33 db
0034h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0036h jle short 0066h               ; JLE(Jle_rel8_64) [66h:jmp64]                         encoding(2 bytes) = 7e 2e
0038h cmp ebx,r9d                   ; CMP(Cmp_r32_rm32) [EBX,R9D]                          encoding(3 bytes) = 41 3b d9
003bh jae near ptr 00d4h            ; JAE(Jae_rel32_64) [D4h:jmp64]                        encoding(6 bytes) = 0f 83 93 00 00 00
0041h movsxd rbp,ebx                ; MOVSXD(Movsxd_r64_rm32) [RBP,EBX]                    encoding(3 bytes) = 48 63 eb
0044h lea rdi,[rax+rbp*2]           ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 68
0048h movsx rsi,word ptr [r11+rbp*2]; MOVSX(Movsx_r64_rm16) [RSI,mem(16i,R11:br,DS:sr)]    encoding(5 bytes) = 49 0f bf 34 6b
004dh cmp ebx,r8d                   ; CMP(Cmp_r32_rm32) [EBX,R8D]                          encoding(3 bytes) = 41 3b d8
0050h jae near ptr 00d4h            ; JAE(Jae_rel32_64) [D4h:jmp64]                        encoding(6 bytes) = 0f 83 7e 00 00 00
0056h movsx rbp,word ptr [r10+rbp*2]; MOVSX(Movsx_r64_rm16) [RBP,mem(16i,R10:br,DS:sr)]    encoding(5 bytes) = 49 0f bf 2c 6a
005bh sub esi,ebp                   ; SUB(Sub_r32_rm32) [ESI,EBP]                          encoding(2 bytes) = 2b f5
005dh mov [rdi],si                  ; MOV(Mov_rm16_r16) [mem(16u,RDI:br,DS:sr),SI]         encoding(3 bytes) = 66 89 37
0060h inc ebx                       ; INC(Inc_rm32) [EBX]                                  encoding(2 bytes) = ff c3
0062h cmp ebx,edx                   ; CMP(Cmp_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 3b da
0064h jl short 0038h                ; JL(Jl_rel8_64) [38h:jmp64]                           encoding(2 bytes) = 7c d2
0066h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0069h mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
006dh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0070h add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0074h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0075h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0076h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0077h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0078h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
007ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
007bh mov ecx,0D55h                 ; MOV(Mov_r32_imm32) [ECX,d55h:imm32]                  encoding(5 bytes) = b9 55 0d 00 00
0080h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
008ah call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F47FD00h:jmp64]                encoding(5 bytes) = e8 71 fc 47 5f
008fh mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0092h mov ecx,0D5Dh                 ; MOV(Mov_r32_imm32) [ECX,d5dh:imm32]                  encoding(5 bytes) = b9 5d 0d 00 00
0097h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00a1h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F47FD00h:jmp64]                encoding(5 bytes) = e8 5a fc 47 5f
00a6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00a9h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
00aeh mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00b1h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00b5h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00b8h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00bah mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00bch mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00c1h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00c6h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFCAA358h:jmp64]        encoding(5 bytes) = e8 8d a2 ca ff
00cbh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00ceh call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F462D30h:jmp64]                encoding(5 bytes) = e8 5d 2c 46 5f
00d3h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00d4h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5B1190h:jmp64]                encoding(5 bytes) = e8 b7 10 5b 5f
00d9h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> subBytes => new byte[218]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4D,0x8B,0x10,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x1A,0x8B,0x52,0x08,0xBE,0x94,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x49,0x33,0xDB,0x85,0xD2,0x7E,0x2E,0x41,0x3B,0xD9,0x0F,0x83,0x93,0x00,0x00,0x00,0x48,0x63,0xEB,0x48,0x8D,0x3C,0x68,0x49,0x0F,0xBF,0x34,0x6B,0x41,0x3B,0xD8,0x0F,0x83,0x7E,0x00,0x00,0x00,0x49,0x0F,0xBF,0x2C,0x6A,0x2B,0xF5,0x66,0x89,0x37,0xFF,0xC3,0x3B,0xDA,0x7C,0xD2,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x55,0x0D,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x71,0xFC,0x47,0x5F,0x4C,0x8B,0xF0,0xB9,0x5D,0x0D,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x5A,0xFC,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x8D,0xA2,0xCA,0xFF,0x48,0x8B,0xC8,0xE8,0x5D,0x2C,0x46,0x5F,0xCC,0xE8,0xB7,0x10,0x5B,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<ushort> sub(ReadOnlySpan<ushort> lhs, ReadOnlySpan<ushort> rhs, Span<ushort> dst)
; location: [7FFC872B3D20h, 7FFC872B3DF9h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000dh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
0011h mov r10,[r8]                  ; MOV(Mov_r64_rm64) [R10,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 4d 8b 10
0014h mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0018h mov r11,[rdx]                 ; MOV(Mov_r64_rm64) [R11,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 1a
001bh mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
001eh mov esi,9Ch                   ; MOV(Mov_r32_imm32) [ESI,9ch:imm32]                   encoding(5 bytes) = be 9c 00 00 00
0023h mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0028h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
002ah mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
002dh cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0030h jne short 007bh               ; JNE(Jne_rel8_64) [7Bh:jmp64]                         encoding(2 bytes) = 75 49
0032h xor ebx,ebx                   ; XOR(Xor_r32_rm32) [EBX,EBX]                          encoding(2 bytes) = 33 db
0034h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0036h jle short 0066h               ; JLE(Jle_rel8_64) [66h:jmp64]                         encoding(2 bytes) = 7e 2e
0038h cmp ebx,r9d                   ; CMP(Cmp_r32_rm32) [EBX,R9D]                          encoding(3 bytes) = 41 3b d9
003bh jae near ptr 00d4h            ; JAE(Jae_rel32_64) [D4h:jmp64]                        encoding(6 bytes) = 0f 83 93 00 00 00
0041h movsxd rbp,ebx                ; MOVSXD(Movsxd_r64_rm32) [RBP,EBX]                    encoding(3 bytes) = 48 63 eb
0044h lea rdi,[rax+rbp*2]           ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 68
0048h movzx esi,word ptr [r11+rbp*2]; MOVZX(Movzx_r32_rm16) [ESI,mem(16u,R11:br,DS:sr)]    encoding(5 bytes) = 41 0f b7 34 6b
004dh cmp ebx,r8d                   ; CMP(Cmp_r32_rm32) [EBX,R8D]                          encoding(3 bytes) = 41 3b d8
0050h jae near ptr 00d4h            ; JAE(Jae_rel32_64) [D4h:jmp64]                        encoding(6 bytes) = 0f 83 7e 00 00 00
0056h movzx ebp,word ptr [r10+rbp*2]; MOVZX(Movzx_r32_rm16) [EBP,mem(16u,R10:br,DS:sr)]    encoding(5 bytes) = 41 0f b7 2c 6a
005bh sub esi,ebp                   ; SUB(Sub_r32_rm32) [ESI,EBP]                          encoding(2 bytes) = 2b f5
005dh mov [rdi],si                  ; MOV(Mov_rm16_r16) [mem(16u,RDI:br,DS:sr),SI]         encoding(3 bytes) = 66 89 37
0060h inc ebx                       ; INC(Inc_rm32) [EBX]                                  encoding(2 bytes) = ff c3
0062h cmp ebx,edx                   ; CMP(Cmp_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 3b da
0064h jl short 0038h                ; JL(Jl_rel8_64) [38h:jmp64]                           encoding(2 bytes) = 7c d2
0066h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0069h mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
006dh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0070h add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0074h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0075h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0076h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0077h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0078h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
007ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
007bh mov ecx,0D55h                 ; MOV(Mov_r32_imm32) [ECX,d55h:imm32]                  encoding(5 bytes) = b9 55 0d 00 00
0080h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
008ah call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F47FC00h:jmp64]                encoding(5 bytes) = e8 71 fb 47 5f
008fh mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0092h mov ecx,0D5Dh                 ; MOV(Mov_r32_imm32) [ECX,d5dh:imm32]                  encoding(5 bytes) = b9 5d 0d 00 00
0097h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00a1h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F47FC00h:jmp64]                encoding(5 bytes) = e8 5a fb 47 5f
00a6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00a9h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
00aeh mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00b1h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00b5h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00b8h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00bah mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00bch mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00c1h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00c6h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFCAA258h:jmp64]        encoding(5 bytes) = e8 8d a1 ca ff
00cbh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00ceh call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F462C30h:jmp64]                encoding(5 bytes) = e8 5d 2b 46 5f
00d3h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00d4h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5B1090h:jmp64]                encoding(5 bytes) = e8 b7 0f 5b 5f
00d9h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> subBytes => new byte[218]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4D,0x8B,0x10,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x1A,0x8B,0x52,0x08,0xBE,0x9C,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x49,0x33,0xDB,0x85,0xD2,0x7E,0x2E,0x41,0x3B,0xD9,0x0F,0x83,0x93,0x00,0x00,0x00,0x48,0x63,0xEB,0x48,0x8D,0x3C,0x68,0x41,0x0F,0xB7,0x34,0x6B,0x41,0x3B,0xD8,0x0F,0x83,0x7E,0x00,0x00,0x00,0x41,0x0F,0xB7,0x2C,0x6A,0x2B,0xF5,0x66,0x89,0x37,0xFF,0xC3,0x3B,0xDA,0x7C,0xD2,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x55,0x0D,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x71,0xFB,0x47,0x5F,0x4C,0x8B,0xF0,0xB9,0x5D,0x0D,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x5A,0xFB,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x8D,0xA1,0xCA,0xFF,0x48,0x8B,0xC8,0xE8,0x5D,0x2B,0x46,0x5F,0xCC,0xE8,0xB7,0x0F,0x5B,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<int> sub(ReadOnlySpan<int> lhs, ReadOnlySpan<int> rhs, Span<int> dst)
; location: [7FFC872B3E20h, 7FFC872B3EF6h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000dh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
0011h mov r10,[r8]                  ; MOV(Mov_r64_rm64) [R10,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 4d 8b 10
0014h mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0018h mov r11,[rdx]                 ; MOV(Mov_r64_rm64) [R11,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 1a
001bh mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
001eh mov esi,0A4h                  ; MOV(Mov_r32_imm32) [ESI,a4h:imm32]                   encoding(5 bytes) = be a4 00 00 00
0023h mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0028h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
002ah mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
002dh cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0030h jne short 0078h               ; JNE(Jne_rel8_64) [78h:jmp64]                         encoding(2 bytes) = 75 46
0032h xor ebx,ebx                   ; XOR(Xor_r32_rm32) [EBX,EBX]                          encoding(2 bytes) = 33 db
0034h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0036h jle short 0063h               ; JLE(Jle_rel8_64) [63h:jmp64]                         encoding(2 bytes) = 7e 2b
0038h cmp ebx,r9d                   ; CMP(Cmp_r32_rm32) [EBX,R9D]                          encoding(3 bytes) = 41 3b d9
003bh jae near ptr 00d1h            ; JAE(Jae_rel32_64) [D1h:jmp64]                        encoding(6 bytes) = 0f 83 90 00 00 00
0041h movsxd rbp,ebx                ; MOVSXD(Movsxd_r64_rm32) [RBP,EBX]                    encoding(3 bytes) = 48 63 eb
0044h lea rdi,[rax+rbp*4]           ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c a8
0048h mov esi,[r11+rbp*4]           ; MOV(Mov_r32_rm32) [ESI,mem(32u,R11:br,DS:sr)]        encoding(4 bytes) = 41 8b 34 ab
004ch cmp ebx,r8d                   ; CMP(Cmp_r32_rm32) [EBX,R8D]                          encoding(3 bytes) = 41 3b d8
004fh jae near ptr 00d1h            ; JAE(Jae_rel32_64) [D1h:jmp64]                        encoding(6 bytes) = 0f 83 7c 00 00 00
0055h mov ebp,[r10+rbp*4]           ; MOV(Mov_r32_rm32) [EBP,mem(32u,R10:br,DS:sr)]        encoding(4 bytes) = 41 8b 2c aa
0059h sub esi,ebp                   ; SUB(Sub_r32_rm32) [ESI,EBP]                          encoding(2 bytes) = 2b f5
005bh mov [rdi],esi                 ; MOV(Mov_rm32_r32) [mem(32u,RDI:br,DS:sr),ESI]        encoding(2 bytes) = 89 37
005dh inc ebx                       ; INC(Inc_rm32) [EBX]                                  encoding(2 bytes) = ff c3
005fh cmp ebx,edx                   ; CMP(Cmp_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 3b da
0061h jl short 0038h                ; JL(Jl_rel8_64) [38h:jmp64]                           encoding(2 bytes) = 7c d5
0063h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0066h mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
006ah mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
006dh add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0071h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0072h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0073h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0074h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0075h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0077h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0078h mov ecx,0D55h                 ; MOV(Mov_r32_imm32) [ECX,d55h:imm32]                  encoding(5 bytes) = b9 55 0d 00 00
007dh mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0087h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F47FB00h:jmp64]                encoding(5 bytes) = e8 74 fa 47 5f
008ch mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
008fh mov ecx,0D5Dh                 ; MOV(Mov_r32_imm32) [ECX,d5dh:imm32]                  encoding(5 bytes) = b9 5d 0d 00 00
0094h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
009eh call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F47FB00h:jmp64]                encoding(5 bytes) = e8 5d fa 47 5f
00a3h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00a6h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
00abh mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00aeh mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00b2h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00b5h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00b7h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00b9h mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00beh mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00c3h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFCAA158h:jmp64]        encoding(5 bytes) = e8 90 a0 ca ff
00c8h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00cbh call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F462B30h:jmp64]                encoding(5 bytes) = e8 60 2a 46 5f
00d0h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00d1h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5B0F90h:jmp64]                encoding(5 bytes) = e8 ba 0e 5b 5f
00d6h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> subBytes => new byte[215]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4D,0x8B,0x10,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x1A,0x8B,0x52,0x08,0xBE,0xA4,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x46,0x33,0xDB,0x85,0xD2,0x7E,0x2B,0x41,0x3B,0xD9,0x0F,0x83,0x90,0x00,0x00,0x00,0x48,0x63,0xEB,0x48,0x8D,0x3C,0xA8,0x41,0x8B,0x34,0xAB,0x41,0x3B,0xD8,0x0F,0x83,0x7C,0x00,0x00,0x00,0x41,0x8B,0x2C,0xAA,0x2B,0xF5,0x89,0x37,0xFF,0xC3,0x3B,0xDA,0x7C,0xD5,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x55,0x0D,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x74,0xFA,0x47,0x5F,0x4C,0x8B,0xF0,0xB9,0x5D,0x0D,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x5D,0xFA,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x90,0xA0,0xCA,0xFF,0x48,0x8B,0xC8,0xE8,0x60,0x2A,0x46,0x5F,0xCC,0xE8,0xBA,0x0E,0x5B,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<uint> sub(ReadOnlySpan<uint> lhs, ReadOnlySpan<uint> rhs, Span<uint> dst)
; location: [7FFC872B4320h, 7FFC872B43F6h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000dh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
0011h mov r10,[r8]                  ; MOV(Mov_r64_rm64) [R10,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 4d 8b 10
0014h mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0018h mov r11,[rdx]                 ; MOV(Mov_r64_rm64) [R11,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 1a
001bh mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
001eh mov esi,0ACh                  ; MOV(Mov_r32_imm32) [ESI,ach:imm32]                   encoding(5 bytes) = be ac 00 00 00
0023h mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0028h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
002ah mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
002dh cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0030h jne short 0078h               ; JNE(Jne_rel8_64) [78h:jmp64]                         encoding(2 bytes) = 75 46
0032h xor ebx,ebx                   ; XOR(Xor_r32_rm32) [EBX,EBX]                          encoding(2 bytes) = 33 db
0034h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0036h jle short 0063h               ; JLE(Jle_rel8_64) [63h:jmp64]                         encoding(2 bytes) = 7e 2b
0038h cmp ebx,r9d                   ; CMP(Cmp_r32_rm32) [EBX,R9D]                          encoding(3 bytes) = 41 3b d9
003bh jae near ptr 00d1h            ; JAE(Jae_rel32_64) [D1h:jmp64]                        encoding(6 bytes) = 0f 83 90 00 00 00
0041h movsxd rbp,ebx                ; MOVSXD(Movsxd_r64_rm32) [RBP,EBX]                    encoding(3 bytes) = 48 63 eb
0044h lea rdi,[rax+rbp*4]           ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c a8
0048h mov esi,[r11+rbp*4]           ; MOV(Mov_r32_rm32) [ESI,mem(32u,R11:br,DS:sr)]        encoding(4 bytes) = 41 8b 34 ab
004ch cmp ebx,r8d                   ; CMP(Cmp_r32_rm32) [EBX,R8D]                          encoding(3 bytes) = 41 3b d8
004fh jae near ptr 00d1h            ; JAE(Jae_rel32_64) [D1h:jmp64]                        encoding(6 bytes) = 0f 83 7c 00 00 00
0055h mov ebp,[r10+rbp*4]           ; MOV(Mov_r32_rm32) [EBP,mem(32u,R10:br,DS:sr)]        encoding(4 bytes) = 41 8b 2c aa
0059h sub esi,ebp                   ; SUB(Sub_r32_rm32) [ESI,EBP]                          encoding(2 bytes) = 2b f5
005bh mov [rdi],esi                 ; MOV(Mov_rm32_r32) [mem(32u,RDI:br,DS:sr),ESI]        encoding(2 bytes) = 89 37
005dh inc ebx                       ; INC(Inc_rm32) [EBX]                                  encoding(2 bytes) = ff c3
005fh cmp ebx,edx                   ; CMP(Cmp_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 3b da
0061h jl short 0038h                ; JL(Jl_rel8_64) [38h:jmp64]                           encoding(2 bytes) = 7c d5
0063h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0066h mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
006ah mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
006dh add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0071h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0072h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0073h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0074h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0075h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0077h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0078h mov ecx,0D55h                 ; MOV(Mov_r32_imm32) [ECX,d55h:imm32]                  encoding(5 bytes) = b9 55 0d 00 00
007dh mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0087h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F47F600h:jmp64]                encoding(5 bytes) = e8 74 f5 47 5f
008ch mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
008fh mov ecx,0D5Dh                 ; MOV(Mov_r32_imm32) [ECX,d5dh:imm32]                  encoding(5 bytes) = b9 5d 0d 00 00
0094h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
009eh call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F47F600h:jmp64]                encoding(5 bytes) = e8 5d f5 47 5f
00a3h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00a6h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
00abh mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00aeh mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00b2h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00b5h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00b7h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00b9h mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00beh mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00c3h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFCA9C58h:jmp64]        encoding(5 bytes) = e8 90 9b ca ff
00c8h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00cbh call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F462630h:jmp64]                encoding(5 bytes) = e8 60 25 46 5f
00d0h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00d1h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5B0A90h:jmp64]                encoding(5 bytes) = e8 ba 09 5b 5f
00d6h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> subBytes => new byte[215]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4D,0x8B,0x10,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x1A,0x8B,0x52,0x08,0xBE,0xAC,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x46,0x33,0xDB,0x85,0xD2,0x7E,0x2B,0x41,0x3B,0xD9,0x0F,0x83,0x90,0x00,0x00,0x00,0x48,0x63,0xEB,0x48,0x8D,0x3C,0xA8,0x41,0x8B,0x34,0xAB,0x41,0x3B,0xD8,0x0F,0x83,0x7C,0x00,0x00,0x00,0x41,0x8B,0x2C,0xAA,0x2B,0xF5,0x89,0x37,0xFF,0xC3,0x3B,0xDA,0x7C,0xD5,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x55,0x0D,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x74,0xF5,0x47,0x5F,0x4C,0x8B,0xF0,0xB9,0x5D,0x0D,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x5D,0xF5,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x90,0x9B,0xCA,0xFF,0x48,0x8B,0xC8,0xE8,0x60,0x25,0x46,0x5F,0xCC,0xE8,0xBA,0x09,0x5B,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<long> sub(ReadOnlySpan<long> lhs, ReadOnlySpan<long> rhs, Span<long> dst)
; location: [7FFC872B4420h, 7FFC872B44F8h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000dh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
0011h mov r10,[r8]                  ; MOV(Mov_r64_rm64) [R10,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 4d 8b 10
0014h mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0018h mov r11,[rdx]                 ; MOV(Mov_r64_rm64) [R11,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 1a
001bh mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
001eh mov esi,0B4h                  ; MOV(Mov_r32_imm32) [ESI,b4h:imm32]                   encoding(5 bytes) = be b4 00 00 00
0023h mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0028h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
002ah mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
002dh cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0030h jne short 007ah               ; JNE(Jne_rel8_64) [7Ah:jmp64]                         encoding(2 bytes) = 75 48
0032h xor ebx,ebx                   ; XOR(Xor_r32_rm32) [EBX,EBX]                          encoding(2 bytes) = 33 db
0034h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0036h jle short 0065h               ; JLE(Jle_rel8_64) [65h:jmp64]                         encoding(2 bytes) = 7e 2d
0038h cmp ebx,r9d                   ; CMP(Cmp_r32_rm32) [EBX,R9D]                          encoding(3 bytes) = 41 3b d9
003bh jae near ptr 00d3h            ; JAE(Jae_rel32_64) [D3h:jmp64]                        encoding(6 bytes) = 0f 83 92 00 00 00
0041h movsxd rbp,ebx                ; MOVSXD(Movsxd_r64_rm32) [RBP,EBX]                    encoding(3 bytes) = 48 63 eb
0044h lea rdi,[rax+rbp*8]           ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c e8
0048h mov rsi,[r11+rbp*8]           ; MOV(Mov_r64_rm64) [RSI,mem(64u,R11:br,DS:sr)]        encoding(4 bytes) = 49 8b 34 eb
004ch cmp ebx,r8d                   ; CMP(Cmp_r32_rm32) [EBX,R8D]                          encoding(3 bytes) = 41 3b d8
004fh jae near ptr 00d3h            ; JAE(Jae_rel32_64) [D3h:jmp64]                        encoding(6 bytes) = 0f 83 7e 00 00 00
0055h mov rbp,[r10+rbp*8]           ; MOV(Mov_r64_rm64) [RBP,mem(64u,R10:br,DS:sr)]        encoding(4 bytes) = 49 8b 2c ea
0059h sub rsi,rbp                   ; SUB(Sub_r64_rm64) [RSI,RBP]                          encoding(3 bytes) = 48 2b f5
005ch mov [rdi],rsi                 ; MOV(Mov_rm64_r64) [mem(64u,RDI:br,DS:sr),RSI]        encoding(3 bytes) = 48 89 37
005fh inc ebx                       ; INC(Inc_rm32) [EBX]                                  encoding(2 bytes) = ff c3
0061h cmp ebx,edx                   ; CMP(Cmp_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 3b da
0063h jl short 0038h                ; JL(Jl_rel8_64) [38h:jmp64]                           encoding(2 bytes) = 7c d3
0065h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0068h mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
006ch mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
006fh add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0073h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0074h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0075h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0076h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0077h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0079h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
007ah mov ecx,0D55h                 ; MOV(Mov_r32_imm32) [ECX,d55h:imm32]                  encoding(5 bytes) = b9 55 0d 00 00
007fh mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0089h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F47F500h:jmp64]                encoding(5 bytes) = e8 72 f4 47 5f
008eh mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0091h mov ecx,0D5Dh                 ; MOV(Mov_r32_imm32) [ECX,d5dh:imm32]                  encoding(5 bytes) = b9 5d 0d 00 00
0096h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00a0h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F47F500h:jmp64]                encoding(5 bytes) = e8 5b f4 47 5f
00a5h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00a8h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
00adh mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00b0h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00b4h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00b7h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00b9h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00bbh mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00c0h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00c5h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFCA9B58h:jmp64]        encoding(5 bytes) = e8 8e 9a ca ff
00cah mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00cdh call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F462530h:jmp64]                encoding(5 bytes) = e8 5e 24 46 5f
00d2h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00d3h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5B0990h:jmp64]                encoding(5 bytes) = e8 b8 08 5b 5f
00d8h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> subBytes => new byte[217]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4D,0x8B,0x10,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x1A,0x8B,0x52,0x08,0xBE,0xB4,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x48,0x33,0xDB,0x85,0xD2,0x7E,0x2D,0x41,0x3B,0xD9,0x0F,0x83,0x92,0x00,0x00,0x00,0x48,0x63,0xEB,0x48,0x8D,0x3C,0xE8,0x49,0x8B,0x34,0xEB,0x41,0x3B,0xD8,0x0F,0x83,0x7E,0x00,0x00,0x00,0x49,0x8B,0x2C,0xEA,0x48,0x2B,0xF5,0x48,0x89,0x37,0xFF,0xC3,0x3B,0xDA,0x7C,0xD3,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x55,0x0D,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x72,0xF4,0x47,0x5F,0x4C,0x8B,0xF0,0xB9,0x5D,0x0D,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x5B,0xF4,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x8E,0x9A,0xCA,0xFF,0x48,0x8B,0xC8,0xE8,0x5E,0x24,0x46,0x5F,0xCC,0xE8,0xB8,0x08,0x5B,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<ulong> sub(ReadOnlySpan<ulong> lhs, ReadOnlySpan<ulong> rhs, Span<ulong> dst)
; location: [7FFC872B4920h, 7FFC872B49F8h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000dh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
0011h mov r10,[r8]                  ; MOV(Mov_r64_rm64) [R10,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 4d 8b 10
0014h mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0018h mov r11,[rdx]                 ; MOV(Mov_r64_rm64) [R11,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 1a
001bh mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
001eh mov esi,0BCh                  ; MOV(Mov_r32_imm32) [ESI,bch:imm32]                   encoding(5 bytes) = be bc 00 00 00
0023h mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0028h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
002ah mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
002dh cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0030h jne short 007ah               ; JNE(Jne_rel8_64) [7Ah:jmp64]                         encoding(2 bytes) = 75 48
0032h xor ebx,ebx                   ; XOR(Xor_r32_rm32) [EBX,EBX]                          encoding(2 bytes) = 33 db
0034h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0036h jle short 0065h               ; JLE(Jle_rel8_64) [65h:jmp64]                         encoding(2 bytes) = 7e 2d
0038h cmp ebx,r9d                   ; CMP(Cmp_r32_rm32) [EBX,R9D]                          encoding(3 bytes) = 41 3b d9
003bh jae near ptr 00d3h            ; JAE(Jae_rel32_64) [D3h:jmp64]                        encoding(6 bytes) = 0f 83 92 00 00 00
0041h movsxd rbp,ebx                ; MOVSXD(Movsxd_r64_rm32) [RBP,EBX]                    encoding(3 bytes) = 48 63 eb
0044h lea rdi,[rax+rbp*8]           ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c e8
0048h mov rsi,[r11+rbp*8]           ; MOV(Mov_r64_rm64) [RSI,mem(64u,R11:br,DS:sr)]        encoding(4 bytes) = 49 8b 34 eb
004ch cmp ebx,r8d                   ; CMP(Cmp_r32_rm32) [EBX,R8D]                          encoding(3 bytes) = 41 3b d8
004fh jae near ptr 00d3h            ; JAE(Jae_rel32_64) [D3h:jmp64]                        encoding(6 bytes) = 0f 83 7e 00 00 00
0055h mov rbp,[r10+rbp*8]           ; MOV(Mov_r64_rm64) [RBP,mem(64u,R10:br,DS:sr)]        encoding(4 bytes) = 49 8b 2c ea
0059h sub rsi,rbp                   ; SUB(Sub_r64_rm64) [RSI,RBP]                          encoding(3 bytes) = 48 2b f5
005ch mov [rdi],rsi                 ; MOV(Mov_rm64_r64) [mem(64u,RDI:br,DS:sr),RSI]        encoding(3 bytes) = 48 89 37
005fh inc ebx                       ; INC(Inc_rm32) [EBX]                                  encoding(2 bytes) = ff c3
0061h cmp ebx,edx                   ; CMP(Cmp_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 3b da
0063h jl short 0038h                ; JL(Jl_rel8_64) [38h:jmp64]                           encoding(2 bytes) = 7c d3
0065h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0068h mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
006ch mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
006fh add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0073h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0074h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0075h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0076h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0077h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0079h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
007ah mov ecx,0D55h                 ; MOV(Mov_r32_imm32) [ECX,d55h:imm32]                  encoding(5 bytes) = b9 55 0d 00 00
007fh mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0089h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F47F000h:jmp64]                encoding(5 bytes) = e8 72 ef 47 5f
008eh mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0091h mov ecx,0D5Dh                 ; MOV(Mov_r32_imm32) [ECX,d5dh:imm32]                  encoding(5 bytes) = b9 5d 0d 00 00
0096h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00a0h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F47F000h:jmp64]                encoding(5 bytes) = e8 5b ef 47 5f
00a5h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00a8h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
00adh mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00b0h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00b4h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00b7h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00b9h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00bbh mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00c0h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00c5h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFCA9658h:jmp64]        encoding(5 bytes) = e8 8e 95 ca ff
00cah mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00cdh call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F462030h:jmp64]                encoding(5 bytes) = e8 5e 1f 46 5f
00d2h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00d3h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5B0490h:jmp64]                encoding(5 bytes) = e8 b8 03 5b 5f
00d8h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> subBytes => new byte[217]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4D,0x8B,0x10,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x1A,0x8B,0x52,0x08,0xBE,0xBC,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x48,0x33,0xDB,0x85,0xD2,0x7E,0x2D,0x41,0x3B,0xD9,0x0F,0x83,0x92,0x00,0x00,0x00,0x48,0x63,0xEB,0x48,0x8D,0x3C,0xE8,0x49,0x8B,0x34,0xEB,0x41,0x3B,0xD8,0x0F,0x83,0x7E,0x00,0x00,0x00,0x49,0x8B,0x2C,0xEA,0x48,0x2B,0xF5,0x48,0x89,0x37,0xFF,0xC3,0x3B,0xDA,0x7C,0xD3,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x55,0x0D,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x72,0xEF,0x47,0x5F,0x4C,0x8B,0xF0,0xB9,0x5D,0x0D,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x5B,0xEF,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x8E,0x95,0xCA,0xFF,0x48,0x8B,0xC8,0xE8,0x5E,0x1F,0x46,0x5F,0xCC,0xE8,0xB8,0x03,0x5B,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<float> sub(ReadOnlySpan<float> lhs, ReadOnlySpan<float> rhs, Span<float> dst)
; location: [7FFC872B4A20h, 7FFC872B4B01h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
000dh mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
0010h mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
0014h mov r10,[r8]                  ; MOV(Mov_r64_rm64) [R10,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 4d 8b 10
0017h mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
001bh mov r11,[rdx]                 ; MOV(Mov_r64_rm64) [R11,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 1a
001eh mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0021h mov esi,0C4h                  ; MOV(Mov_r32_imm32) [ESI,c4h:imm32]                   encoding(5 bytes) = be c4 00 00 00
0026h mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
002bh mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
002dh mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0030h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0033h jne short 0083h               ; JNE(Jne_rel8_64) [83h:jmp64]                         encoding(2 bytes) = 75 4e
0035h xor ebx,ebx                   ; XOR(Xor_r32_rm32) [EBX,EBX]                          encoding(2 bytes) = 33 db
0037h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0039h jle short 006eh               ; JLE(Jle_rel8_64) [6Eh:jmp64]                         encoding(2 bytes) = 7e 33
003bh cmp ebx,r9d                   ; CMP(Cmp_r32_rm32) [EBX,R9D]                          encoding(3 bytes) = 41 3b d9
003eh jae near ptr 00dch            ; JAE(Jae_rel32_64) [DCh:jmp64]                        encoding(6 bytes) = 0f 83 98 00 00 00
0044h movsxd rbp,ebx                ; MOVSXD(Movsxd_r64_rm32) [RBP,EBX]                    encoding(3 bytes) = 48 63 eb
0047h lea rdi,[rax+rbp*4]           ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c a8
004bh vmovss xmm0,dword ptr [r11+rbp*4]; VMOVSS(VEX_Vmovss_xmm_m32) [XMM0,mem(Float32,R11:br,DS:sr)] encoding(VEX, 6 bytes) = c4 c1 7a 10 04 ab
0051h cmp ebx,r8d                   ; CMP(Cmp_r32_rm32) [EBX,R8D]                          encoding(3 bytes) = 41 3b d8
0054h jae near ptr 00dch            ; JAE(Jae_rel32_64) [DCh:jmp64]                        encoding(6 bytes) = 0f 83 82 00 00 00
005ah vmovss xmm1,dword ptr [r10+rbp*4]; VMOVSS(VEX_Vmovss_xmm_m32) [XMM1,mem(Float32,R10:br,DS:sr)] encoding(VEX, 6 bytes) = c4 c1 7a 10 0c aa
0060h vsubss xmm0,xmm0,xmm1         ; VSUBSS(VEX_Vsubss_xmm_xmm_xmmm32) [XMM0,XMM0,XMM1]   encoding(VEX, 4 bytes) = c5 fa 5c c1
0064h vmovss dword ptr [rdi],xmm0   ; VMOVSS(VEX_Vmovss_m32_xmm) [mem(Float32,RDI:br,DS:sr),XMM0] encoding(VEX, 4 bytes) = c5 fa 11 07
0068h inc ebx                       ; INC(Inc_rm32) [EBX]                                  encoding(2 bytes) = ff c3
006ah cmp ebx,edx                   ; CMP(Cmp_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 3b da
006ch jl short 003bh                ; JL(Jl_rel8_64) [3Bh:jmp64]                           encoding(2 bytes) = 7c cd
006eh mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0071h mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0075h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0078h add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
007ch pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
007dh pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
007eh pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
007fh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0080h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0082h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0083h mov ecx,0D55h                 ; MOV(Mov_r32_imm32) [ECX,d55h:imm32]                  encoding(5 bytes) = b9 55 0d 00 00
0088h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0092h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F47EF00h:jmp64]                encoding(5 bytes) = e8 69 ee 47 5f
0097h mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
009ah mov ecx,0D5Dh                 ; MOV(Mov_r32_imm32) [ECX,d5dh:imm32]                  encoding(5 bytes) = b9 5d 0d 00 00
009fh mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00a9h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F47EF00h:jmp64]                encoding(5 bytes) = e8 52 ee 47 5f
00aeh mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00b1h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
00b6h mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00b9h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00bdh mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00c0h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00c2h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00c4h mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00c9h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00ceh call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFCA9558h:jmp64]        encoding(5 bytes) = e8 85 94 ca ff
00d3h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00d6h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F461F30h:jmp64]                encoding(5 bytes) = e8 55 1e 46 5f
00dbh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00dch call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5B0390h:jmp64]                encoding(5 bytes) = e8 af 02 5b 5f
00e1h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> subBytes => new byte[226]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0xC5,0xF8,0x77,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4D,0x8B,0x10,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x1A,0x8B,0x52,0x08,0xBE,0xC4,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x4E,0x33,0xDB,0x85,0xD2,0x7E,0x33,0x41,0x3B,0xD9,0x0F,0x83,0x98,0x00,0x00,0x00,0x48,0x63,0xEB,0x48,0x8D,0x3C,0xA8,0xC4,0xC1,0x7A,0x10,0x04,0xAB,0x41,0x3B,0xD8,0x0F,0x83,0x82,0x00,0x00,0x00,0xC4,0xC1,0x7A,0x10,0x0C,0xAA,0xC5,0xFA,0x5C,0xC1,0xC5,0xFA,0x11,0x07,0xFF,0xC3,0x3B,0xDA,0x7C,0xCD,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x55,0x0D,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x69,0xEE,0x47,0x5F,0x4C,0x8B,0xF0,0xB9,0x5D,0x0D,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x52,0xEE,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x85,0x94,0xCA,0xFF,0x48,0x8B,0xC8,0xE8,0x55,0x1E,0x46,0x5F,0xCC,0xE8,0xAF,0x02,0x5B,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<double> sub(ReadOnlySpan<double> lhs, ReadOnlySpan<double> rhs, Span<double> dst)
; location: [7FFC872B4F30h, 7FFC872B5011h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
000dh mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
0010h mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
0014h mov r10,[r8]                  ; MOV(Mov_r64_rm64) [R10,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 4d 8b 10
0017h mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
001bh mov r11,[rdx]                 ; MOV(Mov_r64_rm64) [R11,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 1a
001eh mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0021h mov esi,0CCh                  ; MOV(Mov_r32_imm32) [ESI,cch:imm32]                   encoding(5 bytes) = be cc 00 00 00
0026h mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
002bh mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
002dh mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0030h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0033h jne short 0083h               ; JNE(Jne_rel8_64) [83h:jmp64]                         encoding(2 bytes) = 75 4e
0035h xor ebx,ebx                   ; XOR(Xor_r32_rm32) [EBX,EBX]                          encoding(2 bytes) = 33 db
0037h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0039h jle short 006eh               ; JLE(Jle_rel8_64) [6Eh:jmp64]                         encoding(2 bytes) = 7e 33
003bh cmp ebx,r9d                   ; CMP(Cmp_r32_rm32) [EBX,R9D]                          encoding(3 bytes) = 41 3b d9
003eh jae near ptr 00dch            ; JAE(Jae_rel32_64) [DCh:jmp64]                        encoding(6 bytes) = 0f 83 98 00 00 00
0044h movsxd rbp,ebx                ; MOVSXD(Movsxd_r64_rm32) [RBP,EBX]                    encoding(3 bytes) = 48 63 eb
0047h lea rdi,[rax+rbp*8]           ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c e8
004bh vmovsd xmm0,qword ptr [r11+rbp*8]; VMOVSD(VEX_Vmovsd_xmm_m64) [XMM0,mem(Float64,R11:br,DS:sr)] encoding(VEX, 6 bytes) = c4 c1 7b 10 04 eb
0051h cmp ebx,r8d                   ; CMP(Cmp_r32_rm32) [EBX,R8D]                          encoding(3 bytes) = 41 3b d8
0054h jae near ptr 00dch            ; JAE(Jae_rel32_64) [DCh:jmp64]                        encoding(6 bytes) = 0f 83 82 00 00 00
005ah vmovsd xmm1,qword ptr [r10+rbp*8]; VMOVSD(VEX_Vmovsd_xmm_m64) [XMM1,mem(Float64,R10:br,DS:sr)] encoding(VEX, 6 bytes) = c4 c1 7b 10 0c ea
0060h vsubsd xmm0,xmm0,xmm1         ; VSUBSD(VEX_Vsubsd_xmm_xmm_xmmm64) [XMM0,XMM0,XMM1]   encoding(VEX, 4 bytes) = c5 fb 5c c1
0064h vmovsd qword ptr [rdi],xmm0   ; VMOVSD(VEX_Vmovsd_m64_xmm) [mem(Float64,RDI:br,DS:sr),XMM0] encoding(VEX, 4 bytes) = c5 fb 11 07
0068h inc ebx                       ; INC(Inc_rm32) [EBX]                                  encoding(2 bytes) = ff c3
006ah cmp ebx,edx                   ; CMP(Cmp_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 3b da
006ch jl short 003bh                ; JL(Jl_rel8_64) [3Bh:jmp64]                           encoding(2 bytes) = 7c cd
006eh mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0071h mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0075h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0078h add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
007ch pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
007dh pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
007eh pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
007fh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0080h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0082h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0083h mov ecx,0D55h                 ; MOV(Mov_r32_imm32) [ECX,d55h:imm32]                  encoding(5 bytes) = b9 55 0d 00 00
0088h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0092h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F47E9F0h:jmp64]                encoding(5 bytes) = e8 59 e9 47 5f
0097h mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
009ah mov ecx,0D5Dh                 ; MOV(Mov_r32_imm32) [ECX,d5dh:imm32]                  encoding(5 bytes) = b9 5d 0d 00 00
009fh mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00a9h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F47E9F0h:jmp64]                encoding(5 bytes) = e8 42 e9 47 5f
00aeh mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00b1h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
00b6h mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00b9h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00bdh mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00c0h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00c2h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00c4h mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00c9h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00ceh call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFCA9048h:jmp64]        encoding(5 bytes) = e8 75 8f ca ff
00d3h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00d6h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F461A20h:jmp64]                encoding(5 bytes) = e8 45 19 46 5f
00dbh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00dch call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5AFE80h:jmp64]                encoding(5 bytes) = e8 9f fd 5a 5f
00e1h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> subBytes => new byte[226]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0xC5,0xF8,0x77,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4D,0x8B,0x10,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x1A,0x8B,0x52,0x08,0xBE,0xCC,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x4E,0x33,0xDB,0x85,0xD2,0x7E,0x33,0x41,0x3B,0xD9,0x0F,0x83,0x98,0x00,0x00,0x00,0x48,0x63,0xEB,0x48,0x8D,0x3C,0xE8,0xC4,0xC1,0x7B,0x10,0x04,0xEB,0x41,0x3B,0xD8,0x0F,0x83,0x82,0x00,0x00,0x00,0xC4,0xC1,0x7B,0x10,0x0C,0xEA,0xC5,0xFB,0x5C,0xC1,0xC5,0xFB,0x11,0x07,0xFF,0xC3,0x3B,0xDA,0x7C,0xCD,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x55,0x0D,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x59,0xE9,0x47,0x5F,0x4C,0x8B,0xF0,0xB9,0x5D,0x0D,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x42,0xE9,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x75,0x8F,0xCA,0xFF,0x48,0x8B,0xC8,0xE8,0x45,0x19,0x46,0x5F,0xCC,0xE8,0x9F,0xFD,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<sbyte> sub(Span<sbyte> lhs, ReadOnlySpan<sbyte> rhs)
; location: [7FFC872B5030h, 7FFC872B50F4h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0014h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0017h mov esi,0D4h                  ; MOV(Mov_r32_imm32) [ESI,d4h:imm32]                   encoding(5 bytes) = be d4 00 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
0023h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0026h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0029h jne short 0066h               ; JNE(Jne_rel8_64) [66h:jmp64]                         encoding(2 bytes) = 75 3b
002bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
002eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0030h jle short 0052h               ; JLE(Jle_rel8_64) [52h:jmp64]                         encoding(2 bytes) = 7e 20
0032h movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
0035h lea rbx,[r9+r11]              ; LEA(Lea_r64_m) [RBX,mem(Unknown,R9:br,DS:sr)]        encoding(4 bytes) = 4b 8d 1c 19
0039h cmp r10d,r8d                  ; CMP(Cmp_r32_rm32) [R10D,R8D]                         encoding(3 bytes) = 45 3b d0
003ch jae near ptr 00bfh            ; JAE(Jae_rel32_64) [BFh:jmp64]                        encoding(6 bytes) = 0f 83 7d 00 00 00
0042h movsx r11,byte ptr [rax+r11]  ; MOVSX(Movsx_r64_rm8) [R11,mem(8i,RAX:br,DS:sr)]      encoding(5 bytes) = 4e 0f be 1c 18
0047h sub [rbx],r11b                ; SUB(Sub_rm8_r8) [mem(8u,RBX:br,DS:sr),R11L]          encoding(3 bytes) = 44 28 1b
004ah inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
004dh cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
0050h jl short 0032h                ; JL(Jl_rel8_64) [32h:jmp64]                           encoding(2 bytes) = 7c e0
0052h mov [rcx],r9                  ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R9]         encoding(3 bytes) = 4c 89 09
0055h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
0058h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
005bh add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
005fh pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0060h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0061h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0062h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0063h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0065h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0066h mov ecx,0D55h                 ; MOV(Mov_r32_imm32) [ECX,d55h:imm32]                  encoding(5 bytes) = b9 55 0d 00 00
006bh mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0075h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F47E8F0h:jmp64]                encoding(5 bytes) = e8 76 e8 47 5f
007ah mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
007dh mov ecx,0D5Dh                 ; MOV(Mov_r32_imm32) [ECX,d5dh:imm32]                  encoding(5 bytes) = b9 5d 0d 00 00
0082h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
008ch call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F47E8F0h:jmp64]                encoding(5 bytes) = e8 5f e8 47 5f
0091h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
0094h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
0099h mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
009ch mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00a0h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00a3h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00a5h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00a7h mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00ach mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b1h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFCA8F48h:jmp64]        encoding(5 bytes) = e8 92 8e ca ff
00b6h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00b9h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F461920h:jmp64]                encoding(5 bytes) = e8 62 18 46 5f
00beh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00bfh call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5AFD80h:jmp64]                encoding(5 bytes) = e8 bc fc 5a 5f
00c4h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> subBytes => new byte[197]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x00,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0xBE,0xD4,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x3B,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x20,0x4D,0x63,0xDA,0x4B,0x8D,0x1C,0x19,0x45,0x3B,0xD0,0x0F,0x83,0x7D,0x00,0x00,0x00,0x4E,0x0F,0xBE,0x1C,0x18,0x44,0x28,0x1B,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xE0,0x4C,0x89,0x09,0x89,0x51,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x55,0x0D,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x76,0xE8,0x47,0x5F,0x4C,0x8B,0xF0,0xB9,0x5D,0x0D,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x5F,0xE8,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x92,0x8E,0xCA,0xFF,0x48,0x8B,0xC8,0xE8,0x62,0x18,0x46,0x5F,0xCC,0xE8,0xBC,0xFC,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<byte> sub(Span<byte> lhs, ReadOnlySpan<byte> rhs)
; location: [7FFC872B5120h, 7FFC872B51E4h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0014h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0017h mov esi,0DCh                  ; MOV(Mov_r32_imm32) [ESI,dch:imm32]                   encoding(5 bytes) = be dc 00 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
0023h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0026h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0029h jne short 0066h               ; JNE(Jne_rel8_64) [66h:jmp64]                         encoding(2 bytes) = 75 3b
002bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
002eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0030h jle short 0052h               ; JLE(Jle_rel8_64) [52h:jmp64]                         encoding(2 bytes) = 7e 20
0032h movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
0035h lea rbx,[r9+r11]              ; LEA(Lea_r64_m) [RBX,mem(Unknown,R9:br,DS:sr)]        encoding(4 bytes) = 4b 8d 1c 19
0039h cmp r10d,r8d                  ; CMP(Cmp_r32_rm32) [R10D,R8D]                         encoding(3 bytes) = 45 3b d0
003ch jae near ptr 00bfh            ; JAE(Jae_rel32_64) [BFh:jmp64]                        encoding(6 bytes) = 0f 83 7d 00 00 00
0042h movzx r11d,byte ptr [rax+r11] ; MOVZX(Movzx_r32_rm8) [R11D,mem(8u,RAX:br,DS:sr)]     encoding(5 bytes) = 46 0f b6 1c 18
0047h sub [rbx],r11b                ; SUB(Sub_rm8_r8) [mem(8u,RBX:br,DS:sr),R11L]          encoding(3 bytes) = 44 28 1b
004ah inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
004dh cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
0050h jl short 0032h                ; JL(Jl_rel8_64) [32h:jmp64]                           encoding(2 bytes) = 7c e0
0052h mov [rcx],r9                  ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R9]         encoding(3 bytes) = 4c 89 09
0055h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
0058h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
005bh add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
005fh pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0060h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0061h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0062h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0063h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0065h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0066h mov ecx,0D55h                 ; MOV(Mov_r32_imm32) [ECX,d55h:imm32]                  encoding(5 bytes) = b9 55 0d 00 00
006bh mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0075h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F47E800h:jmp64]                encoding(5 bytes) = e8 86 e7 47 5f
007ah mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
007dh mov ecx,0D5Dh                 ; MOV(Mov_r32_imm32) [ECX,d5dh:imm32]                  encoding(5 bytes) = b9 5d 0d 00 00
0082h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
008ch call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F47E800h:jmp64]                encoding(5 bytes) = e8 6f e7 47 5f
0091h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
0094h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
0099h mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
009ch mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00a0h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00a3h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00a5h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00a7h mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00ach mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b1h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFCA8E58h:jmp64]        encoding(5 bytes) = e8 a2 8d ca ff
00b6h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00b9h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F461830h:jmp64]                encoding(5 bytes) = e8 72 17 46 5f
00beh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00bfh call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5AFC90h:jmp64]                encoding(5 bytes) = e8 cc fb 5a 5f
00c4h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> subBytes => new byte[197]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x00,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0xBE,0xDC,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x3B,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x20,0x4D,0x63,0xDA,0x4B,0x8D,0x1C,0x19,0x45,0x3B,0xD0,0x0F,0x83,0x7D,0x00,0x00,0x00,0x46,0x0F,0xB6,0x1C,0x18,0x44,0x28,0x1B,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xE0,0x4C,0x89,0x09,0x89,0x51,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x55,0x0D,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x86,0xE7,0x47,0x5F,0x4C,0x8B,0xF0,0xB9,0x5D,0x0D,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x6F,0xE7,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0xA2,0x8D,0xCA,0xFF,0x48,0x8B,0xC8,0xE8,0x72,0x17,0x46,0x5F,0xCC,0xE8,0xCC,0xFB,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<short> sub(Span<short> lhs, ReadOnlySpan<short> rhs)
; location: [7FFC872B5210h, 7FFC872B52D5h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0014h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0017h mov esi,0E4h                  ; MOV(Mov_r32_imm32) [ESI,e4h:imm32]                   encoding(5 bytes) = be e4 00 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
0023h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0026h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0029h jne short 0067h               ; JNE(Jne_rel8_64) [67h:jmp64]                         encoding(2 bytes) = 75 3c
002bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
002eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0030h jle short 0053h               ; JLE(Jle_rel8_64) [53h:jmp64]                         encoding(2 bytes) = 7e 21
0032h movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
0035h lea rbx,[r9+r11*2]            ; LEA(Lea_r64_m) [RBX,mem(Unknown,R9:br,DS:sr)]        encoding(4 bytes) = 4b 8d 1c 59
0039h cmp r10d,r8d                  ; CMP(Cmp_r32_rm32) [R10D,R8D]                         encoding(3 bytes) = 45 3b d0
003ch jae near ptr 00c0h            ; JAE(Jae_rel32_64) [C0h:jmp64]                        encoding(6 bytes) = 0f 83 7e 00 00 00
0042h movsx r11,word ptr [rax+r11*2]; MOVSX(Movsx_r64_rm16) [R11,mem(16i,RAX:br,DS:sr)]    encoding(5 bytes) = 4e 0f bf 1c 58
0047h sub [rbx],r11w                ; SUB(Sub_rm16_r16) [mem(16u,RBX:br,DS:sr),R11W]       encoding(4 bytes) = 66 44 29 1b
004bh inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
004eh cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
0051h jl short 0032h                ; JL(Jl_rel8_64) [32h:jmp64]                           encoding(2 bytes) = 7c df
0053h mov [rcx],r9                  ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R9]         encoding(3 bytes) = 4c 89 09
0056h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
0059h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
005ch add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0060h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0061h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0062h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0063h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0064h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0066h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0067h mov ecx,0D55h                 ; MOV(Mov_r32_imm32) [ECX,d55h:imm32]                  encoding(5 bytes) = b9 55 0d 00 00
006ch mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0076h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F47E710h:jmp64]                encoding(5 bytes) = e8 95 e6 47 5f
007bh mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
007eh mov ecx,0D5Dh                 ; MOV(Mov_r32_imm32) [ECX,d5dh:imm32]                  encoding(5 bytes) = b9 5d 0d 00 00
0083h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
008dh call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F47E710h:jmp64]                encoding(5 bytes) = e8 7e e6 47 5f
0092h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
0095h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
009ah mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
009dh mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00a1h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00a4h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00a6h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00a8h mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00adh mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b2h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFCA8D68h:jmp64]        encoding(5 bytes) = e8 b1 8c ca ff
00b7h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00bah call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F461740h:jmp64]                encoding(5 bytes) = e8 81 16 46 5f
00bfh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00c0h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5AFBA0h:jmp64]                encoding(5 bytes) = e8 db fa 5a 5f
00c5h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> subBytes => new byte[198]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x00,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0xBE,0xE4,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x3C,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x21,0x4D,0x63,0xDA,0x4B,0x8D,0x1C,0x59,0x45,0x3B,0xD0,0x0F,0x83,0x7E,0x00,0x00,0x00,0x4E,0x0F,0xBF,0x1C,0x58,0x66,0x44,0x29,0x1B,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xDF,0x4C,0x89,0x09,0x89,0x51,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x55,0x0D,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x95,0xE6,0x47,0x5F,0x4C,0x8B,0xF0,0xB9,0x5D,0x0D,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x7E,0xE6,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0xB1,0x8C,0xCA,0xFF,0x48,0x8B,0xC8,0xE8,0x81,0x16,0x46,0x5F,0xCC,0xE8,0xDB,0xFA,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<ushort> sub(Span<ushort> lhs, ReadOnlySpan<ushort> rhs)
; location: [7FFC872B5300h, 7FFC872B53C5h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0014h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0017h mov esi,0ECh                  ; MOV(Mov_r32_imm32) [ESI,ech:imm32]                   encoding(5 bytes) = be ec 00 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
0023h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0026h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0029h jne short 0067h               ; JNE(Jne_rel8_64) [67h:jmp64]                         encoding(2 bytes) = 75 3c
002bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
002eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0030h jle short 0053h               ; JLE(Jle_rel8_64) [53h:jmp64]                         encoding(2 bytes) = 7e 21
0032h movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
0035h lea rbx,[r9+r11*2]            ; LEA(Lea_r64_m) [RBX,mem(Unknown,R9:br,DS:sr)]        encoding(4 bytes) = 4b 8d 1c 59
0039h cmp r10d,r8d                  ; CMP(Cmp_r32_rm32) [R10D,R8D]                         encoding(3 bytes) = 45 3b d0
003ch jae near ptr 00c0h            ; JAE(Jae_rel32_64) [C0h:jmp64]                        encoding(6 bytes) = 0f 83 7e 00 00 00
0042h movzx r11d,word ptr [rax+r11*2]; MOVZX(Movzx_r32_rm16) [R11D,mem(16u,RAX:br,DS:sr)]  encoding(5 bytes) = 46 0f b7 1c 58
0047h sub [rbx],r11w                ; SUB(Sub_rm16_r16) [mem(16u,RBX:br,DS:sr),R11W]       encoding(4 bytes) = 66 44 29 1b
004bh inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
004eh cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
0051h jl short 0032h                ; JL(Jl_rel8_64) [32h:jmp64]                           encoding(2 bytes) = 7c df
0053h mov [rcx],r9                  ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R9]         encoding(3 bytes) = 4c 89 09
0056h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
0059h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
005ch add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0060h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0061h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0062h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0063h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0064h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0066h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0067h mov ecx,0D55h                 ; MOV(Mov_r32_imm32) [ECX,d55h:imm32]                  encoding(5 bytes) = b9 55 0d 00 00
006ch mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0076h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F47E620h:jmp64]                encoding(5 bytes) = e8 a5 e5 47 5f
007bh mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
007eh mov ecx,0D5Dh                 ; MOV(Mov_r32_imm32) [ECX,d5dh:imm32]                  encoding(5 bytes) = b9 5d 0d 00 00
0083h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
008dh call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F47E620h:jmp64]                encoding(5 bytes) = e8 8e e5 47 5f
0092h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
0095h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
009ah mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
009dh mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00a1h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00a4h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00a6h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00a8h mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00adh mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b2h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFCA8C78h:jmp64]        encoding(5 bytes) = e8 c1 8b ca ff
00b7h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00bah call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F461650h:jmp64]                encoding(5 bytes) = e8 91 15 46 5f
00bfh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00c0h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5AFAB0h:jmp64]                encoding(5 bytes) = e8 eb f9 5a 5f
00c5h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> subBytes => new byte[198]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x00,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0xBE,0xEC,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x3C,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x21,0x4D,0x63,0xDA,0x4B,0x8D,0x1C,0x59,0x45,0x3B,0xD0,0x0F,0x83,0x7E,0x00,0x00,0x00,0x46,0x0F,0xB7,0x1C,0x58,0x66,0x44,0x29,0x1B,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xDF,0x4C,0x89,0x09,0x89,0x51,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x55,0x0D,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xA5,0xE5,0x47,0x5F,0x4C,0x8B,0xF0,0xB9,0x5D,0x0D,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x8E,0xE5,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0xC1,0x8B,0xCA,0xFF,0x48,0x8B,0xC8,0xE8,0x91,0x15,0x46,0x5F,0xCC,0xE8,0xEB,0xF9,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<int> sub(Span<int> lhs, ReadOnlySpan<int> rhs)
; location: [7FFC872B53F0h, 7FFC872B54B3h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0014h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0017h mov esi,0F4h                  ; MOV(Mov_r32_imm32) [ESI,f4h:imm32]                   encoding(5 bytes) = be f4 00 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
0023h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0026h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0029h jne short 0065h               ; JNE(Jne_rel8_64) [65h:jmp64]                         encoding(2 bytes) = 75 3a
002bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
002eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0030h jle short 0051h               ; JLE(Jle_rel8_64) [51h:jmp64]                         encoding(2 bytes) = 7e 1f
0032h movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
0035h lea rbx,[r9+r11*4]            ; LEA(Lea_r64_m) [RBX,mem(Unknown,R9:br,DS:sr)]        encoding(4 bytes) = 4b 8d 1c 99
0039h cmp r10d,r8d                  ; CMP(Cmp_r32_rm32) [R10D,R8D]                         encoding(3 bytes) = 45 3b d0
003ch jae near ptr 00beh            ; JAE(Jae_rel32_64) [BEh:jmp64]                        encoding(6 bytes) = 0f 83 7c 00 00 00
0042h mov r11d,[rax+r11*4]          ; MOV(Mov_r32_rm32) [R11D,mem(32u,RAX:br,DS:sr)]       encoding(4 bytes) = 46 8b 1c 98
0046h sub [rbx],r11d                ; SUB(Sub_rm32_r32) [mem(32u,RBX:br,DS:sr),R11D]       encoding(3 bytes) = 44 29 1b
0049h inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
004ch cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
004fh jl short 0032h                ; JL(Jl_rel8_64) [32h:jmp64]                           encoding(2 bytes) = 7c e1
0051h mov [rcx],r9                  ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R9]         encoding(3 bytes) = 4c 89 09
0054h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
0057h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
005ah add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
005eh pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
005fh pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0060h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0061h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0062h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0064h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0065h mov ecx,0D55h                 ; MOV(Mov_r32_imm32) [ECX,d55h:imm32]                  encoding(5 bytes) = b9 55 0d 00 00
006ah mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0074h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F47E530h:jmp64]                encoding(5 bytes) = e8 b7 e4 47 5f
0079h mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
007ch mov ecx,0D5Dh                 ; MOV(Mov_r32_imm32) [ECX,d5dh:imm32]                  encoding(5 bytes) = b9 5d 0d 00 00
0081h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
008bh call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F47E530h:jmp64]                encoding(5 bytes) = e8 a0 e4 47 5f
0090h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
0093h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
0098h mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
009bh mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
009fh mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00a2h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00a4h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00a6h mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00abh mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b0h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFCA8B88h:jmp64]        encoding(5 bytes) = e8 d3 8a ca ff
00b5h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00b8h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F461560h:jmp64]                encoding(5 bytes) = e8 a3 14 46 5f
00bdh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00beh call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5AF9C0h:jmp64]                encoding(5 bytes) = e8 fd f8 5a 5f
00c3h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> subBytes => new byte[196]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x00,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0xBE,0xF4,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x3A,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x1F,0x4D,0x63,0xDA,0x4B,0x8D,0x1C,0x99,0x45,0x3B,0xD0,0x0F,0x83,0x7C,0x00,0x00,0x00,0x46,0x8B,0x1C,0x98,0x44,0x29,0x1B,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xE1,0x4C,0x89,0x09,0x89,0x51,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x55,0x0D,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xB7,0xE4,0x47,0x5F,0x4C,0x8B,0xF0,0xB9,0x5D,0x0D,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xA0,0xE4,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0xD3,0x8A,0xCA,0xFF,0x48,0x8B,0xC8,0xE8,0xA3,0x14,0x46,0x5F,0xCC,0xE8,0xFD,0xF8,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<uint> sub(Span<uint> lhs, ReadOnlySpan<uint> rhs)
; location: [7FFC872B54D0h, 7FFC872B5593h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0014h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0017h mov esi,0FCh                  ; MOV(Mov_r32_imm32) [ESI,fch:imm32]                   encoding(5 bytes) = be fc 00 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
0023h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0026h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0029h jne short 0065h               ; JNE(Jne_rel8_64) [65h:jmp64]                         encoding(2 bytes) = 75 3a
002bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
002eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0030h jle short 0051h               ; JLE(Jle_rel8_64) [51h:jmp64]                         encoding(2 bytes) = 7e 1f
0032h movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
0035h lea rbx,[r9+r11*4]            ; LEA(Lea_r64_m) [RBX,mem(Unknown,R9:br,DS:sr)]        encoding(4 bytes) = 4b 8d 1c 99
0039h cmp r10d,r8d                  ; CMP(Cmp_r32_rm32) [R10D,R8D]                         encoding(3 bytes) = 45 3b d0
003ch jae near ptr 00beh            ; JAE(Jae_rel32_64) [BEh:jmp64]                        encoding(6 bytes) = 0f 83 7c 00 00 00
0042h mov r11d,[rax+r11*4]          ; MOV(Mov_r32_rm32) [R11D,mem(32u,RAX:br,DS:sr)]       encoding(4 bytes) = 46 8b 1c 98
0046h sub [rbx],r11d                ; SUB(Sub_rm32_r32) [mem(32u,RBX:br,DS:sr),R11D]       encoding(3 bytes) = 44 29 1b
0049h inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
004ch cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
004fh jl short 0032h                ; JL(Jl_rel8_64) [32h:jmp64]                           encoding(2 bytes) = 7c e1
0051h mov [rcx],r9                  ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R9]         encoding(3 bytes) = 4c 89 09
0054h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
0057h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
005ah add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
005eh pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
005fh pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0060h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0061h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0062h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0064h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0065h mov ecx,0D55h                 ; MOV(Mov_r32_imm32) [ECX,d55h:imm32]                  encoding(5 bytes) = b9 55 0d 00 00
006ah mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0074h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F47E450h:jmp64]                encoding(5 bytes) = e8 d7 e3 47 5f
0079h mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
007ch mov ecx,0D5Dh                 ; MOV(Mov_r32_imm32) [ECX,d5dh:imm32]                  encoding(5 bytes) = b9 5d 0d 00 00
0081h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
008bh call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F47E450h:jmp64]                encoding(5 bytes) = e8 c0 e3 47 5f
0090h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
0093h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
0098h mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
009bh mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
009fh mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00a2h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00a4h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00a6h mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00abh mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b0h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFCA8AA8h:jmp64]        encoding(5 bytes) = e8 f3 89 ca ff
00b5h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00b8h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F461480h:jmp64]                encoding(5 bytes) = e8 c3 13 46 5f
00bdh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00beh call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5AF8E0h:jmp64]                encoding(5 bytes) = e8 1d f8 5a 5f
00c3h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> subBytes => new byte[196]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x00,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0xBE,0xFC,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x3A,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x1F,0x4D,0x63,0xDA,0x4B,0x8D,0x1C,0x99,0x45,0x3B,0xD0,0x0F,0x83,0x7C,0x00,0x00,0x00,0x46,0x8B,0x1C,0x98,0x44,0x29,0x1B,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xE1,0x4C,0x89,0x09,0x89,0x51,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x55,0x0D,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xD7,0xE3,0x47,0x5F,0x4C,0x8B,0xF0,0xB9,0x5D,0x0D,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xC0,0xE3,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0xF3,0x89,0xCA,0xFF,0x48,0x8B,0xC8,0xE8,0xC3,0x13,0x46,0x5F,0xCC,0xE8,0x1D,0xF8,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<long> sub(Span<long> lhs, ReadOnlySpan<long> rhs)
; location: [7FFC872B55B0h, 7FFC872B5673h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0014h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0017h mov esi,104h                  ; MOV(Mov_r32_imm32) [ESI,104h:imm32]                  encoding(5 bytes) = be 04 01 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
0023h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0026h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0029h jne short 0065h               ; JNE(Jne_rel8_64) [65h:jmp64]                         encoding(2 bytes) = 75 3a
002bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
002eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0030h jle short 0051h               ; JLE(Jle_rel8_64) [51h:jmp64]                         encoding(2 bytes) = 7e 1f
0032h movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
0035h lea rbx,[r9+r11*8]            ; LEA(Lea_r64_m) [RBX,mem(Unknown,R9:br,DS:sr)]        encoding(4 bytes) = 4b 8d 1c d9
0039h cmp r10d,r8d                  ; CMP(Cmp_r32_rm32) [R10D,R8D]                         encoding(3 bytes) = 45 3b d0
003ch jae near ptr 00beh            ; JAE(Jae_rel32_64) [BEh:jmp64]                        encoding(6 bytes) = 0f 83 7c 00 00 00
0042h mov r11,[rax+r11*8]           ; MOV(Mov_r64_rm64) [R11,mem(64u,RAX:br,DS:sr)]        encoding(4 bytes) = 4e 8b 1c d8
0046h sub [rbx],r11                 ; SUB(Sub_rm64_r64) [mem(64u,RBX:br,DS:sr),R11]        encoding(3 bytes) = 4c 29 1b
0049h inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
004ch cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
004fh jl short 0032h                ; JL(Jl_rel8_64) [32h:jmp64]                           encoding(2 bytes) = 7c e1
0051h mov [rcx],r9                  ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R9]         encoding(3 bytes) = 4c 89 09
0054h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
0057h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
005ah add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
005eh pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
005fh pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0060h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0061h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0062h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0064h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0065h mov ecx,0D55h                 ; MOV(Mov_r32_imm32) [ECX,d55h:imm32]                  encoding(5 bytes) = b9 55 0d 00 00
006ah mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0074h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F47E370h:jmp64]                encoding(5 bytes) = e8 f7 e2 47 5f
0079h mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
007ch mov ecx,0D5Dh                 ; MOV(Mov_r32_imm32) [ECX,d5dh:imm32]                  encoding(5 bytes) = b9 5d 0d 00 00
0081h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
008bh call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F47E370h:jmp64]                encoding(5 bytes) = e8 e0 e2 47 5f
0090h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
0093h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
0098h mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
009bh mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
009fh mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00a2h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00a4h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00a6h mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00abh mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b0h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFCA89C8h:jmp64]        encoding(5 bytes) = e8 13 89 ca ff
00b5h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00b8h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F4613A0h:jmp64]                encoding(5 bytes) = e8 e3 12 46 5f
00bdh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00beh call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5AF800h:jmp64]                encoding(5 bytes) = e8 3d f7 5a 5f
00c3h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> subBytes => new byte[196]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x00,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0xBE,0x04,0x01,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x3A,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x1F,0x4D,0x63,0xDA,0x4B,0x8D,0x1C,0xD9,0x45,0x3B,0xD0,0x0F,0x83,0x7C,0x00,0x00,0x00,0x4E,0x8B,0x1C,0xD8,0x4C,0x29,0x1B,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xE1,0x4C,0x89,0x09,0x89,0x51,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x55,0x0D,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xF7,0xE2,0x47,0x5F,0x4C,0x8B,0xF0,0xB9,0x5D,0x0D,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xE0,0xE2,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x13,0x89,0xCA,0xFF,0x48,0x8B,0xC8,0xE8,0xE3,0x12,0x46,0x5F,0xCC,0xE8,0x3D,0xF7,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<ulong> sub(Span<ulong> lhs, ReadOnlySpan<ulong> rhs)
; location: [7FFC872B5690h, 7FFC872B5753h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0014h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0017h mov esi,10Ch                  ; MOV(Mov_r32_imm32) [ESI,10ch:imm32]                  encoding(5 bytes) = be 0c 01 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
0023h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0026h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0029h jne short 0065h               ; JNE(Jne_rel8_64) [65h:jmp64]                         encoding(2 bytes) = 75 3a
002bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
002eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0030h jle short 0051h               ; JLE(Jle_rel8_64) [51h:jmp64]                         encoding(2 bytes) = 7e 1f
0032h movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
0035h lea rbx,[r9+r11*8]            ; LEA(Lea_r64_m) [RBX,mem(Unknown,R9:br,DS:sr)]        encoding(4 bytes) = 4b 8d 1c d9
0039h cmp r10d,r8d                  ; CMP(Cmp_r32_rm32) [R10D,R8D]                         encoding(3 bytes) = 45 3b d0
003ch jae near ptr 00beh            ; JAE(Jae_rel32_64) [BEh:jmp64]                        encoding(6 bytes) = 0f 83 7c 00 00 00
0042h mov r11,[rax+r11*8]           ; MOV(Mov_r64_rm64) [R11,mem(64u,RAX:br,DS:sr)]        encoding(4 bytes) = 4e 8b 1c d8
0046h sub [rbx],r11                 ; SUB(Sub_rm64_r64) [mem(64u,RBX:br,DS:sr),R11]        encoding(3 bytes) = 4c 29 1b
0049h inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
004ch cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
004fh jl short 0032h                ; JL(Jl_rel8_64) [32h:jmp64]                           encoding(2 bytes) = 7c e1
0051h mov [rcx],r9                  ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R9]         encoding(3 bytes) = 4c 89 09
0054h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
0057h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
005ah add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
005eh pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
005fh pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0060h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0061h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0062h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0064h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0065h mov ecx,0D55h                 ; MOV(Mov_r32_imm32) [ECX,d55h:imm32]                  encoding(5 bytes) = b9 55 0d 00 00
006ah mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0074h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F47E290h:jmp64]                encoding(5 bytes) = e8 17 e2 47 5f
0079h mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
007ch mov ecx,0D5Dh                 ; MOV(Mov_r32_imm32) [ECX,d5dh:imm32]                  encoding(5 bytes) = b9 5d 0d 00 00
0081h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
008bh call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F47E290h:jmp64]                encoding(5 bytes) = e8 00 e2 47 5f
0090h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
0093h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
0098h mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
009bh mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
009fh mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00a2h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00a4h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00a6h mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00abh mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b0h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFCA88E8h:jmp64]        encoding(5 bytes) = e8 33 88 ca ff
00b5h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00b8h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F4612C0h:jmp64]                encoding(5 bytes) = e8 03 12 46 5f
00bdh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00beh call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5AF720h:jmp64]                encoding(5 bytes) = e8 5d f6 5a 5f
00c3h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> subBytes => new byte[196]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x00,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0xBE,0x0C,0x01,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x3A,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x1F,0x4D,0x63,0xDA,0x4B,0x8D,0x1C,0xD9,0x45,0x3B,0xD0,0x0F,0x83,0x7C,0x00,0x00,0x00,0x4E,0x8B,0x1C,0xD8,0x4C,0x29,0x1B,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xE1,0x4C,0x89,0x09,0x89,0x51,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x55,0x0D,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x17,0xE2,0x47,0x5F,0x4C,0x8B,0xF0,0xB9,0x5D,0x0D,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x00,0xE2,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x33,0x88,0xCA,0xFF,0x48,0x8B,0xC8,0xE8,0x03,0x12,0x46,0x5F,0xCC,0xE8,0x5D,0xF6,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<float> sub(Span<float> lhs, ReadOnlySpan<float> rhs)
; location: [7FFC872B5770h, 7FFC872B583Dh]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
000dh mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
0010h mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0014h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0017h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
001ah mov esi,114h                  ; MOV(Mov_r32_imm32) [ESI,114h:imm32]                  encoding(5 bytes) = be 14 01 00 00
001fh mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0024h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
0026h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0029h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
002ch jne short 006fh               ; JNE(Jne_rel8_64) [6Fh:jmp64]                         encoding(2 bytes) = 75 41
002eh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
0031h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0033h jle short 005bh               ; JLE(Jle_rel8_64) [5Bh:jmp64]                         encoding(2 bytes) = 7e 26
0035h movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
0038h lea rbx,[r9+r11*4]            ; LEA(Lea_r64_m) [RBX,mem(Unknown,R9:br,DS:sr)]        encoding(4 bytes) = 4b 8d 1c 99
003ch vmovss xmm0,dword ptr [rbx]   ; VMOVSS(VEX_Vmovss_xmm_m32) [XMM0,mem(Float32,RBX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 10 03
0040h cmp r10d,r8d                  ; CMP(Cmp_r32_rm32) [R10D,R8D]                         encoding(3 bytes) = 45 3b d0
0043h jae near ptr 00c8h            ; JAE(Jae_rel32_64) [C8h:jmp64]                        encoding(6 bytes) = 0f 83 7f 00 00 00
0049h vsubss xmm0,xmm0,dword ptr [rax+r11*4]; VSUBSS(VEX_Vsubss_xmm_xmm_xmmm32) [XMM0,XMM0,mem(Float32,RAX:br,DS:sr)] encoding(VEX, 6 bytes) = c4 a1 7a 5c 04 98
004fh vmovss dword ptr [rbx],xmm0   ; VMOVSS(VEX_Vmovss_m32_xmm) [mem(Float32,RBX:br,DS:sr),XMM0] encoding(VEX, 4 bytes) = c5 fa 11 03
0053h inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
0056h cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
0059h jl short 0035h                ; JL(Jl_rel8_64) [35h:jmp64]                           encoding(2 bytes) = 7c da
005bh mov [rcx],r9                  ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R9]         encoding(3 bytes) = 4c 89 09
005eh mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
0061h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0064h add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0068h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0069h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
006ah pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
006bh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
006ch pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
006eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
006fh mov ecx,0D55h                 ; MOV(Mov_r32_imm32) [ECX,d55h:imm32]                  encoding(5 bytes) = b9 55 0d 00 00
0074h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
007eh call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F47E1B0h:jmp64]                encoding(5 bytes) = e8 2d e1 47 5f
0083h mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0086h mov ecx,0D5Dh                 ; MOV(Mov_r32_imm32) [ECX,d5dh:imm32]                  encoding(5 bytes) = b9 5d 0d 00 00
008bh mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0095h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F47E1B0h:jmp64]                encoding(5 bytes) = e8 16 e1 47 5f
009ah mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
009dh lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
00a2h mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00a5h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00a9h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00ach mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00aeh mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00b0h mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00b5h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00bah call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFCA8808h:jmp64]        encoding(5 bytes) = e8 49 87 ca ff
00bfh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00c2h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F4611E0h:jmp64]                encoding(5 bytes) = e8 19 11 46 5f
00c7h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00c8h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5AF640h:jmp64]                encoding(5 bytes) = e8 73 f5 5a 5f
00cdh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> subBytes => new byte[206]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0xC5,0xF8,0x77,0x49,0x8B,0x00,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0xBE,0x14,0x01,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x41,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x26,0x4D,0x63,0xDA,0x4B,0x8D,0x1C,0x99,0xC5,0xFA,0x10,0x03,0x45,0x3B,0xD0,0x0F,0x83,0x7F,0x00,0x00,0x00,0xC4,0xA1,0x7A,0x5C,0x04,0x98,0xC5,0xFA,0x11,0x03,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xDA,0x4C,0x89,0x09,0x89,0x51,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x55,0x0D,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x2D,0xE1,0x47,0x5F,0x4C,0x8B,0xF0,0xB9,0x5D,0x0D,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x16,0xE1,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x49,0x87,0xCA,0xFF,0x48,0x8B,0xC8,0xE8,0x19,0x11,0x46,0x5F,0xCC,0xE8,0x73,0xF5,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<double> sub(Span<double> lhs, ReadOnlySpan<double> rhs)
; location: [7FFC872B5860h, 7FFC872B592Dh]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
000dh mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
0010h mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0014h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0017h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
001ah mov esi,11Ch                  ; MOV(Mov_r32_imm32) [ESI,11ch:imm32]                  encoding(5 bytes) = be 1c 01 00 00
001fh mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0024h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
0026h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0029h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
002ch jne short 006fh               ; JNE(Jne_rel8_64) [6Fh:jmp64]                         encoding(2 bytes) = 75 41
002eh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
0031h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0033h jle short 005bh               ; JLE(Jle_rel8_64) [5Bh:jmp64]                         encoding(2 bytes) = 7e 26
0035h movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
0038h lea rbx,[r9+r11*8]            ; LEA(Lea_r64_m) [RBX,mem(Unknown,R9:br,DS:sr)]        encoding(4 bytes) = 4b 8d 1c d9
003ch vmovsd xmm0,qword ptr [rbx]   ; VMOVSD(VEX_Vmovsd_xmm_m64) [XMM0,mem(Float64,RBX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fb 10 03
0040h cmp r10d,r8d                  ; CMP(Cmp_r32_rm32) [R10D,R8D]                         encoding(3 bytes) = 45 3b d0
0043h jae near ptr 00c8h            ; JAE(Jae_rel32_64) [C8h:jmp64]                        encoding(6 bytes) = 0f 83 7f 00 00 00
0049h vsubsd xmm0,xmm0,qword ptr [rax+r11*8]; VSUBSD(VEX_Vsubsd_xmm_xmm_xmmm64) [XMM0,XMM0,mem(Float64,RAX:br,DS:sr)] encoding(VEX, 6 bytes) = c4 a1 7b 5c 04 d8
004fh vmovsd qword ptr [rbx],xmm0   ; VMOVSD(VEX_Vmovsd_m64_xmm) [mem(Float64,RBX:br,DS:sr),XMM0] encoding(VEX, 4 bytes) = c5 fb 11 03
0053h inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
0056h cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
0059h jl short 0035h                ; JL(Jl_rel8_64) [35h:jmp64]                           encoding(2 bytes) = 7c da
005bh mov [rcx],r9                  ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R9]         encoding(3 bytes) = 4c 89 09
005eh mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
0061h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0064h add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0068h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0069h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
006ah pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
006bh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
006ch pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
006eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
006fh mov ecx,0D55h                 ; MOV(Mov_r32_imm32) [ECX,d55h:imm32]                  encoding(5 bytes) = b9 55 0d 00 00
0074h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
007eh call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F47E0C0h:jmp64]                encoding(5 bytes) = e8 3d e0 47 5f
0083h mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0086h mov ecx,0D5Dh                 ; MOV(Mov_r32_imm32) [ECX,d5dh:imm32]                  encoding(5 bytes) = b9 5d 0d 00 00
008bh mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0095h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F47E0C0h:jmp64]                encoding(5 bytes) = e8 26 e0 47 5f
009ah mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
009dh lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
00a2h mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00a5h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00a9h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00ach mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00aeh mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00b0h mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00b5h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00bah call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFCA8718h:jmp64]        encoding(5 bytes) = e8 59 86 ca ff
00bfh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00c2h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F4610F0h:jmp64]                encoding(5 bytes) = e8 29 10 46 5f
00c7h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00c8h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5AF550h:jmp64]                encoding(5 bytes) = e8 83 f4 5a 5f
00cdh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> subBytes => new byte[206]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0xC5,0xF8,0x77,0x49,0x8B,0x00,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0xBE,0x1C,0x01,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x41,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x26,0x4D,0x63,0xDA,0x4B,0x8D,0x1C,0xD9,0xC5,0xFB,0x10,0x03,0x45,0x3B,0xD0,0x0F,0x83,0x7F,0x00,0x00,0x00,0xC4,0xA1,0x7B,0x5C,0x04,0xD8,0xC5,0xFB,0x11,0x03,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xDA,0x4C,0x89,0x09,0x89,0x51,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x55,0x0D,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x3D,0xE0,0x47,0x5F,0x4C,0x8B,0xF0,0xB9,0x5D,0x0D,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x26,0xE0,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x59,0x86,0xCA,0xFF,0x48,0x8B,0xC8,0xE8,0x29,0x10,0x46,0x5F,0xCC,0xE8,0x83,0xF4,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: sbyte sum(ReadOnlySpan<sbyte> src)
; location: [7FFC872B5950h, 7FFC872B5992h]
0000h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0004h nop                           ; NOP(Nopd)                                            encoding(1 byte ) = 90
0005h mov rax,[rcx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 01
0008h mov edx,[rcx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 51 08
000bh xor ecx,ecx                   ; XOR(Xor_r32_rm32) [ECX,ECX]                          encoding(2 bytes) = 33 c9
000dh xor r8d,r8d                   ; XOR(Xor_r32_rm32) [R8D,R8D]                          encoding(3 bytes) = 45 33 c0
0010h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0012h jle short 0036h               ; JLE(Jle_rel8_64) [36h:jmp64]                         encoding(2 bytes) = 7e 22
0014h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0017h movsx r9,byte ptr [rax+r9]    ; MOVSX(Movsx_r64_rm8) [R9,mem(8i,RAX:br,DS:sr)]       encoding(5 bytes) = 4e 0f be 0c 08
001ch add ecx,r9d                   ; ADD(Add_r32_rm32) [ECX,R9D]                          encoding(3 bytes) = 41 03 c9
001fh jo short 003dh                ; JO(Jo_rel8_64) [3Dh:jmp64]                           encoding(2 bytes) = 70 1c
0021h cmp ecx,7Fh                   ; CMP(Cmp_rm32_imm8) [ECX,7fh:imm32]                   encoding(3 bytes) = 83 f9 7f
0024h jg short 003dh                ; JG(Jg_rel8_64) [3Dh:jmp64]                           encoding(2 bytes) = 7f 17
0026h cmp ecx,0FFFFFF80h            ; CMP(Cmp_rm32_imm8) [ECX,ffffffffffffff80h:imm32]     encoding(3 bytes) = 83 f9 80
0029h jl short 003dh                ; JL(Jl_rel8_64) [3Dh:jmp64]                           encoding(2 bytes) = 7c 12
002bh add r8d,1                     ; ADD(Add_rm32_imm8) [R8D,1h:imm32]                    encoding(4 bytes) = 41 83 c0 01
002fh jo short 003dh                ; JO(Jo_rel8_64) [3Dh:jmp64]                           encoding(2 bytes) = 70 0c
0031h cmp r8d,edx                   ; CMP(Cmp_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 3b c2
0034h jl short 0014h                ; JL(Jl_rel8_64) [14h:jmp64]                           encoding(2 bytes) = 7c de
0036h mov eax,ecx                   ; MOV(Mov_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 8b c1
0038h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
003ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
003dh call 7FFCE6864C00h            ; CALL(Call_rel32_64) [5F5AF2B0h:jmp64]                encoding(5 bytes) = e8 6e f2 5a 5f
0042h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> sumBytes => new byte[67]{0x48,0x83,0xEC,0x28,0x90,0x48,0x8B,0x01,0x8B,0x51,0x08,0x33,0xC9,0x45,0x33,0xC0,0x85,0xD2,0x7E,0x22,0x4D,0x63,0xC8,0x4E,0x0F,0xBE,0x0C,0x08,0x41,0x03,0xC9,0x70,0x1C,0x83,0xF9,0x7F,0x7F,0x17,0x83,0xF9,0x80,0x7C,0x12,0x41,0x83,0xC0,0x01,0x70,0x0C,0x44,0x3B,0xC2,0x7C,0xDE,0x8B,0xC1,0x48,0x83,0xC4,0x28,0xC3,0xE8,0x6E,0xF2,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: byte sum(ReadOnlySpan<byte> src)
; location: [7FFC872B59B0h, 7FFC872B59F0h]
0000h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0004h nop                           ; NOP(Nopd)                                            encoding(1 byte ) = 90
0005h mov rax,[rcx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 01
0008h mov edx,[rcx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 51 08
000bh xor ecx,ecx                   ; XOR(Xor_r32_rm32) [ECX,ECX]                          encoding(2 bytes) = 33 c9
000dh xor r8d,r8d                   ; XOR(Xor_r32_rm32) [R8D,R8D]                          encoding(3 bytes) = 45 33 c0
0010h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0012h jle short 0034h               ; JLE(Jle_rel8_64) [34h:jmp64]                         encoding(2 bytes) = 7e 20
0014h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0017h movzx r9d,byte ptr [rax+r9]   ; MOVZX(Movzx_r32_rm8) [R9D,mem(8u,RAX:br,DS:sr)]      encoding(5 bytes) = 46 0f b6 0c 08
001ch add ecx,r9d                   ; ADD(Add_r32_rm32) [ECX,R9D]                          encoding(3 bytes) = 41 03 c9
001fh jo short 003bh                ; JO(Jo_rel8_64) [3Bh:jmp64]                           encoding(2 bytes) = 70 1a
0021h cmp ecx,0FFh                  ; CMP(Cmp_rm32_imm32) [ECX,ffh:imm32]                  encoding(6 bytes) = 81 f9 ff 00 00 00
0027h ja short 003bh                ; JA(Ja_rel8_64) [3Bh:jmp64]                           encoding(2 bytes) = 77 12
0029h add r8d,1                     ; ADD(Add_rm32_imm8) [R8D,1h:imm32]                    encoding(4 bytes) = 41 83 c0 01
002dh jo short 003bh                ; JO(Jo_rel8_64) [3Bh:jmp64]                           encoding(2 bytes) = 70 0c
002fh cmp r8d,edx                   ; CMP(Cmp_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 3b c2
0032h jl short 0014h                ; JL(Jl_rel8_64) [14h:jmp64]                           encoding(2 bytes) = 7c e0
0034h mov eax,ecx                   ; MOV(Mov_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 8b c1
0036h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
003ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
003bh call 7FFCE6864C00h            ; CALL(Call_rel32_64) [5F5AF250h:jmp64]                encoding(5 bytes) = e8 10 f2 5a 5f
0040h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> sumBytes => new byte[65]{0x48,0x83,0xEC,0x28,0x90,0x48,0x8B,0x01,0x8B,0x51,0x08,0x33,0xC9,0x45,0x33,0xC0,0x85,0xD2,0x7E,0x20,0x4D,0x63,0xC8,0x46,0x0F,0xB6,0x0C,0x08,0x41,0x03,0xC9,0x70,0x1A,0x81,0xF9,0xFF,0x00,0x00,0x00,0x77,0x12,0x41,0x83,0xC0,0x01,0x70,0x0C,0x44,0x3B,0xC2,0x7C,0xE0,0x8B,0xC1,0x48,0x83,0xC4,0x28,0xC3,0xE8,0x10,0xF2,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: short sum(ReadOnlySpan<short> src)
; location: [7FFC872B5A10h, 7FFC872B5A58h]
0000h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0004h nop                           ; NOP(Nopd)                                            encoding(1 byte ) = 90
0005h mov rax,[rcx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 01
0008h mov edx,[rcx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 51 08
000bh xor ecx,ecx                   ; XOR(Xor_r32_rm32) [ECX,ECX]                          encoding(2 bytes) = 33 c9
000dh xor r8d,r8d                   ; XOR(Xor_r32_rm32) [R8D,R8D]                          encoding(3 bytes) = 45 33 c0
0010h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0012h jle short 003ch               ; JLE(Jle_rel8_64) [3Ch:jmp64]                         encoding(2 bytes) = 7e 28
0014h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0017h movsx r9,word ptr [rax+r9*2]  ; MOVSX(Movsx_r64_rm16) [R9,mem(16i,RAX:br,DS:sr)]     encoding(5 bytes) = 4e 0f bf 0c 48
001ch add ecx,r9d                   ; ADD(Add_r32_rm32) [ECX,R9D]                          encoding(3 bytes) = 41 03 c9
001fh jo short 0043h                ; JO(Jo_rel8_64) [43h:jmp64]                           encoding(2 bytes) = 70 22
0021h cmp ecx,7FFFh                 ; CMP(Cmp_rm32_imm32) [ECX,7fffh:imm32]                encoding(6 bytes) = 81 f9 ff 7f 00 00
0027h jg short 0043h                ; JG(Jg_rel8_64) [43h:jmp64]                           encoding(2 bytes) = 7f 1a
0029h cmp ecx,0FFFF8000h            ; CMP(Cmp_rm32_imm32) [ECX,ffff8000h:imm32]            encoding(6 bytes) = 81 f9 00 80 ff ff
002fh jl short 0043h                ; JL(Jl_rel8_64) [43h:jmp64]                           encoding(2 bytes) = 7c 12
0031h add r8d,1                     ; ADD(Add_rm32_imm8) [R8D,1h:imm32]                    encoding(4 bytes) = 41 83 c0 01
0035h jo short 0043h                ; JO(Jo_rel8_64) [43h:jmp64]                           encoding(2 bytes) = 70 0c
0037h cmp r8d,edx                   ; CMP(Cmp_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 3b c2
003ah jl short 0014h                ; JL(Jl_rel8_64) [14h:jmp64]                           encoding(2 bytes) = 7c d8
003ch mov eax,ecx                   ; MOV(Mov_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 8b c1
003eh add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
0042h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0043h call 7FFCE6864C00h            ; CALL(Call_rel32_64) [5F5AF1F0h:jmp64]                encoding(5 bytes) = e8 a8 f1 5a 5f
0048h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> sumBytes => new byte[73]{0x48,0x83,0xEC,0x28,0x90,0x48,0x8B,0x01,0x8B,0x51,0x08,0x33,0xC9,0x45,0x33,0xC0,0x85,0xD2,0x7E,0x28,0x4D,0x63,0xC8,0x4E,0x0F,0xBF,0x0C,0x48,0x41,0x03,0xC9,0x70,0x22,0x81,0xF9,0xFF,0x7F,0x00,0x00,0x7F,0x1A,0x81,0xF9,0x00,0x80,0xFF,0xFF,0x7C,0x12,0x41,0x83,0xC0,0x01,0x70,0x0C,0x44,0x3B,0xC2,0x7C,0xD8,0x8B,0xC1,0x48,0x83,0xC4,0x28,0xC3,0xE8,0xA8,0xF1,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ushort sum(ReadOnlySpan<ushort> src)
; location: [7FFC872B5A70h, 7FFC872B5AB0h]
0000h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0004h nop                           ; NOP(Nopd)                                            encoding(1 byte ) = 90
0005h mov rax,[rcx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 01
0008h mov edx,[rcx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 51 08
000bh xor ecx,ecx                   ; XOR(Xor_r32_rm32) [ECX,ECX]                          encoding(2 bytes) = 33 c9
000dh xor r8d,r8d                   ; XOR(Xor_r32_rm32) [R8D,R8D]                          encoding(3 bytes) = 45 33 c0
0010h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0012h jle short 0034h               ; JLE(Jle_rel8_64) [34h:jmp64]                         encoding(2 bytes) = 7e 20
0014h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0017h movzx r9d,word ptr [rax+r9*2] ; MOVZX(Movzx_r32_rm16) [R9D,mem(16u,RAX:br,DS:sr)]    encoding(5 bytes) = 46 0f b7 0c 48
001ch add ecx,r9d                   ; ADD(Add_r32_rm32) [ECX,R9D]                          encoding(3 bytes) = 41 03 c9
001fh jo short 003bh                ; JO(Jo_rel8_64) [3Bh:jmp64]                           encoding(2 bytes) = 70 1a
0021h cmp ecx,0FFFFh                ; CMP(Cmp_rm32_imm32) [ECX,ffffh:imm32]                encoding(6 bytes) = 81 f9 ff ff 00 00
0027h ja short 003bh                ; JA(Ja_rel8_64) [3Bh:jmp64]                           encoding(2 bytes) = 77 12
0029h add r8d,1                     ; ADD(Add_rm32_imm8) [R8D,1h:imm32]                    encoding(4 bytes) = 41 83 c0 01
002dh jo short 003bh                ; JO(Jo_rel8_64) [3Bh:jmp64]                           encoding(2 bytes) = 70 0c
002fh cmp r8d,edx                   ; CMP(Cmp_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 3b c2
0032h jl short 0014h                ; JL(Jl_rel8_64) [14h:jmp64]                           encoding(2 bytes) = 7c e0
0034h mov eax,ecx                   ; MOV(Mov_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 8b c1
0036h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
003ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
003bh call 7FFCE6864C00h            ; CALL(Call_rel32_64) [5F5AF190h:jmp64]                encoding(5 bytes) = e8 50 f1 5a 5f
0040h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> sumBytes => new byte[65]{0x48,0x83,0xEC,0x28,0x90,0x48,0x8B,0x01,0x8B,0x51,0x08,0x33,0xC9,0x45,0x33,0xC0,0x85,0xD2,0x7E,0x20,0x4D,0x63,0xC8,0x46,0x0F,0xB7,0x0C,0x48,0x41,0x03,0xC9,0x70,0x1A,0x81,0xF9,0xFF,0xFF,0x00,0x00,0x77,0x12,0x41,0x83,0xC0,0x01,0x70,0x0C,0x44,0x3B,0xC2,0x7C,0xE0,0x8B,0xC1,0x48,0x83,0xC4,0x28,0xC3,0xE8,0x50,0xF1,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: int sum(ReadOnlySpan<int> src)
; location: [7FFC872B5AD0h, 7FFC872B5B04h]
0000h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0004h nop                           ; NOP(Nopd)                                            encoding(1 byte ) = 90
0005h mov rax,[rcx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 01
0008h mov edx,[rcx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 51 08
000bh xor ecx,ecx                   ; XOR(Xor_r32_rm32) [ECX,ECX]                          encoding(2 bytes) = 33 c9
000dh xor r8d,r8d                   ; XOR(Xor_r32_rm32) [R8D,R8D]                          encoding(3 bytes) = 45 33 c0
0010h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0012h jle short 0028h               ; JLE(Jle_rel8_64) [28h:jmp64]                         encoding(2 bytes) = 7e 14
0014h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0017h add ecx,[rax+r9*4]            ; ADD(Add_r32_rm32) [ECX,mem(32u,RAX:br,DS:sr)]        encoding(4 bytes) = 42 03 0c 88
001bh jo short 002fh                ; JO(Jo_rel8_64) [2Fh:jmp64]                           encoding(2 bytes) = 70 12
001dh add r8d,1                     ; ADD(Add_rm32_imm8) [R8D,1h:imm32]                    encoding(4 bytes) = 41 83 c0 01
0021h jo short 002fh                ; JO(Jo_rel8_64) [2Fh:jmp64]                           encoding(2 bytes) = 70 0c
0023h cmp r8d,edx                   ; CMP(Cmp_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 3b c2
0026h jl short 0014h                ; JL(Jl_rel8_64) [14h:jmp64]                           encoding(2 bytes) = 7c ec
0028h mov eax,ecx                   ; MOV(Mov_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 8b c1
002ah add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
002eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
002fh call 7FFCE6864C00h            ; CALL(Call_rel32_64) [5F5AF130h:jmp64]                encoding(5 bytes) = e8 fc f0 5a 5f
0034h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> sumBytes => new byte[53]{0x48,0x83,0xEC,0x28,0x90,0x48,0x8B,0x01,0x8B,0x51,0x08,0x33,0xC9,0x45,0x33,0xC0,0x85,0xD2,0x7E,0x14,0x4D,0x63,0xC8,0x42,0x03,0x0C,0x88,0x70,0x12,0x41,0x83,0xC0,0x01,0x70,0x0C,0x44,0x3B,0xC2,0x7C,0xEC,0x8B,0xC1,0x48,0x83,0xC4,0x28,0xC3,0xE8,0xFC,0xF0,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: uint sum(ReadOnlySpan<uint> src)
; location: [7FFC872B5B20h, 7FFC872B5B54h]
0000h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0004h nop                           ; NOP(Nopd)                                            encoding(1 byte ) = 90
0005h mov rax,[rcx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 01
0008h mov edx,[rcx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 51 08
000bh xor ecx,ecx                   ; XOR(Xor_r32_rm32) [ECX,ECX]                          encoding(2 bytes) = 33 c9
000dh xor r8d,r8d                   ; XOR(Xor_r32_rm32) [R8D,R8D]                          encoding(3 bytes) = 45 33 c0
0010h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0012h jle short 0028h               ; JLE(Jle_rel8_64) [28h:jmp64]                         encoding(2 bytes) = 7e 14
0014h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0017h add ecx,[rax+r9*4]            ; ADD(Add_r32_rm32) [ECX,mem(32u,RAX:br,DS:sr)]        encoding(4 bytes) = 42 03 0c 88
001bh jb short 002fh                ; JB(Jb_rel8_64) [2Fh:jmp64]                           encoding(2 bytes) = 72 12
001dh add r8d,1                     ; ADD(Add_rm32_imm8) [R8D,1h:imm32]                    encoding(4 bytes) = 41 83 c0 01
0021h jo short 002fh                ; JO(Jo_rel8_64) [2Fh:jmp64]                           encoding(2 bytes) = 70 0c
0023h cmp r8d,edx                   ; CMP(Cmp_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 3b c2
0026h jl short 0014h                ; JL(Jl_rel8_64) [14h:jmp64]                           encoding(2 bytes) = 7c ec
0028h mov eax,ecx                   ; MOV(Mov_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 8b c1
002ah add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
002eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
002fh call 7FFCE6864C00h            ; CALL(Call_rel32_64) [5F5AF0E0h:jmp64]                encoding(5 bytes) = e8 ac f0 5a 5f
0034h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> sumBytes => new byte[53]{0x48,0x83,0xEC,0x28,0x90,0x48,0x8B,0x01,0x8B,0x51,0x08,0x33,0xC9,0x45,0x33,0xC0,0x85,0xD2,0x7E,0x14,0x4D,0x63,0xC8,0x42,0x03,0x0C,0x88,0x72,0x12,0x41,0x83,0xC0,0x01,0x70,0x0C,0x44,0x3B,0xC2,0x7C,0xEC,0x8B,0xC1,0x48,0x83,0xC4,0x28,0xC3,0xE8,0xAC,0xF0,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: long sum(ReadOnlySpan<long> src)
; location: [7FFC872B5B70h, 7FFC872B5BA5h]
0000h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0004h nop                           ; NOP(Nopd)                                            encoding(1 byte ) = 90
0005h mov rax,[rcx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 01
0008h mov edx,[rcx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 51 08
000bh xor ecx,ecx                   ; XOR(Xor_r32_rm32) [ECX,ECX]                          encoding(2 bytes) = 33 c9
000dh xor r8d,r8d                   ; XOR(Xor_r32_rm32) [R8D,R8D]                          encoding(3 bytes) = 45 33 c0
0010h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0012h jle short 0028h               ; JLE(Jle_rel8_64) [28h:jmp64]                         encoding(2 bytes) = 7e 14
0014h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0017h add rcx,[rax+r9*8]            ; ADD(Add_r64_rm64) [RCX,mem(64u,RAX:br,DS:sr)]        encoding(4 bytes) = 4a 03 0c c8
001bh jo short 0030h                ; JO(Jo_rel8_64) [30h:jmp64]                           encoding(2 bytes) = 70 13
001dh add r8d,1                     ; ADD(Add_rm32_imm8) [R8D,1h:imm32]                    encoding(4 bytes) = 41 83 c0 01
0021h jo short 0030h                ; JO(Jo_rel8_64) [30h:jmp64]                           encoding(2 bytes) = 70 0d
0023h cmp r8d,edx                   ; CMP(Cmp_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 3b c2
0026h jl short 0014h                ; JL(Jl_rel8_64) [14h:jmp64]                           encoding(2 bytes) = 7c ec
0028h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
002bh add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
002fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0030h call 7FFCE6864C00h            ; CALL(Call_rel32_64) [5F5AF090h:jmp64]                encoding(5 bytes) = e8 5b f0 5a 5f
0035h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> sumBytes => new byte[54]{0x48,0x83,0xEC,0x28,0x90,0x48,0x8B,0x01,0x8B,0x51,0x08,0x33,0xC9,0x45,0x33,0xC0,0x85,0xD2,0x7E,0x14,0x4D,0x63,0xC8,0x4A,0x03,0x0C,0xC8,0x70,0x13,0x41,0x83,0xC0,0x01,0x70,0x0D,0x44,0x3B,0xC2,0x7C,0xEC,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x28,0xC3,0xE8,0x5B,0xF0,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ulong sum(ReadOnlySpan<ulong> src)
; location: [7FFC872B5BC0h, 7FFC872B5BF5h]
0000h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0004h nop                           ; NOP(Nopd)                                            encoding(1 byte ) = 90
0005h mov rax,[rcx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 01
0008h mov edx,[rcx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 51 08
000bh xor ecx,ecx                   ; XOR(Xor_r32_rm32) [ECX,ECX]                          encoding(2 bytes) = 33 c9
000dh xor r8d,r8d                   ; XOR(Xor_r32_rm32) [R8D,R8D]                          encoding(3 bytes) = 45 33 c0
0010h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0012h jle short 0028h               ; JLE(Jle_rel8_64) [28h:jmp64]                         encoding(2 bytes) = 7e 14
0014h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0017h add rcx,[rax+r9*8]            ; ADD(Add_r64_rm64) [RCX,mem(64u,RAX:br,DS:sr)]        encoding(4 bytes) = 4a 03 0c c8
001bh jb short 0030h                ; JB(Jb_rel8_64) [30h:jmp64]                           encoding(2 bytes) = 72 13
001dh add r8d,1                     ; ADD(Add_rm32_imm8) [R8D,1h:imm32]                    encoding(4 bytes) = 41 83 c0 01
0021h jo short 0030h                ; JO(Jo_rel8_64) [30h:jmp64]                           encoding(2 bytes) = 70 0d
0023h cmp r8d,edx                   ; CMP(Cmp_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 3b c2
0026h jl short 0014h                ; JL(Jl_rel8_64) [14h:jmp64]                           encoding(2 bytes) = 7c ec
0028h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
002bh add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
002fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0030h call 7FFCE6864C00h            ; CALL(Call_rel32_64) [5F5AF040h:jmp64]                encoding(5 bytes) = e8 0b f0 5a 5f
0035h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> sumBytes => new byte[54]{0x48,0x83,0xEC,0x28,0x90,0x48,0x8B,0x01,0x8B,0x51,0x08,0x33,0xC9,0x45,0x33,0xC0,0x85,0xD2,0x7E,0x14,0x4D,0x63,0xC8,0x4A,0x03,0x0C,0xC8,0x72,0x13,0x41,0x83,0xC0,0x01,0x70,0x0D,0x44,0x3B,0xC2,0x7C,0xEC,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x28,0xC3,0xE8,0x0B,0xF0,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: float sum(ReadOnlySpan<float> src)
; location: [7FFC872B5C10h, 7FFC872B5C43h]
0000h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0004h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0007h mov rax,[rcx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 01
000ah mov edx,[rcx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 51 08
000dh vxorps xmm0,xmm0,xmm0         ; VXORPS(VEX_Vxorps_xmm_xmm_xmmm128) [XMM0,XMM0,XMM0]  encoding(VEX, 4 bytes) = c5 f8 57 c0
0011h xor ecx,ecx                   ; XOR(Xor_r32_rm32) [ECX,ECX]                          encoding(2 bytes) = 33 c9
0013h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0015h jle short 0029h               ; JLE(Jle_rel8_64) [29h:jmp64]                         encoding(2 bytes) = 7e 12
0017h movsxd r8,ecx                 ; MOVSXD(Movsxd_r64_rm32) [R8,ECX]                     encoding(3 bytes) = 4c 63 c1
001ah vaddss xmm0,xmm0,dword ptr [rax+r8*4]; VADDSS(VEX_Vaddss_xmm_xmm_xmmm32) [XMM0,XMM0,mem(Float32,RAX:br,DS:sr)] encoding(VEX, 6 bytes) = c4 a1 7a 58 04 80
0020h add ecx,1                     ; ADD(Add_rm32_imm8) [ECX,1h:imm32]                    encoding(3 bytes) = 83 c1 01
0023h jo short 002eh                ; JO(Jo_rel8_64) [2Eh:jmp64]                           encoding(2 bytes) = 70 09
0025h cmp ecx,edx                   ; CMP(Cmp_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 3b ca
0027h jl short 0017h                ; JL(Jl_rel8_64) [17h:jmp64]                           encoding(2 bytes) = 7c ee
0029h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
002dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
002eh call 7FFCE6864C00h            ; CALL(Call_rel32_64) [5F5AEFF0h:jmp64]                encoding(5 bytes) = e8 bd ef 5a 5f
0033h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> sumBytes => new byte[52]{0x48,0x83,0xEC,0x28,0xC5,0xF8,0x77,0x48,0x8B,0x01,0x8B,0x51,0x08,0xC5,0xF8,0x57,0xC0,0x33,0xC9,0x85,0xD2,0x7E,0x12,0x4C,0x63,0xC1,0xC4,0xA1,0x7A,0x58,0x04,0x80,0x83,0xC1,0x01,0x70,0x09,0x3B,0xCA,0x7C,0xEE,0x48,0x83,0xC4,0x28,0xC3,0xE8,0xBD,0xEF,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: double sum(ReadOnlySpan<double> src)
; location: [7FFC872B5C60h, 7FFC872B5C93h]
0000h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0004h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0007h mov rax,[rcx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 01
000ah mov edx,[rcx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 51 08
000dh vxorps xmm0,xmm0,xmm0         ; VXORPS(VEX_Vxorps_xmm_xmm_xmmm128) [XMM0,XMM0,XMM0]  encoding(VEX, 4 bytes) = c5 f8 57 c0
0011h xor ecx,ecx                   ; XOR(Xor_r32_rm32) [ECX,ECX]                          encoding(2 bytes) = 33 c9
0013h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0015h jle short 0029h               ; JLE(Jle_rel8_64) [29h:jmp64]                         encoding(2 bytes) = 7e 12
0017h movsxd r8,ecx                 ; MOVSXD(Movsxd_r64_rm32) [R8,ECX]                     encoding(3 bytes) = 4c 63 c1
001ah vaddsd xmm0,xmm0,qword ptr [rax+r8*8]; VADDSD(VEX_Vaddsd_xmm_xmm_xmmm64) [XMM0,XMM0,mem(Float64,RAX:br,DS:sr)] encoding(VEX, 6 bytes) = c4 a1 7b 58 04 c0
0020h add ecx,1                     ; ADD(Add_rm32_imm8) [ECX,1h:imm32]                    encoding(3 bytes) = 83 c1 01
0023h jo short 002eh                ; JO(Jo_rel8_64) [2Eh:jmp64]                           encoding(2 bytes) = 70 09
0025h cmp ecx,edx                   ; CMP(Cmp_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 3b ca
0027h jl short 0017h                ; JL(Jl_rel8_64) [17h:jmp64]                           encoding(2 bytes) = 7c ee
0029h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
002dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
002eh call 7FFCE6864C00h            ; CALL(Call_rel32_64) [5F5AEFA0h:jmp64]                encoding(5 bytes) = e8 6d ef 5a 5f
0033h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> sumBytes => new byte[52]{0x48,0x83,0xEC,0x28,0xC5,0xF8,0x77,0x48,0x8B,0x01,0x8B,0x51,0x08,0xC5,0xF8,0x57,0xC0,0x33,0xC9,0x85,0xD2,0x7E,0x12,0x4C,0x63,0xC1,0xC4,0xA1,0x7B,0x58,0x04,0xC0,0x83,0xC1,0x01,0x70,0x09,0x3B,0xCA,0x7C,0xEE,0x48,0x83,0xC4,0x28,0xC3,0xE8,0x6D,0xEF,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool within(byte lhs, byte rhs, byte epsilon)
; location: [7FFC872B5CB0h, 7FFC872B5CDCh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx ecx,cl                  ; MOVZX(Movzx_r32_rm8) [ECX,CL]                        encoding(3 bytes) = 0f b6 c9
0008h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
000bh cmp ecx,edx                   ; CMP(Cmp_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 3b ca
000dh jg short 001eh                ; JG(Jg_rel8_64) [1Eh:jmp64]                           encoding(2 bytes) = 7f 0f
000fh sub edx,ecx                   ; SUB(Sub_r32_rm32) [EDX,ECX]                          encoding(2 bytes) = 2b d1
0011h movzx eax,r8b                 ; MOVZX(Movzx_r32_rm8) [EAX,R8L]                       encoding(4 bytes) = 41 0f b6 c0
0015h cmp edx,eax                   ; CMP(Cmp_r32_rm32) [EDX,EAX]                          encoding(2 bytes) = 3b d0
0017h setle al                      ; SETLE(Setle_rm8) [AL]                                encoding(3 bytes) = 0f 9e c0
001ah movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
001dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
001eh sub ecx,edx                   ; SUB(Sub_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 2b ca
0020h movzx eax,r8b                 ; MOVZX(Movzx_r32_rm8) [EAX,R8L]                       encoding(4 bytes) = 41 0f b6 c0
0024h cmp ecx,eax                   ; CMP(Cmp_r32_rm32) [ECX,EAX]                          encoding(2 bytes) = 3b c8
0026h setle al                      ; SETLE(Setle_rm8) [AL]                                encoding(3 bytes) = 0f 9e c0
0029h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
002ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> withinBytes => new byte[45]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC9,0x0F,0xB6,0xD2,0x3B,0xCA,0x7F,0x0F,0x2B,0xD1,0x41,0x0F,0xB6,0xC0,0x3B,0xD0,0x0F,0x9E,0xC0,0x0F,0xB6,0xC0,0xC3,0x2B,0xCA,0x41,0x0F,0xB6,0xC0,0x3B,0xC8,0x0F,0x9E,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool within(sbyte lhs, sbyte rhs, sbyte epsilon)
; location: [7FFC872B5CF0h, 7FFC872B5D1Eh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rcx,cl                  ; MOVSX(Movsx_r64_rm8) [RCX,CL]                        encoding(4 bytes) = 48 0f be c9
0009h movsx rdx,dl                  ; MOVSX(Movsx_r64_rm8) [RDX,DL]                        encoding(4 bytes) = 48 0f be d2
000dh cmp ecx,edx                   ; CMP(Cmp_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 3b ca
000fh jg short 0020h                ; JG(Jg_rel8_64) [20h:jmp64]                           encoding(2 bytes) = 7f 0f
0011h sub edx,ecx                   ; SUB(Sub_r32_rm32) [EDX,ECX]                          encoding(2 bytes) = 2b d1
0013h movsx rax,r8b                 ; MOVSX(Movsx_r64_rm8) [RAX,R8L]                       encoding(4 bytes) = 49 0f be c0
0017h cmp edx,eax                   ; CMP(Cmp_r32_rm32) [EDX,EAX]                          encoding(2 bytes) = 3b d0
0019h setle al                      ; SETLE(Setle_rm8) [AL]                                encoding(3 bytes) = 0f 9e c0
001ch movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
001fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0020h sub ecx,edx                   ; SUB(Sub_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 2b ca
0022h movsx rax,r8b                 ; MOVSX(Movsx_r64_rm8) [RAX,R8L]                       encoding(4 bytes) = 49 0f be c0
0026h cmp ecx,eax                   ; CMP(Cmp_r32_rm32) [ECX,EAX]                          encoding(2 bytes) = 3b c8
0028h setle al                      ; SETLE(Setle_rm8) [AL]                                encoding(3 bytes) = 0f 9e c0
002bh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
002eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> withinBytes => new byte[47]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBE,0xC9,0x48,0x0F,0xBE,0xD2,0x3B,0xCA,0x7F,0x0F,0x2B,0xD1,0x49,0x0F,0xBE,0xC0,0x3B,0xD0,0x0F,0x9E,0xC0,0x0F,0xB6,0xC0,0xC3,0x2B,0xCA,0x49,0x0F,0xBE,0xC0,0x3B,0xC8,0x0F,0x9E,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool within(short lhs, short rhs, short epsilon)
; location: [7FFC872B5D30h, 7FFC872B5D5Eh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rcx,cx                  ; MOVSX(Movsx_r64_rm16) [RCX,CX]                       encoding(4 bytes) = 48 0f bf c9
0009h movsx rdx,dx                  ; MOVSX(Movsx_r64_rm16) [RDX,DX]                       encoding(4 bytes) = 48 0f bf d2
000dh cmp ecx,edx                   ; CMP(Cmp_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 3b ca
000fh jg short 0020h                ; JG(Jg_rel8_64) [20h:jmp64]                           encoding(2 bytes) = 7f 0f
0011h sub edx,ecx                   ; SUB(Sub_r32_rm32) [EDX,ECX]                          encoding(2 bytes) = 2b d1
0013h movsx rax,r8w                 ; MOVSX(Movsx_r64_rm16) [RAX,R8W]                      encoding(4 bytes) = 49 0f bf c0
0017h cmp edx,eax                   ; CMP(Cmp_r32_rm32) [EDX,EAX]                          encoding(2 bytes) = 3b d0
0019h setle al                      ; SETLE(Setle_rm8) [AL]                                encoding(3 bytes) = 0f 9e c0
001ch movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
001fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0020h sub ecx,edx                   ; SUB(Sub_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 2b ca
0022h movsx rax,r8w                 ; MOVSX(Movsx_r64_rm16) [RAX,R8W]                      encoding(4 bytes) = 49 0f bf c0
0026h cmp ecx,eax                   ; CMP(Cmp_r32_rm32) [ECX,EAX]                          encoding(2 bytes) = 3b c8
0028h setle al                      ; SETLE(Setle_rm8) [AL]                                encoding(3 bytes) = 0f 9e c0
002bh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
002eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> withinBytes => new byte[47]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBF,0xC9,0x48,0x0F,0xBF,0xD2,0x3B,0xCA,0x7F,0x0F,0x2B,0xD1,0x49,0x0F,0xBF,0xC0,0x3B,0xD0,0x0F,0x9E,0xC0,0x0F,0xB6,0xC0,0xC3,0x2B,0xCA,0x49,0x0F,0xBF,0xC0,0x3B,0xC8,0x0F,0x9E,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool within(ushort lhs, ushort rhs, ushort epsilon)
; location: [7FFC872B5D70h, 7FFC872B5D9Ch]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx ecx,cx                  ; MOVZX(Movzx_r32_rm16) [ECX,CX]                       encoding(3 bytes) = 0f b7 c9
0008h movzx edx,dx                  ; MOVZX(Movzx_r32_rm16) [EDX,DX]                       encoding(3 bytes) = 0f b7 d2
000bh cmp ecx,edx                   ; CMP(Cmp_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 3b ca
000dh jg short 001eh                ; JG(Jg_rel8_64) [1Eh:jmp64]                           encoding(2 bytes) = 7f 0f
000fh sub edx,ecx                   ; SUB(Sub_r32_rm32) [EDX,ECX]                          encoding(2 bytes) = 2b d1
0011h movzx eax,r8w                 ; MOVZX(Movzx_r32_rm16) [EAX,R8W]                      encoding(4 bytes) = 41 0f b7 c0
0015h cmp edx,eax                   ; CMP(Cmp_r32_rm32) [EDX,EAX]                          encoding(2 bytes) = 3b d0
0017h setle al                      ; SETLE(Setle_rm8) [AL]                                encoding(3 bytes) = 0f 9e c0
001ah movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
001dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
001eh sub ecx,edx                   ; SUB(Sub_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 2b ca
0020h movzx eax,r8w                 ; MOVZX(Movzx_r32_rm16) [EAX,R8W]                      encoding(4 bytes) = 41 0f b7 c0
0024h cmp ecx,eax                   ; CMP(Cmp_r32_rm32) [ECX,EAX]                          encoding(2 bytes) = 3b c8
0026h setle al                      ; SETLE(Setle_rm8) [AL]                                encoding(3 bytes) = 0f 9e c0
0029h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
002ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> withinBytes => new byte[45]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB7,0xC9,0x0F,0xB7,0xD2,0x3B,0xCA,0x7F,0x0F,0x2B,0xD1,0x41,0x0F,0xB7,0xC0,0x3B,0xD0,0x0F,0x9E,0xC0,0x0F,0xB6,0xC0,0xC3,0x2B,0xCA,0x41,0x0F,0xB7,0xC0,0x3B,0xC8,0x0F,0x9E,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool within(int lhs, int rhs, int epsilon)
; location: [7FFC872B5DB0h, 7FFC872B5DD0h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h cmp ecx,edx                   ; CMP(Cmp_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 3b ca
0007h jg short 0015h                ; JG(Jg_rel8_64) [15h:jmp64]                           encoding(2 bytes) = 7f 0c
0009h sub edx,ecx                   ; SUB(Sub_r32_rm32) [EDX,ECX]                          encoding(2 bytes) = 2b d1
000bh cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
000eh setle al                      ; SETLE(Setle_rm8) [AL]                                encoding(3 bytes) = 0f 9e c0
0011h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0014h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0015h sub ecx,edx                   ; SUB(Sub_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 2b ca
0017h cmp ecx,r8d                   ; CMP(Cmp_r32_rm32) [ECX,R8D]                          encoding(3 bytes) = 41 3b c8
001ah setle al                      ; SETLE(Setle_rm8) [AL]                                encoding(3 bytes) = 0f 9e c0
001dh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0020h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> withinBytes => new byte[33]{0x0F,0x1F,0x44,0x00,0x00,0x3B,0xCA,0x7F,0x0C,0x2B,0xD1,0x41,0x3B,0xD0,0x0F,0x9E,0xC0,0x0F,0xB6,0xC0,0xC3,0x2B,0xCA,0x41,0x3B,0xC8,0x0F,0x9E,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool within(uint lhs, uint rhs, uint epsilon)
; location: [7FFC872B5DF0h, 7FFC872B5E10h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h cmp ecx,edx                   ; CMP(Cmp_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 3b ca
0007h ja short 0015h                ; JA(Ja_rel8_64) [15h:jmp64]                           encoding(2 bytes) = 77 0c
0009h sub edx,ecx                   ; SUB(Sub_r32_rm32) [EDX,ECX]                          encoding(2 bytes) = 2b d1
000bh cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
000eh setbe al                      ; SETBE(Setbe_rm8) [AL]                                encoding(3 bytes) = 0f 96 c0
0011h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0014h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0015h sub ecx,edx                   ; SUB(Sub_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 2b ca
0017h cmp ecx,r8d                   ; CMP(Cmp_r32_rm32) [ECX,R8D]                          encoding(3 bytes) = 41 3b c8
001ah setbe al                      ; SETBE(Setbe_rm8) [AL]                                encoding(3 bytes) = 0f 96 c0
001dh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0020h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> withinBytes => new byte[33]{0x0F,0x1F,0x44,0x00,0x00,0x3B,0xCA,0x77,0x0C,0x2B,0xD1,0x41,0x3B,0xD0,0x0F,0x96,0xC0,0x0F,0xB6,0xC0,0xC3,0x2B,0xCA,0x41,0x3B,0xC8,0x0F,0x96,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool within(long lhs, long rhs, long epsilon)
; location: [7FFC872B5E30h, 7FFC872B5E53h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h cmp rcx,rdx                   ; CMP(Cmp_r64_rm64) [RCX,RDX]                          encoding(3 bytes) = 48 3b ca
0008h jg short 0017h                ; JG(Jg_rel8_64) [17h:jmp64]                           encoding(2 bytes) = 7f 0d
000ah sub rdx,rcx                   ; SUB(Sub_r64_rm64) [RDX,RCX]                          encoding(3 bytes) = 48 2b d1
000dh cmp rdx,r8                    ; CMP(Cmp_r64_rm64) [RDX,R8]                           encoding(3 bytes) = 49 3b d0
0010h setle al                      ; SETLE(Setle_rm8) [AL]                                encoding(3 bytes) = 0f 9e c0
0013h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0016h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0017h sub rcx,rdx                   ; SUB(Sub_r64_rm64) [RCX,RDX]                          encoding(3 bytes) = 48 2b ca
001ah cmp rcx,r8                    ; CMP(Cmp_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 3b c8
001dh setle al                      ; SETLE(Setle_rm8) [AL]                                encoding(3 bytes) = 0f 9e c0
0020h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0023h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> withinBytes => new byte[36]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x3B,0xCA,0x7F,0x0D,0x48,0x2B,0xD1,0x49,0x3B,0xD0,0x0F,0x9E,0xC0,0x0F,0xB6,0xC0,0xC3,0x48,0x2B,0xCA,0x49,0x3B,0xC8,0x0F,0x9E,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool within(ulong lhs, ulong rhs, ulong epsilon)
; location: [7FFC872B5E70h, 7FFC872B5E93h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h cmp rcx,rdx                   ; CMP(Cmp_r64_rm64) [RCX,RDX]                          encoding(3 bytes) = 48 3b ca
0008h ja short 0017h                ; JA(Ja_rel8_64) [17h:jmp64]                           encoding(2 bytes) = 77 0d
000ah sub rdx,rcx                   ; SUB(Sub_r64_rm64) [RDX,RCX]                          encoding(3 bytes) = 48 2b d1
000dh cmp rdx,r8                    ; CMP(Cmp_r64_rm64) [RDX,R8]                           encoding(3 bytes) = 49 3b d0
0010h setbe al                      ; SETBE(Setbe_rm8) [AL]                                encoding(3 bytes) = 0f 96 c0
0013h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0016h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0017h sub rcx,rdx                   ; SUB(Sub_r64_rm64) [RCX,RDX]                          encoding(3 bytes) = 48 2b ca
001ah cmp rcx,r8                    ; CMP(Cmp_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 3b c8
001dh setbe al                      ; SETBE(Setbe_rm8) [AL]                                encoding(3 bytes) = 0f 96 c0
0020h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0023h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> withinBytes => new byte[36]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x3B,0xCA,0x77,0x0D,0x48,0x2B,0xD1,0x49,0x3B,0xD0,0x0F,0x96,0xC0,0x0F,0xB6,0xC0,0xC3,0x48,0x2B,0xCA,0x49,0x3B,0xC8,0x0F,0x96,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool within(float lhs, float rhs, float epsilon)
; location: [7FFC872B5EB0h, 7FFC872B5ED8h]
0000h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0003h xchg ax,ax                    ; NOP(Nopw)                                            encoding(2 bytes) = 66 90
0005h vucomiss xmm0,xmm1            ; VUCOMISS(VEX_Vucomiss_xmm_xmmm32) [XMM0,XMM1]        encoding(VEX, 4 bytes) = c5 f8 2e c1
0009h ja short 001ah                ; JA(Ja_rel8_64) [1Ah:jmp64]                           encoding(2 bytes) = 77 0f
000bh vsubss xmm1,xmm1,xmm0         ; VSUBSS(VEX_Vsubss_xmm_xmm_xmmm32) [XMM1,XMM1,XMM0]   encoding(VEX, 4 bytes) = c5 f2 5c c8
000fh vucomiss xmm2,xmm1            ; VUCOMISS(VEX_Vucomiss_xmm_xmmm32) [XMM2,XMM1]        encoding(VEX, 4 bytes) = c5 f8 2e d1
0013h setae al                      ; SETAE(Setae_rm8) [AL]                                encoding(3 bytes) = 0f 93 c0
0016h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0019h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
001ah vsubss xmm0,xmm0,xmm1         ; VSUBSS(VEX_Vsubss_xmm_xmm_xmmm32) [XMM0,XMM0,XMM1]   encoding(VEX, 4 bytes) = c5 fa 5c c1
001eh vucomiss xmm2,xmm0            ; VUCOMISS(VEX_Vucomiss_xmm_xmmm32) [XMM2,XMM0]        encoding(VEX, 4 bytes) = c5 f8 2e d0
0022h setae al                      ; SETAE(Setae_rm8) [AL]                                encoding(3 bytes) = 0f 93 c0
0025h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0028h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> withinBytes => new byte[41]{0xC5,0xF8,0x77,0x66,0x90,0xC5,0xF8,0x2E,0xC1,0x77,0x0F,0xC5,0xF2,0x5C,0xC8,0xC5,0xF8,0x2E,0xD1,0x0F,0x93,0xC0,0x0F,0xB6,0xC0,0xC3,0xC5,0xFA,0x5C,0xC1,0xC5,0xF8,0x2E,0xD0,0x0F,0x93,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool within(double lhs, double rhs, double epsilon)
; location: [7FFC872B5EF0h, 7FFC872B5F18h]
0000h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0003h xchg ax,ax                    ; NOP(Nopw)                                            encoding(2 bytes) = 66 90
0005h vucomisd xmm0,xmm1            ; VUCOMISD(VEX_Vucomisd_xmm_xmmm64) [XMM0,XMM1]        encoding(VEX, 4 bytes) = c5 f9 2e c1
0009h ja short 001ah                ; JA(Ja_rel8_64) [1Ah:jmp64]                           encoding(2 bytes) = 77 0f
000bh vsubsd xmm1,xmm1,xmm0         ; VSUBSD(VEX_Vsubsd_xmm_xmm_xmmm64) [XMM1,XMM1,XMM0]   encoding(VEX, 4 bytes) = c5 f3 5c c8
000fh vucomisd xmm2,xmm1            ; VUCOMISD(VEX_Vucomisd_xmm_xmmm64) [XMM2,XMM1]        encoding(VEX, 4 bytes) = c5 f9 2e d1
0013h setae al                      ; SETAE(Setae_rm8) [AL]                                encoding(3 bytes) = 0f 93 c0
0016h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0019h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
001ah vsubsd xmm0,xmm0,xmm1         ; VSUBSD(VEX_Vsubsd_xmm_xmm_xmmm64) [XMM0,XMM0,XMM1]   encoding(VEX, 4 bytes) = c5 fb 5c c1
001eh vucomisd xmm2,xmm0            ; VUCOMISD(VEX_Vucomisd_xmm_xmmm64) [XMM2,XMM0]        encoding(VEX, 4 bytes) = c5 f9 2e d0
0022h setae al                      ; SETAE(Setae_rm8) [AL]                                encoding(3 bytes) = 0f 93 c0
0025h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0028h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> withinBytes => new byte[41]{0xC5,0xF8,0x77,0x66,0x90,0xC5,0xF9,0x2E,0xC1,0x77,0x0F,0xC5,0xF3,0x5C,0xC8,0xC5,0xF9,0x2E,0xD1,0x0F,0x93,0xC0,0x0F,0xB6,0xC0,0xC3,0xC5,0xFB,0x5C,0xC1,0xC5,0xF9,0x2E,0xD0,0x0F,0x93,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: byte width(byte lhs, byte rhs)
; location: [7FFC872B5F30h, 7FFC872B5F4Ah]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0008h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
000bh cmp eax,edx                   ; CMP(Cmp_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 3b c2
000dh jg short 0013h                ; JG(Jg_rel8_64) [13h:jmp64]                           encoding(2 bytes) = 7f 04
000fh sub edx,eax                   ; SUB(Sub_r32_rm32) [EDX,EAX]                          encoding(2 bytes) = 2b d0
0011h jmp short 0017h               ; JMP(Jmp_rel8_64) [17h:jmp64]                         encoding(2 bytes) = eb 04
0013h sub eax,edx                   ; SUB(Sub_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 2b c2
0015h mov edx,eax                   ; MOV(Mov_r32_rm32) [EDX,EAX]                          encoding(2 bytes) = 8b d0
0017h movzx eax,dl                  ; MOVZX(Movzx_r32_rm8) [EAX,DL]                        encoding(3 bytes) = 0f b6 c2
001ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> widthBytes => new byte[27]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC1,0x0F,0xB6,0xD2,0x3B,0xC2,0x7F,0x04,0x2B,0xD0,0xEB,0x04,0x2B,0xC2,0x8B,0xD0,0x0F,0xB6,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ushort width(sbyte lhs, sbyte rhs)
; location: [7FFC872B5F60h, 7FFC872B5F7Ch]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cl                  ; MOVSX(Movsx_r64_rm8) [RAX,CL]                        encoding(4 bytes) = 48 0f be c1
0009h movsx rdx,dl                  ; MOVSX(Movsx_r64_rm8) [RDX,DL]                        encoding(4 bytes) = 48 0f be d2
000dh cmp eax,edx                   ; CMP(Cmp_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 3b c2
000fh jg short 0015h                ; JG(Jg_rel8_64) [15h:jmp64]                           encoding(2 bytes) = 7f 04
0011h sub edx,eax                   ; SUB(Sub_r32_rm32) [EDX,EAX]                          encoding(2 bytes) = 2b d0
0013h jmp short 0019h               ; JMP(Jmp_rel8_64) [19h:jmp64]                         encoding(2 bytes) = eb 04
0015h sub eax,edx                   ; SUB(Sub_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 2b c2
0017h mov edx,eax                   ; MOV(Mov_r32_rm32) [EDX,EAX]                          encoding(2 bytes) = 8b d0
0019h movzx eax,dx                  ; MOVZX(Movzx_r32_rm16) [EAX,DX]                       encoding(3 bytes) = 0f b7 c2
001ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> widthBytes => new byte[29]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBE,0xC1,0x48,0x0F,0xBE,0xD2,0x3B,0xC2,0x7F,0x04,0x2B,0xD0,0xEB,0x04,0x2B,0xC2,0x8B,0xD0,0x0F,0xB7,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: uint width(short lhs, short rhs)
; location: [7FFC872B5F90h, 7FFC872B5FA8h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,dx                  ; MOVSX(Movsx_r64_rm16) [RAX,DX]                       encoding(4 bytes) = 48 0f bf c2
0009h movsx rdx,cx                  ; MOVSX(Movsx_r64_rm16) [RDX,CX]                       encoding(4 bytes) = 48 0f bf d1
000dh sub eax,edx                   ; SUB(Sub_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 2b c2
000fh mov edx,eax                   ; MOV(Mov_r32_rm32) [EDX,EAX]                          encoding(2 bytes) = 8b d0
0011h sar edx,1Fh                   ; SAR(Sar_rm32_imm8) [EDX,1fh:imm8]                    encoding(3 bytes) = c1 fa 1f
0014h add eax,edx                   ; ADD(Add_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 03 c2
0016h xor eax,edx                   ; XOR(Xor_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 33 c2
0018h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> widthBytes => new byte[25]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBF,0xC2,0x48,0x0F,0xBF,0xD1,0x2B,0xC2,0x8B,0xD0,0xC1,0xFA,0x1F,0x03,0xC2,0x33,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ulong width(int lhs, int rhs)
; location: [7FFC872B5FC0h, 7FFC872B5FDBh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsxd rax,edx                ; MOVSXD(Movsxd_r64_rm32) [RAX,EDX]                    encoding(3 bytes) = 48 63 c2
0008h movsxd rdx,ecx                ; MOVSXD(Movsxd_r64_rm32) [RDX,ECX]                    encoding(3 bytes) = 48 63 d1
000bh sub rax,rdx                   ; SUB(Sub_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 2b c2
000eh mov rdx,rax                   ; MOV(Mov_r64_rm64) [RDX,RAX]                          encoding(3 bytes) = 48 8b d0
0011h sar rdx,3Fh                   ; SAR(Sar_rm64_imm8) [RDX,3fh:imm8]                    encoding(4 bytes) = 48 c1 fa 3f
0015h add rax,rdx                   ; ADD(Add_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 03 c2
0018h xor rax,rdx                   ; XOR(Xor_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 33 c2
001bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> widthBytes => new byte[28]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x63,0xC2,0x48,0x63,0xD1,0x48,0x2B,0xC2,0x48,0x8B,0xD0,0x48,0xC1,0xFA,0x3F,0x48,0x03,0xC2,0x48,0x33,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ulong width(long lhs, long rhs)
; location: [7FFC872B5FF0h, 7FFC872B6005h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h sub rdx,rcx                   ; SUB(Sub_r64_rm64) [RDX,RCX]                          encoding(3 bytes) = 48 2b d1
0008h mov rax,rdx                   ; MOV(Mov_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 8b c2
000bh sar rax,3Fh                   ; SAR(Sar_rm64_imm8) [RAX,3fh:imm8]                    encoding(4 bytes) = 48 c1 f8 3f
000fh add rdx,rax                   ; ADD(Add_r64_rm64) [RDX,RAX]                          encoding(3 bytes) = 48 03 d0
0012h xor rax,rdx                   ; XOR(Xor_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 33 c2
0015h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> widthBytes => new byte[22]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x2B,0xD1,0x48,0x8B,0xC2,0x48,0xC1,0xF8,0x3F,0x48,0x03,0xD0,0x48,0x33,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ushort width(ushort lhs, ushort rhs)
; location: [7FFC872B6020h, 7FFC872B603Ah]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cx                  ; MOVZX(Movzx_r32_rm16) [EAX,CX]                       encoding(3 bytes) = 0f b7 c1
0008h movzx edx,dx                  ; MOVZX(Movzx_r32_rm16) [EDX,DX]                       encoding(3 bytes) = 0f b7 d2
000bh cmp eax,edx                   ; CMP(Cmp_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 3b c2
000dh jg short 0013h                ; JG(Jg_rel8_64) [13h:jmp64]                           encoding(2 bytes) = 7f 04
000fh sub edx,eax                   ; SUB(Sub_r32_rm32) [EDX,EAX]                          encoding(2 bytes) = 2b d0
0011h jmp short 0017h               ; JMP(Jmp_rel8_64) [17h:jmp64]                         encoding(2 bytes) = eb 04
0013h sub eax,edx                   ; SUB(Sub_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 2b c2
0015h mov edx,eax                   ; MOV(Mov_r32_rm32) [EDX,EAX]                          encoding(2 bytes) = 8b d0
0017h movzx eax,dx                  ; MOVZX(Movzx_r32_rm16) [EAX,DX]                       encoding(3 bytes) = 0f b7 c2
001ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> widthBytes => new byte[27]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB7,0xC1,0x0F,0xB7,0xD2,0x3B,0xC2,0x7F,0x04,0x2B,0xD0,0xEB,0x04,0x2B,0xC2,0x8B,0xD0,0x0F,0xB7,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: uint width(uint lhs, uint rhs)
; location: [7FFC872B6050h, 7FFC872B6062h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h cmp ecx,edx                   ; CMP(Cmp_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 3b ca
0007h ja short 000eh                ; JA(Ja_rel8_64) [Eh:jmp64]                            encoding(2 bytes) = 77 05
0009h mov eax,edx                   ; MOV(Mov_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 8b c2
000bh sub eax,ecx                   ; SUB(Sub_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 2b c1
000dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
000eh sub ecx,edx                   ; SUB(Sub_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 2b ca
0010h mov eax,ecx                   ; MOV(Mov_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 8b c1
0012h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> widthBytes => new byte[19]{0x0F,0x1F,0x44,0x00,0x00,0x3B,0xCA,0x77,0x05,0x8B,0xC2,0x2B,0xC1,0xC3,0x2B,0xCA,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ulong width(ulong lhs, ulong rhs)
; location: [7FFC872B6080h, 7FFC872B6097h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h cmp rcx,rdx                   ; CMP(Cmp_r64_rm64) [RCX,RDX]                          encoding(3 bytes) = 48 3b ca
0008h ja short 0011h                ; JA(Ja_rel8_64) [11h:jmp64]                           encoding(2 bytes) = 77 07
000ah mov rax,rdx                   ; MOV(Mov_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 8b c2
000dh sub rax,rcx                   ; SUB(Sub_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 2b c1
0010h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0011h sub rcx,rdx                   ; SUB(Sub_r64_rm64) [RCX,RDX]                          encoding(3 bytes) = 48 2b ca
0014h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0017h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> widthBytes => new byte[24]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x3B,0xCA,0x77,0x07,0x48,0x8B,0xC2,0x48,0x2B,0xC1,0xC3,0x48,0x2B,0xCA,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: double width(float lhs, float rhs)
; location: [7FFC872B60B0h, 7FFC872B60CDh]
0000h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0003h xchg ax,ax                    ; NOP(Nopw)                                            encoding(2 bytes) = 66 90
0005h vcvtss2sd xmm1,xmm1,xmm1      ; VCVTSS2SD(VEX_Vcvtss2sd_xmm_xmm_xmmm32) [XMM1,XMM1,XMM1] encoding(VEX, 4 bytes) = c5 f2 5a c9
0009h vcvtss2sd xmm0,xmm0,xmm0      ; VCVTSS2SD(VEX_Vcvtss2sd_xmm_xmm_xmmm32) [XMM0,XMM0,XMM0] encoding(VEX, 4 bytes) = c5 fa 5a c0
000dh vsubsd xmm1,xmm1,xmm0         ; VSUBSD(VEX_Vsubsd_xmm_xmm_xmmm64) [XMM1,XMM1,XMM0]   encoding(VEX, 4 bytes) = c5 f3 5c c8
0011h vmovsd xmm0,qword ptr [7FFC872B60D8h]; VMOVSD(VEX_Vmovsd_xmm_m64) [XMM0,mem(Float64,RIP:br,DS:sr)] encoding(VEX, 8 bytes) = c5 fb 10 05 0f 00 00 00
0019h vandps xmm0,xmm0,xmm1         ; VANDPS(VEX_Vandps_xmm_xmm_xmmm128) [XMM0,XMM0,XMM1]  encoding(VEX, 4 bytes) = c5 f8 54 c1
001dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> widthBytes => new byte[30]{0xC5,0xF8,0x77,0x66,0x90,0xC5,0xF2,0x5A,0xC9,0xC5,0xFA,0x5A,0xC0,0xC5,0xF3,0x5C,0xC8,0xC5,0xFB,0x10,0x05,0x0F,0x00,0x00,0x00,0xC5,0xF8,0x54,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: double width(double lhs, double rhs)
; location: [7FFC872B60F0h, 7FFC872B6105h]
0000h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0003h xchg ax,ax                    ; NOP(Nopw)                                            encoding(2 bytes) = 66 90
0005h vsubsd xmm1,xmm1,xmm0         ; VSUBSD(VEX_Vsubsd_xmm_xmm_xmmm64) [XMM1,XMM1,XMM0]   encoding(VEX, 4 bytes) = c5 f3 5c c8
0009h vmovsd xmm0,qword ptr [7FFC872B6110h]; VMOVSD(VEX_Vmovsd_xmm_m64) [XMM0,mem(Float64,RIP:br,DS:sr)] encoding(VEX, 8 bytes) = c5 fb 10 05 0f 00 00 00
0011h vandps xmm0,xmm0,xmm1         ; VANDPS(VEX_Vandps_xmm_xmm_xmmm128) [XMM0,XMM0,XMM1]  encoding(VEX, 4 bytes) = c5 f8 54 c1
0015h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> widthBytes => new byte[22]{0xC5,0xF8,0x77,0x66,0x90,0xC5,0xF3,0x5C,0xC8,0xC5,0xFB,0x10,0x05,0x0F,0x00,0x00,0x00,0xC5,0xF8,0x54,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: sbyte xor(sbyte lhs, sbyte rhs)
; location: [7FFC872B6130h, 7FFC872B6143h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cl                  ; MOVSX(Movsx_r64_rm8) [RAX,CL]                        encoding(4 bytes) = 48 0f be c1
0009h movsx rdx,dl                  ; MOVSX(Movsx_r64_rm8) [RDX,DL]                        encoding(4 bytes) = 48 0f be d2
000dh xor eax,edx                   ; XOR(Xor_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 33 c2
000fh movsx rax,al                  ; MOVSX(Movsx_r64_rm8) [RAX,AL]                        encoding(4 bytes) = 48 0f be c0
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> xorBytes => new byte[20]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBE,0xC1,0x48,0x0F,0xBE,0xD2,0x33,0xC2,0x48,0x0F,0xBE,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: byte xor(byte lhs, byte rhs)
; location: [7FFC872B6160h, 7FFC872B6170h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0008h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
000bh xor eax,edx                   ; XOR(Xor_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 33 c2
000dh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0010h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> xorBytes => new byte[17]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC1,0x0F,0xB6,0xD2,0x33,0xC2,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: short xor(short lhs, short rhs)
; location: [7FFC872B6190h, 7FFC872B61A3h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cx                  ; MOVSX(Movsx_r64_rm16) [RAX,CX]                       encoding(4 bytes) = 48 0f bf c1
0009h movsx rdx,dx                  ; MOVSX(Movsx_r64_rm16) [RDX,DX]                       encoding(4 bytes) = 48 0f bf d2
000dh xor eax,edx                   ; XOR(Xor_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 33 c2
000fh movsx rax,ax                  ; MOVSX(Movsx_r64_rm16) [RAX,AX]                       encoding(4 bytes) = 48 0f bf c0
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> xorBytes => new byte[20]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBF,0xC1,0x48,0x0F,0xBF,0xD2,0x33,0xC2,0x48,0x0F,0xBF,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ushort xor(ushort lhs, ushort rhs)
; location: [7FFC872B61C0h, 7FFC872B61D0h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cx                  ; MOVZX(Movzx_r32_rm16) [EAX,CX]                       encoding(3 bytes) = 0f b7 c1
0008h movzx edx,dx                  ; MOVZX(Movzx_r32_rm16) [EDX,DX]                       encoding(3 bytes) = 0f b7 d2
000bh xor eax,edx                   ; XOR(Xor_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 33 c2
000dh movzx eax,ax                  ; MOVZX(Movzx_r32_rm16) [EAX,AX]                       encoding(3 bytes) = 0f b7 c0
0010h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> xorBytes => new byte[17]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB7,0xC1,0x0F,0xB7,0xD2,0x33,0xC2,0x0F,0xB7,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: int xor(int lhs, int rhs)
; location: [7FFC872B61F0h, 7FFC872B61F9h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov eax,ecx                   ; MOV(Mov_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 8b c1
0007h xor eax,edx                   ; XOR(Xor_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 33 c2
0009h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> xorBytes => new byte[10]{0x0F,0x1F,0x44,0x00,0x00,0x8B,0xC1,0x33,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: uint xor(uint lhs, uint rhs)
; location: [7FFC872B6210h, 7FFC872B6219h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov eax,ecx                   ; MOV(Mov_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 8b c1
0007h xor eax,edx                   ; XOR(Xor_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 33 c2
0009h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> xorBytes => new byte[10]{0x0F,0x1F,0x44,0x00,0x00,0x8B,0xC1,0x33,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: long xor(long lhs, long rhs)
; location: [7FFC872B6230h, 7FFC872B623Bh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0008h xor rax,rdx                   ; XOR(Xor_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 33 c2
000bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> xorBytes => new byte[12]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0xC1,0x48,0x33,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ulong xor(ulong lhs, ulong rhs)
; location: [7FFC872B6250h, 7FFC872B625Bh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0008h xor rax,rdx                   ; XOR(Xor_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 33 c2
000bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> xorBytes => new byte[12]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0xC1,0x48,0x33,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref sbyte xor(ref sbyte lhs, sbyte rhs)
; location: [7FFC872B6270h, 7FFC872B627Eh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,dl                  ; MOVSX(Movsx_r64_rm8) [RAX,DL]                        encoding(4 bytes) = 48 0f be c2
0009h xor [rcx],al                  ; XOR(Xor_rm8_r8) [mem(8u,RCX:br,DS:sr),AL]            encoding(2 bytes) = 30 01
000bh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> xorBytes => new byte[15]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBE,0xC2,0x30,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref byte xor(ref byte lhs, byte rhs)
; location: [7FFC872B6290h, 7FFC872B629Dh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,dl                  ; MOVZX(Movzx_r32_rm8) [EAX,DL]                        encoding(3 bytes) = 0f b6 c2
0008h xor [rcx],al                  ; XOR(Xor_rm8_r8) [mem(8u,RCX:br,DS:sr),AL]            encoding(2 bytes) = 30 01
000ah mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> xorBytes => new byte[14]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC2,0x30,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref short xor(ref short lhs, short rhs)
; location: [7FFC872B62B0h, 7FFC872B62BFh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,dx                  ; MOVSX(Movsx_r64_rm16) [RAX,DX]                       encoding(4 bytes) = 48 0f bf c2
0009h xor [rcx],ax                  ; XOR(Xor_rm16_r16) [mem(16u,RCX:br,DS:sr),AX]         encoding(3 bytes) = 66 31 01
000ch mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> xorBytes => new byte[16]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBF,0xC2,0x66,0x31,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref ushort xor(ref ushort lhs, ushort rhs)
; location: [7FFC872B62D0h, 7FFC872B62DEh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,dx                  ; MOVZX(Movzx_r32_rm16) [EAX,DX]                       encoding(3 bytes) = 0f b7 c2
0008h xor [rcx],ax                  ; XOR(Xor_rm16_r16) [mem(16u,RCX:br,DS:sr),AX]         encoding(3 bytes) = 66 31 01
000bh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> xorBytes => new byte[15]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB7,0xC2,0x66,0x31,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref int xor(ref int lhs, int rhs)
; location: [7FFC872B62F0h, 7FFC872B62FAh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h xor [rcx],edx                 ; XOR(Xor_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(2 bytes) = 31 11
0007h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> xorBytes => new byte[11]{0x0F,0x1F,0x44,0x00,0x00,0x31,0x11,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref uint xor(ref uint lhs, uint rhs)
; location: [7FFC872B6310h, 7FFC872B631Ah]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h xor [rcx],edx                 ; XOR(Xor_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(2 bytes) = 31 11
0007h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> xorBytes => new byte[11]{0x0F,0x1F,0x44,0x00,0x00,0x31,0x11,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref long xor(ref long lhs, long rhs)
; location: [7FFC872B6330h, 7FFC872B633Bh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h xor [rcx],rdx                 ; XOR(Xor_rm64_r64) [mem(64u,RCX:br,DS:sr),RDX]        encoding(3 bytes) = 48 31 11
0008h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> xorBytes => new byte[12]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x31,0x11,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref ulong xor(ref ulong lhs, ulong rhs)
; location: [7FFC872B6350h, 7FFC872B635Bh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h xor [rcx],rdx                 ; XOR(Xor_rm64_r64) [mem(64u,RCX:br,DS:sr),RDX]        encoding(3 bytes) = 48 31 11
0008h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> xorBytes => new byte[12]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x31,0x11,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref sbyte xor(in sbyte lhs, in sbyte rhs, ref sbyte dst)
; location: [7FFC872B6370h, 7FFC872B6385h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,byte ptr [rcx]      ; MOVSX(Movsx_r64_rm8) [RAX,mem(8i,RCX:br,DS:sr)]      encoding(4 bytes) = 48 0f be 01
0009h movsx rdx,byte ptr [rdx]      ; MOVSX(Movsx_r64_rm8) [RDX,mem(8i,RDX:br,DS:sr)]      encoding(4 bytes) = 48 0f be 12
000dh xor eax,edx                   ; XOR(Xor_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 33 c2
000fh mov [r8],al                   ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),AL]             encoding(3 bytes) = 41 88 00
0012h mov rax,r8                    ; MOV(Mov_r64_rm64) [RAX,R8]                           encoding(3 bytes) = 49 8b c0
0015h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> xorBytes => new byte[22]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBE,0x01,0x48,0x0F,0xBE,0x12,0x33,0xC2,0x41,0x88,0x00,0x49,0x8B,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref byte xor(in byte lhs, in byte rhs, ref byte dst)
; location: [7FFC872B63A0h, 7FFC872B63B3h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,byte ptr [rcx]      ; MOVZX(Movzx_r32_rm8) [EAX,mem(8u,RCX:br,DS:sr)]      encoding(3 bytes) = 0f b6 01
0008h movzx edx,byte ptr [rdx]      ; MOVZX(Movzx_r32_rm8) [EDX,mem(8u,RDX:br,DS:sr)]      encoding(3 bytes) = 0f b6 12
000bh xor eax,edx                   ; XOR(Xor_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 33 c2
000dh mov [r8],al                   ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),AL]             encoding(3 bytes) = 41 88 00
0010h mov rax,r8                    ; MOV(Mov_r64_rm64) [RAX,R8]                           encoding(3 bytes) = 49 8b c0
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> xorBytes => new byte[20]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0x01,0x0F,0xB6,0x12,0x33,0xC2,0x41,0x88,0x00,0x49,0x8B,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref short xor(in short lhs, in short rhs, ref short dst)
; location: [7FFC872B63D0h, 7FFC872B63E6h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,word ptr [rcx]      ; MOVSX(Movsx_r64_rm16) [RAX,mem(16i,RCX:br,DS:sr)]    encoding(4 bytes) = 48 0f bf 01
0009h movsx rdx,word ptr [rdx]      ; MOVSX(Movsx_r64_rm16) [RDX,mem(16i,RDX:br,DS:sr)]    encoding(4 bytes) = 48 0f bf 12
000dh xor eax,edx                   ; XOR(Xor_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 33 c2
000fh mov [r8],ax                   ; MOV(Mov_rm16_r16) [mem(16u,R8:br,DS:sr),AX]          encoding(4 bytes) = 66 41 89 00
0013h mov rax,r8                    ; MOV(Mov_r64_rm64) [RAX,R8]                           encoding(3 bytes) = 49 8b c0
0016h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> xorBytes => new byte[23]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBF,0x01,0x48,0x0F,0xBF,0x12,0x33,0xC2,0x66,0x41,0x89,0x00,0x49,0x8B,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref ushort xor(in ushort lhs, in ushort rhs, ref ushort dst)
; location: [7FFC872B6400h, 7FFC872B6414h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,word ptr [rcx]      ; MOVZX(Movzx_r32_rm16) [EAX,mem(16u,RCX:br,DS:sr)]    encoding(3 bytes) = 0f b7 01
0008h movzx edx,word ptr [rdx]      ; MOVZX(Movzx_r32_rm16) [EDX,mem(16u,RDX:br,DS:sr)]    encoding(3 bytes) = 0f b7 12
000bh xor eax,edx                   ; XOR(Xor_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 33 c2
000dh mov [r8],ax                   ; MOV(Mov_rm16_r16) [mem(16u,R8:br,DS:sr),AX]          encoding(4 bytes) = 66 41 89 00
0011h mov rax,r8                    ; MOV(Mov_r64_rm64) [RAX,R8]                           encoding(3 bytes) = 49 8b c0
0014h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> xorBytes => new byte[21]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB7,0x01,0x0F,0xB7,0x12,0x33,0xC2,0x66,0x41,0x89,0x00,0x49,0x8B,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref int xor(in int lhs, in int rhs, ref int dst)
; location: [7FFC872B6430h, 7FFC872B643Fh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov eax,[rcx]                 ; MOV(Mov_r32_rm32) [EAX,mem(32u,RCX:br,DS:sr)]        encoding(2 bytes) = 8b 01
0007h xor eax,[rdx]                 ; XOR(Xor_r32_rm32) [EAX,mem(32u,RDX:br,DS:sr)]        encoding(2 bytes) = 33 02
0009h mov [r8],eax                  ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EAX]         encoding(3 bytes) = 41 89 00
000ch mov rax,r8                    ; MOV(Mov_r64_rm64) [RAX,R8]                           encoding(3 bytes) = 49 8b c0
000fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> xorBytes => new byte[16]{0x0F,0x1F,0x44,0x00,0x00,0x8B,0x01,0x33,0x02,0x41,0x89,0x00,0x49,0x8B,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref uint xor(in uint lhs, in uint rhs, ref uint dst)
; location: [7FFC872B6450h, 7FFC872B645Fh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov eax,[rcx]                 ; MOV(Mov_r32_rm32) [EAX,mem(32u,RCX:br,DS:sr)]        encoding(2 bytes) = 8b 01
0007h xor eax,[rdx]                 ; XOR(Xor_r32_rm32) [EAX,mem(32u,RDX:br,DS:sr)]        encoding(2 bytes) = 33 02
0009h mov [r8],eax                  ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EAX]         encoding(3 bytes) = 41 89 00
000ch mov rax,r8                    ; MOV(Mov_r64_rm64) [RAX,R8]                           encoding(3 bytes) = 49 8b c0
000fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> xorBytes => new byte[16]{0x0F,0x1F,0x44,0x00,0x00,0x8B,0x01,0x33,0x02,0x41,0x89,0x00,0x49,0x8B,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref long xor(in long lhs, in long rhs, ref long dst)
; location: [7FFC872B6470h, 7FFC872B6481h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,[rcx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 01
0008h xor rax,[rdx]                 ; XOR(Xor_r64_rm64) [RAX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 33 02
000bh mov [r8],rax                  ; MOV(Mov_rm64_r64) [mem(64u,R8:br,DS:sr),RAX]         encoding(3 bytes) = 49 89 00
000eh mov rax,r8                    ; MOV(Mov_r64_rm64) [RAX,R8]                           encoding(3 bytes) = 49 8b c0
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> xorBytes => new byte[18]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x01,0x48,0x33,0x02,0x49,0x89,0x00,0x49,0x8B,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref ulong xor(in ulong lhs, in ulong rhs, ref ulong dst)
; location: [7FFC872B64A0h, 7FFC872B64B1h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,[rcx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 01
0008h xor rax,[rdx]                 ; XOR(Xor_r64_rm64) [RAX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 33 02
000bh mov [r8],rax                  ; MOV(Mov_rm64_r64) [mem(64u,R8:br,DS:sr),RAX]         encoding(3 bytes) = 49 89 00
000eh mov rax,r8                    ; MOV(Mov_r64_rm64) [RAX,R8]                           encoding(3 bytes) = 49 8b c0
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> xorBytes => new byte[18]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x01,0x48,0x33,0x02,0x49,0x89,0x00,0x49,0x8B,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref float xor(in float lhs, in float rhs, ref float dst)
; location: [7FFC872B64D0h, 7FFC872B6509h]
0000h sub rsp,18h                   ; SUB(Sub_rm64_imm8) [RSP,18h:imm64]                   encoding(4 bytes) = 48 83 ec 18
0004h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0007h vmovss xmm0,dword ptr [rcx]   ; VMOVSS(VEX_Vmovss_xmm_m32) [XMM0,mem(Float32,RCX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 10 01
000bh vmovss dword ptr [rsp+14h],xmm0; VMOVSS(VEX_Vmovss_m32_xmm) [mem(Float32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 11 44 24 14
0011h mov eax,[rsp+14h]             ; MOV(Mov_r32_rm32) [EAX,mem(32u,RSP:br,SS:sr)]        encoding(4 bytes) = 8b 44 24 14
0015h vmovss xmm0,dword ptr [rdx]   ; VMOVSS(VEX_Vmovss_xmm_m32) [XMM0,mem(Float32,RDX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 10 02
0019h vmovss dword ptr [rsp+10h],xmm0; VMOVSS(VEX_Vmovss_m32_xmm) [mem(Float32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 11 44 24 10
001fh xor eax,[rsp+10h]             ; XOR(Xor_r32_rm32) [EAX,mem(32u,RSP:br,SS:sr)]        encoding(4 bytes) = 33 44 24 10
0023h mov [rsp+0Ch],eax             ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),EAX]        encoding(4 bytes) = 89 44 24 0c
0027h vmovss xmm0,dword ptr [rsp+0Ch]; VMOVSS(VEX_Vmovss_xmm_m32) [XMM0,mem(Float32,RSP:br,SS:sr)] encoding(VEX, 6 bytes) = c5 fa 10 44 24 0c
002dh vmovss dword ptr [r8],xmm0    ; VMOVSS(VEX_Vmovss_m32_xmm) [mem(Float32,R8:br,DS:sr),XMM0] encoding(VEX, 5 bytes) = c4 c1 7a 11 00
0032h mov rax,r8                    ; MOV(Mov_r64_rm64) [RAX,R8]                           encoding(3 bytes) = 49 8b c0
0035h add rsp,18h                   ; ADD(Add_rm64_imm8) [RSP,18h:imm64]                   encoding(4 bytes) = 48 83 c4 18
0039h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> xorBytes => new byte[58]{0x48,0x83,0xEC,0x18,0xC5,0xF8,0x77,0xC5,0xFA,0x10,0x01,0xC5,0xFA,0x11,0x44,0x24,0x14,0x8B,0x44,0x24,0x14,0xC5,0xFA,0x10,0x02,0xC5,0xFA,0x11,0x44,0x24,0x10,0x33,0x44,0x24,0x10,0x89,0x44,0x24,0x0C,0xC5,0xFA,0x10,0x44,0x24,0x0C,0xC4,0xC1,0x7A,0x11,0x00,0x49,0x8B,0xC0,0x48,0x83,0xC4,0x18,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref double xor(in double lhs, in double rhs, ref double dst)
; location: [7FFC872B6530h, 7FFC872B656Ah]
0000h sub rsp,18h                   ; SUB(Sub_rm64_imm8) [RSP,18h:imm64]                   encoding(4 bytes) = 48 83 ec 18
0004h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0007h vmovsd xmm0,qword ptr [rcx]   ; VMOVSD(VEX_Vmovsd_xmm_m64) [XMM0,mem(Float64,RCX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fb 10 01
000bh vmovsd qword ptr [rsp+10h],xmm0; VMOVSD(VEX_Vmovsd_m64_xmm) [mem(Float64,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fb 11 44 24 10
0011h mov rax,[rsp+10h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 10
0016h vmovsd xmm0,qword ptr [rdx]   ; VMOVSD(VEX_Vmovsd_xmm_m64) [XMM0,mem(Float64,RDX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fb 10 02
001ah vmovsd qword ptr [rsp+8],xmm0 ; VMOVSD(VEX_Vmovsd_m64_xmm) [mem(Float64,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fb 11 44 24 08
0020h xor rax,[rsp+8]               ; XOR(Xor_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 33 44 24 08
0025h mov [rsp],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(4 bytes) = 48 89 04 24
0029h vmovsd xmm0,qword ptr [rsp]   ; VMOVSD(VEX_Vmovsd_xmm_m64) [XMM0,mem(Float64,RSP:br,SS:sr)] encoding(VEX, 5 bytes) = c5 fb 10 04 24
002eh vmovsd qword ptr [r8],xmm0    ; VMOVSD(VEX_Vmovsd_m64_xmm) [mem(Float64,R8:br,DS:sr),XMM0] encoding(VEX, 5 bytes) = c4 c1 7b 11 00
0033h mov rax,r8                    ; MOV(Mov_r64_rm64) [RAX,R8]                           encoding(3 bytes) = 49 8b c0
0036h add rsp,18h                   ; ADD(Add_rm64_imm8) [RSP,18h:imm64]                   encoding(4 bytes) = 48 83 c4 18
003ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> xorBytes => new byte[59]{0x48,0x83,0xEC,0x18,0xC5,0xF8,0x77,0xC5,0xFB,0x10,0x01,0xC5,0xFB,0x11,0x44,0x24,0x10,0x48,0x8B,0x44,0x24,0x10,0xC5,0xFB,0x10,0x02,0xC5,0xFB,0x11,0x44,0x24,0x08,0x48,0x33,0x44,0x24,0x08,0x48,0x89,0x04,0x24,0xC5,0xFB,0x10,0x04,0x24,0xC4,0xC1,0x7B,0x11,0x00,0x49,0x8B,0xC0,0x48,0x83,0xC4,0x18,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: int or(int lhs, int rhs)
; location: [7FFC872B6590h, 7FFC872B6599h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov eax,ecx                   ; MOV(Mov_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 8b c1
0007h or eax,edx                    ; OR(Or_r32_rm32) [EAX,EDX]                            encoding(2 bytes) = 0b c2
0009h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> orBytes => new byte[10]{0x0F,0x1F,0x44,0x00,0x00,0x8B,0xC1,0x0B,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: uint or(uint lhs, uint rhs)
; location: [7FFC872B65B0h, 7FFC872B65B9h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov eax,ecx                   ; MOV(Mov_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 8b c1
0007h or eax,edx                    ; OR(Or_r32_rm32) [EAX,EDX]                            encoding(2 bytes) = 0b c2
0009h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> orBytes => new byte[10]{0x0F,0x1F,0x44,0x00,0x00,0x8B,0xC1,0x0B,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: long or(long lhs, long rhs)
; location: [7FFC872B65D0h, 7FFC872B65DBh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0008h or rax,rdx                    ; OR(Or_r64_rm64) [RAX,RDX]                            encoding(3 bytes) = 48 0b c2
000bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> orBytes => new byte[12]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0xC1,0x48,0x0B,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ulong or(ulong lhs, ulong rhs)
; location: [7FFC872B65F0h, 7FFC872B65FBh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0008h or rax,rdx                    ; OR(Or_r64_rm64) [RAX,RDX]                            encoding(3 bytes) = 48 0b c2
000bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> orBytes => new byte[12]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0xC1,0x48,0x0B,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: float or(float lhs, float rhs)
; location: [7FFC872B6610h, 7FFC872B6639h]
0000h sub rsp,18h                   ; SUB(Sub_rm64_imm8) [RSP,18h:imm64]                   encoding(4 bytes) = 48 83 ec 18
0004h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0007h vmovss dword ptr [rsp+14h],xmm0; VMOVSS(VEX_Vmovss_m32_xmm) [mem(Float32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 11 44 24 14
000dh mov eax,[rsp+14h]             ; MOV(Mov_r32_rm32) [EAX,mem(32u,RSP:br,SS:sr)]        encoding(4 bytes) = 8b 44 24 14
0011h vmovss dword ptr [rsp+10h],xmm1; VMOVSS(VEX_Vmovss_m32_xmm) [mem(Float32,RSP:br,SS:sr),XMM1] encoding(VEX, 6 bytes) = c5 fa 11 4c 24 10
0017h or eax,[rsp+10h]              ; OR(Or_r32_rm32) [EAX,mem(32u,RSP:br,SS:sr)]          encoding(4 bytes) = 0b 44 24 10
001bh mov [rsp+0Ch],eax             ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),EAX]        encoding(4 bytes) = 89 44 24 0c
001fh vmovss xmm0,dword ptr [rsp+0Ch]; VMOVSS(VEX_Vmovss_xmm_m32) [XMM0,mem(Float32,RSP:br,SS:sr)] encoding(VEX, 6 bytes) = c5 fa 10 44 24 0c
0025h add rsp,18h                   ; ADD(Add_rm64_imm8) [RSP,18h:imm64]                   encoding(4 bytes) = 48 83 c4 18
0029h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> orBytes => new byte[42]{0x48,0x83,0xEC,0x18,0xC5,0xF8,0x77,0xC5,0xFA,0x11,0x44,0x24,0x14,0x8B,0x44,0x24,0x14,0xC5,0xFA,0x11,0x4C,0x24,0x10,0x0B,0x44,0x24,0x10,0x89,0x44,0x24,0x0C,0xC5,0xFA,0x10,0x44,0x24,0x0C,0x48,0x83,0xC4,0x18,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: double or(double lhs, double rhs)
; location: [7FFC872B6660h, 7FFC872B668Ah]
0000h sub rsp,18h                   ; SUB(Sub_rm64_imm8) [RSP,18h:imm64]                   encoding(4 bytes) = 48 83 ec 18
0004h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0007h vmovsd qword ptr [rsp+10h],xmm0; VMOVSD(VEX_Vmovsd_m64_xmm) [mem(Float64,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fb 11 44 24 10
000dh mov rax,[rsp+10h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 10
0012h vmovsd qword ptr [rsp+8],xmm1 ; VMOVSD(VEX_Vmovsd_m64_xmm) [mem(Float64,RSP:br,SS:sr),XMM1] encoding(VEX, 6 bytes) = c5 fb 11 4c 24 08
0018h or rax,[rsp+8]                ; OR(Or_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]          encoding(5 bytes) = 48 0b 44 24 08
001dh mov [rsp],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(4 bytes) = 48 89 04 24
0021h vmovsd xmm0,qword ptr [rsp]   ; VMOVSD(VEX_Vmovsd_xmm_m64) [XMM0,mem(Float64,RSP:br,SS:sr)] encoding(VEX, 5 bytes) = c5 fb 10 04 24
0026h add rsp,18h                   ; ADD(Add_rm64_imm8) [RSP,18h:imm64]                   encoding(4 bytes) = 48 83 c4 18
002ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> orBytes => new byte[43]{0x48,0x83,0xEC,0x18,0xC5,0xF8,0x77,0xC5,0xFB,0x11,0x44,0x24,0x10,0x48,0x8B,0x44,0x24,0x10,0xC5,0xFB,0x11,0x4C,0x24,0x08,0x48,0x0B,0x44,0x24,0x08,0x48,0x89,0x04,0x24,0xC5,0xFB,0x10,0x04,0x24,0x48,0x83,0xC4,0x18,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref sbyte or(ref sbyte lhs, sbyte rhs)
; location: [7FFC872B66B0h, 7FFC872B66BEh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,dl                  ; MOVSX(Movsx_r64_rm8) [RAX,DL]                        encoding(4 bytes) = 48 0f be c2
0009h or [rcx],al                   ; OR(Or_rm8_r8) [mem(8u,RCX:br,DS:sr),AL]              encoding(2 bytes) = 08 01
000bh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> orBytes => new byte[15]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBE,0xC2,0x08,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref byte or(ref byte lhs, byte rhs)
; location: [7FFC872B66D0h, 7FFC872B66DDh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,dl                  ; MOVZX(Movzx_r32_rm8) [EAX,DL]                        encoding(3 bytes) = 0f b6 c2
0008h or [rcx],al                   ; OR(Or_rm8_r8) [mem(8u,RCX:br,DS:sr),AL]              encoding(2 bytes) = 08 01
000ah mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> orBytes => new byte[14]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC2,0x08,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref short or(ref short lhs, short rhs)
; location: [7FFC872B66F0h, 7FFC872B66FFh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,dx                  ; MOVSX(Movsx_r64_rm16) [RAX,DX]                       encoding(4 bytes) = 48 0f bf c2
0009h or [rcx],ax                   ; OR(Or_rm16_r16) [mem(16u,RCX:br,DS:sr),AX]           encoding(3 bytes) = 66 09 01
000ch mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> orBytes => new byte[16]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBF,0xC2,0x66,0x09,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref ushort or(ref ushort lhs, ushort rhs)
; location: [7FFC872B6710h, 7FFC872B671Eh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,dx                  ; MOVZX(Movzx_r32_rm16) [EAX,DX]                       encoding(3 bytes) = 0f b7 c2
0008h or [rcx],ax                   ; OR(Or_rm16_r16) [mem(16u,RCX:br,DS:sr),AX]           encoding(3 bytes) = 66 09 01
000bh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> orBytes => new byte[15]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB7,0xC2,0x66,0x09,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref int or(ref int lhs, int rhs)
; location: [7FFC872B6730h, 7FFC872B673Ah]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h or [rcx],edx                  ; OR(Or_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]          encoding(2 bytes) = 09 11
0007h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> orBytes => new byte[11]{0x0F,0x1F,0x44,0x00,0x00,0x09,0x11,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref uint or(ref uint lhs, uint rhs)
; location: [7FFC872B6750h, 7FFC872B675Ah]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h or [rcx],edx                  ; OR(Or_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]          encoding(2 bytes) = 09 11
0007h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> orBytes => new byte[11]{0x0F,0x1F,0x44,0x00,0x00,0x09,0x11,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref long or(ref long lhs, long rhs)
; location: [7FFC872B6770h, 7FFC872B677Bh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h or [rcx],rdx                  ; OR(Or_rm64_r64) [mem(64u,RCX:br,DS:sr),RDX]          encoding(3 bytes) = 48 09 11
0008h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> orBytes => new byte[12]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x09,0x11,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref ulong or(ref ulong lhs, ulong rhs)
; location: [7FFC872B6790h, 7FFC872B679Bh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h or [rcx],rdx                  ; OR(Or_rm64_r64) [mem(64u,RCX:br,DS:sr),RDX]          encoding(3 bytes) = 48 09 11
0008h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> orBytes => new byte[12]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x09,0x11,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref float or(ref float lhs, float rhs)
; location: [7FFC872B67B0h, 7FFC872B67E4h]
0000h sub rsp,18h                   ; SUB(Sub_rm64_imm8) [RSP,18h:imm64]                   encoding(4 bytes) = 48 83 ec 18
0004h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0007h vmovss xmm0,dword ptr [rcx]   ; VMOVSS(VEX_Vmovss_xmm_m32) [XMM0,mem(Float32,RCX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 10 01
000bh vmovss dword ptr [rsp+14h],xmm0; VMOVSS(VEX_Vmovss_m32_xmm) [mem(Float32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 11 44 24 14
0011h mov eax,[rsp+14h]             ; MOV(Mov_r32_rm32) [EAX,mem(32u,RSP:br,SS:sr)]        encoding(4 bytes) = 8b 44 24 14
0015h vmovss dword ptr [rsp+10h],xmm1; VMOVSS(VEX_Vmovss_m32_xmm) [mem(Float32,RSP:br,SS:sr),XMM1] encoding(VEX, 6 bytes) = c5 fa 11 4c 24 10
001bh or eax,[rsp+10h]              ; OR(Or_r32_rm32) [EAX,mem(32u,RSP:br,SS:sr)]          encoding(4 bytes) = 0b 44 24 10
001fh mov [rsp+0Ch],eax             ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),EAX]        encoding(4 bytes) = 89 44 24 0c
0023h vmovss xmm0,dword ptr [rsp+0Ch]; VMOVSS(VEX_Vmovss_xmm_m32) [XMM0,mem(Float32,RSP:br,SS:sr)] encoding(VEX, 6 bytes) = c5 fa 10 44 24 0c
0029h vmovss dword ptr [rcx],xmm0   ; VMOVSS(VEX_Vmovss_m32_xmm) [mem(Float32,RCX:br,DS:sr),XMM0] encoding(VEX, 4 bytes) = c5 fa 11 01
002dh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0030h add rsp,18h                   ; ADD(Add_rm64_imm8) [RSP,18h:imm64]                   encoding(4 bytes) = 48 83 c4 18
0034h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> orBytes => new byte[53]{0x48,0x83,0xEC,0x18,0xC5,0xF8,0x77,0xC5,0xFA,0x10,0x01,0xC5,0xFA,0x11,0x44,0x24,0x14,0x8B,0x44,0x24,0x14,0xC5,0xFA,0x11,0x4C,0x24,0x10,0x0B,0x44,0x24,0x10,0x89,0x44,0x24,0x0C,0xC5,0xFA,0x10,0x44,0x24,0x0C,0xC5,0xFA,0x11,0x01,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x18,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref double or(ref double lhs, double rhs)
; location: [7FFC872B6800h, 7FFC872B6835h]
0000h sub rsp,18h                   ; SUB(Sub_rm64_imm8) [RSP,18h:imm64]                   encoding(4 bytes) = 48 83 ec 18
0004h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0007h vmovsd xmm0,qword ptr [rcx]   ; VMOVSD(VEX_Vmovsd_xmm_m64) [XMM0,mem(Float64,RCX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fb 10 01
000bh vmovsd qword ptr [rsp+10h],xmm0; VMOVSD(VEX_Vmovsd_m64_xmm) [mem(Float64,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fb 11 44 24 10
0011h mov rax,[rsp+10h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 10
0016h vmovsd qword ptr [rsp+8],xmm1 ; VMOVSD(VEX_Vmovsd_m64_xmm) [mem(Float64,RSP:br,SS:sr),XMM1] encoding(VEX, 6 bytes) = c5 fb 11 4c 24 08
001ch or rax,[rsp+8]                ; OR(Or_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]          encoding(5 bytes) = 48 0b 44 24 08
0021h mov [rsp],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(4 bytes) = 48 89 04 24
0025h vmovsd xmm0,qword ptr [rsp]   ; VMOVSD(VEX_Vmovsd_xmm_m64) [XMM0,mem(Float64,RSP:br,SS:sr)] encoding(VEX, 5 bytes) = c5 fb 10 04 24
002ah vmovsd qword ptr [rcx],xmm0   ; VMOVSD(VEX_Vmovsd_m64_xmm) [mem(Float64,RCX:br,DS:sr),XMM0] encoding(VEX, 4 bytes) = c5 fb 11 01
002eh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0031h add rsp,18h                   ; ADD(Add_rm64_imm8) [RSP,18h:imm64]                   encoding(4 bytes) = 48 83 c4 18
0035h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> orBytes => new byte[54]{0x48,0x83,0xEC,0x18,0xC5,0xF8,0x77,0xC5,0xFB,0x10,0x01,0xC5,0xFB,0x11,0x44,0x24,0x10,0x48,0x8B,0x44,0x24,0x10,0xC5,0xFB,0x11,0x4C,0x24,0x08,0x48,0x0B,0x44,0x24,0x08,0x48,0x89,0x04,0x24,0xC5,0xFB,0x10,0x04,0x24,0xC5,0xFB,0x11,0x01,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x18,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref sbyte or(in sbyte lhs, in sbyte rhs, ref sbyte dst)
; location: [7FFC872B6850h, 7FFC872B6865h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,byte ptr [rcx]      ; MOVSX(Movsx_r64_rm8) [RAX,mem(8i,RCX:br,DS:sr)]      encoding(4 bytes) = 48 0f be 01
0009h movsx rdx,byte ptr [rdx]      ; MOVSX(Movsx_r64_rm8) [RDX,mem(8i,RDX:br,DS:sr)]      encoding(4 bytes) = 48 0f be 12
000dh or eax,edx                    ; OR(Or_r32_rm32) [EAX,EDX]                            encoding(2 bytes) = 0b c2
000fh mov [r8],al                   ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),AL]             encoding(3 bytes) = 41 88 00
0012h mov rax,r8                    ; MOV(Mov_r64_rm64) [RAX,R8]                           encoding(3 bytes) = 49 8b c0
0015h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> orBytes => new byte[22]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBE,0x01,0x48,0x0F,0xBE,0x12,0x0B,0xC2,0x41,0x88,0x00,0x49,0x8B,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref byte or(in byte lhs, in byte rhs, ref byte dst)
; location: [7FFC872B6880h, 7FFC872B6893h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,byte ptr [rcx]      ; MOVZX(Movzx_r32_rm8) [EAX,mem(8u,RCX:br,DS:sr)]      encoding(3 bytes) = 0f b6 01
0008h movzx edx,byte ptr [rdx]      ; MOVZX(Movzx_r32_rm8) [EDX,mem(8u,RDX:br,DS:sr)]      encoding(3 bytes) = 0f b6 12
000bh or eax,edx                    ; OR(Or_r32_rm32) [EAX,EDX]                            encoding(2 bytes) = 0b c2
000dh mov [r8],al                   ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),AL]             encoding(3 bytes) = 41 88 00
0010h mov rax,r8                    ; MOV(Mov_r64_rm64) [RAX,R8]                           encoding(3 bytes) = 49 8b c0
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> orBytes => new byte[20]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0x01,0x0F,0xB6,0x12,0x0B,0xC2,0x41,0x88,0x00,0x49,0x8B,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref short or(in short lhs, in short rhs, ref short dst)
; location: [7FFC872B68B0h, 7FFC872B68C6h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,word ptr [rcx]      ; MOVSX(Movsx_r64_rm16) [RAX,mem(16i,RCX:br,DS:sr)]    encoding(4 bytes) = 48 0f bf 01
0009h movsx rdx,word ptr [rdx]      ; MOVSX(Movsx_r64_rm16) [RDX,mem(16i,RDX:br,DS:sr)]    encoding(4 bytes) = 48 0f bf 12
000dh or eax,edx                    ; OR(Or_r32_rm32) [EAX,EDX]                            encoding(2 bytes) = 0b c2
000fh mov [r8],ax                   ; MOV(Mov_rm16_r16) [mem(16u,R8:br,DS:sr),AX]          encoding(4 bytes) = 66 41 89 00
0013h mov rax,r8                    ; MOV(Mov_r64_rm64) [RAX,R8]                           encoding(3 bytes) = 49 8b c0
0016h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> orBytes => new byte[23]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBF,0x01,0x48,0x0F,0xBF,0x12,0x0B,0xC2,0x66,0x41,0x89,0x00,0x49,0x8B,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref ushort or(in ushort lhs, in ushort rhs, ref ushort dst)
; location: [7FFC872B68E0h, 7FFC872B68F4h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,word ptr [rcx]      ; MOVZX(Movzx_r32_rm16) [EAX,mem(16u,RCX:br,DS:sr)]    encoding(3 bytes) = 0f b7 01
0008h movzx edx,word ptr [rdx]      ; MOVZX(Movzx_r32_rm16) [EDX,mem(16u,RDX:br,DS:sr)]    encoding(3 bytes) = 0f b7 12
000bh or eax,edx                    ; OR(Or_r32_rm32) [EAX,EDX]                            encoding(2 bytes) = 0b c2
000dh mov [r8],ax                   ; MOV(Mov_rm16_r16) [mem(16u,R8:br,DS:sr),AX]          encoding(4 bytes) = 66 41 89 00
0011h mov rax,r8                    ; MOV(Mov_r64_rm64) [RAX,R8]                           encoding(3 bytes) = 49 8b c0
0014h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> orBytes => new byte[21]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB7,0x01,0x0F,0xB7,0x12,0x0B,0xC2,0x66,0x41,0x89,0x00,0x49,0x8B,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref int or(in int lhs, in int rhs, ref int dst)
; location: [7FFC872B6910h, 7FFC872B691Fh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov eax,[rcx]                 ; MOV(Mov_r32_rm32) [EAX,mem(32u,RCX:br,DS:sr)]        encoding(2 bytes) = 8b 01
0007h or eax,[rdx]                  ; OR(Or_r32_rm32) [EAX,mem(32u,RDX:br,DS:sr)]          encoding(2 bytes) = 0b 02
0009h mov [r8],eax                  ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EAX]         encoding(3 bytes) = 41 89 00
000ch mov rax,r8                    ; MOV(Mov_r64_rm64) [RAX,R8]                           encoding(3 bytes) = 49 8b c0
000fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> orBytes => new byte[16]{0x0F,0x1F,0x44,0x00,0x00,0x8B,0x01,0x0B,0x02,0x41,0x89,0x00,0x49,0x8B,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref uint or(in uint lhs, in uint rhs, ref uint dst)
; location: [7FFC872B6930h, 7FFC872B693Fh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov eax,[rcx]                 ; MOV(Mov_r32_rm32) [EAX,mem(32u,RCX:br,DS:sr)]        encoding(2 bytes) = 8b 01
0007h or eax,[rdx]                  ; OR(Or_r32_rm32) [EAX,mem(32u,RDX:br,DS:sr)]          encoding(2 bytes) = 0b 02
0009h mov [r8],eax                  ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EAX]         encoding(3 bytes) = 41 89 00
000ch mov rax,r8                    ; MOV(Mov_r64_rm64) [RAX,R8]                           encoding(3 bytes) = 49 8b c0
000fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> orBytes => new byte[16]{0x0F,0x1F,0x44,0x00,0x00,0x8B,0x01,0x0B,0x02,0x41,0x89,0x00,0x49,0x8B,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref long or(in long lhs, in long rhs, ref long dst)
; location: [7FFC872B6950h, 7FFC872B6961h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,[rcx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 01
0008h or rax,[rdx]                  ; OR(Or_r64_rm64) [RAX,mem(64u,RDX:br,DS:sr)]          encoding(3 bytes) = 48 0b 02
000bh mov [r8],rax                  ; MOV(Mov_rm64_r64) [mem(64u,R8:br,DS:sr),RAX]         encoding(3 bytes) = 49 89 00
000eh mov rax,r8                    ; MOV(Mov_r64_rm64) [RAX,R8]                           encoding(3 bytes) = 49 8b c0
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> orBytes => new byte[18]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x01,0x48,0x0B,0x02,0x49,0x89,0x00,0x49,0x8B,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref ulong or(in ulong lhs, in ulong rhs, ref ulong dst)
; location: [7FFC872B6980h, 7FFC872B6991h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,[rcx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 01
0008h or rax,[rdx]                  ; OR(Or_r64_rm64) [RAX,mem(64u,RDX:br,DS:sr)]          encoding(3 bytes) = 48 0b 02
000bh mov [r8],rax                  ; MOV(Mov_rm64_r64) [mem(64u,R8:br,DS:sr),RAX]         encoding(3 bytes) = 49 89 00
000eh mov rax,r8                    ; MOV(Mov_r64_rm64) [RAX,R8]                           encoding(3 bytes) = 49 8b c0
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> orBytes => new byte[18]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x01,0x48,0x0B,0x02,0x49,0x89,0x00,0x49,0x8B,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref float or(in float lhs, in float rhs, ref float dst)
; location: [7FFC872B69B0h, 7FFC872B69E9h]
0000h sub rsp,18h                   ; SUB(Sub_rm64_imm8) [RSP,18h:imm64]                   encoding(4 bytes) = 48 83 ec 18
0004h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0007h vmovss xmm0,dword ptr [rcx]   ; VMOVSS(VEX_Vmovss_xmm_m32) [XMM0,mem(Float32,RCX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 10 01
000bh vmovss dword ptr [rsp+14h],xmm0; VMOVSS(VEX_Vmovss_m32_xmm) [mem(Float32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 11 44 24 14
0011h mov eax,[rsp+14h]             ; MOV(Mov_r32_rm32) [EAX,mem(32u,RSP:br,SS:sr)]        encoding(4 bytes) = 8b 44 24 14
0015h vmovss xmm0,dword ptr [rdx]   ; VMOVSS(VEX_Vmovss_xmm_m32) [XMM0,mem(Float32,RDX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 10 02
0019h vmovss dword ptr [rsp+10h],xmm0; VMOVSS(VEX_Vmovss_m32_xmm) [mem(Float32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 11 44 24 10
001fh or eax,[rsp+10h]              ; OR(Or_r32_rm32) [EAX,mem(32u,RSP:br,SS:sr)]          encoding(4 bytes) = 0b 44 24 10
0023h mov [rsp+0Ch],eax             ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),EAX]        encoding(4 bytes) = 89 44 24 0c
0027h vmovss xmm0,dword ptr [rsp+0Ch]; VMOVSS(VEX_Vmovss_xmm_m32) [XMM0,mem(Float32,RSP:br,SS:sr)] encoding(VEX, 6 bytes) = c5 fa 10 44 24 0c
002dh vmovss dword ptr [r8],xmm0    ; VMOVSS(VEX_Vmovss_m32_xmm) [mem(Float32,R8:br,DS:sr),XMM0] encoding(VEX, 5 bytes) = c4 c1 7a 11 00
0032h mov rax,r8                    ; MOV(Mov_r64_rm64) [RAX,R8]                           encoding(3 bytes) = 49 8b c0
0035h add rsp,18h                   ; ADD(Add_rm64_imm8) [RSP,18h:imm64]                   encoding(4 bytes) = 48 83 c4 18
0039h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> orBytes => new byte[58]{0x48,0x83,0xEC,0x18,0xC5,0xF8,0x77,0xC5,0xFA,0x10,0x01,0xC5,0xFA,0x11,0x44,0x24,0x14,0x8B,0x44,0x24,0x14,0xC5,0xFA,0x10,0x02,0xC5,0xFA,0x11,0x44,0x24,0x10,0x0B,0x44,0x24,0x10,0x89,0x44,0x24,0x0C,0xC5,0xFA,0x10,0x44,0x24,0x0C,0xC4,0xC1,0x7A,0x11,0x00,0x49,0x8B,0xC0,0x48,0x83,0xC4,0x18,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref double or(in double lhs, in double rhs, ref double dst)
; location: [7FFC872B6A10h, 7FFC872B6A4Ah]
0000h sub rsp,18h                   ; SUB(Sub_rm64_imm8) [RSP,18h:imm64]                   encoding(4 bytes) = 48 83 ec 18
0004h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0007h vmovsd xmm0,qword ptr [rcx]   ; VMOVSD(VEX_Vmovsd_xmm_m64) [XMM0,mem(Float64,RCX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fb 10 01
000bh vmovsd qword ptr [rsp+10h],xmm0; VMOVSD(VEX_Vmovsd_m64_xmm) [mem(Float64,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fb 11 44 24 10
0011h mov rax,[rsp+10h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 10
0016h vmovsd xmm0,qword ptr [rdx]   ; VMOVSD(VEX_Vmovsd_xmm_m64) [XMM0,mem(Float64,RDX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fb 10 02
001ah vmovsd qword ptr [rsp+8],xmm0 ; VMOVSD(VEX_Vmovsd_m64_xmm) [mem(Float64,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fb 11 44 24 08
0020h or rax,[rsp+8]                ; OR(Or_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]          encoding(5 bytes) = 48 0b 44 24 08
0025h mov [rsp],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(4 bytes) = 48 89 04 24
0029h vmovsd xmm0,qword ptr [rsp]   ; VMOVSD(VEX_Vmovsd_xmm_m64) [XMM0,mem(Float64,RSP:br,SS:sr)] encoding(VEX, 5 bytes) = c5 fb 10 04 24
002eh vmovsd qword ptr [r8],xmm0    ; VMOVSD(VEX_Vmovsd_m64_xmm) [mem(Float64,R8:br,DS:sr),XMM0] encoding(VEX, 5 bytes) = c4 c1 7b 11 00
0033h mov rax,r8                    ; MOV(Mov_r64_rm64) [RAX,R8]                           encoding(3 bytes) = 49 8b c0
0036h add rsp,18h                   ; ADD(Add_rm64_imm8) [RSP,18h:imm64]                   encoding(4 bytes) = 48 83 c4 18
003ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> orBytes => new byte[59]{0x48,0x83,0xEC,0x18,0xC5,0xF8,0x77,0xC5,0xFB,0x10,0x01,0xC5,0xFB,0x11,0x44,0x24,0x10,0x48,0x8B,0x44,0x24,0x10,0xC5,0xFB,0x10,0x02,0xC5,0xFB,0x11,0x44,0x24,0x08,0x48,0x0B,0x44,0x24,0x08,0x48,0x89,0x04,0x24,0xC5,0xFB,0x10,0x04,0x24,0xC4,0xC1,0x7B,0x11,0x00,0x49,0x8B,0xC0,0x48,0x83,0xC4,0x18,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: sbyte parse(string src, out sbyte dst)
; location: [7FFC872B6A70h, 7FFC872B6B06h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0003h sub rsp,40h                   ; SUB(Sub_rm64_imm8) [RSP,40h:imm64]                   encoding(4 bytes) = 48 83 ec 40
0007h xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0009h mov [rsp+38h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 38
000eh mov [rsp+28h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 28
0013h mov [rsp+30h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 30
0018h mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
001bh test rcx,rcx                  ; TEST(Test_rm64_r64) [RCX,RCX]                        encoding(3 bytes) = 48 85 c9
001eh je short 0076h                ; JE(Je_rel8_64) [76h:jmp64]                           encoding(2 bytes) = 74 56
0020h lea rdi,[rcx+0Ch]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RCX:br,DS:sr)]       encoding(4 bytes) = 48 8d 79 0c
0024h mov ebx,[rcx+8]               ; MOV(Mov_r32_rm32) [EBX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 59 08
0027h call 7FFCE3F747D0h            ; CALL(Call_rel32_64) [5CCBDD60h:jmp64]                encoding(5 bytes) = e8 34 dd cb 5c
002ch mov r8,rax                    ; MOV(Mov_r64_rm64) [R8,RAX]                           encoding(3 bytes) = 4c 8b c0
002fh lea rcx,[rsp+28h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 4c 24 28
0034h mov [rcx],rdi                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RDI]        encoding(3 bytes) = 48 89 39
0037h mov [rcx+8],ebx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EBX]        encoding(3 bytes) = 89 59 08
003ah lea rcx,[rsp+28h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 4c 24 28
003fh lea r9,[rsp+38h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 38
0044h mov edx,7                     ; MOV(Mov_r32_imm32) [EDX,7h:imm32]                    encoding(5 bytes) = ba 07 00 00 00
0049h call 7FFCE3F6D160h            ; CALL(Call_rel32_64) [5CCB66F0h:jmp64]                encoding(5 bytes) = e8 a2 66 cb 5c
004eh mov ecx,eax                   ; MOV(Mov_r32_rm32) [ECX,EAX]                          encoding(2 bytes) = 8b c8
0050h test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
0052h jne short 0081h               ; JNE(Jne_rel8_64) [81h:jmp64]                         encoding(2 bytes) = 75 2d
0054h mov eax,[rsp+38h]             ; MOV(Mov_r32_rm32) [EAX,mem(32u,RSP:br,SS:sr)]        encoding(4 bytes) = 8b 44 24 38
0058h add eax,80h                   ; ADD(Add_EAX_imm32) [EAX,80h:imm32]                   encoding(5 bytes) = 05 80 00 00 00
005dh cmp eax,0FFh                  ; CMP(Cmp_EAX_imm32) [EAX,ffh:imm32]                   encoding(5 bytes) = 3d ff 00 00 00
0062h ja short 008ch                ; JA(Ja_rel8_64) [8Ch:jmp64]                           encoding(2 bytes) = 77 28
0064h mov eax,[rsp+38h]             ; MOV(Mov_r32_rm32) [EAX,mem(32u,RSP:br,SS:sr)]        encoding(4 bytes) = 8b 44 24 38
0068h movsx rax,al                  ; MOVSX(Movsx_r64_rm8) [RAX,AL]                        encoding(4 bytes) = 48 0f be c0
006ch mov [rsi],al                  ; MOV(Mov_rm8_r8) [mem(8u,RSI:br,DS:sr),AL]            encoding(2 bytes) = 88 06
006eh add rsp,40h                   ; ADD(Add_rm64_imm8) [RSP,40h:imm64]                   encoding(4 bytes) = 48 83 c4 40
0072h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0073h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0074h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0075h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0076h mov ecx,11h                   ; MOV(Mov_r32_imm32) [ECX,11h:imm32]                   encoding(5 bytes) = b9 11 00 00 00
007bh call 7FFC86C2D530h            ; CALL(Call_rel32_64) [FFFFFFFFFF976AC0h:jmp64]        encoding(5 bytes) = e8 40 6a 97 ff
0080h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
0081h mov edx,5                     ; MOV(Mov_r32_imm32) [EDX,5h:imm32]                    encoding(5 bytes) = ba 05 00 00 00
0086h call 7FFC86F129D0h            ; CALL(Call_rel32_64) [FFFFFFFFFFC5BF60h:jmp64]        encoding(5 bytes) = e8 d5 be c5 ff
008bh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
008ch mov ecx,5                     ; MOV(Mov_r32_imm32) [ECX,5h:imm32]                    encoding(5 bytes) = b9 05 00 00 00
0091h call 7FFC86F129D8h            ; CALL(Call_rel32_64) [FFFFFFFFFFC5BF68h:jmp64]        encoding(5 bytes) = e8 d2 be c5 ff
0096h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> parseBytes => new byte[151]{0x57,0x56,0x53,0x48,0x83,0xEC,0x40,0x33,0xC0,0x48,0x89,0x44,0x24,0x38,0x48,0x89,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x30,0x48,0x8B,0xF2,0x48,0x85,0xC9,0x74,0x56,0x48,0x8D,0x79,0x0C,0x8B,0x59,0x08,0xE8,0x34,0xDD,0xCB,0x5C,0x4C,0x8B,0xC0,0x48,0x8D,0x4C,0x24,0x28,0x48,0x89,0x39,0x89,0x59,0x08,0x48,0x8D,0x4C,0x24,0x28,0x4C,0x8D,0x4C,0x24,0x38,0xBA,0x07,0x00,0x00,0x00,0xE8,0xA2,0x66,0xCB,0x5C,0x8B,0xC8,0x85,0xC9,0x75,0x2D,0x8B,0x44,0x24,0x38,0x05,0x80,0x00,0x00,0x00,0x3D,0xFF,0x00,0x00,0x00,0x77,0x28,0x8B,0x44,0x24,0x38,0x48,0x0F,0xBE,0xC0,0x88,0x06,0x48,0x83,0xC4,0x40,0x5B,0x5E,0x5F,0xC3,0xB9,0x11,0x00,0x00,0x00,0xE8,0x40,0x6A,0x97,0xFF,0xCC,0xBA,0x05,0x00,0x00,0x00,0xE8,0xD5,0xBE,0xC5,0xFF,0xCC,0xB9,0x05,0x00,0x00,0x00,0xE8,0xD2,0xBE,0xC5,0xFF,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: byte parse(string src, out byte dst)
; location: [7FFC872B6B20h, 7FFC872B6BAFh]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0003h sub rsp,40h                   ; SUB(Sub_rm64_imm8) [RSP,40h:imm64]                   encoding(4 bytes) = 48 83 ec 40
0007h xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0009h mov [rsp+38h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 38
000eh mov [rsp+28h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 28
0013h mov [rsp+30h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 30
0018h mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
001bh test rcx,rcx                  ; TEST(Test_rm64_r64) [RCX,RCX]                        encoding(3 bytes) = 48 85 c9
001eh je short 006fh                ; JE(Je_rel8_64) [6Fh:jmp64]                           encoding(2 bytes) = 74 4f
0020h lea rdi,[rcx+0Ch]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RCX:br,DS:sr)]       encoding(4 bytes) = 48 8d 79 0c
0024h mov ebx,[rcx+8]               ; MOV(Mov_r32_rm32) [EBX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 59 08
0027h call 7FFCE3F747D0h            ; CALL(Call_rel32_64) [5CCBDCB0h:jmp64]                encoding(5 bytes) = e8 84 dc cb 5c
002ch mov r8,rax                    ; MOV(Mov_r64_rm64) [R8,RAX]                           encoding(3 bytes) = 4c 8b c0
002fh lea rcx,[rsp+28h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 4c 24 28
0034h mov [rcx],rdi                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RDI]        encoding(3 bytes) = 48 89 39
0037h mov [rcx+8],ebx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EBX]        encoding(3 bytes) = 89 59 08
003ah lea rcx,[rsp+28h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 4c 24 28
003fh lea r9,[rsp+38h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 38
0044h mov edx,7                     ; MOV(Mov_r32_imm32) [EDX,7h:imm32]                    encoding(5 bytes) = ba 07 00 00 00
0049h call 7FFC86F12938h            ; CALL(Call_rel32_64) [FFFFFFFFFFC5BE18h:jmp64]        encoding(5 bytes) = e8 ca bd c5 ff
004eh mov ecx,eax                   ; MOV(Mov_r32_rm32) [ECX,EAX]                          encoding(2 bytes) = 8b c8
0050h test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
0052h jne short 007ah               ; JNE(Jne_rel8_64) [7Ah:jmp64]                         encoding(2 bytes) = 75 26
0054h cmp dword ptr [rsp+38h],0FFh  ; CMP(Cmp_rm32_imm32) [mem(32u,RSP:br,SS:sr),ffh:imm32] encoding(8 bytes) = 81 7c 24 38 ff 00 00 00
005ch ja short 0085h                ; JA(Ja_rel8_64) [85h:jmp64]                           encoding(2 bytes) = 77 27
005eh mov eax,[rsp+38h]             ; MOV(Mov_r32_rm32) [EAX,mem(32u,RSP:br,SS:sr)]        encoding(4 bytes) = 8b 44 24 38
0062h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0065h mov [rsi],al                  ; MOV(Mov_rm8_r8) [mem(8u,RSI:br,DS:sr),AL]            encoding(2 bytes) = 88 06
0067h add rsp,40h                   ; ADD(Add_rm64_imm8) [RSP,40h:imm64]                   encoding(4 bytes) = 48 83 c4 40
006bh pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
006ch pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
006dh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
006eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
006fh mov ecx,11h                   ; MOV(Mov_r32_imm32) [ECX,11h:imm32]                   encoding(5 bytes) = b9 11 00 00 00
0074h call 7FFC86C2D530h            ; CALL(Call_rel32_64) [FFFFFFFFFF976A10h:jmp64]        encoding(5 bytes) = e8 97 69 97 ff
0079h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
007ah mov edx,6                     ; MOV(Mov_r32_imm32) [EDX,6h:imm32]                    encoding(5 bytes) = ba 06 00 00 00
007fh call 7FFC86F129D0h            ; CALL(Call_rel32_64) [FFFFFFFFFFC5BEB0h:jmp64]        encoding(5 bytes) = e8 2c be c5 ff
0084h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
0085h mov ecx,6                     ; MOV(Mov_r32_imm32) [ECX,6h:imm32]                    encoding(5 bytes) = b9 06 00 00 00
008ah call 7FFC86F129D8h            ; CALL(Call_rel32_64) [FFFFFFFFFFC5BEB8h:jmp64]        encoding(5 bytes) = e8 29 be c5 ff
008fh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> parseBytes => new byte[144]{0x57,0x56,0x53,0x48,0x83,0xEC,0x40,0x33,0xC0,0x48,0x89,0x44,0x24,0x38,0x48,0x89,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x30,0x48,0x8B,0xF2,0x48,0x85,0xC9,0x74,0x4F,0x48,0x8D,0x79,0x0C,0x8B,0x59,0x08,0xE8,0x84,0xDC,0xCB,0x5C,0x4C,0x8B,0xC0,0x48,0x8D,0x4C,0x24,0x28,0x48,0x89,0x39,0x89,0x59,0x08,0x48,0x8D,0x4C,0x24,0x28,0x4C,0x8D,0x4C,0x24,0x38,0xBA,0x07,0x00,0x00,0x00,0xE8,0xCA,0xBD,0xC5,0xFF,0x8B,0xC8,0x85,0xC9,0x75,0x26,0x81,0x7C,0x24,0x38,0xFF,0x00,0x00,0x00,0x77,0x27,0x8B,0x44,0x24,0x38,0x0F,0xB6,0xC0,0x88,0x06,0x48,0x83,0xC4,0x40,0x5B,0x5E,0x5F,0xC3,0xB9,0x11,0x00,0x00,0x00,0xE8,0x97,0x69,0x97,0xFF,0xCC,0xBA,0x06,0x00,0x00,0x00,0xE8,0x2C,0xBE,0xC5,0xFF,0xCC,0xB9,0x06,0x00,0x00,0x00,0xE8,0x29,0xBE,0xC5,0xFF,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: short parse(string src, out short dst)
; location: [7FFC872B6BD0h, 7FFC872B6C67h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0003h sub rsp,40h                   ; SUB(Sub_rm64_imm8) [RSP,40h:imm64]                   encoding(4 bytes) = 48 83 ec 40
0007h xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0009h mov [rsp+38h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 38
000eh mov [rsp+28h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 28
0013h mov [rsp+30h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 30
0018h mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
001bh test rcx,rcx                  ; TEST(Test_rm64_r64) [RCX,RCX]                        encoding(3 bytes) = 48 85 c9
001eh je short 0077h                ; JE(Je_rel8_64) [77h:jmp64]                           encoding(2 bytes) = 74 57
0020h lea rdi,[rcx+0Ch]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RCX:br,DS:sr)]       encoding(4 bytes) = 48 8d 79 0c
0024h mov ebx,[rcx+8]               ; MOV(Mov_r32_rm32) [EBX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 59 08
0027h call 7FFCE3F747D0h            ; CALL(Call_rel32_64) [5CCBDC00h:jmp64]                encoding(5 bytes) = e8 d4 db cb 5c
002ch mov r8,rax                    ; MOV(Mov_r64_rm64) [R8,RAX]                           encoding(3 bytes) = 4c 8b c0
002fh lea rcx,[rsp+28h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 4c 24 28
0034h mov [rcx],rdi                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RDI]        encoding(3 bytes) = 48 89 39
0037h mov [rcx+8],ebx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EBX]        encoding(3 bytes) = 89 59 08
003ah lea rcx,[rsp+28h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 4c 24 28
003fh lea r9,[rsp+38h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 38
0044h mov edx,7                     ; MOV(Mov_r32_imm32) [EDX,7h:imm32]                    encoding(5 bytes) = ba 07 00 00 00
0049h call 7FFCE3F6D160h            ; CALL(Call_rel32_64) [5CCB6590h:jmp64]                encoding(5 bytes) = e8 42 65 cb 5c
004eh mov ecx,eax                   ; MOV(Mov_r32_rm32) [ECX,EAX]                          encoding(2 bytes) = 8b c8
0050h test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
0052h jne short 0082h               ; JNE(Jne_rel8_64) [82h:jmp64]                         encoding(2 bytes) = 75 2e
0054h mov eax,[rsp+38h]             ; MOV(Mov_r32_rm32) [EAX,mem(32u,RSP:br,SS:sr)]        encoding(4 bytes) = 8b 44 24 38
0058h add eax,8000h                 ; ADD(Add_EAX_imm32) [EAX,8000h:imm32]                 encoding(5 bytes) = 05 00 80 00 00
005dh cmp eax,0FFFFh                ; CMP(Cmp_EAX_imm32) [EAX,ffffh:imm32]                 encoding(5 bytes) = 3d ff ff 00 00
0062h ja short 008dh                ; JA(Ja_rel8_64) [8Dh:jmp64]                           encoding(2 bytes) = 77 29
0064h mov eax,[rsp+38h]             ; MOV(Mov_r32_rm32) [EAX,mem(32u,RSP:br,SS:sr)]        encoding(4 bytes) = 8b 44 24 38
0068h movsx rax,ax                  ; MOVSX(Movsx_r64_rm16) [RAX,AX]                       encoding(4 bytes) = 48 0f bf c0
006ch mov [rsi],ax                  ; MOV(Mov_rm16_r16) [mem(16u,RSI:br,DS:sr),AX]         encoding(3 bytes) = 66 89 06
006fh add rsp,40h                   ; ADD(Add_rm64_imm8) [RSP,40h:imm64]                   encoding(4 bytes) = 48 83 c4 40
0073h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0074h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0075h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0076h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0077h mov ecx,11h                   ; MOV(Mov_r32_imm32) [ECX,11h:imm32]                   encoding(5 bytes) = b9 11 00 00 00
007ch call 7FFC86C2D530h            ; CALL(Call_rel32_64) [FFFFFFFFFF976960h:jmp64]        encoding(5 bytes) = e8 df 68 97 ff
0081h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
0082h mov edx,7                     ; MOV(Mov_r32_imm32) [EDX,7h:imm32]                    encoding(5 bytes) = ba 07 00 00 00
0087h call 7FFC86F129D0h            ; CALL(Call_rel32_64) [FFFFFFFFFFC5BE00h:jmp64]        encoding(5 bytes) = e8 74 bd c5 ff
008ch int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
008dh mov ecx,7                     ; MOV(Mov_r32_imm32) [ECX,7h:imm32]                    encoding(5 bytes) = b9 07 00 00 00
0092h call 7FFC86F129D8h            ; CALL(Call_rel32_64) [FFFFFFFFFFC5BE08h:jmp64]        encoding(5 bytes) = e8 71 bd c5 ff
0097h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> parseBytes => new byte[152]{0x57,0x56,0x53,0x48,0x83,0xEC,0x40,0x33,0xC0,0x48,0x89,0x44,0x24,0x38,0x48,0x89,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x30,0x48,0x8B,0xF2,0x48,0x85,0xC9,0x74,0x57,0x48,0x8D,0x79,0x0C,0x8B,0x59,0x08,0xE8,0xD4,0xDB,0xCB,0x5C,0x4C,0x8B,0xC0,0x48,0x8D,0x4C,0x24,0x28,0x48,0x89,0x39,0x89,0x59,0x08,0x48,0x8D,0x4C,0x24,0x28,0x4C,0x8D,0x4C,0x24,0x38,0xBA,0x07,0x00,0x00,0x00,0xE8,0x42,0x65,0xCB,0x5C,0x8B,0xC8,0x85,0xC9,0x75,0x2E,0x8B,0x44,0x24,0x38,0x05,0x00,0x80,0x00,0x00,0x3D,0xFF,0xFF,0x00,0x00,0x77,0x29,0x8B,0x44,0x24,0x38,0x48,0x0F,0xBF,0xC0,0x66,0x89,0x06,0x48,0x83,0xC4,0x40,0x5B,0x5E,0x5F,0xC3,0xB9,0x11,0x00,0x00,0x00,0xE8,0xDF,0x68,0x97,0xFF,0xCC,0xBA,0x07,0x00,0x00,0x00,0xE8,0x74,0xBD,0xC5,0xFF,0xCC,0xB9,0x07,0x00,0x00,0x00,0xE8,0x71,0xBD,0xC5,0xFF,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ushort parse(string src, out ushort dst)
; location: [7FFC872B6C80h, 7FFC872B6D10h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0003h sub rsp,40h                   ; SUB(Sub_rm64_imm8) [RSP,40h:imm64]                   encoding(4 bytes) = 48 83 ec 40
0007h xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0009h mov [rsp+38h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 38
000eh mov [rsp+28h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 28
0013h mov [rsp+30h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 30
0018h mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
001bh test rcx,rcx                  ; TEST(Test_rm64_r64) [RCX,RCX]                        encoding(3 bytes) = 48 85 c9
001eh je short 0070h                ; JE(Je_rel8_64) [70h:jmp64]                           encoding(2 bytes) = 74 50
0020h lea rdi,[rcx+0Ch]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RCX:br,DS:sr)]       encoding(4 bytes) = 48 8d 79 0c
0024h mov ebx,[rcx+8]               ; MOV(Mov_r32_rm32) [EBX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 59 08
0027h call 7FFCE3F747D0h            ; CALL(Call_rel32_64) [5CCBDB50h:jmp64]                encoding(5 bytes) = e8 24 db cb 5c
002ch mov r8,rax                    ; MOV(Mov_r64_rm64) [R8,RAX]                           encoding(3 bytes) = 4c 8b c0
002fh lea rcx,[rsp+28h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 4c 24 28
0034h mov [rcx],rdi                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RDI]        encoding(3 bytes) = 48 89 39
0037h mov [rcx+8],ebx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EBX]        encoding(3 bytes) = 89 59 08
003ah lea rcx,[rsp+28h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 4c 24 28
003fh lea r9,[rsp+38h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 38
0044h mov edx,7                     ; MOV(Mov_r32_imm32) [EDX,7h:imm32]                    encoding(5 bytes) = ba 07 00 00 00
0049h call 7FFC86F12938h            ; CALL(Call_rel32_64) [FFFFFFFFFFC5BCB8h:jmp64]        encoding(5 bytes) = e8 6a bc c5 ff
004eh mov ecx,eax                   ; MOV(Mov_r32_rm32) [ECX,EAX]                          encoding(2 bytes) = 8b c8
0050h test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
0052h jne short 007bh               ; JNE(Jne_rel8_64) [7Bh:jmp64]                         encoding(2 bytes) = 75 27
0054h cmp dword ptr [rsp+38h],0FFFFh; CMP(Cmp_rm32_imm32) [mem(32u,RSP:br,SS:sr),ffffh:imm32] encoding(8 bytes) = 81 7c 24 38 ff ff 00 00
005ch ja short 0086h                ; JA(Ja_rel8_64) [86h:jmp64]                           encoding(2 bytes) = 77 28
005eh mov eax,[rsp+38h]             ; MOV(Mov_r32_rm32) [EAX,mem(32u,RSP:br,SS:sr)]        encoding(4 bytes) = 8b 44 24 38
0062h movzx eax,ax                  ; MOVZX(Movzx_r32_rm16) [EAX,AX]                       encoding(3 bytes) = 0f b7 c0
0065h mov [rsi],ax                  ; MOV(Mov_rm16_r16) [mem(16u,RSI:br,DS:sr),AX]         encoding(3 bytes) = 66 89 06
0068h add rsp,40h                   ; ADD(Add_rm64_imm8) [RSP,40h:imm64]                   encoding(4 bytes) = 48 83 c4 40
006ch pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
006dh pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
006eh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
006fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0070h mov ecx,11h                   ; MOV(Mov_r32_imm32) [ECX,11h:imm32]                   encoding(5 bytes) = b9 11 00 00 00
0075h call 7FFC86C2D530h            ; CALL(Call_rel32_64) [FFFFFFFFFF9768B0h:jmp64]        encoding(5 bytes) = e8 36 68 97 ff
007ah int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
007bh mov edx,8                     ; MOV(Mov_r32_imm32) [EDX,8h:imm32]                    encoding(5 bytes) = ba 08 00 00 00
0080h call 7FFC86F129D0h            ; CALL(Call_rel32_64) [FFFFFFFFFFC5BD50h:jmp64]        encoding(5 bytes) = e8 cb bc c5 ff
0085h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
0086h mov ecx,8                     ; MOV(Mov_r32_imm32) [ECX,8h:imm32]                    encoding(5 bytes) = b9 08 00 00 00
008bh call 7FFC86F129D8h            ; CALL(Call_rel32_64) [FFFFFFFFFFC5BD58h:jmp64]        encoding(5 bytes) = e8 c8 bc c5 ff
0090h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> parseBytes => new byte[145]{0x57,0x56,0x53,0x48,0x83,0xEC,0x40,0x33,0xC0,0x48,0x89,0x44,0x24,0x38,0x48,0x89,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x30,0x48,0x8B,0xF2,0x48,0x85,0xC9,0x74,0x50,0x48,0x8D,0x79,0x0C,0x8B,0x59,0x08,0xE8,0x24,0xDB,0xCB,0x5C,0x4C,0x8B,0xC0,0x48,0x8D,0x4C,0x24,0x28,0x48,0x89,0x39,0x89,0x59,0x08,0x48,0x8D,0x4C,0x24,0x28,0x4C,0x8D,0x4C,0x24,0x38,0xBA,0x07,0x00,0x00,0x00,0xE8,0x6A,0xBC,0xC5,0xFF,0x8B,0xC8,0x85,0xC9,0x75,0x27,0x81,0x7C,0x24,0x38,0xFF,0xFF,0x00,0x00,0x77,0x28,0x8B,0x44,0x24,0x38,0x0F,0xB7,0xC0,0x66,0x89,0x06,0x48,0x83,0xC4,0x40,0x5B,0x5E,0x5F,0xC3,0xB9,0x11,0x00,0x00,0x00,0xE8,0x36,0x68,0x97,0xFF,0xCC,0xBA,0x08,0x00,0x00,0x00,0xE8,0xCB,0xBC,0xC5,0xFF,0xCC,0xB9,0x08,0x00,0x00,0x00,0xE8,0xC8,0xBC,0xC5,0xFF,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: int parse(string src, out int dst)
; location: [7FFC872B6D30h, 7FFC872B6D84h]
0000h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0001h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
0005h xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0007h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
000ch mov [rsp+28h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 28
0011h mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
0014h test rcx,rcx                  ; TEST(Test_rm64_r64) [RCX,RCX]                        encoding(3 bytes) = 48 85 c9
0017h je short 004ah                ; JE(Je_rel8_64) [4Ah:jmp64]                           encoding(2 bytes) = 74 31
0019h lea rax,[rcx+0Ch]             ; LEA(Lea_r64_m) [RAX,mem(Unknown,RCX:br,DS:sr)]       encoding(4 bytes) = 48 8d 41 0c
001dh mov edx,[rcx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 51 08
0020h lea rcx,[rsp+20h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 4c 24 20
0025h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0028h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
002bh call 7FFCE3F747D0h            ; CALL(Call_rel32_64) [5CCBDAA0h:jmp64]                encoding(5 bytes) = e8 70 da cb 5c
0030h mov r8,rax                    ; MOV(Mov_r64_rm64) [R8,RAX]                           encoding(3 bytes) = 4c 8b c0
0033h lea rcx,[rsp+20h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 4c 24 20
0038h mov edx,7                     ; MOV(Mov_r32_imm32) [EDX,7h:imm32]                    encoding(5 bytes) = ba 07 00 00 00
003dh call 7FFC86F128D0h            ; CALL(Call_rel32_64) [FFFFFFFFFFC5BBA0h:jmp64]        encoding(5 bytes) = e8 5e bb c5 ff
0042h mov [rsi],eax                 ; MOV(Mov_rm32_r32) [mem(32u,RSI:br,DS:sr),EAX]        encoding(2 bytes) = 89 06
0044h add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0048h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0049h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
004ah mov ecx,11h                   ; MOV(Mov_r32_imm32) [ECX,11h:imm32]                   encoding(5 bytes) = b9 11 00 00 00
004fh call 7FFC86C2D530h            ; CALL(Call_rel32_64) [FFFFFFFFFF976800h:jmp64]        encoding(5 bytes) = e8 ac 67 97 ff
0054h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> parseBytes => new byte[85]{0x56,0x48,0x83,0xEC,0x30,0x33,0xC0,0x48,0x89,0x44,0x24,0x20,0x48,0x89,0x44,0x24,0x28,0x48,0x8B,0xF2,0x48,0x85,0xC9,0x74,0x31,0x48,0x8D,0x41,0x0C,0x8B,0x51,0x08,0x48,0x8D,0x4C,0x24,0x20,0x48,0x89,0x01,0x89,0x51,0x08,0xE8,0x70,0xDA,0xCB,0x5C,0x4C,0x8B,0xC0,0x48,0x8D,0x4C,0x24,0x20,0xBA,0x07,0x00,0x00,0x00,0xE8,0x5E,0xBB,0xC5,0xFF,0x89,0x06,0x48,0x83,0xC4,0x30,0x5E,0xC3,0xB9,0x11,0x00,0x00,0x00,0xE8,0xAC,0x67,0x97,0xFF,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: uint parse(string src, out uint dst)
; location: [7FFC872B6DA0h, 7FFC872B6DF4h]
0000h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0001h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
0005h xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0007h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
000ch mov [rsp+28h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 28
0011h mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
0014h test rcx,rcx                  ; TEST(Test_rm64_r64) [RCX,RCX]                        encoding(3 bytes) = 48 85 c9
0017h je short 004ah                ; JE(Je_rel8_64) [4Ah:jmp64]                           encoding(2 bytes) = 74 31
0019h lea rax,[rcx+0Ch]             ; LEA(Lea_r64_m) [RAX,mem(Unknown,RCX:br,DS:sr)]       encoding(4 bytes) = 48 8d 41 0c
001dh mov edx,[rcx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 51 08
0020h lea rcx,[rsp+20h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 4c 24 20
0025h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0028h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
002bh call 7FFCE3F747D0h            ; CALL(Call_rel32_64) [5CCBDA30h:jmp64]                encoding(5 bytes) = e8 00 da cb 5c
0030h mov r8,rax                    ; MOV(Mov_r64_rm64) [R8,RAX]                           encoding(3 bytes) = 4c 8b c0
0033h lea rcx,[rsp+20h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 4c 24 20
0038h mov edx,7                     ; MOV(Mov_r32_imm32) [EDX,7h:imm32]                    encoding(5 bytes) = ba 07 00 00 00
003dh call 7FFC86F128E0h            ; CALL(Call_rel32_64) [FFFFFFFFFFC5BB40h:jmp64]        encoding(5 bytes) = e8 fe ba c5 ff
0042h mov [rsi],eax                 ; MOV(Mov_rm32_r32) [mem(32u,RSI:br,DS:sr),EAX]        encoding(2 bytes) = 89 06
0044h add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0048h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0049h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
004ah mov ecx,11h                   ; MOV(Mov_r32_imm32) [ECX,11h:imm32]                   encoding(5 bytes) = b9 11 00 00 00
004fh call 7FFC86C2D530h            ; CALL(Call_rel32_64) [FFFFFFFFFF976790h:jmp64]        encoding(5 bytes) = e8 3c 67 97 ff
0054h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> parseBytes => new byte[85]{0x56,0x48,0x83,0xEC,0x30,0x33,0xC0,0x48,0x89,0x44,0x24,0x20,0x48,0x89,0x44,0x24,0x28,0x48,0x8B,0xF2,0x48,0x85,0xC9,0x74,0x31,0x48,0x8D,0x41,0x0C,0x8B,0x51,0x08,0x48,0x8D,0x4C,0x24,0x20,0x48,0x89,0x01,0x89,0x51,0x08,0xE8,0x00,0xDA,0xCB,0x5C,0x4C,0x8B,0xC0,0x48,0x8D,0x4C,0x24,0x20,0xBA,0x07,0x00,0x00,0x00,0xE8,0xFE,0xBA,0xC5,0xFF,0x89,0x06,0x48,0x83,0xC4,0x30,0x5E,0xC3,0xB9,0x11,0x00,0x00,0x00,0xE8,0x3C,0x67,0x97,0xFF,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: long parse(string src, out long dst)
; location: [7FFC872B6E10h, 7FFC872B6E65h]
0000h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0001h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
0005h xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0007h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
000ch mov [rsp+28h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 28
0011h mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
0014h test rcx,rcx                  ; TEST(Test_rm64_r64) [RCX,RCX]                        encoding(3 bytes) = 48 85 c9
0017h je short 004bh                ; JE(Je_rel8_64) [4Bh:jmp64]                           encoding(2 bytes) = 74 32
0019h lea rax,[rcx+0Ch]             ; LEA(Lea_r64_m) [RAX,mem(Unknown,RCX:br,DS:sr)]       encoding(4 bytes) = 48 8d 41 0c
001dh mov edx,[rcx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 51 08
0020h lea rcx,[rsp+20h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 4c 24 20
0025h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0028h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
002bh call 7FFCE3F747D0h            ; CALL(Call_rel32_64) [5CCBD9C0h:jmp64]                encoding(5 bytes) = e8 90 d9 cb 5c
0030h mov r8,rax                    ; MOV(Mov_r64_rm64) [R8,RAX]                           encoding(3 bytes) = 4c 8b c0
0033h lea rcx,[rsp+20h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 4c 24 20
0038h mov edx,7                     ; MOV(Mov_r32_imm32) [EDX,7h:imm32]                    encoding(5 bytes) = ba 07 00 00 00
003dh call 7FFC86F128D8h            ; CALL(Call_rel32_64) [FFFFFFFFFFC5BAC8h:jmp64]        encoding(5 bytes) = e8 86 ba c5 ff
0042h mov [rsi],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 06
0045h add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0049h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
004ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
004bh mov ecx,11h                   ; MOV(Mov_r32_imm32) [ECX,11h:imm32]                   encoding(5 bytes) = b9 11 00 00 00
0050h call 7FFC86C2D530h            ; CALL(Call_rel32_64) [FFFFFFFFFF976720h:jmp64]        encoding(5 bytes) = e8 cb 66 97 ff
0055h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> parseBytes => new byte[86]{0x56,0x48,0x83,0xEC,0x30,0x33,0xC0,0x48,0x89,0x44,0x24,0x20,0x48,0x89,0x44,0x24,0x28,0x48,0x8B,0xF2,0x48,0x85,0xC9,0x74,0x32,0x48,0x8D,0x41,0x0C,0x8B,0x51,0x08,0x48,0x8D,0x4C,0x24,0x20,0x48,0x89,0x01,0x89,0x51,0x08,0xE8,0x90,0xD9,0xCB,0x5C,0x4C,0x8B,0xC0,0x48,0x8D,0x4C,0x24,0x20,0xBA,0x07,0x00,0x00,0x00,0xE8,0x86,0xBA,0xC5,0xFF,0x48,0x89,0x06,0x48,0x83,0xC4,0x30,0x5E,0xC3,0xB9,0x11,0x00,0x00,0x00,0xE8,0xCB,0x66,0x97,0xFF,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ulong parse(string src, out ulong dst)
; location: [7FFC872B6E80h, 7FFC872B6ED5h]
0000h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0001h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
0005h xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0007h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
000ch mov [rsp+28h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 28
0011h mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
0014h test rcx,rcx                  ; TEST(Test_rm64_r64) [RCX,RCX]                        encoding(3 bytes) = 48 85 c9
0017h je short 004bh                ; JE(Je_rel8_64) [4Bh:jmp64]                           encoding(2 bytes) = 74 32
0019h lea rax,[rcx+0Ch]             ; LEA(Lea_r64_m) [RAX,mem(Unknown,RCX:br,DS:sr)]       encoding(4 bytes) = 48 8d 41 0c
001dh mov edx,[rcx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 51 08
0020h lea rcx,[rsp+20h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 4c 24 20
0025h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0028h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
002bh call 7FFCE3F747D0h            ; CALL(Call_rel32_64) [5CCBD950h:jmp64]                encoding(5 bytes) = e8 20 d9 cb 5c
0030h mov r8,rax                    ; MOV(Mov_r64_rm64) [R8,RAX]                           encoding(3 bytes) = 4c 8b c0
0033h lea rcx,[rsp+20h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 4c 24 20
0038h mov edx,7                     ; MOV(Mov_r32_imm32) [EDX,7h:imm32]                    encoding(5 bytes) = ba 07 00 00 00
003dh call 7FFCE404C500h            ; CALL(Call_rel32_64) [5CD95680h:jmp64]                encoding(5 bytes) = e8 3e 56 d9 5c
0042h mov [rsi],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 06
0045h add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0049h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
004ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
004bh mov ecx,11h                   ; MOV(Mov_r32_imm32) [ECX,11h:imm32]                   encoding(5 bytes) = b9 11 00 00 00
0050h call 7FFC86C2D530h            ; CALL(Call_rel32_64) [FFFFFFFFFF9766B0h:jmp64]        encoding(5 bytes) = e8 5b 66 97 ff
0055h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> parseBytes => new byte[86]{0x56,0x48,0x83,0xEC,0x30,0x33,0xC0,0x48,0x89,0x44,0x24,0x20,0x48,0x89,0x44,0x24,0x28,0x48,0x8B,0xF2,0x48,0x85,0xC9,0x74,0x32,0x48,0x8D,0x41,0x0C,0x8B,0x51,0x08,0x48,0x8D,0x4C,0x24,0x20,0x48,0x89,0x01,0x89,0x51,0x08,0xE8,0x20,0xD9,0xCB,0x5C,0x4C,0x8B,0xC0,0x48,0x8D,0x4C,0x24,0x20,0xBA,0x07,0x00,0x00,0x00,0xE8,0x3E,0x56,0xD9,0x5C,0x48,0x89,0x06,0x48,0x83,0xC4,0x30,0x5E,0xC3,0xB9,0x11,0x00,0x00,0x00,0xE8,0x5B,0x66,0x97,0xFF,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: float parse(string src, out float dst)
; location: [7FFC872B6EF0h, 7FFC872B6F6Dh]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0003h sub rsp,40h                   ; SUB(Sub_rm64_imm8) [RSP,40h:imm64]                   encoding(4 bytes) = 48 83 ec 40
0007h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
000ah xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
000ch mov [rsp+3Ch],eax             ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),EAX]        encoding(4 bytes) = 89 44 24 3c
0010h mov [rsp+28h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 28
0015h mov [rsp+30h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 30
001ah mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
001dh test rcx,rcx                  ; TEST(Test_rm64_r64) [RCX,RCX]                        encoding(3 bytes) = 48 85 c9
0020h je short 0066h                ; JE(Je_rel8_64) [66h:jmp64]                           encoding(2 bytes) = 74 44
0022h lea rdi,[rcx+0Ch]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RCX:br,DS:sr)]       encoding(4 bytes) = 48 8d 79 0c
0026h mov ebx,[rcx+8]               ; MOV(Mov_r32_rm32) [EBX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 59 08
0029h call 7FFCE3F747D0h            ; CALL(Call_rel32_64) [5CCBD8E0h:jmp64]                encoding(5 bytes) = e8 b2 d8 cb 5c
002eh mov r8,rax                    ; MOV(Mov_r64_rm64) [R8,RAX]                           encoding(3 bytes) = 4c 8b c0
0031h lea rcx,[rsp+28h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 4c 24 28
0036h mov [rcx],rdi                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RDI]        encoding(3 bytes) = 48 89 39
0039h mov [rcx+8],ebx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EBX]        encoding(3 bytes) = 89 59 08
003ch lea rcx,[rsp+28h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 4c 24 28
0041h lea r9,[rsp+3Ch]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 3c
0046h mov edx,0E7h                  ; MOV(Mov_r32_imm32) [EDX,e7h:imm32]                   encoding(5 bytes) = ba e7 00 00 00
004bh call 7FFC86F12998h            ; CALL(Call_rel32_64) [FFFFFFFFFFC5BAA8h:jmp64]        encoding(5 bytes) = e8 58 ba c5 ff
0050h test eax,eax                  ; TEST(Test_rm32_r32) [EAX,EAX]                        encoding(2 bytes) = 85 c0
0052h je short 0071h                ; JE(Je_rel8_64) [71h:jmp64]                           encoding(2 bytes) = 74 1d
0054h vmovss xmm0,dword ptr [rsp+3Ch]; VMOVSS(VEX_Vmovss_xmm_m32) [XMM0,mem(Float32,RSP:br,SS:sr)] encoding(VEX, 6 bytes) = c5 fa 10 44 24 3c
005ah vmovss dword ptr [rsi],xmm0   ; VMOVSS(VEX_Vmovss_m32_xmm) [mem(Float32,RSI:br,DS:sr),XMM0] encoding(VEX, 4 bytes) = c5 fa 11 06
005eh add rsp,40h                   ; ADD(Add_rm64_imm8) [RSP,40h:imm64]                   encoding(4 bytes) = 48 83 c4 40
0062h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0063h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0064h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0065h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0066h mov ecx,11h                   ; MOV(Mov_r32_imm32) [ECX,11h:imm32]                   encoding(5 bytes) = b9 11 00 00 00
006bh call 7FFC86C2D530h            ; CALL(Call_rel32_64) [FFFFFFFFFF976640h:jmp64]        encoding(5 bytes) = e8 d0 65 97 ff
0070h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
0071h mov ecx,1                     ; MOV(Mov_r32_imm32) [ECX,1h:imm32]                    encoding(5 bytes) = b9 01 00 00 00
0076h xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
0078h call 7FFC86F129D0h            ; CALL(Call_rel32_64) [FFFFFFFFFFC5BAE0h:jmp64]        encoding(5 bytes) = e8 63 ba c5 ff
007dh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> parseBytes => new byte[126]{0x57,0x56,0x53,0x48,0x83,0xEC,0x40,0xC5,0xF8,0x77,0x33,0xC0,0x89,0x44,0x24,0x3C,0x48,0x89,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x30,0x48,0x8B,0xF2,0x48,0x85,0xC9,0x74,0x44,0x48,0x8D,0x79,0x0C,0x8B,0x59,0x08,0xE8,0xB2,0xD8,0xCB,0x5C,0x4C,0x8B,0xC0,0x48,0x8D,0x4C,0x24,0x28,0x48,0x89,0x39,0x89,0x59,0x08,0x48,0x8D,0x4C,0x24,0x28,0x4C,0x8D,0x4C,0x24,0x3C,0xBA,0xE7,0x00,0x00,0x00,0xE8,0x58,0xBA,0xC5,0xFF,0x85,0xC0,0x74,0x1D,0xC5,0xFA,0x10,0x44,0x24,0x3C,0xC5,0xFA,0x11,0x06,0x48,0x83,0xC4,0x40,0x5B,0x5E,0x5F,0xC3,0xB9,0x11,0x00,0x00,0x00,0xE8,0xD0,0x65,0x97,0xFF,0xCC,0xB9,0x01,0x00,0x00,0x00,0x33,0xD2,0xE8,0x63,0xBA,0xC5,0xFF,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: double parse(string src, out double dst)
; location: [7FFC872B6F90h, 7FFC872B700Eh]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0003h sub rsp,40h                   ; SUB(Sub_rm64_imm8) [RSP,40h:imm64]                   encoding(4 bytes) = 48 83 ec 40
0007h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
000ah xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
000ch mov [rsp+38h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 38
0011h mov [rsp+28h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 28
0016h mov [rsp+30h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 30
001bh mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
001eh test rcx,rcx                  ; TEST(Test_rm64_r64) [RCX,RCX]                        encoding(3 bytes) = 48 85 c9
0021h je short 0067h                ; JE(Je_rel8_64) [67h:jmp64]                           encoding(2 bytes) = 74 44
0023h lea rdi,[rcx+0Ch]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RCX:br,DS:sr)]       encoding(4 bytes) = 48 8d 79 0c
0027h mov ebx,[rcx+8]               ; MOV(Mov_r32_rm32) [EBX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 59 08
002ah call 7FFCE3F747D0h            ; CALL(Call_rel32_64) [5CCBD840h:jmp64]                encoding(5 bytes) = e8 11 d8 cb 5c
002fh mov r8,rax                    ; MOV(Mov_r64_rm64) [R8,RAX]                           encoding(3 bytes) = 4c 8b c0
0032h lea rcx,[rsp+28h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 4c 24 28
0037h mov [rcx],rdi                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RDI]        encoding(3 bytes) = 48 89 39
003ah mov [rcx+8],ebx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EBX]        encoding(3 bytes) = 89 59 08
003dh lea rcx,[rsp+28h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 4c 24 28
0042h lea r9,[rsp+38h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 38
0047h mov edx,0E7h                  ; MOV(Mov_r32_imm32) [EDX,e7h:imm32]                   encoding(5 bytes) = ba e7 00 00 00
004ch call 7FFC86F12990h            ; CALL(Call_rel32_64) [FFFFFFFFFFC5BA00h:jmp64]        encoding(5 bytes) = e8 af b9 c5 ff
0051h test eax,eax                  ; TEST(Test_rm32_r32) [EAX,EAX]                        encoding(2 bytes) = 85 c0
0053h je short 0072h                ; JE(Je_rel8_64) [72h:jmp64]                           encoding(2 bytes) = 74 1d
0055h vmovsd xmm0,qword ptr [rsp+38h]; VMOVSD(VEX_Vmovsd_xmm_m64) [XMM0,mem(Float64,RSP:br,SS:sr)] encoding(VEX, 6 bytes) = c5 fb 10 44 24 38
005bh vmovsd qword ptr [rsi],xmm0   ; VMOVSD(VEX_Vmovsd_m64_xmm) [mem(Float64,RSI:br,DS:sr),XMM0] encoding(VEX, 4 bytes) = c5 fb 11 06
005fh add rsp,40h                   ; ADD(Add_rm64_imm8) [RSP,40h:imm64]                   encoding(4 bytes) = 48 83 c4 40
0063h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0064h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0065h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0066h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0067h mov ecx,11h                   ; MOV(Mov_r32_imm32) [ECX,11h:imm32]                   encoding(5 bytes) = b9 11 00 00 00
006ch call 7FFC86C2D530h            ; CALL(Call_rel32_64) [FFFFFFFFFF9765A0h:jmp64]        encoding(5 bytes) = e8 2f 65 97 ff
0071h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
0072h mov ecx,1                     ; MOV(Mov_r32_imm32) [ECX,1h:imm32]                    encoding(5 bytes) = b9 01 00 00 00
0077h xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
0079h call 7FFC86F129D0h            ; CALL(Call_rel32_64) [FFFFFFFFFFC5BA40h:jmp64]        encoding(5 bytes) = e8 c2 b9 c5 ff
007eh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> parseBytes => new byte[127]{0x57,0x56,0x53,0x48,0x83,0xEC,0x40,0xC5,0xF8,0x77,0x33,0xC0,0x48,0x89,0x44,0x24,0x38,0x48,0x89,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x30,0x48,0x8B,0xF2,0x48,0x85,0xC9,0x74,0x44,0x48,0x8D,0x79,0x0C,0x8B,0x59,0x08,0xE8,0x11,0xD8,0xCB,0x5C,0x4C,0x8B,0xC0,0x48,0x8D,0x4C,0x24,0x28,0x48,0x89,0x39,0x89,0x59,0x08,0x48,0x8D,0x4C,0x24,0x28,0x4C,0x8D,0x4C,0x24,0x38,0xBA,0xE7,0x00,0x00,0x00,0xE8,0xAF,0xB9,0xC5,0xFF,0x85,0xC0,0x74,0x1D,0xC5,0xFB,0x10,0x44,0x24,0x38,0xC5,0xFB,0x11,0x06,0x48,0x83,0xC4,0x40,0x5B,0x5E,0x5F,0xC3,0xB9,0x11,0x00,0x00,0x00,0xE8,0x2F,0x65,0x97,0xFF,0xCC,0xB9,0x01,0x00,0x00,0x00,0x33,0xD2,0xE8,0xC2,0xB9,0xC5,0xFF,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Decimal parse(string src, out Decimal dst)
; location: [7FFC872B7030h, 7FFC872B70C2h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0003h sub rsp,50h                   ; SUB(Sub_rm64_imm8) [RSP,50h:imm64]                   encoding(4 bytes) = 48 83 ec 50
0007h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
000ah xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
000ch mov [rsp+40h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 40
0011h mov [rsp+48h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 48
0016h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
001bh mov [rsp+28h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 28
0020h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0023h mov rdi,r8                    ; MOV(Mov_r64_rm64) [RDI,R8]                           encoding(3 bytes) = 49 8b f8
0026h test rdx,rdx                  ; TEST(Test_rm64_r64) [RDX,RDX]                        encoding(3 bytes) = 48 85 d2
0029h je short 0088h                ; JE(Je_rel8_64) [88h:jmp64]                           encoding(2 bytes) = 74 5d
002bh lea rax,[rdx+0Ch]             ; LEA(Lea_r64_m) [RAX,mem(Unknown,RDX:br,DS:sr)]       encoding(4 bytes) = 48 8d 42 0c
002fh mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0032h lea rbx,[rsp+30h]             ; LEA(Lea_r64_m) [RBX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 5c 24 30
0037h lea rcx,[rsp+20h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 4c 24 20
003ch mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
003fh mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
0042h call 7FFCE3F747D0h            ; CALL(Call_rel32_64) [5CCBD7A0h:jmp64]                encoding(5 bytes) = e8 59 d7 cb 5c
0047h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
004ah lea rdx,[rsp+20h]             ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 54 24 20
004fh mov rcx,rbx                   ; MOV(Mov_r64_rm64) [RCX,RBX]                          encoding(3 bytes) = 48 8b cb
0052h mov r8d,6Fh                   ; MOV(Mov_r32_imm32) [R8D,6fh:imm32]                   encoding(6 bytes) = 41 b8 6f 00 00 00
0058h call 7FFC86F12968h            ; CALL(Call_rel32_64) [FFFFFFFFFFC5B938h:jmp64]        encoding(5 bytes) = e8 db b8 c5 ff
005dh vmovdqu xmm0,xmmword ptr [rsp+30h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 6 bytes) = c5 fa 6f 44 24 30
0063h vmovdqu xmmword ptr [rsp+40h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 40
0069h vmovdqu xmm0,xmmword ptr [rsp+30h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 6 bytes) = c5 fa 6f 44 24 30
006fh vmovdqu xmmword ptr [rdi],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RDI:br,DS:sr),XMM0] encoding(VEX, 4 bytes) = c5 fa 7f 07
0073h vmovdqu xmm0,xmmword ptr [rsp+40h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 6 bytes) = c5 fa 6f 44 24 40
0079h vmovdqu xmmword ptr [rsi],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSI:br,DS:sr),XMM0] encoding(VEX, 4 bytes) = c5 fa 7f 06
007dh mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
0080h add rsp,50h                   ; ADD(Add_rm64_imm8) [RSP,50h:imm64]                   encoding(4 bytes) = 48 83 c4 50
0084h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0085h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0086h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0087h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0088h mov ecx,11h                   ; MOV(Mov_r32_imm32) [ECX,11h:imm32]                   encoding(5 bytes) = b9 11 00 00 00
008dh call 7FFC86C2D530h            ; CALL(Call_rel32_64) [FFFFFFFFFF976500h:jmp64]        encoding(5 bytes) = e8 6e 64 97 ff
0092h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> parseBytes => new byte[147]{0x57,0x56,0x53,0x48,0x83,0xEC,0x50,0xC5,0xF8,0x77,0x33,0xC0,0x48,0x89,0x44,0x24,0x40,0x48,0x89,0x44,0x24,0x48,0x48,0x89,0x44,0x24,0x20,0x48,0x89,0x44,0x24,0x28,0x48,0x8B,0xF1,0x49,0x8B,0xF8,0x48,0x85,0xD2,0x74,0x5D,0x48,0x8D,0x42,0x0C,0x8B,0x52,0x08,0x48,0x8D,0x5C,0x24,0x30,0x48,0x8D,0x4C,0x24,0x20,0x48,0x89,0x01,0x89,0x51,0x08,0xE8,0x59,0xD7,0xCB,0x5C,0x4C,0x8B,0xC8,0x48,0x8D,0x54,0x24,0x20,0x48,0x8B,0xCB,0x41,0xB8,0x6F,0x00,0x00,0x00,0xE8,0xDB,0xB8,0xC5,0xFF,0xC5,0xFA,0x6F,0x44,0x24,0x30,0xC5,0xFA,0x7F,0x44,0x24,0x40,0xC5,0xFA,0x6F,0x44,0x24,0x30,0xC5,0xFA,0x7F,0x07,0xC5,0xFA,0x6F,0x44,0x24,0x40,0xC5,0xFA,0x7F,0x06,0x48,0x8B,0xC6,0x48,0x83,0xC4,0x50,0x5B,0x5E,0x5F,0xC3,0xB9,0x11,0x00,0x00,0x00,0xE8,0x6E,0x64,0x97,0xFF,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: BigInteger parse(string src, out BigInteger dst)
; location: [7FFC872B7920h, 7FFC872B79A2h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0003h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0004h sub rsp,38h                   ; SUB(Sub_rm64_imm8) [RSP,38h:imm64]                   encoding(4 bytes) = 48 83 ec 38
0008h xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
000ah mov [rsp+28h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 28
000fh mov [rsp+30h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 30
0014h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0017h mov rbx,rdx                   ; MOV(Mov_r64_rm64) [RBX,RDX]                          encoding(3 bytes) = 48 8b da
001ah mov rdi,r8                    ; MOV(Mov_r64_rm64) [RDI,R8]                           encoding(3 bytes) = 49 8b f8
001dh call 7FFCE3F747D0h            ; CALL(Call_rel32_64) [5CCBCEB0h:jmp64]                encoding(5 bytes) = e8 8e ce cb 5c
0022h test rax,rax                  ; TEST(Test_rm64_r64) [RAX,RAX]                        encoding(3 bytes) = 48 85 c0
0025h je short 0031h                ; JE(Je_rel8_64) [31h:jmp64]                           encoding(2 bytes) = 74 0a
0027h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
002ah call 7FFCE3F6C5A0h            ; CALL(Call_rel32_64) [5CCB4C80h:jmp64]                encoding(5 bytes) = e8 51 4c cb 5c
002fh jmp short 0036h               ; JMP(Jmp_rel8_64) [36h:jmp64]                         encoding(2 bytes) = eb 05
0031h call 7FFCE3F747D0h            ; CALL(Call_rel32_64) [5CCBCEB0h:jmp64]                encoding(5 bytes) = e8 7a ce cb 5c
0036h lea rcx,[rsp+28h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 4c 24 28
003bh mov rdx,rbx                   ; MOV(Mov_r64_rm64) [RDX,RBX]                          encoding(3 bytes) = 48 8b d3
003eh mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
0041h mov r8d,7                     ; MOV(Mov_r32_imm32) [R8D,7h:imm32]                    encoding(6 bytes) = 41 b8 07 00 00 00
0047h call 7FFC872B7188h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFF868h:jmp64]        encoding(5 bytes) = e8 1c f8 ff ff
004ch mov rbx,[rsp+28h]             ; MOV(Mov_r64_rm64) [RBX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 5c 24 28
0051h mov ebp,[rsp+30h]             ; MOV(Mov_r32_rm32) [EBP,mem(32u,RSP:br,SS:sr)]        encoding(4 bytes) = 8b 6c 24 30
0055h mov rdx,[rsp+28h]             ; MOV(Mov_r64_rm64) [RDX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 54 24 28
005ah mov rcx,rdi                   ; MOV(Mov_r64_rm64) [RCX,RDI]                          encoding(3 bytes) = 48 8b cf
005dh call 7FFCE6738480h            ; CALL(Call_rel32_64) [5F480B60h:jmp64]                encoding(5 bytes) = e8 fe 0a 48 5f
0062h mov edx,[rsp+30h]             ; MOV(Mov_r32_rm32) [EDX,mem(32u,RSP:br,SS:sr)]        encoding(4 bytes) = 8b 54 24 30
0066h mov [rdi+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RDI:br,DS:sr),EDX]        encoding(3 bytes) = 89 57 08
0069h mov rcx,rsi                   ; MOV(Mov_r64_rm64) [RCX,RSI]                          encoding(3 bytes) = 48 8b ce
006ch mov rdx,rbx                   ; MOV(Mov_r64_rm64) [RDX,RBX]                          encoding(3 bytes) = 48 8b d3
006fh call 7FFCE6738480h            ; CALL(Call_rel32_64) [5F480B60h:jmp64]                encoding(5 bytes) = e8 ec 0a 48 5f
0074h mov [rsi+8],ebp               ; MOV(Mov_rm32_r32) [mem(32u,RSI:br,DS:sr),EBP]        encoding(3 bytes) = 89 6e 08
0077h mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
007ah add rsp,38h                   ; ADD(Add_rm64_imm8) [RSP,38h:imm64]                   encoding(4 bytes) = 48 83 c4 38
007eh pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
007fh pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0080h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0081h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0082h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> parseBytes => new byte[131]{0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x38,0x33,0xC0,0x48,0x89,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x30,0x48,0x8B,0xF1,0x48,0x8B,0xDA,0x49,0x8B,0xF8,0xE8,0x8E,0xCE,0xCB,0x5C,0x48,0x85,0xC0,0x74,0x0A,0x48,0x8B,0xC8,0xE8,0x51,0x4C,0xCB,0x5C,0xEB,0x05,0xE8,0x7A,0xCE,0xCB,0x5C,0x48,0x8D,0x4C,0x24,0x28,0x48,0x8B,0xD3,0x4C,0x8B,0xC8,0x41,0xB8,0x07,0x00,0x00,0x00,0xE8,0x1C,0xF8,0xFF,0xFF,0x48,0x8B,0x5C,0x24,0x28,0x8B,0x6C,0x24,0x30,0x48,0x8B,0x54,0x24,0x28,0x48,0x8B,0xCF,0xE8,0xFE,0x0A,0x48,0x5F,0x8B,0x54,0x24,0x30,0x89,0x57,0x08,0x48,0x8B,0xCE,0x48,0x8B,0xD3,0xE8,0xEC,0x0A,0x48,0x5F,0x89,0x6E,0x08,0x48,0x8B,0xC6,0x48,0x83,0xC4,0x38,0x5B,0x5D,0x5E,0x5F,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref sbyte sal(ref sbyte src, int offset)
; location: [7FFC872B79C0h, 7FFC872B79D4h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0008h movsx r8,byte ptr [rax]       ; MOVSX(Movsx_r64_rm8) [R8,mem(8i,RAX:br,DS:sr)]       encoding(4 bytes) = 4c 0f be 00
000ch mov ecx,edx                   ; MOV(Mov_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 8b ca
000eh shl r8d,cl                    ; SHL(Shl_rm32_CL) [R8D,CL]                            encoding(3 bytes) = 41 d3 e0
0011h mov [rax],r8b                 ; MOV(Mov_rm8_r8) [mem(8u,RAX:br,DS:sr),R8L]           encoding(3 bytes) = 44 88 00
0014h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> salBytes => new byte[21]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0xC1,0x4C,0x0F,0xBE,0x00,0x8B,0xCA,0x41,0xD3,0xE0,0x44,0x88,0x00,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref byte sal(ref byte src, int offset)
; location: [7FFC872B79F0h, 7FFC872B7A04h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0008h movzx r8d,byte ptr [rax]      ; MOVZX(Movzx_r32_rm8) [R8D,mem(8u,RAX:br,DS:sr)]      encoding(4 bytes) = 44 0f b6 00
000ch mov ecx,edx                   ; MOV(Mov_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 8b ca
000eh shl r8d,cl                    ; SHL(Shl_rm32_CL) [R8D,CL]                            encoding(3 bytes) = 41 d3 e0
0011h mov [rax],r8b                 ; MOV(Mov_rm8_r8) [mem(8u,RAX:br,DS:sr),R8L]           encoding(3 bytes) = 44 88 00
0014h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> salBytes => new byte[21]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0xC1,0x44,0x0F,0xB6,0x00,0x8B,0xCA,0x41,0xD3,0xE0,0x44,0x88,0x00,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref short sal(ref short src, int offset)
; location: [7FFC872B7A20h, 7FFC872B7A35h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0008h movsx r8,word ptr [rax]       ; MOVSX(Movsx_r64_rm16) [R8,mem(16i,RAX:br,DS:sr)]     encoding(4 bytes) = 4c 0f bf 00
000ch mov ecx,edx                   ; MOV(Mov_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 8b ca
000eh shl r8d,cl                    ; SHL(Shl_rm32_CL) [R8D,CL]                            encoding(3 bytes) = 41 d3 e0
0011h mov [rax],r8w                 ; MOV(Mov_rm16_r16) [mem(16u,RAX:br,DS:sr),R8W]        encoding(4 bytes) = 66 44 89 00
0015h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> salBytes => new byte[22]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0xC1,0x4C,0x0F,0xBF,0x00,0x8B,0xCA,0x41,0xD3,0xE0,0x66,0x44,0x89,0x00,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref ushort sal(ref ushort src, int offset)
; location: [7FFC872B7A50h, 7FFC872B7A65h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0008h movzx r8d,word ptr [rax]      ; MOVZX(Movzx_r32_rm16) [R8D,mem(16u,RAX:br,DS:sr)]    encoding(4 bytes) = 44 0f b7 00
000ch mov ecx,edx                   ; MOV(Mov_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 8b ca
000eh shl r8d,cl                    ; SHL(Shl_rm32_CL) [R8D,CL]                            encoding(3 bytes) = 41 d3 e0
0011h mov [rax],r8w                 ; MOV(Mov_rm16_r16) [mem(16u,RAX:br,DS:sr),R8W]        encoding(4 bytes) = 66 44 89 00
0015h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> salBytes => new byte[22]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0xC1,0x44,0x0F,0xB7,0x00,0x8B,0xCA,0x41,0xD3,0xE0,0x66,0x44,0x89,0x00,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref int sal(ref int src, int offset)
; location: [7FFC872B7A80h, 7FFC872B7A8Ch]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0008h mov ecx,edx                   ; MOV(Mov_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 8b ca
000ah shl dword ptr [rax],cl        ; SHL(Shl_rm32_CL) [mem(32u,RAX:br,DS:sr),CL]          encoding(2 bytes) = d3 20
000ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> salBytes => new byte[13]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0xC1,0x8B,0xCA,0xD3,0x20,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref uint sal(ref uint src, int offset)
; location: [7FFC872B7AA0h, 7FFC872B7AACh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0008h mov ecx,edx                   ; MOV(Mov_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 8b ca
000ah shl dword ptr [rax],cl        ; SHL(Shl_rm32_CL) [mem(32u,RAX:br,DS:sr),CL]          encoding(2 bytes) = d3 20
000ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> salBytes => new byte[13]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0xC1,0x8B,0xCA,0xD3,0x20,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref long sal(ref long src, int offset)
; location: [7FFC872B7AC0h, 7FFC872B7ACDh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0008h mov ecx,edx                   ; MOV(Mov_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 8b ca
000ah shl qword ptr [rax],cl        ; SHL(Shl_rm64_CL) [mem(64u,RAX:br,DS:sr),CL]          encoding(3 bytes) = 48 d3 20
000dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> salBytes => new byte[14]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0xC1,0x8B,0xCA,0x48,0xD3,0x20,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref ulong sal(ref ulong src, int offset)
; location: [7FFC872B7AE0h, 7FFC872B7AEDh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0008h mov ecx,edx                   ; MOV(Mov_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 8b ca
000ah shl qword ptr [rax],cl        ; SHL(Shl_rm64_CL) [mem(64u,RAX:br,DS:sr),CL]          encoding(3 bytes) = 48 d3 20
000dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> salBytes => new byte[14]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0xC1,0x8B,0xCA,0x48,0xD3,0x20,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref sbyte sar(ref sbyte src, int offset)
; location: [7FFC872B7B00h, 7FFC872B7B14h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0008h movsx r8,byte ptr [rax]       ; MOVSX(Movsx_r64_rm8) [R8,mem(8i,RAX:br,DS:sr)]       encoding(4 bytes) = 4c 0f be 00
000ch mov ecx,edx                   ; MOV(Mov_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 8b ca
000eh sar r8d,cl                    ; SAR(Sar_rm32_CL) [R8D,CL]                            encoding(3 bytes) = 41 d3 f8
0011h mov [rax],r8b                 ; MOV(Mov_rm8_r8) [mem(8u,RAX:br,DS:sr),R8L]           encoding(3 bytes) = 44 88 00
0014h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> sarBytes => new byte[21]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0xC1,0x4C,0x0F,0xBE,0x00,0x8B,0xCA,0x41,0xD3,0xF8,0x44,0x88,0x00,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref byte sar(ref byte src, int offset)
; location: [7FFC872B7B30h, 7FFC872B7B44h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0008h movzx r8d,byte ptr [rax]      ; MOVZX(Movzx_r32_rm8) [R8D,mem(8u,RAX:br,DS:sr)]      encoding(4 bytes) = 44 0f b6 00
000ch mov ecx,edx                   ; MOV(Mov_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 8b ca
000eh sar r8d,cl                    ; SAR(Sar_rm32_CL) [R8D,CL]                            encoding(3 bytes) = 41 d3 f8
0011h mov [rax],r8b                 ; MOV(Mov_rm8_r8) [mem(8u,RAX:br,DS:sr),R8L]           encoding(3 bytes) = 44 88 00
0014h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> sarBytes => new byte[21]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0xC1,0x44,0x0F,0xB6,0x00,0x8B,0xCA,0x41,0xD3,0xF8,0x44,0x88,0x00,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref short sar(ref short src, int offset)
; location: [7FFC872B7B60h, 7FFC872B7B75h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0008h movsx r8,word ptr [rax]       ; MOVSX(Movsx_r64_rm16) [R8,mem(16i,RAX:br,DS:sr)]     encoding(4 bytes) = 4c 0f bf 00
000ch mov ecx,edx                   ; MOV(Mov_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 8b ca
000eh sar r8d,cl                    ; SAR(Sar_rm32_CL) [R8D,CL]                            encoding(3 bytes) = 41 d3 f8
0011h mov [rax],r8w                 ; MOV(Mov_rm16_r16) [mem(16u,RAX:br,DS:sr),R8W]        encoding(4 bytes) = 66 44 89 00
0015h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> sarBytes => new byte[22]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0xC1,0x4C,0x0F,0xBF,0x00,0x8B,0xCA,0x41,0xD3,0xF8,0x66,0x44,0x89,0x00,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref ushort sar(ref ushort src, int offset)
; location: [7FFC872B7B90h, 7FFC872B7BA5h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0008h movzx r8d,word ptr [rax]      ; MOVZX(Movzx_r32_rm16) [R8D,mem(16u,RAX:br,DS:sr)]    encoding(4 bytes) = 44 0f b7 00
000ch mov ecx,edx                   ; MOV(Mov_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 8b ca
000eh sar r8d,cl                    ; SAR(Sar_rm32_CL) [R8D,CL]                            encoding(3 bytes) = 41 d3 f8
0011h mov [rax],r8w                 ; MOV(Mov_rm16_r16) [mem(16u,RAX:br,DS:sr),R8W]        encoding(4 bytes) = 66 44 89 00
0015h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> sarBytes => new byte[22]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0xC1,0x44,0x0F,0xB7,0x00,0x8B,0xCA,0x41,0xD3,0xF8,0x66,0x44,0x89,0x00,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref int sar(ref int src, int offset)
; location: [7FFC872B7BC0h, 7FFC872B7BCCh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0008h mov ecx,edx                   ; MOV(Mov_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 8b ca
000ah sar dword ptr [rax],cl        ; SAR(Sar_rm32_CL) [mem(32i,RAX:br,DS:sr),CL]          encoding(2 bytes) = d3 38
000ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> sarBytes => new byte[13]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0xC1,0x8B,0xCA,0xD3,0x38,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref uint sar(ref uint src, int offset)
; location: [7FFC872B7BE0h, 7FFC872B7BECh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0008h mov ecx,edx                   ; MOV(Mov_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 8b ca
000ah shr dword ptr [rax],cl        ; SHR(Shr_rm32_CL) [mem(32u,RAX:br,DS:sr),CL]          encoding(2 bytes) = d3 28
000ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> sarBytes => new byte[13]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0xC1,0x8B,0xCA,0xD3,0x28,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref long sar(ref long src, int offset)
; location: [7FFC872B7C00h, 7FFC872B7C0Dh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0008h mov ecx,edx                   ; MOV(Mov_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 8b ca
000ah sar qword ptr [rax],cl        ; SAR(Sar_rm64_CL) [mem(64i,RAX:br,DS:sr),CL]          encoding(3 bytes) = 48 d3 38
000dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> sarBytes => new byte[14]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0xC1,0x8B,0xCA,0x48,0xD3,0x38,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref ulong sar(ref ulong src, int offset)
; location: [7FFC872B7C20h, 7FFC872B7C2Dh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0008h mov ecx,edx                   ; MOV(Mov_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 8b ca
000ah shr qword ptr [rax],cl        ; SHR(Shr_rm64_CL) [mem(64u,RAX:br,DS:sr),CL]          encoding(3 bytes) = 48 d3 28
000dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> sarBytes => new byte[14]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0xC1,0x8B,0xCA,0x48,0xD3,0x28,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<sbyte> scale(ReadOnlySpan<sbyte> src, sbyte factor, Span<sbyte> dst)
; location: [7FFC872B7C40h, 7FFC872B7C93h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0006h mov r10,[r9]                  ; MOV(Mov_r64_rm64) [R10,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 4d 8b 11
0009h mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000dh xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
0010h test r9d,r9d                  ; TEST(Test_rm32_r32) [R9D,R9D]                        encoding(3 bytes) = 45 85 c9
0013h jle short 003dh               ; JLE(Jle_rel8_64) [3Dh:jmp64]                         encoding(2 bytes) = 7e 28
0015h movsx rax,r8b                 ; MOVSX(Movsx_r64_rm8) [RAX,R8L]                       encoding(4 bytes) = 49 0f be c0
0019h movsxd r8,r11d                ; MOVSXD(Movsxd_r64_rm32) [R8,R11D]                    encoding(3 bytes) = 4d 63 c3
001ch lea rsi,[r10+r8]              ; LEA(Lea_r64_m) [RSI,mem(Unknown,R10:br,DS:sr)]       encoding(4 bytes) = 4b 8d 34 02
0020h cmp r11d,[rdx+8]              ; CMP(Cmp_r32_rm32) [R11D,mem(32u,RDX:br,DS:sr)]       encoding(4 bytes) = 44 3b 5a 08
0024h jae short 004eh               ; JAE(Jae_rel8_64) [4Eh:jmp64]                         encoding(2 bytes) = 73 28
0026h mov rdi,[rdx]                 ; MOV(Mov_r64_rm64) [RDI,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 3a
0029h movsx r8,byte ptr [rdi+r8]    ; MOVSX(Movsx_r64_rm8) [R8,mem(8i,RDI:br,DS:sr)]       encoding(5 bytes) = 4e 0f be 04 07
002eh imul r8d,eax                  ; IMUL(Imul_r32_rm32) [R8D,EAX]                        encoding(4 bytes) = 44 0f af c0
0032h mov [rsi],r8b                 ; MOV(Mov_rm8_r8) [mem(8u,RSI:br,DS:sr),R8L]           encoding(3 bytes) = 44 88 06
0035h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
0038h cmp r11d,r9d                  ; CMP(Cmp_r32_rm32) [R11D,R9D]                         encoding(3 bytes) = 45 3b d9
003bh jl short 0019h                ; JL(Jl_rel8_64) [19h:jmp64]                           encoding(2 bytes) = 7c dc
003dh mov [rcx],r10                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R10]        encoding(3 bytes) = 4c 89 11
0040h mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0044h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0047h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
004bh pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
004ch pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
004dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
004eh call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5AD170h:jmp64]                encoding(5 bytes) = e8 1d d1 5a 5f
0053h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> scaleBytes => new byte[84]{0x57,0x56,0x48,0x83,0xEC,0x28,0x4D,0x8B,0x11,0x45,0x8B,0x49,0x08,0x45,0x33,0xDB,0x45,0x85,0xC9,0x7E,0x28,0x49,0x0F,0xBE,0xC0,0x4D,0x63,0xC3,0x4B,0x8D,0x34,0x02,0x44,0x3B,0x5A,0x08,0x73,0x28,0x48,0x8B,0x3A,0x4E,0x0F,0xBE,0x04,0x07,0x44,0x0F,0xAF,0xC0,0x44,0x88,0x06,0x41,0xFF,0xC3,0x45,0x3B,0xD9,0x7C,0xDC,0x4C,0x89,0x11,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x28,0x5E,0x5F,0xC3,0xE8,0x1D,0xD1,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<byte> scale(ReadOnlySpan<byte> src, byte factor, Span<byte> dst)
; location: [7FFC872B7CB0h, 7FFC872B7D03h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0006h mov r10,[r9]                  ; MOV(Mov_r64_rm64) [R10,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 4d 8b 11
0009h mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000dh xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
0010h test r9d,r9d                  ; TEST(Test_rm32_r32) [R9D,R9D]                        encoding(3 bytes) = 45 85 c9
0013h jle short 003dh               ; JLE(Jle_rel8_64) [3Dh:jmp64]                         encoding(2 bytes) = 7e 28
0015h movzx eax,r8b                 ; MOVZX(Movzx_r32_rm8) [EAX,R8L]                       encoding(4 bytes) = 41 0f b6 c0
0019h movsxd r8,r11d                ; MOVSXD(Movsxd_r64_rm32) [R8,R11D]                    encoding(3 bytes) = 4d 63 c3
001ch lea rsi,[r10+r8]              ; LEA(Lea_r64_m) [RSI,mem(Unknown,R10:br,DS:sr)]       encoding(4 bytes) = 4b 8d 34 02
0020h cmp r11d,[rdx+8]              ; CMP(Cmp_r32_rm32) [R11D,mem(32u,RDX:br,DS:sr)]       encoding(4 bytes) = 44 3b 5a 08
0024h jae short 004eh               ; JAE(Jae_rel8_64) [4Eh:jmp64]                         encoding(2 bytes) = 73 28
0026h mov rdi,[rdx]                 ; MOV(Mov_r64_rm64) [RDI,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 3a
0029h movzx r8d,byte ptr [rdi+r8]   ; MOVZX(Movzx_r32_rm8) [R8D,mem(8u,RDI:br,DS:sr)]      encoding(5 bytes) = 46 0f b6 04 07
002eh imul r8d,eax                  ; IMUL(Imul_r32_rm32) [R8D,EAX]                        encoding(4 bytes) = 44 0f af c0
0032h mov [rsi],r8b                 ; MOV(Mov_rm8_r8) [mem(8u,RSI:br,DS:sr),R8L]           encoding(3 bytes) = 44 88 06
0035h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
0038h cmp r11d,r9d                  ; CMP(Cmp_r32_rm32) [R11D,R9D]                         encoding(3 bytes) = 45 3b d9
003bh jl short 0019h                ; JL(Jl_rel8_64) [19h:jmp64]                           encoding(2 bytes) = 7c dc
003dh mov [rcx],r10                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R10]        encoding(3 bytes) = 4c 89 11
0040h mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0044h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0047h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
004bh pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
004ch pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
004dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
004eh call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5AD100h:jmp64]                encoding(5 bytes) = e8 ad d0 5a 5f
0053h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> scaleBytes => new byte[84]{0x57,0x56,0x48,0x83,0xEC,0x28,0x4D,0x8B,0x11,0x45,0x8B,0x49,0x08,0x45,0x33,0xDB,0x45,0x85,0xC9,0x7E,0x28,0x41,0x0F,0xB6,0xC0,0x4D,0x63,0xC3,0x4B,0x8D,0x34,0x02,0x44,0x3B,0x5A,0x08,0x73,0x28,0x48,0x8B,0x3A,0x46,0x0F,0xB6,0x04,0x07,0x44,0x0F,0xAF,0xC0,0x44,0x88,0x06,0x41,0xFF,0xC3,0x45,0x3B,0xD9,0x7C,0xDC,0x4C,0x89,0x11,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x28,0x5E,0x5F,0xC3,0xE8,0xAD,0xD0,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<short> scale(ReadOnlySpan<short> src, short factor, Span<short> dst)
; location: [7FFC872B7D20h, 7FFC872B7D74h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0006h mov r10,[r9]                  ; MOV(Mov_r64_rm64) [R10,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 4d 8b 11
0009h mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000dh xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
0010h test r9d,r9d                  ; TEST(Test_rm32_r32) [R9D,R9D]                        encoding(3 bytes) = 45 85 c9
0013h jle short 003eh               ; JLE(Jle_rel8_64) [3Eh:jmp64]                         encoding(2 bytes) = 7e 29
0015h movsx rax,r8w                 ; MOVSX(Movsx_r64_rm16) [RAX,R8W]                      encoding(4 bytes) = 49 0f bf c0
0019h movsxd r8,r11d                ; MOVSXD(Movsxd_r64_rm32) [R8,R11D]                    encoding(3 bytes) = 4d 63 c3
001ch lea rsi,[r10+r8*2]            ; LEA(Lea_r64_m) [RSI,mem(Unknown,R10:br,DS:sr)]       encoding(4 bytes) = 4b 8d 34 42
0020h cmp r11d,[rdx+8]              ; CMP(Cmp_r32_rm32) [R11D,mem(32u,RDX:br,DS:sr)]       encoding(4 bytes) = 44 3b 5a 08
0024h jae short 004fh               ; JAE(Jae_rel8_64) [4Fh:jmp64]                         encoding(2 bytes) = 73 29
0026h mov rdi,[rdx]                 ; MOV(Mov_r64_rm64) [RDI,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 3a
0029h movsx r8,word ptr [rdi+r8*2]  ; MOVSX(Movsx_r64_rm16) [R8,mem(16i,RDI:br,DS:sr)]     encoding(5 bytes) = 4e 0f bf 04 47
002eh imul r8d,eax                  ; IMUL(Imul_r32_rm32) [R8D,EAX]                        encoding(4 bytes) = 44 0f af c0
0032h mov [rsi],r8w                 ; MOV(Mov_rm16_r16) [mem(16u,RSI:br,DS:sr),R8W]        encoding(4 bytes) = 66 44 89 06
0036h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
0039h cmp r11d,r9d                  ; CMP(Cmp_r32_rm32) [R11D,R9D]                         encoding(3 bytes) = 45 3b d9
003ch jl short 0019h                ; JL(Jl_rel8_64) [19h:jmp64]                           encoding(2 bytes) = 7c db
003eh mov [rcx],r10                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R10]        encoding(3 bytes) = 4c 89 11
0041h mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0045h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0048h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
004ch pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
004dh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
004eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
004fh call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5AD090h:jmp64]                encoding(5 bytes) = e8 3c d0 5a 5f
0054h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> scaleBytes => new byte[85]{0x57,0x56,0x48,0x83,0xEC,0x28,0x4D,0x8B,0x11,0x45,0x8B,0x49,0x08,0x45,0x33,0xDB,0x45,0x85,0xC9,0x7E,0x29,0x49,0x0F,0xBF,0xC0,0x4D,0x63,0xC3,0x4B,0x8D,0x34,0x42,0x44,0x3B,0x5A,0x08,0x73,0x29,0x48,0x8B,0x3A,0x4E,0x0F,0xBF,0x04,0x47,0x44,0x0F,0xAF,0xC0,0x66,0x44,0x89,0x06,0x41,0xFF,0xC3,0x45,0x3B,0xD9,0x7C,0xDB,0x4C,0x89,0x11,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x28,0x5E,0x5F,0xC3,0xE8,0x3C,0xD0,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<ushort> scale(ReadOnlySpan<ushort> src, ushort factor, Span<ushort> dst)
; location: [7FFC872B7D90h, 7FFC872B7DE4h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0006h mov r10,[r9]                  ; MOV(Mov_r64_rm64) [R10,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 4d 8b 11
0009h mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000dh xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
0010h test r9d,r9d                  ; TEST(Test_rm32_r32) [R9D,R9D]                        encoding(3 bytes) = 45 85 c9
0013h jle short 003eh               ; JLE(Jle_rel8_64) [3Eh:jmp64]                         encoding(2 bytes) = 7e 29
0015h movzx eax,r8w                 ; MOVZX(Movzx_r32_rm16) [EAX,R8W]                      encoding(4 bytes) = 41 0f b7 c0
0019h movsxd r8,r11d                ; MOVSXD(Movsxd_r64_rm32) [R8,R11D]                    encoding(3 bytes) = 4d 63 c3
001ch lea rsi,[r10+r8*2]            ; LEA(Lea_r64_m) [RSI,mem(Unknown,R10:br,DS:sr)]       encoding(4 bytes) = 4b 8d 34 42
0020h cmp r11d,[rdx+8]              ; CMP(Cmp_r32_rm32) [R11D,mem(32u,RDX:br,DS:sr)]       encoding(4 bytes) = 44 3b 5a 08
0024h jae short 004fh               ; JAE(Jae_rel8_64) [4Fh:jmp64]                         encoding(2 bytes) = 73 29
0026h mov rdi,[rdx]                 ; MOV(Mov_r64_rm64) [RDI,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 3a
0029h movzx r8d,word ptr [rdi+r8*2] ; MOVZX(Movzx_r32_rm16) [R8D,mem(16u,RDI:br,DS:sr)]    encoding(5 bytes) = 46 0f b7 04 47
002eh imul r8d,eax                  ; IMUL(Imul_r32_rm32) [R8D,EAX]                        encoding(4 bytes) = 44 0f af c0
0032h mov [rsi],r8w                 ; MOV(Mov_rm16_r16) [mem(16u,RSI:br,DS:sr),R8W]        encoding(4 bytes) = 66 44 89 06
0036h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
0039h cmp r11d,r9d                  ; CMP(Cmp_r32_rm32) [R11D,R9D]                         encoding(3 bytes) = 45 3b d9
003ch jl short 0019h                ; JL(Jl_rel8_64) [19h:jmp64]                           encoding(2 bytes) = 7c db
003eh mov [rcx],r10                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R10]        encoding(3 bytes) = 4c 89 11
0041h mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0045h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0048h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
004ch pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
004dh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
004eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
004fh call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5AD020h:jmp64]                encoding(5 bytes) = e8 cc cf 5a 5f
0054h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> scaleBytes => new byte[85]{0x57,0x56,0x48,0x83,0xEC,0x28,0x4D,0x8B,0x11,0x45,0x8B,0x49,0x08,0x45,0x33,0xDB,0x45,0x85,0xC9,0x7E,0x29,0x41,0x0F,0xB7,0xC0,0x4D,0x63,0xC3,0x4B,0x8D,0x34,0x42,0x44,0x3B,0x5A,0x08,0x73,0x29,0x48,0x8B,0x3A,0x46,0x0F,0xB7,0x04,0x47,0x44,0x0F,0xAF,0xC0,0x66,0x44,0x89,0x06,0x41,0xFF,0xC3,0x45,0x3B,0xD9,0x7C,0xDB,0x4C,0x89,0x11,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x28,0x5E,0x5F,0xC3,0xE8,0xCC,0xCF,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<int> scale(ReadOnlySpan<int> src, int factor, Span<int> dst)
; location: [7FFC872B7E00h, 7FFC872B7E4Eh]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0006h mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
0009h mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000dh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
0010h test r9d,r9d                  ; TEST(Test_rm32_r32) [R9D,R9D]                        encoding(3 bytes) = 45 85 c9
0013h jle short 0038h               ; JLE(Jle_rel8_64) [38h:jmp64]                         encoding(2 bytes) = 7e 23
0015h movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
0018h lea rsi,[rax+r11*4]           ; LEA(Lea_r64_m) [RSI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 4a 8d 34 98
001ch cmp r10d,[rdx+8]              ; CMP(Cmp_r32_rm32) [R10D,mem(32u,RDX:br,DS:sr)]       encoding(4 bytes) = 44 3b 52 08
0020h jae short 0049h               ; JAE(Jae_rel8_64) [49h:jmp64]                         encoding(2 bytes) = 73 27
0022h mov rdi,[rdx]                 ; MOV(Mov_r64_rm64) [RDI,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 3a
0025h mov r11d,[rdi+r11*4]          ; MOV(Mov_r32_rm32) [R11D,mem(32u,RDI:br,DS:sr)]       encoding(4 bytes) = 46 8b 1c 9f
0029h imul r11d,r8d                 ; IMUL(Imul_r32_rm32) [R11D,R8D]                       encoding(4 bytes) = 45 0f af d8
002dh mov [rsi],r11d                ; MOV(Mov_rm32_r32) [mem(32u,RSI:br,DS:sr),R11D]       encoding(3 bytes) = 44 89 1e
0030h inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
0033h cmp r10d,r9d                  ; CMP(Cmp_r32_rm32) [R10D,R9D]                         encoding(3 bytes) = 45 3b d1
0036h jl short 0015h                ; JL(Jl_rel8_64) [15h:jmp64]                           encoding(2 bytes) = 7c dd
0038h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
003bh mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
003fh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0042h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
0046h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0047h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0048h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0049h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5ACFB0h:jmp64]                encoding(5 bytes) = e8 62 cf 5a 5f
004eh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> scaleBytes => new byte[79]{0x57,0x56,0x48,0x83,0xEC,0x28,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x45,0x33,0xD2,0x45,0x85,0xC9,0x7E,0x23,0x4D,0x63,0xDA,0x4A,0x8D,0x34,0x98,0x44,0x3B,0x52,0x08,0x73,0x27,0x48,0x8B,0x3A,0x46,0x8B,0x1C,0x9F,0x45,0x0F,0xAF,0xD8,0x44,0x89,0x1E,0x41,0xFF,0xC2,0x45,0x3B,0xD1,0x7C,0xDD,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x28,0x5E,0x5F,0xC3,0xE8,0x62,0xCF,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<uint> scale(ReadOnlySpan<uint> src, uint factor, Span<uint> dst)
; location: [7FFC872B7E70h, 7FFC872B7EBEh]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0006h mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
0009h mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000dh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
0010h test r9d,r9d                  ; TEST(Test_rm32_r32) [R9D,R9D]                        encoding(3 bytes) = 45 85 c9
0013h jle short 0038h               ; JLE(Jle_rel8_64) [38h:jmp64]                         encoding(2 bytes) = 7e 23
0015h movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
0018h lea rsi,[rax+r11*4]           ; LEA(Lea_r64_m) [RSI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 4a 8d 34 98
001ch cmp r10d,[rdx+8]              ; CMP(Cmp_r32_rm32) [R10D,mem(32u,RDX:br,DS:sr)]       encoding(4 bytes) = 44 3b 52 08
0020h jae short 0049h               ; JAE(Jae_rel8_64) [49h:jmp64]                         encoding(2 bytes) = 73 27
0022h mov rdi,[rdx]                 ; MOV(Mov_r64_rm64) [RDI,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 3a
0025h mov r11d,[rdi+r11*4]          ; MOV(Mov_r32_rm32) [R11D,mem(32u,RDI:br,DS:sr)]       encoding(4 bytes) = 46 8b 1c 9f
0029h imul r11d,r8d                 ; IMUL(Imul_r32_rm32) [R11D,R8D]                       encoding(4 bytes) = 45 0f af d8
002dh mov [rsi],r11d                ; MOV(Mov_rm32_r32) [mem(32u,RSI:br,DS:sr),R11D]       encoding(3 bytes) = 44 89 1e
0030h inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
0033h cmp r10d,r9d                  ; CMP(Cmp_r32_rm32) [R10D,R9D]                         encoding(3 bytes) = 45 3b d1
0036h jl short 0015h                ; JL(Jl_rel8_64) [15h:jmp64]                           encoding(2 bytes) = 7c dd
0038h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
003bh mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
003fh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0042h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
0046h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0047h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0048h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0049h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5ACF40h:jmp64]                encoding(5 bytes) = e8 f2 ce 5a 5f
004eh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> scaleBytes => new byte[79]{0x57,0x56,0x48,0x83,0xEC,0x28,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x45,0x33,0xD2,0x45,0x85,0xC9,0x7E,0x23,0x4D,0x63,0xDA,0x4A,0x8D,0x34,0x98,0x44,0x3B,0x52,0x08,0x73,0x27,0x48,0x8B,0x3A,0x46,0x8B,0x1C,0x9F,0x45,0x0F,0xAF,0xD8,0x44,0x89,0x1E,0x41,0xFF,0xC2,0x45,0x3B,0xD1,0x7C,0xDD,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x28,0x5E,0x5F,0xC3,0xE8,0xF2,0xCE,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<long> scale(ReadOnlySpan<long> src, long factor, Span<long> dst)
; location: [7FFC872B7EE0h, 7FFC872B7F2Eh]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0006h mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
0009h mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000dh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
0010h test r9d,r9d                  ; TEST(Test_rm32_r32) [R9D,R9D]                        encoding(3 bytes) = 45 85 c9
0013h jle short 0038h               ; JLE(Jle_rel8_64) [38h:jmp64]                         encoding(2 bytes) = 7e 23
0015h movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
0018h lea rsi,[rax+r11*8]           ; LEA(Lea_r64_m) [RSI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 4a 8d 34 d8
001ch cmp r10d,[rdx+8]              ; CMP(Cmp_r32_rm32) [R10D,mem(32u,RDX:br,DS:sr)]       encoding(4 bytes) = 44 3b 52 08
0020h jae short 0049h               ; JAE(Jae_rel8_64) [49h:jmp64]                         encoding(2 bytes) = 73 27
0022h mov rdi,[rdx]                 ; MOV(Mov_r64_rm64) [RDI,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 3a
0025h mov r11,[rdi+r11*8]           ; MOV(Mov_r64_rm64) [R11,mem(64u,RDI:br,DS:sr)]        encoding(4 bytes) = 4e 8b 1c df
0029h imul r11,r8                   ; IMUL(Imul_r64_rm64) [R11,R8]                         encoding(4 bytes) = 4d 0f af d8
002dh mov [rsi],r11                 ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),R11]        encoding(3 bytes) = 4c 89 1e
0030h inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
0033h cmp r10d,r9d                  ; CMP(Cmp_r32_rm32) [R10D,R9D]                         encoding(3 bytes) = 45 3b d1
0036h jl short 0015h                ; JL(Jl_rel8_64) [15h:jmp64]                           encoding(2 bytes) = 7c dd
0038h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
003bh mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
003fh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0042h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
0046h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0047h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0048h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0049h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5ACED0h:jmp64]                encoding(5 bytes) = e8 82 ce 5a 5f
004eh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> scaleBytes => new byte[79]{0x57,0x56,0x48,0x83,0xEC,0x28,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x45,0x33,0xD2,0x45,0x85,0xC9,0x7E,0x23,0x4D,0x63,0xDA,0x4A,0x8D,0x34,0xD8,0x44,0x3B,0x52,0x08,0x73,0x27,0x48,0x8B,0x3A,0x4E,0x8B,0x1C,0xDF,0x4D,0x0F,0xAF,0xD8,0x4C,0x89,0x1E,0x41,0xFF,0xC2,0x45,0x3B,0xD1,0x7C,0xDD,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x28,0x5E,0x5F,0xC3,0xE8,0x82,0xCE,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<ulong> scale(ReadOnlySpan<ulong> src, ulong factor, Span<ulong> dst)
; location: [7FFC872B7F50h, 7FFC872B7F9Eh]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0006h mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
0009h mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000dh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
0010h test r9d,r9d                  ; TEST(Test_rm32_r32) [R9D,R9D]                        encoding(3 bytes) = 45 85 c9
0013h jle short 0038h               ; JLE(Jle_rel8_64) [38h:jmp64]                         encoding(2 bytes) = 7e 23
0015h movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
0018h lea rsi,[rax+r11*8]           ; LEA(Lea_r64_m) [RSI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 4a 8d 34 d8
001ch cmp r10d,[rdx+8]              ; CMP(Cmp_r32_rm32) [R10D,mem(32u,RDX:br,DS:sr)]       encoding(4 bytes) = 44 3b 52 08
0020h jae short 0049h               ; JAE(Jae_rel8_64) [49h:jmp64]                         encoding(2 bytes) = 73 27
0022h mov rdi,[rdx]                 ; MOV(Mov_r64_rm64) [RDI,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 3a
0025h mov r11,[rdi+r11*8]           ; MOV(Mov_r64_rm64) [R11,mem(64u,RDI:br,DS:sr)]        encoding(4 bytes) = 4e 8b 1c df
0029h imul r11,r8                   ; IMUL(Imul_r64_rm64) [R11,R8]                         encoding(4 bytes) = 4d 0f af d8
002dh mov [rsi],r11                 ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),R11]        encoding(3 bytes) = 4c 89 1e
0030h inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
0033h cmp r10d,r9d                  ; CMP(Cmp_r32_rm32) [R10D,R9D]                         encoding(3 bytes) = 45 3b d1
0036h jl short 0015h                ; JL(Jl_rel8_64) [15h:jmp64]                           encoding(2 bytes) = 7c dd
0038h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
003bh mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
003fh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0042h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
0046h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0047h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0048h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0049h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5ACE60h:jmp64]                encoding(5 bytes) = e8 12 ce 5a 5f
004eh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> scaleBytes => new byte[79]{0x57,0x56,0x48,0x83,0xEC,0x28,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x45,0x33,0xD2,0x45,0x85,0xC9,0x7E,0x23,0x4D,0x63,0xDA,0x4A,0x8D,0x34,0xD8,0x44,0x3B,0x52,0x08,0x73,0x27,0x48,0x8B,0x3A,0x4E,0x8B,0x1C,0xDF,0x4D,0x0F,0xAF,0xD8,0x4C,0x89,0x1E,0x41,0xFF,0xC2,0x45,0x3B,0xD1,0x7C,0xDD,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x28,0x5E,0x5F,0xC3,0xE8,0x12,0xCE,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<float> scale(ReadOnlySpan<float> src, float factor, Span<float> dst)
; location: [7FFC872B7FC0h, 7FFC872B8013h]
0000h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0001h sub rsp,20h                   ; SUB(Sub_rm64_imm8) [RSP,20h:imm64]                   encoding(4 bytes) = 48 83 ec 20
0005h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0008h mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000bh mov r8d,[r9+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 41 08
000fh xor r9d,r9d                   ; XOR(Xor_r32_rm32) [R9D,R9D]                          encoding(3 bytes) = 45 33 c9
0012h test r8d,r8d                  ; TEST(Test_rm32_r32) [R8D,R8D]                        encoding(3 bytes) = 45 85 c0
0015h jle short 003eh               ; JLE(Jle_rel8_64) [3Eh:jmp64]                         encoding(2 bytes) = 7e 27
0017h movsxd r10,r9d                ; MOVSXD(Movsxd_r64_rm32) [R10,R9D]                    encoding(3 bytes) = 4d 63 d1
001ah lea r11,[rax+r10*4]           ; LEA(Lea_r64_m) [R11,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 4e 8d 1c 90
001eh cmp r9d,[rdx+8]               ; CMP(Cmp_r32_rm32) [R9D,mem(32u,RDX:br,DS:sr)]        encoding(4 bytes) = 44 3b 4a 08
0022h jae short 004eh               ; JAE(Jae_rel8_64) [4Eh:jmp64]                         encoding(2 bytes) = 73 2a
0024h mov rsi,[rdx]                 ; MOV(Mov_r64_rm64) [RSI,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 32
0027h vmovss xmm0,dword ptr [rsi+r10*4]; VMOVSS(VEX_Vmovss_xmm_m32) [XMM0,mem(Float32,RSI:br,DS:sr)] encoding(VEX, 6 bytes) = c4 a1 7a 10 04 96
002dh vmulss xmm0,xmm0,xmm2         ; VMULSS(VEX_Vmulss_xmm_xmm_xmmm32) [XMM0,XMM0,XMM2]   encoding(VEX, 4 bytes) = c5 fa 59 c2
0031h vmovss dword ptr [r11],xmm0   ; VMOVSS(VEX_Vmovss_m32_xmm) [mem(Float32,R11:br,DS:sr),XMM0] encoding(VEX, 5 bytes) = c4 c1 7a 11 03
0036h inc r9d                       ; INC(Inc_rm32) [R9D]                                  encoding(3 bytes) = 41 ff c1
0039h cmp r9d,r8d                   ; CMP(Cmp_r32_rm32) [R9D,R8D]                          encoding(3 bytes) = 45 3b c8
003ch jl short 0017h                ; JL(Jl_rel8_64) [17h:jmp64]                           encoding(2 bytes) = 7c d9
003eh mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0041h mov [rcx+8],r8d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R8D]        encoding(4 bytes) = 44 89 41 08
0045h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0048h add rsp,20h                   ; ADD(Add_rm64_imm8) [RSP,20h:imm64]                   encoding(4 bytes) = 48 83 c4 20
004ch pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
004dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
004eh call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5ACDF0h:jmp64]                encoding(5 bytes) = e8 9d cd 5a 5f
0053h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> scaleBytes => new byte[84]{0x56,0x48,0x83,0xEC,0x20,0xC5,0xF8,0x77,0x49,0x8B,0x01,0x45,0x8B,0x41,0x08,0x45,0x33,0xC9,0x45,0x85,0xC0,0x7E,0x27,0x4D,0x63,0xD1,0x4E,0x8D,0x1C,0x90,0x44,0x3B,0x4A,0x08,0x73,0x2A,0x48,0x8B,0x32,0xC4,0xA1,0x7A,0x10,0x04,0x96,0xC5,0xFA,0x59,0xC2,0xC4,0xC1,0x7A,0x11,0x03,0x41,0xFF,0xC1,0x45,0x3B,0xC8,0x7C,0xD9,0x48,0x89,0x01,0x44,0x89,0x41,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x20,0x5E,0xC3,0xE8,0x9D,0xCD,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<double> scale(ReadOnlySpan<double> src, double factor, Span<double> dst)
; location: [7FFC872B8030h, 7FFC872B8083h]
0000h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0001h sub rsp,20h                   ; SUB(Sub_rm64_imm8) [RSP,20h:imm64]                   encoding(4 bytes) = 48 83 ec 20
0005h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0008h mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000bh mov r8d,[r9+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 41 08
000fh xor r9d,r9d                   ; XOR(Xor_r32_rm32) [R9D,R9D]                          encoding(3 bytes) = 45 33 c9
0012h test r8d,r8d                  ; TEST(Test_rm32_r32) [R8D,R8D]                        encoding(3 bytes) = 45 85 c0
0015h jle short 003eh               ; JLE(Jle_rel8_64) [3Eh:jmp64]                         encoding(2 bytes) = 7e 27
0017h movsxd r10,r9d                ; MOVSXD(Movsxd_r64_rm32) [R10,R9D]                    encoding(3 bytes) = 4d 63 d1
001ah lea r11,[rax+r10*8]           ; LEA(Lea_r64_m) [R11,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 4e 8d 1c d0
001eh cmp r9d,[rdx+8]               ; CMP(Cmp_r32_rm32) [R9D,mem(32u,RDX:br,DS:sr)]        encoding(4 bytes) = 44 3b 4a 08
0022h jae short 004eh               ; JAE(Jae_rel8_64) [4Eh:jmp64]                         encoding(2 bytes) = 73 2a
0024h mov rsi,[rdx]                 ; MOV(Mov_r64_rm64) [RSI,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 32
0027h vmovsd xmm0,qword ptr [rsi+r10*8]; VMOVSD(VEX_Vmovsd_xmm_m64) [XMM0,mem(Float64,RSI:br,DS:sr)] encoding(VEX, 6 bytes) = c4 a1 7b 10 04 d6
002dh vmulsd xmm0,xmm0,xmm2         ; VMULSD(VEX_Vmulsd_xmm_xmm_xmmm64) [XMM0,XMM0,XMM2]   encoding(VEX, 4 bytes) = c5 fb 59 c2
0031h vmovsd qword ptr [r11],xmm0   ; VMOVSD(VEX_Vmovsd_m64_xmm) [mem(Float64,R11:br,DS:sr),XMM0] encoding(VEX, 5 bytes) = c4 c1 7b 11 03
0036h inc r9d                       ; INC(Inc_rm32) [R9D]                                  encoding(3 bytes) = 41 ff c1
0039h cmp r9d,r8d                   ; CMP(Cmp_r32_rm32) [R9D,R8D]                          encoding(3 bytes) = 45 3b c8
003ch jl short 0017h                ; JL(Jl_rel8_64) [17h:jmp64]                           encoding(2 bytes) = 7c d9
003eh mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0041h mov [rcx+8],r8d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R8D]        encoding(4 bytes) = 44 89 41 08
0045h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0048h add rsp,20h                   ; ADD(Add_rm64_imm8) [RSP,20h:imm64]                   encoding(4 bytes) = 48 83 c4 20
004ch pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
004dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
004eh call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5ACD80h:jmp64]                encoding(5 bytes) = e8 2d cd 5a 5f
0053h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> scaleBytes => new byte[84]{0x56,0x48,0x83,0xEC,0x20,0xC5,0xF8,0x77,0x49,0x8B,0x01,0x45,0x8B,0x41,0x08,0x45,0x33,0xC9,0x45,0x85,0xC0,0x7E,0x27,0x4D,0x63,0xD1,0x4E,0x8D,0x1C,0xD0,0x44,0x3B,0x4A,0x08,0x73,0x2A,0x48,0x8B,0x32,0xC4,0xA1,0x7B,0x10,0x04,0xD6,0xC5,0xFB,0x59,0xC2,0xC4,0xC1,0x7B,0x11,0x03,0x41,0xFF,0xC1,0x45,0x3B,0xC8,0x7C,0xD9,0x48,0x89,0x01,0x44,0x89,0x41,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x20,0x5E,0xC3,0xE8,0x2D,0xCD,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Sign:int signum(int src)
; location: [7FFC872B80A0h, 7FFC872B80B3h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov eax,ecx                   ; MOV(Mov_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 8b c1
0007h not eax                       ; NOT(Not_rm32) [EAX]                                  encoding(2 bytes) = f7 d0
0009h inc eax                       ; INC(Inc_rm32) [EAX]                                  encoding(2 bytes) = ff c0
000bh shr eax,1Fh                   ; SHR(Shr_rm32_imm8) [EAX,1fh:imm8]                    encoding(3 bytes) = c1 e8 1f
000eh sar ecx,1Fh                   ; SAR(Sar_rm32_imm8) [ECX,1fh:imm8]                    encoding(3 bytes) = c1 f9 1f
0011h or eax,ecx                    ; OR(Or_r32_rm32) [EAX,ECX]                            encoding(2 bytes) = 0b c1
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> signumBytes => new byte[20]{0x0F,0x1F,0x44,0x00,0x00,0x8B,0xC1,0xF7,0xD0,0xFF,0xC0,0xC1,0xE8,0x1F,0xC1,0xF9,0x1F,0x0B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Sign:int signum(uint src)
; location: [7FFC872B80D0h, 7FFC872B80DDh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
0007h setne al                      ; SETNE(Setne_rm8) [AL]                                encoding(3 bytes) = 0f 95 c0
000ah movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> signumBytes => new byte[14]{0x0F,0x1F,0x44,0x00,0x00,0x85,0xC9,0x0F,0x95,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Sign:int signum(long src)
; location: [7FFC872B80F0h, 7FFC872B810Ah]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0008h not rax                       ; NOT(Not_rm64) [RAX]                                  encoding(3 bytes) = 48 f7 d0
000bh inc rax                       ; INC(Inc_rm64) [RAX]                                  encoding(3 bytes) = 48 ff c0
000eh shr rax,3Fh                   ; SHR(Shr_rm64_imm8) [RAX,3fh:imm8]                    encoding(4 bytes) = 48 c1 e8 3f
0012h sar rcx,3Fh                   ; SAR(Sar_rm64_imm8) [RCX,3fh:imm8]                    encoding(4 bytes) = 48 c1 f9 3f
0016h mov edx,ecx                   ; MOV(Mov_r32_rm32) [EDX,ECX]                          encoding(2 bytes) = 8b d1
0018h or eax,edx                    ; OR(Or_r32_rm32) [EAX,EDX]                            encoding(2 bytes) = 0b c2
001ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> signumBytes => new byte[27]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0xC1,0x48,0xF7,0xD0,0x48,0xFF,0xC0,0x48,0xC1,0xE8,0x3F,0x48,0xC1,0xF9,0x3F,0x8B,0xD1,0x0B,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Sign:int signum(ulong src)
; location: [7FFC872B8120h, 7FFC872B812Eh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h test rcx,rcx                  ; TEST(Test_rm64_r64) [RCX,RCX]                        encoding(3 bytes) = 48 85 c9
0008h setne al                      ; SETNE(Setne_rm8) [AL]                                encoding(3 bytes) = 0f 95 c0
000bh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> signumBytes => new byte[15]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x85,0xC9,0x0F,0x95,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Sign:int signum(float src)
; location: [7FFC872B8140h, 7FFC872B814Fh]
0000h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0003h xchg ax,ax                    ; NOP(Nopw)                                            encoding(2 bytes) = 66 90
0005h mov rax,7FFC86F216E8h         ; MOV(Mov_r64_imm64) [RAX,7ffc86f216e8h:imm64]         encoding(10 bytes) = 48 b8 e8 16 f2 86 fc 7f 00 00
000fh jmp rax                       ; JMP(Jmp_rm64) [RAX]                                  encoding(3 bytes) = 48 ff e0
; static ReadOnlySpan<byte> signumBytes => new byte[18]{0xC5,0xF8,0x77,0x66,0x90,0x48,0xB8,0xE8,0x16,0xF2,0x86,0xFC,0x7F,0x00,0x00,0x48,0xFF,0xE0};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Sign:int signum(double src)
; location: [7FFC872B8170h, 7FFC872B817Fh]
0000h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0003h xchg ax,ax                    ; NOP(Nopw)                                            encoding(2 bytes) = 66 90
0005h mov rax,7FFC86F216C0h         ; MOV(Mov_r64_imm64) [RAX,7ffc86f216c0h:imm64]         encoding(10 bytes) = 48 b8 c0 16 f2 86 fc 7f 00 00
000fh jmp rax                       ; JMP(Jmp_rm64) [RAX]                                  encoding(3 bytes) = 48 ff e0
; static ReadOnlySpan<byte> signumBytes => new byte[18]{0xC5,0xF8,0x77,0x66,0x90,0x48,0xB8,0xC0,0x16,0xF2,0x86,0xFC,0x7F,0x00,0x00,0x48,0xFF,0xE0};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Sign:int signum(sbyte src)
; location: [7FFC872B81A0h, 7FFC872B81B7h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cl                  ; MOVSX(Movsx_r64_rm8) [RAX,CL]                        encoding(4 bytes) = 48 0f be c1
0009h mov edx,eax                   ; MOV(Mov_r32_rm32) [EDX,EAX]                          encoding(2 bytes) = 8b d0
000bh not edx                       ; NOT(Not_rm32) [EDX]                                  encoding(2 bytes) = f7 d2
000dh inc edx                       ; INC(Inc_rm32) [EDX]                                  encoding(2 bytes) = ff c2
000fh shr edx,1Fh                   ; SHR(Shr_rm32_imm8) [EDX,1fh:imm8]                    encoding(3 bytes) = c1 ea 1f
0012h sar eax,1Fh                   ; SAR(Sar_rm32_imm8) [EAX,1fh:imm8]                    encoding(3 bytes) = c1 f8 1f
0015h or eax,edx                    ; OR(Or_r32_rm32) [EAX,EDX]                            encoding(2 bytes) = 0b c2
0017h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> signumBytes => new byte[24]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBE,0xC1,0x8B,0xD0,0xF7,0xD2,0xFF,0xC2,0xC1,0xEA,0x1F,0xC1,0xF8,0x1F,0x0B,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Sign:int signum(byte src)
; location: [7FFC872B81D0h, 7FFC872B81DDh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h test cl,cl                    ; TEST(Test_rm8_r8) [CL,CL]                            encoding(2 bytes) = 84 c9
0007h setne al                      ; SETNE(Setne_rm8) [AL]                                encoding(3 bytes) = 0f 95 c0
000ah movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> signumBytes => new byte[14]{0x0F,0x1F,0x44,0x00,0x00,0x84,0xC9,0x0F,0x95,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Sign:int signum(short src)
; location: [7FFC872B81F0h, 7FFC872B8207h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cx                  ; MOVSX(Movsx_r64_rm16) [RAX,CX]                       encoding(4 bytes) = 48 0f bf c1
0009h mov edx,eax                   ; MOV(Mov_r32_rm32) [EDX,EAX]                          encoding(2 bytes) = 8b d0
000bh not edx                       ; NOT(Not_rm32) [EDX]                                  encoding(2 bytes) = f7 d2
000dh inc edx                       ; INC(Inc_rm32) [EDX]                                  encoding(2 bytes) = ff c2
000fh shr edx,1Fh                   ; SHR(Shr_rm32_imm8) [EDX,1fh:imm8]                    encoding(3 bytes) = c1 ea 1f
0012h sar eax,1Fh                   ; SAR(Sar_rm32_imm8) [EAX,1fh:imm8]                    encoding(3 bytes) = c1 f8 1f
0015h or eax,edx                    ; OR(Or_r32_rm32) [EAX,EDX]                            encoding(2 bytes) = 0b c2
0017h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> signumBytes => new byte[24]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBF,0xC1,0x8B,0xD0,0xF7,0xD2,0xFF,0xC2,0xC1,0xEA,0x1F,0xC1,0xF8,0x1F,0x0B,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Sign:int signum(ushort src)
; location: [7FFC872B8220h, 7FFC872B8230h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cx                  ; MOVZX(Movzx_r32_rm16) [EAX,CX]                       encoding(3 bytes) = 0f b7 c1
0008h test eax,eax                  ; TEST(Test_rm32_r32) [EAX,EAX]                        encoding(2 bytes) = 85 c0
000ah setne al                      ; SETNE(Setne_rm8) [AL]                                encoding(3 bytes) = 0f 95 c0
000dh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0010h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> signumBytes => new byte[17]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB7,0xC1,0x85,0xC0,0x0F,0x95,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: sbyte square(sbyte src)
; location: [7FFC872B8250h, 7FFC872B8260h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cl                  ; MOVSX(Movsx_r64_rm8) [RAX,CL]                        encoding(4 bytes) = 48 0f be c1
0009h imul eax,eax                  ; IMUL(Imul_r32_rm32) [EAX,EAX]                        encoding(3 bytes) = 0f af c0
000ch movsx rax,al                  ; MOVSX(Movsx_r64_rm8) [RAX,AL]                        encoding(4 bytes) = 48 0f be c0
0010h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> squareBytes => new byte[17]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBE,0xC1,0x0F,0xAF,0xC0,0x48,0x0F,0xBE,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: byte square(byte src)
; location: [7FFC872B8280h, 7FFC872B828Eh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0008h imul eax,eax                  ; IMUL(Imul_r32_rm32) [EAX,EAX]                        encoding(3 bytes) = 0f af c0
000bh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> squareBytes => new byte[15]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC1,0x0F,0xAF,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: short square(short src)
; location: [7FFC872B82A0h, 7FFC872B82B0h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cx                  ; MOVSX(Movsx_r64_rm16) [RAX,CX]                       encoding(4 bytes) = 48 0f bf c1
0009h imul eax,eax                  ; IMUL(Imul_r32_rm32) [EAX,EAX]                        encoding(3 bytes) = 0f af c0
000ch movsx rax,ax                  ; MOVSX(Movsx_r64_rm16) [RAX,AX]                       encoding(4 bytes) = 48 0f bf c0
0010h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> squareBytes => new byte[17]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBF,0xC1,0x0F,0xAF,0xC0,0x48,0x0F,0xBF,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ushort square(ushort src)
; location: [7FFC872B82D0h, 7FFC872B82DEh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cx                  ; MOVZX(Movzx_r32_rm16) [EAX,CX]                       encoding(3 bytes) = 0f b7 c1
0008h imul eax,eax                  ; IMUL(Imul_r32_rm32) [EAX,EAX]                        encoding(3 bytes) = 0f af c0
000bh movzx eax,ax                  ; MOVZX(Movzx_r32_rm16) [EAX,AX]                       encoding(3 bytes) = 0f b7 c0
000eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> squareBytes => new byte[15]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB7,0xC1,0x0F,0xAF,0xC0,0x0F,0xB7,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: int square(int src)
; location: [7FFC872B82F0h, 7FFC872B82FAh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov eax,ecx                   ; MOV(Mov_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 8b c1
0007h imul eax,ecx                  ; IMUL(Imul_r32_rm32) [EAX,ECX]                        encoding(3 bytes) = 0f af c1
000ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> squareBytes => new byte[11]{0x0F,0x1F,0x44,0x00,0x00,0x8B,0xC1,0x0F,0xAF,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: uint square(uint src)
; location: [7FFC872B8310h, 7FFC872B831Ah]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov eax,ecx                   ; MOV(Mov_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 8b c1
0007h imul eax,ecx                  ; IMUL(Imul_r32_rm32) [EAX,ECX]                        encoding(3 bytes) = 0f af c1
000ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> squareBytes => new byte[11]{0x0F,0x1F,0x44,0x00,0x00,0x8B,0xC1,0x0F,0xAF,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: long square(long src)
; location: [7FFC872B8330h, 7FFC872B8347h]
0000h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0003h xchg ax,ax                    ; NOP(Nopw)                                            encoding(2 bytes) = 66 90
0005h vxorps xmm0,xmm0,xmm0         ; VXORPS(VEX_Vxorps_xmm_xmm_xmmm128) [XMM0,XMM0,XMM0]  encoding(VEX, 4 bytes) = c5 f8 57 c0
0009h vcvtsi2sd xmm0,xmm0,rcx       ; VCVTSI2SD(VEX_Vcvtsi2sd_xmm_xmm_rm64) [XMM0,XMM0,RCX] encoding(VEX, 5 bytes) = c4 e1 fb 2a c1
000eh vsqrtsd xmm0,xmm0,xmm0        ; VSQRTSD(VEX_Vsqrtsd_xmm_xmm_xmmm64) [XMM0,XMM0,XMM0] encoding(VEX, 4 bytes) = c5 fb 51 c0
0012h vcvttsd2si rax,xmm0           ; VCVTTSD2SI(VEX_Vcvttsd2si_r64_xmmm64) [RAX,XMM0]     encoding(VEX, 5 bytes) = c4 e1 fb 2c c0
0017h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> squareBytes => new byte[24]{0xC5,0xF8,0x77,0x66,0x90,0xC5,0xF8,0x57,0xC0,0xC4,0xE1,0xFB,0x2A,0xC1,0xC5,0xFB,0x51,0xC0,0xC4,0xE1,0xFB,0x2C,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ulong square(ulong src)
; location: [7FFC872B8360h, 7FFC872B836Ch]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0008h imul rax,rcx                  ; IMUL(Imul_r64_rm64) [RAX,RCX]                        encoding(4 bytes) = 48 0f af c1
000ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> squareBytes => new byte[13]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0xC1,0x48,0x0F,0xAF,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: float square(float src)
; location: [7FFC872B8380h, 7FFC872B8389h]
0000h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0003h xchg ax,ax                    ; NOP(Nopw)                                            encoding(2 bytes) = 66 90
0005h vmulss xmm0,xmm0,xmm0         ; VMULSS(VEX_Vmulss_xmm_xmm_xmmm32) [XMM0,XMM0,XMM0]   encoding(VEX, 4 bytes) = c5 fa 59 c0
0009h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> squareBytes => new byte[10]{0xC5,0xF8,0x77,0x66,0x90,0xC5,0xFA,0x59,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: double square(double src)
; location: [7FFC872B83A0h, 7FFC872B83A9h]
0000h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0003h xchg ax,ax                    ; NOP(Nopw)                                            encoding(2 bytes) = 66 90
0005h vmulsd xmm0,xmm0,xmm0         ; VMULSD(VEX_Vmulsd_xmm_xmm_xmmm64) [XMM0,XMM0,XMM0]   encoding(VEX, 4 bytes) = c5 fb 59 c0
0009h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> squareBytes => new byte[10]{0xC5,0xF8,0x77,0x66,0x90,0xC5,0xFB,0x59,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref sbyte square(ref sbyte src)
; location: [7FFC872B83C0h, 7FFC872B83D1h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,byte ptr [rcx]      ; MOVSX(Movsx_r64_rm8) [RAX,mem(8i,RCX:br,DS:sr)]      encoding(4 bytes) = 48 0f be 01
0009h imul eax,eax                  ; IMUL(Imul_r32_rm32) [EAX,EAX]                        encoding(3 bytes) = 0f af c0
000ch mov [rcx],al                  ; MOV(Mov_rm8_r8) [mem(8u,RCX:br,DS:sr),AL]            encoding(2 bytes) = 88 01
000eh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> squareBytes => new byte[18]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBE,0x01,0x0F,0xAF,0xC0,0x88,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref byte square(ref byte src)
; location: [7FFC872B83F0h, 7FFC872B8400h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,byte ptr [rcx]      ; MOVZX(Movzx_r32_rm8) [EAX,mem(8u,RCX:br,DS:sr)]      encoding(3 bytes) = 0f b6 01
0008h imul eax,eax                  ; IMUL(Imul_r32_rm32) [EAX,EAX]                        encoding(3 bytes) = 0f af c0
000bh mov [rcx],al                  ; MOV(Mov_rm8_r8) [mem(8u,RCX:br,DS:sr),AL]            encoding(2 bytes) = 88 01
000dh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0010h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> squareBytes => new byte[17]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0x01,0x0F,0xAF,0xC0,0x88,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref short square(ref short src)
; location: [7FFC872B8420h, 7FFC872B8432h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,word ptr [rcx]      ; MOVSX(Movsx_r64_rm16) [RAX,mem(16i,RCX:br,DS:sr)]    encoding(4 bytes) = 48 0f bf 01
0009h imul eax,eax                  ; IMUL(Imul_r32_rm32) [EAX,EAX]                        encoding(3 bytes) = 0f af c0
000ch mov [rcx],ax                  ; MOV(Mov_rm16_r16) [mem(16u,RCX:br,DS:sr),AX]         encoding(3 bytes) = 66 89 01
000fh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0012h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> squareBytes => new byte[19]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBF,0x01,0x0F,0xAF,0xC0,0x66,0x89,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref ushort square(ref ushort src)
; location: [7FFC872B8450h, 7FFC872B8461h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,word ptr [rcx]      ; MOVZX(Movzx_r32_rm16) [EAX,mem(16u,RCX:br,DS:sr)]    encoding(3 bytes) = 0f b7 01
0008h imul eax,eax                  ; IMUL(Imul_r32_rm32) [EAX,EAX]                        encoding(3 bytes) = 0f af c0
000bh mov [rcx],ax                  ; MOV(Mov_rm16_r16) [mem(16u,RCX:br,DS:sr),AX]         encoding(3 bytes) = 66 89 01
000eh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> squareBytes => new byte[18]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB7,0x01,0x0F,0xAF,0xC0,0x66,0x89,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref int square(ref int src)
; location: [7FFC872B8480h, 7FFC872B848Fh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov eax,[rcx]                 ; MOV(Mov_r32_rm32) [EAX,mem(32u,RCX:br,DS:sr)]        encoding(2 bytes) = 8b 01
0007h imul eax,eax                  ; IMUL(Imul_r32_rm32) [EAX,EAX]                        encoding(3 bytes) = 0f af c0
000ah mov [rcx],eax                 ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EAX]        encoding(2 bytes) = 89 01
000ch mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> squareBytes => new byte[16]{0x0F,0x1F,0x44,0x00,0x00,0x8B,0x01,0x0F,0xAF,0xC0,0x89,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref uint square(ref uint src)
; location: [7FFC872B84A0h, 7FFC872B84AFh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov eax,[rcx]                 ; MOV(Mov_r32_rm32) [EAX,mem(32u,RCX:br,DS:sr)]        encoding(2 bytes) = 8b 01
0007h imul eax,eax                  ; IMUL(Imul_r32_rm32) [EAX,EAX]                        encoding(3 bytes) = 0f af c0
000ah mov [rcx],eax                 ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EAX]        encoding(2 bytes) = 89 01
000ch mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> squareBytes => new byte[16]{0x0F,0x1F,0x44,0x00,0x00,0x8B,0x01,0x0F,0xAF,0xC0,0x89,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref long square(ref long src)
; location: [7FFC872B84C0h, 7FFC872B84D2h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,[rcx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 01
0008h imul rax,rax                  ; IMUL(Imul_r64_rm64) [RAX,RAX]                        encoding(4 bytes) = 48 0f af c0
000ch mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
000fh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0012h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> squareBytes => new byte[19]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x01,0x48,0x0F,0xAF,0xC0,0x48,0x89,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref ulong square(ref ulong src)
; location: [7FFC872B84F0h, 7FFC872B8502h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,[rcx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 01
0008h imul rax,rax                  ; IMUL(Imul_r64_rm64) [RAX,RAX]                        encoding(4 bytes) = 48 0f af c0
000ch mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
000fh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0012h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> squareBytes => new byte[19]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x01,0x48,0x0F,0xAF,0xC0,0x48,0x89,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref float square(ref float src)
; location: [7FFC872B8520h, 7FFC872B8534h]
0000h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0003h xchg ax,ax                    ; NOP(Nopw)                                            encoding(2 bytes) = 66 90
0005h vmovss xmm0,dword ptr [rcx]   ; VMOVSS(VEX_Vmovss_xmm_m32) [XMM0,mem(Float32,RCX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 10 01
0009h vmulss xmm0,xmm0,xmm0         ; VMULSS(VEX_Vmulss_xmm_xmm_xmmm32) [XMM0,XMM0,XMM0]   encoding(VEX, 4 bytes) = c5 fa 59 c0
000dh vmovss dword ptr [rcx],xmm0   ; VMOVSS(VEX_Vmovss_m32_xmm) [mem(Float32,RCX:br,DS:sr),XMM0] encoding(VEX, 4 bytes) = c5 fa 11 01
0011h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0014h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> squareBytes => new byte[21]{0xC5,0xF8,0x77,0x66,0x90,0xC5,0xFA,0x10,0x01,0xC5,0xFA,0x59,0xC0,0xC5,0xFA,0x11,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref double square(ref double src)
; location: [7FFC872B8550h, 7FFC872B8564h]
0000h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0003h xchg ax,ax                    ; NOP(Nopw)                                            encoding(2 bytes) = 66 90
0005h vmovsd xmm0,qword ptr [rcx]   ; VMOVSD(VEX_Vmovsd_xmm_m64) [XMM0,mem(Float64,RCX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fb 10 01
0009h vmulsd xmm0,xmm0,xmm0         ; VMULSD(VEX_Vmulsd_xmm_xmm_xmmm64) [XMM0,XMM0,XMM0]   encoding(VEX, 4 bytes) = c5 fb 59 c0
000dh vmovsd qword ptr [rcx],xmm0   ; VMOVSD(VEX_Vmovsd_m64_xmm) [mem(Float64,RCX:br,DS:sr),XMM0] encoding(VEX, 4 bytes) = c5 fb 11 01
0011h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0014h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> squareBytes => new byte[21]{0xC5,0xF8,0x77,0x66,0x90,0xC5,0xFB,0x10,0x01,0xC5,0xFB,0x59,0xC0,0xC5,0xFB,0x11,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref sbyte square(sbyte src, out sbyte dst)
; location: [7FFC872B8580h, 7FFC872B85ABh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov [rsp+8],ecx               ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),ECX]        encoding(4 bytes) = 89 4c 24 08
0009h movsx rax,byte ptr [rsp+8]    ; MOVSX(Movsx_r64_rm8) [RAX,mem(8i,RSP:br,SS:sr)]      encoding(6 bytes) = 48 0f be 44 24 08
000fh movsx rcx,byte ptr [rsp+8]    ; MOVSX(Movsx_r64_rm8) [RCX,mem(8i,RSP:br,SS:sr)]      encoding(6 bytes) = 48 0f be 4c 24 08
0015h imul eax,ecx                  ; IMUL(Imul_r32_rm32) [EAX,ECX]                        encoding(3 bytes) = 0f af c1
0018h movsx rax,al                  ; MOVSX(Movsx_r64_rm8) [RAX,AL]                        encoding(4 bytes) = 48 0f be c0
001ch mov [rsp+8],al                ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),AL]            encoding(4 bytes) = 88 44 24 08
0020h movsx rax,byte ptr [rsp+8]    ; MOVSX(Movsx_r64_rm8) [RAX,mem(8i,RSP:br,SS:sr)]      encoding(6 bytes) = 48 0f be 44 24 08
0026h mov [rdx],al                  ; MOV(Mov_rm8_r8) [mem(8u,RDX:br,DS:sr),AL]            encoding(2 bytes) = 88 02
0028h mov rax,rdx                   ; MOV(Mov_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 8b c2
002bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> squareBytes => new byte[44]{0x0F,0x1F,0x44,0x00,0x00,0x89,0x4C,0x24,0x08,0x48,0x0F,0xBE,0x44,0x24,0x08,0x48,0x0F,0xBE,0x4C,0x24,0x08,0x0F,0xAF,0xC1,0x48,0x0F,0xBE,0xC0,0x88,0x44,0x24,0x08,0x48,0x0F,0xBE,0x44,0x24,0x08,0x88,0x02,0x48,0x8B,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref byte square(byte src, out byte dst)
; location: [7FFC872B85C0h, 7FFC872B85E7h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov [rsp+8],ecx               ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),ECX]        encoding(4 bytes) = 89 4c 24 08
0009h movzx eax,byte ptr [rsp+8]    ; MOVZX(Movzx_r32_rm8) [EAX,mem(8u,RSP:br,SS:sr)]      encoding(5 bytes) = 0f b6 44 24 08
000eh movzx ecx,byte ptr [rsp+8]    ; MOVZX(Movzx_r32_rm8) [ECX,mem(8u,RSP:br,SS:sr)]      encoding(5 bytes) = 0f b6 4c 24 08
0013h imul eax,ecx                  ; IMUL(Imul_r32_rm32) [EAX,ECX]                        encoding(3 bytes) = 0f af c1
0016h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0019h mov [rsp+8],al                ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),AL]            encoding(4 bytes) = 88 44 24 08
001dh movzx eax,byte ptr [rsp+8]    ; MOVZX(Movzx_r32_rm8) [EAX,mem(8u,RSP:br,SS:sr)]      encoding(5 bytes) = 0f b6 44 24 08
0022h mov [rdx],al                  ; MOV(Mov_rm8_r8) [mem(8u,RDX:br,DS:sr),AL]            encoding(2 bytes) = 88 02
0024h mov rax,rdx                   ; MOV(Mov_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 8b c2
0027h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> squareBytes => new byte[40]{0x0F,0x1F,0x44,0x00,0x00,0x89,0x4C,0x24,0x08,0x0F,0xB6,0x44,0x24,0x08,0x0F,0xB6,0x4C,0x24,0x08,0x0F,0xAF,0xC1,0x0F,0xB6,0xC0,0x88,0x44,0x24,0x08,0x0F,0xB6,0x44,0x24,0x08,0x88,0x02,0x48,0x8B,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref short square(short src, out short dst)
; location: [7FFC872B8600h, 7FFC872B862Dh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov [rsp+8],ecx               ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),ECX]        encoding(4 bytes) = 89 4c 24 08
0009h movsx rax,word ptr [rsp+8]    ; MOVSX(Movsx_r64_rm16) [RAX,mem(16i,RSP:br,SS:sr)]    encoding(6 bytes) = 48 0f bf 44 24 08
000fh movsx rcx,word ptr [rsp+8]    ; MOVSX(Movsx_r64_rm16) [RCX,mem(16i,RSP:br,SS:sr)]    encoding(6 bytes) = 48 0f bf 4c 24 08
0015h imul eax,ecx                  ; IMUL(Imul_r32_rm32) [EAX,ECX]                        encoding(3 bytes) = 0f af c1
0018h movsx rax,ax                  ; MOVSX(Movsx_r64_rm16) [RAX,AX]                       encoding(4 bytes) = 48 0f bf c0
001ch mov [rsp+8],ax                ; MOV(Mov_rm16_r16) [mem(16u,RSP:br,SS:sr),AX]         encoding(5 bytes) = 66 89 44 24 08
0021h movsx rax,word ptr [rsp+8]    ; MOVSX(Movsx_r64_rm16) [RAX,mem(16i,RSP:br,SS:sr)]    encoding(6 bytes) = 48 0f bf 44 24 08
0027h mov [rdx],ax                  ; MOV(Mov_rm16_r16) [mem(16u,RDX:br,DS:sr),AX]         encoding(3 bytes) = 66 89 02
002ah mov rax,rdx                   ; MOV(Mov_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 8b c2
002dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> squareBytes => new byte[46]{0x0F,0x1F,0x44,0x00,0x00,0x89,0x4C,0x24,0x08,0x48,0x0F,0xBF,0x44,0x24,0x08,0x48,0x0F,0xBF,0x4C,0x24,0x08,0x0F,0xAF,0xC1,0x48,0x0F,0xBF,0xC0,0x66,0x89,0x44,0x24,0x08,0x48,0x0F,0xBF,0x44,0x24,0x08,0x66,0x89,0x02,0x48,0x8B,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref ushort square(ushort src, out ushort dst)
; location: [7FFC872B8640h, 7FFC872B8669h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov [rsp+8],ecx               ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),ECX]        encoding(4 bytes) = 89 4c 24 08
0009h movzx eax,word ptr [rsp+8]    ; MOVZX(Movzx_r32_rm16) [EAX,mem(16u,RSP:br,SS:sr)]    encoding(5 bytes) = 0f b7 44 24 08
000eh movzx ecx,word ptr [rsp+8]    ; MOVZX(Movzx_r32_rm16) [ECX,mem(16u,RSP:br,SS:sr)]    encoding(5 bytes) = 0f b7 4c 24 08
0013h imul eax,ecx                  ; IMUL(Imul_r32_rm32) [EAX,ECX]                        encoding(3 bytes) = 0f af c1
0016h movzx eax,ax                  ; MOVZX(Movzx_r32_rm16) [EAX,AX]                       encoding(3 bytes) = 0f b7 c0
0019h mov [rsp+8],ax                ; MOV(Mov_rm16_r16) [mem(16u,RSP:br,SS:sr),AX]         encoding(5 bytes) = 66 89 44 24 08
001eh movzx eax,word ptr [rsp+8]    ; MOVZX(Movzx_r32_rm16) [EAX,mem(16u,RSP:br,SS:sr)]    encoding(5 bytes) = 0f b7 44 24 08
0023h mov [rdx],ax                  ; MOV(Mov_rm16_r16) [mem(16u,RDX:br,DS:sr),AX]         encoding(3 bytes) = 66 89 02
0026h mov rax,rdx                   ; MOV(Mov_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 8b c2
0029h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> squareBytes => new byte[42]{0x0F,0x1F,0x44,0x00,0x00,0x89,0x4C,0x24,0x08,0x0F,0xB7,0x44,0x24,0x08,0x0F,0xB7,0x4C,0x24,0x08,0x0F,0xAF,0xC1,0x0F,0xB7,0xC0,0x66,0x89,0x44,0x24,0x08,0x0F,0xB7,0x44,0x24,0x08,0x66,0x89,0x02,0x48,0x8B,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref int square(int src, out int dst)
; location: [7FFC872B8680h, 7FFC872B868Dh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h imul ecx,ecx                  ; IMUL(Imul_r32_rm32) [ECX,ECX]                        encoding(3 bytes) = 0f af c9
0008h mov [rdx],ecx                 ; MOV(Mov_rm32_r32) [mem(32u,RDX:br,DS:sr),ECX]        encoding(2 bytes) = 89 0a
000ah mov rax,rdx                   ; MOV(Mov_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 8b c2
000dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> squareBytes => new byte[14]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xAF,0xC9,0x89,0x0A,0x48,0x8B,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref uint square(uint src, out uint dst)
; location: [7FFC872B86A0h, 7FFC872B86ADh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h imul ecx,ecx                  ; IMUL(Imul_r32_rm32) [ECX,ECX]                        encoding(3 bytes) = 0f af c9
0008h mov [rdx],ecx                 ; MOV(Mov_rm32_r32) [mem(32u,RDX:br,DS:sr),ECX]        encoding(2 bytes) = 89 0a
000ah mov rax,rdx                   ; MOV(Mov_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 8b c2
000dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> squareBytes => new byte[14]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xAF,0xC9,0x89,0x0A,0x48,0x8B,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref long square(long src, out long dst)
; location: [7FFC872B86C0h, 7FFC872B86CFh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h imul rcx,rcx                  ; IMUL(Imul_r64_rm64) [RCX,RCX]                        encoding(4 bytes) = 48 0f af c9
0009h mov [rdx],rcx                 ; MOV(Mov_rm64_r64) [mem(64u,RDX:br,DS:sr),RCX]        encoding(3 bytes) = 48 89 0a
000ch mov rax,rdx                   ; MOV(Mov_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 8b c2
000fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> squareBytes => new byte[16]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xAF,0xC9,0x48,0x89,0x0A,0x48,0x8B,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref ulong square(ulong src, out ulong dst)
; location: [7FFC872B86E0h, 7FFC872B86EFh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h imul rcx,rcx                  ; IMUL(Imul_r64_rm64) [RCX,RCX]                        encoding(4 bytes) = 48 0f af c9
0009h mov [rdx],rcx                 ; MOV(Mov_rm64_r64) [mem(64u,RDX:br,DS:sr),RCX]        encoding(3 bytes) = 48 89 0a
000ch mov rax,rdx                   ; MOV(Mov_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 8b c2
000fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> squareBytes => new byte[16]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xAF,0xC9,0x48,0x89,0x0A,0x48,0x8B,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref float square(float src, out float dst)
; location: [7FFC872B8700h, 7FFC872B8710h]
0000h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0003h xchg ax,ax                    ; NOP(Nopw)                                            encoding(2 bytes) = 66 90
0005h vmulss xmm0,xmm0,xmm0         ; VMULSS(VEX_Vmulss_xmm_xmm_xmmm32) [XMM0,XMM0,XMM0]   encoding(VEX, 4 bytes) = c5 fa 59 c0
0009h vmovss dword ptr [rdx],xmm0   ; VMOVSS(VEX_Vmovss_m32_xmm) [mem(Float32,RDX:br,DS:sr),XMM0] encoding(VEX, 4 bytes) = c5 fa 11 02
000dh mov rax,rdx                   ; MOV(Mov_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 8b c2
0010h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> squareBytes => new byte[17]{0xC5,0xF8,0x77,0x66,0x90,0xC5,0xFA,0x59,0xC0,0xC5,0xFA,0x11,0x02,0x48,0x8B,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref double square(double src, out double dst)
; location: [7FFC872B8730h, 7FFC872B8740h]
0000h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0003h xchg ax,ax                    ; NOP(Nopw)                                            encoding(2 bytes) = 66 90
0005h vmulsd xmm0,xmm0,xmm0         ; VMULSD(VEX_Vmulsd_xmm_xmm_xmmm64) [XMM0,XMM0,XMM0]   encoding(VEX, 4 bytes) = c5 fb 59 c0
0009h vmovsd qword ptr [rdx],xmm0   ; VMOVSD(VEX_Vmovsd_m64_xmm) [mem(Float64,RDX:br,DS:sr),XMM0] encoding(VEX, 4 bytes) = c5 fb 11 02
000dh mov rax,rdx                   ; MOV(Mov_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 8b c2
0010h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> squareBytes => new byte[17]{0xC5,0xF8,0x77,0x66,0x90,0xC5,0xFB,0x59,0xC0,0xC5,0xFB,0x11,0x02,0x48,0x8B,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: uint srl(uint src, int offset)
; location: [7FFC872B8760h, 7FFC872B876Bh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov eax,ecx                   ; MOV(Mov_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 8b c1
0007h mov ecx,edx                   ; MOV(Mov_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 8b ca
0009h shr eax,cl                    ; SHR(Shr_rm32_CL) [EAX,CL]                            encoding(2 bytes) = d3 e8
000bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> srlBytes => new byte[12]{0x0F,0x1F,0x44,0x00,0x00,0x8B,0xC1,0x8B,0xCA,0xD3,0xE8,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: long srl(long src, int offset)
; location: [7FFC872B8780h, 7FFC872B878Dh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0008h mov ecx,edx                   ; MOV(Mov_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 8b ca
000ah shr rax,cl                    ; SHR(Shr_rm64_CL) [RAX,CL]                            encoding(3 bytes) = 48 d3 e8
000dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> srlBytes => new byte[14]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0xC1,0x8B,0xCA,0x48,0xD3,0xE8,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ulong srl(ulong src, int offset)
; location: [7FFC872B87A0h, 7FFC872B87ADh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0008h mov ecx,edx                   ; MOV(Mov_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 8b ca
000ah shr rax,cl                    ; SHR(Shr_rm64_CL) [RAX,CL]                            encoding(3 bytes) = 48 d3 e8
000dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> srlBytes => new byte[14]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0xC1,0x8B,0xCA,0x48,0xD3,0xE8,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: sbyte srl(sbyte src, int offset)
; location: [7FFC872B87C0h, 7FFC872B87D1h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cl                  ; MOVSX(Movsx_r64_rm8) [RAX,CL]                        encoding(4 bytes) = 48 0f be c1
0009h mov ecx,edx                   ; MOV(Mov_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 8b ca
000bh shr eax,cl                    ; SHR(Shr_rm32_CL) [EAX,CL]                            encoding(2 bytes) = d3 e8
000dh movsx rax,al                  ; MOVSX(Movsx_r64_rm8) [RAX,AL]                        encoding(4 bytes) = 48 0f be c0
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> srlBytes => new byte[18]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBE,0xC1,0x8B,0xCA,0xD3,0xE8,0x48,0x0F,0xBE,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: byte srl(byte src, int offset)
; location: [7FFC872B87F0h, 7FFC872B87FFh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0008h mov ecx,edx                   ; MOV(Mov_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 8b ca
000ah shr eax,cl                    ; SHR(Shr_rm32_CL) [EAX,CL]                            encoding(2 bytes) = d3 e8
000ch movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> srlBytes => new byte[16]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC1,0x8B,0xCA,0xD3,0xE8,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: short srl(short src, int offset)
; location: [7FFC872B8810h, 7FFC872B8821h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cx                  ; MOVSX(Movsx_r64_rm16) [RAX,CX]                       encoding(4 bytes) = 48 0f bf c1
0009h mov ecx,edx                   ; MOV(Mov_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 8b ca
000bh shr eax,cl                    ; SHR(Shr_rm32_CL) [EAX,CL]                            encoding(2 bytes) = d3 e8
000dh movsx rax,ax                  ; MOVSX(Movsx_r64_rm16) [RAX,AX]                       encoding(4 bytes) = 48 0f bf c0
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> srlBytes => new byte[18]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBF,0xC1,0x8B,0xCA,0xD3,0xE8,0x48,0x0F,0xBF,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ushort srl(ushort src, int offset)
; location: [7FFC872B8840h, 7FFC872B884Fh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cx                  ; MOVZX(Movzx_r32_rm16) [EAX,CX]                       encoding(3 bytes) = 0f b7 c1
0008h mov ecx,edx                   ; MOV(Mov_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 8b ca
000ah shr eax,cl                    ; SHR(Shr_rm32_CL) [EAX,CL]                            encoding(2 bytes) = d3 e8
000ch movzx eax,ax                  ; MOVZX(Movzx_r32_rm16) [EAX,AX]                       encoding(3 bytes) = 0f b7 c0
000fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> srlBytes => new byte[16]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB7,0xC1,0x8B,0xCA,0xD3,0xE8,0x0F,0xB7,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: int srl(int src, int offset)
; location: [7FFC872B8860h, 7FFC872B886Bh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov eax,ecx                   ; MOV(Mov_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 8b c1
0007h mov ecx,edx                   ; MOV(Mov_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 8b ca
0009h shr eax,cl                    ; SHR(Shr_rm32_CL) [EAX,CL]                            encoding(2 bytes) = d3 e8
000bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> srlBytes => new byte[12]{0x0F,0x1F,0x44,0x00,0x00,0x8B,0xC1,0x8B,0xCA,0xD3,0xE8,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref sbyte srl(ref sbyte src, int offset)
; location: [7FFC872B8880h, 7FFC872B8894h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0008h movsx r8,byte ptr [rax]       ; MOVSX(Movsx_r64_rm8) [R8,mem(8i,RAX:br,DS:sr)]       encoding(4 bytes) = 4c 0f be 00
000ch mov ecx,edx                   ; MOV(Mov_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 8b ca
000eh shr r8d,cl                    ; SHR(Shr_rm32_CL) [R8D,CL]                            encoding(3 bytes) = 41 d3 e8
0011h mov [rax],r8b                 ; MOV(Mov_rm8_r8) [mem(8u,RAX:br,DS:sr),R8L]           encoding(3 bytes) = 44 88 00
0014h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> srlBytes => new byte[21]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0xC1,0x4C,0x0F,0xBE,0x00,0x8B,0xCA,0x41,0xD3,0xE8,0x44,0x88,0x00,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref byte srl(ref byte src, int offset)
; location: [7FFC872B88B0h, 7FFC872B88C4h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0008h movzx r8d,byte ptr [rax]      ; MOVZX(Movzx_r32_rm8) [R8D,mem(8u,RAX:br,DS:sr)]      encoding(4 bytes) = 44 0f b6 00
000ch mov ecx,edx                   ; MOV(Mov_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 8b ca
000eh shr r8d,cl                    ; SHR(Shr_rm32_CL) [R8D,CL]                            encoding(3 bytes) = 41 d3 e8
0011h mov [rax],r8b                 ; MOV(Mov_rm8_r8) [mem(8u,RAX:br,DS:sr),R8L]           encoding(3 bytes) = 44 88 00
0014h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> srlBytes => new byte[21]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0xC1,0x44,0x0F,0xB6,0x00,0x8B,0xCA,0x41,0xD3,0xE8,0x44,0x88,0x00,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref short srl(ref short src, int offset)
; location: [7FFC872B88E0h, 7FFC872B88F5h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0008h movsx r8,word ptr [rax]       ; MOVSX(Movsx_r64_rm16) [R8,mem(16i,RAX:br,DS:sr)]     encoding(4 bytes) = 4c 0f bf 00
000ch mov ecx,edx                   ; MOV(Mov_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 8b ca
000eh shr r8d,cl                    ; SHR(Shr_rm32_CL) [R8D,CL]                            encoding(3 bytes) = 41 d3 e8
0011h mov [rax],r8w                 ; MOV(Mov_rm16_r16) [mem(16u,RAX:br,DS:sr),R8W]        encoding(4 bytes) = 66 44 89 00
0015h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> srlBytes => new byte[22]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0xC1,0x4C,0x0F,0xBF,0x00,0x8B,0xCA,0x41,0xD3,0xE8,0x66,0x44,0x89,0x00,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref ushort srl(ref ushort src, int offset)
; location: [7FFC872B8910h, 7FFC872B8925h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0008h movzx r8d,word ptr [rax]      ; MOVZX(Movzx_r32_rm16) [R8D,mem(16u,RAX:br,DS:sr)]    encoding(4 bytes) = 44 0f b7 00
000ch mov ecx,edx                   ; MOV(Mov_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 8b ca
000eh shr r8d,cl                    ; SHR(Shr_rm32_CL) [R8D,CL]                            encoding(3 bytes) = 41 d3 e8
0011h mov [rax],r8w                 ; MOV(Mov_rm16_r16) [mem(16u,RAX:br,DS:sr),R8W]        encoding(4 bytes) = 66 44 89 00
0015h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> srlBytes => new byte[22]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0xC1,0x44,0x0F,0xB7,0x00,0x8B,0xCA,0x41,0xD3,0xE8,0x66,0x44,0x89,0x00,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref int srl(ref int src, int offset)
; location: [7FFC872B8940h, 7FFC872B8953h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0008h mov r8d,[rax]                 ; MOV(Mov_r32_rm32) [R8D,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 44 8b 00
000bh mov ecx,edx                   ; MOV(Mov_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 8b ca
000dh shr r8d,cl                    ; SHR(Shr_rm32_CL) [R8D,CL]                            encoding(3 bytes) = 41 d3 e8
0010h mov [rax],r8d                 ; MOV(Mov_rm32_r32) [mem(32u,RAX:br,DS:sr),R8D]        encoding(3 bytes) = 44 89 00
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> srlBytes => new byte[20]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0xC1,0x44,0x8B,0x00,0x8B,0xCA,0x41,0xD3,0xE8,0x44,0x89,0x00,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref uint srl(ref uint src, int offset)
; location: [7FFC872B8970h, 7FFC872B8983h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0008h mov r8d,[rax]                 ; MOV(Mov_r32_rm32) [R8D,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 44 8b 00
000bh mov ecx,edx                   ; MOV(Mov_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 8b ca
000dh shr r8d,cl                    ; SHR(Shr_rm32_CL) [R8D,CL]                            encoding(3 bytes) = 41 d3 e8
0010h mov [rax],r8d                 ; MOV(Mov_rm32_r32) [mem(32u,RAX:br,DS:sr),R8D]        encoding(3 bytes) = 44 89 00
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> srlBytes => new byte[20]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0xC1,0x44,0x8B,0x00,0x8B,0xCA,0x41,0xD3,0xE8,0x44,0x89,0x00,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref long srl(ref long src, int offset)
; location: [7FFC872B89A0h, 7FFC872B89B3h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0008h mov r8,[rax]                  ; MOV(Mov_r64_rm64) [R8,mem(64u,RAX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 00
000bh mov ecx,edx                   ; MOV(Mov_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 8b ca
000dh shr r8,cl                     ; SHR(Shr_rm64_CL) [R8,CL]                             encoding(3 bytes) = 49 d3 e8
0010h mov [rax],r8                  ; MOV(Mov_rm64_r64) [mem(64u,RAX:br,DS:sr),R8]         encoding(3 bytes) = 4c 89 00
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> srlBytes => new byte[20]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0xC1,0x4C,0x8B,0x00,0x8B,0xCA,0x49,0xD3,0xE8,0x4C,0x89,0x00,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref ulong srl(ref ulong src, int offset)
; location: [7FFC872B89D0h, 7FFC872B89E3h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0008h mov r8,[rax]                  ; MOV(Mov_r64_rm64) [R8,mem(64u,RAX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 00
000bh mov ecx,edx                   ; MOV(Mov_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 8b ca
000dh shr r8,cl                     ; SHR(Shr_rm64_CL) [R8,CL]                             encoding(3 bytes) = 49 d3 e8
0010h mov [rax],r8                  ; MOV(Mov_rm64_r64) [mem(64u,RAX:br,DS:sr),R8]         encoding(3 bytes) = 4c 89 00
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> srlBytes => new byte[20]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0xC1,0x4C,0x8B,0x00,0x8B,0xCA,0x49,0xD3,0xE8,0x4C,0x89,0x00,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: int srl32i(int src, int offset)
; location: [7FFC872B8A00h, 7FFC872B8A0Bh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov eax,ecx                   ; MOV(Mov_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 8b c1
0007h mov ecx,edx                   ; MOV(Mov_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 8b ca
0009h shr eax,cl                    ; SHR(Shr_rm32_CL) [EAX,CL]                            encoding(2 bytes) = d3 e8
000bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> srl32iBytes => new byte[12]{0x0F,0x1F,0x44,0x00,0x00,0x8B,0xC1,0x8B,0xCA,0xD3,0xE8,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: uint srl32u(uint src, int offset)
; location: [7FFC872B8A20h, 7FFC872B8A2Bh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov eax,ecx                   ; MOV(Mov_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 8b c1
0007h mov ecx,edx                   ; MOV(Mov_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 8b ca
0009h shr eax,cl                    ; SHR(Shr_rm32_CL) [EAX,CL]                            encoding(2 bytes) = d3 e8
000bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> srl32uBytes => new byte[12]{0x0F,0x1F,0x44,0x00,0x00,0x8B,0xC1,0x8B,0xCA,0xD3,0xE8,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: long srl64i(long src, int offset)
; location: [7FFC872B8A40h, 7FFC872B8A4Dh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0008h mov ecx,edx                   ; MOV(Mov_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 8b ca
000ah shr rax,cl                    ; SHR(Shr_rm64_CL) [RAX,CL]                            encoding(3 bytes) = 48 d3 e8
000dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> srl64iBytes => new byte[14]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0xC1,0x8B,0xCA,0x48,0xD3,0xE8,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ulong srl64u(ulong src, int offset)
; location: [7FFC872B8A60h, 7FFC872B8A6Dh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0008h mov ecx,edx                   ; MOV(Mov_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 8b ca
000ah shr rax,cl                    ; SHR(Shr_rm64_CL) [RAX,CL]                            encoding(3 bytes) = 48 d3 e8
000dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> srl64uBytes => new byte[14]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0xC1,0x8B,0xCA,0x48,0xD3,0xE8,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: sbyte sub(sbyte lhs, sbyte rhs)
; location: [7FFC872B8A80h, 7FFC872B8A93h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cl                  ; MOVSX(Movsx_r64_rm8) [RAX,CL]                        encoding(4 bytes) = 48 0f be c1
0009h movsx rdx,dl                  ; MOVSX(Movsx_r64_rm8) [RDX,DL]                        encoding(4 bytes) = 48 0f be d2
000dh sub eax,edx                   ; SUB(Sub_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 2b c2
000fh movsx rax,al                  ; MOVSX(Movsx_r64_rm8) [RAX,AL]                        encoding(4 bytes) = 48 0f be c0
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> subBytes => new byte[20]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBE,0xC1,0x48,0x0F,0xBE,0xD2,0x2B,0xC2,0x48,0x0F,0xBE,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: byte sub(byte lhs, byte rhs)
; location: [7FFC872B8AB0h, 7FFC872B8AC0h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0008h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
000bh sub eax,edx                   ; SUB(Sub_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 2b c2
000dh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0010h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> subBytes => new byte[17]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC1,0x0F,0xB6,0xD2,0x2B,0xC2,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: short sub(short lhs, short rhs)
; location: [7FFC872B8AE0h, 7FFC872B8AF3h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cx                  ; MOVSX(Movsx_r64_rm16) [RAX,CX]                       encoding(4 bytes) = 48 0f bf c1
0009h movsx rdx,dx                  ; MOVSX(Movsx_r64_rm16) [RDX,DX]                       encoding(4 bytes) = 48 0f bf d2
000dh sub eax,edx                   ; SUB(Sub_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 2b c2
000fh movsx rax,ax                  ; MOVSX(Movsx_r64_rm16) [RAX,AX]                       encoding(4 bytes) = 48 0f bf c0
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> subBytes => new byte[20]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBF,0xC1,0x48,0x0F,0xBF,0xD2,0x2B,0xC2,0x48,0x0F,0xBF,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ushort sub(ushort lhs, ushort rhs)
; location: [7FFC872B8B10h, 7FFC872B8B20h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cx                  ; MOVZX(Movzx_r32_rm16) [EAX,CX]                       encoding(3 bytes) = 0f b7 c1
0008h movzx edx,dx                  ; MOVZX(Movzx_r32_rm16) [EDX,DX]                       encoding(3 bytes) = 0f b7 d2
000bh sub eax,edx                   ; SUB(Sub_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 2b c2
000dh movzx eax,ax                  ; MOVZX(Movzx_r32_rm16) [EAX,AX]                       encoding(3 bytes) = 0f b7 c0
0010h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> subBytes => new byte[17]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB7,0xC1,0x0F,0xB7,0xD2,0x2B,0xC2,0x0F,0xB7,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: short mul(short lhs, short rhs)
; location: [7FFC872B8B40h, 7FFC872B8B54h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cx                  ; MOVSX(Movsx_r64_rm16) [RAX,CX]                       encoding(4 bytes) = 48 0f bf c1
0009h movsx rdx,dx                  ; MOVSX(Movsx_r64_rm16) [RDX,DX]                       encoding(4 bytes) = 48 0f bf d2
000dh imul eax,edx                  ; IMUL(Imul_r32_rm32) [EAX,EDX]                        encoding(3 bytes) = 0f af c2
0010h movsx rax,ax                  ; MOVSX(Movsx_r64_rm16) [RAX,AX]                       encoding(4 bytes) = 48 0f bf c0
0014h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> mulBytes => new byte[21]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBF,0xC1,0x48,0x0F,0xBF,0xD2,0x0F,0xAF,0xC2,0x48,0x0F,0xBF,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ushort mul(ushort lhs, ushort rhs)
; location: [7FFC872B8B70h, 7FFC872B8B81h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cx                  ; MOVZX(Movzx_r32_rm16) [EAX,CX]                       encoding(3 bytes) = 0f b7 c1
0008h movzx edx,dx                  ; MOVZX(Movzx_r32_rm16) [EDX,DX]                       encoding(3 bytes) = 0f b7 d2
000bh imul eax,edx                  ; IMUL(Imul_r32_rm32) [EAX,EDX]                        encoding(3 bytes) = 0f af c2
000eh movzx eax,ax                  ; MOVZX(Movzx_r32_rm16) [EAX,AX]                       encoding(3 bytes) = 0f b7 c0
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> mulBytes => new byte[18]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB7,0xC1,0x0F,0xB7,0xD2,0x0F,0xAF,0xC2,0x0F,0xB7,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: int mul(int lhs, int rhs)
; location: [7FFC872B8BA0h, 7FFC872B8BAAh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov eax,ecx                   ; MOV(Mov_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 8b c1
0007h imul eax,edx                  ; IMUL(Imul_r32_rm32) [EAX,EDX]                        encoding(3 bytes) = 0f af c2
000ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> mulBytes => new byte[11]{0x0F,0x1F,0x44,0x00,0x00,0x8B,0xC1,0x0F,0xAF,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: uint mul(uint lhs, uint rhs)
; location: [7FFC872B8BC0h, 7FFC872B8BCAh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov eax,ecx                   ; MOV(Mov_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 8b c1
0007h imul eax,edx                  ; IMUL(Imul_r32_rm32) [EAX,EDX]                        encoding(3 bytes) = 0f af c2
000ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> mulBytes => new byte[11]{0x0F,0x1F,0x44,0x00,0x00,0x8B,0xC1,0x0F,0xAF,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: long mul(long lhs, long rhs)
; location: [7FFC872B8BE0h, 7FFC872B8BECh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0008h imul rax,rdx                  ; IMUL(Imul_r64_rm64) [RAX,RDX]                        encoding(4 bytes) = 48 0f af c2
000ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> mulBytes => new byte[13]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0xC1,0x48,0x0F,0xAF,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ulong mul(ulong lhs, ulong rhs)
; location: [7FFC872B8C00h, 7FFC872B8C0Ch]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0008h imul rax,rdx                  ; IMUL(Imul_r64_rm64) [RAX,RDX]                        encoding(4 bytes) = 48 0f af c2
000ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> mulBytes => new byte[13]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0xC1,0x48,0x0F,0xAF,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: float mul(float lhs, float rhs)
; location: [7FFC872B8C20h, 7FFC872B8C29h]
0000h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0003h xchg ax,ax                    ; NOP(Nopw)                                            encoding(2 bytes) = 66 90
0005h vmulss xmm0,xmm0,xmm1         ; VMULSS(VEX_Vmulss_xmm_xmm_xmmm32) [XMM0,XMM0,XMM1]   encoding(VEX, 4 bytes) = c5 fa 59 c1
0009h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> mulBytes => new byte[10]{0xC5,0xF8,0x77,0x66,0x90,0xC5,0xFA,0x59,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: double mul(double lhs, double rhs)
; location: [7FFC872B8C40h, 7FFC872B8C49h]
0000h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0003h xchg ax,ax                    ; NOP(Nopw)                                            encoding(2 bytes) = 66 90
0005h vmulsd xmm0,xmm0,xmm1         ; VMULSD(VEX_Vmulsd_xmm_xmm_xmmm64) [XMM0,XMM0,XMM1]   encoding(VEX, 4 bytes) = c5 fb 59 c1
0009h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> mulBytes => new byte[10]{0xC5,0xF8,0x77,0x66,0x90,0xC5,0xFB,0x59,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref sbyte mul(ref sbyte lhs, sbyte rhs)
; location: [7FFC872B8C60h, 7FFC872B8C75h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,byte ptr [rcx]      ; MOVSX(Movsx_r64_rm8) [RAX,mem(8i,RCX:br,DS:sr)]      encoding(4 bytes) = 48 0f be 01
0009h movsx rdx,dl                  ; MOVSX(Movsx_r64_rm8) [RDX,DL]                        encoding(4 bytes) = 48 0f be d2
000dh imul eax,edx                  ; IMUL(Imul_r32_rm32) [EAX,EDX]                        encoding(3 bytes) = 0f af c2
0010h mov [rcx],al                  ; MOV(Mov_rm8_r8) [mem(8u,RCX:br,DS:sr),AL]            encoding(2 bytes) = 88 01
0012h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0015h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> mulBytes => new byte[22]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBE,0x01,0x48,0x0F,0xBE,0xD2,0x0F,0xAF,0xC2,0x88,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref byte mul(ref byte lhs, byte rhs)
; location: [7FFC872B8C90h, 7FFC872B8CA3h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,byte ptr [rcx]      ; MOVZX(Movzx_r32_rm8) [EAX,mem(8u,RCX:br,DS:sr)]      encoding(3 bytes) = 0f b6 01
0008h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
000bh imul eax,edx                  ; IMUL(Imul_r32_rm32) [EAX,EDX]                        encoding(3 bytes) = 0f af c2
000eh mov [rcx],al                  ; MOV(Mov_rm8_r8) [mem(8u,RCX:br,DS:sr),AL]            encoding(2 bytes) = 88 01
0010h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> mulBytes => new byte[20]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0x01,0x0F,0xB6,0xD2,0x0F,0xAF,0xC2,0x88,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref short mul(ref short lhs, short rhs)
; location: [7FFC872B8CC0h, 7FFC872B8CD6h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,word ptr [rcx]      ; MOVSX(Movsx_r64_rm16) [RAX,mem(16i,RCX:br,DS:sr)]    encoding(4 bytes) = 48 0f bf 01
0009h movsx rdx,dx                  ; MOVSX(Movsx_r64_rm16) [RDX,DX]                       encoding(4 bytes) = 48 0f bf d2
000dh imul eax,edx                  ; IMUL(Imul_r32_rm32) [EAX,EDX]                        encoding(3 bytes) = 0f af c2
0010h mov [rcx],ax                  ; MOV(Mov_rm16_r16) [mem(16u,RCX:br,DS:sr),AX]         encoding(3 bytes) = 66 89 01
0013h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0016h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> mulBytes => new byte[23]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBF,0x01,0x48,0x0F,0xBF,0xD2,0x0F,0xAF,0xC2,0x66,0x89,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref ushort mul(ref ushort lhs, ushort rhs)
; location: [7FFC872B8CF0h, 7FFC872B8D04h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,word ptr [rcx]      ; MOVZX(Movzx_r32_rm16) [EAX,mem(16u,RCX:br,DS:sr)]    encoding(3 bytes) = 0f b7 01
0008h movzx edx,dx                  ; MOVZX(Movzx_r32_rm16) [EDX,DX]                       encoding(3 bytes) = 0f b7 d2
000bh imul eax,edx                  ; IMUL(Imul_r32_rm32) [EAX,EDX]                        encoding(3 bytes) = 0f af c2
000eh mov [rcx],ax                  ; MOV(Mov_rm16_r16) [mem(16u,RCX:br,DS:sr),AX]         encoding(3 bytes) = 66 89 01
0011h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0014h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> mulBytes => new byte[21]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB7,0x01,0x0F,0xB7,0xD2,0x0F,0xAF,0xC2,0x66,0x89,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref int mul(ref int lhs, int rhs)
; location: [7FFC872B8D20h, 7FFC872B8D2Dh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h imul edx,[rcx]                ; IMUL(Imul_r32_rm32) [EDX,mem(32i,RCX:br,DS:sr)]      encoding(3 bytes) = 0f af 11
0008h mov [rcx],edx                 ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(2 bytes) = 89 11
000ah mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> mulBytes => new byte[14]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xAF,0x11,0x89,0x11,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref uint mul(ref uint lhs, uint rhs)
; location: [7FFC872B8D40h, 7FFC872B8D4Dh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h imul edx,[rcx]                ; IMUL(Imul_r32_rm32) [EDX,mem(32i,RCX:br,DS:sr)]      encoding(3 bytes) = 0f af 11
0008h mov [rcx],edx                 ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(2 bytes) = 89 11
000ah mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> mulBytes => new byte[14]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xAF,0x11,0x89,0x11,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref long mul(ref long lhs, long rhs)
; location: [7FFC872B8D60h, 7FFC872B8D6Fh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h imul rdx,[rcx]                ; IMUL(Imul_r64_rm64) [RDX,mem(64i,RCX:br,DS:sr)]      encoding(4 bytes) = 48 0f af 11
0009h mov [rcx],rdx                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RDX]        encoding(3 bytes) = 48 89 11
000ch mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> mulBytes => new byte[16]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xAF,0x11,0x48,0x89,0x11,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref ulong mul(ref ulong lhs, ulong rhs)
; location: [7FFC872B8D80h, 7FFC872B8D8Fh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h imul rdx,[rcx]                ; IMUL(Imul_r64_rm64) [RDX,mem(64i,RCX:br,DS:sr)]      encoding(4 bytes) = 48 0f af 11
0009h mov [rcx],rdx                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RDX]        encoding(3 bytes) = 48 89 11
000ch mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> mulBytes => new byte[16]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xAF,0x11,0x48,0x89,0x11,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref float mul(ref float lhs, float rhs)
; location: [7FFC872B8DA0h, 7FFC872B8DB0h]
0000h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0003h xchg ax,ax                    ; NOP(Nopw)                                            encoding(2 bytes) = 66 90
0005h vmulss xmm1,xmm1,dword ptr [rcx]; VMULSS(VEX_Vmulss_xmm_xmm_xmmm32) [XMM1,XMM1,mem(Float32,RCX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 f2 59 09
0009h vmovss dword ptr [rcx],xmm1   ; VMOVSS(VEX_Vmovss_m32_xmm) [mem(Float32,RCX:br,DS:sr),XMM1] encoding(VEX, 4 bytes) = c5 fa 11 09
000dh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0010h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> mulBytes => new byte[17]{0xC5,0xF8,0x77,0x66,0x90,0xC5,0xF2,0x59,0x09,0xC5,0xFA,0x11,0x09,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref double mul(ref double lhs, double rhs)
; location: [7FFC872B8DD0h, 7FFC872B8DE0h]
0000h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0003h xchg ax,ax                    ; NOP(Nopw)                                            encoding(2 bytes) = 66 90
0005h vmulsd xmm1,xmm1,qword ptr [rcx]; VMULSD(VEX_Vmulsd_xmm_xmm_xmmm64) [XMM1,XMM1,mem(Float64,RCX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 f3 59 09
0009h vmovsd qword ptr [rcx],xmm1   ; VMOVSD(VEX_Vmovsd_m64_xmm) [mem(Float64,RCX:br,DS:sr),XMM1] encoding(VEX, 4 bytes) = c5 fb 11 09
000dh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0010h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> mulBytes => new byte[17]{0xC5,0xF8,0x77,0x66,0x90,0xC5,0xF3,0x59,0x09,0xC5,0xFB,0x11,0x09,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<sbyte> Mul(ReadOnlySpan<sbyte> lhs, ReadOnlySpan<sbyte> rhs, Span<sbyte> dst)
; location: [7FFC872B8E00h, 7FFC872B8EDAh]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000dh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
0011h mov r10,[r8]                  ; MOV(Mov_r64_rm64) [R10,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 4d 8b 10
0014h mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0018h mov r11,[rdx]                 ; MOV(Mov_r64_rm64) [R11,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 1a
001bh mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
001eh mov esi,14h                   ; MOV(Mov_r32_imm32) [ESI,14h:imm32]                   encoding(5 bytes) = be 14 00 00 00
0023h mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0028h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
002ah mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
002dh cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0030h jne short 007ch               ; JNE(Jne_rel8_64) [7Ch:jmp64]                         encoding(2 bytes) = 75 4a
0032h xor ebx,ebx                   ; XOR(Xor_r32_rm32) [EBX,EBX]                          encoding(2 bytes) = 33 db
0034h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0036h jle short 0067h               ; JLE(Jle_rel8_64) [67h:jmp64]                         encoding(2 bytes) = 7e 2f
0038h cmp ebx,r9d                   ; CMP(Cmp_r32_rm32) [EBX,R9D]                          encoding(3 bytes) = 41 3b d9
003bh jae near ptr 00d5h            ; JAE(Jae_rel32_64) [D5h:jmp64]                        encoding(6 bytes) = 0f 83 94 00 00 00
0041h movsxd rbp,ebx                ; MOVSXD(Movsxd_r64_rm32) [RBP,EBX]                    encoding(3 bytes) = 48 63 eb
0044h lea rdi,[rax+rbp]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 28
0048h movsx rsi,byte ptr [r11+rbp]  ; MOVSX(Movsx_r64_rm8) [RSI,mem(8i,R11:br,DS:sr)]      encoding(5 bytes) = 49 0f be 34 2b
004dh cmp ebx,r8d                   ; CMP(Cmp_r32_rm32) [EBX,R8D]                          encoding(3 bytes) = 41 3b d8
0050h jae near ptr 00d5h            ; JAE(Jae_rel32_64) [D5h:jmp64]                        encoding(6 bytes) = 0f 83 7f 00 00 00
0056h movsx rbp,byte ptr [r10+rbp]  ; MOVSX(Movsx_r64_rm8) [RBP,mem(8i,R10:br,DS:sr)]      encoding(5 bytes) = 49 0f be 2c 2a
005bh imul esi,ebp                  ; IMUL(Imul_r32_rm32) [ESI,EBP]                        encoding(3 bytes) = 0f af f5
005eh mov [rdi],sil                 ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),SIL]           encoding(3 bytes) = 40 88 37
0061h inc ebx                       ; INC(Inc_rm32) [EBX]                                  encoding(2 bytes) = ff c3
0063h cmp ebx,edx                   ; CMP(Cmp_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 3b da
0065h jl short 0038h                ; JL(Jl_rel8_64) [38h:jmp64]                           encoding(2 bytes) = 7c d1
0067h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
006ah mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
006eh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0071h add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0075h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0076h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0077h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0078h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0079h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
007bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
007ch mov ecx,0C95h                 ; MOV(Mov_r32_imm32) [ECX,c95h:imm32]                  encoding(5 bytes) = b9 95 0c 00 00
0081h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
008bh call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F47AB20h:jmp64]                encoding(5 bytes) = e8 90 aa 47 5f
0090h mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0093h mov ecx,0C9Dh                 ; MOV(Mov_r32_imm32) [ECX,c9dh:imm32]                  encoding(5 bytes) = b9 9d 0c 00 00
0098h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00a2h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F47AB20h:jmp64]                encoding(5 bytes) = e8 79 aa 47 5f
00a7h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00aah lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
00afh mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00b2h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00b6h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00b9h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00bbh mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00bdh mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00c2h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00c7h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFCA5178h:jmp64]        encoding(5 bytes) = e8 ac 50 ca ff
00cch mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00cfh call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F45DB50h:jmp64]                encoding(5 bytes) = e8 7c da 45 5f
00d4h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00d5h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5ABFB0h:jmp64]                encoding(5 bytes) = e8 d6 be 5a 5f
00dah int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> MulBytes => new byte[219]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4D,0x8B,0x10,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x1A,0x8B,0x52,0x08,0xBE,0x14,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x4A,0x33,0xDB,0x85,0xD2,0x7E,0x2F,0x41,0x3B,0xD9,0x0F,0x83,0x94,0x00,0x00,0x00,0x48,0x63,0xEB,0x48,0x8D,0x3C,0x28,0x49,0x0F,0xBE,0x34,0x2B,0x41,0x3B,0xD8,0x0F,0x83,0x7F,0x00,0x00,0x00,0x49,0x0F,0xBE,0x2C,0x2A,0x0F,0xAF,0xF5,0x40,0x88,0x37,0xFF,0xC3,0x3B,0xDA,0x7C,0xD1,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x95,0x0C,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x90,0xAA,0x47,0x5F,0x4C,0x8B,0xF0,0xB9,0x9D,0x0C,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x79,0xAA,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0xAC,0x50,0xCA,0xFF,0x48,0x8B,0xC8,0xE8,0x7C,0xDA,0x45,0x5F,0xCC,0xE8,0xD6,0xBE,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<byte> Mul(ReadOnlySpan<byte> lhs, ReadOnlySpan<byte> rhs, Span<byte> dst)
; location: [7FFC872B8F00h, 7FFC872B8FDAh]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000dh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
0011h mov r10,[r8]                  ; MOV(Mov_r64_rm64) [R10,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 4d 8b 10
0014h mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0018h mov r11,[rdx]                 ; MOV(Mov_r64_rm64) [R11,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 1a
001bh mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
001eh mov esi,1Ch                   ; MOV(Mov_r32_imm32) [ESI,1ch:imm32]                   encoding(5 bytes) = be 1c 00 00 00
0023h mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0028h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
002ah mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
002dh cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0030h jne short 007ch               ; JNE(Jne_rel8_64) [7Ch:jmp64]                         encoding(2 bytes) = 75 4a
0032h xor ebx,ebx                   ; XOR(Xor_r32_rm32) [EBX,EBX]                          encoding(2 bytes) = 33 db
0034h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0036h jle short 0067h               ; JLE(Jle_rel8_64) [67h:jmp64]                         encoding(2 bytes) = 7e 2f
0038h cmp ebx,r9d                   ; CMP(Cmp_r32_rm32) [EBX,R9D]                          encoding(3 bytes) = 41 3b d9
003bh jae near ptr 00d5h            ; JAE(Jae_rel32_64) [D5h:jmp64]                        encoding(6 bytes) = 0f 83 94 00 00 00
0041h movsxd rbp,ebx                ; MOVSXD(Movsxd_r64_rm32) [RBP,EBX]                    encoding(3 bytes) = 48 63 eb
0044h lea rdi,[rax+rbp]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 28
0048h movzx esi,byte ptr [r11+rbp]  ; MOVZX(Movzx_r32_rm8) [ESI,mem(8u,R11:br,DS:sr)]      encoding(5 bytes) = 41 0f b6 34 2b
004dh cmp ebx,r8d                   ; CMP(Cmp_r32_rm32) [EBX,R8D]                          encoding(3 bytes) = 41 3b d8
0050h jae near ptr 00d5h            ; JAE(Jae_rel32_64) [D5h:jmp64]                        encoding(6 bytes) = 0f 83 7f 00 00 00
0056h movzx ebp,byte ptr [r10+rbp]  ; MOVZX(Movzx_r32_rm8) [EBP,mem(8u,R10:br,DS:sr)]      encoding(5 bytes) = 41 0f b6 2c 2a
005bh imul esi,ebp                  ; IMUL(Imul_r32_rm32) [ESI,EBP]                        encoding(3 bytes) = 0f af f5
005eh mov [rdi],sil                 ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),SIL]           encoding(3 bytes) = 40 88 37
0061h inc ebx                       ; INC(Inc_rm32) [EBX]                                  encoding(2 bytes) = ff c3
0063h cmp ebx,edx                   ; CMP(Cmp_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 3b da
0065h jl short 0038h                ; JL(Jl_rel8_64) [38h:jmp64]                           encoding(2 bytes) = 7c d1
0067h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
006ah mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
006eh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0071h add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0075h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0076h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0077h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0078h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0079h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
007bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
007ch mov ecx,0C95h                 ; MOV(Mov_r32_imm32) [ECX,c95h:imm32]                  encoding(5 bytes) = b9 95 0c 00 00
0081h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
008bh call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F47AA20h:jmp64]                encoding(5 bytes) = e8 90 a9 47 5f
0090h mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0093h mov ecx,0C9Dh                 ; MOV(Mov_r32_imm32) [ECX,c9dh:imm32]                  encoding(5 bytes) = b9 9d 0c 00 00
0098h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00a2h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F47AA20h:jmp64]                encoding(5 bytes) = e8 79 a9 47 5f
00a7h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00aah lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
00afh mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00b2h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00b6h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00b9h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00bbh mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00bdh mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00c2h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00c7h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFCA5078h:jmp64]        encoding(5 bytes) = e8 ac 4f ca ff
00cch mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00cfh call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F45DA50h:jmp64]                encoding(5 bytes) = e8 7c d9 45 5f
00d4h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00d5h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5ABEB0h:jmp64]                encoding(5 bytes) = e8 d6 bd 5a 5f
00dah int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> MulBytes => new byte[219]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4D,0x8B,0x10,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x1A,0x8B,0x52,0x08,0xBE,0x1C,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x4A,0x33,0xDB,0x85,0xD2,0x7E,0x2F,0x41,0x3B,0xD9,0x0F,0x83,0x94,0x00,0x00,0x00,0x48,0x63,0xEB,0x48,0x8D,0x3C,0x28,0x41,0x0F,0xB6,0x34,0x2B,0x41,0x3B,0xD8,0x0F,0x83,0x7F,0x00,0x00,0x00,0x41,0x0F,0xB6,0x2C,0x2A,0x0F,0xAF,0xF5,0x40,0x88,0x37,0xFF,0xC3,0x3B,0xDA,0x7C,0xD1,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x95,0x0C,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x90,0xA9,0x47,0x5F,0x4C,0x8B,0xF0,0xB9,0x9D,0x0C,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x79,0xA9,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0xAC,0x4F,0xCA,0xFF,0x48,0x8B,0xC8,0xE8,0x7C,0xD9,0x45,0x5F,0xCC,0xE8,0xD6,0xBD,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<short> Mul(ReadOnlySpan<short> lhs, ReadOnlySpan<short> rhs, Span<short> dst)
; location: [7FFC872B9000h, 7FFC872B90DAh]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000dh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
0011h mov r10,[r8]                  ; MOV(Mov_r64_rm64) [R10,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 4d 8b 10
0014h mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0018h mov r11,[rdx]                 ; MOV(Mov_r64_rm64) [R11,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 1a
001bh mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
001eh mov esi,24h                   ; MOV(Mov_r32_imm32) [ESI,24h:imm32]                   encoding(5 bytes) = be 24 00 00 00
0023h mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0028h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
002ah mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
002dh cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0030h jne short 007ch               ; JNE(Jne_rel8_64) [7Ch:jmp64]                         encoding(2 bytes) = 75 4a
0032h xor ebx,ebx                   ; XOR(Xor_r32_rm32) [EBX,EBX]                          encoding(2 bytes) = 33 db
0034h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0036h jle short 0067h               ; JLE(Jle_rel8_64) [67h:jmp64]                         encoding(2 bytes) = 7e 2f
0038h cmp ebx,r9d                   ; CMP(Cmp_r32_rm32) [EBX,R9D]                          encoding(3 bytes) = 41 3b d9
003bh jae near ptr 00d5h            ; JAE(Jae_rel32_64) [D5h:jmp64]                        encoding(6 bytes) = 0f 83 94 00 00 00
0041h movsxd rbp,ebx                ; MOVSXD(Movsxd_r64_rm32) [RBP,EBX]                    encoding(3 bytes) = 48 63 eb
0044h lea rdi,[rax+rbp*2]           ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 68
0048h movsx rsi,word ptr [r11+rbp*2]; MOVSX(Movsx_r64_rm16) [RSI,mem(16i,R11:br,DS:sr)]    encoding(5 bytes) = 49 0f bf 34 6b
004dh cmp ebx,r8d                   ; CMP(Cmp_r32_rm32) [EBX,R8D]                          encoding(3 bytes) = 41 3b d8
0050h jae near ptr 00d5h            ; JAE(Jae_rel32_64) [D5h:jmp64]                        encoding(6 bytes) = 0f 83 7f 00 00 00
0056h movsx rbp,word ptr [r10+rbp*2]; MOVSX(Movsx_r64_rm16) [RBP,mem(16i,R10:br,DS:sr)]    encoding(5 bytes) = 49 0f bf 2c 6a
005bh imul esi,ebp                  ; IMUL(Imul_r32_rm32) [ESI,EBP]                        encoding(3 bytes) = 0f af f5
005eh mov [rdi],si                  ; MOV(Mov_rm16_r16) [mem(16u,RDI:br,DS:sr),SI]         encoding(3 bytes) = 66 89 37
0061h inc ebx                       ; INC(Inc_rm32) [EBX]                                  encoding(2 bytes) = ff c3
0063h cmp ebx,edx                   ; CMP(Cmp_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 3b da
0065h jl short 0038h                ; JL(Jl_rel8_64) [38h:jmp64]                           encoding(2 bytes) = 7c d1
0067h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
006ah mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
006eh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0071h add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0075h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0076h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0077h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0078h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0079h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
007bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
007ch mov ecx,0C95h                 ; MOV(Mov_r32_imm32) [ECX,c95h:imm32]                  encoding(5 bytes) = b9 95 0c 00 00
0081h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
008bh call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F47A920h:jmp64]                encoding(5 bytes) = e8 90 a8 47 5f
0090h mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0093h mov ecx,0C9Dh                 ; MOV(Mov_r32_imm32) [ECX,c9dh:imm32]                  encoding(5 bytes) = b9 9d 0c 00 00
0098h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00a2h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F47A920h:jmp64]                encoding(5 bytes) = e8 79 a8 47 5f
00a7h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00aah lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
00afh mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00b2h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00b6h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00b9h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00bbh mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00bdh mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00c2h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00c7h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFCA4F78h:jmp64]        encoding(5 bytes) = e8 ac 4e ca ff
00cch mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00cfh call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F45D950h:jmp64]                encoding(5 bytes) = e8 7c d8 45 5f
00d4h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00d5h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5ABDB0h:jmp64]                encoding(5 bytes) = e8 d6 bc 5a 5f
00dah int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> MulBytes => new byte[219]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4D,0x8B,0x10,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x1A,0x8B,0x52,0x08,0xBE,0x24,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x4A,0x33,0xDB,0x85,0xD2,0x7E,0x2F,0x41,0x3B,0xD9,0x0F,0x83,0x94,0x00,0x00,0x00,0x48,0x63,0xEB,0x48,0x8D,0x3C,0x68,0x49,0x0F,0xBF,0x34,0x6B,0x41,0x3B,0xD8,0x0F,0x83,0x7F,0x00,0x00,0x00,0x49,0x0F,0xBF,0x2C,0x6A,0x0F,0xAF,0xF5,0x66,0x89,0x37,0xFF,0xC3,0x3B,0xDA,0x7C,0xD1,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x95,0x0C,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x90,0xA8,0x47,0x5F,0x4C,0x8B,0xF0,0xB9,0x9D,0x0C,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x79,0xA8,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0xAC,0x4E,0xCA,0xFF,0x48,0x8B,0xC8,0xE8,0x7C,0xD8,0x45,0x5F,0xCC,0xE8,0xD6,0xBC,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<ushort> Mul(ReadOnlySpan<ushort> lhs, ReadOnlySpan<ushort> rhs, Span<ushort> dst)
; location: [7FFC872B9100h, 7FFC872B91DAh]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000dh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
0011h mov r10,[r8]                  ; MOV(Mov_r64_rm64) [R10,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 4d 8b 10
0014h mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0018h mov r11,[rdx]                 ; MOV(Mov_r64_rm64) [R11,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 1a
001bh mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
001eh mov esi,2Ch                   ; MOV(Mov_r32_imm32) [ESI,2ch:imm32]                   encoding(5 bytes) = be 2c 00 00 00
0023h mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0028h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
002ah mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
002dh cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0030h jne short 007ch               ; JNE(Jne_rel8_64) [7Ch:jmp64]                         encoding(2 bytes) = 75 4a
0032h xor ebx,ebx                   ; XOR(Xor_r32_rm32) [EBX,EBX]                          encoding(2 bytes) = 33 db
0034h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0036h jle short 0067h               ; JLE(Jle_rel8_64) [67h:jmp64]                         encoding(2 bytes) = 7e 2f
0038h cmp ebx,r9d                   ; CMP(Cmp_r32_rm32) [EBX,R9D]                          encoding(3 bytes) = 41 3b d9
003bh jae near ptr 00d5h            ; JAE(Jae_rel32_64) [D5h:jmp64]                        encoding(6 bytes) = 0f 83 94 00 00 00
0041h movsxd rbp,ebx                ; MOVSXD(Movsxd_r64_rm32) [RBP,EBX]                    encoding(3 bytes) = 48 63 eb
0044h lea rdi,[rax+rbp*2]           ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 68
0048h movzx esi,word ptr [r11+rbp*2]; MOVZX(Movzx_r32_rm16) [ESI,mem(16u,R11:br,DS:sr)]    encoding(5 bytes) = 41 0f b7 34 6b
004dh cmp ebx,r8d                   ; CMP(Cmp_r32_rm32) [EBX,R8D]                          encoding(3 bytes) = 41 3b d8
0050h jae near ptr 00d5h            ; JAE(Jae_rel32_64) [D5h:jmp64]                        encoding(6 bytes) = 0f 83 7f 00 00 00
0056h movzx ebp,word ptr [r10+rbp*2]; MOVZX(Movzx_r32_rm16) [EBP,mem(16u,R10:br,DS:sr)]    encoding(5 bytes) = 41 0f b7 2c 6a
005bh imul esi,ebp                  ; IMUL(Imul_r32_rm32) [ESI,EBP]                        encoding(3 bytes) = 0f af f5
005eh mov [rdi],si                  ; MOV(Mov_rm16_r16) [mem(16u,RDI:br,DS:sr),SI]         encoding(3 bytes) = 66 89 37
0061h inc ebx                       ; INC(Inc_rm32) [EBX]                                  encoding(2 bytes) = ff c3
0063h cmp ebx,edx                   ; CMP(Cmp_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 3b da
0065h jl short 0038h                ; JL(Jl_rel8_64) [38h:jmp64]                           encoding(2 bytes) = 7c d1
0067h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
006ah mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
006eh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0071h add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0075h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0076h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0077h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0078h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0079h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
007bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
007ch mov ecx,0C95h                 ; MOV(Mov_r32_imm32) [ECX,c95h:imm32]                  encoding(5 bytes) = b9 95 0c 00 00
0081h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
008bh call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F47A820h:jmp64]                encoding(5 bytes) = e8 90 a7 47 5f
0090h mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0093h mov ecx,0C9Dh                 ; MOV(Mov_r32_imm32) [ECX,c9dh:imm32]                  encoding(5 bytes) = b9 9d 0c 00 00
0098h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00a2h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F47A820h:jmp64]                encoding(5 bytes) = e8 79 a7 47 5f
00a7h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00aah lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
00afh mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00b2h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00b6h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00b9h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00bbh mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00bdh mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00c2h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00c7h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFCA4E78h:jmp64]        encoding(5 bytes) = e8 ac 4d ca ff
00cch mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00cfh call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F45D850h:jmp64]                encoding(5 bytes) = e8 7c d7 45 5f
00d4h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00d5h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5ABCB0h:jmp64]                encoding(5 bytes) = e8 d6 bb 5a 5f
00dah int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> MulBytes => new byte[219]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4D,0x8B,0x10,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x1A,0x8B,0x52,0x08,0xBE,0x2C,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x4A,0x33,0xDB,0x85,0xD2,0x7E,0x2F,0x41,0x3B,0xD9,0x0F,0x83,0x94,0x00,0x00,0x00,0x48,0x63,0xEB,0x48,0x8D,0x3C,0x68,0x41,0x0F,0xB7,0x34,0x6B,0x41,0x3B,0xD8,0x0F,0x83,0x7F,0x00,0x00,0x00,0x41,0x0F,0xB7,0x2C,0x6A,0x0F,0xAF,0xF5,0x66,0x89,0x37,0xFF,0xC3,0x3B,0xDA,0x7C,0xD1,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x95,0x0C,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x90,0xA7,0x47,0x5F,0x4C,0x8B,0xF0,0xB9,0x9D,0x0C,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x79,0xA7,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0xAC,0x4D,0xCA,0xFF,0x48,0x8B,0xC8,0xE8,0x7C,0xD7,0x45,0x5F,0xCC,0xE8,0xD6,0xBB,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<int> Mul(ReadOnlySpan<int> lhs, ReadOnlySpan<int> rhs, Span<int> dst)
; location: [7FFC872B9200h, 7FFC872B92D7h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000dh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
0011h mov r10,[r8]                  ; MOV(Mov_r64_rm64) [R10,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 4d 8b 10
0014h mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0018h mov r11,[rdx]                 ; MOV(Mov_r64_rm64) [R11,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 1a
001bh mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
001eh mov esi,33h                   ; MOV(Mov_r32_imm32) [ESI,33h:imm32]                   encoding(5 bytes) = be 33 00 00 00
0023h mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0028h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
002ah mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
002dh cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0030h jne short 0079h               ; JNE(Jne_rel8_64) [79h:jmp64]                         encoding(2 bytes) = 75 47
0032h xor ebx,ebx                   ; XOR(Xor_r32_rm32) [EBX,EBX]                          encoding(2 bytes) = 33 db
0034h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0036h jle short 0064h               ; JLE(Jle_rel8_64) [64h:jmp64]                         encoding(2 bytes) = 7e 2c
0038h cmp ebx,r9d                   ; CMP(Cmp_r32_rm32) [EBX,R9D]                          encoding(3 bytes) = 41 3b d9
003bh jae near ptr 00d2h            ; JAE(Jae_rel32_64) [D2h:jmp64]                        encoding(6 bytes) = 0f 83 91 00 00 00
0041h movsxd rbp,ebx                ; MOVSXD(Movsxd_r64_rm32) [RBP,EBX]                    encoding(3 bytes) = 48 63 eb
0044h lea rdi,[rax+rbp*4]           ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c a8
0048h mov esi,[r11+rbp*4]           ; MOV(Mov_r32_rm32) [ESI,mem(32u,R11:br,DS:sr)]        encoding(4 bytes) = 41 8b 34 ab
004ch cmp ebx,r8d                   ; CMP(Cmp_r32_rm32) [EBX,R8D]                          encoding(3 bytes) = 41 3b d8
004fh jae near ptr 00d2h            ; JAE(Jae_rel32_64) [D2h:jmp64]                        encoding(6 bytes) = 0f 83 7d 00 00 00
0055h mov ebp,[r10+rbp*4]           ; MOV(Mov_r32_rm32) [EBP,mem(32u,R10:br,DS:sr)]        encoding(4 bytes) = 41 8b 2c aa
0059h imul esi,ebp                  ; IMUL(Imul_r32_rm32) [ESI,EBP]                        encoding(3 bytes) = 0f af f5
005ch mov [rdi],esi                 ; MOV(Mov_rm32_r32) [mem(32u,RDI:br,DS:sr),ESI]        encoding(2 bytes) = 89 37
005eh inc ebx                       ; INC(Inc_rm32) [EBX]                                  encoding(2 bytes) = ff c3
0060h cmp ebx,edx                   ; CMP(Cmp_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 3b da
0062h jl short 0038h                ; JL(Jl_rel8_64) [38h:jmp64]                           encoding(2 bytes) = 7c d4
0064h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0067h mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
006bh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
006eh add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0072h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0073h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0074h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0075h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0076h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0078h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0079h mov ecx,0C95h                 ; MOV(Mov_r32_imm32) [ECX,c95h:imm32]                  encoding(5 bytes) = b9 95 0c 00 00
007eh mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0088h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F47A720h:jmp64]                encoding(5 bytes) = e8 93 a6 47 5f
008dh mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0090h mov ecx,0C9Dh                 ; MOV(Mov_r32_imm32) [ECX,c9dh:imm32]                  encoding(5 bytes) = b9 9d 0c 00 00
0095h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
009fh call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F47A720h:jmp64]                encoding(5 bytes) = e8 7c a6 47 5f
00a4h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00a7h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
00ach mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00afh mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00b3h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00b6h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00b8h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00bah mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00bfh mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00c4h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFCA4D78h:jmp64]        encoding(5 bytes) = e8 af 4c ca ff
00c9h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00cch call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F45D750h:jmp64]                encoding(5 bytes) = e8 7f d6 45 5f
00d1h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00d2h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5ABBB0h:jmp64]                encoding(5 bytes) = e8 d9 ba 5a 5f
00d7h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> MulBytes => new byte[216]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4D,0x8B,0x10,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x1A,0x8B,0x52,0x08,0xBE,0x33,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x47,0x33,0xDB,0x85,0xD2,0x7E,0x2C,0x41,0x3B,0xD9,0x0F,0x83,0x91,0x00,0x00,0x00,0x48,0x63,0xEB,0x48,0x8D,0x3C,0xA8,0x41,0x8B,0x34,0xAB,0x41,0x3B,0xD8,0x0F,0x83,0x7D,0x00,0x00,0x00,0x41,0x8B,0x2C,0xAA,0x0F,0xAF,0xF5,0x89,0x37,0xFF,0xC3,0x3B,0xDA,0x7C,0xD4,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x95,0x0C,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x93,0xA6,0x47,0x5F,0x4C,0x8B,0xF0,0xB9,0x9D,0x0C,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x7C,0xA6,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0xAF,0x4C,0xCA,0xFF,0x48,0x8B,0xC8,0xE8,0x7F,0xD6,0x45,0x5F,0xCC,0xE8,0xD9,0xBA,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<uint> Mul(ReadOnlySpan<uint> lhs, ReadOnlySpan<uint> rhs, Span<uint> dst)
; location: [7FFC872B9300h, 7FFC872B93D7h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000dh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
0011h mov r10,[r8]                  ; MOV(Mov_r64_rm64) [R10,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 4d 8b 10
0014h mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0018h mov r11,[rdx]                 ; MOV(Mov_r64_rm64) [R11,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 1a
001bh mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
001eh mov esi,3Ch                   ; MOV(Mov_r32_imm32) [ESI,3ch:imm32]                   encoding(5 bytes) = be 3c 00 00 00
0023h mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0028h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
002ah mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
002dh cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0030h jne short 0079h               ; JNE(Jne_rel8_64) [79h:jmp64]                         encoding(2 bytes) = 75 47
0032h xor ebx,ebx                   ; XOR(Xor_r32_rm32) [EBX,EBX]                          encoding(2 bytes) = 33 db
0034h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0036h jle short 0064h               ; JLE(Jle_rel8_64) [64h:jmp64]                         encoding(2 bytes) = 7e 2c
0038h cmp ebx,r9d                   ; CMP(Cmp_r32_rm32) [EBX,R9D]                          encoding(3 bytes) = 41 3b d9
003bh jae near ptr 00d2h            ; JAE(Jae_rel32_64) [D2h:jmp64]                        encoding(6 bytes) = 0f 83 91 00 00 00
0041h movsxd rbp,ebx                ; MOVSXD(Movsxd_r64_rm32) [RBP,EBX]                    encoding(3 bytes) = 48 63 eb
0044h lea rdi,[rax+rbp*4]           ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c a8
0048h mov esi,[r11+rbp*4]           ; MOV(Mov_r32_rm32) [ESI,mem(32u,R11:br,DS:sr)]        encoding(4 bytes) = 41 8b 34 ab
004ch cmp ebx,r8d                   ; CMP(Cmp_r32_rm32) [EBX,R8D]                          encoding(3 bytes) = 41 3b d8
004fh jae near ptr 00d2h            ; JAE(Jae_rel32_64) [D2h:jmp64]                        encoding(6 bytes) = 0f 83 7d 00 00 00
0055h mov ebp,[r10+rbp*4]           ; MOV(Mov_r32_rm32) [EBP,mem(32u,R10:br,DS:sr)]        encoding(4 bytes) = 41 8b 2c aa
0059h imul esi,ebp                  ; IMUL(Imul_r32_rm32) [ESI,EBP]                        encoding(3 bytes) = 0f af f5
005ch mov [rdi],esi                 ; MOV(Mov_rm32_r32) [mem(32u,RDI:br,DS:sr),ESI]        encoding(2 bytes) = 89 37
005eh inc ebx                       ; INC(Inc_rm32) [EBX]                                  encoding(2 bytes) = ff c3
0060h cmp ebx,edx                   ; CMP(Cmp_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 3b da
0062h jl short 0038h                ; JL(Jl_rel8_64) [38h:jmp64]                           encoding(2 bytes) = 7c d4
0064h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0067h mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
006bh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
006eh add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0072h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0073h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0074h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0075h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0076h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0078h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0079h mov ecx,0C95h                 ; MOV(Mov_r32_imm32) [ECX,c95h:imm32]                  encoding(5 bytes) = b9 95 0c 00 00
007eh mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0088h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F47A620h:jmp64]                encoding(5 bytes) = e8 93 a5 47 5f
008dh mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0090h mov ecx,0C9Dh                 ; MOV(Mov_r32_imm32) [ECX,c9dh:imm32]                  encoding(5 bytes) = b9 9d 0c 00 00
0095h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
009fh call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F47A620h:jmp64]                encoding(5 bytes) = e8 7c a5 47 5f
00a4h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00a7h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
00ach mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00afh mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00b3h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00b6h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00b8h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00bah mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00bfh mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00c4h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFCA4C78h:jmp64]        encoding(5 bytes) = e8 af 4b ca ff
00c9h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00cch call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F45D650h:jmp64]                encoding(5 bytes) = e8 7f d5 45 5f
00d1h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00d2h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5ABAB0h:jmp64]                encoding(5 bytes) = e8 d9 b9 5a 5f
00d7h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> MulBytes => new byte[216]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4D,0x8B,0x10,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x1A,0x8B,0x52,0x08,0xBE,0x3C,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x47,0x33,0xDB,0x85,0xD2,0x7E,0x2C,0x41,0x3B,0xD9,0x0F,0x83,0x91,0x00,0x00,0x00,0x48,0x63,0xEB,0x48,0x8D,0x3C,0xA8,0x41,0x8B,0x34,0xAB,0x41,0x3B,0xD8,0x0F,0x83,0x7D,0x00,0x00,0x00,0x41,0x8B,0x2C,0xAA,0x0F,0xAF,0xF5,0x89,0x37,0xFF,0xC3,0x3B,0xDA,0x7C,0xD4,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x95,0x0C,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x93,0xA5,0x47,0x5F,0x4C,0x8B,0xF0,0xB9,0x9D,0x0C,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x7C,0xA5,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0xAF,0x4B,0xCA,0xFF,0x48,0x8B,0xC8,0xE8,0x7F,0xD5,0x45,0x5F,0xCC,0xE8,0xD9,0xB9,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<long> Mul(ReadOnlySpan<long> lhs, ReadOnlySpan<long> rhs, Span<long> dst)
; location: [7FFC872B9400h, 7FFC872B94D9h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000dh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
0011h mov r10,[r8]                  ; MOV(Mov_r64_rm64) [R10,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 4d 8b 10
0014h mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0018h mov r11,[rdx]                 ; MOV(Mov_r64_rm64) [R11,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 1a
001bh mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
001eh mov esi,44h                   ; MOV(Mov_r32_imm32) [ESI,44h:imm32]                   encoding(5 bytes) = be 44 00 00 00
0023h mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0028h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
002ah mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
002dh cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0030h jne short 007bh               ; JNE(Jne_rel8_64) [7Bh:jmp64]                         encoding(2 bytes) = 75 49
0032h xor ebx,ebx                   ; XOR(Xor_r32_rm32) [EBX,EBX]                          encoding(2 bytes) = 33 db
0034h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0036h jle short 0066h               ; JLE(Jle_rel8_64) [66h:jmp64]                         encoding(2 bytes) = 7e 2e
0038h cmp ebx,r9d                   ; CMP(Cmp_r32_rm32) [EBX,R9D]                          encoding(3 bytes) = 41 3b d9
003bh jae near ptr 00d4h            ; JAE(Jae_rel32_64) [D4h:jmp64]                        encoding(6 bytes) = 0f 83 93 00 00 00
0041h movsxd rbp,ebx                ; MOVSXD(Movsxd_r64_rm32) [RBP,EBX]                    encoding(3 bytes) = 48 63 eb
0044h lea rdi,[rax+rbp*8]           ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c e8
0048h mov rsi,[r11+rbp*8]           ; MOV(Mov_r64_rm64) [RSI,mem(64u,R11:br,DS:sr)]        encoding(4 bytes) = 49 8b 34 eb
004ch cmp ebx,r8d                   ; CMP(Cmp_r32_rm32) [EBX,R8D]                          encoding(3 bytes) = 41 3b d8
004fh jae near ptr 00d4h            ; JAE(Jae_rel32_64) [D4h:jmp64]                        encoding(6 bytes) = 0f 83 7f 00 00 00
0055h mov rbp,[r10+rbp*8]           ; MOV(Mov_r64_rm64) [RBP,mem(64u,R10:br,DS:sr)]        encoding(4 bytes) = 49 8b 2c ea
0059h imul rsi,rbp                  ; IMUL(Imul_r64_rm64) [RSI,RBP]                        encoding(4 bytes) = 48 0f af f5
005dh mov [rdi],rsi                 ; MOV(Mov_rm64_r64) [mem(64u,RDI:br,DS:sr),RSI]        encoding(3 bytes) = 48 89 37
0060h inc ebx                       ; INC(Inc_rm32) [EBX]                                  encoding(2 bytes) = ff c3
0062h cmp ebx,edx                   ; CMP(Cmp_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 3b da
0064h jl short 0038h                ; JL(Jl_rel8_64) [38h:jmp64]                           encoding(2 bytes) = 7c d2
0066h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0069h mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
006dh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0070h add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0074h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0075h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0076h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0077h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0078h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
007ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
007bh mov ecx,0C95h                 ; MOV(Mov_r32_imm32) [ECX,c95h:imm32]                  encoding(5 bytes) = b9 95 0c 00 00
0080h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
008ah call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F47A520h:jmp64]                encoding(5 bytes) = e8 91 a4 47 5f
008fh mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0092h mov ecx,0C9Dh                 ; MOV(Mov_r32_imm32) [ECX,c9dh:imm32]                  encoding(5 bytes) = b9 9d 0c 00 00
0097h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00a1h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F47A520h:jmp64]                encoding(5 bytes) = e8 7a a4 47 5f
00a6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00a9h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
00aeh mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00b1h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00b5h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00b8h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00bah mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00bch mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00c1h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00c6h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFCA4B78h:jmp64]        encoding(5 bytes) = e8 ad 4a ca ff
00cbh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00ceh call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F45D550h:jmp64]                encoding(5 bytes) = e8 7d d4 45 5f
00d3h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00d4h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5AB9B0h:jmp64]                encoding(5 bytes) = e8 d7 b8 5a 5f
00d9h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> MulBytes => new byte[218]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4D,0x8B,0x10,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x1A,0x8B,0x52,0x08,0xBE,0x44,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x49,0x33,0xDB,0x85,0xD2,0x7E,0x2E,0x41,0x3B,0xD9,0x0F,0x83,0x93,0x00,0x00,0x00,0x48,0x63,0xEB,0x48,0x8D,0x3C,0xE8,0x49,0x8B,0x34,0xEB,0x41,0x3B,0xD8,0x0F,0x83,0x7F,0x00,0x00,0x00,0x49,0x8B,0x2C,0xEA,0x48,0x0F,0xAF,0xF5,0x48,0x89,0x37,0xFF,0xC3,0x3B,0xDA,0x7C,0xD2,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x95,0x0C,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x91,0xA4,0x47,0x5F,0x4C,0x8B,0xF0,0xB9,0x9D,0x0C,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x7A,0xA4,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0xAD,0x4A,0xCA,0xFF,0x48,0x8B,0xC8,0xE8,0x7D,0xD4,0x45,0x5F,0xCC,0xE8,0xD7,0xB8,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<ulong> Mul(ReadOnlySpan<ulong> lhs, ReadOnlySpan<ulong> rhs, Span<ulong> dst)
; location: [7FFC872B9500h, 7FFC872B95D9h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000dh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
0011h mov r10,[r8]                  ; MOV(Mov_r64_rm64) [R10,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 4d 8b 10
0014h mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0018h mov r11,[rdx]                 ; MOV(Mov_r64_rm64) [R11,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 1a
001bh mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
001eh mov esi,4Ch                   ; MOV(Mov_r32_imm32) [ESI,4ch:imm32]                   encoding(5 bytes) = be 4c 00 00 00
0023h mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0028h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
002ah mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
002dh cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0030h jne short 007bh               ; JNE(Jne_rel8_64) [7Bh:jmp64]                         encoding(2 bytes) = 75 49
0032h xor ebx,ebx                   ; XOR(Xor_r32_rm32) [EBX,EBX]                          encoding(2 bytes) = 33 db
0034h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0036h jle short 0066h               ; JLE(Jle_rel8_64) [66h:jmp64]                         encoding(2 bytes) = 7e 2e
0038h cmp ebx,r9d                   ; CMP(Cmp_r32_rm32) [EBX,R9D]                          encoding(3 bytes) = 41 3b d9
003bh jae near ptr 00d4h            ; JAE(Jae_rel32_64) [D4h:jmp64]                        encoding(6 bytes) = 0f 83 93 00 00 00
0041h movsxd rbp,ebx                ; MOVSXD(Movsxd_r64_rm32) [RBP,EBX]                    encoding(3 bytes) = 48 63 eb
0044h lea rdi,[rax+rbp*8]           ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c e8
0048h mov rsi,[r11+rbp*8]           ; MOV(Mov_r64_rm64) [RSI,mem(64u,R11:br,DS:sr)]        encoding(4 bytes) = 49 8b 34 eb
004ch cmp ebx,r8d                   ; CMP(Cmp_r32_rm32) [EBX,R8D]                          encoding(3 bytes) = 41 3b d8
004fh jae near ptr 00d4h            ; JAE(Jae_rel32_64) [D4h:jmp64]                        encoding(6 bytes) = 0f 83 7f 00 00 00
0055h mov rbp,[r10+rbp*8]           ; MOV(Mov_r64_rm64) [RBP,mem(64u,R10:br,DS:sr)]        encoding(4 bytes) = 49 8b 2c ea
0059h imul rsi,rbp                  ; IMUL(Imul_r64_rm64) [RSI,RBP]                        encoding(4 bytes) = 48 0f af f5
005dh mov [rdi],rsi                 ; MOV(Mov_rm64_r64) [mem(64u,RDI:br,DS:sr),RSI]        encoding(3 bytes) = 48 89 37
0060h inc ebx                       ; INC(Inc_rm32) [EBX]                                  encoding(2 bytes) = ff c3
0062h cmp ebx,edx                   ; CMP(Cmp_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 3b da
0064h jl short 0038h                ; JL(Jl_rel8_64) [38h:jmp64]                           encoding(2 bytes) = 7c d2
0066h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0069h mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
006dh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0070h add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0074h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0075h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0076h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0077h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0078h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
007ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
007bh mov ecx,0C95h                 ; MOV(Mov_r32_imm32) [ECX,c95h:imm32]                  encoding(5 bytes) = b9 95 0c 00 00
0080h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
008ah call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F47A420h:jmp64]                encoding(5 bytes) = e8 91 a3 47 5f
008fh mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0092h mov ecx,0C9Dh                 ; MOV(Mov_r32_imm32) [ECX,c9dh:imm32]                  encoding(5 bytes) = b9 9d 0c 00 00
0097h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00a1h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F47A420h:jmp64]                encoding(5 bytes) = e8 7a a3 47 5f
00a6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00a9h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
00aeh mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00b1h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00b5h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00b8h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00bah mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00bch mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00c1h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00c6h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFCA4A78h:jmp64]        encoding(5 bytes) = e8 ad 49 ca ff
00cbh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00ceh call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F45D450h:jmp64]                encoding(5 bytes) = e8 7d d3 45 5f
00d3h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00d4h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5AB8B0h:jmp64]                encoding(5 bytes) = e8 d7 b7 5a 5f
00d9h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> MulBytes => new byte[218]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4D,0x8B,0x10,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x1A,0x8B,0x52,0x08,0xBE,0x4C,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x49,0x33,0xDB,0x85,0xD2,0x7E,0x2E,0x41,0x3B,0xD9,0x0F,0x83,0x93,0x00,0x00,0x00,0x48,0x63,0xEB,0x48,0x8D,0x3C,0xE8,0x49,0x8B,0x34,0xEB,0x41,0x3B,0xD8,0x0F,0x83,0x7F,0x00,0x00,0x00,0x49,0x8B,0x2C,0xEA,0x48,0x0F,0xAF,0xF5,0x48,0x89,0x37,0xFF,0xC3,0x3B,0xDA,0x7C,0xD2,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x95,0x0C,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x91,0xA3,0x47,0x5F,0x4C,0x8B,0xF0,0xB9,0x9D,0x0C,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x7A,0xA3,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0xAD,0x49,0xCA,0xFF,0x48,0x8B,0xC8,0xE8,0x7D,0xD3,0x45,0x5F,0xCC,0xE8,0xD7,0xB7,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<float> Mul(ReadOnlySpan<float> lhs, ReadOnlySpan<float> rhs, Span<float> dst)
; location: [7FFC872B9600h, 7FFC872B96E1h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
000dh mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
0010h mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
0014h mov r10,[r8]                  ; MOV(Mov_r64_rm64) [R10,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 4d 8b 10
0017h mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
001bh mov r11,[rdx]                 ; MOV(Mov_r64_rm64) [R11,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 1a
001eh mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0021h mov esi,54h                   ; MOV(Mov_r32_imm32) [ESI,54h:imm32]                   encoding(5 bytes) = be 54 00 00 00
0026h mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
002bh mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
002dh mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0030h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0033h jne short 0083h               ; JNE(Jne_rel8_64) [83h:jmp64]                         encoding(2 bytes) = 75 4e
0035h xor ebx,ebx                   ; XOR(Xor_r32_rm32) [EBX,EBX]                          encoding(2 bytes) = 33 db
0037h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0039h jle short 006eh               ; JLE(Jle_rel8_64) [6Eh:jmp64]                         encoding(2 bytes) = 7e 33
003bh cmp ebx,r9d                   ; CMP(Cmp_r32_rm32) [EBX,R9D]                          encoding(3 bytes) = 41 3b d9
003eh jae near ptr 00dch            ; JAE(Jae_rel32_64) [DCh:jmp64]                        encoding(6 bytes) = 0f 83 98 00 00 00
0044h movsxd rbp,ebx                ; MOVSXD(Movsxd_r64_rm32) [RBP,EBX]                    encoding(3 bytes) = 48 63 eb
0047h lea rdi,[rax+rbp*4]           ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c a8
004bh vmovss xmm0,dword ptr [r11+rbp*4]; VMOVSS(VEX_Vmovss_xmm_m32) [XMM0,mem(Float32,R11:br,DS:sr)] encoding(VEX, 6 bytes) = c4 c1 7a 10 04 ab
0051h cmp ebx,r8d                   ; CMP(Cmp_r32_rm32) [EBX,R8D]                          encoding(3 bytes) = 41 3b d8
0054h jae near ptr 00dch            ; JAE(Jae_rel32_64) [DCh:jmp64]                        encoding(6 bytes) = 0f 83 82 00 00 00
005ah vmovss xmm1,dword ptr [r10+rbp*4]; VMOVSS(VEX_Vmovss_xmm_m32) [XMM1,mem(Float32,R10:br,DS:sr)] encoding(VEX, 6 bytes) = c4 c1 7a 10 0c aa
0060h vmulss xmm0,xmm0,xmm1         ; VMULSS(VEX_Vmulss_xmm_xmm_xmmm32) [XMM0,XMM0,XMM1]   encoding(VEX, 4 bytes) = c5 fa 59 c1
0064h vmovss dword ptr [rdi],xmm0   ; VMOVSS(VEX_Vmovss_m32_xmm) [mem(Float32,RDI:br,DS:sr),XMM0] encoding(VEX, 4 bytes) = c5 fa 11 07
0068h inc ebx                       ; INC(Inc_rm32) [EBX]                                  encoding(2 bytes) = ff c3
006ah cmp ebx,edx                   ; CMP(Cmp_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 3b da
006ch jl short 003bh                ; JL(Jl_rel8_64) [3Bh:jmp64]                           encoding(2 bytes) = 7c cd
006eh mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0071h mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0075h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0078h add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
007ch pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
007dh pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
007eh pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
007fh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0080h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0082h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0083h mov ecx,0C95h                 ; MOV(Mov_r32_imm32) [ECX,c95h:imm32]                  encoding(5 bytes) = b9 95 0c 00 00
0088h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0092h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F47A320h:jmp64]                encoding(5 bytes) = e8 89 a2 47 5f
0097h mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
009ah mov ecx,0C9Dh                 ; MOV(Mov_r32_imm32) [ECX,c9dh:imm32]                  encoding(5 bytes) = b9 9d 0c 00 00
009fh mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00a9h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F47A320h:jmp64]                encoding(5 bytes) = e8 72 a2 47 5f
00aeh mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00b1h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
00b6h mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00b9h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00bdh mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00c0h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00c2h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00c4h mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00c9h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00ceh call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFCA4978h:jmp64]        encoding(5 bytes) = e8 a5 48 ca ff
00d3h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00d6h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F45D350h:jmp64]                encoding(5 bytes) = e8 75 d2 45 5f
00dbh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00dch call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5AB7B0h:jmp64]                encoding(5 bytes) = e8 cf b6 5a 5f
00e1h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> MulBytes => new byte[226]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0xC5,0xF8,0x77,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4D,0x8B,0x10,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x1A,0x8B,0x52,0x08,0xBE,0x54,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x4E,0x33,0xDB,0x85,0xD2,0x7E,0x33,0x41,0x3B,0xD9,0x0F,0x83,0x98,0x00,0x00,0x00,0x48,0x63,0xEB,0x48,0x8D,0x3C,0xA8,0xC4,0xC1,0x7A,0x10,0x04,0xAB,0x41,0x3B,0xD8,0x0F,0x83,0x82,0x00,0x00,0x00,0xC4,0xC1,0x7A,0x10,0x0C,0xAA,0xC5,0xFA,0x59,0xC1,0xC5,0xFA,0x11,0x07,0xFF,0xC3,0x3B,0xDA,0x7C,0xCD,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x95,0x0C,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x89,0xA2,0x47,0x5F,0x4C,0x8B,0xF0,0xB9,0x9D,0x0C,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x72,0xA2,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0xA5,0x48,0xCA,0xFF,0x48,0x8B,0xC8,0xE8,0x75,0xD2,0x45,0x5F,0xCC,0xE8,0xCF,0xB6,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<double> Mul(ReadOnlySpan<double> lhs, ReadOnlySpan<double> rhs, Span<double> dst)
; location: [7FFC872B9700h, 7FFC872B97E1h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
000dh mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
0010h mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
0014h mov r10,[r8]                  ; MOV(Mov_r64_rm64) [R10,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 4d 8b 10
0017h mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
001bh mov r11,[rdx]                 ; MOV(Mov_r64_rm64) [R11,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 1a
001eh mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0021h mov esi,5Ch                   ; MOV(Mov_r32_imm32) [ESI,5ch:imm32]                   encoding(5 bytes) = be 5c 00 00 00
0026h mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
002bh mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
002dh mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0030h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0033h jne short 0083h               ; JNE(Jne_rel8_64) [83h:jmp64]                         encoding(2 bytes) = 75 4e
0035h xor ebx,ebx                   ; XOR(Xor_r32_rm32) [EBX,EBX]                          encoding(2 bytes) = 33 db
0037h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0039h jle short 006eh               ; JLE(Jle_rel8_64) [6Eh:jmp64]                         encoding(2 bytes) = 7e 33
003bh cmp ebx,r9d                   ; CMP(Cmp_r32_rm32) [EBX,R9D]                          encoding(3 bytes) = 41 3b d9
003eh jae near ptr 00dch            ; JAE(Jae_rel32_64) [DCh:jmp64]                        encoding(6 bytes) = 0f 83 98 00 00 00
0044h movsxd rbp,ebx                ; MOVSXD(Movsxd_r64_rm32) [RBP,EBX]                    encoding(3 bytes) = 48 63 eb
0047h lea rdi,[rax+rbp*8]           ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c e8
004bh vmovsd xmm0,qword ptr [r11+rbp*8]; VMOVSD(VEX_Vmovsd_xmm_m64) [XMM0,mem(Float64,R11:br,DS:sr)] encoding(VEX, 6 bytes) = c4 c1 7b 10 04 eb
0051h cmp ebx,r8d                   ; CMP(Cmp_r32_rm32) [EBX,R8D]                          encoding(3 bytes) = 41 3b d8
0054h jae near ptr 00dch            ; JAE(Jae_rel32_64) [DCh:jmp64]                        encoding(6 bytes) = 0f 83 82 00 00 00
005ah vmovsd xmm1,qword ptr [r10+rbp*8]; VMOVSD(VEX_Vmovsd_xmm_m64) [XMM1,mem(Float64,R10:br,DS:sr)] encoding(VEX, 6 bytes) = c4 c1 7b 10 0c ea
0060h vmulsd xmm0,xmm0,xmm1         ; VMULSD(VEX_Vmulsd_xmm_xmm_xmmm64) [XMM0,XMM0,XMM1]   encoding(VEX, 4 bytes) = c5 fb 59 c1
0064h vmovsd qword ptr [rdi],xmm0   ; VMOVSD(VEX_Vmovsd_m64_xmm) [mem(Float64,RDI:br,DS:sr),XMM0] encoding(VEX, 4 bytes) = c5 fb 11 07
0068h inc ebx                       ; INC(Inc_rm32) [EBX]                                  encoding(2 bytes) = ff c3
006ah cmp ebx,edx                   ; CMP(Cmp_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 3b da
006ch jl short 003bh                ; JL(Jl_rel8_64) [3Bh:jmp64]                           encoding(2 bytes) = 7c cd
006eh mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0071h mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0075h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0078h add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
007ch pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
007dh pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
007eh pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
007fh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0080h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0082h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0083h mov ecx,0C95h                 ; MOV(Mov_r32_imm32) [ECX,c95h:imm32]                  encoding(5 bytes) = b9 95 0c 00 00
0088h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0092h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F47A220h:jmp64]                encoding(5 bytes) = e8 89 a1 47 5f
0097h mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
009ah mov ecx,0C9Dh                 ; MOV(Mov_r32_imm32) [ECX,c9dh:imm32]                  encoding(5 bytes) = b9 9d 0c 00 00
009fh mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00a9h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F47A220h:jmp64]                encoding(5 bytes) = e8 72 a1 47 5f
00aeh mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00b1h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
00b6h mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00b9h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00bdh mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00c0h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00c2h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00c4h mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00c9h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00ceh call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFCA4878h:jmp64]        encoding(5 bytes) = e8 a5 47 ca ff
00d3h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00d6h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F45D250h:jmp64]                encoding(5 bytes) = e8 75 d1 45 5f
00dbh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00dch call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5AB6B0h:jmp64]                encoding(5 bytes) = e8 cf b5 5a 5f
00e1h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> MulBytes => new byte[226]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0xC5,0xF8,0x77,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4D,0x8B,0x10,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x1A,0x8B,0x52,0x08,0xBE,0x5C,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x4E,0x33,0xDB,0x85,0xD2,0x7E,0x33,0x41,0x3B,0xD9,0x0F,0x83,0x98,0x00,0x00,0x00,0x48,0x63,0xEB,0x48,0x8D,0x3C,0xE8,0xC4,0xC1,0x7B,0x10,0x04,0xEB,0x41,0x3B,0xD8,0x0F,0x83,0x82,0x00,0x00,0x00,0xC4,0xC1,0x7B,0x10,0x0C,0xEA,0xC5,0xFB,0x59,0xC1,0xC5,0xFB,0x11,0x07,0xFF,0xC3,0x3B,0xDA,0x7C,0xCD,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x95,0x0C,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x89,0xA1,0x47,0x5F,0x4C,0x8B,0xF0,0xB9,0x9D,0x0C,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x72,0xA1,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0xA5,0x47,0xCA,0xFF,0x48,0x8B,0xC8,0xE8,0x75,0xD1,0x45,0x5F,0xCC,0xE8,0xCF,0xB5,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<sbyte> Mul(Span<sbyte> lhs, ReadOnlySpan<sbyte> rhs)
; location: [7FFC872B9800h, 7FFC872B98CCh]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0014h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0017h mov esi,64h                   ; MOV(Mov_r32_imm32) [ESI,64h:imm32]                   encoding(5 bytes) = be 64 00 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
0023h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0026h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0029h jne short 006eh               ; JNE(Jne_rel8_64) [6Eh:jmp64]                         encoding(2 bytes) = 75 43
002bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
002eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0030h jle short 005ah               ; JLE(Jle_rel8_64) [5Ah:jmp64]                         encoding(2 bytes) = 7e 28
0032h movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
0035h lea rbx,[r9+r11]              ; LEA(Lea_r64_m) [RBX,mem(Unknown,R9:br,DS:sr)]        encoding(4 bytes) = 4b 8d 1c 19
0039h movsx rbp,byte ptr [rbx]      ; MOVSX(Movsx_r64_rm8) [RBP,mem(8i,RBX:br,DS:sr)]      encoding(4 bytes) = 48 0f be 2b
003dh cmp r10d,r8d                  ; CMP(Cmp_r32_rm32) [R10D,R8D]                         encoding(3 bytes) = 45 3b d0
0040h jae near ptr 00c7h            ; JAE(Jae_rel32_64) [C7h:jmp64]                        encoding(6 bytes) = 0f 83 81 00 00 00
0046h movsx r11,byte ptr [rax+r11]  ; MOVSX(Movsx_r64_rm8) [R11,mem(8i,RAX:br,DS:sr)]      encoding(5 bytes) = 4e 0f be 1c 18
004bh imul r11d,ebp                 ; IMUL(Imul_r32_rm32) [R11D,EBP]                       encoding(4 bytes) = 44 0f af dd
004fh mov [rbx],r11b                ; MOV(Mov_rm8_r8) [mem(8u,RBX:br,DS:sr),R11L]          encoding(3 bytes) = 44 88 1b
0052h inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
0055h cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
0058h jl short 0032h                ; JL(Jl_rel8_64) [32h:jmp64]                           encoding(2 bytes) = 7c d8
005ah mov [rcx],r9                  ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R9]         encoding(3 bytes) = 4c 89 09
005dh mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
0060h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0063h add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0067h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0068h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0069h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
006ah pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
006bh pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
006dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
006eh mov ecx,0C95h                 ; MOV(Mov_r32_imm32) [ECX,c95h:imm32]                  encoding(5 bytes) = b9 95 0c 00 00
0073h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
007dh call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F47A120h:jmp64]                encoding(5 bytes) = e8 9e a0 47 5f
0082h mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0085h mov ecx,0C9Dh                 ; MOV(Mov_r32_imm32) [ECX,c9dh:imm32]                  encoding(5 bytes) = b9 9d 0c 00 00
008ah mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0094h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F47A120h:jmp64]                encoding(5 bytes) = e8 87 a0 47 5f
0099h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
009ch lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
00a1h mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00a4h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00a8h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00abh mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00adh mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00afh mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00b4h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b9h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFCA4778h:jmp64]        encoding(5 bytes) = e8 ba 46 ca ff
00beh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00c1h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F45D150h:jmp64]                encoding(5 bytes) = e8 8a d0 45 5f
00c6h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00c7h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5AB5B0h:jmp64]                encoding(5 bytes) = e8 e4 b4 5a 5f
00cch int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> MulBytes => new byte[205]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x00,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0xBE,0x64,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x43,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x28,0x4D,0x63,0xDA,0x4B,0x8D,0x1C,0x19,0x48,0x0F,0xBE,0x2B,0x45,0x3B,0xD0,0x0F,0x83,0x81,0x00,0x00,0x00,0x4E,0x0F,0xBE,0x1C,0x18,0x44,0x0F,0xAF,0xDD,0x44,0x88,0x1B,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xD8,0x4C,0x89,0x09,0x89,0x51,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x95,0x0C,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x9E,0xA0,0x47,0x5F,0x4C,0x8B,0xF0,0xB9,0x9D,0x0C,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x87,0xA0,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0xBA,0x46,0xCA,0xFF,0x48,0x8B,0xC8,0xE8,0x8A,0xD0,0x45,0x5F,0xCC,0xE8,0xE4,0xB4,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<byte> Mul(Span<byte> lhs, ReadOnlySpan<byte> rhs)
; location: [7FFC872B98F0h, 7FFC872B99BCh]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0014h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0017h mov esi,6Ch                   ; MOV(Mov_r32_imm32) [ESI,6ch:imm32]                   encoding(5 bytes) = be 6c 00 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
0023h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0026h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0029h jne short 006eh               ; JNE(Jne_rel8_64) [6Eh:jmp64]                         encoding(2 bytes) = 75 43
002bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
002eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0030h jle short 005ah               ; JLE(Jle_rel8_64) [5Ah:jmp64]                         encoding(2 bytes) = 7e 28
0032h movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
0035h lea rbx,[r9+r11]              ; LEA(Lea_r64_m) [RBX,mem(Unknown,R9:br,DS:sr)]        encoding(4 bytes) = 4b 8d 1c 19
0039h movzx ebp,byte ptr [rbx]      ; MOVZX(Movzx_r32_rm8) [EBP,mem(8u,RBX:br,DS:sr)]      encoding(4 bytes) = 40 0f b6 2b
003dh cmp r10d,r8d                  ; CMP(Cmp_r32_rm32) [R10D,R8D]                         encoding(3 bytes) = 45 3b d0
0040h jae near ptr 00c7h            ; JAE(Jae_rel32_64) [C7h:jmp64]                        encoding(6 bytes) = 0f 83 81 00 00 00
0046h movzx r11d,byte ptr [rax+r11] ; MOVZX(Movzx_r32_rm8) [R11D,mem(8u,RAX:br,DS:sr)]     encoding(5 bytes) = 46 0f b6 1c 18
004bh imul r11d,ebp                 ; IMUL(Imul_r32_rm32) [R11D,EBP]                       encoding(4 bytes) = 44 0f af dd
004fh mov [rbx],r11b                ; MOV(Mov_rm8_r8) [mem(8u,RBX:br,DS:sr),R11L]          encoding(3 bytes) = 44 88 1b
0052h inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
0055h cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
0058h jl short 0032h                ; JL(Jl_rel8_64) [32h:jmp64]                           encoding(2 bytes) = 7c d8
005ah mov [rcx],r9                  ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R9]         encoding(3 bytes) = 4c 89 09
005dh mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
0060h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0063h add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0067h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0068h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0069h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
006ah pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
006bh pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
006dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
006eh mov ecx,0C95h                 ; MOV(Mov_r32_imm32) [ECX,c95h:imm32]                  encoding(5 bytes) = b9 95 0c 00 00
0073h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
007dh call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F47A030h:jmp64]                encoding(5 bytes) = e8 ae 9f 47 5f
0082h mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0085h mov ecx,0C9Dh                 ; MOV(Mov_r32_imm32) [ECX,c9dh:imm32]                  encoding(5 bytes) = b9 9d 0c 00 00
008ah mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0094h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F47A030h:jmp64]                encoding(5 bytes) = e8 97 9f 47 5f
0099h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
009ch lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
00a1h mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00a4h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00a8h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00abh mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00adh mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00afh mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00b4h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b9h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFCA4688h:jmp64]        encoding(5 bytes) = e8 ca 45 ca ff
00beh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00c1h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F45D060h:jmp64]                encoding(5 bytes) = e8 9a cf 45 5f
00c6h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00c7h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5AB4C0h:jmp64]                encoding(5 bytes) = e8 f4 b3 5a 5f
00cch int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> MulBytes => new byte[205]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x00,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0xBE,0x6C,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x43,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x28,0x4D,0x63,0xDA,0x4B,0x8D,0x1C,0x19,0x40,0x0F,0xB6,0x2B,0x45,0x3B,0xD0,0x0F,0x83,0x81,0x00,0x00,0x00,0x46,0x0F,0xB6,0x1C,0x18,0x44,0x0F,0xAF,0xDD,0x44,0x88,0x1B,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xD8,0x4C,0x89,0x09,0x89,0x51,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x95,0x0C,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xAE,0x9F,0x47,0x5F,0x4C,0x8B,0xF0,0xB9,0x9D,0x0C,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x97,0x9F,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0xCA,0x45,0xCA,0xFF,0x48,0x8B,0xC8,0xE8,0x9A,0xCF,0x45,0x5F,0xCC,0xE8,0xF4,0xB3,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<short> Mul(Span<short> lhs, ReadOnlySpan<short> rhs)
; location: [7FFC872B99E0h, 7FFC872B9AADh]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0014h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0017h mov esi,74h                   ; MOV(Mov_r32_imm32) [ESI,74h:imm32]                   encoding(5 bytes) = be 74 00 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
0023h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0026h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0029h jne short 006fh               ; JNE(Jne_rel8_64) [6Fh:jmp64]                         encoding(2 bytes) = 75 44
002bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
002eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0030h jle short 005bh               ; JLE(Jle_rel8_64) [5Bh:jmp64]                         encoding(2 bytes) = 7e 29
0032h movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
0035h lea rbx,[r9+r11*2]            ; LEA(Lea_r64_m) [RBX,mem(Unknown,R9:br,DS:sr)]        encoding(4 bytes) = 4b 8d 1c 59
0039h movsx rbp,word ptr [rbx]      ; MOVSX(Movsx_r64_rm16) [RBP,mem(16i,RBX:br,DS:sr)]    encoding(4 bytes) = 48 0f bf 2b
003dh cmp r10d,r8d                  ; CMP(Cmp_r32_rm32) [R10D,R8D]                         encoding(3 bytes) = 45 3b d0
0040h jae near ptr 00c8h            ; JAE(Jae_rel32_64) [C8h:jmp64]                        encoding(6 bytes) = 0f 83 82 00 00 00
0046h movsx r11,word ptr [rax+r11*2]; MOVSX(Movsx_r64_rm16) [R11,mem(16i,RAX:br,DS:sr)]    encoding(5 bytes) = 4e 0f bf 1c 58
004bh imul r11d,ebp                 ; IMUL(Imul_r32_rm32) [R11D,EBP]                       encoding(4 bytes) = 44 0f af dd
004fh mov [rbx],r11w                ; MOV(Mov_rm16_r16) [mem(16u,RBX:br,DS:sr),R11W]       encoding(4 bytes) = 66 44 89 1b
0053h inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
0056h cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
0059h jl short 0032h                ; JL(Jl_rel8_64) [32h:jmp64]                           encoding(2 bytes) = 7c d7
005bh mov [rcx],r9                  ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R9]         encoding(3 bytes) = 4c 89 09
005eh mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
0061h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0064h add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0068h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0069h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
006ah pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
006bh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
006ch pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
006eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
006fh mov ecx,0C95h                 ; MOV(Mov_r32_imm32) [ECX,c95h:imm32]                  encoding(5 bytes) = b9 95 0c 00 00
0074h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
007eh call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F479F40h:jmp64]                encoding(5 bytes) = e8 bd 9e 47 5f
0083h mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0086h mov ecx,0C9Dh                 ; MOV(Mov_r32_imm32) [ECX,c9dh:imm32]                  encoding(5 bytes) = b9 9d 0c 00 00
008bh mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0095h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F479F40h:jmp64]                encoding(5 bytes) = e8 a6 9e 47 5f
009ah mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
009dh lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
00a2h mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00a5h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00a9h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00ach mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00aeh mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00b0h mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00b5h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00bah call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFCA4598h:jmp64]        encoding(5 bytes) = e8 d9 44 ca ff
00bfh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00c2h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F45CF70h:jmp64]                encoding(5 bytes) = e8 a9 ce 45 5f
00c7h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00c8h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5AB3D0h:jmp64]                encoding(5 bytes) = e8 03 b3 5a 5f
00cdh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> MulBytes => new byte[206]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x00,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0xBE,0x74,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x44,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x29,0x4D,0x63,0xDA,0x4B,0x8D,0x1C,0x59,0x48,0x0F,0xBF,0x2B,0x45,0x3B,0xD0,0x0F,0x83,0x82,0x00,0x00,0x00,0x4E,0x0F,0xBF,0x1C,0x58,0x44,0x0F,0xAF,0xDD,0x66,0x44,0x89,0x1B,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xD7,0x4C,0x89,0x09,0x89,0x51,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x95,0x0C,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xBD,0x9E,0x47,0x5F,0x4C,0x8B,0xF0,0xB9,0x9D,0x0C,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xA6,0x9E,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0xD9,0x44,0xCA,0xFF,0x48,0x8B,0xC8,0xE8,0xA9,0xCE,0x45,0x5F,0xCC,0xE8,0x03,0xB3,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<ushort> Mul(Span<ushort> lhs, ReadOnlySpan<ushort> rhs)
; location: [7FFC872B9AD0h, 7FFC872B9B9Ch]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0014h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0017h mov esi,7Ch                   ; MOV(Mov_r32_imm32) [ESI,7ch:imm32]                   encoding(5 bytes) = be 7c 00 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
0023h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0026h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0029h jne short 006eh               ; JNE(Jne_rel8_64) [6Eh:jmp64]                         encoding(2 bytes) = 75 43
002bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
002eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0030h jle short 005ah               ; JLE(Jle_rel8_64) [5Ah:jmp64]                         encoding(2 bytes) = 7e 28
0032h movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
0035h lea rbx,[r9+r11*2]            ; LEA(Lea_r64_m) [RBX,mem(Unknown,R9:br,DS:sr)]        encoding(4 bytes) = 4b 8d 1c 59
0039h movzx ebp,word ptr [rbx]      ; MOVZX(Movzx_r32_rm16) [EBP,mem(16u,RBX:br,DS:sr)]    encoding(3 bytes) = 0f b7 2b
003ch cmp r10d,r8d                  ; CMP(Cmp_r32_rm32) [R10D,R8D]                         encoding(3 bytes) = 45 3b d0
003fh jae near ptr 00c7h            ; JAE(Jae_rel32_64) [C7h:jmp64]                        encoding(6 bytes) = 0f 83 82 00 00 00
0045h movzx r11d,word ptr [rax+r11*2]; MOVZX(Movzx_r32_rm16) [R11D,mem(16u,RAX:br,DS:sr)]  encoding(5 bytes) = 46 0f b7 1c 58
004ah imul r11d,ebp                 ; IMUL(Imul_r32_rm32) [R11D,EBP]                       encoding(4 bytes) = 44 0f af dd
004eh mov [rbx],r11w                ; MOV(Mov_rm16_r16) [mem(16u,RBX:br,DS:sr),R11W]       encoding(4 bytes) = 66 44 89 1b
0052h inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
0055h cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
0058h jl short 0032h                ; JL(Jl_rel8_64) [32h:jmp64]                           encoding(2 bytes) = 7c d8
005ah mov [rcx],r9                  ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R9]         encoding(3 bytes) = 4c 89 09
005dh mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
0060h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0063h add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0067h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0068h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0069h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
006ah pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
006bh pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
006dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
006eh mov ecx,0C95h                 ; MOV(Mov_r32_imm32) [ECX,c95h:imm32]                  encoding(5 bytes) = b9 95 0c 00 00
0073h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
007dh call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F479E50h:jmp64]                encoding(5 bytes) = e8 ce 9d 47 5f
0082h mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0085h mov ecx,0C9Dh                 ; MOV(Mov_r32_imm32) [ECX,c9dh:imm32]                  encoding(5 bytes) = b9 9d 0c 00 00
008ah mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0094h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F479E50h:jmp64]                encoding(5 bytes) = e8 b7 9d 47 5f
0099h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
009ch lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
00a1h mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00a4h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00a8h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00abh mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00adh mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00afh mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00b4h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b9h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFCA44A8h:jmp64]        encoding(5 bytes) = e8 ea 43 ca ff
00beh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00c1h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F45CE80h:jmp64]                encoding(5 bytes) = e8 ba cd 45 5f
00c6h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00c7h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5AB2E0h:jmp64]                encoding(5 bytes) = e8 14 b2 5a 5f
00cch int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> MulBytes => new byte[205]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x00,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0xBE,0x7C,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x43,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x28,0x4D,0x63,0xDA,0x4B,0x8D,0x1C,0x59,0x0F,0xB7,0x2B,0x45,0x3B,0xD0,0x0F,0x83,0x82,0x00,0x00,0x00,0x46,0x0F,0xB7,0x1C,0x58,0x44,0x0F,0xAF,0xDD,0x66,0x44,0x89,0x1B,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xD8,0x4C,0x89,0x09,0x89,0x51,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x95,0x0C,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xCE,0x9D,0x47,0x5F,0x4C,0x8B,0xF0,0xB9,0x9D,0x0C,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xB7,0x9D,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0xEA,0x43,0xCA,0xFF,0x48,0x8B,0xC8,0xE8,0xBA,0xCD,0x45,0x5F,0xCC,0xE8,0x14,0xB2,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<int> Mul(Span<int> lhs, ReadOnlySpan<int> rhs)
; location: [7FFC872B9BC0h, 7FFC872B9C85h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0014h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0017h mov esi,84h                   ; MOV(Mov_r32_imm32) [ESI,84h:imm32]                   encoding(5 bytes) = be 84 00 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
0023h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0026h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0029h jne short 0067h               ; JNE(Jne_rel8_64) [67h:jmp64]                         encoding(2 bytes) = 75 3c
002bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
002eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0030h jle short 0053h               ; JLE(Jle_rel8_64) [53h:jmp64]                         encoding(2 bytes) = 7e 21
0032h movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
0035h lea rbx,[r9+r11*4]            ; LEA(Lea_r64_m) [RBX,mem(Unknown,R9:br,DS:sr)]        encoding(4 bytes) = 4b 8d 1c 99
0039h mov ebp,[rbx]                 ; MOV(Mov_r32_rm32) [EBP,mem(32u,RBX:br,DS:sr)]        encoding(2 bytes) = 8b 2b
003bh cmp r10d,r8d                  ; CMP(Cmp_r32_rm32) [R10D,R8D]                         encoding(3 bytes) = 45 3b d0
003eh jae near ptr 00c0h            ; JAE(Jae_rel32_64) [C0h:jmp64]                        encoding(6 bytes) = 0f 83 7c 00 00 00
0044h imul ebp,[rax+r11*4]          ; IMUL(Imul_r32_rm32) [EBP,mem(32i,RAX:br,DS:sr)]      encoding(5 bytes) = 42 0f af 2c 98
0049h mov [rbx],ebp                 ; MOV(Mov_rm32_r32) [mem(32u,RBX:br,DS:sr),EBP]        encoding(2 bytes) = 89 2b
004bh inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
004eh cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
0051h jl short 0032h                ; JL(Jl_rel8_64) [32h:jmp64]                           encoding(2 bytes) = 7c df
0053h mov [rcx],r9                  ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R9]         encoding(3 bytes) = 4c 89 09
0056h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
0059h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
005ch add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0060h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0061h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0062h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0063h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0064h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0066h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0067h mov ecx,0C95h                 ; MOV(Mov_r32_imm32) [ECX,c95h:imm32]                  encoding(5 bytes) = b9 95 0c 00 00
006ch mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0076h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F479D60h:jmp64]                encoding(5 bytes) = e8 e5 9c 47 5f
007bh mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
007eh mov ecx,0C9Dh                 ; MOV(Mov_r32_imm32) [ECX,c9dh:imm32]                  encoding(5 bytes) = b9 9d 0c 00 00
0083h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
008dh call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F479D60h:jmp64]                encoding(5 bytes) = e8 ce 9c 47 5f
0092h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
0095h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
009ah mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
009dh mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00a1h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00a4h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00a6h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00a8h mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00adh mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b2h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFCA43B8h:jmp64]        encoding(5 bytes) = e8 01 43 ca ff
00b7h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00bah call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F45CD90h:jmp64]                encoding(5 bytes) = e8 d1 cc 45 5f
00bfh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00c0h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5AB1F0h:jmp64]                encoding(5 bytes) = e8 2b b1 5a 5f
00c5h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> MulBytes => new byte[198]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x00,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0xBE,0x84,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x3C,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x21,0x4D,0x63,0xDA,0x4B,0x8D,0x1C,0x99,0x8B,0x2B,0x45,0x3B,0xD0,0x0F,0x83,0x7C,0x00,0x00,0x00,0x42,0x0F,0xAF,0x2C,0x98,0x89,0x2B,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xDF,0x4C,0x89,0x09,0x89,0x51,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x95,0x0C,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xE5,0x9C,0x47,0x5F,0x4C,0x8B,0xF0,0xB9,0x9D,0x0C,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xCE,0x9C,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x01,0x43,0xCA,0xFF,0x48,0x8B,0xC8,0xE8,0xD1,0xCC,0x45,0x5F,0xCC,0xE8,0x2B,0xB1,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<uint> Mul(Span<uint> lhs, ReadOnlySpan<uint> rhs)
; location: [7FFC872B9CB0h, 7FFC872B9D75h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0014h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0017h mov esi,8Ch                   ; MOV(Mov_r32_imm32) [ESI,8ch:imm32]                   encoding(5 bytes) = be 8c 00 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
0023h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0026h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0029h jne short 0067h               ; JNE(Jne_rel8_64) [67h:jmp64]                         encoding(2 bytes) = 75 3c
002bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
002eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0030h jle short 0053h               ; JLE(Jle_rel8_64) [53h:jmp64]                         encoding(2 bytes) = 7e 21
0032h movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
0035h lea rbx,[r9+r11*4]            ; LEA(Lea_r64_m) [RBX,mem(Unknown,R9:br,DS:sr)]        encoding(4 bytes) = 4b 8d 1c 99
0039h mov ebp,[rbx]                 ; MOV(Mov_r32_rm32) [EBP,mem(32u,RBX:br,DS:sr)]        encoding(2 bytes) = 8b 2b
003bh cmp r10d,r8d                  ; CMP(Cmp_r32_rm32) [R10D,R8D]                         encoding(3 bytes) = 45 3b d0
003eh jae near ptr 00c0h            ; JAE(Jae_rel32_64) [C0h:jmp64]                        encoding(6 bytes) = 0f 83 7c 00 00 00
0044h imul ebp,[rax+r11*4]          ; IMUL(Imul_r32_rm32) [EBP,mem(32i,RAX:br,DS:sr)]      encoding(5 bytes) = 42 0f af 2c 98
0049h mov [rbx],ebp                 ; MOV(Mov_rm32_r32) [mem(32u,RBX:br,DS:sr),EBP]        encoding(2 bytes) = 89 2b
004bh inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
004eh cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
0051h jl short 0032h                ; JL(Jl_rel8_64) [32h:jmp64]                           encoding(2 bytes) = 7c df
0053h mov [rcx],r9                  ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R9]         encoding(3 bytes) = 4c 89 09
0056h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
0059h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
005ch add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0060h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0061h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0062h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0063h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0064h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0066h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0067h mov ecx,0C95h                 ; MOV(Mov_r32_imm32) [ECX,c95h:imm32]                  encoding(5 bytes) = b9 95 0c 00 00
006ch mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0076h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F479C70h:jmp64]                encoding(5 bytes) = e8 f5 9b 47 5f
007bh mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
007eh mov ecx,0C9Dh                 ; MOV(Mov_r32_imm32) [ECX,c9dh:imm32]                  encoding(5 bytes) = b9 9d 0c 00 00
0083h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
008dh call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F479C70h:jmp64]                encoding(5 bytes) = e8 de 9b 47 5f
0092h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
0095h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
009ah mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
009dh mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00a1h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00a4h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00a6h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00a8h mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00adh mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b2h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFCA42C8h:jmp64]        encoding(5 bytes) = e8 11 42 ca ff
00b7h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00bah call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F45CCA0h:jmp64]                encoding(5 bytes) = e8 e1 cb 45 5f
00bfh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00c0h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5AB100h:jmp64]                encoding(5 bytes) = e8 3b b0 5a 5f
00c5h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> MulBytes => new byte[198]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x00,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0xBE,0x8C,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x3C,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x21,0x4D,0x63,0xDA,0x4B,0x8D,0x1C,0x99,0x8B,0x2B,0x45,0x3B,0xD0,0x0F,0x83,0x7C,0x00,0x00,0x00,0x42,0x0F,0xAF,0x2C,0x98,0x89,0x2B,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xDF,0x4C,0x89,0x09,0x89,0x51,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x95,0x0C,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xF5,0x9B,0x47,0x5F,0x4C,0x8B,0xF0,0xB9,0x9D,0x0C,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xDE,0x9B,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x11,0x42,0xCA,0xFF,0x48,0x8B,0xC8,0xE8,0xE1,0xCB,0x45,0x5F,0xCC,0xE8,0x3B,0xB0,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<long> Mul(Span<long> lhs, ReadOnlySpan<long> rhs)
; location: [7FFC872B9DA0h, 7FFC872B9E67h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0014h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0017h mov esi,94h                   ; MOV(Mov_r32_imm32) [ESI,94h:imm32]                   encoding(5 bytes) = be 94 00 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
0023h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0026h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0029h jne short 0069h               ; JNE(Jne_rel8_64) [69h:jmp64]                         encoding(2 bytes) = 75 3e
002bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
002eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0030h jle short 0055h               ; JLE(Jle_rel8_64) [55h:jmp64]                         encoding(2 bytes) = 7e 23
0032h movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
0035h lea rbx,[r9+r11*8]            ; LEA(Lea_r64_m) [RBX,mem(Unknown,R9:br,DS:sr)]        encoding(4 bytes) = 4b 8d 1c d9
0039h mov rbp,[rbx]                 ; MOV(Mov_r64_rm64) [RBP,mem(64u,RBX:br,DS:sr)]        encoding(3 bytes) = 48 8b 2b
003ch cmp r10d,r8d                  ; CMP(Cmp_r32_rm32) [R10D,R8D]                         encoding(3 bytes) = 45 3b d0
003fh jae near ptr 00c2h            ; JAE(Jae_rel32_64) [C2h:jmp64]                        encoding(6 bytes) = 0f 83 7d 00 00 00
0045h imul rbp,[rax+r11*8]          ; IMUL(Imul_r64_rm64) [RBP,mem(64i,RAX:br,DS:sr)]      encoding(5 bytes) = 4a 0f af 2c d8
004ah mov [rbx],rbp                 ; MOV(Mov_rm64_r64) [mem(64u,RBX:br,DS:sr),RBP]        encoding(3 bytes) = 48 89 2b
004dh inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
0050h cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
0053h jl short 0032h                ; JL(Jl_rel8_64) [32h:jmp64]                           encoding(2 bytes) = 7c dd
0055h mov [rcx],r9                  ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R9]         encoding(3 bytes) = 4c 89 09
0058h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
005bh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
005eh add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0062h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0063h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0064h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0065h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0066h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0068h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0069h mov ecx,0C95h                 ; MOV(Mov_r32_imm32) [ECX,c95h:imm32]                  encoding(5 bytes) = b9 95 0c 00 00
006eh mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0078h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F479B80h:jmp64]                encoding(5 bytes) = e8 03 9b 47 5f
007dh mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0080h mov ecx,0C9Dh                 ; MOV(Mov_r32_imm32) [ECX,c9dh:imm32]                  encoding(5 bytes) = b9 9d 0c 00 00
0085h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
008fh call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F479B80h:jmp64]                encoding(5 bytes) = e8 ec 9a 47 5f
0094h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
0097h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
009ch mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
009fh mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00a3h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00a6h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00a8h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00aah mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00afh mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b4h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFCA41D8h:jmp64]        encoding(5 bytes) = e8 1f 41 ca ff
00b9h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00bch call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F45CBB0h:jmp64]                encoding(5 bytes) = e8 ef ca 45 5f
00c1h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00c2h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5AB010h:jmp64]                encoding(5 bytes) = e8 49 af 5a 5f
00c7h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> MulBytes => new byte[200]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x00,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0xBE,0x94,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x3E,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x23,0x4D,0x63,0xDA,0x4B,0x8D,0x1C,0xD9,0x48,0x8B,0x2B,0x45,0x3B,0xD0,0x0F,0x83,0x7D,0x00,0x00,0x00,0x4A,0x0F,0xAF,0x2C,0xD8,0x48,0x89,0x2B,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xDD,0x4C,0x89,0x09,0x89,0x51,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x95,0x0C,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x03,0x9B,0x47,0x5F,0x4C,0x8B,0xF0,0xB9,0x9D,0x0C,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xEC,0x9A,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x1F,0x41,0xCA,0xFF,0x48,0x8B,0xC8,0xE8,0xEF,0xCA,0x45,0x5F,0xCC,0xE8,0x49,0xAF,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<ulong> Mul(Span<ulong> lhs, ReadOnlySpan<ulong> rhs)
; location: [7FFC872B9E90h, 7FFC872B9F57h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0014h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0017h mov esi,9Ch                   ; MOV(Mov_r32_imm32) [ESI,9ch:imm32]                   encoding(5 bytes) = be 9c 00 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
0023h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0026h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0029h jne short 0069h               ; JNE(Jne_rel8_64) [69h:jmp64]                         encoding(2 bytes) = 75 3e
002bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
002eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0030h jle short 0055h               ; JLE(Jle_rel8_64) [55h:jmp64]                         encoding(2 bytes) = 7e 23
0032h movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
0035h lea rbx,[r9+r11*8]            ; LEA(Lea_r64_m) [RBX,mem(Unknown,R9:br,DS:sr)]        encoding(4 bytes) = 4b 8d 1c d9
0039h mov rbp,[rbx]                 ; MOV(Mov_r64_rm64) [RBP,mem(64u,RBX:br,DS:sr)]        encoding(3 bytes) = 48 8b 2b
003ch cmp r10d,r8d                  ; CMP(Cmp_r32_rm32) [R10D,R8D]                         encoding(3 bytes) = 45 3b d0
003fh jae near ptr 00c2h            ; JAE(Jae_rel32_64) [C2h:jmp64]                        encoding(6 bytes) = 0f 83 7d 00 00 00
0045h imul rbp,[rax+r11*8]          ; IMUL(Imul_r64_rm64) [RBP,mem(64i,RAX:br,DS:sr)]      encoding(5 bytes) = 4a 0f af 2c d8
004ah mov [rbx],rbp                 ; MOV(Mov_rm64_r64) [mem(64u,RBX:br,DS:sr),RBP]        encoding(3 bytes) = 48 89 2b
004dh inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
0050h cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
0053h jl short 0032h                ; JL(Jl_rel8_64) [32h:jmp64]                           encoding(2 bytes) = 7c dd
0055h mov [rcx],r9                  ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R9]         encoding(3 bytes) = 4c 89 09
0058h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
005bh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
005eh add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0062h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0063h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0064h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0065h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0066h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0068h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0069h mov ecx,0C95h                 ; MOV(Mov_r32_imm32) [ECX,c95h:imm32]                  encoding(5 bytes) = b9 95 0c 00 00
006eh mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0078h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F479A90h:jmp64]                encoding(5 bytes) = e8 13 9a 47 5f
007dh mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0080h mov ecx,0C9Dh                 ; MOV(Mov_r32_imm32) [ECX,c9dh:imm32]                  encoding(5 bytes) = b9 9d 0c 00 00
0085h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
008fh call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F479A90h:jmp64]                encoding(5 bytes) = e8 fc 99 47 5f
0094h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
0097h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
009ch mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
009fh mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00a3h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00a6h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00a8h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00aah mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00afh mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b4h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFCA40E8h:jmp64]        encoding(5 bytes) = e8 2f 40 ca ff
00b9h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00bch call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F45CAC0h:jmp64]                encoding(5 bytes) = e8 ff c9 45 5f
00c1h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00c2h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5AAF20h:jmp64]                encoding(5 bytes) = e8 59 ae 5a 5f
00c7h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> MulBytes => new byte[200]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x00,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0xBE,0x9C,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x3E,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x23,0x4D,0x63,0xDA,0x4B,0x8D,0x1C,0xD9,0x48,0x8B,0x2B,0x45,0x3B,0xD0,0x0F,0x83,0x7D,0x00,0x00,0x00,0x4A,0x0F,0xAF,0x2C,0xD8,0x48,0x89,0x2B,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xDD,0x4C,0x89,0x09,0x89,0x51,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x95,0x0C,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x13,0x9A,0x47,0x5F,0x4C,0x8B,0xF0,0xB9,0x9D,0x0C,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xFC,0x99,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x2F,0x40,0xCA,0xFF,0x48,0x8B,0xC8,0xE8,0xFF,0xC9,0x45,0x5F,0xCC,0xE8,0x59,0xAE,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<float> Mul(Span<float> lhs, ReadOnlySpan<float> rhs)
; location: [7FFC872B9F80h, 7FFC872BA04Dh]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
000dh mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
0010h mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0014h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0017h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
001ah mov esi,0A4h                  ; MOV(Mov_r32_imm32) [ESI,a4h:imm32]                   encoding(5 bytes) = be a4 00 00 00
001fh mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0024h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
0026h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0029h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
002ch jne short 006fh               ; JNE(Jne_rel8_64) [6Fh:jmp64]                         encoding(2 bytes) = 75 41
002eh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
0031h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0033h jle short 005bh               ; JLE(Jle_rel8_64) [5Bh:jmp64]                         encoding(2 bytes) = 7e 26
0035h movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
0038h lea rbx,[r9+r11*4]            ; LEA(Lea_r64_m) [RBX,mem(Unknown,R9:br,DS:sr)]        encoding(4 bytes) = 4b 8d 1c 99
003ch vmovss xmm0,dword ptr [rbx]   ; VMOVSS(VEX_Vmovss_xmm_m32) [XMM0,mem(Float32,RBX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 10 03
0040h cmp r10d,r8d                  ; CMP(Cmp_r32_rm32) [R10D,R8D]                         encoding(3 bytes) = 45 3b d0
0043h jae near ptr 00c8h            ; JAE(Jae_rel32_64) [C8h:jmp64]                        encoding(6 bytes) = 0f 83 7f 00 00 00
0049h vmulss xmm0,xmm0,dword ptr [rax+r11*4]; VMULSS(VEX_Vmulss_xmm_xmm_xmmm32) [XMM0,XMM0,mem(Float32,RAX:br,DS:sr)] encoding(VEX, 6 bytes) = c4 a1 7a 59 04 98
004fh vmovss dword ptr [rbx],xmm0   ; VMOVSS(VEX_Vmovss_m32_xmm) [mem(Float32,RBX:br,DS:sr),XMM0] encoding(VEX, 4 bytes) = c5 fa 11 03
0053h inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
0056h cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
0059h jl short 0035h                ; JL(Jl_rel8_64) [35h:jmp64]                           encoding(2 bytes) = 7c da
005bh mov [rcx],r9                  ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R9]         encoding(3 bytes) = 4c 89 09
005eh mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
0061h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0064h add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0068h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0069h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
006ah pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
006bh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
006ch pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
006eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
006fh mov ecx,0C95h                 ; MOV(Mov_r32_imm32) [ECX,c95h:imm32]                  encoding(5 bytes) = b9 95 0c 00 00
0074h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
007eh call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F4799A0h:jmp64]                encoding(5 bytes) = e8 1d 99 47 5f
0083h mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0086h mov ecx,0C9Dh                 ; MOV(Mov_r32_imm32) [ECX,c9dh:imm32]                  encoding(5 bytes) = b9 9d 0c 00 00
008bh mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0095h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F4799A0h:jmp64]                encoding(5 bytes) = e8 06 99 47 5f
009ah mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
009dh lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
00a2h mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00a5h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00a9h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00ach mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00aeh mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00b0h mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00b5h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00bah call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFCA3FF8h:jmp64]        encoding(5 bytes) = e8 39 3f ca ff
00bfh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00c2h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F45C9D0h:jmp64]                encoding(5 bytes) = e8 09 c9 45 5f
00c7h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00c8h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5AAE30h:jmp64]                encoding(5 bytes) = e8 63 ad 5a 5f
00cdh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> MulBytes => new byte[206]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0xC5,0xF8,0x77,0x49,0x8B,0x00,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0xBE,0xA4,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x41,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x26,0x4D,0x63,0xDA,0x4B,0x8D,0x1C,0x99,0xC5,0xFA,0x10,0x03,0x45,0x3B,0xD0,0x0F,0x83,0x7F,0x00,0x00,0x00,0xC4,0xA1,0x7A,0x59,0x04,0x98,0xC5,0xFA,0x11,0x03,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xDA,0x4C,0x89,0x09,0x89,0x51,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x95,0x0C,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x1D,0x99,0x47,0x5F,0x4C,0x8B,0xF0,0xB9,0x9D,0x0C,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x06,0x99,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x39,0x3F,0xCA,0xFF,0x48,0x8B,0xC8,0xE8,0x09,0xC9,0x45,0x5F,0xCC,0xE8,0x63,0xAD,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<double> Mul(Span<double> lhs, ReadOnlySpan<double> rhs)
; location: [7FFC872BA070h, 7FFC872BA13Dh]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
000dh mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
0010h mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0014h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0017h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
001ah mov esi,0ACh                  ; MOV(Mov_r32_imm32) [ESI,ach:imm32]                   encoding(5 bytes) = be ac 00 00 00
001fh mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0024h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
0026h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0029h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
002ch jne short 006fh               ; JNE(Jne_rel8_64) [6Fh:jmp64]                         encoding(2 bytes) = 75 41
002eh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
0031h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0033h jle short 005bh               ; JLE(Jle_rel8_64) [5Bh:jmp64]                         encoding(2 bytes) = 7e 26
0035h movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
0038h lea rbx,[r9+r11*8]            ; LEA(Lea_r64_m) [RBX,mem(Unknown,R9:br,DS:sr)]        encoding(4 bytes) = 4b 8d 1c d9
003ch vmovsd xmm0,qword ptr [rbx]   ; VMOVSD(VEX_Vmovsd_xmm_m64) [XMM0,mem(Float64,RBX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fb 10 03
0040h cmp r10d,r8d                  ; CMP(Cmp_r32_rm32) [R10D,R8D]                         encoding(3 bytes) = 45 3b d0
0043h jae near ptr 00c8h            ; JAE(Jae_rel32_64) [C8h:jmp64]                        encoding(6 bytes) = 0f 83 7f 00 00 00
0049h vmulsd xmm0,xmm0,qword ptr [rax+r11*8]; VMULSD(VEX_Vmulsd_xmm_xmm_xmmm64) [XMM0,XMM0,mem(Float64,RAX:br,DS:sr)] encoding(VEX, 6 bytes) = c4 a1 7b 59 04 d8
004fh vmovsd qword ptr [rbx],xmm0   ; VMOVSD(VEX_Vmovsd_m64_xmm) [mem(Float64,RBX:br,DS:sr),XMM0] encoding(VEX, 4 bytes) = c5 fb 11 03
0053h inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
0056h cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
0059h jl short 0035h                ; JL(Jl_rel8_64) [35h:jmp64]                           encoding(2 bytes) = 7c da
005bh mov [rcx],r9                  ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R9]         encoding(3 bytes) = 4c 89 09
005eh mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
0061h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0064h add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0068h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0069h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
006ah pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
006bh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
006ch pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
006eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
006fh mov ecx,0C95h                 ; MOV(Mov_r32_imm32) [ECX,c95h:imm32]                  encoding(5 bytes) = b9 95 0c 00 00
0074h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
007eh call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F4798B0h:jmp64]                encoding(5 bytes) = e8 2d 98 47 5f
0083h mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0086h mov ecx,0C9Dh                 ; MOV(Mov_r32_imm32) [ECX,c9dh:imm32]                  encoding(5 bytes) = b9 9d 0c 00 00
008bh mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0095h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F4798B0h:jmp64]                encoding(5 bytes) = e8 16 98 47 5f
009ah mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
009dh lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
00a2h mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00a5h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00a9h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00ach mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00aeh mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00b0h mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00b5h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00bah call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFCA3F08h:jmp64]        encoding(5 bytes) = e8 49 3e ca ff
00bfh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00c2h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F45C8E0h:jmp64]                encoding(5 bytes) = e8 19 c8 45 5f
00c7h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00c8h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5AAD40h:jmp64]                encoding(5 bytes) = e8 73 ac 5a 5f
00cdh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> MulBytes => new byte[206]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0xC5,0xF8,0x77,0x49,0x8B,0x00,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0xBE,0xAC,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x41,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x26,0x4D,0x63,0xDA,0x4B,0x8D,0x1C,0xD9,0xC5,0xFB,0x10,0x03,0x45,0x3B,0xD0,0x0F,0x83,0x7F,0x00,0x00,0x00,0xC4,0xA1,0x7B,0x59,0x04,0xD8,0xC5,0xFB,0x11,0x03,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xDA,0x4C,0x89,0x09,0x89,0x51,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x95,0x0C,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x2D,0x98,0x47,0x5F,0x4C,0x8B,0xF0,0xB9,0x9D,0x0C,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x16,0x98,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x49,0x3E,0xCA,0xFF,0x48,0x8B,0xC8,0xE8,0x19,0xC8,0x45,0x5F,0xCC,0xE8,0x73,0xAC,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: sbyte negate(sbyte src)
; location: [7FFC872BA160h, 7FFC872BA16Fh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cl                  ; MOVSX(Movsx_r64_rm8) [RAX,CL]                        encoding(4 bytes) = 48 0f be c1
0009h neg eax                       ; NEG(Neg_rm32) [EAX]                                  encoding(2 bytes) = f7 d8
000bh movsx rax,al                  ; MOVSX(Movsx_r64_rm8) [RAX,AL]                        encoding(4 bytes) = 48 0f be c0
000fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> negateBytes => new byte[16]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBE,0xC1,0xF7,0xD8,0x48,0x0F,0xBE,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: byte negate(byte src)
; location: [7FFC872BA180h, 7FFC872BA18Fh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0008h not eax                       ; NOT(Not_rm32) [EAX]                                  encoding(2 bytes) = f7 d0
000ah inc eax                       ; INC(Inc_rm32) [EAX]                                  encoding(2 bytes) = ff c0
000ch movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> negateBytes => new byte[16]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC1,0xF7,0xD0,0xFF,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: short negate(short src)
; location: [7FFC872BA1A0h, 7FFC872BA1AFh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cx                  ; MOVSX(Movsx_r64_rm16) [RAX,CX]                       encoding(4 bytes) = 48 0f bf c1
0009h neg eax                       ; NEG(Neg_rm32) [EAX]                                  encoding(2 bytes) = f7 d8
000bh movsx rax,ax                  ; MOVSX(Movsx_r64_rm16) [RAX,AX]                       encoding(4 bytes) = 48 0f bf c0
000fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> negateBytes => new byte[16]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBF,0xC1,0xF7,0xD8,0x48,0x0F,0xBF,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ushort negate(ushort src)
; location: [7FFC872BA1C0h, 7FFC872BA1CFh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cx                  ; MOVZX(Movzx_r32_rm16) [EAX,CX]                       encoding(3 bytes) = 0f b7 c1
0008h not eax                       ; NOT(Not_rm32) [EAX]                                  encoding(2 bytes) = f7 d0
000ah inc eax                       ; INC(Inc_rm32) [EAX]                                  encoding(2 bytes) = ff c0
000ch movzx eax,ax                  ; MOVZX(Movzx_r32_rm16) [EAX,AX]                       encoding(3 bytes) = 0f b7 c0
000fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> negateBytes => new byte[16]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB7,0xC1,0xF7,0xD0,0xFF,0xC0,0x0F,0xB7,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: int negate(int src)
; location: [7FFC872BA1E0h, 7FFC872BA1E9h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov eax,ecx                   ; MOV(Mov_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 8b c1
0007h neg eax                       ; NEG(Neg_rm32) [EAX]                                  encoding(2 bytes) = f7 d8
0009h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> negateBytes => new byte[10]{0x0F,0x1F,0x44,0x00,0x00,0x8B,0xC1,0xF7,0xD8,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: uint negate(uint src)
; location: [7FFC872BA200h, 7FFC872BA20Bh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov eax,ecx                   ; MOV(Mov_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 8b c1
0007h not eax                       ; NOT(Not_rm32) [EAX]                                  encoding(2 bytes) = f7 d0
0009h inc eax                       ; INC(Inc_rm32) [EAX]                                  encoding(2 bytes) = ff c0
000bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> negateBytes => new byte[12]{0x0F,0x1F,0x44,0x00,0x00,0x8B,0xC1,0xF7,0xD0,0xFF,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: long negate(long src)
; location: [7FFC872BA220h, 7FFC872BA22Bh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0008h neg rax                       ; NEG(Neg_rm64) [RAX]                                  encoding(3 bytes) = 48 f7 d8
000bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> negateBytes => new byte[12]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0xC1,0x48,0xF7,0xD8,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ulong negate(ulong src)
; location: [7FFC872BA240h, 7FFC872BA24Eh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0008h not rax                       ; NOT(Not_rm64) [RAX]                                  encoding(3 bytes) = 48 f7 d0
000bh inc rax                       ; INC(Inc_rm64) [RAX]                                  encoding(3 bytes) = 48 ff c0
000eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> negateBytes => new byte[15]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0xC1,0x48,0xF7,0xD0,0x48,0xFF,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: float negate(float src)
; location: [7FFC872BA260h, 7FFC872BA271h]
0000h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0003h xchg ax,ax                    ; NOP(Nopw)                                            encoding(2 bytes) = 66 90
0005h vmovss xmm1,dword ptr [7FFC872BA278h]; VMOVSS(VEX_Vmovss_xmm_m32) [XMM1,mem(Float32,RIP:br,DS:sr)] encoding(VEX, 8 bytes) = c5 fa 10 0d 0b 00 00 00
000dh vxorps xmm0,xmm0,xmm1         ; VXORPS(VEX_Vxorps_xmm_xmm_xmmm128) [XMM0,XMM0,XMM1]  encoding(VEX, 4 bytes) = c5 f8 57 c1
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> negateBytes => new byte[18]{0xC5,0xF8,0x77,0x66,0x90,0xC5,0xFA,0x10,0x0D,0x0B,0x00,0x00,0x00,0xC5,0xF8,0x57,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: double negate(double src)
; location: [7FFC872BA290h, 7FFC872BA2A1h]
0000h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0003h xchg ax,ax                    ; NOP(Nopw)                                            encoding(2 bytes) = 66 90
0005h vmovsd xmm1,qword ptr [7FFC872BA2A8h]; VMOVSD(VEX_Vmovsd_xmm_m64) [XMM1,mem(Float64,RIP:br,DS:sr)] encoding(VEX, 8 bytes) = c5 fb 10 0d 0b 00 00 00
000dh vxorps xmm0,xmm0,xmm1         ; VXORPS(VEX_Vxorps_xmm_xmm_xmmm128) [XMM0,XMM0,XMM1]  encoding(VEX, 4 bytes) = c5 f8 57 c1
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> negateBytes => new byte[18]{0xC5,0xF8,0x77,0x66,0x90,0xC5,0xFB,0x10,0x0D,0x0B,0x00,0x00,0x00,0xC5,0xF8,0x57,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref sbyte negate(ref sbyte src)
; location: [7FFC872BA2C0h, 7FFC872BA2CAh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h neg byte ptr [rcx]            ; NEG(Neg_rm8) [mem(8i,RCX:br,DS:sr)]                  encoding(2 bytes) = f6 19
0007h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> negateBytes => new byte[11]{0x0F,0x1F,0x44,0x00,0x00,0xF6,0x19,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref byte negate(ref byte src)
; location: [7FFC872BA2E0h, 7FFC872BA2F1h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,byte ptr [rcx]      ; MOVZX(Movzx_r32_rm8) [EAX,mem(8u,RCX:br,DS:sr)]      encoding(3 bytes) = 0f b6 01
0008h not eax                       ; NOT(Not_rm32) [EAX]                                  encoding(2 bytes) = f7 d0
000ah inc eax                       ; INC(Inc_rm32) [EAX]                                  encoding(2 bytes) = ff c0
000ch mov [rcx],al                  ; MOV(Mov_rm8_r8) [mem(8u,RCX:br,DS:sr),AL]            encoding(2 bytes) = 88 01
000eh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> negateBytes => new byte[18]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0x01,0xF7,0xD0,0xFF,0xC0,0x88,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref short negate(ref short src)
; location: [7FFC872BA310h, 7FFC872BA31Bh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h neg word ptr [rcx]            ; NEG(Neg_rm16) [mem(16i,RCX:br,DS:sr)]                encoding(3 bytes) = 66 f7 19
0008h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> negateBytes => new byte[12]{0x0F,0x1F,0x44,0x00,0x00,0x66,0xF7,0x19,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref ushort negate(ref ushort src)
; location: [7FFC872BA330h, 7FFC872BA342h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,word ptr [rcx]      ; MOVZX(Movzx_r32_rm16) [EAX,mem(16u,RCX:br,DS:sr)]    encoding(3 bytes) = 0f b7 01
0008h not eax                       ; NOT(Not_rm32) [EAX]                                  encoding(2 bytes) = f7 d0
000ah inc eax                       ; INC(Inc_rm32) [EAX]                                  encoding(2 bytes) = ff c0
000ch mov [rcx],ax                  ; MOV(Mov_rm16_r16) [mem(16u,RCX:br,DS:sr),AX]         encoding(3 bytes) = 66 89 01
000fh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0012h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> negateBytes => new byte[19]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB7,0x01,0xF7,0xD0,0xFF,0xC0,0x66,0x89,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref int negate(ref int src)
; location: [7FFC872BA360h, 7FFC872BA36Ah]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h neg dword ptr [rcx]           ; NEG(Neg_rm32) [mem(32i,RCX:br,DS:sr)]                encoding(2 bytes) = f7 19
0007h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> negateBytes => new byte[11]{0x0F,0x1F,0x44,0x00,0x00,0xF7,0x19,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref uint negate(ref uint src)
; location: [7FFC872BA380h, 7FFC872BA390h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov eax,[rcx]                 ; MOV(Mov_r32_rm32) [EAX,mem(32u,RCX:br,DS:sr)]        encoding(2 bytes) = 8b 01
0007h not eax                       ; NOT(Not_rm32) [EAX]                                  encoding(2 bytes) = f7 d0
0009h inc eax                       ; INC(Inc_rm32) [EAX]                                  encoding(2 bytes) = ff c0
000bh mov [rcx],eax                 ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EAX]        encoding(2 bytes) = 89 01
000dh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0010h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> negateBytes => new byte[17]{0x0F,0x1F,0x44,0x00,0x00,0x8B,0x01,0xF7,0xD0,0xFF,0xC0,0x89,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref long negate(ref long src)
; location: [7FFC872BA3B0h, 7FFC872BA3BBh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h neg qword ptr [rcx]           ; NEG(Neg_rm64) [mem(64i,RCX:br,DS:sr)]                encoding(3 bytes) = 48 f7 19
0008h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> negateBytes => new byte[12]{0x0F,0x1F,0x44,0x00,0x00,0x48,0xF7,0x19,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref ulong negate(ref ulong src)
; location: [7FFC872BA3D0h, 7FFC872BA3E4h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,[rcx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 01
0008h not rax                       ; NOT(Not_rm64) [RAX]                                  encoding(3 bytes) = 48 f7 d0
000bh inc rax                       ; INC(Inc_rm64) [RAX]                                  encoding(3 bytes) = 48 ff c0
000eh mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0011h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0014h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> negateBytes => new byte[21]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x01,0x48,0xF7,0xD0,0x48,0xFF,0xC0,0x48,0x89,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref float negate(ref float src)
; location: [7FFC872BA400h, 7FFC872BA41Ch]
0000h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0003h xchg ax,ax                    ; NOP(Nopw)                                            encoding(2 bytes) = 66 90
0005h vmovss xmm0,dword ptr [rcx]   ; VMOVSS(VEX_Vmovss_xmm_m32) [XMM0,mem(Float32,RCX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 10 01
0009h vmovss xmm1,dword ptr [7FFC872BA428h]; VMOVSS(VEX_Vmovss_xmm_m32) [XMM1,mem(Float32,RIP:br,DS:sr)] encoding(VEX, 8 bytes) = c5 fa 10 0d 17 00 00 00
0011h vxorps xmm0,xmm0,xmm1         ; VXORPS(VEX_Vxorps_xmm_xmm_xmmm128) [XMM0,XMM0,XMM1]  encoding(VEX, 4 bytes) = c5 f8 57 c1
0015h vmovss dword ptr [rcx],xmm0   ; VMOVSS(VEX_Vmovss_m32_xmm) [mem(Float32,RCX:br,DS:sr),XMM0] encoding(VEX, 4 bytes) = c5 fa 11 01
0019h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
001ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> negateBytes => new byte[29]{0xC5,0xF8,0x77,0x66,0x90,0xC5,0xFA,0x10,0x01,0xC5,0xFA,0x10,0x0D,0x17,0x00,0x00,0x00,0xC5,0xF8,0x57,0xC1,0xC5,0xFA,0x11,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref double negate(ref double src)
; location: [7FFC872BA440h, 7FFC872BA45Ch]
0000h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0003h xchg ax,ax                    ; NOP(Nopw)                                            encoding(2 bytes) = 66 90
0005h vmovsd xmm0,qword ptr [rcx]   ; VMOVSD(VEX_Vmovsd_xmm_m64) [XMM0,mem(Float64,RCX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fb 10 01
0009h vmovsd xmm1,qword ptr [7FFC872BA468h]; VMOVSD(VEX_Vmovsd_xmm_m64) [XMM1,mem(Float64,RIP:br,DS:sr)] encoding(VEX, 8 bytes) = c5 fb 10 0d 17 00 00 00
0011h vxorps xmm0,xmm0,xmm1         ; VXORPS(VEX_Vxorps_xmm_xmm_xmmm128) [XMM0,XMM0,XMM1]  encoding(VEX, 4 bytes) = c5 f8 57 c1
0015h vmovsd qword ptr [rcx],xmm0   ; VMOVSD(VEX_Vmovsd_m64_xmm) [mem(Float64,RCX:br,DS:sr),XMM0] encoding(VEX, 4 bytes) = c5 fb 11 01
0019h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
001ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> negateBytes => new byte[29]{0xC5,0xF8,0x77,0x66,0x90,0xC5,0xFB,0x10,0x01,0xC5,0xFB,0x10,0x0D,0x17,0x00,0x00,0x00,0xC5,0xF8,0x57,0xC1,0xC5,0xFB,0x11,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref sbyte negate(sbyte src, ref sbyte dst)
; location: [7FFC872BA480h, 7FFC872BA490h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cl                  ; MOVSX(Movsx_r64_rm8) [RAX,CL]                        encoding(4 bytes) = 48 0f be c1
0009h neg eax                       ; NEG(Neg_rm32) [EAX]                                  encoding(2 bytes) = f7 d8
000bh mov [rdx],al                  ; MOV(Mov_rm8_r8) [mem(8u,RDX:br,DS:sr),AL]            encoding(2 bytes) = 88 02
000dh mov rax,rdx                   ; MOV(Mov_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 8b c2
0010h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> negateBytes => new byte[17]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBE,0xC1,0xF7,0xD8,0x88,0x02,0x48,0x8B,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref byte negate(byte src, ref byte dst)
; location: [7FFC872BA4B0h, 7FFC872BA4C1h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0008h not eax                       ; NOT(Not_rm32) [EAX]                                  encoding(2 bytes) = f7 d0
000ah inc eax                       ; INC(Inc_rm32) [EAX]                                  encoding(2 bytes) = ff c0
000ch mov [rdx],al                  ; MOV(Mov_rm8_r8) [mem(8u,RDX:br,DS:sr),AL]            encoding(2 bytes) = 88 02
000eh mov rax,rdx                   ; MOV(Mov_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 8b c2
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> negateBytes => new byte[18]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC1,0xF7,0xD0,0xFF,0xC0,0x88,0x02,0x48,0x8B,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref short negate(short src, ref short dst)
; location: [7FFC872BA4E0h, 7FFC872BA4F1h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cx                  ; MOVSX(Movsx_r64_rm16) [RAX,CX]                       encoding(4 bytes) = 48 0f bf c1
0009h neg eax                       ; NEG(Neg_rm32) [EAX]                                  encoding(2 bytes) = f7 d8
000bh mov [rdx],ax                  ; MOV(Mov_rm16_r16) [mem(16u,RDX:br,DS:sr),AX]         encoding(3 bytes) = 66 89 02
000eh mov rax,rdx                   ; MOV(Mov_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 8b c2
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> negateBytes => new byte[18]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBF,0xC1,0xF7,0xD8,0x66,0x89,0x02,0x48,0x8B,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref ushort negate(ushort src, ref ushort dst)
; location: [7FFC872BA510h, 7FFC872BA522h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cx                  ; MOVZX(Movzx_r32_rm16) [EAX,CX]                       encoding(3 bytes) = 0f b7 c1
0008h not eax                       ; NOT(Not_rm32) [EAX]                                  encoding(2 bytes) = f7 d0
000ah inc eax                       ; INC(Inc_rm32) [EAX]                                  encoding(2 bytes) = ff c0
000ch mov [rdx],ax                  ; MOV(Mov_rm16_r16) [mem(16u,RDX:br,DS:sr),AX]         encoding(3 bytes) = 66 89 02
000fh mov rax,rdx                   ; MOV(Mov_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 8b c2
0012h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> negateBytes => new byte[19]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB7,0xC1,0xF7,0xD0,0xFF,0xC0,0x66,0x89,0x02,0x48,0x8B,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref int negate(int src, ref int dst)
; location: [7FFC872BA540h, 7FFC872BA54Eh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov eax,ecx                   ; MOV(Mov_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 8b c1
0007h neg eax                       ; NEG(Neg_rm32) [EAX]                                  encoding(2 bytes) = f7 d8
0009h mov [rdx],eax                 ; MOV(Mov_rm32_r32) [mem(32u,RDX:br,DS:sr),EAX]        encoding(2 bytes) = 89 02
000bh mov rax,rdx                   ; MOV(Mov_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 8b c2
000eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> negateBytes => new byte[15]{0x0F,0x1F,0x44,0x00,0x00,0x8B,0xC1,0xF7,0xD8,0x89,0x02,0x48,0x8B,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref uint negate(uint src, ref uint dst)
; location: [7FFC872BA560h, 7FFC872BA570h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov eax,ecx                   ; MOV(Mov_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 8b c1
0007h not eax                       ; NOT(Not_rm32) [EAX]                                  encoding(2 bytes) = f7 d0
0009h inc eax                       ; INC(Inc_rm32) [EAX]                                  encoding(2 bytes) = ff c0
000bh mov [rdx],eax                 ; MOV(Mov_rm32_r32) [mem(32u,RDX:br,DS:sr),EAX]        encoding(2 bytes) = 89 02
000dh mov rax,rdx                   ; MOV(Mov_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 8b c2
0010h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> negateBytes => new byte[17]{0x0F,0x1F,0x44,0x00,0x00,0x8B,0xC1,0xF7,0xD0,0xFF,0xC0,0x89,0x02,0x48,0x8B,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref long negate(long src, ref long dst)
; location: [7FFC872BA590h, 7FFC872BA5A1h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0008h neg rax                       ; NEG(Neg_rm64) [RAX]                                  encoding(3 bytes) = 48 f7 d8
000bh mov [rdx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RDX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 02
000eh mov rax,rdx                   ; MOV(Mov_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 8b c2
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> negateBytes => new byte[18]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0xC1,0x48,0xF7,0xD8,0x48,0x89,0x02,0x48,0x8B,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref ulong negate(ulong src, ref ulong dst)
; location: [7FFC872BA5C0h, 7FFC872BA5D4h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0008h not rax                       ; NOT(Not_rm64) [RAX]                                  encoding(3 bytes) = 48 f7 d0
000bh inc rax                       ; INC(Inc_rm64) [RAX]                                  encoding(3 bytes) = 48 ff c0
000eh mov [rdx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RDX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 02
0011h mov rax,rdx                   ; MOV(Mov_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 8b c2
0014h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> negateBytes => new byte[21]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0xC1,0x48,0xF7,0xD0,0x48,0xFF,0xC0,0x48,0x89,0x02,0x48,0x8B,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref float negate(float src, ref float dst)
; location: [7FFC872BA5F0h, 7FFC872BA608h]
0000h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0003h xchg ax,ax                    ; NOP(Nopw)                                            encoding(2 bytes) = 66 90
0005h vmovss xmm1,dword ptr [7FFC872BA610h]; VMOVSS(VEX_Vmovss_xmm_m32) [XMM1,mem(Float32,RIP:br,DS:sr)] encoding(VEX, 8 bytes) = c5 fa 10 0d 13 00 00 00
000dh vxorps xmm0,xmm0,xmm1         ; VXORPS(VEX_Vxorps_xmm_xmm_xmmm128) [XMM0,XMM0,XMM1]  encoding(VEX, 4 bytes) = c5 f8 57 c1
0011h vmovss dword ptr [rdx],xmm0   ; VMOVSS(VEX_Vmovss_m32_xmm) [mem(Float32,RDX:br,DS:sr),XMM0] encoding(VEX, 4 bytes) = c5 fa 11 02
0015h mov rax,rdx                   ; MOV(Mov_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 8b c2
0018h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> negateBytes => new byte[25]{0xC5,0xF8,0x77,0x66,0x90,0xC5,0xFA,0x10,0x0D,0x13,0x00,0x00,0x00,0xC5,0xF8,0x57,0xC1,0xC5,0xFA,0x11,0x02,0x48,0x8B,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref double negate(double src, ref double dst)
; location: [7FFC872BA630h, 7FFC872BA648h]
0000h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0003h xchg ax,ax                    ; NOP(Nopw)                                            encoding(2 bytes) = 66 90
0005h vmovsd xmm1,qword ptr [7FFC872BA650h]; VMOVSD(VEX_Vmovsd_xmm_m64) [XMM1,mem(Float64,RIP:br,DS:sr)] encoding(VEX, 8 bytes) = c5 fb 10 0d 13 00 00 00
000dh vxorps xmm0,xmm0,xmm1         ; VXORPS(VEX_Vxorps_xmm_xmm_xmmm128) [XMM0,XMM0,XMM1]  encoding(VEX, 4 bytes) = c5 f8 57 c1
0011h vmovsd qword ptr [rdx],xmm0   ; VMOVSD(VEX_Vmovsd_m64_xmm) [mem(Float64,RDX:br,DS:sr),XMM0] encoding(VEX, 4 bytes) = c5 fb 11 02
0015h mov rax,rdx                   ; MOV(Mov_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 8b c2
0018h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> negateBytes => new byte[25]{0xC5,0xF8,0x77,0x66,0x90,0xC5,0xFB,0x10,0x0D,0x13,0x00,0x00,0x00,0xC5,0xF8,0x57,0xC1,0xC5,0xFB,0x11,0x02,0x48,0x8B,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool neq(sbyte lhs, sbyte rhs)
; location: [7FFC872BA670h, 7FFC872BA685h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cl                  ; MOVSX(Movsx_r64_rm8) [RAX,CL]                        encoding(4 bytes) = 48 0f be c1
0009h movsx rdx,dl                  ; MOVSX(Movsx_r64_rm8) [RDX,DL]                        encoding(4 bytes) = 48 0f be d2
000dh cmp eax,edx                   ; CMP(Cmp_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 3b c2
000fh setne al                      ; SETNE(Setne_rm8) [AL]                                encoding(3 bytes) = 0f 95 c0
0012h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0015h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> neqBytes => new byte[22]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBE,0xC1,0x48,0x0F,0xBE,0xD2,0x3B,0xC2,0x0F,0x95,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool neq(byte lhs, byte rhs)
; location: [7FFC872BA6A0h, 7FFC872BA6B3h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0008h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
000bh cmp eax,edx                   ; CMP(Cmp_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 3b c2
000dh setne al                      ; SETNE(Setne_rm8) [AL]                                encoding(3 bytes) = 0f 95 c0
0010h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> neqBytes => new byte[20]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC1,0x0F,0xB6,0xD2,0x3B,0xC2,0x0F,0x95,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool neq(short lhs, short rhs)
; location: [7FFC872BA6D0h, 7FFC872BA6E5h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cx                  ; MOVSX(Movsx_r64_rm16) [RAX,CX]                       encoding(4 bytes) = 48 0f bf c1
0009h movsx rdx,dx                  ; MOVSX(Movsx_r64_rm16) [RDX,DX]                       encoding(4 bytes) = 48 0f bf d2
000dh cmp eax,edx                   ; CMP(Cmp_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 3b c2
000fh setne al                      ; SETNE(Setne_rm8) [AL]                                encoding(3 bytes) = 0f 95 c0
0012h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0015h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> neqBytes => new byte[22]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBF,0xC1,0x48,0x0F,0xBF,0xD2,0x3B,0xC2,0x0F,0x95,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool neq(ushort lhs, ushort rhs)
; location: [7FFC872BA700h, 7FFC872BA713h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cx                  ; MOVZX(Movzx_r32_rm16) [EAX,CX]                       encoding(3 bytes) = 0f b7 c1
0008h movzx edx,dx                  ; MOVZX(Movzx_r32_rm16) [EDX,DX]                       encoding(3 bytes) = 0f b7 d2
000bh cmp eax,edx                   ; CMP(Cmp_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 3b c2
000dh setne al                      ; SETNE(Setne_rm8) [AL]                                encoding(3 bytes) = 0f 95 c0
0010h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> neqBytes => new byte[20]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB7,0xC1,0x0F,0xB7,0xD2,0x3B,0xC2,0x0F,0x95,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool neq(int lhs, int rhs)
; location: [7FFC872BA730h, 7FFC872BA73Dh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h cmp ecx,edx                   ; CMP(Cmp_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 3b ca
0007h setne al                      ; SETNE(Setne_rm8) [AL]                                encoding(3 bytes) = 0f 95 c0
000ah movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> neqBytes => new byte[14]{0x0F,0x1F,0x44,0x00,0x00,0x3B,0xCA,0x0F,0x95,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool neq(uint lhs, uint rhs)
; location: [7FFC872BA750h, 7FFC872BA75Dh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h cmp ecx,edx                   ; CMP(Cmp_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 3b ca
0007h setne al                      ; SETNE(Setne_rm8) [AL]                                encoding(3 bytes) = 0f 95 c0
000ah movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> neqBytes => new byte[14]{0x0F,0x1F,0x44,0x00,0x00,0x3B,0xCA,0x0F,0x95,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool neq(long lhs, long rhs)
; location: [7FFC872BA770h, 7FFC872BA77Eh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h cmp rcx,rdx                   ; CMP(Cmp_r64_rm64) [RCX,RDX]                          encoding(3 bytes) = 48 3b ca
0008h setne al                      ; SETNE(Setne_rm8) [AL]                                encoding(3 bytes) = 0f 95 c0
000bh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> neqBytes => new byte[15]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x3B,0xCA,0x0F,0x95,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool neq(ulong lhs, ulong rhs)
; location: [7FFC872BA790h, 7FFC872BA79Eh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h cmp rcx,rdx                   ; CMP(Cmp_r64_rm64) [RCX,RDX]                          encoding(3 bytes) = 48 3b ca
0008h setne al                      ; SETNE(Setne_rm8) [AL]                                encoding(3 bytes) = 0f 95 c0
000bh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> neqBytes => new byte[15]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x3B,0xCA,0x0F,0x95,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool neq(float lhs, float rhs)
; location: [7FFC872BA7B0h, 7FFC872BA7C4h]
0000h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0003h xchg ax,ax                    ; NOP(Nopw)                                            encoding(2 bytes) = 66 90
0005h vucomiss xmm0,xmm1            ; VUCOMISS(VEX_Vucomiss_xmm_xmmm32) [XMM0,XMM1]        encoding(VEX, 4 bytes) = c5 f8 2e c1
0009h setp al                       ; SETP(Setp_rm8) [AL]                                  encoding(3 bytes) = 0f 9a c0
000ch jp short 0011h                ; JP(Jp_rel8_64) [11h:jmp64]                           encoding(2 bytes) = 7a 03
000eh setne al                      ; SETNE(Setne_rm8) [AL]                                encoding(3 bytes) = 0f 95 c0
0011h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0014h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> neqBytes => new byte[21]{0xC5,0xF8,0x77,0x66,0x90,0xC5,0xF8,0x2E,0xC1,0x0F,0x9A,0xC0,0x7A,0x03,0x0F,0x95,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool neq(double lhs, double rhs)
; location: [7FFC872BA7E0h, 7FFC872BA7F4h]
0000h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0003h xchg ax,ax                    ; NOP(Nopw)                                            encoding(2 bytes) = 66 90
0005h vucomisd xmm0,xmm1            ; VUCOMISD(VEX_Vucomisd_xmm_xmmm64) [XMM0,XMM1]        encoding(VEX, 4 bytes) = c5 f9 2e c1
0009h setp al                       ; SETP(Setp_rm8) [AL]                                  encoding(3 bytes) = 0f 9a c0
000ch jp short 0011h                ; JP(Jp_rel8_64) [11h:jmp64]                           encoding(2 bytes) = 7a 03
000eh setne al                      ; SETNE(Setne_rm8) [AL]                                encoding(3 bytes) = 0f 95 c0
0011h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0014h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> neqBytes => new byte[21]{0xC5,0xF8,0x77,0x66,0x90,0xC5,0xF9,0x2E,0xC1,0x0F,0x9A,0xC0,0x7A,0x03,0x0F,0x95,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool neq(in sbyte lhs, in sbyte rhs)
; location: [7FFC872BA810h, 7FFC872BA821h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,byte ptr [rcx]      ; MOVSX(Movsx_r64_rm8) [RAX,mem(8i,RCX:br,DS:sr)]      encoding(4 bytes) = 48 0f be 01
0009h cmp al,[rdx]                  ; CMP(Cmp_r8_rm8) [AL,mem(8u,RDX:br,DS:sr)]            encoding(2 bytes) = 3a 02
000bh setne al                      ; SETNE(Setne_rm8) [AL]                                encoding(3 bytes) = 0f 95 c0
000eh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> neqBytes => new byte[18]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBE,0x01,0x3A,0x02,0x0F,0x95,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool neq(in byte lhs, in byte rhs)
; location: [7FFC872BA840h, 7FFC872BA850h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,byte ptr [rcx]      ; MOVZX(Movzx_r32_rm8) [EAX,mem(8u,RCX:br,DS:sr)]      encoding(3 bytes) = 0f b6 01
0008h cmp al,[rdx]                  ; CMP(Cmp_r8_rm8) [AL,mem(8u,RDX:br,DS:sr)]            encoding(2 bytes) = 3a 02
000ah setne al                      ; SETNE(Setne_rm8) [AL]                                encoding(3 bytes) = 0f 95 c0
000dh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0010h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> neqBytes => new byte[17]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0x01,0x3A,0x02,0x0F,0x95,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool neq(in short lhs, in short rhs)
; location: [7FFC872BA870h, 7FFC872BA882h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,word ptr [rcx]      ; MOVSX(Movsx_r64_rm16) [RAX,mem(16i,RCX:br,DS:sr)]    encoding(4 bytes) = 48 0f bf 01
0009h cmp ax,[rdx]                  ; CMP(Cmp_r16_rm16) [AX,mem(16u,RDX:br,DS:sr)]         encoding(3 bytes) = 66 3b 02
000ch setne al                      ; SETNE(Setne_rm8) [AL]                                encoding(3 bytes) = 0f 95 c0
000fh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0012h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> neqBytes => new byte[19]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBF,0x01,0x66,0x3B,0x02,0x0F,0x95,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool neq(in ushort lhs, in ushort rhs)
; location: [7FFC872BA8A0h, 7FFC872BA8B1h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,word ptr [rcx]      ; MOVZX(Movzx_r32_rm16) [EAX,mem(16u,RCX:br,DS:sr)]    encoding(3 bytes) = 0f b7 01
0008h cmp ax,[rdx]                  ; CMP(Cmp_r16_rm16) [AX,mem(16u,RDX:br,DS:sr)]         encoding(3 bytes) = 66 3b 02
000bh setne al                      ; SETNE(Setne_rm8) [AL]                                encoding(3 bytes) = 0f 95 c0
000eh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> neqBytes => new byte[18]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB7,0x01,0x66,0x3B,0x02,0x0F,0x95,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool neq(in int lhs, in int rhs)
; location: [7FFC872BA8D0h, 7FFC872BA8DFh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov eax,[rcx]                 ; MOV(Mov_r32_rm32) [EAX,mem(32u,RCX:br,DS:sr)]        encoding(2 bytes) = 8b 01
0007h cmp eax,[rdx]                 ; CMP(Cmp_r32_rm32) [EAX,mem(32u,RDX:br,DS:sr)]        encoding(2 bytes) = 3b 02
0009h setne al                      ; SETNE(Setne_rm8) [AL]                                encoding(3 bytes) = 0f 95 c0
000ch movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> neqBytes => new byte[16]{0x0F,0x1F,0x44,0x00,0x00,0x8B,0x01,0x3B,0x02,0x0F,0x95,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool neq(in uint lhs, in uint rhs)
; location: [7FFC872BA8F0h, 7FFC872BA8FFh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov eax,[rcx]                 ; MOV(Mov_r32_rm32) [EAX,mem(32u,RCX:br,DS:sr)]        encoding(2 bytes) = 8b 01
0007h cmp eax,[rdx]                 ; CMP(Cmp_r32_rm32) [EAX,mem(32u,RDX:br,DS:sr)]        encoding(2 bytes) = 3b 02
0009h setne al                      ; SETNE(Setne_rm8) [AL]                                encoding(3 bytes) = 0f 95 c0
000ch movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> neqBytes => new byte[16]{0x0F,0x1F,0x44,0x00,0x00,0x8B,0x01,0x3B,0x02,0x0F,0x95,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool neq(in long lhs, in long rhs)
; location: [7FFC872BA910h, 7FFC872BA921h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,[rcx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 01
0008h cmp rax,[rdx]                 ; CMP(Cmp_r64_rm64) [RAX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 3b 02
000bh setne al                      ; SETNE(Setne_rm8) [AL]                                encoding(3 bytes) = 0f 95 c0
000eh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> neqBytes => new byte[18]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x01,0x48,0x3B,0x02,0x0F,0x95,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool neq(in ulong lhs, in ulong rhs)
; location: [7FFC872BA940h, 7FFC872BA951h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,[rcx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 01
0008h cmp rax,[rdx]                 ; CMP(Cmp_r64_rm64) [RAX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 3b 02
000bh setne al                      ; SETNE(Setne_rm8) [AL]                                encoding(3 bytes) = 0f 95 c0
000eh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> neqBytes => new byte[18]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x01,0x48,0x3B,0x02,0x0F,0x95,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool neq(in float lhs, in float rhs)
; location: [7FFC872BA970h, 7FFC872BA988h]
0000h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0003h xchg ax,ax                    ; NOP(Nopw)                                            encoding(2 bytes) = 66 90
0005h vmovss xmm0,dword ptr [rcx]   ; VMOVSS(VEX_Vmovss_xmm_m32) [XMM0,mem(Float32,RCX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 10 01
0009h vucomiss xmm0,dword ptr [rdx] ; VUCOMISS(VEX_Vucomiss_xmm_xmmm32) [XMM0,mem(Float32,RDX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 f8 2e 02
000dh setp al                       ; SETP(Setp_rm8) [AL]                                  encoding(3 bytes) = 0f 9a c0
0010h jp short 0015h                ; JP(Jp_rel8_64) [15h:jmp64]                           encoding(2 bytes) = 7a 03
0012h setne al                      ; SETNE(Setne_rm8) [AL]                                encoding(3 bytes) = 0f 95 c0
0015h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0018h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> neqBytes => new byte[25]{0xC5,0xF8,0x77,0x66,0x90,0xC5,0xFA,0x10,0x01,0xC5,0xF8,0x2E,0x02,0x0F,0x9A,0xC0,0x7A,0x03,0x0F,0x95,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool neq(in double lhs, in double rhs)
; location: [7FFC872BA9A0h, 7FFC872BA9B8h]
0000h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0003h xchg ax,ax                    ; NOP(Nopw)                                            encoding(2 bytes) = 66 90
0005h vmovsd xmm0,qword ptr [rcx]   ; VMOVSD(VEX_Vmovsd_xmm_m64) [XMM0,mem(Float64,RCX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fb 10 01
0009h vucomisd xmm0,qword ptr [rdx] ; VUCOMISD(VEX_Vucomisd_xmm_xmmm64) [XMM0,mem(Float64,RDX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 f9 2e 02
000dh setp al                       ; SETP(Setp_rm8) [AL]                                  encoding(3 bytes) = 0f 9a c0
0010h jp short 0015h                ; JP(Jp_rel8_64) [15h:jmp64]                           encoding(2 bytes) = 7a 03
0012h setne al                      ; SETNE(Setne_rm8) [AL]                                encoding(3 bytes) = 0f 95 c0
0015h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0018h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> neqBytes => new byte[25]{0xC5,0xF8,0x77,0x66,0x90,0xC5,0xFB,0x10,0x01,0xC5,0xF9,0x2E,0x02,0x0F,0x9A,0xC0,0x7A,0x03,0x0F,0x95,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> neq(ReadOnlySpan<sbyte> lhs, ReadOnlySpan<sbyte> rhs, Span<bool> dst)
; location: [7FFC872BA9D0h, 7FFC872BAA34h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0003h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0004h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0008h mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000bh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000fh mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0012h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0015h xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
0018h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
001ah jle short 004ch               ; JLE(Jle_rel8_64) [4Ch:jmp64]                         encoding(2 bytes) = 7e 30
001ch cmp r11d,r9d                  ; CMP(Cmp_r32_rm32) [R11D,R9D]                         encoding(3 bytes) = 45 3b d9
001fh jae short 005fh               ; JAE(Jae_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 73 3e
0021h movsxd rsi,r11d               ; MOVSXD(Movsxd_r64_rm32) [RSI,R11D]                   encoding(3 bytes) = 49 63 f3
0024h lea rdi,[rax+rsi]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 30
0028h movsx rbx,byte ptr [r10+rsi]  ; MOVSX(Movsx_r64_rm8) [RBX,mem(8i,R10:br,DS:sr)]      encoding(5 bytes) = 49 0f be 1c 32
002dh cmp r11d,[r8+8]               ; CMP(Cmp_r32_rm32) [R11D,mem(32u,R8:br,DS:sr)]        encoding(4 bytes) = 45 3b 58 08
0031h jae short 005fh               ; JAE(Jae_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 73 2c
0033h mov rbp,[r8]                  ; MOV(Mov_r64_rm64) [RBP,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 28
0036h movsx rsi,byte ptr [rsi+rbp]  ; MOVSX(Movsx_r64_rm8) [RSI,mem(8i,RSI:br,DS:sr)]      encoding(5 bytes) = 48 0f be 34 2e
003bh cmp ebx,esi                   ; CMP(Cmp_r32_rm32) [EBX,ESI]                          encoding(2 bytes) = 3b de
003dh setne sil                     ; SETNE(Setne_rm8) [SIL]                               encoding(4 bytes) = 40 0f 95 c6
0041h mov [rdi],sil                 ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),SIL]           encoding(3 bytes) = 40 88 37
0044h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
0047h cmp r11d,edx                  ; CMP(Cmp_r32_rm32) [R11D,EDX]                         encoding(3 bytes) = 44 3b da
004ah jl short 001ch                ; JL(Jl_rel8_64) [1Ch:jmp64]                           encoding(2 bytes) = 7c d0
004ch mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
004fh mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0053h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0056h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
005ah pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
005bh pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
005ch pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
005dh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
005eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
005fh call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5AA3E0h:jmp64]                encoding(5 bytes) = e8 7c a3 5a 5f
0064h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> neqBytes => new byte[101]{0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x12,0x8B,0x52,0x08,0x45,0x33,0xDB,0x85,0xD2,0x7E,0x30,0x45,0x3B,0xD9,0x73,0x3E,0x49,0x63,0xF3,0x48,0x8D,0x3C,0x30,0x49,0x0F,0xBE,0x1C,0x32,0x45,0x3B,0x58,0x08,0x73,0x2C,0x49,0x8B,0x28,0x48,0x0F,0xBE,0x34,0x2E,0x3B,0xDE,0x40,0x0F,0x95,0xC6,0x40,0x88,0x37,0x41,0xFF,0xC3,0x44,0x3B,0xDA,0x7C,0xD0,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0xC3,0xE8,0x7C,0xA3,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> neq(ReadOnlySpan<byte> lhs, ReadOnlySpan<byte> rhs, Span<bool> dst)
; location: [7FFC872BAA60h, 7FFC872BAAC4h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0003h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0004h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0008h mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000bh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000fh mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0012h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0015h xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
0018h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
001ah jle short 004ch               ; JLE(Jle_rel8_64) [4Ch:jmp64]                         encoding(2 bytes) = 7e 30
001ch cmp r11d,r9d                  ; CMP(Cmp_r32_rm32) [R11D,R9D]                         encoding(3 bytes) = 45 3b d9
001fh jae short 005fh               ; JAE(Jae_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 73 3e
0021h movsxd rsi,r11d               ; MOVSXD(Movsxd_r64_rm32) [RSI,R11D]                   encoding(3 bytes) = 49 63 f3
0024h lea rdi,[rax+rsi]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 30
0028h movzx ebx,byte ptr [r10+rsi]  ; MOVZX(Movzx_r32_rm8) [EBX,mem(8u,R10:br,DS:sr)]      encoding(5 bytes) = 41 0f b6 1c 32
002dh cmp r11d,[r8+8]               ; CMP(Cmp_r32_rm32) [R11D,mem(32u,R8:br,DS:sr)]        encoding(4 bytes) = 45 3b 58 08
0031h jae short 005fh               ; JAE(Jae_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 73 2c
0033h mov rbp,[r8]                  ; MOV(Mov_r64_rm64) [RBP,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 28
0036h movzx esi,byte ptr [rsi+rbp]  ; MOVZX(Movzx_r32_rm8) [ESI,mem(8u,RSI:br,DS:sr)]      encoding(5 bytes) = 40 0f b6 34 2e
003bh cmp ebx,esi                   ; CMP(Cmp_r32_rm32) [EBX,ESI]                          encoding(2 bytes) = 3b de
003dh setne sil                     ; SETNE(Setne_rm8) [SIL]                               encoding(4 bytes) = 40 0f 95 c6
0041h mov [rdi],sil                 ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),SIL]           encoding(3 bytes) = 40 88 37
0044h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
0047h cmp r11d,edx                  ; CMP(Cmp_r32_rm32) [R11D,EDX]                         encoding(3 bytes) = 44 3b da
004ah jl short 001ch                ; JL(Jl_rel8_64) [1Ch:jmp64]                           encoding(2 bytes) = 7c d0
004ch mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
004fh mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0053h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0056h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
005ah pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
005bh pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
005ch pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
005dh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
005eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
005fh call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5AA350h:jmp64]                encoding(5 bytes) = e8 ec a2 5a 5f
0064h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> neqBytes => new byte[101]{0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x12,0x8B,0x52,0x08,0x45,0x33,0xDB,0x85,0xD2,0x7E,0x30,0x45,0x3B,0xD9,0x73,0x3E,0x49,0x63,0xF3,0x48,0x8D,0x3C,0x30,0x41,0x0F,0xB6,0x1C,0x32,0x45,0x3B,0x58,0x08,0x73,0x2C,0x49,0x8B,0x28,0x40,0x0F,0xB6,0x34,0x2E,0x3B,0xDE,0x40,0x0F,0x95,0xC6,0x40,0x88,0x37,0x41,0xFF,0xC3,0x44,0x3B,0xDA,0x7C,0xD0,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0xC3,0xE8,0xEC,0xA2,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> neq(ReadOnlySpan<short> lhs, ReadOnlySpan<short> rhs, Span<bool> dst)
; location: [7FFC872BAAF0h, 7FFC872BAB55h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0003h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0004h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0008h mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000bh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000fh mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0012h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0015h xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
0018h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
001ah jle short 004dh               ; JLE(Jle_rel8_64) [4Dh:jmp64]                         encoding(2 bytes) = 7e 31
001ch cmp r11d,r9d                  ; CMP(Cmp_r32_rm32) [R11D,R9D]                         encoding(3 bytes) = 45 3b d9
001fh jae short 0060h               ; JAE(Jae_rel8_64) [60h:jmp64]                         encoding(2 bytes) = 73 3f
0021h movsxd rsi,r11d               ; MOVSXD(Movsxd_r64_rm32) [RSI,R11D]                   encoding(3 bytes) = 49 63 f3
0024h lea rdi,[rax+rsi]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 30
0028h movsx rbx,word ptr [r10+rsi*2]; MOVSX(Movsx_r64_rm16) [RBX,mem(16i,R10:br,DS:sr)]    encoding(5 bytes) = 49 0f bf 1c 72
002dh cmp r11d,[r8+8]               ; CMP(Cmp_r32_rm32) [R11D,mem(32u,R8:br,DS:sr)]        encoding(4 bytes) = 45 3b 58 08
0031h jae short 0060h               ; JAE(Jae_rel8_64) [60h:jmp64]                         encoding(2 bytes) = 73 2d
0033h mov rbp,[r8]                  ; MOV(Mov_r64_rm64) [RBP,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 28
0036h movsx rsi,word ptr [rbp+rsi*2]; MOVSX(Movsx_r64_rm16) [RSI,mem(16i,RBP:br,SS:sr)]    encoding(6 bytes) = 48 0f bf 74 75 00
003ch cmp ebx,esi                   ; CMP(Cmp_r32_rm32) [EBX,ESI]                          encoding(2 bytes) = 3b de
003eh setne sil                     ; SETNE(Setne_rm8) [SIL]                               encoding(4 bytes) = 40 0f 95 c6
0042h mov [rdi],sil                 ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),SIL]           encoding(3 bytes) = 40 88 37
0045h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
0048h cmp r11d,edx                  ; CMP(Cmp_r32_rm32) [R11D,EDX]                         encoding(3 bytes) = 44 3b da
004bh jl short 001ch                ; JL(Jl_rel8_64) [1Ch:jmp64]                           encoding(2 bytes) = 7c cf
004dh mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0050h mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0054h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0057h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
005bh pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
005ch pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
005dh pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
005eh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
005fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0060h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5AA2C0h:jmp64]                encoding(5 bytes) = e8 5b a2 5a 5f
0065h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> neqBytes => new byte[102]{0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x12,0x8B,0x52,0x08,0x45,0x33,0xDB,0x85,0xD2,0x7E,0x31,0x45,0x3B,0xD9,0x73,0x3F,0x49,0x63,0xF3,0x48,0x8D,0x3C,0x30,0x49,0x0F,0xBF,0x1C,0x72,0x45,0x3B,0x58,0x08,0x73,0x2D,0x49,0x8B,0x28,0x48,0x0F,0xBF,0x74,0x75,0x00,0x3B,0xDE,0x40,0x0F,0x95,0xC6,0x40,0x88,0x37,0x41,0xFF,0xC3,0x44,0x3B,0xDA,0x7C,0xCF,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0xC3,0xE8,0x5B,0xA2,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> neq(ReadOnlySpan<ushort> lhs, ReadOnlySpan<ushort> rhs, Span<bool> dst)
; location: [7FFC872BAB80h, 7FFC872BABE4h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0003h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0004h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0008h mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000bh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000fh mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0012h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0015h xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
0018h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
001ah jle short 004ch               ; JLE(Jle_rel8_64) [4Ch:jmp64]                         encoding(2 bytes) = 7e 30
001ch cmp r11d,r9d                  ; CMP(Cmp_r32_rm32) [R11D,R9D]                         encoding(3 bytes) = 45 3b d9
001fh jae short 005fh               ; JAE(Jae_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 73 3e
0021h movsxd rsi,r11d               ; MOVSXD(Movsxd_r64_rm32) [RSI,R11D]                   encoding(3 bytes) = 49 63 f3
0024h lea rdi,[rax+rsi]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 30
0028h movzx ebx,word ptr [r10+rsi*2]; MOVZX(Movzx_r32_rm16) [EBX,mem(16u,R10:br,DS:sr)]    encoding(5 bytes) = 41 0f b7 1c 72
002dh cmp r11d,[r8+8]               ; CMP(Cmp_r32_rm32) [R11D,mem(32u,R8:br,DS:sr)]        encoding(4 bytes) = 45 3b 58 08
0031h jae short 005fh               ; JAE(Jae_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 73 2c
0033h mov rbp,[r8]                  ; MOV(Mov_r64_rm64) [RBP,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 28
0036h movzx esi,word ptr [rbp+rsi*2]; MOVZX(Movzx_r32_rm16) [ESI,mem(16u,RBP:br,SS:sr)]    encoding(5 bytes) = 0f b7 74 75 00
003bh cmp ebx,esi                   ; CMP(Cmp_r32_rm32) [EBX,ESI]                          encoding(2 bytes) = 3b de
003dh setne sil                     ; SETNE(Setne_rm8) [SIL]                               encoding(4 bytes) = 40 0f 95 c6
0041h mov [rdi],sil                 ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),SIL]           encoding(3 bytes) = 40 88 37
0044h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
0047h cmp r11d,edx                  ; CMP(Cmp_r32_rm32) [R11D,EDX]                         encoding(3 bytes) = 44 3b da
004ah jl short 001ch                ; JL(Jl_rel8_64) [1Ch:jmp64]                           encoding(2 bytes) = 7c d0
004ch mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
004fh mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0053h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0056h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
005ah pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
005bh pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
005ch pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
005dh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
005eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
005fh call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5AA230h:jmp64]                encoding(5 bytes) = e8 cc a1 5a 5f
0064h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> neqBytes => new byte[101]{0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x12,0x8B,0x52,0x08,0x45,0x33,0xDB,0x85,0xD2,0x7E,0x30,0x45,0x3B,0xD9,0x73,0x3E,0x49,0x63,0xF3,0x48,0x8D,0x3C,0x30,0x41,0x0F,0xB7,0x1C,0x72,0x45,0x3B,0x58,0x08,0x73,0x2C,0x49,0x8B,0x28,0x0F,0xB7,0x74,0x75,0x00,0x3B,0xDE,0x40,0x0F,0x95,0xC6,0x40,0x88,0x37,0x41,0xFF,0xC3,0x44,0x3B,0xDA,0x7C,0xD0,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0xC3,0xE8,0xCC,0xA1,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> neq(ReadOnlySpan<int> lhs, ReadOnlySpan<int> rhs, Span<bool> dst)
; location: [7FFC872BAC10h, 7FFC872BAC72h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0003h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0004h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0008h mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000bh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000fh mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0012h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0015h xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
0018h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
001ah jle short 004ah               ; JLE(Jle_rel8_64) [4Ah:jmp64]                         encoding(2 bytes) = 7e 2e
001ch cmp r11d,r9d                  ; CMP(Cmp_r32_rm32) [R11D,R9D]                         encoding(3 bytes) = 45 3b d9
001fh jae short 005dh               ; JAE(Jae_rel8_64) [5Dh:jmp64]                         encoding(2 bytes) = 73 3c
0021h movsxd rsi,r11d               ; MOVSXD(Movsxd_r64_rm32) [RSI,R11D]                   encoding(3 bytes) = 49 63 f3
0024h lea rdi,[rax+rsi]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 30
0028h mov ebx,[r10+rsi*4]           ; MOV(Mov_r32_rm32) [EBX,mem(32u,R10:br,DS:sr)]        encoding(4 bytes) = 41 8b 1c b2
002ch cmp r11d,[r8+8]               ; CMP(Cmp_r32_rm32) [R11D,mem(32u,R8:br,DS:sr)]        encoding(4 bytes) = 45 3b 58 08
0030h jae short 005dh               ; JAE(Jae_rel8_64) [5Dh:jmp64]                         encoding(2 bytes) = 73 2b
0032h mov rbp,[r8]                  ; MOV(Mov_r64_rm64) [RBP,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 28
0035h mov esi,[rbp+rsi*4]           ; MOV(Mov_r32_rm32) [ESI,mem(32u,RBP:br,SS:sr)]        encoding(4 bytes) = 8b 74 b5 00
0039h cmp ebx,esi                   ; CMP(Cmp_r32_rm32) [EBX,ESI]                          encoding(2 bytes) = 3b de
003bh setne sil                     ; SETNE(Setne_rm8) [SIL]                               encoding(4 bytes) = 40 0f 95 c6
003fh mov [rdi],sil                 ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),SIL]           encoding(3 bytes) = 40 88 37
0042h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
0045h cmp r11d,edx                  ; CMP(Cmp_r32_rm32) [R11D,EDX]                         encoding(3 bytes) = 44 3b da
0048h jl short 001ch                ; JL(Jl_rel8_64) [1Ch:jmp64]                           encoding(2 bytes) = 7c d2
004ah mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
004dh mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0051h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0054h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
0058h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0059h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
005ah pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
005bh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
005ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
005dh call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5AA1A0h:jmp64]                encoding(5 bytes) = e8 3e a1 5a 5f
0062h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> neqBytes => new byte[99]{0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x12,0x8B,0x52,0x08,0x45,0x33,0xDB,0x85,0xD2,0x7E,0x2E,0x45,0x3B,0xD9,0x73,0x3C,0x49,0x63,0xF3,0x48,0x8D,0x3C,0x30,0x41,0x8B,0x1C,0xB2,0x45,0x3B,0x58,0x08,0x73,0x2B,0x49,0x8B,0x28,0x8B,0x74,0xB5,0x00,0x3B,0xDE,0x40,0x0F,0x95,0xC6,0x40,0x88,0x37,0x41,0xFF,0xC3,0x44,0x3B,0xDA,0x7C,0xD2,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0xC3,0xE8,0x3E,0xA1,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> neq(ReadOnlySpan<uint> lhs, ReadOnlySpan<uint> rhs, Span<bool> dst)
; location: [7FFC872BAC90h, 7FFC872BACF2h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0003h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0004h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0008h mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000bh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000fh mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0012h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0015h xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
0018h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
001ah jle short 004ah               ; JLE(Jle_rel8_64) [4Ah:jmp64]                         encoding(2 bytes) = 7e 2e
001ch cmp r11d,r9d                  ; CMP(Cmp_r32_rm32) [R11D,R9D]                         encoding(3 bytes) = 45 3b d9
001fh jae short 005dh               ; JAE(Jae_rel8_64) [5Dh:jmp64]                         encoding(2 bytes) = 73 3c
0021h movsxd rsi,r11d               ; MOVSXD(Movsxd_r64_rm32) [RSI,R11D]                   encoding(3 bytes) = 49 63 f3
0024h lea rdi,[rax+rsi]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 30
0028h mov ebx,[r10+rsi*4]           ; MOV(Mov_r32_rm32) [EBX,mem(32u,R10:br,DS:sr)]        encoding(4 bytes) = 41 8b 1c b2
002ch cmp r11d,[r8+8]               ; CMP(Cmp_r32_rm32) [R11D,mem(32u,R8:br,DS:sr)]        encoding(4 bytes) = 45 3b 58 08
0030h jae short 005dh               ; JAE(Jae_rel8_64) [5Dh:jmp64]                         encoding(2 bytes) = 73 2b
0032h mov rbp,[r8]                  ; MOV(Mov_r64_rm64) [RBP,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 28
0035h mov esi,[rbp+rsi*4]           ; MOV(Mov_r32_rm32) [ESI,mem(32u,RBP:br,SS:sr)]        encoding(4 bytes) = 8b 74 b5 00
0039h cmp ebx,esi                   ; CMP(Cmp_r32_rm32) [EBX,ESI]                          encoding(2 bytes) = 3b de
003bh setne sil                     ; SETNE(Setne_rm8) [SIL]                               encoding(4 bytes) = 40 0f 95 c6
003fh mov [rdi],sil                 ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),SIL]           encoding(3 bytes) = 40 88 37
0042h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
0045h cmp r11d,edx                  ; CMP(Cmp_r32_rm32) [R11D,EDX]                         encoding(3 bytes) = 44 3b da
0048h jl short 001ch                ; JL(Jl_rel8_64) [1Ch:jmp64]                           encoding(2 bytes) = 7c d2
004ah mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
004dh mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0051h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0054h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
0058h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0059h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
005ah pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
005bh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
005ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
005dh call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5AA120h:jmp64]                encoding(5 bytes) = e8 be a0 5a 5f
0062h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> neqBytes => new byte[99]{0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x12,0x8B,0x52,0x08,0x45,0x33,0xDB,0x85,0xD2,0x7E,0x2E,0x45,0x3B,0xD9,0x73,0x3C,0x49,0x63,0xF3,0x48,0x8D,0x3C,0x30,0x41,0x8B,0x1C,0xB2,0x45,0x3B,0x58,0x08,0x73,0x2B,0x49,0x8B,0x28,0x8B,0x74,0xB5,0x00,0x3B,0xDE,0x40,0x0F,0x95,0xC6,0x40,0x88,0x37,0x41,0xFF,0xC3,0x44,0x3B,0xDA,0x7C,0xD2,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0xC3,0xE8,0xBE,0xA0,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> neq(ReadOnlySpan<long> lhs, ReadOnlySpan<long> rhs, Span<bool> dst)
; location: [7FFC872BAD10h, 7FFC872BAD74h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0003h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0004h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0008h mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000bh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000fh mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0012h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0015h xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
0018h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
001ah jle short 004ch               ; JLE(Jle_rel8_64) [4Ch:jmp64]                         encoding(2 bytes) = 7e 30
001ch cmp r11d,r9d                  ; CMP(Cmp_r32_rm32) [R11D,R9D]                         encoding(3 bytes) = 45 3b d9
001fh jae short 005fh               ; JAE(Jae_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 73 3e
0021h movsxd rsi,r11d               ; MOVSXD(Movsxd_r64_rm32) [RSI,R11D]                   encoding(3 bytes) = 49 63 f3
0024h lea rdi,[rax+rsi]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 30
0028h mov rbx,[r10+rsi*8]           ; MOV(Mov_r64_rm64) [RBX,mem(64u,R10:br,DS:sr)]        encoding(4 bytes) = 49 8b 1c f2
002ch cmp r11d,[r8+8]               ; CMP(Cmp_r32_rm32) [R11D,mem(32u,R8:br,DS:sr)]        encoding(4 bytes) = 45 3b 58 08
0030h jae short 005fh               ; JAE(Jae_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 73 2d
0032h mov rbp,[r8]                  ; MOV(Mov_r64_rm64) [RBP,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 28
0035h mov rsi,[rbp+rsi*8]           ; MOV(Mov_r64_rm64) [RSI,mem(64u,RBP:br,SS:sr)]        encoding(5 bytes) = 48 8b 74 f5 00
003ah cmp rbx,rsi                   ; CMP(Cmp_r64_rm64) [RBX,RSI]                          encoding(3 bytes) = 48 3b de
003dh setne sil                     ; SETNE(Setne_rm8) [SIL]                               encoding(4 bytes) = 40 0f 95 c6
0041h mov [rdi],sil                 ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),SIL]           encoding(3 bytes) = 40 88 37
0044h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
0047h cmp r11d,edx                  ; CMP(Cmp_r32_rm32) [R11D,EDX]                         encoding(3 bytes) = 44 3b da
004ah jl short 001ch                ; JL(Jl_rel8_64) [1Ch:jmp64]                           encoding(2 bytes) = 7c d0
004ch mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
004fh mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0053h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0056h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
005ah pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
005bh pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
005ch pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
005dh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
005eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
005fh call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5AA0A0h:jmp64]                encoding(5 bytes) = e8 3c a0 5a 5f
0064h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> neqBytes => new byte[101]{0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x12,0x8B,0x52,0x08,0x45,0x33,0xDB,0x85,0xD2,0x7E,0x30,0x45,0x3B,0xD9,0x73,0x3E,0x49,0x63,0xF3,0x48,0x8D,0x3C,0x30,0x49,0x8B,0x1C,0xF2,0x45,0x3B,0x58,0x08,0x73,0x2D,0x49,0x8B,0x28,0x48,0x8B,0x74,0xF5,0x00,0x48,0x3B,0xDE,0x40,0x0F,0x95,0xC6,0x40,0x88,0x37,0x41,0xFF,0xC3,0x44,0x3B,0xDA,0x7C,0xD0,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0xC3,0xE8,0x3C,0xA0,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> neq(ReadOnlySpan<ulong> lhs, ReadOnlySpan<ulong> rhs, Span<bool> dst)
; location: [7FFC872BADA0h, 7FFC872BAE04h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0003h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0004h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0008h mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000bh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000fh mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0012h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0015h xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
0018h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
001ah jle short 004ch               ; JLE(Jle_rel8_64) [4Ch:jmp64]                         encoding(2 bytes) = 7e 30
001ch cmp r11d,r9d                  ; CMP(Cmp_r32_rm32) [R11D,R9D]                         encoding(3 bytes) = 45 3b d9
001fh jae short 005fh               ; JAE(Jae_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 73 3e
0021h movsxd rsi,r11d               ; MOVSXD(Movsxd_r64_rm32) [RSI,R11D]                   encoding(3 bytes) = 49 63 f3
0024h lea rdi,[rax+rsi]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 30
0028h mov rbx,[r10+rsi*8]           ; MOV(Mov_r64_rm64) [RBX,mem(64u,R10:br,DS:sr)]        encoding(4 bytes) = 49 8b 1c f2
002ch cmp r11d,[r8+8]               ; CMP(Cmp_r32_rm32) [R11D,mem(32u,R8:br,DS:sr)]        encoding(4 bytes) = 45 3b 58 08
0030h jae short 005fh               ; JAE(Jae_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 73 2d
0032h mov rbp,[r8]                  ; MOV(Mov_r64_rm64) [RBP,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 28
0035h mov rsi,[rbp+rsi*8]           ; MOV(Mov_r64_rm64) [RSI,mem(64u,RBP:br,SS:sr)]        encoding(5 bytes) = 48 8b 74 f5 00
003ah cmp rbx,rsi                   ; CMP(Cmp_r64_rm64) [RBX,RSI]                          encoding(3 bytes) = 48 3b de
003dh setne sil                     ; SETNE(Setne_rm8) [SIL]                               encoding(4 bytes) = 40 0f 95 c6
0041h mov [rdi],sil                 ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),SIL]           encoding(3 bytes) = 40 88 37
0044h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
0047h cmp r11d,edx                  ; CMP(Cmp_r32_rm32) [R11D,EDX]                         encoding(3 bytes) = 44 3b da
004ah jl short 001ch                ; JL(Jl_rel8_64) [1Ch:jmp64]                           encoding(2 bytes) = 7c d0
004ch mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
004fh mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0053h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0056h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
005ah pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
005bh pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
005ch pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
005dh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
005eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
005fh call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5AA010h:jmp64]                encoding(5 bytes) = e8 ac 9f 5a 5f
0064h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> neqBytes => new byte[101]{0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x12,0x8B,0x52,0x08,0x45,0x33,0xDB,0x85,0xD2,0x7E,0x30,0x45,0x3B,0xD9,0x73,0x3E,0x49,0x63,0xF3,0x48,0x8D,0x3C,0x30,0x49,0x8B,0x1C,0xF2,0x45,0x3B,0x58,0x08,0x73,0x2D,0x49,0x8B,0x28,0x48,0x8B,0x74,0xF5,0x00,0x48,0x3B,0xDE,0x40,0x0F,0x95,0xC6,0x40,0x88,0x37,0x41,0xFF,0xC3,0x44,0x3B,0xDA,0x7C,0xD0,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0xC3,0xE8,0xAC,0x9F,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> neq(ReadOnlySpan<float> lhs, ReadOnlySpan<float> rhs, Span<bool> dst)
; location: [7FFC872BAE30h, 7FFC872BAE9Eh]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0003h sub rsp,20h                   ; SUB(Sub_rm64_imm8) [RSP,20h:imm64]                   encoding(4 bytes) = 48 83 ec 20
0007h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
000ah mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000dh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
0011h mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0014h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0017h xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
001ah test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
001ch jle short 0057h               ; JLE(Jle_rel8_64) [57h:jmp64]                         encoding(2 bytes) = 7e 39
001eh cmp r11d,r9d                  ; CMP(Cmp_r32_rm32) [R11D,R9D]                         encoding(3 bytes) = 45 3b d9
0021h jae short 0069h               ; JAE(Jae_rel8_64) [69h:jmp64]                         encoding(2 bytes) = 73 46
0023h movsxd rsi,r11d               ; MOVSXD(Movsxd_r64_rm32) [RSI,R11D]                   encoding(3 bytes) = 49 63 f3
0026h lea rdi,[rax+rsi]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 30
002ah vmovss xmm0,dword ptr [r10+rsi*4]; VMOVSS(VEX_Vmovss_xmm_m32) [XMM0,mem(Float32,R10:br,DS:sr)] encoding(VEX, 6 bytes) = c4 c1 7a 10 04 b2
0030h cmp r11d,[r8+8]               ; CMP(Cmp_r32_rm32) [R11D,mem(32u,R8:br,DS:sr)]        encoding(4 bytes) = 45 3b 58 08
0034h jae short 0069h               ; JAE(Jae_rel8_64) [69h:jmp64]                         encoding(2 bytes) = 73 33
0036h mov rbx,[r8]                  ; MOV(Mov_r64_rm64) [RBX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 18
0039h vmovss xmm1,dword ptr [rbx+rsi*4]; VMOVSS(VEX_Vmovss_xmm_m32) [XMM1,mem(Float32,RBX:br,DS:sr)] encoding(VEX, 5 bytes) = c5 fa 10 0c b3
003eh vucomiss xmm0,xmm1            ; VUCOMISS(VEX_Vucomiss_xmm_xmmm32) [XMM0,XMM1]        encoding(VEX, 4 bytes) = c5 f8 2e c1
0042h setp sil                      ; SETP(Setp_rm8) [SIL]                                 encoding(4 bytes) = 40 0f 9a c6
0046h jp short 004ch                ; JP(Jp_rel8_64) [4Ch:jmp64]                           encoding(2 bytes) = 7a 04
0048h setne sil                     ; SETNE(Setne_rm8) [SIL]                               encoding(4 bytes) = 40 0f 95 c6
004ch mov [rdi],sil                 ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),SIL]           encoding(3 bytes) = 40 88 37
004fh inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
0052h cmp r11d,edx                  ; CMP(Cmp_r32_rm32) [R11D,EDX]                         encoding(3 bytes) = 44 3b da
0055h jl short 001eh                ; JL(Jl_rel8_64) [1Eh:jmp64]                           encoding(2 bytes) = 7c c7
0057h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
005ah mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
005eh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0061h add rsp,20h                   ; ADD(Add_rm64_imm8) [RSP,20h:imm64]                   encoding(4 bytes) = 48 83 c4 20
0065h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0066h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0067h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0068h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0069h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A9F80h:jmp64]                encoding(5 bytes) = e8 12 9f 5a 5f
006eh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> neqBytes => new byte[111]{0x57,0x56,0x53,0x48,0x83,0xEC,0x20,0xC5,0xF8,0x77,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x12,0x8B,0x52,0x08,0x45,0x33,0xDB,0x85,0xD2,0x7E,0x39,0x45,0x3B,0xD9,0x73,0x46,0x49,0x63,0xF3,0x48,0x8D,0x3C,0x30,0xC4,0xC1,0x7A,0x10,0x04,0xB2,0x45,0x3B,0x58,0x08,0x73,0x33,0x49,0x8B,0x18,0xC5,0xFA,0x10,0x0C,0xB3,0xC5,0xF8,0x2E,0xC1,0x40,0x0F,0x9A,0xC6,0x7A,0x04,0x40,0x0F,0x95,0xC6,0x40,0x88,0x37,0x41,0xFF,0xC3,0x44,0x3B,0xDA,0x7C,0xC7,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x20,0x5B,0x5E,0x5F,0xC3,0xE8,0x12,0x9F,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> neq(ReadOnlySpan<double> lhs, ReadOnlySpan<double> rhs, Span<bool> dst)
; location: [7FFC872BAEC0h, 7FFC872BAF2Eh]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0003h sub rsp,20h                   ; SUB(Sub_rm64_imm8) [RSP,20h:imm64]                   encoding(4 bytes) = 48 83 ec 20
0007h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
000ah mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000dh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
0011h mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0014h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0017h xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
001ah test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
001ch jle short 0057h               ; JLE(Jle_rel8_64) [57h:jmp64]                         encoding(2 bytes) = 7e 39
001eh cmp r11d,r9d                  ; CMP(Cmp_r32_rm32) [R11D,R9D]                         encoding(3 bytes) = 45 3b d9
0021h jae short 0069h               ; JAE(Jae_rel8_64) [69h:jmp64]                         encoding(2 bytes) = 73 46
0023h movsxd rsi,r11d               ; MOVSXD(Movsxd_r64_rm32) [RSI,R11D]                   encoding(3 bytes) = 49 63 f3
0026h lea rdi,[rax+rsi]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 30
002ah vmovsd xmm0,qword ptr [r10+rsi*8]; VMOVSD(VEX_Vmovsd_xmm_m64) [XMM0,mem(Float64,R10:br,DS:sr)] encoding(VEX, 6 bytes) = c4 c1 7b 10 04 f2
0030h cmp r11d,[r8+8]               ; CMP(Cmp_r32_rm32) [R11D,mem(32u,R8:br,DS:sr)]        encoding(4 bytes) = 45 3b 58 08
0034h jae short 0069h               ; JAE(Jae_rel8_64) [69h:jmp64]                         encoding(2 bytes) = 73 33
0036h mov rbx,[r8]                  ; MOV(Mov_r64_rm64) [RBX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 18
0039h vmovsd xmm1,qword ptr [rbx+rsi*8]; VMOVSD(VEX_Vmovsd_xmm_m64) [XMM1,mem(Float64,RBX:br,DS:sr)] encoding(VEX, 5 bytes) = c5 fb 10 0c f3
003eh vucomisd xmm0,xmm1            ; VUCOMISD(VEX_Vucomisd_xmm_xmmm64) [XMM0,XMM1]        encoding(VEX, 4 bytes) = c5 f9 2e c1
0042h setp sil                      ; SETP(Setp_rm8) [SIL]                                 encoding(4 bytes) = 40 0f 9a c6
0046h jp short 004ch                ; JP(Jp_rel8_64) [4Ch:jmp64]                           encoding(2 bytes) = 7a 04
0048h setne sil                     ; SETNE(Setne_rm8) [SIL]                               encoding(4 bytes) = 40 0f 95 c6
004ch mov [rdi],sil                 ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),SIL]           encoding(3 bytes) = 40 88 37
004fh inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
0052h cmp r11d,edx                  ; CMP(Cmp_r32_rm32) [R11D,EDX]                         encoding(3 bytes) = 44 3b da
0055h jl short 001eh                ; JL(Jl_rel8_64) [1Eh:jmp64]                           encoding(2 bytes) = 7c c7
0057h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
005ah mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
005eh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0061h add rsp,20h                   ; ADD(Add_rm64_imm8) [RSP,20h:imm64]                   encoding(4 bytes) = 48 83 c4 20
0065h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0066h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0067h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0068h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0069h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A9EF0h:jmp64]                encoding(5 bytes) = e8 82 9e 5a 5f
006eh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> neqBytes => new byte[111]{0x57,0x56,0x53,0x48,0x83,0xEC,0x20,0xC5,0xF8,0x77,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x12,0x8B,0x52,0x08,0x45,0x33,0xDB,0x85,0xD2,0x7E,0x39,0x45,0x3B,0xD9,0x73,0x46,0x49,0x63,0xF3,0x48,0x8D,0x3C,0x30,0xC4,0xC1,0x7B,0x10,0x04,0xF2,0x45,0x3B,0x58,0x08,0x73,0x33,0x49,0x8B,0x18,0xC5,0xFB,0x10,0x0C,0xF3,0xC5,0xF9,0x2E,0xC1,0x40,0x0F,0x9A,0xC6,0x7A,0x04,0x40,0x0F,0x95,0xC6,0x40,0x88,0x37,0x41,0xFF,0xC3,0x44,0x3B,0xDA,0x7C,0xC7,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x20,0x5B,0x5E,0x5F,0xC3,0xE8,0x82,0x9E,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> neq(ReadOnlySpan<sbyte> lhs, ReadOnlySpan<sbyte> rhs)
; location: [7FFC872BB360h, 7FFC872BB465h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push r12                      ; PUSH(Push_r64) [R12]                                 encoding(2 bytes) = 41 54
0006h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0007h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0008h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0009h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
000ah sub rsp,60h                   ; SUB(Sub_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 ec 60
000eh vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0011h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0014h lea rdi,[rsp+28h]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 7c 24 28
0019h mov ecx,0Ch                   ; MOV(Mov_r32_imm32) [ECX,ch:imm32]                    encoding(5 bytes) = b9 0c 00 00 00
001eh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0020h rep stosd                     ; STOSD(Stosd_m32_EAX) [mem(32u),EAX]                  encoding(2 bytes) = f3 ab
0022h mov rcx,rsi                   ; MOV(Mov_r64_rm64) [RCX,RSI]                          encoding(3 bytes) = 48 8b ce
0025h mov rbx,rcx                   ; MOV(Mov_r64_rm64) [RBX,RCX]                          encoding(3 bytes) = 48 8b d9
0028h mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
002bh mov rdi,r8                    ; MOV(Mov_r64_rm64) [RDI,R8]                           encoding(3 bytes) = 49 8b f8
002eh mov ebp,0ABh                  ; MOV(Mov_r32_imm32) [EBP,abh:imm32]                   encoding(5 bytes) = bd ab 00 00 00
0033h mov r14d,1                    ; MOV(Mov_r32_imm32) [R14D,1h:imm32]                   encoding(6 bytes) = 41 be 01 00 00 00
0039h mov r15d,[rsi+8]              ; MOV(Mov_r32_rm32) [R15D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 8b 7e 08
003dh mov r12d,[rdi+8]              ; MOV(Mov_r32_rm32) [R12D,mem(32u,RDI:br,DS:sr)]       encoding(4 bytes) = 44 8b 67 08
0041h cmp r15d,r12d                 ; CMP(Cmp_r32_rm32) [R15D,R12D]                        encoding(3 bytes) = 45 3b fc
0044h jne short 00abh               ; JNE(Jne_rel8_64) [ABh:jmp64]                         encoding(2 bytes) = 75 65
0046h movsxd rdx,r15d               ; MOVSXD(Movsxd_r64_rm32) [RDX,R15D]                   encoding(3 bytes) = 49 63 d7
0049h mov rcx,7FFC86FF98E8h         ; MOV(Mov_r64_imm64) [RCX,7ffc86ff98e8h:imm64]         encoding(10 bytes) = 48 b9 e8 98 ff 86 fc 7f 00 00
0053h call 7FFCE67394A0h            ; CALL(Call_rel32_64) [5F47E140h:jmp64]                encoding(5 bytes) = e8 e8 e0 47 5f
0058h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
005ch mov edx,[rax+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 50 08
005fh mov r8,rbx                    ; MOV(Mov_r64_rm64) [R8,RBX]                           encoding(3 bytes) = 4c 8b c3
0062h vmovdqu xmm0,xmmword ptr [rsi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 06
0066h vmovdqu xmmword ptr [rsp+48h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 48
006ch vmovdqu xmm0,xmmword ptr [rdi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RDI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 07
0070h vmovdqu xmmword ptr [rsp+38h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 38
0076h lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
007bh mov [r9],rcx                  ; MOV(Mov_rm64_r64) [mem(64u,R9:br,DS:sr),RCX]         encoding(3 bytes) = 49 89 09
007eh mov [r9+8],edx                ; MOV(Mov_rm32_r32) [mem(32u,R9:br,DS:sr),EDX]         encoding(4 bytes) = 41 89 51 08
0082h mov rcx,r8                    ; MOV(Mov_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 8b c8
0085h lea rdx,[rsp+48h]             ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 54 24 48
008ah lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
008fh lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
0094h call 7FFC872BA9D0h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFF670h:jmp64]        encoding(5 bytes) = e8 d7 f5 ff ff
0099h mov rax,rbx                   ; MOV(Mov_r64_rm64) [RAX,RBX]                          encoding(3 bytes) = 48 8b c3
009ch add rsp,60h                   ; ADD(Add_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 c4 60
00a0h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
00a1h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
00a2h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
00a3h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
00a4h pop r12                       ; POP(Pop_r64) [R12]                                   encoding(2 bytes) = 41 5c
00a6h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
00a8h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
00aah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
00abh mov ecx,0CF7h                 ; MOV(Mov_r32_imm32) [ECX,cf7h:imm32]                  encoding(5 bytes) = b9 f7 0c 00 00
00b0h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00bah call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F4785C0h:jmp64]                encoding(5 bytes) = e8 01 85 47 5f
00bfh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
00c2h mov ecx,0CFFh                 ; MOV(Mov_r32_imm32) [ECX,cffh:imm32]                  encoding(5 bytes) = b9 ff 0c 00 00
00c7h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00d1h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F4785C0h:jmp64]                encoding(5 bytes) = e8 ea 84 47 5f
00d6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00d9h lea r8,[rsp+58h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 58
00deh mov [r8],r14b                 ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),R14L]           encoding(3 bytes) = 45 88 30
00e1h mov [r8+4],ebp                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBP]         encoding(4 bytes) = 41 89 68 04
00e5h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00e8h mov ecx,r15d                  ; MOV(Mov_r32_rm32) [ECX,R15D]                         encoding(3 bytes) = 41 8b cf
00ebh mov edx,r12d                  ; MOV(Mov_r32_rm32) [EDX,R12D]                         encoding(3 bytes) = 41 8b d4
00eeh mov rax,[rsp+58h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 58
00f3h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00f8h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFCA2C18h:jmp64]        encoding(5 bytes) = e8 1b 2b ca ff
00fdh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
0100h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F45B5F0h:jmp64]                encoding(5 bytes) = e8 eb b4 45 5f
0105h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> neqBytes => new byte[262]{0x41,0x57,0x41,0x56,0x41,0x54,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x60,0xC5,0xF8,0x77,0x48,0x8B,0xF1,0x48,0x8D,0x7C,0x24,0x28,0xB9,0x0C,0x00,0x00,0x00,0x33,0xC0,0xF3,0xAB,0x48,0x8B,0xCE,0x48,0x8B,0xD9,0x48,0x8B,0xF2,0x49,0x8B,0xF8,0xBD,0xAB,0x00,0x00,0x00,0x41,0xBE,0x01,0x00,0x00,0x00,0x44,0x8B,0x7E,0x08,0x44,0x8B,0x67,0x08,0x45,0x3B,0xFC,0x75,0x65,0x49,0x63,0xD7,0x48,0xB9,0xE8,0x98,0xFF,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xE8,0xE0,0x47,0x5F,0x48,0x8D,0x48,0x10,0x8B,0x50,0x08,0x4C,0x8B,0xC3,0xC5,0xFA,0x6F,0x06,0xC5,0xFA,0x7F,0x44,0x24,0x48,0xC5,0xFA,0x6F,0x07,0xC5,0xFA,0x7F,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0x49,0x89,0x09,0x41,0x89,0x51,0x08,0x49,0x8B,0xC8,0x48,0x8D,0x54,0x24,0x48,0x4C,0x8D,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0xE8,0xD7,0xF5,0xFF,0xFF,0x48,0x8B,0xC3,0x48,0x83,0xC4,0x60,0x5B,0x5D,0x5E,0x5F,0x41,0x5C,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0xF7,0x0C,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x01,0x85,0x47,0x5F,0x48,0x8B,0xF0,0xB9,0xFF,0x0C,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xEA,0x84,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x58,0x45,0x88,0x30,0x41,0x89,0x68,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCF,0x41,0x8B,0xD4,0x48,0x8B,0x44,0x24,0x58,0x48,0x89,0x44,0x24,0x20,0xE8,0x1B,0x2B,0xCA,0xFF,0x48,0x8B,0xC8,0xE8,0xEB,0xB4,0x45,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> neq(ReadOnlySpan<byte> lhs, ReadOnlySpan<byte> rhs)
; location: [7FFC872BB490h, 7FFC872BB595h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push r12                      ; PUSH(Push_r64) [R12]                                 encoding(2 bytes) = 41 54
0006h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0007h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0008h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0009h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
000ah sub rsp,60h                   ; SUB(Sub_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 ec 60
000eh vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0011h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0014h lea rdi,[rsp+28h]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 7c 24 28
0019h mov ecx,0Ch                   ; MOV(Mov_r32_imm32) [ECX,ch:imm32]                    encoding(5 bytes) = b9 0c 00 00 00
001eh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0020h rep stosd                     ; STOSD(Stosd_m32_EAX) [mem(32u),EAX]                  encoding(2 bytes) = f3 ab
0022h mov rcx,rsi                   ; MOV(Mov_r64_rm64) [RCX,RSI]                          encoding(3 bytes) = 48 8b ce
0025h mov rbx,rcx                   ; MOV(Mov_r64_rm64) [RBX,RCX]                          encoding(3 bytes) = 48 8b d9
0028h mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
002bh mov rdi,r8                    ; MOV(Mov_r64_rm64) [RDI,R8]                           encoding(3 bytes) = 49 8b f8
002eh mov ebp,0AFh                  ; MOV(Mov_r32_imm32) [EBP,afh:imm32]                   encoding(5 bytes) = bd af 00 00 00
0033h mov r14d,1                    ; MOV(Mov_r32_imm32) [R14D,1h:imm32]                   encoding(6 bytes) = 41 be 01 00 00 00
0039h mov r15d,[rsi+8]              ; MOV(Mov_r32_rm32) [R15D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 8b 7e 08
003dh mov r12d,[rdi+8]              ; MOV(Mov_r32_rm32) [R12D,mem(32u,RDI:br,DS:sr)]       encoding(4 bytes) = 44 8b 67 08
0041h cmp r15d,r12d                 ; CMP(Cmp_r32_rm32) [R15D,R12D]                        encoding(3 bytes) = 45 3b fc
0044h jne short 00abh               ; JNE(Jne_rel8_64) [ABh:jmp64]                         encoding(2 bytes) = 75 65
0046h movsxd rdx,r15d               ; MOVSXD(Movsxd_r64_rm32) [RDX,R15D]                   encoding(3 bytes) = 49 63 d7
0049h mov rcx,7FFC86FF98E8h         ; MOV(Mov_r64_imm64) [RCX,7ffc86ff98e8h:imm64]         encoding(10 bytes) = 48 b9 e8 98 ff 86 fc 7f 00 00
0053h call 7FFCE67394A0h            ; CALL(Call_rel32_64) [5F47E010h:jmp64]                encoding(5 bytes) = e8 b8 df 47 5f
0058h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
005ch mov edx,[rax+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 50 08
005fh mov r8,rbx                    ; MOV(Mov_r64_rm64) [R8,RBX]                           encoding(3 bytes) = 4c 8b c3
0062h vmovdqu xmm0,xmmword ptr [rsi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 06
0066h vmovdqu xmmword ptr [rsp+48h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 48
006ch vmovdqu xmm0,xmmword ptr [rdi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RDI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 07
0070h vmovdqu xmmword ptr [rsp+38h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 38
0076h lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
007bh mov [r9],rcx                  ; MOV(Mov_rm64_r64) [mem(64u,R9:br,DS:sr),RCX]         encoding(3 bytes) = 49 89 09
007eh mov [r9+8],edx                ; MOV(Mov_rm32_r32) [mem(32u,R9:br,DS:sr),EDX]         encoding(4 bytes) = 41 89 51 08
0082h mov rcx,r8                    ; MOV(Mov_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 8b c8
0085h lea rdx,[rsp+48h]             ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 54 24 48
008ah lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
008fh lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
0094h call 7FFC872BAA60h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFF5D0h:jmp64]        encoding(5 bytes) = e8 37 f5 ff ff
0099h mov rax,rbx                   ; MOV(Mov_r64_rm64) [RAX,RBX]                          encoding(3 bytes) = 48 8b c3
009ch add rsp,60h                   ; ADD(Add_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 c4 60
00a0h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
00a1h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
00a2h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
00a3h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
00a4h pop r12                       ; POP(Pop_r64) [R12]                                   encoding(2 bytes) = 41 5c
00a6h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
00a8h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
00aah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
00abh mov ecx,0CF7h                 ; MOV(Mov_r32_imm32) [ECX,cf7h:imm32]                  encoding(5 bytes) = b9 f7 0c 00 00
00b0h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00bah call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F478490h:jmp64]                encoding(5 bytes) = e8 d1 83 47 5f
00bfh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
00c2h mov ecx,0CFFh                 ; MOV(Mov_r32_imm32) [ECX,cffh:imm32]                  encoding(5 bytes) = b9 ff 0c 00 00
00c7h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00d1h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F478490h:jmp64]                encoding(5 bytes) = e8 ba 83 47 5f
00d6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00d9h lea r8,[rsp+58h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 58
00deh mov [r8],r14b                 ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),R14L]           encoding(3 bytes) = 45 88 30
00e1h mov [r8+4],ebp                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBP]         encoding(4 bytes) = 41 89 68 04
00e5h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00e8h mov ecx,r15d                  ; MOV(Mov_r32_rm32) [ECX,R15D]                         encoding(3 bytes) = 41 8b cf
00ebh mov edx,r12d                  ; MOV(Mov_r32_rm32) [EDX,R12D]                         encoding(3 bytes) = 41 8b d4
00eeh mov rax,[rsp+58h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 58
00f3h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00f8h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFCA2AE8h:jmp64]        encoding(5 bytes) = e8 eb 29 ca ff
00fdh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
0100h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F45B4C0h:jmp64]                encoding(5 bytes) = e8 bb b3 45 5f
0105h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> neqBytes => new byte[262]{0x41,0x57,0x41,0x56,0x41,0x54,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x60,0xC5,0xF8,0x77,0x48,0x8B,0xF1,0x48,0x8D,0x7C,0x24,0x28,0xB9,0x0C,0x00,0x00,0x00,0x33,0xC0,0xF3,0xAB,0x48,0x8B,0xCE,0x48,0x8B,0xD9,0x48,0x8B,0xF2,0x49,0x8B,0xF8,0xBD,0xAF,0x00,0x00,0x00,0x41,0xBE,0x01,0x00,0x00,0x00,0x44,0x8B,0x7E,0x08,0x44,0x8B,0x67,0x08,0x45,0x3B,0xFC,0x75,0x65,0x49,0x63,0xD7,0x48,0xB9,0xE8,0x98,0xFF,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xB8,0xDF,0x47,0x5F,0x48,0x8D,0x48,0x10,0x8B,0x50,0x08,0x4C,0x8B,0xC3,0xC5,0xFA,0x6F,0x06,0xC5,0xFA,0x7F,0x44,0x24,0x48,0xC5,0xFA,0x6F,0x07,0xC5,0xFA,0x7F,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0x49,0x89,0x09,0x41,0x89,0x51,0x08,0x49,0x8B,0xC8,0x48,0x8D,0x54,0x24,0x48,0x4C,0x8D,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0xE8,0x37,0xF5,0xFF,0xFF,0x48,0x8B,0xC3,0x48,0x83,0xC4,0x60,0x5B,0x5D,0x5E,0x5F,0x41,0x5C,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0xF7,0x0C,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xD1,0x83,0x47,0x5F,0x48,0x8B,0xF0,0xB9,0xFF,0x0C,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xBA,0x83,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x58,0x45,0x88,0x30,0x41,0x89,0x68,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCF,0x41,0x8B,0xD4,0x48,0x8B,0x44,0x24,0x58,0x48,0x89,0x44,0x24,0x20,0xE8,0xEB,0x29,0xCA,0xFF,0x48,0x8B,0xC8,0xE8,0xBB,0xB3,0x45,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> neq(ReadOnlySpan<short> lhs, ReadOnlySpan<short> rhs)
; location: [7FFC872BB5C0h, 7FFC872BB6C5h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push r12                      ; PUSH(Push_r64) [R12]                                 encoding(2 bytes) = 41 54
0006h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0007h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0008h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0009h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
000ah sub rsp,60h                   ; SUB(Sub_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 ec 60
000eh vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0011h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0014h lea rdi,[rsp+28h]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 7c 24 28
0019h mov ecx,0Ch                   ; MOV(Mov_r32_imm32) [ECX,ch:imm32]                    encoding(5 bytes) = b9 0c 00 00 00
001eh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0020h rep stosd                     ; STOSD(Stosd_m32_EAX) [mem(32u),EAX]                  encoding(2 bytes) = f3 ab
0022h mov rcx,rsi                   ; MOV(Mov_r64_rm64) [RCX,RSI]                          encoding(3 bytes) = 48 8b ce
0025h mov rbx,rcx                   ; MOV(Mov_r64_rm64) [RBX,RCX]                          encoding(3 bytes) = 48 8b d9
0028h mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
002bh mov rdi,r8                    ; MOV(Mov_r64_rm64) [RDI,R8]                           encoding(3 bytes) = 49 8b f8
002eh mov ebp,0B3h                  ; MOV(Mov_r32_imm32) [EBP,b3h:imm32]                   encoding(5 bytes) = bd b3 00 00 00
0033h mov r14d,1                    ; MOV(Mov_r32_imm32) [R14D,1h:imm32]                   encoding(6 bytes) = 41 be 01 00 00 00
0039h mov r15d,[rsi+8]              ; MOV(Mov_r32_rm32) [R15D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 8b 7e 08
003dh mov r12d,[rdi+8]              ; MOV(Mov_r32_rm32) [R12D,mem(32u,RDI:br,DS:sr)]       encoding(4 bytes) = 44 8b 67 08
0041h cmp r15d,r12d                 ; CMP(Cmp_r32_rm32) [R15D,R12D]                        encoding(3 bytes) = 45 3b fc
0044h jne short 00abh               ; JNE(Jne_rel8_64) [ABh:jmp64]                         encoding(2 bytes) = 75 65
0046h movsxd rdx,r15d               ; MOVSXD(Movsxd_r64_rm32) [RDX,R15D]                   encoding(3 bytes) = 49 63 d7
0049h mov rcx,7FFC86FF98E8h         ; MOV(Mov_r64_imm64) [RCX,7ffc86ff98e8h:imm64]         encoding(10 bytes) = 48 b9 e8 98 ff 86 fc 7f 00 00
0053h call 7FFCE67394A0h            ; CALL(Call_rel32_64) [5F47DEE0h:jmp64]                encoding(5 bytes) = e8 88 de 47 5f
0058h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
005ch mov edx,[rax+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 50 08
005fh mov r8,rbx                    ; MOV(Mov_r64_rm64) [R8,RBX]                           encoding(3 bytes) = 4c 8b c3
0062h vmovdqu xmm0,xmmword ptr [rsi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 06
0066h vmovdqu xmmword ptr [rsp+48h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 48
006ch vmovdqu xmm0,xmmword ptr [rdi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RDI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 07
0070h vmovdqu xmmword ptr [rsp+38h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 38
0076h lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
007bh mov [r9],rcx                  ; MOV(Mov_rm64_r64) [mem(64u,R9:br,DS:sr),RCX]         encoding(3 bytes) = 49 89 09
007eh mov [r9+8],edx                ; MOV(Mov_rm32_r32) [mem(32u,R9:br,DS:sr),EDX]         encoding(4 bytes) = 41 89 51 08
0082h mov rcx,r8                    ; MOV(Mov_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 8b c8
0085h lea rdx,[rsp+48h]             ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 54 24 48
008ah lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
008fh lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
0094h call 7FFC872BAAF0h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFF530h:jmp64]        encoding(5 bytes) = e8 97 f4 ff ff
0099h mov rax,rbx                   ; MOV(Mov_r64_rm64) [RAX,RBX]                          encoding(3 bytes) = 48 8b c3
009ch add rsp,60h                   ; ADD(Add_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 c4 60
00a0h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
00a1h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
00a2h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
00a3h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
00a4h pop r12                       ; POP(Pop_r64) [R12]                                   encoding(2 bytes) = 41 5c
00a6h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
00a8h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
00aah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
00abh mov ecx,0CF7h                 ; MOV(Mov_r32_imm32) [ECX,cf7h:imm32]                  encoding(5 bytes) = b9 f7 0c 00 00
00b0h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00bah call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F478360h:jmp64]                encoding(5 bytes) = e8 a1 82 47 5f
00bfh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
00c2h mov ecx,0CFFh                 ; MOV(Mov_r32_imm32) [ECX,cffh:imm32]                  encoding(5 bytes) = b9 ff 0c 00 00
00c7h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00d1h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F478360h:jmp64]                encoding(5 bytes) = e8 8a 82 47 5f
00d6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00d9h lea r8,[rsp+58h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 58
00deh mov [r8],r14b                 ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),R14L]           encoding(3 bytes) = 45 88 30
00e1h mov [r8+4],ebp                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBP]         encoding(4 bytes) = 41 89 68 04
00e5h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00e8h mov ecx,r15d                  ; MOV(Mov_r32_rm32) [ECX,R15D]                         encoding(3 bytes) = 41 8b cf
00ebh mov edx,r12d                  ; MOV(Mov_r32_rm32) [EDX,R12D]                         encoding(3 bytes) = 41 8b d4
00eeh mov rax,[rsp+58h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 58
00f3h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00f8h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFCA29B8h:jmp64]        encoding(5 bytes) = e8 bb 28 ca ff
00fdh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
0100h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F45B390h:jmp64]                encoding(5 bytes) = e8 8b b2 45 5f
0105h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> neqBytes => new byte[262]{0x41,0x57,0x41,0x56,0x41,0x54,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x60,0xC5,0xF8,0x77,0x48,0x8B,0xF1,0x48,0x8D,0x7C,0x24,0x28,0xB9,0x0C,0x00,0x00,0x00,0x33,0xC0,0xF3,0xAB,0x48,0x8B,0xCE,0x48,0x8B,0xD9,0x48,0x8B,0xF2,0x49,0x8B,0xF8,0xBD,0xB3,0x00,0x00,0x00,0x41,0xBE,0x01,0x00,0x00,0x00,0x44,0x8B,0x7E,0x08,0x44,0x8B,0x67,0x08,0x45,0x3B,0xFC,0x75,0x65,0x49,0x63,0xD7,0x48,0xB9,0xE8,0x98,0xFF,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x88,0xDE,0x47,0x5F,0x48,0x8D,0x48,0x10,0x8B,0x50,0x08,0x4C,0x8B,0xC3,0xC5,0xFA,0x6F,0x06,0xC5,0xFA,0x7F,0x44,0x24,0x48,0xC5,0xFA,0x6F,0x07,0xC5,0xFA,0x7F,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0x49,0x89,0x09,0x41,0x89,0x51,0x08,0x49,0x8B,0xC8,0x48,0x8D,0x54,0x24,0x48,0x4C,0x8D,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0xE8,0x97,0xF4,0xFF,0xFF,0x48,0x8B,0xC3,0x48,0x83,0xC4,0x60,0x5B,0x5D,0x5E,0x5F,0x41,0x5C,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0xF7,0x0C,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xA1,0x82,0x47,0x5F,0x48,0x8B,0xF0,0xB9,0xFF,0x0C,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x8A,0x82,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x58,0x45,0x88,0x30,0x41,0x89,0x68,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCF,0x41,0x8B,0xD4,0x48,0x8B,0x44,0x24,0x58,0x48,0x89,0x44,0x24,0x20,0xE8,0xBB,0x28,0xCA,0xFF,0x48,0x8B,0xC8,0xE8,0x8B,0xB2,0x45,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> neq(ReadOnlySpan<ushort> lhs, ReadOnlySpan<ushort> rhs)
; location: [7FFC872BB6F0h, 7FFC872BB7F5h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push r12                      ; PUSH(Push_r64) [R12]                                 encoding(2 bytes) = 41 54
0006h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0007h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0008h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0009h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
000ah sub rsp,60h                   ; SUB(Sub_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 ec 60
000eh vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0011h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0014h lea rdi,[rsp+28h]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 7c 24 28
0019h mov ecx,0Ch                   ; MOV(Mov_r32_imm32) [ECX,ch:imm32]                    encoding(5 bytes) = b9 0c 00 00 00
001eh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0020h rep stosd                     ; STOSD(Stosd_m32_EAX) [mem(32u),EAX]                  encoding(2 bytes) = f3 ab
0022h mov rcx,rsi                   ; MOV(Mov_r64_rm64) [RCX,RSI]                          encoding(3 bytes) = 48 8b ce
0025h mov rbx,rcx                   ; MOV(Mov_r64_rm64) [RBX,RCX]                          encoding(3 bytes) = 48 8b d9
0028h mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
002bh mov rdi,r8                    ; MOV(Mov_r64_rm64) [RDI,R8]                           encoding(3 bytes) = 49 8b f8
002eh mov ebp,0B7h                  ; MOV(Mov_r32_imm32) [EBP,b7h:imm32]                   encoding(5 bytes) = bd b7 00 00 00
0033h mov r14d,1                    ; MOV(Mov_r32_imm32) [R14D,1h:imm32]                   encoding(6 bytes) = 41 be 01 00 00 00
0039h mov r15d,[rsi+8]              ; MOV(Mov_r32_rm32) [R15D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 8b 7e 08
003dh mov r12d,[rdi+8]              ; MOV(Mov_r32_rm32) [R12D,mem(32u,RDI:br,DS:sr)]       encoding(4 bytes) = 44 8b 67 08
0041h cmp r15d,r12d                 ; CMP(Cmp_r32_rm32) [R15D,R12D]                        encoding(3 bytes) = 45 3b fc
0044h jne short 00abh               ; JNE(Jne_rel8_64) [ABh:jmp64]                         encoding(2 bytes) = 75 65
0046h movsxd rdx,r15d               ; MOVSXD(Movsxd_r64_rm32) [RDX,R15D]                   encoding(3 bytes) = 49 63 d7
0049h mov rcx,7FFC86FF98E8h         ; MOV(Mov_r64_imm64) [RCX,7ffc86ff98e8h:imm64]         encoding(10 bytes) = 48 b9 e8 98 ff 86 fc 7f 00 00
0053h call 7FFCE67394A0h            ; CALL(Call_rel32_64) [5F47DDB0h:jmp64]                encoding(5 bytes) = e8 58 dd 47 5f
0058h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
005ch mov edx,[rax+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 50 08
005fh mov r8,rbx                    ; MOV(Mov_r64_rm64) [R8,RBX]                           encoding(3 bytes) = 4c 8b c3
0062h vmovdqu xmm0,xmmword ptr [rsi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 06
0066h vmovdqu xmmword ptr [rsp+48h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 48
006ch vmovdqu xmm0,xmmword ptr [rdi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RDI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 07
0070h vmovdqu xmmword ptr [rsp+38h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 38
0076h lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
007bh mov [r9],rcx                  ; MOV(Mov_rm64_r64) [mem(64u,R9:br,DS:sr),RCX]         encoding(3 bytes) = 49 89 09
007eh mov [r9+8],edx                ; MOV(Mov_rm32_r32) [mem(32u,R9:br,DS:sr),EDX]         encoding(4 bytes) = 41 89 51 08
0082h mov rcx,r8                    ; MOV(Mov_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 8b c8
0085h lea rdx,[rsp+48h]             ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 54 24 48
008ah lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
008fh lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
0094h call 7FFC872BAB80h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFF490h:jmp64]        encoding(5 bytes) = e8 f7 f3 ff ff
0099h mov rax,rbx                   ; MOV(Mov_r64_rm64) [RAX,RBX]                          encoding(3 bytes) = 48 8b c3
009ch add rsp,60h                   ; ADD(Add_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 c4 60
00a0h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
00a1h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
00a2h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
00a3h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
00a4h pop r12                       ; POP(Pop_r64) [R12]                                   encoding(2 bytes) = 41 5c
00a6h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
00a8h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
00aah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
00abh mov ecx,0CF7h                 ; MOV(Mov_r32_imm32) [ECX,cf7h:imm32]                  encoding(5 bytes) = b9 f7 0c 00 00
00b0h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00bah call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F478230h:jmp64]                encoding(5 bytes) = e8 71 81 47 5f
00bfh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
00c2h mov ecx,0CFFh                 ; MOV(Mov_r32_imm32) [ECX,cffh:imm32]                  encoding(5 bytes) = b9 ff 0c 00 00
00c7h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00d1h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F478230h:jmp64]                encoding(5 bytes) = e8 5a 81 47 5f
00d6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00d9h lea r8,[rsp+58h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 58
00deh mov [r8],r14b                 ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),R14L]           encoding(3 bytes) = 45 88 30
00e1h mov [r8+4],ebp                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBP]         encoding(4 bytes) = 41 89 68 04
00e5h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00e8h mov ecx,r15d                  ; MOV(Mov_r32_rm32) [ECX,R15D]                         encoding(3 bytes) = 41 8b cf
00ebh mov edx,r12d                  ; MOV(Mov_r32_rm32) [EDX,R12D]                         encoding(3 bytes) = 41 8b d4
00eeh mov rax,[rsp+58h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 58
00f3h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00f8h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFCA2888h:jmp64]        encoding(5 bytes) = e8 8b 27 ca ff
00fdh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
0100h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F45B260h:jmp64]                encoding(5 bytes) = e8 5b b1 45 5f
0105h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> neqBytes => new byte[262]{0x41,0x57,0x41,0x56,0x41,0x54,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x60,0xC5,0xF8,0x77,0x48,0x8B,0xF1,0x48,0x8D,0x7C,0x24,0x28,0xB9,0x0C,0x00,0x00,0x00,0x33,0xC0,0xF3,0xAB,0x48,0x8B,0xCE,0x48,0x8B,0xD9,0x48,0x8B,0xF2,0x49,0x8B,0xF8,0xBD,0xB7,0x00,0x00,0x00,0x41,0xBE,0x01,0x00,0x00,0x00,0x44,0x8B,0x7E,0x08,0x44,0x8B,0x67,0x08,0x45,0x3B,0xFC,0x75,0x65,0x49,0x63,0xD7,0x48,0xB9,0xE8,0x98,0xFF,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x58,0xDD,0x47,0x5F,0x48,0x8D,0x48,0x10,0x8B,0x50,0x08,0x4C,0x8B,0xC3,0xC5,0xFA,0x6F,0x06,0xC5,0xFA,0x7F,0x44,0x24,0x48,0xC5,0xFA,0x6F,0x07,0xC5,0xFA,0x7F,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0x49,0x89,0x09,0x41,0x89,0x51,0x08,0x49,0x8B,0xC8,0x48,0x8D,0x54,0x24,0x48,0x4C,0x8D,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0xE8,0xF7,0xF3,0xFF,0xFF,0x48,0x8B,0xC3,0x48,0x83,0xC4,0x60,0x5B,0x5D,0x5E,0x5F,0x41,0x5C,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0xF7,0x0C,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x71,0x81,0x47,0x5F,0x48,0x8B,0xF0,0xB9,0xFF,0x0C,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x5A,0x81,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x58,0x45,0x88,0x30,0x41,0x89,0x68,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCF,0x41,0x8B,0xD4,0x48,0x8B,0x44,0x24,0x58,0x48,0x89,0x44,0x24,0x20,0xE8,0x8B,0x27,0xCA,0xFF,0x48,0x8B,0xC8,0xE8,0x5B,0xB1,0x45,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> neq(ReadOnlySpan<int> lhs, ReadOnlySpan<int> rhs)
; location: [7FFC872BB820h, 7FFC872BB925h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push r12                      ; PUSH(Push_r64) [R12]                                 encoding(2 bytes) = 41 54
0006h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0007h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0008h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0009h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
000ah sub rsp,60h                   ; SUB(Sub_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 ec 60
000eh vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0011h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0014h lea rdi,[rsp+28h]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 7c 24 28
0019h mov ecx,0Ch                   ; MOV(Mov_r32_imm32) [ECX,ch:imm32]                    encoding(5 bytes) = b9 0c 00 00 00
001eh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0020h rep stosd                     ; STOSD(Stosd_m32_EAX) [mem(32u),EAX]                  encoding(2 bytes) = f3 ab
0022h mov rcx,rsi                   ; MOV(Mov_r64_rm64) [RCX,RSI]                          encoding(3 bytes) = 48 8b ce
0025h mov rbx,rcx                   ; MOV(Mov_r64_rm64) [RBX,RCX]                          encoding(3 bytes) = 48 8b d9
0028h mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
002bh mov rdi,r8                    ; MOV(Mov_r64_rm64) [RDI,R8]                           encoding(3 bytes) = 49 8b f8
002eh mov ebp,0BBh                  ; MOV(Mov_r32_imm32) [EBP,bbh:imm32]                   encoding(5 bytes) = bd bb 00 00 00
0033h mov r14d,1                    ; MOV(Mov_r32_imm32) [R14D,1h:imm32]                   encoding(6 bytes) = 41 be 01 00 00 00
0039h mov r15d,[rsi+8]              ; MOV(Mov_r32_rm32) [R15D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 8b 7e 08
003dh mov r12d,[rdi+8]              ; MOV(Mov_r32_rm32) [R12D,mem(32u,RDI:br,DS:sr)]       encoding(4 bytes) = 44 8b 67 08
0041h cmp r15d,r12d                 ; CMP(Cmp_r32_rm32) [R15D,R12D]                        encoding(3 bytes) = 45 3b fc
0044h jne short 00abh               ; JNE(Jne_rel8_64) [ABh:jmp64]                         encoding(2 bytes) = 75 65
0046h movsxd rdx,r15d               ; MOVSXD(Movsxd_r64_rm32) [RDX,R15D]                   encoding(3 bytes) = 49 63 d7
0049h mov rcx,7FFC86FF98E8h         ; MOV(Mov_r64_imm64) [RCX,7ffc86ff98e8h:imm64]         encoding(10 bytes) = 48 b9 e8 98 ff 86 fc 7f 00 00
0053h call 7FFCE67394A0h            ; CALL(Call_rel32_64) [5F47DC80h:jmp64]                encoding(5 bytes) = e8 28 dc 47 5f
0058h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
005ch mov edx,[rax+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 50 08
005fh mov r8,rbx                    ; MOV(Mov_r64_rm64) [R8,RBX]                           encoding(3 bytes) = 4c 8b c3
0062h vmovdqu xmm0,xmmword ptr [rsi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 06
0066h vmovdqu xmmword ptr [rsp+48h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 48
006ch vmovdqu xmm0,xmmword ptr [rdi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RDI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 07
0070h vmovdqu xmmword ptr [rsp+38h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 38
0076h lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
007bh mov [r9],rcx                  ; MOV(Mov_rm64_r64) [mem(64u,R9:br,DS:sr),RCX]         encoding(3 bytes) = 49 89 09
007eh mov [r9+8],edx                ; MOV(Mov_rm32_r32) [mem(32u,R9:br,DS:sr),EDX]         encoding(4 bytes) = 41 89 51 08
0082h mov rcx,r8                    ; MOV(Mov_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 8b c8
0085h lea rdx,[rsp+48h]             ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 54 24 48
008ah lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
008fh lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
0094h call 7FFC872BAC10h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFF3F0h:jmp64]        encoding(5 bytes) = e8 57 f3 ff ff
0099h mov rax,rbx                   ; MOV(Mov_r64_rm64) [RAX,RBX]                          encoding(3 bytes) = 48 8b c3
009ch add rsp,60h                   ; ADD(Add_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 c4 60
00a0h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
00a1h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
00a2h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
00a3h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
00a4h pop r12                       ; POP(Pop_r64) [R12]                                   encoding(2 bytes) = 41 5c
00a6h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
00a8h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
00aah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
00abh mov ecx,0CF7h                 ; MOV(Mov_r32_imm32) [ECX,cf7h:imm32]                  encoding(5 bytes) = b9 f7 0c 00 00
00b0h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00bah call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F478100h:jmp64]                encoding(5 bytes) = e8 41 80 47 5f
00bfh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
00c2h mov ecx,0CFFh                 ; MOV(Mov_r32_imm32) [ECX,cffh:imm32]                  encoding(5 bytes) = b9 ff 0c 00 00
00c7h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00d1h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F478100h:jmp64]                encoding(5 bytes) = e8 2a 80 47 5f
00d6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00d9h lea r8,[rsp+58h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 58
00deh mov [r8],r14b                 ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),R14L]           encoding(3 bytes) = 45 88 30
00e1h mov [r8+4],ebp                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBP]         encoding(4 bytes) = 41 89 68 04
00e5h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00e8h mov ecx,r15d                  ; MOV(Mov_r32_rm32) [ECX,R15D]                         encoding(3 bytes) = 41 8b cf
00ebh mov edx,r12d                  ; MOV(Mov_r32_rm32) [EDX,R12D]                         encoding(3 bytes) = 41 8b d4
00eeh mov rax,[rsp+58h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 58
00f3h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00f8h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFCA2758h:jmp64]        encoding(5 bytes) = e8 5b 26 ca ff
00fdh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
0100h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F45B130h:jmp64]                encoding(5 bytes) = e8 2b b0 45 5f
0105h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> neqBytes => new byte[262]{0x41,0x57,0x41,0x56,0x41,0x54,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x60,0xC5,0xF8,0x77,0x48,0x8B,0xF1,0x48,0x8D,0x7C,0x24,0x28,0xB9,0x0C,0x00,0x00,0x00,0x33,0xC0,0xF3,0xAB,0x48,0x8B,0xCE,0x48,0x8B,0xD9,0x48,0x8B,0xF2,0x49,0x8B,0xF8,0xBD,0xBB,0x00,0x00,0x00,0x41,0xBE,0x01,0x00,0x00,0x00,0x44,0x8B,0x7E,0x08,0x44,0x8B,0x67,0x08,0x45,0x3B,0xFC,0x75,0x65,0x49,0x63,0xD7,0x48,0xB9,0xE8,0x98,0xFF,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x28,0xDC,0x47,0x5F,0x48,0x8D,0x48,0x10,0x8B,0x50,0x08,0x4C,0x8B,0xC3,0xC5,0xFA,0x6F,0x06,0xC5,0xFA,0x7F,0x44,0x24,0x48,0xC5,0xFA,0x6F,0x07,0xC5,0xFA,0x7F,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0x49,0x89,0x09,0x41,0x89,0x51,0x08,0x49,0x8B,0xC8,0x48,0x8D,0x54,0x24,0x48,0x4C,0x8D,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0xE8,0x57,0xF3,0xFF,0xFF,0x48,0x8B,0xC3,0x48,0x83,0xC4,0x60,0x5B,0x5D,0x5E,0x5F,0x41,0x5C,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0xF7,0x0C,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x41,0x80,0x47,0x5F,0x48,0x8B,0xF0,0xB9,0xFF,0x0C,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x2A,0x80,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x58,0x45,0x88,0x30,0x41,0x89,0x68,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCF,0x41,0x8B,0xD4,0x48,0x8B,0x44,0x24,0x58,0x48,0x89,0x44,0x24,0x20,0xE8,0x5B,0x26,0xCA,0xFF,0x48,0x8B,0xC8,0xE8,0x2B,0xB0,0x45,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> neq(ReadOnlySpan<uint> lhs, ReadOnlySpan<uint> rhs)
; location: [7FFC872BB950h, 7FFC872BBA55h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push r12                      ; PUSH(Push_r64) [R12]                                 encoding(2 bytes) = 41 54
0006h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0007h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0008h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0009h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
000ah sub rsp,60h                   ; SUB(Sub_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 ec 60
000eh vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0011h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0014h lea rdi,[rsp+28h]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 7c 24 28
0019h mov ecx,0Ch                   ; MOV(Mov_r32_imm32) [ECX,ch:imm32]                    encoding(5 bytes) = b9 0c 00 00 00
001eh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0020h rep stosd                     ; STOSD(Stosd_m32_EAX) [mem(32u),EAX]                  encoding(2 bytes) = f3 ab
0022h mov rcx,rsi                   ; MOV(Mov_r64_rm64) [RCX,RSI]                          encoding(3 bytes) = 48 8b ce
0025h mov rbx,rcx                   ; MOV(Mov_r64_rm64) [RBX,RCX]                          encoding(3 bytes) = 48 8b d9
0028h mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
002bh mov rdi,r8                    ; MOV(Mov_r64_rm64) [RDI,R8]                           encoding(3 bytes) = 49 8b f8
002eh mov ebp,0BFh                  ; MOV(Mov_r32_imm32) [EBP,bfh:imm32]                   encoding(5 bytes) = bd bf 00 00 00
0033h mov r14d,1                    ; MOV(Mov_r32_imm32) [R14D,1h:imm32]                   encoding(6 bytes) = 41 be 01 00 00 00
0039h mov r15d,[rsi+8]              ; MOV(Mov_r32_rm32) [R15D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 8b 7e 08
003dh mov r12d,[rdi+8]              ; MOV(Mov_r32_rm32) [R12D,mem(32u,RDI:br,DS:sr)]       encoding(4 bytes) = 44 8b 67 08
0041h cmp r15d,r12d                 ; CMP(Cmp_r32_rm32) [R15D,R12D]                        encoding(3 bytes) = 45 3b fc
0044h jne short 00abh               ; JNE(Jne_rel8_64) [ABh:jmp64]                         encoding(2 bytes) = 75 65
0046h movsxd rdx,r15d               ; MOVSXD(Movsxd_r64_rm32) [RDX,R15D]                   encoding(3 bytes) = 49 63 d7
0049h mov rcx,7FFC86FF98E8h         ; MOV(Mov_r64_imm64) [RCX,7ffc86ff98e8h:imm64]         encoding(10 bytes) = 48 b9 e8 98 ff 86 fc 7f 00 00
0053h call 7FFCE67394A0h            ; CALL(Call_rel32_64) [5F47DB50h:jmp64]                encoding(5 bytes) = e8 f8 da 47 5f
0058h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
005ch mov edx,[rax+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 50 08
005fh mov r8,rbx                    ; MOV(Mov_r64_rm64) [R8,RBX]                           encoding(3 bytes) = 4c 8b c3
0062h vmovdqu xmm0,xmmword ptr [rsi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 06
0066h vmovdqu xmmword ptr [rsp+48h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 48
006ch vmovdqu xmm0,xmmword ptr [rdi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RDI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 07
0070h vmovdqu xmmword ptr [rsp+38h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 38
0076h lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
007bh mov [r9],rcx                  ; MOV(Mov_rm64_r64) [mem(64u,R9:br,DS:sr),RCX]         encoding(3 bytes) = 49 89 09
007eh mov [r9+8],edx                ; MOV(Mov_rm32_r32) [mem(32u,R9:br,DS:sr),EDX]         encoding(4 bytes) = 41 89 51 08
0082h mov rcx,r8                    ; MOV(Mov_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 8b c8
0085h lea rdx,[rsp+48h]             ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 54 24 48
008ah lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
008fh lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
0094h call 7FFC872BAC90h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFF340h:jmp64]        encoding(5 bytes) = e8 a7 f2 ff ff
0099h mov rax,rbx                   ; MOV(Mov_r64_rm64) [RAX,RBX]                          encoding(3 bytes) = 48 8b c3
009ch add rsp,60h                   ; ADD(Add_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 c4 60
00a0h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
00a1h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
00a2h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
00a3h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
00a4h pop r12                       ; POP(Pop_r64) [R12]                                   encoding(2 bytes) = 41 5c
00a6h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
00a8h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
00aah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
00abh mov ecx,0CF7h                 ; MOV(Mov_r32_imm32) [ECX,cf7h:imm32]                  encoding(5 bytes) = b9 f7 0c 00 00
00b0h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00bah call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F477FD0h:jmp64]                encoding(5 bytes) = e8 11 7f 47 5f
00bfh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
00c2h mov ecx,0CFFh                 ; MOV(Mov_r32_imm32) [ECX,cffh:imm32]                  encoding(5 bytes) = b9 ff 0c 00 00
00c7h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00d1h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F477FD0h:jmp64]                encoding(5 bytes) = e8 fa 7e 47 5f
00d6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00d9h lea r8,[rsp+58h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 58
00deh mov [r8],r14b                 ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),R14L]           encoding(3 bytes) = 45 88 30
00e1h mov [r8+4],ebp                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBP]         encoding(4 bytes) = 41 89 68 04
00e5h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00e8h mov ecx,r15d                  ; MOV(Mov_r32_rm32) [ECX,R15D]                         encoding(3 bytes) = 41 8b cf
00ebh mov edx,r12d                  ; MOV(Mov_r32_rm32) [EDX,R12D]                         encoding(3 bytes) = 41 8b d4
00eeh mov rax,[rsp+58h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 58
00f3h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00f8h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFCA2628h:jmp64]        encoding(5 bytes) = e8 2b 25 ca ff
00fdh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
0100h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F45B000h:jmp64]                encoding(5 bytes) = e8 fb ae 45 5f
0105h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> neqBytes => new byte[262]{0x41,0x57,0x41,0x56,0x41,0x54,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x60,0xC5,0xF8,0x77,0x48,0x8B,0xF1,0x48,0x8D,0x7C,0x24,0x28,0xB9,0x0C,0x00,0x00,0x00,0x33,0xC0,0xF3,0xAB,0x48,0x8B,0xCE,0x48,0x8B,0xD9,0x48,0x8B,0xF2,0x49,0x8B,0xF8,0xBD,0xBF,0x00,0x00,0x00,0x41,0xBE,0x01,0x00,0x00,0x00,0x44,0x8B,0x7E,0x08,0x44,0x8B,0x67,0x08,0x45,0x3B,0xFC,0x75,0x65,0x49,0x63,0xD7,0x48,0xB9,0xE8,0x98,0xFF,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xF8,0xDA,0x47,0x5F,0x48,0x8D,0x48,0x10,0x8B,0x50,0x08,0x4C,0x8B,0xC3,0xC5,0xFA,0x6F,0x06,0xC5,0xFA,0x7F,0x44,0x24,0x48,0xC5,0xFA,0x6F,0x07,0xC5,0xFA,0x7F,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0x49,0x89,0x09,0x41,0x89,0x51,0x08,0x49,0x8B,0xC8,0x48,0x8D,0x54,0x24,0x48,0x4C,0x8D,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0xE8,0xA7,0xF2,0xFF,0xFF,0x48,0x8B,0xC3,0x48,0x83,0xC4,0x60,0x5B,0x5D,0x5E,0x5F,0x41,0x5C,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0xF7,0x0C,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x11,0x7F,0x47,0x5F,0x48,0x8B,0xF0,0xB9,0xFF,0x0C,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xFA,0x7E,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x58,0x45,0x88,0x30,0x41,0x89,0x68,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCF,0x41,0x8B,0xD4,0x48,0x8B,0x44,0x24,0x58,0x48,0x89,0x44,0x24,0x20,0xE8,0x2B,0x25,0xCA,0xFF,0x48,0x8B,0xC8,0xE8,0xFB,0xAE,0x45,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> neq(ReadOnlySpan<long> lhs, ReadOnlySpan<long> rhs)
; location: [7FFC872BBA80h, 7FFC872BBB85h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push r12                      ; PUSH(Push_r64) [R12]                                 encoding(2 bytes) = 41 54
0006h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0007h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0008h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0009h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
000ah sub rsp,60h                   ; SUB(Sub_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 ec 60
000eh vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0011h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0014h lea rdi,[rsp+28h]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 7c 24 28
0019h mov ecx,0Ch                   ; MOV(Mov_r32_imm32) [ECX,ch:imm32]                    encoding(5 bytes) = b9 0c 00 00 00
001eh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0020h rep stosd                     ; STOSD(Stosd_m32_EAX) [mem(32u),EAX]                  encoding(2 bytes) = f3 ab
0022h mov rcx,rsi                   ; MOV(Mov_r64_rm64) [RCX,RSI]                          encoding(3 bytes) = 48 8b ce
0025h mov rbx,rcx                   ; MOV(Mov_r64_rm64) [RBX,RCX]                          encoding(3 bytes) = 48 8b d9
0028h mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
002bh mov rdi,r8                    ; MOV(Mov_r64_rm64) [RDI,R8]                           encoding(3 bytes) = 49 8b f8
002eh mov ebp,0C3h                  ; MOV(Mov_r32_imm32) [EBP,c3h:imm32]                   encoding(5 bytes) = bd c3 00 00 00
0033h mov r14d,1                    ; MOV(Mov_r32_imm32) [R14D,1h:imm32]                   encoding(6 bytes) = 41 be 01 00 00 00
0039h mov r15d,[rsi+8]              ; MOV(Mov_r32_rm32) [R15D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 8b 7e 08
003dh mov r12d,[rdi+8]              ; MOV(Mov_r32_rm32) [R12D,mem(32u,RDI:br,DS:sr)]       encoding(4 bytes) = 44 8b 67 08
0041h cmp r15d,r12d                 ; CMP(Cmp_r32_rm32) [R15D,R12D]                        encoding(3 bytes) = 45 3b fc
0044h jne short 00abh               ; JNE(Jne_rel8_64) [ABh:jmp64]                         encoding(2 bytes) = 75 65
0046h movsxd rdx,r15d               ; MOVSXD(Movsxd_r64_rm32) [RDX,R15D]                   encoding(3 bytes) = 49 63 d7
0049h mov rcx,7FFC86FF98E8h         ; MOV(Mov_r64_imm64) [RCX,7ffc86ff98e8h:imm64]         encoding(10 bytes) = 48 b9 e8 98 ff 86 fc 7f 00 00
0053h call 7FFCE67394A0h            ; CALL(Call_rel32_64) [5F47DA20h:jmp64]                encoding(5 bytes) = e8 c8 d9 47 5f
0058h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
005ch mov edx,[rax+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 50 08
005fh mov r8,rbx                    ; MOV(Mov_r64_rm64) [R8,RBX]                           encoding(3 bytes) = 4c 8b c3
0062h vmovdqu xmm0,xmmword ptr [rsi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 06
0066h vmovdqu xmmword ptr [rsp+48h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 48
006ch vmovdqu xmm0,xmmword ptr [rdi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RDI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 07
0070h vmovdqu xmmword ptr [rsp+38h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 38
0076h lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
007bh mov [r9],rcx                  ; MOV(Mov_rm64_r64) [mem(64u,R9:br,DS:sr),RCX]         encoding(3 bytes) = 49 89 09
007eh mov [r9+8],edx                ; MOV(Mov_rm32_r32) [mem(32u,R9:br,DS:sr),EDX]         encoding(4 bytes) = 41 89 51 08
0082h mov rcx,r8                    ; MOV(Mov_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 8b c8
0085h lea rdx,[rsp+48h]             ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 54 24 48
008ah lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
008fh lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
0094h call 7FFC872BAD10h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFF290h:jmp64]        encoding(5 bytes) = e8 f7 f1 ff ff
0099h mov rax,rbx                   ; MOV(Mov_r64_rm64) [RAX,RBX]                          encoding(3 bytes) = 48 8b c3
009ch add rsp,60h                   ; ADD(Add_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 c4 60
00a0h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
00a1h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
00a2h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
00a3h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
00a4h pop r12                       ; POP(Pop_r64) [R12]                                   encoding(2 bytes) = 41 5c
00a6h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
00a8h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
00aah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
00abh mov ecx,0CF7h                 ; MOV(Mov_r32_imm32) [ECX,cf7h:imm32]                  encoding(5 bytes) = b9 f7 0c 00 00
00b0h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00bah call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F477EA0h:jmp64]                encoding(5 bytes) = e8 e1 7d 47 5f
00bfh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
00c2h mov ecx,0CFFh                 ; MOV(Mov_r32_imm32) [ECX,cffh:imm32]                  encoding(5 bytes) = b9 ff 0c 00 00
00c7h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00d1h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F477EA0h:jmp64]                encoding(5 bytes) = e8 ca 7d 47 5f
00d6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00d9h lea r8,[rsp+58h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 58
00deh mov [r8],r14b                 ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),R14L]           encoding(3 bytes) = 45 88 30
00e1h mov [r8+4],ebp                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBP]         encoding(4 bytes) = 41 89 68 04
00e5h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00e8h mov ecx,r15d                  ; MOV(Mov_r32_rm32) [ECX,R15D]                         encoding(3 bytes) = 41 8b cf
00ebh mov edx,r12d                  ; MOV(Mov_r32_rm32) [EDX,R12D]                         encoding(3 bytes) = 41 8b d4
00eeh mov rax,[rsp+58h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 58
00f3h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00f8h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFCA24F8h:jmp64]        encoding(5 bytes) = e8 fb 23 ca ff
00fdh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
0100h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F45AED0h:jmp64]                encoding(5 bytes) = e8 cb ad 45 5f
0105h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> neqBytes => new byte[262]{0x41,0x57,0x41,0x56,0x41,0x54,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x60,0xC5,0xF8,0x77,0x48,0x8B,0xF1,0x48,0x8D,0x7C,0x24,0x28,0xB9,0x0C,0x00,0x00,0x00,0x33,0xC0,0xF3,0xAB,0x48,0x8B,0xCE,0x48,0x8B,0xD9,0x48,0x8B,0xF2,0x49,0x8B,0xF8,0xBD,0xC3,0x00,0x00,0x00,0x41,0xBE,0x01,0x00,0x00,0x00,0x44,0x8B,0x7E,0x08,0x44,0x8B,0x67,0x08,0x45,0x3B,0xFC,0x75,0x65,0x49,0x63,0xD7,0x48,0xB9,0xE8,0x98,0xFF,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xC8,0xD9,0x47,0x5F,0x48,0x8D,0x48,0x10,0x8B,0x50,0x08,0x4C,0x8B,0xC3,0xC5,0xFA,0x6F,0x06,0xC5,0xFA,0x7F,0x44,0x24,0x48,0xC5,0xFA,0x6F,0x07,0xC5,0xFA,0x7F,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0x49,0x89,0x09,0x41,0x89,0x51,0x08,0x49,0x8B,0xC8,0x48,0x8D,0x54,0x24,0x48,0x4C,0x8D,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0xE8,0xF7,0xF1,0xFF,0xFF,0x48,0x8B,0xC3,0x48,0x83,0xC4,0x60,0x5B,0x5D,0x5E,0x5F,0x41,0x5C,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0xF7,0x0C,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xE1,0x7D,0x47,0x5F,0x48,0x8B,0xF0,0xB9,0xFF,0x0C,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xCA,0x7D,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x58,0x45,0x88,0x30,0x41,0x89,0x68,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCF,0x41,0x8B,0xD4,0x48,0x8B,0x44,0x24,0x58,0x48,0x89,0x44,0x24,0x20,0xE8,0xFB,0x23,0xCA,0xFF,0x48,0x8B,0xC8,0xE8,0xCB,0xAD,0x45,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> neq(ReadOnlySpan<ulong> lhs, ReadOnlySpan<ulong> rhs)
; location: [7FFC872BBBB0h, 7FFC872BBCB5h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push r12                      ; PUSH(Push_r64) [R12]                                 encoding(2 bytes) = 41 54
0006h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0007h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0008h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0009h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
000ah sub rsp,60h                   ; SUB(Sub_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 ec 60
000eh vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0011h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0014h lea rdi,[rsp+28h]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 7c 24 28
0019h mov ecx,0Ch                   ; MOV(Mov_r32_imm32) [ECX,ch:imm32]                    encoding(5 bytes) = b9 0c 00 00 00
001eh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0020h rep stosd                     ; STOSD(Stosd_m32_EAX) [mem(32u),EAX]                  encoding(2 bytes) = f3 ab
0022h mov rcx,rsi                   ; MOV(Mov_r64_rm64) [RCX,RSI]                          encoding(3 bytes) = 48 8b ce
0025h mov rbx,rcx                   ; MOV(Mov_r64_rm64) [RBX,RCX]                          encoding(3 bytes) = 48 8b d9
0028h mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
002bh mov rdi,r8                    ; MOV(Mov_r64_rm64) [RDI,R8]                           encoding(3 bytes) = 49 8b f8
002eh mov ebp,0C7h                  ; MOV(Mov_r32_imm32) [EBP,c7h:imm32]                   encoding(5 bytes) = bd c7 00 00 00
0033h mov r14d,1                    ; MOV(Mov_r32_imm32) [R14D,1h:imm32]                   encoding(6 bytes) = 41 be 01 00 00 00
0039h mov r15d,[rsi+8]              ; MOV(Mov_r32_rm32) [R15D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 8b 7e 08
003dh mov r12d,[rdi+8]              ; MOV(Mov_r32_rm32) [R12D,mem(32u,RDI:br,DS:sr)]       encoding(4 bytes) = 44 8b 67 08
0041h cmp r15d,r12d                 ; CMP(Cmp_r32_rm32) [R15D,R12D]                        encoding(3 bytes) = 45 3b fc
0044h jne short 00abh               ; JNE(Jne_rel8_64) [ABh:jmp64]                         encoding(2 bytes) = 75 65
0046h movsxd rdx,r15d               ; MOVSXD(Movsxd_r64_rm32) [RDX,R15D]                   encoding(3 bytes) = 49 63 d7
0049h mov rcx,7FFC86FF98E8h         ; MOV(Mov_r64_imm64) [RCX,7ffc86ff98e8h:imm64]         encoding(10 bytes) = 48 b9 e8 98 ff 86 fc 7f 00 00
0053h call 7FFCE67394A0h            ; CALL(Call_rel32_64) [5F47D8F0h:jmp64]                encoding(5 bytes) = e8 98 d8 47 5f
0058h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
005ch mov edx,[rax+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 50 08
005fh mov r8,rbx                    ; MOV(Mov_r64_rm64) [R8,RBX]                           encoding(3 bytes) = 4c 8b c3
0062h vmovdqu xmm0,xmmword ptr [rsi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 06
0066h vmovdqu xmmword ptr [rsp+48h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 48
006ch vmovdqu xmm0,xmmword ptr [rdi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RDI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 07
0070h vmovdqu xmmword ptr [rsp+38h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 38
0076h lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
007bh mov [r9],rcx                  ; MOV(Mov_rm64_r64) [mem(64u,R9:br,DS:sr),RCX]         encoding(3 bytes) = 49 89 09
007eh mov [r9+8],edx                ; MOV(Mov_rm32_r32) [mem(32u,R9:br,DS:sr),EDX]         encoding(4 bytes) = 41 89 51 08
0082h mov rcx,r8                    ; MOV(Mov_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 8b c8
0085h lea rdx,[rsp+48h]             ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 54 24 48
008ah lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
008fh lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
0094h call 7FFC872BADA0h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFF1F0h:jmp64]        encoding(5 bytes) = e8 57 f1 ff ff
0099h mov rax,rbx                   ; MOV(Mov_r64_rm64) [RAX,RBX]                          encoding(3 bytes) = 48 8b c3
009ch add rsp,60h                   ; ADD(Add_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 c4 60
00a0h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
00a1h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
00a2h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
00a3h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
00a4h pop r12                       ; POP(Pop_r64) [R12]                                   encoding(2 bytes) = 41 5c
00a6h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
00a8h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
00aah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
00abh mov ecx,0CF7h                 ; MOV(Mov_r32_imm32) [ECX,cf7h:imm32]                  encoding(5 bytes) = b9 f7 0c 00 00
00b0h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00bah call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F477D70h:jmp64]                encoding(5 bytes) = e8 b1 7c 47 5f
00bfh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
00c2h mov ecx,0CFFh                 ; MOV(Mov_r32_imm32) [ECX,cffh:imm32]                  encoding(5 bytes) = b9 ff 0c 00 00
00c7h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00d1h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F477D70h:jmp64]                encoding(5 bytes) = e8 9a 7c 47 5f
00d6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00d9h lea r8,[rsp+58h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 58
00deh mov [r8],r14b                 ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),R14L]           encoding(3 bytes) = 45 88 30
00e1h mov [r8+4],ebp                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBP]         encoding(4 bytes) = 41 89 68 04
00e5h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00e8h mov ecx,r15d                  ; MOV(Mov_r32_rm32) [ECX,R15D]                         encoding(3 bytes) = 41 8b cf
00ebh mov edx,r12d                  ; MOV(Mov_r32_rm32) [EDX,R12D]                         encoding(3 bytes) = 41 8b d4
00eeh mov rax,[rsp+58h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 58
00f3h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00f8h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFCA23C8h:jmp64]        encoding(5 bytes) = e8 cb 22 ca ff
00fdh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
0100h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F45ADA0h:jmp64]                encoding(5 bytes) = e8 9b ac 45 5f
0105h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> neqBytes => new byte[262]{0x41,0x57,0x41,0x56,0x41,0x54,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x60,0xC5,0xF8,0x77,0x48,0x8B,0xF1,0x48,0x8D,0x7C,0x24,0x28,0xB9,0x0C,0x00,0x00,0x00,0x33,0xC0,0xF3,0xAB,0x48,0x8B,0xCE,0x48,0x8B,0xD9,0x48,0x8B,0xF2,0x49,0x8B,0xF8,0xBD,0xC7,0x00,0x00,0x00,0x41,0xBE,0x01,0x00,0x00,0x00,0x44,0x8B,0x7E,0x08,0x44,0x8B,0x67,0x08,0x45,0x3B,0xFC,0x75,0x65,0x49,0x63,0xD7,0x48,0xB9,0xE8,0x98,0xFF,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x98,0xD8,0x47,0x5F,0x48,0x8D,0x48,0x10,0x8B,0x50,0x08,0x4C,0x8B,0xC3,0xC5,0xFA,0x6F,0x06,0xC5,0xFA,0x7F,0x44,0x24,0x48,0xC5,0xFA,0x6F,0x07,0xC5,0xFA,0x7F,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0x49,0x89,0x09,0x41,0x89,0x51,0x08,0x49,0x8B,0xC8,0x48,0x8D,0x54,0x24,0x48,0x4C,0x8D,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0xE8,0x57,0xF1,0xFF,0xFF,0x48,0x8B,0xC3,0x48,0x83,0xC4,0x60,0x5B,0x5D,0x5E,0x5F,0x41,0x5C,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0xF7,0x0C,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xB1,0x7C,0x47,0x5F,0x48,0x8B,0xF0,0xB9,0xFF,0x0C,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x9A,0x7C,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x58,0x45,0x88,0x30,0x41,0x89,0x68,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCF,0x41,0x8B,0xD4,0x48,0x8B,0x44,0x24,0x58,0x48,0x89,0x44,0x24,0x20,0xE8,0xCB,0x22,0xCA,0xFF,0x48,0x8B,0xC8,0xE8,0x9B,0xAC,0x45,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> neq(ReadOnlySpan<float> lhs, ReadOnlySpan<float> rhs)
; location: [7FFC872BBCE0h, 7FFC872BBDE5h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push r12                      ; PUSH(Push_r64) [R12]                                 encoding(2 bytes) = 41 54
0006h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0007h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0008h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0009h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
000ah sub rsp,60h                   ; SUB(Sub_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 ec 60
000eh vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0011h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0014h lea rdi,[rsp+28h]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 7c 24 28
0019h mov ecx,0Ch                   ; MOV(Mov_r32_imm32) [ECX,ch:imm32]                    encoding(5 bytes) = b9 0c 00 00 00
001eh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0020h rep stosd                     ; STOSD(Stosd_m32_EAX) [mem(32u),EAX]                  encoding(2 bytes) = f3 ab
0022h mov rcx,rsi                   ; MOV(Mov_r64_rm64) [RCX,RSI]                          encoding(3 bytes) = 48 8b ce
0025h mov rbx,rcx                   ; MOV(Mov_r64_rm64) [RBX,RCX]                          encoding(3 bytes) = 48 8b d9
0028h mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
002bh mov rdi,r8                    ; MOV(Mov_r64_rm64) [RDI,R8]                           encoding(3 bytes) = 49 8b f8
002eh mov ebp,0CBh                  ; MOV(Mov_r32_imm32) [EBP,cbh:imm32]                   encoding(5 bytes) = bd cb 00 00 00
0033h mov r14d,1                    ; MOV(Mov_r32_imm32) [R14D,1h:imm32]                   encoding(6 bytes) = 41 be 01 00 00 00
0039h mov r15d,[rsi+8]              ; MOV(Mov_r32_rm32) [R15D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 8b 7e 08
003dh mov r12d,[rdi+8]              ; MOV(Mov_r32_rm32) [R12D,mem(32u,RDI:br,DS:sr)]       encoding(4 bytes) = 44 8b 67 08
0041h cmp r15d,r12d                 ; CMP(Cmp_r32_rm32) [R15D,R12D]                        encoding(3 bytes) = 45 3b fc
0044h jne short 00abh               ; JNE(Jne_rel8_64) [ABh:jmp64]                         encoding(2 bytes) = 75 65
0046h movsxd rdx,r15d               ; MOVSXD(Movsxd_r64_rm32) [RDX,R15D]                   encoding(3 bytes) = 49 63 d7
0049h mov rcx,7FFC86FF98E8h         ; MOV(Mov_r64_imm64) [RCX,7ffc86ff98e8h:imm64]         encoding(10 bytes) = 48 b9 e8 98 ff 86 fc 7f 00 00
0053h call 7FFCE67394A0h            ; CALL(Call_rel32_64) [5F47D7C0h:jmp64]                encoding(5 bytes) = e8 68 d7 47 5f
0058h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
005ch mov edx,[rax+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 50 08
005fh mov r8,rbx                    ; MOV(Mov_r64_rm64) [R8,RBX]                           encoding(3 bytes) = 4c 8b c3
0062h vmovdqu xmm0,xmmword ptr [rsi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 06
0066h vmovdqu xmmword ptr [rsp+48h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 48
006ch vmovdqu xmm0,xmmword ptr [rdi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RDI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 07
0070h vmovdqu xmmword ptr [rsp+38h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 38
0076h lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
007bh mov [r9],rcx                  ; MOV(Mov_rm64_r64) [mem(64u,R9:br,DS:sr),RCX]         encoding(3 bytes) = 49 89 09
007eh mov [r9+8],edx                ; MOV(Mov_rm32_r32) [mem(32u,R9:br,DS:sr),EDX]         encoding(4 bytes) = 41 89 51 08
0082h mov rcx,r8                    ; MOV(Mov_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 8b c8
0085h lea rdx,[rsp+48h]             ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 54 24 48
008ah lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
008fh lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
0094h call 7FFC872BAE30h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFF150h:jmp64]        encoding(5 bytes) = e8 b7 f0 ff ff
0099h mov rax,rbx                   ; MOV(Mov_r64_rm64) [RAX,RBX]                          encoding(3 bytes) = 48 8b c3
009ch add rsp,60h                   ; ADD(Add_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 c4 60
00a0h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
00a1h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
00a2h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
00a3h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
00a4h pop r12                       ; POP(Pop_r64) [R12]                                   encoding(2 bytes) = 41 5c
00a6h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
00a8h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
00aah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
00abh mov ecx,0CF7h                 ; MOV(Mov_r32_imm32) [ECX,cf7h:imm32]                  encoding(5 bytes) = b9 f7 0c 00 00
00b0h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00bah call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F477C40h:jmp64]                encoding(5 bytes) = e8 81 7b 47 5f
00bfh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
00c2h mov ecx,0CFFh                 ; MOV(Mov_r32_imm32) [ECX,cffh:imm32]                  encoding(5 bytes) = b9 ff 0c 00 00
00c7h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00d1h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F477C40h:jmp64]                encoding(5 bytes) = e8 6a 7b 47 5f
00d6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00d9h lea r8,[rsp+58h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 58
00deh mov [r8],r14b                 ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),R14L]           encoding(3 bytes) = 45 88 30
00e1h mov [r8+4],ebp                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBP]         encoding(4 bytes) = 41 89 68 04
00e5h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00e8h mov ecx,r15d                  ; MOV(Mov_r32_rm32) [ECX,R15D]                         encoding(3 bytes) = 41 8b cf
00ebh mov edx,r12d                  ; MOV(Mov_r32_rm32) [EDX,R12D]                         encoding(3 bytes) = 41 8b d4
00eeh mov rax,[rsp+58h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 58
00f3h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00f8h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFCA2298h:jmp64]        encoding(5 bytes) = e8 9b 21 ca ff
00fdh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
0100h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F45AC70h:jmp64]                encoding(5 bytes) = e8 6b ab 45 5f
0105h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> neqBytes => new byte[262]{0x41,0x57,0x41,0x56,0x41,0x54,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x60,0xC5,0xF8,0x77,0x48,0x8B,0xF1,0x48,0x8D,0x7C,0x24,0x28,0xB9,0x0C,0x00,0x00,0x00,0x33,0xC0,0xF3,0xAB,0x48,0x8B,0xCE,0x48,0x8B,0xD9,0x48,0x8B,0xF2,0x49,0x8B,0xF8,0xBD,0xCB,0x00,0x00,0x00,0x41,0xBE,0x01,0x00,0x00,0x00,0x44,0x8B,0x7E,0x08,0x44,0x8B,0x67,0x08,0x45,0x3B,0xFC,0x75,0x65,0x49,0x63,0xD7,0x48,0xB9,0xE8,0x98,0xFF,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x68,0xD7,0x47,0x5F,0x48,0x8D,0x48,0x10,0x8B,0x50,0x08,0x4C,0x8B,0xC3,0xC5,0xFA,0x6F,0x06,0xC5,0xFA,0x7F,0x44,0x24,0x48,0xC5,0xFA,0x6F,0x07,0xC5,0xFA,0x7F,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0x49,0x89,0x09,0x41,0x89,0x51,0x08,0x49,0x8B,0xC8,0x48,0x8D,0x54,0x24,0x48,0x4C,0x8D,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0xE8,0xB7,0xF0,0xFF,0xFF,0x48,0x8B,0xC3,0x48,0x83,0xC4,0x60,0x5B,0x5D,0x5E,0x5F,0x41,0x5C,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0xF7,0x0C,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x81,0x7B,0x47,0x5F,0x48,0x8B,0xF0,0xB9,0xFF,0x0C,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x6A,0x7B,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x58,0x45,0x88,0x30,0x41,0x89,0x68,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCF,0x41,0x8B,0xD4,0x48,0x8B,0x44,0x24,0x58,0x48,0x89,0x44,0x24,0x20,0xE8,0x9B,0x21,0xCA,0xFF,0x48,0x8B,0xC8,0xE8,0x6B,0xAB,0x45,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> neq(ReadOnlySpan<double> lhs, ReadOnlySpan<double> rhs)
; location: [7FFC872BBE10h, 7FFC872BBF15h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push r12                      ; PUSH(Push_r64) [R12]                                 encoding(2 bytes) = 41 54
0006h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0007h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0008h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0009h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
000ah sub rsp,60h                   ; SUB(Sub_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 ec 60
000eh vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0011h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0014h lea rdi,[rsp+28h]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 7c 24 28
0019h mov ecx,0Ch                   ; MOV(Mov_r32_imm32) [ECX,ch:imm32]                    encoding(5 bytes) = b9 0c 00 00 00
001eh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0020h rep stosd                     ; STOSD(Stosd_m32_EAX) [mem(32u),EAX]                  encoding(2 bytes) = f3 ab
0022h mov rcx,rsi                   ; MOV(Mov_r64_rm64) [RCX,RSI]                          encoding(3 bytes) = 48 8b ce
0025h mov rbx,rcx                   ; MOV(Mov_r64_rm64) [RBX,RCX]                          encoding(3 bytes) = 48 8b d9
0028h mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
002bh mov rdi,r8                    ; MOV(Mov_r64_rm64) [RDI,R8]                           encoding(3 bytes) = 49 8b f8
002eh mov ebp,0CFh                  ; MOV(Mov_r32_imm32) [EBP,cfh:imm32]                   encoding(5 bytes) = bd cf 00 00 00
0033h mov r14d,1                    ; MOV(Mov_r32_imm32) [R14D,1h:imm32]                   encoding(6 bytes) = 41 be 01 00 00 00
0039h mov r15d,[rsi+8]              ; MOV(Mov_r32_rm32) [R15D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 8b 7e 08
003dh mov r12d,[rdi+8]              ; MOV(Mov_r32_rm32) [R12D,mem(32u,RDI:br,DS:sr)]       encoding(4 bytes) = 44 8b 67 08
0041h cmp r15d,r12d                 ; CMP(Cmp_r32_rm32) [R15D,R12D]                        encoding(3 bytes) = 45 3b fc
0044h jne short 00abh               ; JNE(Jne_rel8_64) [ABh:jmp64]                         encoding(2 bytes) = 75 65
0046h movsxd rdx,r15d               ; MOVSXD(Movsxd_r64_rm32) [RDX,R15D]                   encoding(3 bytes) = 49 63 d7
0049h mov rcx,7FFC86FF98E8h         ; MOV(Mov_r64_imm64) [RCX,7ffc86ff98e8h:imm64]         encoding(10 bytes) = 48 b9 e8 98 ff 86 fc 7f 00 00
0053h call 7FFCE67394A0h            ; CALL(Call_rel32_64) [5F47D690h:jmp64]                encoding(5 bytes) = e8 38 d6 47 5f
0058h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
005ch mov edx,[rax+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 50 08
005fh mov r8,rbx                    ; MOV(Mov_r64_rm64) [R8,RBX]                           encoding(3 bytes) = 4c 8b c3
0062h vmovdqu xmm0,xmmword ptr [rsi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 06
0066h vmovdqu xmmword ptr [rsp+48h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 48
006ch vmovdqu xmm0,xmmword ptr [rdi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RDI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 07
0070h vmovdqu xmmword ptr [rsp+38h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 38
0076h lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
007bh mov [r9],rcx                  ; MOV(Mov_rm64_r64) [mem(64u,R9:br,DS:sr),RCX]         encoding(3 bytes) = 49 89 09
007eh mov [r9+8],edx                ; MOV(Mov_rm32_r32) [mem(32u,R9:br,DS:sr),EDX]         encoding(4 bytes) = 41 89 51 08
0082h mov rcx,r8                    ; MOV(Mov_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 8b c8
0085h lea rdx,[rsp+48h]             ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 54 24 48
008ah lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
008fh lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
0094h call 7FFC872BAEC0h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFF0B0h:jmp64]        encoding(5 bytes) = e8 17 f0 ff ff
0099h mov rax,rbx                   ; MOV(Mov_r64_rm64) [RAX,RBX]                          encoding(3 bytes) = 48 8b c3
009ch add rsp,60h                   ; ADD(Add_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 c4 60
00a0h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
00a1h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
00a2h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
00a3h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
00a4h pop r12                       ; POP(Pop_r64) [R12]                                   encoding(2 bytes) = 41 5c
00a6h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
00a8h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
00aah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
00abh mov ecx,0CF7h                 ; MOV(Mov_r32_imm32) [ECX,cf7h:imm32]                  encoding(5 bytes) = b9 f7 0c 00 00
00b0h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00bah call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F477B10h:jmp64]                encoding(5 bytes) = e8 51 7a 47 5f
00bfh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
00c2h mov ecx,0CFFh                 ; MOV(Mov_r32_imm32) [ECX,cffh:imm32]                  encoding(5 bytes) = b9 ff 0c 00 00
00c7h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00d1h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F477B10h:jmp64]                encoding(5 bytes) = e8 3a 7a 47 5f
00d6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00d9h lea r8,[rsp+58h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 58
00deh mov [r8],r14b                 ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),R14L]           encoding(3 bytes) = 45 88 30
00e1h mov [r8+4],ebp                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBP]         encoding(4 bytes) = 41 89 68 04
00e5h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00e8h mov ecx,r15d                  ; MOV(Mov_r32_rm32) [ECX,R15D]                         encoding(3 bytes) = 41 8b cf
00ebh mov edx,r12d                  ; MOV(Mov_r32_rm32) [EDX,R12D]                         encoding(3 bytes) = 41 8b d4
00eeh mov rax,[rsp+58h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 58
00f3h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00f8h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFCA2168h:jmp64]        encoding(5 bytes) = e8 6b 20 ca ff
00fdh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
0100h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F45AB40h:jmp64]                encoding(5 bytes) = e8 3b aa 45 5f
0105h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> neqBytes => new byte[262]{0x41,0x57,0x41,0x56,0x41,0x54,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x60,0xC5,0xF8,0x77,0x48,0x8B,0xF1,0x48,0x8D,0x7C,0x24,0x28,0xB9,0x0C,0x00,0x00,0x00,0x33,0xC0,0xF3,0xAB,0x48,0x8B,0xCE,0x48,0x8B,0xD9,0x48,0x8B,0xF2,0x49,0x8B,0xF8,0xBD,0xCF,0x00,0x00,0x00,0x41,0xBE,0x01,0x00,0x00,0x00,0x44,0x8B,0x7E,0x08,0x44,0x8B,0x67,0x08,0x45,0x3B,0xFC,0x75,0x65,0x49,0x63,0xD7,0x48,0xB9,0xE8,0x98,0xFF,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x38,0xD6,0x47,0x5F,0x48,0x8D,0x48,0x10,0x8B,0x50,0x08,0x4C,0x8B,0xC3,0xC5,0xFA,0x6F,0x06,0xC5,0xFA,0x7F,0x44,0x24,0x48,0xC5,0xFA,0x6F,0x07,0xC5,0xFA,0x7F,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0x49,0x89,0x09,0x41,0x89,0x51,0x08,0x49,0x8B,0xC8,0x48,0x8D,0x54,0x24,0x48,0x4C,0x8D,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0xE8,0x17,0xF0,0xFF,0xFF,0x48,0x8B,0xC3,0x48,0x83,0xC4,0x60,0x5B,0x5D,0x5E,0x5F,0x41,0x5C,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0xF7,0x0C,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x51,0x7A,0x47,0x5F,0x48,0x8B,0xF0,0xB9,0xFF,0x0C,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x3A,0x7A,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x58,0x45,0x88,0x30,0x41,0x89,0x68,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCF,0x41,0x8B,0xD4,0x48,0x8B,0x44,0x24,0x58,0x48,0x89,0x44,0x24,0x20,0xE8,0x6B,0x20,0xCA,0xFF,0x48,0x8B,0xC8,0xE8,0x3B,0xAA,0x45,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool nonneg(sbyte src)
; location: [7FFC872BBF40h, 7FFC872BBF51h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cl                  ; MOVSX(Movsx_r64_rm8) [RAX,CL]                        encoding(4 bytes) = 48 0f be c1
0009h test eax,eax                  ; TEST(Test_rm32_r32) [EAX,EAX]                        encoding(2 bytes) = 85 c0
000bh setge al                      ; SETGE(Setge_rm8) [AL]                                encoding(3 bytes) = 0f 9d c0
000eh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> nonnegBytes => new byte[18]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBE,0xC1,0x85,0xC0,0x0F,0x9D,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool nonneg(short src)
; location: [7FFC872BBF70h, 7FFC872BBF81h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cx                  ; MOVSX(Movsx_r64_rm16) [RAX,CX]                       encoding(4 bytes) = 48 0f bf c1
0009h test eax,eax                  ; TEST(Test_rm32_r32) [EAX,EAX]                        encoding(2 bytes) = 85 c0
000bh setge al                      ; SETGE(Setge_rm8) [AL]                                encoding(3 bytes) = 0f 9d c0
000eh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> nonnegBytes => new byte[18]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBF,0xC1,0x85,0xC0,0x0F,0x9D,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool nonneg(int src)
; location: [7FFC872BBFA0h, 7FFC872BBFADh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
0007h setge al                      ; SETGE(Setge_rm8) [AL]                                encoding(3 bytes) = 0f 9d c0
000ah movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> nonnegBytes => new byte[14]{0x0F,0x1F,0x44,0x00,0x00,0x85,0xC9,0x0F,0x9D,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool nonneg(long src)
; location: [7FFC872BBFC0h, 7FFC872BBFCEh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h test rcx,rcx                  ; TEST(Test_rm64_r64) [RCX,RCX]                        encoding(3 bytes) = 48 85 c9
0008h setge al                      ; SETGE(Setge_rm8) [AL]                                encoding(3 bytes) = 0f 9d c0
000bh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> nonnegBytes => new byte[15]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x85,0xC9,0x0F,0x9D,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool nonneg(float src)
; location: [7FFC872BBFE0h, 7FFC872BBFF3h]
0000h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0003h xchg ax,ax                    ; NOP(Nopw)                                            encoding(2 bytes) = 66 90
0005h vxorps xmm1,xmm1,xmm1         ; VXORPS(VEX_Vxorps_xmm_xmm_xmmm128) [XMM1,XMM1,XMM1]  encoding(VEX, 4 bytes) = c5 f0 57 c9
0009h vucomiss xmm0,xmm1            ; VUCOMISS(VEX_Vucomiss_xmm_xmmm32) [XMM0,XMM1]        encoding(VEX, 4 bytes) = c5 f8 2e c1
000dh setae al                      ; SETAE(Setae_rm8) [AL]                                encoding(3 bytes) = 0f 93 c0
0010h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> nonnegBytes => new byte[20]{0xC5,0xF8,0x77,0x66,0x90,0xC5,0xF0,0x57,0xC9,0xC5,0xF8,0x2E,0xC1,0x0F,0x93,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool nonneg(double src)
; location: [7FFC872BC010h, 7FFC872BC023h]
0000h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0003h xchg ax,ax                    ; NOP(Nopw)                                            encoding(2 bytes) = 66 90
0005h vxorps xmm1,xmm1,xmm1         ; VXORPS(VEX_Vxorps_xmm_xmm_xmmm128) [XMM1,XMM1,XMM1]  encoding(VEX, 4 bytes) = c5 f0 57 c9
0009h vucomisd xmm0,xmm1            ; VUCOMISD(VEX_Vucomisd_xmm_xmmm64) [XMM0,XMM1]        encoding(VEX, 4 bytes) = c5 f9 2e c1
000dh setae al                      ; SETAE(Setae_rm8) [AL]                                encoding(3 bytes) = 0f 93 c0
0010h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> nonnegBytes => new byte[20]{0xC5,0xF8,0x77,0x66,0x90,0xC5,0xF0,0x57,0xC9,0xC5,0xF9,0x2E,0xC1,0x0F,0x93,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool nonzero(sbyte src)
; location: [7FFC872BC040h, 7FFC872BC051h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cl                  ; MOVSX(Movsx_r64_rm8) [RAX,CL]                        encoding(4 bytes) = 48 0f be c1
0009h test eax,eax                  ; TEST(Test_rm32_r32) [EAX,EAX]                        encoding(2 bytes) = 85 c0
000bh setne al                      ; SETNE(Setne_rm8) [AL]                                encoding(3 bytes) = 0f 95 c0
000eh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> nonzeroBytes => new byte[18]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBE,0xC1,0x85,0xC0,0x0F,0x95,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool nonzero(byte src)
; location: [7FFC872BC070h, 7FFC872BC07Dh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h test cl,cl                    ; TEST(Test_rm8_r8) [CL,CL]                            encoding(2 bytes) = 84 c9
0007h setne al                      ; SETNE(Setne_rm8) [AL]                                encoding(3 bytes) = 0f 95 c0
000ah movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> nonzeroBytes => new byte[14]{0x0F,0x1F,0x44,0x00,0x00,0x84,0xC9,0x0F,0x95,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool nonzero(short src)
; location: [7FFC872BC090h, 7FFC872BC0A1h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cx                  ; MOVSX(Movsx_r64_rm16) [RAX,CX]                       encoding(4 bytes) = 48 0f bf c1
0009h test eax,eax                  ; TEST(Test_rm32_r32) [EAX,EAX]                        encoding(2 bytes) = 85 c0
000bh setne al                      ; SETNE(Setne_rm8) [AL]                                encoding(3 bytes) = 0f 95 c0
000eh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> nonzeroBytes => new byte[18]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBF,0xC1,0x85,0xC0,0x0F,0x95,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool nonzero(ushort src)
; location: [7FFC872BC0C0h, 7FFC872BC0D0h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cx                  ; MOVZX(Movzx_r32_rm16) [EAX,CX]                       encoding(3 bytes) = 0f b7 c1
0008h test eax,eax                  ; TEST(Test_rm32_r32) [EAX,EAX]                        encoding(2 bytes) = 85 c0
000ah setne al                      ; SETNE(Setne_rm8) [AL]                                encoding(3 bytes) = 0f 95 c0
000dh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0010h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> nonzeroBytes => new byte[17]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB7,0xC1,0x85,0xC0,0x0F,0x95,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool nonzero(int src)
; location: [7FFC872BC0F0h, 7FFC872BC0FDh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
0007h setne al                      ; SETNE(Setne_rm8) [AL]                                encoding(3 bytes) = 0f 95 c0
000ah movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> nonzeroBytes => new byte[14]{0x0F,0x1F,0x44,0x00,0x00,0x85,0xC9,0x0F,0x95,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool nonzero(uint src)
; location: [7FFC872BC110h, 7FFC872BC11Dh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
0007h setne al                      ; SETNE(Setne_rm8) [AL]                                encoding(3 bytes) = 0f 95 c0
000ah movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> nonzeroBytes => new byte[14]{0x0F,0x1F,0x44,0x00,0x00,0x85,0xC9,0x0F,0x95,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool nonzero(long src)
; location: [7FFC872BC130h, 7FFC872BC13Eh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h test rcx,rcx                  ; TEST(Test_rm64_r64) [RCX,RCX]                        encoding(3 bytes) = 48 85 c9
0008h setne al                      ; SETNE(Setne_rm8) [AL]                                encoding(3 bytes) = 0f 95 c0
000bh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> nonzeroBytes => new byte[15]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x85,0xC9,0x0F,0x95,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool nonzero(ulong src)
; location: [7FFC872BC150h, 7FFC872BC15Eh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h test rcx,rcx                  ; TEST(Test_rm64_r64) [RCX,RCX]                        encoding(3 bytes) = 48 85 c9
0008h setne al                      ; SETNE(Setne_rm8) [AL]                                encoding(3 bytes) = 0f 95 c0
000bh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> nonzeroBytes => new byte[15]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x85,0xC9,0x0F,0x95,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool nonzero(float src)
; location: [7FFC872BC170h, 7FFC872BC188h]
0000h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0003h xchg ax,ax                    ; NOP(Nopw)                                            encoding(2 bytes) = 66 90
0005h vxorps xmm1,xmm1,xmm1         ; VXORPS(VEX_Vxorps_xmm_xmm_xmmm128) [XMM1,XMM1,XMM1]  encoding(VEX, 4 bytes) = c5 f0 57 c9
0009h vucomiss xmm0,xmm1            ; VUCOMISS(VEX_Vucomiss_xmm_xmmm32) [XMM0,XMM1]        encoding(VEX, 4 bytes) = c5 f8 2e c1
000dh setp al                       ; SETP(Setp_rm8) [AL]                                  encoding(3 bytes) = 0f 9a c0
0010h jp short 0015h                ; JP(Jp_rel8_64) [15h:jmp64]                           encoding(2 bytes) = 7a 03
0012h setne al                      ; SETNE(Setne_rm8) [AL]                                encoding(3 bytes) = 0f 95 c0
0015h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0018h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> nonzeroBytes => new byte[25]{0xC5,0xF8,0x77,0x66,0x90,0xC5,0xF0,0x57,0xC9,0xC5,0xF8,0x2E,0xC1,0x0F,0x9A,0xC0,0x7A,0x03,0x0F,0x95,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool nonzero(double src)
; location: [7FFC872BC1A0h, 7FFC872BC1B8h]
0000h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0003h xchg ax,ax                    ; NOP(Nopw)                                            encoding(2 bytes) = 66 90
0005h vxorps xmm1,xmm1,xmm1         ; VXORPS(VEX_Vxorps_xmm_xmm_xmmm128) [XMM1,XMM1,XMM1]  encoding(VEX, 4 bytes) = c5 f0 57 c9
0009h vucomisd xmm0,xmm1            ; VUCOMISD(VEX_Vucomisd_xmm_xmmm64) [XMM0,XMM1]        encoding(VEX, 4 bytes) = c5 f9 2e c1
000dh setp al                       ; SETP(Setp_rm8) [AL]                                  encoding(3 bytes) = 0f 9a c0
0010h jp short 0015h                ; JP(Jp_rel8_64) [15h:jmp64]                           encoding(2 bytes) = 7a 03
0012h setne al                      ; SETNE(Setne_rm8) [AL]                                encoding(3 bytes) = 0f 95 c0
0015h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0018h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> nonzeroBytes => new byte[25]{0xC5,0xF8,0x77,0x66,0x90,0xC5,0xF0,0x57,0xC9,0xC5,0xF9,0x2E,0xC1,0x0F,0x9A,0xC0,0x7A,0x03,0x0F,0x95,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: sbyte or(sbyte lhs, sbyte rhs)
; location: [7FFC872BC1D0h, 7FFC872BC1E3h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cl                  ; MOVSX(Movsx_r64_rm8) [RAX,CL]                        encoding(4 bytes) = 48 0f be c1
0009h movsx rdx,dl                  ; MOVSX(Movsx_r64_rm8) [RDX,DL]                        encoding(4 bytes) = 48 0f be d2
000dh or eax,edx                    ; OR(Or_r32_rm32) [EAX,EDX]                            encoding(2 bytes) = 0b c2
000fh movsx rax,al                  ; MOVSX(Movsx_r64_rm8) [RAX,AL]                        encoding(4 bytes) = 48 0f be c0
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> orBytes => new byte[20]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBE,0xC1,0x48,0x0F,0xBE,0xD2,0x0B,0xC2,0x48,0x0F,0xBE,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: byte or(byte lhs, byte rhs)
; location: [7FFC872BC200h, 7FFC872BC210h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0008h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
000bh or eax,edx                    ; OR(Or_r32_rm32) [EAX,EDX]                            encoding(2 bytes) = 0b c2
000dh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0010h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> orBytes => new byte[17]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC1,0x0F,0xB6,0xD2,0x0B,0xC2,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: short or(short lhs, short rhs)
; location: [7FFC872BC230h, 7FFC872BC243h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cx                  ; MOVSX(Movsx_r64_rm16) [RAX,CX]                       encoding(4 bytes) = 48 0f bf c1
0009h movsx rdx,dx                  ; MOVSX(Movsx_r64_rm16) [RDX,DX]                       encoding(4 bytes) = 48 0f bf d2
000dh or eax,edx                    ; OR(Or_r32_rm32) [EAX,EDX]                            encoding(2 bytes) = 0b c2
000fh movsx rax,ax                  ; MOVSX(Movsx_r64_rm16) [RAX,AX]                       encoding(4 bytes) = 48 0f bf c0
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> orBytes => new byte[20]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBF,0xC1,0x48,0x0F,0xBF,0xD2,0x0B,0xC2,0x48,0x0F,0xBF,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ushort or(ushort lhs, ushort rhs)
; location: [7FFC872BC260h, 7FFC872BC270h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cx                  ; MOVZX(Movzx_r32_rm16) [EAX,CX]                       encoding(3 bytes) = 0f b7 c1
0008h movzx edx,dx                  ; MOVZX(Movzx_r32_rm16) [EDX,DX]                       encoding(3 bytes) = 0f b7 d2
000bh or eax,edx                    ; OR(Or_r32_rm32) [EAX,EDX]                            encoding(2 bytes) = 0b c2
000dh movzx eax,ax                  ; MOVZX(Movzx_r32_rm16) [EAX,AX]                       encoding(3 bytes) = 0f b7 c0
0010h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> orBytes => new byte[17]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB7,0xC1,0x0F,0xB7,0xD2,0x0B,0xC2,0x0F,0xB7,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> lt(ReadOnlySpan<short> lhs, ReadOnlySpan<short> rhs)
; location: [7FFC872BC290h, 7FFC872BC395h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push r12                      ; PUSH(Push_r64) [R12]                                 encoding(2 bytes) = 41 54
0006h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0007h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0008h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0009h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
000ah sub rsp,60h                   ; SUB(Sub_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 ec 60
000eh vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0011h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0014h lea rdi,[rsp+28h]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 7c 24 28
0019h mov ecx,0Ch                   ; MOV(Mov_r32_imm32) [ECX,ch:imm32]                    encoding(5 bytes) = b9 0c 00 00 00
001eh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0020h rep stosd                     ; STOSD(Stosd_m32_EAX) [mem(32u),EAX]                  encoding(2 bytes) = f3 ab
0022h mov rcx,rsi                   ; MOV(Mov_r64_rm64) [RCX,RSI]                          encoding(3 bytes) = 48 8b ce
0025h mov rbx,rcx                   ; MOV(Mov_r64_rm64) [RBX,RCX]                          encoding(3 bytes) = 48 8b d9
0028h mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
002bh mov rdi,r8                    ; MOV(Mov_r64_rm64) [RDI,R8]                           encoding(3 bytes) = 49 8b f8
002eh mov ebp,8Bh                   ; MOV(Mov_r32_imm32) [EBP,8bh:imm32]                   encoding(5 bytes) = bd 8b 00 00 00
0033h mov r14d,1                    ; MOV(Mov_r32_imm32) [R14D,1h:imm32]                   encoding(6 bytes) = 41 be 01 00 00 00
0039h mov r15d,[rsi+8]              ; MOV(Mov_r32_rm32) [R15D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 8b 7e 08
003dh mov r12d,[rdi+8]              ; MOV(Mov_r32_rm32) [R12D,mem(32u,RDI:br,DS:sr)]       encoding(4 bytes) = 44 8b 67 08
0041h cmp r15d,r12d                 ; CMP(Cmp_r32_rm32) [R15D,R12D]                        encoding(3 bytes) = 45 3b fc
0044h jne short 00abh               ; JNE(Jne_rel8_64) [ABh:jmp64]                         encoding(2 bytes) = 75 65
0046h movsxd rdx,r15d               ; MOVSXD(Movsxd_r64_rm32) [RDX,R15D]                   encoding(3 bytes) = 49 63 d7
0049h mov rcx,7FFC86FF98E8h         ; MOV(Mov_r64_imm64) [RCX,7ffc86ff98e8h:imm64]         encoding(10 bytes) = 48 b9 e8 98 ff 86 fc 7f 00 00
0053h call 7FFCE67394A0h            ; CALL(Call_rel32_64) [5F47D210h:jmp64]                encoding(5 bytes) = e8 b8 d1 47 5f
0058h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
005ch mov edx,[rax+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 50 08
005fh mov r8,rbx                    ; MOV(Mov_r64_rm64) [R8,RBX]                           encoding(3 bytes) = 4c 8b c3
0062h vmovdqu xmm0,xmmword ptr [rsi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 06
0066h vmovdqu xmmword ptr [rsp+48h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 48
006ch vmovdqu xmm0,xmmword ptr [rdi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RDI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 07
0070h vmovdqu xmmword ptr [rsp+38h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 38
0076h lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
007bh mov [r9],rcx                  ; MOV(Mov_rm64_r64) [mem(64u,R9:br,DS:sr),RCX]         encoding(3 bytes) = 49 89 09
007eh mov [r9+8],edx                ; MOV(Mov_rm32_r32) [mem(32u,R9:br,DS:sr),EDX]         encoding(4 bytes) = 41 89 51 08
0082h mov rcx,r8                    ; MOV(Mov_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 8b c8
0085h lea rdx,[rsp+48h]             ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 54 24 48
008ah lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
008fh lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
0094h call 7FFC86C18058h            ; CALL(Call_rel32_64) [FFFFFFFFFF95BDC8h:jmp64]        encoding(5 bytes) = e8 2f bd 95 ff
0099h mov rax,rbx                   ; MOV(Mov_r64_rm64) [RAX,RBX]                          encoding(3 bytes) = 48 8b c3
009ch add rsp,60h                   ; ADD(Add_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 c4 60
00a0h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
00a1h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
00a2h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
00a3h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
00a4h pop r12                       ; POP(Pop_r64) [R12]                                   encoding(2 bytes) = 41 5c
00a6h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
00a8h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
00aah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
00abh mov ecx,0B83h                 ; MOV(Mov_r32_imm32) [ECX,b83h:imm32]                  encoding(5 bytes) = b9 83 0b 00 00
00b0h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00bah call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F477690h:jmp64]                encoding(5 bytes) = e8 d1 75 47 5f
00bfh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
00c2h mov ecx,0B89h                 ; MOV(Mov_r32_imm32) [ECX,b89h:imm32]                  encoding(5 bytes) = b9 89 0b 00 00
00c7h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00d1h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F477690h:jmp64]                encoding(5 bytes) = e8 ba 75 47 5f
00d6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00d9h lea r8,[rsp+58h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 58
00deh mov [r8],r14b                 ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),R14L]           encoding(3 bytes) = 45 88 30
00e1h mov [r8+4],ebp                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBP]         encoding(4 bytes) = 41 89 68 04
00e5h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00e8h mov ecx,r15d                  ; MOV(Mov_r32_rm32) [ECX,R15D]                         encoding(3 bytes) = 41 8b cf
00ebh mov edx,r12d                  ; MOV(Mov_r32_rm32) [EDX,R12D]                         encoding(3 bytes) = 41 8b d4
00eeh mov rax,[rsp+58h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 58
00f3h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00f8h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFCA1CE8h:jmp64]        encoding(5 bytes) = e8 eb 1b ca ff
00fdh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
0100h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F45A6C0h:jmp64]                encoding(5 bytes) = e8 bb a5 45 5f
0105h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> ltBytes => new byte[262]{0x41,0x57,0x41,0x56,0x41,0x54,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x60,0xC5,0xF8,0x77,0x48,0x8B,0xF1,0x48,0x8D,0x7C,0x24,0x28,0xB9,0x0C,0x00,0x00,0x00,0x33,0xC0,0xF3,0xAB,0x48,0x8B,0xCE,0x48,0x8B,0xD9,0x48,0x8B,0xF2,0x49,0x8B,0xF8,0xBD,0x8B,0x00,0x00,0x00,0x41,0xBE,0x01,0x00,0x00,0x00,0x44,0x8B,0x7E,0x08,0x44,0x8B,0x67,0x08,0x45,0x3B,0xFC,0x75,0x65,0x49,0x63,0xD7,0x48,0xB9,0xE8,0x98,0xFF,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xB8,0xD1,0x47,0x5F,0x48,0x8D,0x48,0x10,0x8B,0x50,0x08,0x4C,0x8B,0xC3,0xC5,0xFA,0x6F,0x06,0xC5,0xFA,0x7F,0x44,0x24,0x48,0xC5,0xFA,0x6F,0x07,0xC5,0xFA,0x7F,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0x49,0x89,0x09,0x41,0x89,0x51,0x08,0x49,0x8B,0xC8,0x48,0x8D,0x54,0x24,0x48,0x4C,0x8D,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0xE8,0x2F,0xBD,0x95,0xFF,0x48,0x8B,0xC3,0x48,0x83,0xC4,0x60,0x5B,0x5D,0x5E,0x5F,0x41,0x5C,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0x83,0x0B,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xD1,0x75,0x47,0x5F,0x48,0x8B,0xF0,0xB9,0x89,0x0B,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xBA,0x75,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x58,0x45,0x88,0x30,0x41,0x89,0x68,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCF,0x41,0x8B,0xD4,0x48,0x8B,0x44,0x24,0x58,0x48,0x89,0x44,0x24,0x20,0xE8,0xEB,0x1B,0xCA,0xFF,0x48,0x8B,0xC8,0xE8,0xBB,0xA5,0x45,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> lt(ReadOnlySpan<ushort> lhs, ReadOnlySpan<ushort> rhs)
; location: [7FFC872BC3C0h, 7FFC872BC4C5h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push r12                      ; PUSH(Push_r64) [R12]                                 encoding(2 bytes) = 41 54
0006h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0007h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0008h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0009h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
000ah sub rsp,60h                   ; SUB(Sub_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 ec 60
000eh vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0011h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0014h lea rdi,[rsp+28h]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 7c 24 28
0019h mov ecx,0Ch                   ; MOV(Mov_r32_imm32) [ECX,ch:imm32]                    encoding(5 bytes) = b9 0c 00 00 00
001eh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0020h rep stosd                     ; STOSD(Stosd_m32_EAX) [mem(32u),EAX]                  encoding(2 bytes) = f3 ab
0022h mov rcx,rsi                   ; MOV(Mov_r64_rm64) [RCX,RSI]                          encoding(3 bytes) = 48 8b ce
0025h mov rbx,rcx                   ; MOV(Mov_r64_rm64) [RBX,RCX]                          encoding(3 bytes) = 48 8b d9
0028h mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
002bh mov rdi,r8                    ; MOV(Mov_r64_rm64) [RDI,R8]                           encoding(3 bytes) = 49 8b f8
002eh mov ebp,8Fh                   ; MOV(Mov_r32_imm32) [EBP,8fh:imm32]                   encoding(5 bytes) = bd 8f 00 00 00
0033h mov r14d,1                    ; MOV(Mov_r32_imm32) [R14D,1h:imm32]                   encoding(6 bytes) = 41 be 01 00 00 00
0039h mov r15d,[rsi+8]              ; MOV(Mov_r32_rm32) [R15D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 8b 7e 08
003dh mov r12d,[rdi+8]              ; MOV(Mov_r32_rm32) [R12D,mem(32u,RDI:br,DS:sr)]       encoding(4 bytes) = 44 8b 67 08
0041h cmp r15d,r12d                 ; CMP(Cmp_r32_rm32) [R15D,R12D]                        encoding(3 bytes) = 45 3b fc
0044h jne short 00abh               ; JNE(Jne_rel8_64) [ABh:jmp64]                         encoding(2 bytes) = 75 65
0046h movsxd rdx,r15d               ; MOVSXD(Movsxd_r64_rm32) [RDX,R15D]                   encoding(3 bytes) = 49 63 d7
0049h mov rcx,7FFC86FF98E8h         ; MOV(Mov_r64_imm64) [RCX,7ffc86ff98e8h:imm64]         encoding(10 bytes) = 48 b9 e8 98 ff 86 fc 7f 00 00
0053h call 7FFCE67394A0h            ; CALL(Call_rel32_64) [5F47D0E0h:jmp64]                encoding(5 bytes) = e8 88 d0 47 5f
0058h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
005ch mov edx,[rax+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 50 08
005fh mov r8,rbx                    ; MOV(Mov_r64_rm64) [R8,RBX]                           encoding(3 bytes) = 4c 8b c3
0062h vmovdqu xmm0,xmmword ptr [rsi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 06
0066h vmovdqu xmmword ptr [rsp+48h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 48
006ch vmovdqu xmm0,xmmword ptr [rdi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RDI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 07
0070h vmovdqu xmmword ptr [rsp+38h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 38
0076h lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
007bh mov [r9],rcx                  ; MOV(Mov_rm64_r64) [mem(64u,R9:br,DS:sr),RCX]         encoding(3 bytes) = 49 89 09
007eh mov [r9+8],edx                ; MOV(Mov_rm32_r32) [mem(32u,R9:br,DS:sr),EDX]         encoding(4 bytes) = 41 89 51 08
0082h mov rcx,r8                    ; MOV(Mov_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 8b c8
0085h lea rdx,[rsp+48h]             ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 54 24 48
008ah lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
008fh lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
0094h call 7FFC86C18060h            ; CALL(Call_rel32_64) [FFFFFFFFFF95BCA0h:jmp64]        encoding(5 bytes) = e8 07 bc 95 ff
0099h mov rax,rbx                   ; MOV(Mov_r64_rm64) [RAX,RBX]                          encoding(3 bytes) = 48 8b c3
009ch add rsp,60h                   ; ADD(Add_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 c4 60
00a0h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
00a1h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
00a2h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
00a3h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
00a4h pop r12                       ; POP(Pop_r64) [R12]                                   encoding(2 bytes) = 41 5c
00a6h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
00a8h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
00aah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
00abh mov ecx,0B83h                 ; MOV(Mov_r32_imm32) [ECX,b83h:imm32]                  encoding(5 bytes) = b9 83 0b 00 00
00b0h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00bah call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F477560h:jmp64]                encoding(5 bytes) = e8 a1 74 47 5f
00bfh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
00c2h mov ecx,0B89h                 ; MOV(Mov_r32_imm32) [ECX,b89h:imm32]                  encoding(5 bytes) = b9 89 0b 00 00
00c7h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00d1h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F477560h:jmp64]                encoding(5 bytes) = e8 8a 74 47 5f
00d6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00d9h lea r8,[rsp+58h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 58
00deh mov [r8],r14b                 ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),R14L]           encoding(3 bytes) = 45 88 30
00e1h mov [r8+4],ebp                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBP]         encoding(4 bytes) = 41 89 68 04
00e5h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00e8h mov ecx,r15d                  ; MOV(Mov_r32_rm32) [ECX,R15D]                         encoding(3 bytes) = 41 8b cf
00ebh mov edx,r12d                  ; MOV(Mov_r32_rm32) [EDX,R12D]                         encoding(3 bytes) = 41 8b d4
00eeh mov rax,[rsp+58h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 58
00f3h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00f8h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFCA1BB8h:jmp64]        encoding(5 bytes) = e8 bb 1a ca ff
00fdh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
0100h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F45A590h:jmp64]                encoding(5 bytes) = e8 8b a4 45 5f
0105h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> ltBytes => new byte[262]{0x41,0x57,0x41,0x56,0x41,0x54,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x60,0xC5,0xF8,0x77,0x48,0x8B,0xF1,0x48,0x8D,0x7C,0x24,0x28,0xB9,0x0C,0x00,0x00,0x00,0x33,0xC0,0xF3,0xAB,0x48,0x8B,0xCE,0x48,0x8B,0xD9,0x48,0x8B,0xF2,0x49,0x8B,0xF8,0xBD,0x8F,0x00,0x00,0x00,0x41,0xBE,0x01,0x00,0x00,0x00,0x44,0x8B,0x7E,0x08,0x44,0x8B,0x67,0x08,0x45,0x3B,0xFC,0x75,0x65,0x49,0x63,0xD7,0x48,0xB9,0xE8,0x98,0xFF,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x88,0xD0,0x47,0x5F,0x48,0x8D,0x48,0x10,0x8B,0x50,0x08,0x4C,0x8B,0xC3,0xC5,0xFA,0x6F,0x06,0xC5,0xFA,0x7F,0x44,0x24,0x48,0xC5,0xFA,0x6F,0x07,0xC5,0xFA,0x7F,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0x49,0x89,0x09,0x41,0x89,0x51,0x08,0x49,0x8B,0xC8,0x48,0x8D,0x54,0x24,0x48,0x4C,0x8D,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0xE8,0x07,0xBC,0x95,0xFF,0x48,0x8B,0xC3,0x48,0x83,0xC4,0x60,0x5B,0x5D,0x5E,0x5F,0x41,0x5C,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0x83,0x0B,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xA1,0x74,0x47,0x5F,0x48,0x8B,0xF0,0xB9,0x89,0x0B,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x8A,0x74,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x58,0x45,0x88,0x30,0x41,0x89,0x68,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCF,0x41,0x8B,0xD4,0x48,0x8B,0x44,0x24,0x58,0x48,0x89,0x44,0x24,0x20,0xE8,0xBB,0x1A,0xCA,0xFF,0x48,0x8B,0xC8,0xE8,0x8B,0xA4,0x45,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> lt(ReadOnlySpan<int> lhs, ReadOnlySpan<int> rhs)
; location: [7FFC872BC4F0h, 7FFC872BC5F5h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push r12                      ; PUSH(Push_r64) [R12]                                 encoding(2 bytes) = 41 54
0006h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0007h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0008h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0009h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
000ah sub rsp,60h                   ; SUB(Sub_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 ec 60
000eh vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0011h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0014h lea rdi,[rsp+28h]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 7c 24 28
0019h mov ecx,0Ch                   ; MOV(Mov_r32_imm32) [ECX,ch:imm32]                    encoding(5 bytes) = b9 0c 00 00 00
001eh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0020h rep stosd                     ; STOSD(Stosd_m32_EAX) [mem(32u),EAX]                  encoding(2 bytes) = f3 ab
0022h mov rcx,rsi                   ; MOV(Mov_r64_rm64) [RCX,RSI]                          encoding(3 bytes) = 48 8b ce
0025h mov rbx,rcx                   ; MOV(Mov_r64_rm64) [RBX,RCX]                          encoding(3 bytes) = 48 8b d9
0028h mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
002bh mov rdi,r8                    ; MOV(Mov_r64_rm64) [RDI,R8]                           encoding(3 bytes) = 49 8b f8
002eh mov ebp,93h                   ; MOV(Mov_r32_imm32) [EBP,93h:imm32]                   encoding(5 bytes) = bd 93 00 00 00
0033h mov r14d,1                    ; MOV(Mov_r32_imm32) [R14D,1h:imm32]                   encoding(6 bytes) = 41 be 01 00 00 00
0039h mov r15d,[rsi+8]              ; MOV(Mov_r32_rm32) [R15D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 8b 7e 08
003dh mov r12d,[rdi+8]              ; MOV(Mov_r32_rm32) [R12D,mem(32u,RDI:br,DS:sr)]       encoding(4 bytes) = 44 8b 67 08
0041h cmp r15d,r12d                 ; CMP(Cmp_r32_rm32) [R15D,R12D]                        encoding(3 bytes) = 45 3b fc
0044h jne short 00abh               ; JNE(Jne_rel8_64) [ABh:jmp64]                         encoding(2 bytes) = 75 65
0046h movsxd rdx,r15d               ; MOVSXD(Movsxd_r64_rm32) [RDX,R15D]                   encoding(3 bytes) = 49 63 d7
0049h mov rcx,7FFC86FF98E8h         ; MOV(Mov_r64_imm64) [RCX,7ffc86ff98e8h:imm64]         encoding(10 bytes) = 48 b9 e8 98 ff 86 fc 7f 00 00
0053h call 7FFCE67394A0h            ; CALL(Call_rel32_64) [5F47CFB0h:jmp64]                encoding(5 bytes) = e8 58 cf 47 5f
0058h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
005ch mov edx,[rax+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 50 08
005fh mov r8,rbx                    ; MOV(Mov_r64_rm64) [R8,RBX]                           encoding(3 bytes) = 4c 8b c3
0062h vmovdqu xmm0,xmmword ptr [rsi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 06
0066h vmovdqu xmmword ptr [rsp+48h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 48
006ch vmovdqu xmm0,xmmword ptr [rdi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RDI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 07
0070h vmovdqu xmmword ptr [rsp+38h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 38
0076h lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
007bh mov [r9],rcx                  ; MOV(Mov_rm64_r64) [mem(64u,R9:br,DS:sr),RCX]         encoding(3 bytes) = 49 89 09
007eh mov [r9+8],edx                ; MOV(Mov_rm32_r32) [mem(32u,R9:br,DS:sr),EDX]         encoding(4 bytes) = 41 89 51 08
0082h mov rcx,r8                    ; MOV(Mov_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 8b c8
0085h lea rdx,[rsp+48h]             ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 54 24 48
008ah lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
008fh lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
0094h call 7FFC86C18068h            ; CALL(Call_rel32_64) [FFFFFFFFFF95BB78h:jmp64]        encoding(5 bytes) = e8 df ba 95 ff
0099h mov rax,rbx                   ; MOV(Mov_r64_rm64) [RAX,RBX]                          encoding(3 bytes) = 48 8b c3
009ch add rsp,60h                   ; ADD(Add_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 c4 60
00a0h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
00a1h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
00a2h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
00a3h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
00a4h pop r12                       ; POP(Pop_r64) [R12]                                   encoding(2 bytes) = 41 5c
00a6h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
00a8h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
00aah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
00abh mov ecx,0B83h                 ; MOV(Mov_r32_imm32) [ECX,b83h:imm32]                  encoding(5 bytes) = b9 83 0b 00 00
00b0h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00bah call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F477430h:jmp64]                encoding(5 bytes) = e8 71 73 47 5f
00bfh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
00c2h mov ecx,0B89h                 ; MOV(Mov_r32_imm32) [ECX,b89h:imm32]                  encoding(5 bytes) = b9 89 0b 00 00
00c7h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00d1h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F477430h:jmp64]                encoding(5 bytes) = e8 5a 73 47 5f
00d6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00d9h lea r8,[rsp+58h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 58
00deh mov [r8],r14b                 ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),R14L]           encoding(3 bytes) = 45 88 30
00e1h mov [r8+4],ebp                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBP]         encoding(4 bytes) = 41 89 68 04
00e5h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00e8h mov ecx,r15d                  ; MOV(Mov_r32_rm32) [ECX,R15D]                         encoding(3 bytes) = 41 8b cf
00ebh mov edx,r12d                  ; MOV(Mov_r32_rm32) [EDX,R12D]                         encoding(3 bytes) = 41 8b d4
00eeh mov rax,[rsp+58h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 58
00f3h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00f8h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFCA1A88h:jmp64]        encoding(5 bytes) = e8 8b 19 ca ff
00fdh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
0100h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F45A460h:jmp64]                encoding(5 bytes) = e8 5b a3 45 5f
0105h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> ltBytes => new byte[262]{0x41,0x57,0x41,0x56,0x41,0x54,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x60,0xC5,0xF8,0x77,0x48,0x8B,0xF1,0x48,0x8D,0x7C,0x24,0x28,0xB9,0x0C,0x00,0x00,0x00,0x33,0xC0,0xF3,0xAB,0x48,0x8B,0xCE,0x48,0x8B,0xD9,0x48,0x8B,0xF2,0x49,0x8B,0xF8,0xBD,0x93,0x00,0x00,0x00,0x41,0xBE,0x01,0x00,0x00,0x00,0x44,0x8B,0x7E,0x08,0x44,0x8B,0x67,0x08,0x45,0x3B,0xFC,0x75,0x65,0x49,0x63,0xD7,0x48,0xB9,0xE8,0x98,0xFF,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x58,0xCF,0x47,0x5F,0x48,0x8D,0x48,0x10,0x8B,0x50,0x08,0x4C,0x8B,0xC3,0xC5,0xFA,0x6F,0x06,0xC5,0xFA,0x7F,0x44,0x24,0x48,0xC5,0xFA,0x6F,0x07,0xC5,0xFA,0x7F,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0x49,0x89,0x09,0x41,0x89,0x51,0x08,0x49,0x8B,0xC8,0x48,0x8D,0x54,0x24,0x48,0x4C,0x8D,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0xE8,0xDF,0xBA,0x95,0xFF,0x48,0x8B,0xC3,0x48,0x83,0xC4,0x60,0x5B,0x5D,0x5E,0x5F,0x41,0x5C,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0x83,0x0B,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x71,0x73,0x47,0x5F,0x48,0x8B,0xF0,0xB9,0x89,0x0B,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x5A,0x73,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x58,0x45,0x88,0x30,0x41,0x89,0x68,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCF,0x41,0x8B,0xD4,0x48,0x8B,0x44,0x24,0x58,0x48,0x89,0x44,0x24,0x20,0xE8,0x8B,0x19,0xCA,0xFF,0x48,0x8B,0xC8,0xE8,0x5B,0xA3,0x45,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> lt(ReadOnlySpan<uint> lhs, ReadOnlySpan<uint> rhs)
; location: [7FFC872BC620h, 7FFC872BC725h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push r12                      ; PUSH(Push_r64) [R12]                                 encoding(2 bytes) = 41 54
0006h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0007h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0008h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0009h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
000ah sub rsp,60h                   ; SUB(Sub_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 ec 60
000eh vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0011h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0014h lea rdi,[rsp+28h]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 7c 24 28
0019h mov ecx,0Ch                   ; MOV(Mov_r32_imm32) [ECX,ch:imm32]                    encoding(5 bytes) = b9 0c 00 00 00
001eh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0020h rep stosd                     ; STOSD(Stosd_m32_EAX) [mem(32u),EAX]                  encoding(2 bytes) = f3 ab
0022h mov rcx,rsi                   ; MOV(Mov_r64_rm64) [RCX,RSI]                          encoding(3 bytes) = 48 8b ce
0025h mov rbx,rcx                   ; MOV(Mov_r64_rm64) [RBX,RCX]                          encoding(3 bytes) = 48 8b d9
0028h mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
002bh mov rdi,r8                    ; MOV(Mov_r64_rm64) [RDI,R8]                           encoding(3 bytes) = 49 8b f8
002eh mov ebp,97h                   ; MOV(Mov_r32_imm32) [EBP,97h:imm32]                   encoding(5 bytes) = bd 97 00 00 00
0033h mov r14d,1                    ; MOV(Mov_r32_imm32) [R14D,1h:imm32]                   encoding(6 bytes) = 41 be 01 00 00 00
0039h mov r15d,[rsi+8]              ; MOV(Mov_r32_rm32) [R15D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 8b 7e 08
003dh mov r12d,[rdi+8]              ; MOV(Mov_r32_rm32) [R12D,mem(32u,RDI:br,DS:sr)]       encoding(4 bytes) = 44 8b 67 08
0041h cmp r15d,r12d                 ; CMP(Cmp_r32_rm32) [R15D,R12D]                        encoding(3 bytes) = 45 3b fc
0044h jne short 00abh               ; JNE(Jne_rel8_64) [ABh:jmp64]                         encoding(2 bytes) = 75 65
0046h movsxd rdx,r15d               ; MOVSXD(Movsxd_r64_rm32) [RDX,R15D]                   encoding(3 bytes) = 49 63 d7
0049h mov rcx,7FFC86FF98E8h         ; MOV(Mov_r64_imm64) [RCX,7ffc86ff98e8h:imm64]         encoding(10 bytes) = 48 b9 e8 98 ff 86 fc 7f 00 00
0053h call 7FFCE67394A0h            ; CALL(Call_rel32_64) [5F47CE80h:jmp64]                encoding(5 bytes) = e8 28 ce 47 5f
0058h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
005ch mov edx,[rax+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 50 08
005fh mov r8,rbx                    ; MOV(Mov_r64_rm64) [R8,RBX]                           encoding(3 bytes) = 4c 8b c3
0062h vmovdqu xmm0,xmmword ptr [rsi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 06
0066h vmovdqu xmmword ptr [rsp+48h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 48
006ch vmovdqu xmm0,xmmword ptr [rdi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RDI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 07
0070h vmovdqu xmmword ptr [rsp+38h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 38
0076h lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
007bh mov [r9],rcx                  ; MOV(Mov_rm64_r64) [mem(64u,R9:br,DS:sr),RCX]         encoding(3 bytes) = 49 89 09
007eh mov [r9+8],edx                ; MOV(Mov_rm32_r32) [mem(32u,R9:br,DS:sr),EDX]         encoding(4 bytes) = 41 89 51 08
0082h mov rcx,r8                    ; MOV(Mov_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 8b c8
0085h lea rdx,[rsp+48h]             ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 54 24 48
008ah lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
008fh lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
0094h call 7FFC86C18070h            ; CALL(Call_rel32_64) [FFFFFFFFFF95BA50h:jmp64]        encoding(5 bytes) = e8 b7 b9 95 ff
0099h mov rax,rbx                   ; MOV(Mov_r64_rm64) [RAX,RBX]                          encoding(3 bytes) = 48 8b c3
009ch add rsp,60h                   ; ADD(Add_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 c4 60
00a0h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
00a1h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
00a2h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
00a3h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
00a4h pop r12                       ; POP(Pop_r64) [R12]                                   encoding(2 bytes) = 41 5c
00a6h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
00a8h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
00aah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
00abh mov ecx,0B83h                 ; MOV(Mov_r32_imm32) [ECX,b83h:imm32]                  encoding(5 bytes) = b9 83 0b 00 00
00b0h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00bah call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F477300h:jmp64]                encoding(5 bytes) = e8 41 72 47 5f
00bfh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
00c2h mov ecx,0B89h                 ; MOV(Mov_r32_imm32) [ECX,b89h:imm32]                  encoding(5 bytes) = b9 89 0b 00 00
00c7h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00d1h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F477300h:jmp64]                encoding(5 bytes) = e8 2a 72 47 5f
00d6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00d9h lea r8,[rsp+58h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 58
00deh mov [r8],r14b                 ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),R14L]           encoding(3 bytes) = 45 88 30
00e1h mov [r8+4],ebp                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBP]         encoding(4 bytes) = 41 89 68 04
00e5h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00e8h mov ecx,r15d                  ; MOV(Mov_r32_rm32) [ECX,R15D]                         encoding(3 bytes) = 41 8b cf
00ebh mov edx,r12d                  ; MOV(Mov_r32_rm32) [EDX,R12D]                         encoding(3 bytes) = 41 8b d4
00eeh mov rax,[rsp+58h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 58
00f3h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00f8h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFCA1958h:jmp64]        encoding(5 bytes) = e8 5b 18 ca ff
00fdh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
0100h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F45A330h:jmp64]                encoding(5 bytes) = e8 2b a2 45 5f
0105h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> ltBytes => new byte[262]{0x41,0x57,0x41,0x56,0x41,0x54,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x60,0xC5,0xF8,0x77,0x48,0x8B,0xF1,0x48,0x8D,0x7C,0x24,0x28,0xB9,0x0C,0x00,0x00,0x00,0x33,0xC0,0xF3,0xAB,0x48,0x8B,0xCE,0x48,0x8B,0xD9,0x48,0x8B,0xF2,0x49,0x8B,0xF8,0xBD,0x97,0x00,0x00,0x00,0x41,0xBE,0x01,0x00,0x00,0x00,0x44,0x8B,0x7E,0x08,0x44,0x8B,0x67,0x08,0x45,0x3B,0xFC,0x75,0x65,0x49,0x63,0xD7,0x48,0xB9,0xE8,0x98,0xFF,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x28,0xCE,0x47,0x5F,0x48,0x8D,0x48,0x10,0x8B,0x50,0x08,0x4C,0x8B,0xC3,0xC5,0xFA,0x6F,0x06,0xC5,0xFA,0x7F,0x44,0x24,0x48,0xC5,0xFA,0x6F,0x07,0xC5,0xFA,0x7F,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0x49,0x89,0x09,0x41,0x89,0x51,0x08,0x49,0x8B,0xC8,0x48,0x8D,0x54,0x24,0x48,0x4C,0x8D,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0xE8,0xB7,0xB9,0x95,0xFF,0x48,0x8B,0xC3,0x48,0x83,0xC4,0x60,0x5B,0x5D,0x5E,0x5F,0x41,0x5C,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0x83,0x0B,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x41,0x72,0x47,0x5F,0x48,0x8B,0xF0,0xB9,0x89,0x0B,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x2A,0x72,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x58,0x45,0x88,0x30,0x41,0x89,0x68,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCF,0x41,0x8B,0xD4,0x48,0x8B,0x44,0x24,0x58,0x48,0x89,0x44,0x24,0x20,0xE8,0x5B,0x18,0xCA,0xFF,0x48,0x8B,0xC8,0xE8,0x2B,0xA2,0x45,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> lt(ReadOnlySpan<long> lhs, ReadOnlySpan<long> rhs)
; location: [7FFC872BC750h, 7FFC872BC855h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push r12                      ; PUSH(Push_r64) [R12]                                 encoding(2 bytes) = 41 54
0006h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0007h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0008h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0009h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
000ah sub rsp,60h                   ; SUB(Sub_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 ec 60
000eh vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0011h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0014h lea rdi,[rsp+28h]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 7c 24 28
0019h mov ecx,0Ch                   ; MOV(Mov_r32_imm32) [ECX,ch:imm32]                    encoding(5 bytes) = b9 0c 00 00 00
001eh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0020h rep stosd                     ; STOSD(Stosd_m32_EAX) [mem(32u),EAX]                  encoding(2 bytes) = f3 ab
0022h mov rcx,rsi                   ; MOV(Mov_r64_rm64) [RCX,RSI]                          encoding(3 bytes) = 48 8b ce
0025h mov rbx,rcx                   ; MOV(Mov_r64_rm64) [RBX,RCX]                          encoding(3 bytes) = 48 8b d9
0028h mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
002bh mov rdi,r8                    ; MOV(Mov_r64_rm64) [RDI,R8]                           encoding(3 bytes) = 49 8b f8
002eh mov ebp,9Bh                   ; MOV(Mov_r32_imm32) [EBP,9bh:imm32]                   encoding(5 bytes) = bd 9b 00 00 00
0033h mov r14d,1                    ; MOV(Mov_r32_imm32) [R14D,1h:imm32]                   encoding(6 bytes) = 41 be 01 00 00 00
0039h mov r15d,[rsi+8]              ; MOV(Mov_r32_rm32) [R15D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 8b 7e 08
003dh mov r12d,[rdi+8]              ; MOV(Mov_r32_rm32) [R12D,mem(32u,RDI:br,DS:sr)]       encoding(4 bytes) = 44 8b 67 08
0041h cmp r15d,r12d                 ; CMP(Cmp_r32_rm32) [R15D,R12D]                        encoding(3 bytes) = 45 3b fc
0044h jne short 00abh               ; JNE(Jne_rel8_64) [ABh:jmp64]                         encoding(2 bytes) = 75 65
0046h movsxd rdx,r15d               ; MOVSXD(Movsxd_r64_rm32) [RDX,R15D]                   encoding(3 bytes) = 49 63 d7
0049h mov rcx,7FFC86FF98E8h         ; MOV(Mov_r64_imm64) [RCX,7ffc86ff98e8h:imm64]         encoding(10 bytes) = 48 b9 e8 98 ff 86 fc 7f 00 00
0053h call 7FFCE67394A0h            ; CALL(Call_rel32_64) [5F47CD50h:jmp64]                encoding(5 bytes) = e8 f8 cc 47 5f
0058h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
005ch mov edx,[rax+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 50 08
005fh mov r8,rbx                    ; MOV(Mov_r64_rm64) [R8,RBX]                           encoding(3 bytes) = 4c 8b c3
0062h vmovdqu xmm0,xmmword ptr [rsi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 06
0066h vmovdqu xmmword ptr [rsp+48h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 48
006ch vmovdqu xmm0,xmmword ptr [rdi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RDI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 07
0070h vmovdqu xmmword ptr [rsp+38h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 38
0076h lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
007bh mov [r9],rcx                  ; MOV(Mov_rm64_r64) [mem(64u,R9:br,DS:sr),RCX]         encoding(3 bytes) = 49 89 09
007eh mov [r9+8],edx                ; MOV(Mov_rm32_r32) [mem(32u,R9:br,DS:sr),EDX]         encoding(4 bytes) = 41 89 51 08
0082h mov rcx,r8                    ; MOV(Mov_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 8b c8
0085h lea rdx,[rsp+48h]             ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 54 24 48
008ah lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
008fh lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
0094h call 7FFC86C18078h            ; CALL(Call_rel32_64) [FFFFFFFFFF95B928h:jmp64]        encoding(5 bytes) = e8 8f b8 95 ff
0099h mov rax,rbx                   ; MOV(Mov_r64_rm64) [RAX,RBX]                          encoding(3 bytes) = 48 8b c3
009ch add rsp,60h                   ; ADD(Add_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 c4 60
00a0h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
00a1h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
00a2h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
00a3h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
00a4h pop r12                       ; POP(Pop_r64) [R12]                                   encoding(2 bytes) = 41 5c
00a6h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
00a8h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
00aah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
00abh mov ecx,0B83h                 ; MOV(Mov_r32_imm32) [ECX,b83h:imm32]                  encoding(5 bytes) = b9 83 0b 00 00
00b0h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00bah call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F4771D0h:jmp64]                encoding(5 bytes) = e8 11 71 47 5f
00bfh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
00c2h mov ecx,0B89h                 ; MOV(Mov_r32_imm32) [ECX,b89h:imm32]                  encoding(5 bytes) = b9 89 0b 00 00
00c7h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00d1h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F4771D0h:jmp64]                encoding(5 bytes) = e8 fa 70 47 5f
00d6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00d9h lea r8,[rsp+58h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 58
00deh mov [r8],r14b                 ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),R14L]           encoding(3 bytes) = 45 88 30
00e1h mov [r8+4],ebp                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBP]         encoding(4 bytes) = 41 89 68 04
00e5h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00e8h mov ecx,r15d                  ; MOV(Mov_r32_rm32) [ECX,R15D]                         encoding(3 bytes) = 41 8b cf
00ebh mov edx,r12d                  ; MOV(Mov_r32_rm32) [EDX,R12D]                         encoding(3 bytes) = 41 8b d4
00eeh mov rax,[rsp+58h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 58
00f3h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00f8h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFCA1828h:jmp64]        encoding(5 bytes) = e8 2b 17 ca ff
00fdh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
0100h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F45A200h:jmp64]                encoding(5 bytes) = e8 fb a0 45 5f
0105h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> ltBytes => new byte[262]{0x41,0x57,0x41,0x56,0x41,0x54,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x60,0xC5,0xF8,0x77,0x48,0x8B,0xF1,0x48,0x8D,0x7C,0x24,0x28,0xB9,0x0C,0x00,0x00,0x00,0x33,0xC0,0xF3,0xAB,0x48,0x8B,0xCE,0x48,0x8B,0xD9,0x48,0x8B,0xF2,0x49,0x8B,0xF8,0xBD,0x9B,0x00,0x00,0x00,0x41,0xBE,0x01,0x00,0x00,0x00,0x44,0x8B,0x7E,0x08,0x44,0x8B,0x67,0x08,0x45,0x3B,0xFC,0x75,0x65,0x49,0x63,0xD7,0x48,0xB9,0xE8,0x98,0xFF,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xF8,0xCC,0x47,0x5F,0x48,0x8D,0x48,0x10,0x8B,0x50,0x08,0x4C,0x8B,0xC3,0xC5,0xFA,0x6F,0x06,0xC5,0xFA,0x7F,0x44,0x24,0x48,0xC5,0xFA,0x6F,0x07,0xC5,0xFA,0x7F,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0x49,0x89,0x09,0x41,0x89,0x51,0x08,0x49,0x8B,0xC8,0x48,0x8D,0x54,0x24,0x48,0x4C,0x8D,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0xE8,0x8F,0xB8,0x95,0xFF,0x48,0x8B,0xC3,0x48,0x83,0xC4,0x60,0x5B,0x5D,0x5E,0x5F,0x41,0x5C,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0x83,0x0B,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x11,0x71,0x47,0x5F,0x48,0x8B,0xF0,0xB9,0x89,0x0B,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xFA,0x70,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x58,0x45,0x88,0x30,0x41,0x89,0x68,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCF,0x41,0x8B,0xD4,0x48,0x8B,0x44,0x24,0x58,0x48,0x89,0x44,0x24,0x20,0xE8,0x2B,0x17,0xCA,0xFF,0x48,0x8B,0xC8,0xE8,0xFB,0xA0,0x45,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> lt(ReadOnlySpan<ulong> lhs, ReadOnlySpan<ulong> rhs)
; location: [7FFC872BC880h, 7FFC872BC985h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push r12                      ; PUSH(Push_r64) [R12]                                 encoding(2 bytes) = 41 54
0006h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0007h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0008h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0009h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
000ah sub rsp,60h                   ; SUB(Sub_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 ec 60
000eh vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0011h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0014h lea rdi,[rsp+28h]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 7c 24 28
0019h mov ecx,0Ch                   ; MOV(Mov_r32_imm32) [ECX,ch:imm32]                    encoding(5 bytes) = b9 0c 00 00 00
001eh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0020h rep stosd                     ; STOSD(Stosd_m32_EAX) [mem(32u),EAX]                  encoding(2 bytes) = f3 ab
0022h mov rcx,rsi                   ; MOV(Mov_r64_rm64) [RCX,RSI]                          encoding(3 bytes) = 48 8b ce
0025h mov rbx,rcx                   ; MOV(Mov_r64_rm64) [RBX,RCX]                          encoding(3 bytes) = 48 8b d9
0028h mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
002bh mov rdi,r8                    ; MOV(Mov_r64_rm64) [RDI,R8]                           encoding(3 bytes) = 49 8b f8
002eh mov ebp,9Fh                   ; MOV(Mov_r32_imm32) [EBP,9fh:imm32]                   encoding(5 bytes) = bd 9f 00 00 00
0033h mov r14d,1                    ; MOV(Mov_r32_imm32) [R14D,1h:imm32]                   encoding(6 bytes) = 41 be 01 00 00 00
0039h mov r15d,[rsi+8]              ; MOV(Mov_r32_rm32) [R15D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 8b 7e 08
003dh mov r12d,[rdi+8]              ; MOV(Mov_r32_rm32) [R12D,mem(32u,RDI:br,DS:sr)]       encoding(4 bytes) = 44 8b 67 08
0041h cmp r15d,r12d                 ; CMP(Cmp_r32_rm32) [R15D,R12D]                        encoding(3 bytes) = 45 3b fc
0044h jne short 00abh               ; JNE(Jne_rel8_64) [ABh:jmp64]                         encoding(2 bytes) = 75 65
0046h movsxd rdx,r15d               ; MOVSXD(Movsxd_r64_rm32) [RDX,R15D]                   encoding(3 bytes) = 49 63 d7
0049h mov rcx,7FFC86FF98E8h         ; MOV(Mov_r64_imm64) [RCX,7ffc86ff98e8h:imm64]         encoding(10 bytes) = 48 b9 e8 98 ff 86 fc 7f 00 00
0053h call 7FFCE67394A0h            ; CALL(Call_rel32_64) [5F47CC20h:jmp64]                encoding(5 bytes) = e8 c8 cb 47 5f
0058h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
005ch mov edx,[rax+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 50 08
005fh mov r8,rbx                    ; MOV(Mov_r64_rm64) [R8,RBX]                           encoding(3 bytes) = 4c 8b c3
0062h vmovdqu xmm0,xmmword ptr [rsi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 06
0066h vmovdqu xmmword ptr [rsp+48h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 48
006ch vmovdqu xmm0,xmmword ptr [rdi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RDI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 07
0070h vmovdqu xmmword ptr [rsp+38h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 38
0076h lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
007bh mov [r9],rcx                  ; MOV(Mov_rm64_r64) [mem(64u,R9:br,DS:sr),RCX]         encoding(3 bytes) = 49 89 09
007eh mov [r9+8],edx                ; MOV(Mov_rm32_r32) [mem(32u,R9:br,DS:sr),EDX]         encoding(4 bytes) = 41 89 51 08
0082h mov rcx,r8                    ; MOV(Mov_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 8b c8
0085h lea rdx,[rsp+48h]             ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 54 24 48
008ah lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
008fh lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
0094h call 7FFC86C18080h            ; CALL(Call_rel32_64) [FFFFFFFFFF95B800h:jmp64]        encoding(5 bytes) = e8 67 b7 95 ff
0099h mov rax,rbx                   ; MOV(Mov_r64_rm64) [RAX,RBX]                          encoding(3 bytes) = 48 8b c3
009ch add rsp,60h                   ; ADD(Add_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 c4 60
00a0h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
00a1h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
00a2h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
00a3h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
00a4h pop r12                       ; POP(Pop_r64) [R12]                                   encoding(2 bytes) = 41 5c
00a6h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
00a8h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
00aah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
00abh mov ecx,0B83h                 ; MOV(Mov_r32_imm32) [ECX,b83h:imm32]                  encoding(5 bytes) = b9 83 0b 00 00
00b0h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00bah call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F4770A0h:jmp64]                encoding(5 bytes) = e8 e1 6f 47 5f
00bfh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
00c2h mov ecx,0B89h                 ; MOV(Mov_r32_imm32) [ECX,b89h:imm32]                  encoding(5 bytes) = b9 89 0b 00 00
00c7h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00d1h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F4770A0h:jmp64]                encoding(5 bytes) = e8 ca 6f 47 5f
00d6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00d9h lea r8,[rsp+58h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 58
00deh mov [r8],r14b                 ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),R14L]           encoding(3 bytes) = 45 88 30
00e1h mov [r8+4],ebp                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBP]         encoding(4 bytes) = 41 89 68 04
00e5h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00e8h mov ecx,r15d                  ; MOV(Mov_r32_rm32) [ECX,R15D]                         encoding(3 bytes) = 41 8b cf
00ebh mov edx,r12d                  ; MOV(Mov_r32_rm32) [EDX,R12D]                         encoding(3 bytes) = 41 8b d4
00eeh mov rax,[rsp+58h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 58
00f3h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00f8h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFCA16F8h:jmp64]        encoding(5 bytes) = e8 fb 15 ca ff
00fdh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
0100h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F45A0D0h:jmp64]                encoding(5 bytes) = e8 cb 9f 45 5f
0105h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> ltBytes => new byte[262]{0x41,0x57,0x41,0x56,0x41,0x54,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x60,0xC5,0xF8,0x77,0x48,0x8B,0xF1,0x48,0x8D,0x7C,0x24,0x28,0xB9,0x0C,0x00,0x00,0x00,0x33,0xC0,0xF3,0xAB,0x48,0x8B,0xCE,0x48,0x8B,0xD9,0x48,0x8B,0xF2,0x49,0x8B,0xF8,0xBD,0x9F,0x00,0x00,0x00,0x41,0xBE,0x01,0x00,0x00,0x00,0x44,0x8B,0x7E,0x08,0x44,0x8B,0x67,0x08,0x45,0x3B,0xFC,0x75,0x65,0x49,0x63,0xD7,0x48,0xB9,0xE8,0x98,0xFF,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xC8,0xCB,0x47,0x5F,0x48,0x8D,0x48,0x10,0x8B,0x50,0x08,0x4C,0x8B,0xC3,0xC5,0xFA,0x6F,0x06,0xC5,0xFA,0x7F,0x44,0x24,0x48,0xC5,0xFA,0x6F,0x07,0xC5,0xFA,0x7F,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0x49,0x89,0x09,0x41,0x89,0x51,0x08,0x49,0x8B,0xC8,0x48,0x8D,0x54,0x24,0x48,0x4C,0x8D,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0xE8,0x67,0xB7,0x95,0xFF,0x48,0x8B,0xC3,0x48,0x83,0xC4,0x60,0x5B,0x5D,0x5E,0x5F,0x41,0x5C,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0x83,0x0B,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xE1,0x6F,0x47,0x5F,0x48,0x8B,0xF0,0xB9,0x89,0x0B,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xCA,0x6F,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x58,0x45,0x88,0x30,0x41,0x89,0x68,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCF,0x41,0x8B,0xD4,0x48,0x8B,0x44,0x24,0x58,0x48,0x89,0x44,0x24,0x20,0xE8,0xFB,0x15,0xCA,0xFF,0x48,0x8B,0xC8,0xE8,0xCB,0x9F,0x45,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> lt(ReadOnlySpan<float> lhs, ReadOnlySpan<float> rhs)
; location: [7FFC872BC9B0h, 7FFC872BCAB5h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push r12                      ; PUSH(Push_r64) [R12]                                 encoding(2 bytes) = 41 54
0006h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0007h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0008h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0009h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
000ah sub rsp,60h                   ; SUB(Sub_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 ec 60
000eh vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0011h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0014h lea rdi,[rsp+28h]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 7c 24 28
0019h mov ecx,0Ch                   ; MOV(Mov_r32_imm32) [ECX,ch:imm32]                    encoding(5 bytes) = b9 0c 00 00 00
001eh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0020h rep stosd                     ; STOSD(Stosd_m32_EAX) [mem(32u),EAX]                  encoding(2 bytes) = f3 ab
0022h mov rcx,rsi                   ; MOV(Mov_r64_rm64) [RCX,RSI]                          encoding(3 bytes) = 48 8b ce
0025h mov rbx,rcx                   ; MOV(Mov_r64_rm64) [RBX,RCX]                          encoding(3 bytes) = 48 8b d9
0028h mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
002bh mov rdi,r8                    ; MOV(Mov_r64_rm64) [RDI,R8]                           encoding(3 bytes) = 49 8b f8
002eh mov ebp,0A3h                  ; MOV(Mov_r32_imm32) [EBP,a3h:imm32]                   encoding(5 bytes) = bd a3 00 00 00
0033h mov r14d,1                    ; MOV(Mov_r32_imm32) [R14D,1h:imm32]                   encoding(6 bytes) = 41 be 01 00 00 00
0039h mov r15d,[rsi+8]              ; MOV(Mov_r32_rm32) [R15D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 8b 7e 08
003dh mov r12d,[rdi+8]              ; MOV(Mov_r32_rm32) [R12D,mem(32u,RDI:br,DS:sr)]       encoding(4 bytes) = 44 8b 67 08
0041h cmp r15d,r12d                 ; CMP(Cmp_r32_rm32) [R15D,R12D]                        encoding(3 bytes) = 45 3b fc
0044h jne short 00abh               ; JNE(Jne_rel8_64) [ABh:jmp64]                         encoding(2 bytes) = 75 65
0046h movsxd rdx,r15d               ; MOVSXD(Movsxd_r64_rm32) [RDX,R15D]                   encoding(3 bytes) = 49 63 d7
0049h mov rcx,7FFC86FF98E8h         ; MOV(Mov_r64_imm64) [RCX,7ffc86ff98e8h:imm64]         encoding(10 bytes) = 48 b9 e8 98 ff 86 fc 7f 00 00
0053h call 7FFCE67394A0h            ; CALL(Call_rel32_64) [5F47CAF0h:jmp64]                encoding(5 bytes) = e8 98 ca 47 5f
0058h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
005ch mov edx,[rax+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 50 08
005fh mov r8,rbx                    ; MOV(Mov_r64_rm64) [R8,RBX]                           encoding(3 bytes) = 4c 8b c3
0062h vmovdqu xmm0,xmmword ptr [rsi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 06
0066h vmovdqu xmmword ptr [rsp+48h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 48
006ch vmovdqu xmm0,xmmword ptr [rdi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RDI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 07
0070h vmovdqu xmmword ptr [rsp+38h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 38
0076h lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
007bh mov [r9],rcx                  ; MOV(Mov_rm64_r64) [mem(64u,R9:br,DS:sr),RCX]         encoding(3 bytes) = 49 89 09
007eh mov [r9+8],edx                ; MOV(Mov_rm32_r32) [mem(32u,R9:br,DS:sr),EDX]         encoding(4 bytes) = 41 89 51 08
0082h mov rcx,r8                    ; MOV(Mov_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 8b c8
0085h lea rdx,[rsp+48h]             ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 54 24 48
008ah lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
008fh lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
0094h call 7FFC86C18088h            ; CALL(Call_rel32_64) [FFFFFFFFFF95B6D8h:jmp64]        encoding(5 bytes) = e8 3f b6 95 ff
0099h mov rax,rbx                   ; MOV(Mov_r64_rm64) [RAX,RBX]                          encoding(3 bytes) = 48 8b c3
009ch add rsp,60h                   ; ADD(Add_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 c4 60
00a0h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
00a1h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
00a2h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
00a3h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
00a4h pop r12                       ; POP(Pop_r64) [R12]                                   encoding(2 bytes) = 41 5c
00a6h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
00a8h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
00aah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
00abh mov ecx,0B83h                 ; MOV(Mov_r32_imm32) [ECX,b83h:imm32]                  encoding(5 bytes) = b9 83 0b 00 00
00b0h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00bah call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F476F70h:jmp64]                encoding(5 bytes) = e8 b1 6e 47 5f
00bfh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
00c2h mov ecx,0B89h                 ; MOV(Mov_r32_imm32) [ECX,b89h:imm32]                  encoding(5 bytes) = b9 89 0b 00 00
00c7h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00d1h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F476F70h:jmp64]                encoding(5 bytes) = e8 9a 6e 47 5f
00d6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00d9h lea r8,[rsp+58h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 58
00deh mov [r8],r14b                 ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),R14L]           encoding(3 bytes) = 45 88 30
00e1h mov [r8+4],ebp                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBP]         encoding(4 bytes) = 41 89 68 04
00e5h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00e8h mov ecx,r15d                  ; MOV(Mov_r32_rm32) [ECX,R15D]                         encoding(3 bytes) = 41 8b cf
00ebh mov edx,r12d                  ; MOV(Mov_r32_rm32) [EDX,R12D]                         encoding(3 bytes) = 41 8b d4
00eeh mov rax,[rsp+58h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 58
00f3h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00f8h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFCA15C8h:jmp64]        encoding(5 bytes) = e8 cb 14 ca ff
00fdh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
0100h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F459FA0h:jmp64]                encoding(5 bytes) = e8 9b 9e 45 5f
0105h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> ltBytes => new byte[262]{0x41,0x57,0x41,0x56,0x41,0x54,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x60,0xC5,0xF8,0x77,0x48,0x8B,0xF1,0x48,0x8D,0x7C,0x24,0x28,0xB9,0x0C,0x00,0x00,0x00,0x33,0xC0,0xF3,0xAB,0x48,0x8B,0xCE,0x48,0x8B,0xD9,0x48,0x8B,0xF2,0x49,0x8B,0xF8,0xBD,0xA3,0x00,0x00,0x00,0x41,0xBE,0x01,0x00,0x00,0x00,0x44,0x8B,0x7E,0x08,0x44,0x8B,0x67,0x08,0x45,0x3B,0xFC,0x75,0x65,0x49,0x63,0xD7,0x48,0xB9,0xE8,0x98,0xFF,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x98,0xCA,0x47,0x5F,0x48,0x8D,0x48,0x10,0x8B,0x50,0x08,0x4C,0x8B,0xC3,0xC5,0xFA,0x6F,0x06,0xC5,0xFA,0x7F,0x44,0x24,0x48,0xC5,0xFA,0x6F,0x07,0xC5,0xFA,0x7F,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0x49,0x89,0x09,0x41,0x89,0x51,0x08,0x49,0x8B,0xC8,0x48,0x8D,0x54,0x24,0x48,0x4C,0x8D,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0xE8,0x3F,0xB6,0x95,0xFF,0x48,0x8B,0xC3,0x48,0x83,0xC4,0x60,0x5B,0x5D,0x5E,0x5F,0x41,0x5C,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0x83,0x0B,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xB1,0x6E,0x47,0x5F,0x48,0x8B,0xF0,0xB9,0x89,0x0B,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x9A,0x6E,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x58,0x45,0x88,0x30,0x41,0x89,0x68,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCF,0x41,0x8B,0xD4,0x48,0x8B,0x44,0x24,0x58,0x48,0x89,0x44,0x24,0x20,0xE8,0xCB,0x14,0xCA,0xFF,0x48,0x8B,0xC8,0xE8,0x9B,0x9E,0x45,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> lt(ReadOnlySpan<double> lhs, ReadOnlySpan<double> rhs)
; location: [7FFC872BCAE0h, 7FFC872BCBE5h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push r12                      ; PUSH(Push_r64) [R12]                                 encoding(2 bytes) = 41 54
0006h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0007h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0008h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0009h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
000ah sub rsp,60h                   ; SUB(Sub_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 ec 60
000eh vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0011h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0014h lea rdi,[rsp+28h]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 7c 24 28
0019h mov ecx,0Ch                   ; MOV(Mov_r32_imm32) [ECX,ch:imm32]                    encoding(5 bytes) = b9 0c 00 00 00
001eh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0020h rep stosd                     ; STOSD(Stosd_m32_EAX) [mem(32u),EAX]                  encoding(2 bytes) = f3 ab
0022h mov rcx,rsi                   ; MOV(Mov_r64_rm64) [RCX,RSI]                          encoding(3 bytes) = 48 8b ce
0025h mov rbx,rcx                   ; MOV(Mov_r64_rm64) [RBX,RCX]                          encoding(3 bytes) = 48 8b d9
0028h mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
002bh mov rdi,r8                    ; MOV(Mov_r64_rm64) [RDI,R8]                           encoding(3 bytes) = 49 8b f8
002eh mov ebp,0A7h                  ; MOV(Mov_r32_imm32) [EBP,a7h:imm32]                   encoding(5 bytes) = bd a7 00 00 00
0033h mov r14d,1                    ; MOV(Mov_r32_imm32) [R14D,1h:imm32]                   encoding(6 bytes) = 41 be 01 00 00 00
0039h mov r15d,[rsi+8]              ; MOV(Mov_r32_rm32) [R15D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 8b 7e 08
003dh mov r12d,[rdi+8]              ; MOV(Mov_r32_rm32) [R12D,mem(32u,RDI:br,DS:sr)]       encoding(4 bytes) = 44 8b 67 08
0041h cmp r15d,r12d                 ; CMP(Cmp_r32_rm32) [R15D,R12D]                        encoding(3 bytes) = 45 3b fc
0044h jne short 00abh               ; JNE(Jne_rel8_64) [ABh:jmp64]                         encoding(2 bytes) = 75 65
0046h movsxd rdx,r15d               ; MOVSXD(Movsxd_r64_rm32) [RDX,R15D]                   encoding(3 bytes) = 49 63 d7
0049h mov rcx,7FFC86FF98E8h         ; MOV(Mov_r64_imm64) [RCX,7ffc86ff98e8h:imm64]         encoding(10 bytes) = 48 b9 e8 98 ff 86 fc 7f 00 00
0053h call 7FFCE67394A0h            ; CALL(Call_rel32_64) [5F47C9C0h:jmp64]                encoding(5 bytes) = e8 68 c9 47 5f
0058h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
005ch mov edx,[rax+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 50 08
005fh mov r8,rbx                    ; MOV(Mov_r64_rm64) [R8,RBX]                           encoding(3 bytes) = 4c 8b c3
0062h vmovdqu xmm0,xmmword ptr [rsi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 06
0066h vmovdqu xmmword ptr [rsp+48h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 48
006ch vmovdqu xmm0,xmmword ptr [rdi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RDI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 07
0070h vmovdqu xmmword ptr [rsp+38h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 38
0076h lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
007bh mov [r9],rcx                  ; MOV(Mov_rm64_r64) [mem(64u,R9:br,DS:sr),RCX]         encoding(3 bytes) = 49 89 09
007eh mov [r9+8],edx                ; MOV(Mov_rm32_r32) [mem(32u,R9:br,DS:sr),EDX]         encoding(4 bytes) = 41 89 51 08
0082h mov rcx,r8                    ; MOV(Mov_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 8b c8
0085h lea rdx,[rsp+48h]             ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 54 24 48
008ah lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
008fh lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
0094h call 7FFC86C18090h            ; CALL(Call_rel32_64) [FFFFFFFFFF95B5B0h:jmp64]        encoding(5 bytes) = e8 17 b5 95 ff
0099h mov rax,rbx                   ; MOV(Mov_r64_rm64) [RAX,RBX]                          encoding(3 bytes) = 48 8b c3
009ch add rsp,60h                   ; ADD(Add_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 c4 60
00a0h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
00a1h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
00a2h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
00a3h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
00a4h pop r12                       ; POP(Pop_r64) [R12]                                   encoding(2 bytes) = 41 5c
00a6h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
00a8h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
00aah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
00abh mov ecx,0B83h                 ; MOV(Mov_r32_imm32) [ECX,b83h:imm32]                  encoding(5 bytes) = b9 83 0b 00 00
00b0h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00bah call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F476E40h:jmp64]                encoding(5 bytes) = e8 81 6d 47 5f
00bfh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
00c2h mov ecx,0B89h                 ; MOV(Mov_r32_imm32) [ECX,b89h:imm32]                  encoding(5 bytes) = b9 89 0b 00 00
00c7h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00d1h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F476E40h:jmp64]                encoding(5 bytes) = e8 6a 6d 47 5f
00d6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00d9h lea r8,[rsp+58h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 58
00deh mov [r8],r14b                 ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),R14L]           encoding(3 bytes) = 45 88 30
00e1h mov [r8+4],ebp                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBP]         encoding(4 bytes) = 41 89 68 04
00e5h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00e8h mov ecx,r15d                  ; MOV(Mov_r32_rm32) [ECX,R15D]                         encoding(3 bytes) = 41 8b cf
00ebh mov edx,r12d                  ; MOV(Mov_r32_rm32) [EDX,R12D]                         encoding(3 bytes) = 41 8b d4
00eeh mov rax,[rsp+58h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 58
00f3h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00f8h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFCA1498h:jmp64]        encoding(5 bytes) = e8 9b 13 ca ff
00fdh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
0100h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F459E70h:jmp64]                encoding(5 bytes) = e8 6b 9d 45 5f
0105h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> ltBytes => new byte[262]{0x41,0x57,0x41,0x56,0x41,0x54,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x60,0xC5,0xF8,0x77,0x48,0x8B,0xF1,0x48,0x8D,0x7C,0x24,0x28,0xB9,0x0C,0x00,0x00,0x00,0x33,0xC0,0xF3,0xAB,0x48,0x8B,0xCE,0x48,0x8B,0xD9,0x48,0x8B,0xF2,0x49,0x8B,0xF8,0xBD,0xA7,0x00,0x00,0x00,0x41,0xBE,0x01,0x00,0x00,0x00,0x44,0x8B,0x7E,0x08,0x44,0x8B,0x67,0x08,0x45,0x3B,0xFC,0x75,0x65,0x49,0x63,0xD7,0x48,0xB9,0xE8,0x98,0xFF,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x68,0xC9,0x47,0x5F,0x48,0x8D,0x48,0x10,0x8B,0x50,0x08,0x4C,0x8B,0xC3,0xC5,0xFA,0x6F,0x06,0xC5,0xFA,0x7F,0x44,0x24,0x48,0xC5,0xFA,0x6F,0x07,0xC5,0xFA,0x7F,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0x49,0x89,0x09,0x41,0x89,0x51,0x08,0x49,0x8B,0xC8,0x48,0x8D,0x54,0x24,0x48,0x4C,0x8D,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0xE8,0x17,0xB5,0x95,0xFF,0x48,0x8B,0xC3,0x48,0x83,0xC4,0x60,0x5B,0x5D,0x5E,0x5F,0x41,0x5C,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0x83,0x0B,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x81,0x6D,0x47,0x5F,0x48,0x8B,0xF0,0xB9,0x89,0x0B,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x6A,0x6D,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x58,0x45,0x88,0x30,0x41,0x89,0x68,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCF,0x41,0x8B,0xD4,0x48,0x8B,0x44,0x24,0x58,0x48,0x89,0x44,0x24,0x20,0xE8,0x9B,0x13,0xCA,0xFF,0x48,0x8B,0xC8,0xE8,0x6B,0x9D,0x45,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool lteq(sbyte lhs, sbyte rhs)
; location: [7FFC872BCC10h, 7FFC872BCC25h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cl                  ; MOVSX(Movsx_r64_rm8) [RAX,CL]                        encoding(4 bytes) = 48 0f be c1
0009h movsx rdx,dl                  ; MOVSX(Movsx_r64_rm8) [RDX,DL]                        encoding(4 bytes) = 48 0f be d2
000dh cmp eax,edx                   ; CMP(Cmp_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 3b c2
000fh setle al                      ; SETLE(Setle_rm8) [AL]                                encoding(3 bytes) = 0f 9e c0
0012h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0015h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> lteqBytes => new byte[22]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBE,0xC1,0x48,0x0F,0xBE,0xD2,0x3B,0xC2,0x0F,0x9E,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool lteq(byte lhs, byte rhs)
; location: [7FFC872BCC40h, 7FFC872BCC53h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0008h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
000bh cmp eax,edx                   ; CMP(Cmp_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 3b c2
000dh setle al                      ; SETLE(Setle_rm8) [AL]                                encoding(3 bytes) = 0f 9e c0
0010h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> lteqBytes => new byte[20]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC1,0x0F,0xB6,0xD2,0x3B,0xC2,0x0F,0x9E,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool lteq(short lhs, short rhs)
; location: [7FFC872BCC70h, 7FFC872BCC85h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cx                  ; MOVSX(Movsx_r64_rm16) [RAX,CX]                       encoding(4 bytes) = 48 0f bf c1
0009h movsx rdx,dx                  ; MOVSX(Movsx_r64_rm16) [RDX,DX]                       encoding(4 bytes) = 48 0f bf d2
000dh cmp eax,edx                   ; CMP(Cmp_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 3b c2
000fh setle al                      ; SETLE(Setle_rm8) [AL]                                encoding(3 bytes) = 0f 9e c0
0012h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0015h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> lteqBytes => new byte[22]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBF,0xC1,0x48,0x0F,0xBF,0xD2,0x3B,0xC2,0x0F,0x9E,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool lteq(ushort lhs, ushort rhs)
; location: [7FFC872BCCA0h, 7FFC872BCCB3h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cx                  ; MOVZX(Movzx_r32_rm16) [EAX,CX]                       encoding(3 bytes) = 0f b7 c1
0008h movzx edx,dx                  ; MOVZX(Movzx_r32_rm16) [EDX,DX]                       encoding(3 bytes) = 0f b7 d2
000bh cmp eax,edx                   ; CMP(Cmp_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 3b c2
000dh setle al                      ; SETLE(Setle_rm8) [AL]                                encoding(3 bytes) = 0f 9e c0
0010h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> lteqBytes => new byte[20]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB7,0xC1,0x0F,0xB7,0xD2,0x3B,0xC2,0x0F,0x9E,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool lteq(int lhs, int rhs)
; location: [7FFC872BCCD0h, 7FFC872BCCDDh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h cmp ecx,edx                   ; CMP(Cmp_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 3b ca
0007h setle al                      ; SETLE(Setle_rm8) [AL]                                encoding(3 bytes) = 0f 9e c0
000ah movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> lteqBytes => new byte[14]{0x0F,0x1F,0x44,0x00,0x00,0x3B,0xCA,0x0F,0x9E,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool lteq(uint lhs, uint rhs)
; location: [7FFC872BCCF0h, 7FFC872BCCFDh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h cmp ecx,edx                   ; CMP(Cmp_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 3b ca
0007h setbe al                      ; SETBE(Setbe_rm8) [AL]                                encoding(3 bytes) = 0f 96 c0
000ah movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> lteqBytes => new byte[14]{0x0F,0x1F,0x44,0x00,0x00,0x3B,0xCA,0x0F,0x96,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool lteq(long lhs, long rhs)
; location: [7FFC872BCD10h, 7FFC872BCD1Eh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h cmp rcx,rdx                   ; CMP(Cmp_r64_rm64) [RCX,RDX]                          encoding(3 bytes) = 48 3b ca
0008h setle al                      ; SETLE(Setle_rm8) [AL]                                encoding(3 bytes) = 0f 9e c0
000bh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> lteqBytes => new byte[15]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x3B,0xCA,0x0F,0x9E,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool lteq(ulong lhs, ulong rhs)
; location: [7FFC872BCD30h, 7FFC872BCD3Eh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h cmp rcx,rdx                   ; CMP(Cmp_r64_rm64) [RCX,RDX]                          encoding(3 bytes) = 48 3b ca
0008h setbe al                      ; SETBE(Setbe_rm8) [AL]                                encoding(3 bytes) = 0f 96 c0
000bh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> lteqBytes => new byte[15]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x3B,0xCA,0x0F,0x96,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool lteq(float lhs, float rhs)
; location: [7FFC872BCD50h, 7FFC872BCD5Fh]
0000h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0003h xchg ax,ax                    ; NOP(Nopw)                                            encoding(2 bytes) = 66 90
0005h vucomiss xmm1,xmm0            ; VUCOMISS(VEX_Vucomiss_xmm_xmmm32) [XMM1,XMM0]        encoding(VEX, 4 bytes) = c5 f8 2e c8
0009h setae al                      ; SETAE(Setae_rm8) [AL]                                encoding(3 bytes) = 0f 93 c0
000ch movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> lteqBytes => new byte[16]{0xC5,0xF8,0x77,0x66,0x90,0xC5,0xF8,0x2E,0xC8,0x0F,0x93,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool lteq(double lhs, double rhs)
; location: [7FFC872BCD80h, 7FFC872BCD8Fh]
0000h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0003h xchg ax,ax                    ; NOP(Nopw)                                            encoding(2 bytes) = 66 90
0005h vucomisd xmm1,xmm0            ; VUCOMISD(VEX_Vucomisd_xmm_xmmm64) [XMM1,XMM0]        encoding(VEX, 4 bytes) = c5 f9 2e c8
0009h setae al                      ; SETAE(Setae_rm8) [AL]                                encoding(3 bytes) = 0f 93 c0
000ch movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> lteqBytes => new byte[16]{0xC5,0xF8,0x77,0x66,0x90,0xC5,0xF9,0x2E,0xC8,0x0F,0x93,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> lteq(ReadOnlySpan<sbyte> lhs, ReadOnlySpan<sbyte> rhs, Span<bool> dst)
; location: [7FFC872BCDB0h, 7FFC872BCE14h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0003h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0004h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0008h mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000bh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000fh mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0012h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0015h xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
0018h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
001ah jle short 004ch               ; JLE(Jle_rel8_64) [4Ch:jmp64]                         encoding(2 bytes) = 7e 30
001ch cmp r11d,r9d                  ; CMP(Cmp_r32_rm32) [R11D,R9D]                         encoding(3 bytes) = 45 3b d9
001fh jae short 005fh               ; JAE(Jae_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 73 3e
0021h movsxd rsi,r11d               ; MOVSXD(Movsxd_r64_rm32) [RSI,R11D]                   encoding(3 bytes) = 49 63 f3
0024h lea rdi,[rax+rsi]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 30
0028h movsx rbx,byte ptr [r10+rsi]  ; MOVSX(Movsx_r64_rm8) [RBX,mem(8i,R10:br,DS:sr)]      encoding(5 bytes) = 49 0f be 1c 32
002dh cmp r11d,[r8+8]               ; CMP(Cmp_r32_rm32) [R11D,mem(32u,R8:br,DS:sr)]        encoding(4 bytes) = 45 3b 58 08
0031h jae short 005fh               ; JAE(Jae_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 73 2c
0033h mov rbp,[r8]                  ; MOV(Mov_r64_rm64) [RBP,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 28
0036h movsx rsi,byte ptr [rsi+rbp]  ; MOVSX(Movsx_r64_rm8) [RSI,mem(8i,RSI:br,DS:sr)]      encoding(5 bytes) = 48 0f be 34 2e
003bh cmp ebx,esi                   ; CMP(Cmp_r32_rm32) [EBX,ESI]                          encoding(2 bytes) = 3b de
003dh setle sil                     ; SETLE(Setle_rm8) [SIL]                               encoding(4 bytes) = 40 0f 9e c6
0041h mov [rdi],sil                 ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),SIL]           encoding(3 bytes) = 40 88 37
0044h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
0047h cmp r11d,edx                  ; CMP(Cmp_r32_rm32) [R11D,EDX]                         encoding(3 bytes) = 44 3b da
004ah jl short 001ch                ; JL(Jl_rel8_64) [1Ch:jmp64]                           encoding(2 bytes) = 7c d0
004ch mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
004fh mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0053h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0056h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
005ah pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
005bh pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
005ch pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
005dh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
005eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
005fh call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A8000h:jmp64]                encoding(5 bytes) = e8 9c 7f 5a 5f
0064h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> lteqBytes => new byte[101]{0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x12,0x8B,0x52,0x08,0x45,0x33,0xDB,0x85,0xD2,0x7E,0x30,0x45,0x3B,0xD9,0x73,0x3E,0x49,0x63,0xF3,0x48,0x8D,0x3C,0x30,0x49,0x0F,0xBE,0x1C,0x32,0x45,0x3B,0x58,0x08,0x73,0x2C,0x49,0x8B,0x28,0x48,0x0F,0xBE,0x34,0x2E,0x3B,0xDE,0x40,0x0F,0x9E,0xC6,0x40,0x88,0x37,0x41,0xFF,0xC3,0x44,0x3B,0xDA,0x7C,0xD0,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0xC3,0xE8,0x9C,0x7F,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> lteq(ReadOnlySpan<byte> lhs, ReadOnlySpan<byte> rhs, Span<bool> dst)
; location: [7FFC872BCE40h, 7FFC872BCEA4h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0003h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0004h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0008h mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000bh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000fh mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0012h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0015h xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
0018h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
001ah jle short 004ch               ; JLE(Jle_rel8_64) [4Ch:jmp64]                         encoding(2 bytes) = 7e 30
001ch cmp r11d,r9d                  ; CMP(Cmp_r32_rm32) [R11D,R9D]                         encoding(3 bytes) = 45 3b d9
001fh jae short 005fh               ; JAE(Jae_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 73 3e
0021h movsxd rsi,r11d               ; MOVSXD(Movsxd_r64_rm32) [RSI,R11D]                   encoding(3 bytes) = 49 63 f3
0024h lea rdi,[rax+rsi]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 30
0028h movzx ebx,byte ptr [r10+rsi]  ; MOVZX(Movzx_r32_rm8) [EBX,mem(8u,R10:br,DS:sr)]      encoding(5 bytes) = 41 0f b6 1c 32
002dh cmp r11d,[r8+8]               ; CMP(Cmp_r32_rm32) [R11D,mem(32u,R8:br,DS:sr)]        encoding(4 bytes) = 45 3b 58 08
0031h jae short 005fh               ; JAE(Jae_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 73 2c
0033h mov rbp,[r8]                  ; MOV(Mov_r64_rm64) [RBP,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 28
0036h movzx esi,byte ptr [rsi+rbp]  ; MOVZX(Movzx_r32_rm8) [ESI,mem(8u,RSI:br,DS:sr)]      encoding(5 bytes) = 40 0f b6 34 2e
003bh cmp ebx,esi                   ; CMP(Cmp_r32_rm32) [EBX,ESI]                          encoding(2 bytes) = 3b de
003dh setle sil                     ; SETLE(Setle_rm8) [SIL]                               encoding(4 bytes) = 40 0f 9e c6
0041h mov [rdi],sil                 ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),SIL]           encoding(3 bytes) = 40 88 37
0044h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
0047h cmp r11d,edx                  ; CMP(Cmp_r32_rm32) [R11D,EDX]                         encoding(3 bytes) = 44 3b da
004ah jl short 001ch                ; JL(Jl_rel8_64) [1Ch:jmp64]                           encoding(2 bytes) = 7c d0
004ch mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
004fh mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0053h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0056h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
005ah pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
005bh pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
005ch pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
005dh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
005eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
005fh call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A7F70h:jmp64]                encoding(5 bytes) = e8 0c 7f 5a 5f
0064h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> lteqBytes => new byte[101]{0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x12,0x8B,0x52,0x08,0x45,0x33,0xDB,0x85,0xD2,0x7E,0x30,0x45,0x3B,0xD9,0x73,0x3E,0x49,0x63,0xF3,0x48,0x8D,0x3C,0x30,0x41,0x0F,0xB6,0x1C,0x32,0x45,0x3B,0x58,0x08,0x73,0x2C,0x49,0x8B,0x28,0x40,0x0F,0xB6,0x34,0x2E,0x3B,0xDE,0x40,0x0F,0x9E,0xC6,0x40,0x88,0x37,0x41,0xFF,0xC3,0x44,0x3B,0xDA,0x7C,0xD0,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0xC3,0xE8,0x0C,0x7F,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> lteq(ReadOnlySpan<short> lhs, ReadOnlySpan<short> rhs, Span<bool> dst)
; location: [7FFC872BCED0h, 7FFC872BCF35h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0003h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0004h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0008h mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000bh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000fh mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0012h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0015h xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
0018h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
001ah jle short 004dh               ; JLE(Jle_rel8_64) [4Dh:jmp64]                         encoding(2 bytes) = 7e 31
001ch cmp r11d,r9d                  ; CMP(Cmp_r32_rm32) [R11D,R9D]                         encoding(3 bytes) = 45 3b d9
001fh jae short 0060h               ; JAE(Jae_rel8_64) [60h:jmp64]                         encoding(2 bytes) = 73 3f
0021h movsxd rsi,r11d               ; MOVSXD(Movsxd_r64_rm32) [RSI,R11D]                   encoding(3 bytes) = 49 63 f3
0024h lea rdi,[rax+rsi]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 30
0028h movsx rbx,word ptr [r10+rsi*2]; MOVSX(Movsx_r64_rm16) [RBX,mem(16i,R10:br,DS:sr)]    encoding(5 bytes) = 49 0f bf 1c 72
002dh cmp r11d,[r8+8]               ; CMP(Cmp_r32_rm32) [R11D,mem(32u,R8:br,DS:sr)]        encoding(4 bytes) = 45 3b 58 08
0031h jae short 0060h               ; JAE(Jae_rel8_64) [60h:jmp64]                         encoding(2 bytes) = 73 2d
0033h mov rbp,[r8]                  ; MOV(Mov_r64_rm64) [RBP,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 28
0036h movsx rsi,word ptr [rbp+rsi*2]; MOVSX(Movsx_r64_rm16) [RSI,mem(16i,RBP:br,SS:sr)]    encoding(6 bytes) = 48 0f bf 74 75 00
003ch cmp ebx,esi                   ; CMP(Cmp_r32_rm32) [EBX,ESI]                          encoding(2 bytes) = 3b de
003eh setle sil                     ; SETLE(Setle_rm8) [SIL]                               encoding(4 bytes) = 40 0f 9e c6
0042h mov [rdi],sil                 ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),SIL]           encoding(3 bytes) = 40 88 37
0045h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
0048h cmp r11d,edx                  ; CMP(Cmp_r32_rm32) [R11D,EDX]                         encoding(3 bytes) = 44 3b da
004bh jl short 001ch                ; JL(Jl_rel8_64) [1Ch:jmp64]                           encoding(2 bytes) = 7c cf
004dh mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0050h mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0054h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0057h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
005bh pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
005ch pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
005dh pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
005eh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
005fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0060h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A7EE0h:jmp64]                encoding(5 bytes) = e8 7b 7e 5a 5f
0065h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> lteqBytes => new byte[102]{0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x12,0x8B,0x52,0x08,0x45,0x33,0xDB,0x85,0xD2,0x7E,0x31,0x45,0x3B,0xD9,0x73,0x3F,0x49,0x63,0xF3,0x48,0x8D,0x3C,0x30,0x49,0x0F,0xBF,0x1C,0x72,0x45,0x3B,0x58,0x08,0x73,0x2D,0x49,0x8B,0x28,0x48,0x0F,0xBF,0x74,0x75,0x00,0x3B,0xDE,0x40,0x0F,0x9E,0xC6,0x40,0x88,0x37,0x41,0xFF,0xC3,0x44,0x3B,0xDA,0x7C,0xCF,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0xC3,0xE8,0x7B,0x7E,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> lteq(ReadOnlySpan<ushort> lhs, ReadOnlySpan<ushort> rhs, Span<bool> dst)
; location: [7FFC872BCF60h, 7FFC872BCFC4h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0003h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0004h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0008h mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000bh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000fh mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0012h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0015h xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
0018h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
001ah jle short 004ch               ; JLE(Jle_rel8_64) [4Ch:jmp64]                         encoding(2 bytes) = 7e 30
001ch cmp r11d,r9d                  ; CMP(Cmp_r32_rm32) [R11D,R9D]                         encoding(3 bytes) = 45 3b d9
001fh jae short 005fh               ; JAE(Jae_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 73 3e
0021h movsxd rsi,r11d               ; MOVSXD(Movsxd_r64_rm32) [RSI,R11D]                   encoding(3 bytes) = 49 63 f3
0024h lea rdi,[rax+rsi]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 30
0028h movzx ebx,word ptr [r10+rsi*2]; MOVZX(Movzx_r32_rm16) [EBX,mem(16u,R10:br,DS:sr)]    encoding(5 bytes) = 41 0f b7 1c 72
002dh cmp r11d,[r8+8]               ; CMP(Cmp_r32_rm32) [R11D,mem(32u,R8:br,DS:sr)]        encoding(4 bytes) = 45 3b 58 08
0031h jae short 005fh               ; JAE(Jae_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 73 2c
0033h mov rbp,[r8]                  ; MOV(Mov_r64_rm64) [RBP,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 28
0036h movzx esi,word ptr [rbp+rsi*2]; MOVZX(Movzx_r32_rm16) [ESI,mem(16u,RBP:br,SS:sr)]    encoding(5 bytes) = 0f b7 74 75 00
003bh cmp ebx,esi                   ; CMP(Cmp_r32_rm32) [EBX,ESI]                          encoding(2 bytes) = 3b de
003dh setle sil                     ; SETLE(Setle_rm8) [SIL]                               encoding(4 bytes) = 40 0f 9e c6
0041h mov [rdi],sil                 ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),SIL]           encoding(3 bytes) = 40 88 37
0044h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
0047h cmp r11d,edx                  ; CMP(Cmp_r32_rm32) [R11D,EDX]                         encoding(3 bytes) = 44 3b da
004ah jl short 001ch                ; JL(Jl_rel8_64) [1Ch:jmp64]                           encoding(2 bytes) = 7c d0
004ch mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
004fh mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0053h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0056h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
005ah pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
005bh pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
005ch pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
005dh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
005eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
005fh call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A7E50h:jmp64]                encoding(5 bytes) = e8 ec 7d 5a 5f
0064h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> lteqBytes => new byte[101]{0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x12,0x8B,0x52,0x08,0x45,0x33,0xDB,0x85,0xD2,0x7E,0x30,0x45,0x3B,0xD9,0x73,0x3E,0x49,0x63,0xF3,0x48,0x8D,0x3C,0x30,0x41,0x0F,0xB7,0x1C,0x72,0x45,0x3B,0x58,0x08,0x73,0x2C,0x49,0x8B,0x28,0x0F,0xB7,0x74,0x75,0x00,0x3B,0xDE,0x40,0x0F,0x9E,0xC6,0x40,0x88,0x37,0x41,0xFF,0xC3,0x44,0x3B,0xDA,0x7C,0xD0,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0xC3,0xE8,0xEC,0x7D,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> lteq(ReadOnlySpan<int> lhs, ReadOnlySpan<int> rhs, Span<bool> dst)
; location: [7FFC872BCFF0h, 7FFC872BD052h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0003h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0004h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0008h mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000bh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000fh mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0012h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0015h xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
0018h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
001ah jle short 004ah               ; JLE(Jle_rel8_64) [4Ah:jmp64]                         encoding(2 bytes) = 7e 2e
001ch cmp r11d,r9d                  ; CMP(Cmp_r32_rm32) [R11D,R9D]                         encoding(3 bytes) = 45 3b d9
001fh jae short 005dh               ; JAE(Jae_rel8_64) [5Dh:jmp64]                         encoding(2 bytes) = 73 3c
0021h movsxd rsi,r11d               ; MOVSXD(Movsxd_r64_rm32) [RSI,R11D]                   encoding(3 bytes) = 49 63 f3
0024h lea rdi,[rax+rsi]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 30
0028h mov ebx,[r10+rsi*4]           ; MOV(Mov_r32_rm32) [EBX,mem(32u,R10:br,DS:sr)]        encoding(4 bytes) = 41 8b 1c b2
002ch cmp r11d,[r8+8]               ; CMP(Cmp_r32_rm32) [R11D,mem(32u,R8:br,DS:sr)]        encoding(4 bytes) = 45 3b 58 08
0030h jae short 005dh               ; JAE(Jae_rel8_64) [5Dh:jmp64]                         encoding(2 bytes) = 73 2b
0032h mov rbp,[r8]                  ; MOV(Mov_r64_rm64) [RBP,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 28
0035h mov esi,[rbp+rsi*4]           ; MOV(Mov_r32_rm32) [ESI,mem(32u,RBP:br,SS:sr)]        encoding(4 bytes) = 8b 74 b5 00
0039h cmp ebx,esi                   ; CMP(Cmp_r32_rm32) [EBX,ESI]                          encoding(2 bytes) = 3b de
003bh setle sil                     ; SETLE(Setle_rm8) [SIL]                               encoding(4 bytes) = 40 0f 9e c6
003fh mov [rdi],sil                 ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),SIL]           encoding(3 bytes) = 40 88 37
0042h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
0045h cmp r11d,edx                  ; CMP(Cmp_r32_rm32) [R11D,EDX]                         encoding(3 bytes) = 44 3b da
0048h jl short 001ch                ; JL(Jl_rel8_64) [1Ch:jmp64]                           encoding(2 bytes) = 7c d2
004ah mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
004dh mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0051h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0054h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
0058h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0059h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
005ah pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
005bh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
005ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
005dh call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A7DC0h:jmp64]                encoding(5 bytes) = e8 5e 7d 5a 5f
0062h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> lteqBytes => new byte[99]{0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x12,0x8B,0x52,0x08,0x45,0x33,0xDB,0x85,0xD2,0x7E,0x2E,0x45,0x3B,0xD9,0x73,0x3C,0x49,0x63,0xF3,0x48,0x8D,0x3C,0x30,0x41,0x8B,0x1C,0xB2,0x45,0x3B,0x58,0x08,0x73,0x2B,0x49,0x8B,0x28,0x8B,0x74,0xB5,0x00,0x3B,0xDE,0x40,0x0F,0x9E,0xC6,0x40,0x88,0x37,0x41,0xFF,0xC3,0x44,0x3B,0xDA,0x7C,0xD2,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0xC3,0xE8,0x5E,0x7D,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> lteq(ReadOnlySpan<uint> lhs, ReadOnlySpan<uint> rhs, Span<bool> dst)
; location: [7FFC872BD070h, 7FFC872BD0D2h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0003h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0004h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0008h mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000bh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000fh mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0012h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0015h xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
0018h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
001ah jle short 004ah               ; JLE(Jle_rel8_64) [4Ah:jmp64]                         encoding(2 bytes) = 7e 2e
001ch cmp r11d,r9d                  ; CMP(Cmp_r32_rm32) [R11D,R9D]                         encoding(3 bytes) = 45 3b d9
001fh jae short 005dh               ; JAE(Jae_rel8_64) [5Dh:jmp64]                         encoding(2 bytes) = 73 3c
0021h movsxd rsi,r11d               ; MOVSXD(Movsxd_r64_rm32) [RSI,R11D]                   encoding(3 bytes) = 49 63 f3
0024h lea rdi,[rax+rsi]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 30
0028h mov ebx,[r10+rsi*4]           ; MOV(Mov_r32_rm32) [EBX,mem(32u,R10:br,DS:sr)]        encoding(4 bytes) = 41 8b 1c b2
002ch cmp r11d,[r8+8]               ; CMP(Cmp_r32_rm32) [R11D,mem(32u,R8:br,DS:sr)]        encoding(4 bytes) = 45 3b 58 08
0030h jae short 005dh               ; JAE(Jae_rel8_64) [5Dh:jmp64]                         encoding(2 bytes) = 73 2b
0032h mov rbp,[r8]                  ; MOV(Mov_r64_rm64) [RBP,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 28
0035h mov esi,[rbp+rsi*4]           ; MOV(Mov_r32_rm32) [ESI,mem(32u,RBP:br,SS:sr)]        encoding(4 bytes) = 8b 74 b5 00
0039h cmp ebx,esi                   ; CMP(Cmp_r32_rm32) [EBX,ESI]                          encoding(2 bytes) = 3b de
003bh setbe sil                     ; SETBE(Setbe_rm8) [SIL]                               encoding(4 bytes) = 40 0f 96 c6
003fh mov [rdi],sil                 ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),SIL]           encoding(3 bytes) = 40 88 37
0042h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
0045h cmp r11d,edx                  ; CMP(Cmp_r32_rm32) [R11D,EDX]                         encoding(3 bytes) = 44 3b da
0048h jl short 001ch                ; JL(Jl_rel8_64) [1Ch:jmp64]                           encoding(2 bytes) = 7c d2
004ah mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
004dh mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0051h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0054h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
0058h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0059h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
005ah pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
005bh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
005ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
005dh call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A7D40h:jmp64]                encoding(5 bytes) = e8 de 7c 5a 5f
0062h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> lteqBytes => new byte[99]{0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x12,0x8B,0x52,0x08,0x45,0x33,0xDB,0x85,0xD2,0x7E,0x2E,0x45,0x3B,0xD9,0x73,0x3C,0x49,0x63,0xF3,0x48,0x8D,0x3C,0x30,0x41,0x8B,0x1C,0xB2,0x45,0x3B,0x58,0x08,0x73,0x2B,0x49,0x8B,0x28,0x8B,0x74,0xB5,0x00,0x3B,0xDE,0x40,0x0F,0x96,0xC6,0x40,0x88,0x37,0x41,0xFF,0xC3,0x44,0x3B,0xDA,0x7C,0xD2,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0xC3,0xE8,0xDE,0x7C,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> lteq(ReadOnlySpan<long> lhs, ReadOnlySpan<long> rhs, Span<bool> dst)
; location: [7FFC872BD0F0h, 7FFC872BD154h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0003h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0004h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0008h mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000bh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000fh mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0012h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0015h xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
0018h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
001ah jle short 004ch               ; JLE(Jle_rel8_64) [4Ch:jmp64]                         encoding(2 bytes) = 7e 30
001ch cmp r11d,r9d                  ; CMP(Cmp_r32_rm32) [R11D,R9D]                         encoding(3 bytes) = 45 3b d9
001fh jae short 005fh               ; JAE(Jae_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 73 3e
0021h movsxd rsi,r11d               ; MOVSXD(Movsxd_r64_rm32) [RSI,R11D]                   encoding(3 bytes) = 49 63 f3
0024h lea rdi,[rax+rsi]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 30
0028h mov rbx,[r10+rsi*8]           ; MOV(Mov_r64_rm64) [RBX,mem(64u,R10:br,DS:sr)]        encoding(4 bytes) = 49 8b 1c f2
002ch cmp r11d,[r8+8]               ; CMP(Cmp_r32_rm32) [R11D,mem(32u,R8:br,DS:sr)]        encoding(4 bytes) = 45 3b 58 08
0030h jae short 005fh               ; JAE(Jae_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 73 2d
0032h mov rbp,[r8]                  ; MOV(Mov_r64_rm64) [RBP,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 28
0035h mov rsi,[rbp+rsi*8]           ; MOV(Mov_r64_rm64) [RSI,mem(64u,RBP:br,SS:sr)]        encoding(5 bytes) = 48 8b 74 f5 00
003ah cmp rbx,rsi                   ; CMP(Cmp_r64_rm64) [RBX,RSI]                          encoding(3 bytes) = 48 3b de
003dh setle sil                     ; SETLE(Setle_rm8) [SIL]                               encoding(4 bytes) = 40 0f 9e c6
0041h mov [rdi],sil                 ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),SIL]           encoding(3 bytes) = 40 88 37
0044h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
0047h cmp r11d,edx                  ; CMP(Cmp_r32_rm32) [R11D,EDX]                         encoding(3 bytes) = 44 3b da
004ah jl short 001ch                ; JL(Jl_rel8_64) [1Ch:jmp64]                           encoding(2 bytes) = 7c d0
004ch mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
004fh mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0053h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0056h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
005ah pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
005bh pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
005ch pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
005dh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
005eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
005fh call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A7CC0h:jmp64]                encoding(5 bytes) = e8 5c 7c 5a 5f
0064h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> lteqBytes => new byte[101]{0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x12,0x8B,0x52,0x08,0x45,0x33,0xDB,0x85,0xD2,0x7E,0x30,0x45,0x3B,0xD9,0x73,0x3E,0x49,0x63,0xF3,0x48,0x8D,0x3C,0x30,0x49,0x8B,0x1C,0xF2,0x45,0x3B,0x58,0x08,0x73,0x2D,0x49,0x8B,0x28,0x48,0x8B,0x74,0xF5,0x00,0x48,0x3B,0xDE,0x40,0x0F,0x9E,0xC6,0x40,0x88,0x37,0x41,0xFF,0xC3,0x44,0x3B,0xDA,0x7C,0xD0,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0xC3,0xE8,0x5C,0x7C,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> lteq(ReadOnlySpan<ulong> lhs, ReadOnlySpan<ulong> rhs, Span<bool> dst)
; location: [7FFC872BD180h, 7FFC872BD1E4h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0003h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0004h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0008h mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000bh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000fh mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0012h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0015h xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
0018h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
001ah jle short 004ch               ; JLE(Jle_rel8_64) [4Ch:jmp64]                         encoding(2 bytes) = 7e 30
001ch cmp r11d,r9d                  ; CMP(Cmp_r32_rm32) [R11D,R9D]                         encoding(3 bytes) = 45 3b d9
001fh jae short 005fh               ; JAE(Jae_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 73 3e
0021h movsxd rsi,r11d               ; MOVSXD(Movsxd_r64_rm32) [RSI,R11D]                   encoding(3 bytes) = 49 63 f3
0024h lea rdi,[rax+rsi]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 30
0028h mov rbx,[r10+rsi*8]           ; MOV(Mov_r64_rm64) [RBX,mem(64u,R10:br,DS:sr)]        encoding(4 bytes) = 49 8b 1c f2
002ch cmp r11d,[r8+8]               ; CMP(Cmp_r32_rm32) [R11D,mem(32u,R8:br,DS:sr)]        encoding(4 bytes) = 45 3b 58 08
0030h jae short 005fh               ; JAE(Jae_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 73 2d
0032h mov rbp,[r8]                  ; MOV(Mov_r64_rm64) [RBP,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 28
0035h mov rsi,[rbp+rsi*8]           ; MOV(Mov_r64_rm64) [RSI,mem(64u,RBP:br,SS:sr)]        encoding(5 bytes) = 48 8b 74 f5 00
003ah cmp rbx,rsi                   ; CMP(Cmp_r64_rm64) [RBX,RSI]                          encoding(3 bytes) = 48 3b de
003dh setbe sil                     ; SETBE(Setbe_rm8) [SIL]                               encoding(4 bytes) = 40 0f 96 c6
0041h mov [rdi],sil                 ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),SIL]           encoding(3 bytes) = 40 88 37
0044h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
0047h cmp r11d,edx                  ; CMP(Cmp_r32_rm32) [R11D,EDX]                         encoding(3 bytes) = 44 3b da
004ah jl short 001ch                ; JL(Jl_rel8_64) [1Ch:jmp64]                           encoding(2 bytes) = 7c d0
004ch mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
004fh mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0053h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0056h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
005ah pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
005bh pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
005ch pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
005dh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
005eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
005fh call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A7C30h:jmp64]                encoding(5 bytes) = e8 cc 7b 5a 5f
0064h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> lteqBytes => new byte[101]{0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x12,0x8B,0x52,0x08,0x45,0x33,0xDB,0x85,0xD2,0x7E,0x30,0x45,0x3B,0xD9,0x73,0x3E,0x49,0x63,0xF3,0x48,0x8D,0x3C,0x30,0x49,0x8B,0x1C,0xF2,0x45,0x3B,0x58,0x08,0x73,0x2D,0x49,0x8B,0x28,0x48,0x8B,0x74,0xF5,0x00,0x48,0x3B,0xDE,0x40,0x0F,0x96,0xC6,0x40,0x88,0x37,0x41,0xFF,0xC3,0x44,0x3B,0xDA,0x7C,0xD0,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0xC3,0xE8,0xCC,0x7B,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> lteq(ReadOnlySpan<float> lhs, ReadOnlySpan<float> rhs, Span<bool> dst)
; location: [7FFC872BD210h, 7FFC872BD278h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0003h sub rsp,20h                   ; SUB(Sub_rm64_imm8) [RSP,20h:imm64]                   encoding(4 bytes) = 48 83 ec 20
0007h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
000ah mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000dh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
0011h mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0014h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0017h xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
001ah test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
001ch jle short 0051h               ; JLE(Jle_rel8_64) [51h:jmp64]                         encoding(2 bytes) = 7e 33
001eh cmp r11d,r9d                  ; CMP(Cmp_r32_rm32) [R11D,R9D]                         encoding(3 bytes) = 45 3b d9
0021h jae short 0063h               ; JAE(Jae_rel8_64) [63h:jmp64]                         encoding(2 bytes) = 73 40
0023h movsxd rsi,r11d               ; MOVSXD(Movsxd_r64_rm32) [RSI,R11D]                   encoding(3 bytes) = 49 63 f3
0026h lea rdi,[rax+rsi]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 30
002ah vmovss xmm0,dword ptr [r10+rsi*4]; VMOVSS(VEX_Vmovss_xmm_m32) [XMM0,mem(Float32,R10:br,DS:sr)] encoding(VEX, 6 bytes) = c4 c1 7a 10 04 b2
0030h cmp r11d,[r8+8]               ; CMP(Cmp_r32_rm32) [R11D,mem(32u,R8:br,DS:sr)]        encoding(4 bytes) = 45 3b 58 08
0034h jae short 0063h               ; JAE(Jae_rel8_64) [63h:jmp64]                         encoding(2 bytes) = 73 2d
0036h mov rbx,[r8]                  ; MOV(Mov_r64_rm64) [RBX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 18
0039h vmovss xmm1,dword ptr [rbx+rsi*4]; VMOVSS(VEX_Vmovss_xmm_m32) [XMM1,mem(Float32,RBX:br,DS:sr)] encoding(VEX, 5 bytes) = c5 fa 10 0c b3
003eh vucomiss xmm1,xmm0            ; VUCOMISS(VEX_Vucomiss_xmm_xmmm32) [XMM1,XMM0]        encoding(VEX, 4 bytes) = c5 f8 2e c8
0042h setae sil                     ; SETAE(Setae_rm8) [SIL]                               encoding(4 bytes) = 40 0f 93 c6
0046h mov [rdi],sil                 ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),SIL]           encoding(3 bytes) = 40 88 37
0049h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
004ch cmp r11d,edx                  ; CMP(Cmp_r32_rm32) [R11D,EDX]                         encoding(3 bytes) = 44 3b da
004fh jl short 001eh                ; JL(Jl_rel8_64) [1Eh:jmp64]                           encoding(2 bytes) = 7c cd
0051h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0054h mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0058h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
005bh add rsp,20h                   ; ADD(Add_rm64_imm8) [RSP,20h:imm64]                   encoding(4 bytes) = 48 83 c4 20
005fh pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0060h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0061h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0062h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0063h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A7BA0h:jmp64]                encoding(5 bytes) = e8 38 7b 5a 5f
0068h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> lteqBytes => new byte[105]{0x57,0x56,0x53,0x48,0x83,0xEC,0x20,0xC5,0xF8,0x77,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x12,0x8B,0x52,0x08,0x45,0x33,0xDB,0x85,0xD2,0x7E,0x33,0x45,0x3B,0xD9,0x73,0x40,0x49,0x63,0xF3,0x48,0x8D,0x3C,0x30,0xC4,0xC1,0x7A,0x10,0x04,0xB2,0x45,0x3B,0x58,0x08,0x73,0x2D,0x49,0x8B,0x18,0xC5,0xFA,0x10,0x0C,0xB3,0xC5,0xF8,0x2E,0xC8,0x40,0x0F,0x93,0xC6,0x40,0x88,0x37,0x41,0xFF,0xC3,0x44,0x3B,0xDA,0x7C,0xCD,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x20,0x5B,0x5E,0x5F,0xC3,0xE8,0x38,0x7B,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> lteq(ReadOnlySpan<double> lhs, ReadOnlySpan<double> rhs, Span<bool> dst)
; location: [7FFC872BD2A0h, 7FFC872BD308h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0003h sub rsp,20h                   ; SUB(Sub_rm64_imm8) [RSP,20h:imm64]                   encoding(4 bytes) = 48 83 ec 20
0007h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
000ah mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000dh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
0011h mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0014h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0017h xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
001ah test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
001ch jle short 0051h               ; JLE(Jle_rel8_64) [51h:jmp64]                         encoding(2 bytes) = 7e 33
001eh cmp r11d,r9d                  ; CMP(Cmp_r32_rm32) [R11D,R9D]                         encoding(3 bytes) = 45 3b d9
0021h jae short 0063h               ; JAE(Jae_rel8_64) [63h:jmp64]                         encoding(2 bytes) = 73 40
0023h movsxd rsi,r11d               ; MOVSXD(Movsxd_r64_rm32) [RSI,R11D]                   encoding(3 bytes) = 49 63 f3
0026h lea rdi,[rax+rsi]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 30
002ah vmovsd xmm0,qword ptr [r10+rsi*8]; VMOVSD(VEX_Vmovsd_xmm_m64) [XMM0,mem(Float64,R10:br,DS:sr)] encoding(VEX, 6 bytes) = c4 c1 7b 10 04 f2
0030h cmp r11d,[r8+8]               ; CMP(Cmp_r32_rm32) [R11D,mem(32u,R8:br,DS:sr)]        encoding(4 bytes) = 45 3b 58 08
0034h jae short 0063h               ; JAE(Jae_rel8_64) [63h:jmp64]                         encoding(2 bytes) = 73 2d
0036h mov rbx,[r8]                  ; MOV(Mov_r64_rm64) [RBX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 18
0039h vmovsd xmm1,qword ptr [rbx+rsi*8]; VMOVSD(VEX_Vmovsd_xmm_m64) [XMM1,mem(Float64,RBX:br,DS:sr)] encoding(VEX, 5 bytes) = c5 fb 10 0c f3
003eh vucomisd xmm1,xmm0            ; VUCOMISD(VEX_Vucomisd_xmm_xmmm64) [XMM1,XMM0]        encoding(VEX, 4 bytes) = c5 f9 2e c8
0042h setae sil                     ; SETAE(Setae_rm8) [SIL]                               encoding(4 bytes) = 40 0f 93 c6
0046h mov [rdi],sil                 ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),SIL]           encoding(3 bytes) = 40 88 37
0049h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
004ch cmp r11d,edx                  ; CMP(Cmp_r32_rm32) [R11D,EDX]                         encoding(3 bytes) = 44 3b da
004fh jl short 001eh                ; JL(Jl_rel8_64) [1Eh:jmp64]                           encoding(2 bytes) = 7c cd
0051h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0054h mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0058h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
005bh add rsp,20h                   ; ADD(Add_rm64_imm8) [RSP,20h:imm64]                   encoding(4 bytes) = 48 83 c4 20
005fh pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0060h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0061h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0062h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0063h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A7B10h:jmp64]                encoding(5 bytes) = e8 a8 7a 5a 5f
0068h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> lteqBytes => new byte[105]{0x57,0x56,0x53,0x48,0x83,0xEC,0x20,0xC5,0xF8,0x77,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x12,0x8B,0x52,0x08,0x45,0x33,0xDB,0x85,0xD2,0x7E,0x33,0x45,0x3B,0xD9,0x73,0x40,0x49,0x63,0xF3,0x48,0x8D,0x3C,0x30,0xC4,0xC1,0x7B,0x10,0x04,0xF2,0x45,0x3B,0x58,0x08,0x73,0x2D,0x49,0x8B,0x18,0xC5,0xFB,0x10,0x0C,0xF3,0xC5,0xF9,0x2E,0xC8,0x40,0x0F,0x93,0xC6,0x40,0x88,0x37,0x41,0xFF,0xC3,0x44,0x3B,0xDA,0x7C,0xCD,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x20,0x5B,0x5E,0x5F,0xC3,0xE8,0xA8,0x7A,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> lteq(ReadOnlySpan<sbyte> lhs, ReadOnlySpan<sbyte> rhs)
; location: [7FFC872BD330h, 7FFC872BD435h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push r12                      ; PUSH(Push_r64) [R12]                                 encoding(2 bytes) = 41 54
0006h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0007h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0008h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0009h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
000ah sub rsp,60h                   ; SUB(Sub_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 ec 60
000eh vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0011h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0014h lea rdi,[rsp+28h]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 7c 24 28
0019h mov ecx,0Ch                   ; MOV(Mov_r32_imm32) [ECX,ch:imm32]                    encoding(5 bytes) = b9 0c 00 00 00
001eh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0020h rep stosd                     ; STOSD(Stosd_m32_EAX) [mem(32u),EAX]                  encoding(2 bytes) = f3 ab
0022h mov rcx,rsi                   ; MOV(Mov_r64_rm64) [RCX,RSI]                          encoding(3 bytes) = 48 8b ce
0025h mov rbx,rcx                   ; MOV(Mov_r64_rm64) [RBX,RCX]                          encoding(3 bytes) = 48 8b d9
0028h mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
002bh mov rdi,r8                    ; MOV(Mov_r64_rm64) [RDI,R8]                           encoding(3 bytes) = 49 8b f8
002eh mov ebp,82h                   ; MOV(Mov_r32_imm32) [EBP,82h:imm32]                   encoding(5 bytes) = bd 82 00 00 00
0033h mov r14d,1                    ; MOV(Mov_r32_imm32) [R14D,1h:imm32]                   encoding(6 bytes) = 41 be 01 00 00 00
0039h mov r15d,[rsi+8]              ; MOV(Mov_r32_rm32) [R15D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 8b 7e 08
003dh mov r12d,[rdi+8]              ; MOV(Mov_r32_rm32) [R12D,mem(32u,RDI:br,DS:sr)]       encoding(4 bytes) = 44 8b 67 08
0041h cmp r15d,r12d                 ; CMP(Cmp_r32_rm32) [R15D,R12D]                        encoding(3 bytes) = 45 3b fc
0044h jne short 00abh               ; JNE(Jne_rel8_64) [ABh:jmp64]                         encoding(2 bytes) = 75 65
0046h movsxd rdx,r15d               ; MOVSXD(Movsxd_r64_rm32) [RDX,R15D]                   encoding(3 bytes) = 49 63 d7
0049h mov rcx,7FFC86FF98E8h         ; MOV(Mov_r64_imm64) [RCX,7ffc86ff98e8h:imm64]         encoding(10 bytes) = 48 b9 e8 98 ff 86 fc 7f 00 00
0053h call 7FFCE67394A0h            ; CALL(Call_rel32_64) [5F47C170h:jmp64]                encoding(5 bytes) = e8 18 c1 47 5f
0058h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
005ch mov edx,[rax+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 50 08
005fh mov r8,rbx                    ; MOV(Mov_r64_rm64) [R8,RBX]                           encoding(3 bytes) = 4c 8b c3
0062h vmovdqu xmm0,xmmword ptr [rsi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 06
0066h vmovdqu xmmword ptr [rsp+48h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 48
006ch vmovdqu xmm0,xmmword ptr [rdi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RDI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 07
0070h vmovdqu xmmword ptr [rsp+38h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 38
0076h lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
007bh mov [r9],rcx                  ; MOV(Mov_rm64_r64) [mem(64u,R9:br,DS:sr),RCX]         encoding(3 bytes) = 49 89 09
007eh mov [r9+8],edx                ; MOV(Mov_rm32_r32) [mem(32u,R9:br,DS:sr),EDX]         encoding(4 bytes) = 41 89 51 08
0082h mov rcx,r8                    ; MOV(Mov_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 8b c8
0085h lea rdx,[rsp+48h]             ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 54 24 48
008ah lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
008fh lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
0094h call 7FFC872BCDB0h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFFA80h:jmp64]        encoding(5 bytes) = e8 e7 f9 ff ff
0099h mov rax,rbx                   ; MOV(Mov_r64_rm64) [RAX,RBX]                          encoding(3 bytes) = 48 8b c3
009ch add rsp,60h                   ; ADD(Add_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 c4 60
00a0h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
00a1h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
00a2h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
00a3h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
00a4h pop r12                       ; POP(Pop_r64) [R12]                                   encoding(2 bytes) = 41 5c
00a6h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
00a8h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
00aah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
00abh mov ecx,0BDDh                 ; MOV(Mov_r32_imm32) [ECX,bddh:imm32]                  encoding(5 bytes) = b9 dd 0b 00 00
00b0h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00bah call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F4765F0h:jmp64]                encoding(5 bytes) = e8 31 65 47 5f
00bfh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
00c2h mov ecx,0BE7h                 ; MOV(Mov_r32_imm32) [ECX,be7h:imm32]                  encoding(5 bytes) = b9 e7 0b 00 00
00c7h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00d1h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F4765F0h:jmp64]                encoding(5 bytes) = e8 1a 65 47 5f
00d6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00d9h lea r8,[rsp+58h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 58
00deh mov [r8],r14b                 ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),R14L]           encoding(3 bytes) = 45 88 30
00e1h mov [r8+4],ebp                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBP]         encoding(4 bytes) = 41 89 68 04
00e5h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00e8h mov ecx,r15d                  ; MOV(Mov_r32_rm32) [ECX,R15D]                         encoding(3 bytes) = 41 8b cf
00ebh mov edx,r12d                  ; MOV(Mov_r32_rm32) [EDX,R12D]                         encoding(3 bytes) = 41 8b d4
00eeh mov rax,[rsp+58h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 58
00f3h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00f8h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFCA0C48h:jmp64]        encoding(5 bytes) = e8 4b 0b ca ff
00fdh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
0100h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F459620h:jmp64]                encoding(5 bytes) = e8 1b 95 45 5f
0105h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> lteqBytes => new byte[262]{0x41,0x57,0x41,0x56,0x41,0x54,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x60,0xC5,0xF8,0x77,0x48,0x8B,0xF1,0x48,0x8D,0x7C,0x24,0x28,0xB9,0x0C,0x00,0x00,0x00,0x33,0xC0,0xF3,0xAB,0x48,0x8B,0xCE,0x48,0x8B,0xD9,0x48,0x8B,0xF2,0x49,0x8B,0xF8,0xBD,0x82,0x00,0x00,0x00,0x41,0xBE,0x01,0x00,0x00,0x00,0x44,0x8B,0x7E,0x08,0x44,0x8B,0x67,0x08,0x45,0x3B,0xFC,0x75,0x65,0x49,0x63,0xD7,0x48,0xB9,0xE8,0x98,0xFF,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x18,0xC1,0x47,0x5F,0x48,0x8D,0x48,0x10,0x8B,0x50,0x08,0x4C,0x8B,0xC3,0xC5,0xFA,0x6F,0x06,0xC5,0xFA,0x7F,0x44,0x24,0x48,0xC5,0xFA,0x6F,0x07,0xC5,0xFA,0x7F,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0x49,0x89,0x09,0x41,0x89,0x51,0x08,0x49,0x8B,0xC8,0x48,0x8D,0x54,0x24,0x48,0x4C,0x8D,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0xE8,0xE7,0xF9,0xFF,0xFF,0x48,0x8B,0xC3,0x48,0x83,0xC4,0x60,0x5B,0x5D,0x5E,0x5F,0x41,0x5C,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0xDD,0x0B,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x31,0x65,0x47,0x5F,0x48,0x8B,0xF0,0xB9,0xE7,0x0B,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x1A,0x65,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x58,0x45,0x88,0x30,0x41,0x89,0x68,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCF,0x41,0x8B,0xD4,0x48,0x8B,0x44,0x24,0x58,0x48,0x89,0x44,0x24,0x20,0xE8,0x4B,0x0B,0xCA,0xFF,0x48,0x8B,0xC8,0xE8,0x1B,0x95,0x45,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> lteq(ReadOnlySpan<byte> lhs, ReadOnlySpan<byte> rhs)
; location: [7FFC872BD460h, 7FFC872BD565h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push r12                      ; PUSH(Push_r64) [R12]                                 encoding(2 bytes) = 41 54
0006h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0007h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0008h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0009h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
000ah sub rsp,60h                   ; SUB(Sub_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 ec 60
000eh vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0011h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0014h lea rdi,[rsp+28h]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 7c 24 28
0019h mov ecx,0Ch                   ; MOV(Mov_r32_imm32) [ECX,ch:imm32]                    encoding(5 bytes) = b9 0c 00 00 00
001eh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0020h rep stosd                     ; STOSD(Stosd_m32_EAX) [mem(32u),EAX]                  encoding(2 bytes) = f3 ab
0022h mov rcx,rsi                   ; MOV(Mov_r64_rm64) [RCX,RSI]                          encoding(3 bytes) = 48 8b ce
0025h mov rbx,rcx                   ; MOV(Mov_r64_rm64) [RBX,RCX]                          encoding(3 bytes) = 48 8b d9
0028h mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
002bh mov rdi,r8                    ; MOV(Mov_r64_rm64) [RDI,R8]                           encoding(3 bytes) = 49 8b f8
002eh mov ebp,86h                   ; MOV(Mov_r32_imm32) [EBP,86h:imm32]                   encoding(5 bytes) = bd 86 00 00 00
0033h mov r14d,1                    ; MOV(Mov_r32_imm32) [R14D,1h:imm32]                   encoding(6 bytes) = 41 be 01 00 00 00
0039h mov r15d,[rsi+8]              ; MOV(Mov_r32_rm32) [R15D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 8b 7e 08
003dh mov r12d,[rdi+8]              ; MOV(Mov_r32_rm32) [R12D,mem(32u,RDI:br,DS:sr)]       encoding(4 bytes) = 44 8b 67 08
0041h cmp r15d,r12d                 ; CMP(Cmp_r32_rm32) [R15D,R12D]                        encoding(3 bytes) = 45 3b fc
0044h jne short 00abh               ; JNE(Jne_rel8_64) [ABh:jmp64]                         encoding(2 bytes) = 75 65
0046h movsxd rdx,r15d               ; MOVSXD(Movsxd_r64_rm32) [RDX,R15D]                   encoding(3 bytes) = 49 63 d7
0049h mov rcx,7FFC86FF98E8h         ; MOV(Mov_r64_imm64) [RCX,7ffc86ff98e8h:imm64]         encoding(10 bytes) = 48 b9 e8 98 ff 86 fc 7f 00 00
0053h call 7FFCE67394A0h            ; CALL(Call_rel32_64) [5F47C040h:jmp64]                encoding(5 bytes) = e8 e8 bf 47 5f
0058h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
005ch mov edx,[rax+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 50 08
005fh mov r8,rbx                    ; MOV(Mov_r64_rm64) [R8,RBX]                           encoding(3 bytes) = 4c 8b c3
0062h vmovdqu xmm0,xmmword ptr [rsi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 06
0066h vmovdqu xmmword ptr [rsp+48h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 48
006ch vmovdqu xmm0,xmmword ptr [rdi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RDI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 07
0070h vmovdqu xmmword ptr [rsp+38h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 38
0076h lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
007bh mov [r9],rcx                  ; MOV(Mov_rm64_r64) [mem(64u,R9:br,DS:sr),RCX]         encoding(3 bytes) = 49 89 09
007eh mov [r9+8],edx                ; MOV(Mov_rm32_r32) [mem(32u,R9:br,DS:sr),EDX]         encoding(4 bytes) = 41 89 51 08
0082h mov rcx,r8                    ; MOV(Mov_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 8b c8
0085h lea rdx,[rsp+48h]             ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 54 24 48
008ah lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
008fh lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
0094h call 7FFC872BCE40h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFF9E0h:jmp64]        encoding(5 bytes) = e8 47 f9 ff ff
0099h mov rax,rbx                   ; MOV(Mov_r64_rm64) [RAX,RBX]                          encoding(3 bytes) = 48 8b c3
009ch add rsp,60h                   ; ADD(Add_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 c4 60
00a0h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
00a1h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
00a2h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
00a3h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
00a4h pop r12                       ; POP(Pop_r64) [R12]                                   encoding(2 bytes) = 41 5c
00a6h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
00a8h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
00aah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
00abh mov ecx,0BDDh                 ; MOV(Mov_r32_imm32) [ECX,bddh:imm32]                  encoding(5 bytes) = b9 dd 0b 00 00
00b0h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00bah call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F4764C0h:jmp64]                encoding(5 bytes) = e8 01 64 47 5f
00bfh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
00c2h mov ecx,0BE7h                 ; MOV(Mov_r32_imm32) [ECX,be7h:imm32]                  encoding(5 bytes) = b9 e7 0b 00 00
00c7h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00d1h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F4764C0h:jmp64]                encoding(5 bytes) = e8 ea 63 47 5f
00d6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00d9h lea r8,[rsp+58h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 58
00deh mov [r8],r14b                 ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),R14L]           encoding(3 bytes) = 45 88 30
00e1h mov [r8+4],ebp                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBP]         encoding(4 bytes) = 41 89 68 04
00e5h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00e8h mov ecx,r15d                  ; MOV(Mov_r32_rm32) [ECX,R15D]                         encoding(3 bytes) = 41 8b cf
00ebh mov edx,r12d                  ; MOV(Mov_r32_rm32) [EDX,R12D]                         encoding(3 bytes) = 41 8b d4
00eeh mov rax,[rsp+58h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 58
00f3h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00f8h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFCA0B18h:jmp64]        encoding(5 bytes) = e8 1b 0a ca ff
00fdh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
0100h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F4594F0h:jmp64]                encoding(5 bytes) = e8 eb 93 45 5f
0105h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> lteqBytes => new byte[262]{0x41,0x57,0x41,0x56,0x41,0x54,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x60,0xC5,0xF8,0x77,0x48,0x8B,0xF1,0x48,0x8D,0x7C,0x24,0x28,0xB9,0x0C,0x00,0x00,0x00,0x33,0xC0,0xF3,0xAB,0x48,0x8B,0xCE,0x48,0x8B,0xD9,0x48,0x8B,0xF2,0x49,0x8B,0xF8,0xBD,0x86,0x00,0x00,0x00,0x41,0xBE,0x01,0x00,0x00,0x00,0x44,0x8B,0x7E,0x08,0x44,0x8B,0x67,0x08,0x45,0x3B,0xFC,0x75,0x65,0x49,0x63,0xD7,0x48,0xB9,0xE8,0x98,0xFF,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xE8,0xBF,0x47,0x5F,0x48,0x8D,0x48,0x10,0x8B,0x50,0x08,0x4C,0x8B,0xC3,0xC5,0xFA,0x6F,0x06,0xC5,0xFA,0x7F,0x44,0x24,0x48,0xC5,0xFA,0x6F,0x07,0xC5,0xFA,0x7F,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0x49,0x89,0x09,0x41,0x89,0x51,0x08,0x49,0x8B,0xC8,0x48,0x8D,0x54,0x24,0x48,0x4C,0x8D,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0xE8,0x47,0xF9,0xFF,0xFF,0x48,0x8B,0xC3,0x48,0x83,0xC4,0x60,0x5B,0x5D,0x5E,0x5F,0x41,0x5C,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0xDD,0x0B,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x01,0x64,0x47,0x5F,0x48,0x8B,0xF0,0xB9,0xE7,0x0B,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xEA,0x63,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x58,0x45,0x88,0x30,0x41,0x89,0x68,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCF,0x41,0x8B,0xD4,0x48,0x8B,0x44,0x24,0x58,0x48,0x89,0x44,0x24,0x20,0xE8,0x1B,0x0A,0xCA,0xFF,0x48,0x8B,0xC8,0xE8,0xEB,0x93,0x45,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> lteq(ReadOnlySpan<short> lhs, ReadOnlySpan<short> rhs)
; location: [7FFC872BD590h, 7FFC872BD695h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push r12                      ; PUSH(Push_r64) [R12]                                 encoding(2 bytes) = 41 54
0006h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0007h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0008h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0009h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
000ah sub rsp,60h                   ; SUB(Sub_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 ec 60
000eh vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0011h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0014h lea rdi,[rsp+28h]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 7c 24 28
0019h mov ecx,0Ch                   ; MOV(Mov_r32_imm32) [ECX,ch:imm32]                    encoding(5 bytes) = b9 0c 00 00 00
001eh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0020h rep stosd                     ; STOSD(Stosd_m32_EAX) [mem(32u),EAX]                  encoding(2 bytes) = f3 ab
0022h mov rcx,rsi                   ; MOV(Mov_r64_rm64) [RCX,RSI]                          encoding(3 bytes) = 48 8b ce
0025h mov rbx,rcx                   ; MOV(Mov_r64_rm64) [RBX,RCX]                          encoding(3 bytes) = 48 8b d9
0028h mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
002bh mov rdi,r8                    ; MOV(Mov_r64_rm64) [RDI,R8]                           encoding(3 bytes) = 49 8b f8
002eh mov ebp,8Ah                   ; MOV(Mov_r32_imm32) [EBP,8ah:imm32]                   encoding(5 bytes) = bd 8a 00 00 00
0033h mov r14d,1                    ; MOV(Mov_r32_imm32) [R14D,1h:imm32]                   encoding(6 bytes) = 41 be 01 00 00 00
0039h mov r15d,[rsi+8]              ; MOV(Mov_r32_rm32) [R15D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 8b 7e 08
003dh mov r12d,[rdi+8]              ; MOV(Mov_r32_rm32) [R12D,mem(32u,RDI:br,DS:sr)]       encoding(4 bytes) = 44 8b 67 08
0041h cmp r15d,r12d                 ; CMP(Cmp_r32_rm32) [R15D,R12D]                        encoding(3 bytes) = 45 3b fc
0044h jne short 00abh               ; JNE(Jne_rel8_64) [ABh:jmp64]                         encoding(2 bytes) = 75 65
0046h movsxd rdx,r15d               ; MOVSXD(Movsxd_r64_rm32) [RDX,R15D]                   encoding(3 bytes) = 49 63 d7
0049h mov rcx,7FFC86FF98E8h         ; MOV(Mov_r64_imm64) [RCX,7ffc86ff98e8h:imm64]         encoding(10 bytes) = 48 b9 e8 98 ff 86 fc 7f 00 00
0053h call 7FFCE67394A0h            ; CALL(Call_rel32_64) [5F47BF10h:jmp64]                encoding(5 bytes) = e8 b8 be 47 5f
0058h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
005ch mov edx,[rax+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 50 08
005fh mov r8,rbx                    ; MOV(Mov_r64_rm64) [R8,RBX]                           encoding(3 bytes) = 4c 8b c3
0062h vmovdqu xmm0,xmmword ptr [rsi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 06
0066h vmovdqu xmmword ptr [rsp+48h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 48
006ch vmovdqu xmm0,xmmword ptr [rdi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RDI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 07
0070h vmovdqu xmmword ptr [rsp+38h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 38
0076h lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
007bh mov [r9],rcx                  ; MOV(Mov_rm64_r64) [mem(64u,R9:br,DS:sr),RCX]         encoding(3 bytes) = 49 89 09
007eh mov [r9+8],edx                ; MOV(Mov_rm32_r32) [mem(32u,R9:br,DS:sr),EDX]         encoding(4 bytes) = 41 89 51 08
0082h mov rcx,r8                    ; MOV(Mov_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 8b c8
0085h lea rdx,[rsp+48h]             ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 54 24 48
008ah lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
008fh lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
0094h call 7FFC872BCED0h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFF940h:jmp64]        encoding(5 bytes) = e8 a7 f8 ff ff
0099h mov rax,rbx                   ; MOV(Mov_r64_rm64) [RAX,RBX]                          encoding(3 bytes) = 48 8b c3
009ch add rsp,60h                   ; ADD(Add_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 c4 60
00a0h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
00a1h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
00a2h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
00a3h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
00a4h pop r12                       ; POP(Pop_r64) [R12]                                   encoding(2 bytes) = 41 5c
00a6h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
00a8h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
00aah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
00abh mov ecx,0BDDh                 ; MOV(Mov_r32_imm32) [ECX,bddh:imm32]                  encoding(5 bytes) = b9 dd 0b 00 00
00b0h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00bah call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F476390h:jmp64]                encoding(5 bytes) = e8 d1 62 47 5f
00bfh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
00c2h mov ecx,0BE7h                 ; MOV(Mov_r32_imm32) [ECX,be7h:imm32]                  encoding(5 bytes) = b9 e7 0b 00 00
00c7h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00d1h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F476390h:jmp64]                encoding(5 bytes) = e8 ba 62 47 5f
00d6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00d9h lea r8,[rsp+58h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 58
00deh mov [r8],r14b                 ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),R14L]           encoding(3 bytes) = 45 88 30
00e1h mov [r8+4],ebp                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBP]         encoding(4 bytes) = 41 89 68 04
00e5h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00e8h mov ecx,r15d                  ; MOV(Mov_r32_rm32) [ECX,R15D]                         encoding(3 bytes) = 41 8b cf
00ebh mov edx,r12d                  ; MOV(Mov_r32_rm32) [EDX,R12D]                         encoding(3 bytes) = 41 8b d4
00eeh mov rax,[rsp+58h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 58
00f3h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00f8h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFCA09E8h:jmp64]        encoding(5 bytes) = e8 eb 08 ca ff
00fdh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
0100h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F4593C0h:jmp64]                encoding(5 bytes) = e8 bb 92 45 5f
0105h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> lteqBytes => new byte[262]{0x41,0x57,0x41,0x56,0x41,0x54,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x60,0xC5,0xF8,0x77,0x48,0x8B,0xF1,0x48,0x8D,0x7C,0x24,0x28,0xB9,0x0C,0x00,0x00,0x00,0x33,0xC0,0xF3,0xAB,0x48,0x8B,0xCE,0x48,0x8B,0xD9,0x48,0x8B,0xF2,0x49,0x8B,0xF8,0xBD,0x8A,0x00,0x00,0x00,0x41,0xBE,0x01,0x00,0x00,0x00,0x44,0x8B,0x7E,0x08,0x44,0x8B,0x67,0x08,0x45,0x3B,0xFC,0x75,0x65,0x49,0x63,0xD7,0x48,0xB9,0xE8,0x98,0xFF,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xB8,0xBE,0x47,0x5F,0x48,0x8D,0x48,0x10,0x8B,0x50,0x08,0x4C,0x8B,0xC3,0xC5,0xFA,0x6F,0x06,0xC5,0xFA,0x7F,0x44,0x24,0x48,0xC5,0xFA,0x6F,0x07,0xC5,0xFA,0x7F,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0x49,0x89,0x09,0x41,0x89,0x51,0x08,0x49,0x8B,0xC8,0x48,0x8D,0x54,0x24,0x48,0x4C,0x8D,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0xE8,0xA7,0xF8,0xFF,0xFF,0x48,0x8B,0xC3,0x48,0x83,0xC4,0x60,0x5B,0x5D,0x5E,0x5F,0x41,0x5C,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0xDD,0x0B,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xD1,0x62,0x47,0x5F,0x48,0x8B,0xF0,0xB9,0xE7,0x0B,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xBA,0x62,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x58,0x45,0x88,0x30,0x41,0x89,0x68,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCF,0x41,0x8B,0xD4,0x48,0x8B,0x44,0x24,0x58,0x48,0x89,0x44,0x24,0x20,0xE8,0xEB,0x08,0xCA,0xFF,0x48,0x8B,0xC8,0xE8,0xBB,0x92,0x45,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> lteq(ReadOnlySpan<ushort> lhs, ReadOnlySpan<ushort> rhs)
; location: [7FFC872BD6C0h, 7FFC872BD7C5h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push r12                      ; PUSH(Push_r64) [R12]                                 encoding(2 bytes) = 41 54
0006h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0007h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0008h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0009h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
000ah sub rsp,60h                   ; SUB(Sub_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 ec 60
000eh vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0011h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0014h lea rdi,[rsp+28h]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 7c 24 28
0019h mov ecx,0Ch                   ; MOV(Mov_r32_imm32) [ECX,ch:imm32]                    encoding(5 bytes) = b9 0c 00 00 00
001eh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0020h rep stosd                     ; STOSD(Stosd_m32_EAX) [mem(32u),EAX]                  encoding(2 bytes) = f3 ab
0022h mov rcx,rsi                   ; MOV(Mov_r64_rm64) [RCX,RSI]                          encoding(3 bytes) = 48 8b ce
0025h mov rbx,rcx                   ; MOV(Mov_r64_rm64) [RBX,RCX]                          encoding(3 bytes) = 48 8b d9
0028h mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
002bh mov rdi,r8                    ; MOV(Mov_r64_rm64) [RDI,R8]                           encoding(3 bytes) = 49 8b f8
002eh mov ebp,8Eh                   ; MOV(Mov_r32_imm32) [EBP,8eh:imm32]                   encoding(5 bytes) = bd 8e 00 00 00
0033h mov r14d,1                    ; MOV(Mov_r32_imm32) [R14D,1h:imm32]                   encoding(6 bytes) = 41 be 01 00 00 00
0039h mov r15d,[rsi+8]              ; MOV(Mov_r32_rm32) [R15D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 8b 7e 08
003dh mov r12d,[rdi+8]              ; MOV(Mov_r32_rm32) [R12D,mem(32u,RDI:br,DS:sr)]       encoding(4 bytes) = 44 8b 67 08
0041h cmp r15d,r12d                 ; CMP(Cmp_r32_rm32) [R15D,R12D]                        encoding(3 bytes) = 45 3b fc
0044h jne short 00abh               ; JNE(Jne_rel8_64) [ABh:jmp64]                         encoding(2 bytes) = 75 65
0046h movsxd rdx,r15d               ; MOVSXD(Movsxd_r64_rm32) [RDX,R15D]                   encoding(3 bytes) = 49 63 d7
0049h mov rcx,7FFC86FF98E8h         ; MOV(Mov_r64_imm64) [RCX,7ffc86ff98e8h:imm64]         encoding(10 bytes) = 48 b9 e8 98 ff 86 fc 7f 00 00
0053h call 7FFCE67394A0h            ; CALL(Call_rel32_64) [5F47BDE0h:jmp64]                encoding(5 bytes) = e8 88 bd 47 5f
0058h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
005ch mov edx,[rax+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 50 08
005fh mov r8,rbx                    ; MOV(Mov_r64_rm64) [R8,RBX]                           encoding(3 bytes) = 4c 8b c3
0062h vmovdqu xmm0,xmmword ptr [rsi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 06
0066h vmovdqu xmmword ptr [rsp+48h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 48
006ch vmovdqu xmm0,xmmword ptr [rdi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RDI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 07
0070h vmovdqu xmmword ptr [rsp+38h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 38
0076h lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
007bh mov [r9],rcx                  ; MOV(Mov_rm64_r64) [mem(64u,R9:br,DS:sr),RCX]         encoding(3 bytes) = 49 89 09
007eh mov [r9+8],edx                ; MOV(Mov_rm32_r32) [mem(32u,R9:br,DS:sr),EDX]         encoding(4 bytes) = 41 89 51 08
0082h mov rcx,r8                    ; MOV(Mov_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 8b c8
0085h lea rdx,[rsp+48h]             ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 54 24 48
008ah lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
008fh lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
0094h call 7FFC872BCF60h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFF8A0h:jmp64]        encoding(5 bytes) = e8 07 f8 ff ff
0099h mov rax,rbx                   ; MOV(Mov_r64_rm64) [RAX,RBX]                          encoding(3 bytes) = 48 8b c3
009ch add rsp,60h                   ; ADD(Add_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 c4 60
00a0h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
00a1h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
00a2h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
00a3h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
00a4h pop r12                       ; POP(Pop_r64) [R12]                                   encoding(2 bytes) = 41 5c
00a6h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
00a8h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
00aah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
00abh mov ecx,0BDDh                 ; MOV(Mov_r32_imm32) [ECX,bddh:imm32]                  encoding(5 bytes) = b9 dd 0b 00 00
00b0h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00bah call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F476260h:jmp64]                encoding(5 bytes) = e8 a1 61 47 5f
00bfh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
00c2h mov ecx,0BE7h                 ; MOV(Mov_r32_imm32) [ECX,be7h:imm32]                  encoding(5 bytes) = b9 e7 0b 00 00
00c7h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00d1h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F476260h:jmp64]                encoding(5 bytes) = e8 8a 61 47 5f
00d6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00d9h lea r8,[rsp+58h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 58
00deh mov [r8],r14b                 ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),R14L]           encoding(3 bytes) = 45 88 30
00e1h mov [r8+4],ebp                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBP]         encoding(4 bytes) = 41 89 68 04
00e5h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00e8h mov ecx,r15d                  ; MOV(Mov_r32_rm32) [ECX,R15D]                         encoding(3 bytes) = 41 8b cf
00ebh mov edx,r12d                  ; MOV(Mov_r32_rm32) [EDX,R12D]                         encoding(3 bytes) = 41 8b d4
00eeh mov rax,[rsp+58h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 58
00f3h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00f8h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFCA08B8h:jmp64]        encoding(5 bytes) = e8 bb 07 ca ff
00fdh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
0100h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F459290h:jmp64]                encoding(5 bytes) = e8 8b 91 45 5f
0105h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> lteqBytes => new byte[262]{0x41,0x57,0x41,0x56,0x41,0x54,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x60,0xC5,0xF8,0x77,0x48,0x8B,0xF1,0x48,0x8D,0x7C,0x24,0x28,0xB9,0x0C,0x00,0x00,0x00,0x33,0xC0,0xF3,0xAB,0x48,0x8B,0xCE,0x48,0x8B,0xD9,0x48,0x8B,0xF2,0x49,0x8B,0xF8,0xBD,0x8E,0x00,0x00,0x00,0x41,0xBE,0x01,0x00,0x00,0x00,0x44,0x8B,0x7E,0x08,0x44,0x8B,0x67,0x08,0x45,0x3B,0xFC,0x75,0x65,0x49,0x63,0xD7,0x48,0xB9,0xE8,0x98,0xFF,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x88,0xBD,0x47,0x5F,0x48,0x8D,0x48,0x10,0x8B,0x50,0x08,0x4C,0x8B,0xC3,0xC5,0xFA,0x6F,0x06,0xC5,0xFA,0x7F,0x44,0x24,0x48,0xC5,0xFA,0x6F,0x07,0xC5,0xFA,0x7F,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0x49,0x89,0x09,0x41,0x89,0x51,0x08,0x49,0x8B,0xC8,0x48,0x8D,0x54,0x24,0x48,0x4C,0x8D,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0xE8,0x07,0xF8,0xFF,0xFF,0x48,0x8B,0xC3,0x48,0x83,0xC4,0x60,0x5B,0x5D,0x5E,0x5F,0x41,0x5C,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0xDD,0x0B,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xA1,0x61,0x47,0x5F,0x48,0x8B,0xF0,0xB9,0xE7,0x0B,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x8A,0x61,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x58,0x45,0x88,0x30,0x41,0x89,0x68,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCF,0x41,0x8B,0xD4,0x48,0x8B,0x44,0x24,0x58,0x48,0x89,0x44,0x24,0x20,0xE8,0xBB,0x07,0xCA,0xFF,0x48,0x8B,0xC8,0xE8,0x8B,0x91,0x45,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> lteq(ReadOnlySpan<int> lhs, ReadOnlySpan<int> rhs)
; location: [7FFC872BD7F0h, 7FFC872BD8F5h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push r12                      ; PUSH(Push_r64) [R12]                                 encoding(2 bytes) = 41 54
0006h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0007h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0008h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0009h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
000ah sub rsp,60h                   ; SUB(Sub_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 ec 60
000eh vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0011h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0014h lea rdi,[rsp+28h]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 7c 24 28
0019h mov ecx,0Ch                   ; MOV(Mov_r32_imm32) [ECX,ch:imm32]                    encoding(5 bytes) = b9 0c 00 00 00
001eh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0020h rep stosd                     ; STOSD(Stosd_m32_EAX) [mem(32u),EAX]                  encoding(2 bytes) = f3 ab
0022h mov rcx,rsi                   ; MOV(Mov_r64_rm64) [RCX,RSI]                          encoding(3 bytes) = 48 8b ce
0025h mov rbx,rcx                   ; MOV(Mov_r64_rm64) [RBX,RCX]                          encoding(3 bytes) = 48 8b d9
0028h mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
002bh mov rdi,r8                    ; MOV(Mov_r64_rm64) [RDI,R8]                           encoding(3 bytes) = 49 8b f8
002eh mov ebp,92h                   ; MOV(Mov_r32_imm32) [EBP,92h:imm32]                   encoding(5 bytes) = bd 92 00 00 00
0033h mov r14d,1                    ; MOV(Mov_r32_imm32) [R14D,1h:imm32]                   encoding(6 bytes) = 41 be 01 00 00 00
0039h mov r15d,[rsi+8]              ; MOV(Mov_r32_rm32) [R15D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 8b 7e 08
003dh mov r12d,[rdi+8]              ; MOV(Mov_r32_rm32) [R12D,mem(32u,RDI:br,DS:sr)]       encoding(4 bytes) = 44 8b 67 08
0041h cmp r15d,r12d                 ; CMP(Cmp_r32_rm32) [R15D,R12D]                        encoding(3 bytes) = 45 3b fc
0044h jne short 00abh               ; JNE(Jne_rel8_64) [ABh:jmp64]                         encoding(2 bytes) = 75 65
0046h movsxd rdx,r15d               ; MOVSXD(Movsxd_r64_rm32) [RDX,R15D]                   encoding(3 bytes) = 49 63 d7
0049h mov rcx,7FFC86FF98E8h         ; MOV(Mov_r64_imm64) [RCX,7ffc86ff98e8h:imm64]         encoding(10 bytes) = 48 b9 e8 98 ff 86 fc 7f 00 00
0053h call 7FFCE67394A0h            ; CALL(Call_rel32_64) [5F47BCB0h:jmp64]                encoding(5 bytes) = e8 58 bc 47 5f
0058h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
005ch mov edx,[rax+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 50 08
005fh mov r8,rbx                    ; MOV(Mov_r64_rm64) [R8,RBX]                           encoding(3 bytes) = 4c 8b c3
0062h vmovdqu xmm0,xmmword ptr [rsi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 06
0066h vmovdqu xmmword ptr [rsp+48h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 48
006ch vmovdqu xmm0,xmmword ptr [rdi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RDI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 07
0070h vmovdqu xmmword ptr [rsp+38h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 38
0076h lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
007bh mov [r9],rcx                  ; MOV(Mov_rm64_r64) [mem(64u,R9:br,DS:sr),RCX]         encoding(3 bytes) = 49 89 09
007eh mov [r9+8],edx                ; MOV(Mov_rm32_r32) [mem(32u,R9:br,DS:sr),EDX]         encoding(4 bytes) = 41 89 51 08
0082h mov rcx,r8                    ; MOV(Mov_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 8b c8
0085h lea rdx,[rsp+48h]             ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 54 24 48
008ah lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
008fh lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
0094h call 7FFC872BCFF0h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFF800h:jmp64]        encoding(5 bytes) = e8 67 f7 ff ff
0099h mov rax,rbx                   ; MOV(Mov_r64_rm64) [RAX,RBX]                          encoding(3 bytes) = 48 8b c3
009ch add rsp,60h                   ; ADD(Add_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 c4 60
00a0h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
00a1h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
00a2h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
00a3h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
00a4h pop r12                       ; POP(Pop_r64) [R12]                                   encoding(2 bytes) = 41 5c
00a6h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
00a8h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
00aah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
00abh mov ecx,0BDDh                 ; MOV(Mov_r32_imm32) [ECX,bddh:imm32]                  encoding(5 bytes) = b9 dd 0b 00 00
00b0h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00bah call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F476130h:jmp64]                encoding(5 bytes) = e8 71 60 47 5f
00bfh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
00c2h mov ecx,0BE7h                 ; MOV(Mov_r32_imm32) [ECX,be7h:imm32]                  encoding(5 bytes) = b9 e7 0b 00 00
00c7h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00d1h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F476130h:jmp64]                encoding(5 bytes) = e8 5a 60 47 5f
00d6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00d9h lea r8,[rsp+58h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 58
00deh mov [r8],r14b                 ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),R14L]           encoding(3 bytes) = 45 88 30
00e1h mov [r8+4],ebp                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBP]         encoding(4 bytes) = 41 89 68 04
00e5h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00e8h mov ecx,r15d                  ; MOV(Mov_r32_rm32) [ECX,R15D]                         encoding(3 bytes) = 41 8b cf
00ebh mov edx,r12d                  ; MOV(Mov_r32_rm32) [EDX,R12D]                         encoding(3 bytes) = 41 8b d4
00eeh mov rax,[rsp+58h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 58
00f3h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00f8h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFCA0788h:jmp64]        encoding(5 bytes) = e8 8b 06 ca ff
00fdh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
0100h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F459160h:jmp64]                encoding(5 bytes) = e8 5b 90 45 5f
0105h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> lteqBytes => new byte[262]{0x41,0x57,0x41,0x56,0x41,0x54,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x60,0xC5,0xF8,0x77,0x48,0x8B,0xF1,0x48,0x8D,0x7C,0x24,0x28,0xB9,0x0C,0x00,0x00,0x00,0x33,0xC0,0xF3,0xAB,0x48,0x8B,0xCE,0x48,0x8B,0xD9,0x48,0x8B,0xF2,0x49,0x8B,0xF8,0xBD,0x92,0x00,0x00,0x00,0x41,0xBE,0x01,0x00,0x00,0x00,0x44,0x8B,0x7E,0x08,0x44,0x8B,0x67,0x08,0x45,0x3B,0xFC,0x75,0x65,0x49,0x63,0xD7,0x48,0xB9,0xE8,0x98,0xFF,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x58,0xBC,0x47,0x5F,0x48,0x8D,0x48,0x10,0x8B,0x50,0x08,0x4C,0x8B,0xC3,0xC5,0xFA,0x6F,0x06,0xC5,0xFA,0x7F,0x44,0x24,0x48,0xC5,0xFA,0x6F,0x07,0xC5,0xFA,0x7F,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0x49,0x89,0x09,0x41,0x89,0x51,0x08,0x49,0x8B,0xC8,0x48,0x8D,0x54,0x24,0x48,0x4C,0x8D,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0xE8,0x67,0xF7,0xFF,0xFF,0x48,0x8B,0xC3,0x48,0x83,0xC4,0x60,0x5B,0x5D,0x5E,0x5F,0x41,0x5C,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0xDD,0x0B,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x71,0x60,0x47,0x5F,0x48,0x8B,0xF0,0xB9,0xE7,0x0B,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x5A,0x60,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x58,0x45,0x88,0x30,0x41,0x89,0x68,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCF,0x41,0x8B,0xD4,0x48,0x8B,0x44,0x24,0x58,0x48,0x89,0x44,0x24,0x20,0xE8,0x8B,0x06,0xCA,0xFF,0x48,0x8B,0xC8,0xE8,0x5B,0x90,0x45,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> lteq(ReadOnlySpan<uint> lhs, ReadOnlySpan<uint> rhs)
; location: [7FFC872BD920h, 7FFC872BDA25h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push r12                      ; PUSH(Push_r64) [R12]                                 encoding(2 bytes) = 41 54
0006h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0007h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0008h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0009h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
000ah sub rsp,60h                   ; SUB(Sub_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 ec 60
000eh vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0011h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0014h lea rdi,[rsp+28h]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 7c 24 28
0019h mov ecx,0Ch                   ; MOV(Mov_r32_imm32) [ECX,ch:imm32]                    encoding(5 bytes) = b9 0c 00 00 00
001eh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0020h rep stosd                     ; STOSD(Stosd_m32_EAX) [mem(32u),EAX]                  encoding(2 bytes) = f3 ab
0022h mov rcx,rsi                   ; MOV(Mov_r64_rm64) [RCX,RSI]                          encoding(3 bytes) = 48 8b ce
0025h mov rbx,rcx                   ; MOV(Mov_r64_rm64) [RBX,RCX]                          encoding(3 bytes) = 48 8b d9
0028h mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
002bh mov rdi,r8                    ; MOV(Mov_r64_rm64) [RDI,R8]                           encoding(3 bytes) = 49 8b f8
002eh mov ebp,96h                   ; MOV(Mov_r32_imm32) [EBP,96h:imm32]                   encoding(5 bytes) = bd 96 00 00 00
0033h mov r14d,1                    ; MOV(Mov_r32_imm32) [R14D,1h:imm32]                   encoding(6 bytes) = 41 be 01 00 00 00
0039h mov r15d,[rsi+8]              ; MOV(Mov_r32_rm32) [R15D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 8b 7e 08
003dh mov r12d,[rdi+8]              ; MOV(Mov_r32_rm32) [R12D,mem(32u,RDI:br,DS:sr)]       encoding(4 bytes) = 44 8b 67 08
0041h cmp r15d,r12d                 ; CMP(Cmp_r32_rm32) [R15D,R12D]                        encoding(3 bytes) = 45 3b fc
0044h jne short 00abh               ; JNE(Jne_rel8_64) [ABh:jmp64]                         encoding(2 bytes) = 75 65
0046h movsxd rdx,r15d               ; MOVSXD(Movsxd_r64_rm32) [RDX,R15D]                   encoding(3 bytes) = 49 63 d7
0049h mov rcx,7FFC86FF98E8h         ; MOV(Mov_r64_imm64) [RCX,7ffc86ff98e8h:imm64]         encoding(10 bytes) = 48 b9 e8 98 ff 86 fc 7f 00 00
0053h call 7FFCE67394A0h            ; CALL(Call_rel32_64) [5F47BB80h:jmp64]                encoding(5 bytes) = e8 28 bb 47 5f
0058h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
005ch mov edx,[rax+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 50 08
005fh mov r8,rbx                    ; MOV(Mov_r64_rm64) [R8,RBX]                           encoding(3 bytes) = 4c 8b c3
0062h vmovdqu xmm0,xmmword ptr [rsi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 06
0066h vmovdqu xmmword ptr [rsp+48h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 48
006ch vmovdqu xmm0,xmmword ptr [rdi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RDI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 07
0070h vmovdqu xmmword ptr [rsp+38h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 38
0076h lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
007bh mov [r9],rcx                  ; MOV(Mov_rm64_r64) [mem(64u,R9:br,DS:sr),RCX]         encoding(3 bytes) = 49 89 09
007eh mov [r9+8],edx                ; MOV(Mov_rm32_r32) [mem(32u,R9:br,DS:sr),EDX]         encoding(4 bytes) = 41 89 51 08
0082h mov rcx,r8                    ; MOV(Mov_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 8b c8
0085h lea rdx,[rsp+48h]             ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 54 24 48
008ah lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
008fh lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
0094h call 7FFC872BD070h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFF750h:jmp64]        encoding(5 bytes) = e8 b7 f6 ff ff
0099h mov rax,rbx                   ; MOV(Mov_r64_rm64) [RAX,RBX]                          encoding(3 bytes) = 48 8b c3
009ch add rsp,60h                   ; ADD(Add_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 c4 60
00a0h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
00a1h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
00a2h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
00a3h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
00a4h pop r12                       ; POP(Pop_r64) [R12]                                   encoding(2 bytes) = 41 5c
00a6h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
00a8h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
00aah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
00abh mov ecx,0BDDh                 ; MOV(Mov_r32_imm32) [ECX,bddh:imm32]                  encoding(5 bytes) = b9 dd 0b 00 00
00b0h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00bah call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F476000h:jmp64]                encoding(5 bytes) = e8 41 5f 47 5f
00bfh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
00c2h mov ecx,0BE7h                 ; MOV(Mov_r32_imm32) [ECX,be7h:imm32]                  encoding(5 bytes) = b9 e7 0b 00 00
00c7h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00d1h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F476000h:jmp64]                encoding(5 bytes) = e8 2a 5f 47 5f
00d6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00d9h lea r8,[rsp+58h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 58
00deh mov [r8],r14b                 ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),R14L]           encoding(3 bytes) = 45 88 30
00e1h mov [r8+4],ebp                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBP]         encoding(4 bytes) = 41 89 68 04
00e5h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00e8h mov ecx,r15d                  ; MOV(Mov_r32_rm32) [ECX,R15D]                         encoding(3 bytes) = 41 8b cf
00ebh mov edx,r12d                  ; MOV(Mov_r32_rm32) [EDX,R12D]                         encoding(3 bytes) = 41 8b d4
00eeh mov rax,[rsp+58h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 58
00f3h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00f8h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFCA0658h:jmp64]        encoding(5 bytes) = e8 5b 05 ca ff
00fdh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
0100h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F459030h:jmp64]                encoding(5 bytes) = e8 2b 8f 45 5f
0105h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> lteqBytes => new byte[262]{0x41,0x57,0x41,0x56,0x41,0x54,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x60,0xC5,0xF8,0x77,0x48,0x8B,0xF1,0x48,0x8D,0x7C,0x24,0x28,0xB9,0x0C,0x00,0x00,0x00,0x33,0xC0,0xF3,0xAB,0x48,0x8B,0xCE,0x48,0x8B,0xD9,0x48,0x8B,0xF2,0x49,0x8B,0xF8,0xBD,0x96,0x00,0x00,0x00,0x41,0xBE,0x01,0x00,0x00,0x00,0x44,0x8B,0x7E,0x08,0x44,0x8B,0x67,0x08,0x45,0x3B,0xFC,0x75,0x65,0x49,0x63,0xD7,0x48,0xB9,0xE8,0x98,0xFF,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x28,0xBB,0x47,0x5F,0x48,0x8D,0x48,0x10,0x8B,0x50,0x08,0x4C,0x8B,0xC3,0xC5,0xFA,0x6F,0x06,0xC5,0xFA,0x7F,0x44,0x24,0x48,0xC5,0xFA,0x6F,0x07,0xC5,0xFA,0x7F,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0x49,0x89,0x09,0x41,0x89,0x51,0x08,0x49,0x8B,0xC8,0x48,0x8D,0x54,0x24,0x48,0x4C,0x8D,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0xE8,0xB7,0xF6,0xFF,0xFF,0x48,0x8B,0xC3,0x48,0x83,0xC4,0x60,0x5B,0x5D,0x5E,0x5F,0x41,0x5C,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0xDD,0x0B,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x41,0x5F,0x47,0x5F,0x48,0x8B,0xF0,0xB9,0xE7,0x0B,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x2A,0x5F,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x58,0x45,0x88,0x30,0x41,0x89,0x68,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCF,0x41,0x8B,0xD4,0x48,0x8B,0x44,0x24,0x58,0x48,0x89,0x44,0x24,0x20,0xE8,0x5B,0x05,0xCA,0xFF,0x48,0x8B,0xC8,0xE8,0x2B,0x8F,0x45,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> lteq(ReadOnlySpan<long> lhs, ReadOnlySpan<long> rhs)
; location: [7FFC872BDA50h, 7FFC872BDB55h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push r12                      ; PUSH(Push_r64) [R12]                                 encoding(2 bytes) = 41 54
0006h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0007h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0008h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0009h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
000ah sub rsp,60h                   ; SUB(Sub_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 ec 60
000eh vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0011h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0014h lea rdi,[rsp+28h]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 7c 24 28
0019h mov ecx,0Ch                   ; MOV(Mov_r32_imm32) [ECX,ch:imm32]                    encoding(5 bytes) = b9 0c 00 00 00
001eh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0020h rep stosd                     ; STOSD(Stosd_m32_EAX) [mem(32u),EAX]                  encoding(2 bytes) = f3 ab
0022h mov rcx,rsi                   ; MOV(Mov_r64_rm64) [RCX,RSI]                          encoding(3 bytes) = 48 8b ce
0025h mov rbx,rcx                   ; MOV(Mov_r64_rm64) [RBX,RCX]                          encoding(3 bytes) = 48 8b d9
0028h mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
002bh mov rdi,r8                    ; MOV(Mov_r64_rm64) [RDI,R8]                           encoding(3 bytes) = 49 8b f8
002eh mov ebp,9Ah                   ; MOV(Mov_r32_imm32) [EBP,9ah:imm32]                   encoding(5 bytes) = bd 9a 00 00 00
0033h mov r14d,1                    ; MOV(Mov_r32_imm32) [R14D,1h:imm32]                   encoding(6 bytes) = 41 be 01 00 00 00
0039h mov r15d,[rsi+8]              ; MOV(Mov_r32_rm32) [R15D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 8b 7e 08
003dh mov r12d,[rdi+8]              ; MOV(Mov_r32_rm32) [R12D,mem(32u,RDI:br,DS:sr)]       encoding(4 bytes) = 44 8b 67 08
0041h cmp r15d,r12d                 ; CMP(Cmp_r32_rm32) [R15D,R12D]                        encoding(3 bytes) = 45 3b fc
0044h jne short 00abh               ; JNE(Jne_rel8_64) [ABh:jmp64]                         encoding(2 bytes) = 75 65
0046h movsxd rdx,r15d               ; MOVSXD(Movsxd_r64_rm32) [RDX,R15D]                   encoding(3 bytes) = 49 63 d7
0049h mov rcx,7FFC86FF98E8h         ; MOV(Mov_r64_imm64) [RCX,7ffc86ff98e8h:imm64]         encoding(10 bytes) = 48 b9 e8 98 ff 86 fc 7f 00 00
0053h call 7FFCE67394A0h            ; CALL(Call_rel32_64) [5F47BA50h:jmp64]                encoding(5 bytes) = e8 f8 b9 47 5f
0058h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
005ch mov edx,[rax+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 50 08
005fh mov r8,rbx                    ; MOV(Mov_r64_rm64) [R8,RBX]                           encoding(3 bytes) = 4c 8b c3
0062h vmovdqu xmm0,xmmword ptr [rsi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 06
0066h vmovdqu xmmword ptr [rsp+48h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 48
006ch vmovdqu xmm0,xmmword ptr [rdi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RDI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 07
0070h vmovdqu xmmword ptr [rsp+38h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 38
0076h lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
007bh mov [r9],rcx                  ; MOV(Mov_rm64_r64) [mem(64u,R9:br,DS:sr),RCX]         encoding(3 bytes) = 49 89 09
007eh mov [r9+8],edx                ; MOV(Mov_rm32_r32) [mem(32u,R9:br,DS:sr),EDX]         encoding(4 bytes) = 41 89 51 08
0082h mov rcx,r8                    ; MOV(Mov_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 8b c8
0085h lea rdx,[rsp+48h]             ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 54 24 48
008ah lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
008fh lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
0094h call 7FFC872BD0F0h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFF6A0h:jmp64]        encoding(5 bytes) = e8 07 f6 ff ff
0099h mov rax,rbx                   ; MOV(Mov_r64_rm64) [RAX,RBX]                          encoding(3 bytes) = 48 8b c3
009ch add rsp,60h                   ; ADD(Add_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 c4 60
00a0h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
00a1h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
00a2h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
00a3h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
00a4h pop r12                       ; POP(Pop_r64) [R12]                                   encoding(2 bytes) = 41 5c
00a6h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
00a8h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
00aah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
00abh mov ecx,0BDDh                 ; MOV(Mov_r32_imm32) [ECX,bddh:imm32]                  encoding(5 bytes) = b9 dd 0b 00 00
00b0h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00bah call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F475ED0h:jmp64]                encoding(5 bytes) = e8 11 5e 47 5f
00bfh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
00c2h mov ecx,0BE7h                 ; MOV(Mov_r32_imm32) [ECX,be7h:imm32]                  encoding(5 bytes) = b9 e7 0b 00 00
00c7h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00d1h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F475ED0h:jmp64]                encoding(5 bytes) = e8 fa 5d 47 5f
00d6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00d9h lea r8,[rsp+58h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 58
00deh mov [r8],r14b                 ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),R14L]           encoding(3 bytes) = 45 88 30
00e1h mov [r8+4],ebp                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBP]         encoding(4 bytes) = 41 89 68 04
00e5h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00e8h mov ecx,r15d                  ; MOV(Mov_r32_rm32) [ECX,R15D]                         encoding(3 bytes) = 41 8b cf
00ebh mov edx,r12d                  ; MOV(Mov_r32_rm32) [EDX,R12D]                         encoding(3 bytes) = 41 8b d4
00eeh mov rax,[rsp+58h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 58
00f3h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00f8h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFCA0528h:jmp64]        encoding(5 bytes) = e8 2b 04 ca ff
00fdh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
0100h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F458F00h:jmp64]                encoding(5 bytes) = e8 fb 8d 45 5f
0105h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> lteqBytes => new byte[262]{0x41,0x57,0x41,0x56,0x41,0x54,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x60,0xC5,0xF8,0x77,0x48,0x8B,0xF1,0x48,0x8D,0x7C,0x24,0x28,0xB9,0x0C,0x00,0x00,0x00,0x33,0xC0,0xF3,0xAB,0x48,0x8B,0xCE,0x48,0x8B,0xD9,0x48,0x8B,0xF2,0x49,0x8B,0xF8,0xBD,0x9A,0x00,0x00,0x00,0x41,0xBE,0x01,0x00,0x00,0x00,0x44,0x8B,0x7E,0x08,0x44,0x8B,0x67,0x08,0x45,0x3B,0xFC,0x75,0x65,0x49,0x63,0xD7,0x48,0xB9,0xE8,0x98,0xFF,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xF8,0xB9,0x47,0x5F,0x48,0x8D,0x48,0x10,0x8B,0x50,0x08,0x4C,0x8B,0xC3,0xC5,0xFA,0x6F,0x06,0xC5,0xFA,0x7F,0x44,0x24,0x48,0xC5,0xFA,0x6F,0x07,0xC5,0xFA,0x7F,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0x49,0x89,0x09,0x41,0x89,0x51,0x08,0x49,0x8B,0xC8,0x48,0x8D,0x54,0x24,0x48,0x4C,0x8D,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0xE8,0x07,0xF6,0xFF,0xFF,0x48,0x8B,0xC3,0x48,0x83,0xC4,0x60,0x5B,0x5D,0x5E,0x5F,0x41,0x5C,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0xDD,0x0B,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x11,0x5E,0x47,0x5F,0x48,0x8B,0xF0,0xB9,0xE7,0x0B,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xFA,0x5D,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x58,0x45,0x88,0x30,0x41,0x89,0x68,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCF,0x41,0x8B,0xD4,0x48,0x8B,0x44,0x24,0x58,0x48,0x89,0x44,0x24,0x20,0xE8,0x2B,0x04,0xCA,0xFF,0x48,0x8B,0xC8,0xE8,0xFB,0x8D,0x45,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> lteq(ReadOnlySpan<ulong> lhs, ReadOnlySpan<ulong> rhs)
; location: [7FFC872BDB80h, 7FFC872BDC85h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push r12                      ; PUSH(Push_r64) [R12]                                 encoding(2 bytes) = 41 54
0006h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0007h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0008h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0009h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
000ah sub rsp,60h                   ; SUB(Sub_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 ec 60
000eh vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0011h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0014h lea rdi,[rsp+28h]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 7c 24 28
0019h mov ecx,0Ch                   ; MOV(Mov_r32_imm32) [ECX,ch:imm32]                    encoding(5 bytes) = b9 0c 00 00 00
001eh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0020h rep stosd                     ; STOSD(Stosd_m32_EAX) [mem(32u),EAX]                  encoding(2 bytes) = f3 ab
0022h mov rcx,rsi                   ; MOV(Mov_r64_rm64) [RCX,RSI]                          encoding(3 bytes) = 48 8b ce
0025h mov rbx,rcx                   ; MOV(Mov_r64_rm64) [RBX,RCX]                          encoding(3 bytes) = 48 8b d9
0028h mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
002bh mov rdi,r8                    ; MOV(Mov_r64_rm64) [RDI,R8]                           encoding(3 bytes) = 49 8b f8
002eh mov ebp,9Eh                   ; MOV(Mov_r32_imm32) [EBP,9eh:imm32]                   encoding(5 bytes) = bd 9e 00 00 00
0033h mov r14d,1                    ; MOV(Mov_r32_imm32) [R14D,1h:imm32]                   encoding(6 bytes) = 41 be 01 00 00 00
0039h mov r15d,[rsi+8]              ; MOV(Mov_r32_rm32) [R15D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 8b 7e 08
003dh mov r12d,[rdi+8]              ; MOV(Mov_r32_rm32) [R12D,mem(32u,RDI:br,DS:sr)]       encoding(4 bytes) = 44 8b 67 08
0041h cmp r15d,r12d                 ; CMP(Cmp_r32_rm32) [R15D,R12D]                        encoding(3 bytes) = 45 3b fc
0044h jne short 00abh               ; JNE(Jne_rel8_64) [ABh:jmp64]                         encoding(2 bytes) = 75 65
0046h movsxd rdx,r15d               ; MOVSXD(Movsxd_r64_rm32) [RDX,R15D]                   encoding(3 bytes) = 49 63 d7
0049h mov rcx,7FFC86FF98E8h         ; MOV(Mov_r64_imm64) [RCX,7ffc86ff98e8h:imm64]         encoding(10 bytes) = 48 b9 e8 98 ff 86 fc 7f 00 00
0053h call 7FFCE67394A0h            ; CALL(Call_rel32_64) [5F47B920h:jmp64]                encoding(5 bytes) = e8 c8 b8 47 5f
0058h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
005ch mov edx,[rax+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 50 08
005fh mov r8,rbx                    ; MOV(Mov_r64_rm64) [R8,RBX]                           encoding(3 bytes) = 4c 8b c3
0062h vmovdqu xmm0,xmmword ptr [rsi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 06
0066h vmovdqu xmmword ptr [rsp+48h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 48
006ch vmovdqu xmm0,xmmword ptr [rdi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RDI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 07
0070h vmovdqu xmmword ptr [rsp+38h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 38
0076h lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
007bh mov [r9],rcx                  ; MOV(Mov_rm64_r64) [mem(64u,R9:br,DS:sr),RCX]         encoding(3 bytes) = 49 89 09
007eh mov [r9+8],edx                ; MOV(Mov_rm32_r32) [mem(32u,R9:br,DS:sr),EDX]         encoding(4 bytes) = 41 89 51 08
0082h mov rcx,r8                    ; MOV(Mov_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 8b c8
0085h lea rdx,[rsp+48h]             ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 54 24 48
008ah lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
008fh lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
0094h call 7FFC872BD180h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFF600h:jmp64]        encoding(5 bytes) = e8 67 f5 ff ff
0099h mov rax,rbx                   ; MOV(Mov_r64_rm64) [RAX,RBX]                          encoding(3 bytes) = 48 8b c3
009ch add rsp,60h                   ; ADD(Add_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 c4 60
00a0h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
00a1h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
00a2h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
00a3h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
00a4h pop r12                       ; POP(Pop_r64) [R12]                                   encoding(2 bytes) = 41 5c
00a6h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
00a8h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
00aah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
00abh mov ecx,0BDDh                 ; MOV(Mov_r32_imm32) [ECX,bddh:imm32]                  encoding(5 bytes) = b9 dd 0b 00 00
00b0h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00bah call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F475DA0h:jmp64]                encoding(5 bytes) = e8 e1 5c 47 5f
00bfh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
00c2h mov ecx,0BE7h                 ; MOV(Mov_r32_imm32) [ECX,be7h:imm32]                  encoding(5 bytes) = b9 e7 0b 00 00
00c7h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00d1h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F475DA0h:jmp64]                encoding(5 bytes) = e8 ca 5c 47 5f
00d6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00d9h lea r8,[rsp+58h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 58
00deh mov [r8],r14b                 ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),R14L]           encoding(3 bytes) = 45 88 30
00e1h mov [r8+4],ebp                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBP]         encoding(4 bytes) = 41 89 68 04
00e5h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00e8h mov ecx,r15d                  ; MOV(Mov_r32_rm32) [ECX,R15D]                         encoding(3 bytes) = 41 8b cf
00ebh mov edx,r12d                  ; MOV(Mov_r32_rm32) [EDX,R12D]                         encoding(3 bytes) = 41 8b d4
00eeh mov rax,[rsp+58h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 58
00f3h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00f8h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFCA03F8h:jmp64]        encoding(5 bytes) = e8 fb 02 ca ff
00fdh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
0100h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F458DD0h:jmp64]                encoding(5 bytes) = e8 cb 8c 45 5f
0105h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> lteqBytes => new byte[262]{0x41,0x57,0x41,0x56,0x41,0x54,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x60,0xC5,0xF8,0x77,0x48,0x8B,0xF1,0x48,0x8D,0x7C,0x24,0x28,0xB9,0x0C,0x00,0x00,0x00,0x33,0xC0,0xF3,0xAB,0x48,0x8B,0xCE,0x48,0x8B,0xD9,0x48,0x8B,0xF2,0x49,0x8B,0xF8,0xBD,0x9E,0x00,0x00,0x00,0x41,0xBE,0x01,0x00,0x00,0x00,0x44,0x8B,0x7E,0x08,0x44,0x8B,0x67,0x08,0x45,0x3B,0xFC,0x75,0x65,0x49,0x63,0xD7,0x48,0xB9,0xE8,0x98,0xFF,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xC8,0xB8,0x47,0x5F,0x48,0x8D,0x48,0x10,0x8B,0x50,0x08,0x4C,0x8B,0xC3,0xC5,0xFA,0x6F,0x06,0xC5,0xFA,0x7F,0x44,0x24,0x48,0xC5,0xFA,0x6F,0x07,0xC5,0xFA,0x7F,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0x49,0x89,0x09,0x41,0x89,0x51,0x08,0x49,0x8B,0xC8,0x48,0x8D,0x54,0x24,0x48,0x4C,0x8D,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0xE8,0x67,0xF5,0xFF,0xFF,0x48,0x8B,0xC3,0x48,0x83,0xC4,0x60,0x5B,0x5D,0x5E,0x5F,0x41,0x5C,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0xDD,0x0B,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xE1,0x5C,0x47,0x5F,0x48,0x8B,0xF0,0xB9,0xE7,0x0B,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xCA,0x5C,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x58,0x45,0x88,0x30,0x41,0x89,0x68,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCF,0x41,0x8B,0xD4,0x48,0x8B,0x44,0x24,0x58,0x48,0x89,0x44,0x24,0x20,0xE8,0xFB,0x02,0xCA,0xFF,0x48,0x8B,0xC8,0xE8,0xCB,0x8C,0x45,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> lteq(ReadOnlySpan<float> lhs, ReadOnlySpan<float> rhs)
; location: [7FFC872BDCB0h, 7FFC872BDDB5h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push r12                      ; PUSH(Push_r64) [R12]                                 encoding(2 bytes) = 41 54
0006h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0007h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0008h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0009h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
000ah sub rsp,60h                   ; SUB(Sub_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 ec 60
000eh vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0011h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0014h lea rdi,[rsp+28h]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 7c 24 28
0019h mov ecx,0Ch                   ; MOV(Mov_r32_imm32) [ECX,ch:imm32]                    encoding(5 bytes) = b9 0c 00 00 00
001eh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0020h rep stosd                     ; STOSD(Stosd_m32_EAX) [mem(32u),EAX]                  encoding(2 bytes) = f3 ab
0022h mov rcx,rsi                   ; MOV(Mov_r64_rm64) [RCX,RSI]                          encoding(3 bytes) = 48 8b ce
0025h mov rbx,rcx                   ; MOV(Mov_r64_rm64) [RBX,RCX]                          encoding(3 bytes) = 48 8b d9
0028h mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
002bh mov rdi,r8                    ; MOV(Mov_r64_rm64) [RDI,R8]                           encoding(3 bytes) = 49 8b f8
002eh mov ebp,0A2h                  ; MOV(Mov_r32_imm32) [EBP,a2h:imm32]                   encoding(5 bytes) = bd a2 00 00 00
0033h mov r14d,1                    ; MOV(Mov_r32_imm32) [R14D,1h:imm32]                   encoding(6 bytes) = 41 be 01 00 00 00
0039h mov r15d,[rsi+8]              ; MOV(Mov_r32_rm32) [R15D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 8b 7e 08
003dh mov r12d,[rdi+8]              ; MOV(Mov_r32_rm32) [R12D,mem(32u,RDI:br,DS:sr)]       encoding(4 bytes) = 44 8b 67 08
0041h cmp r15d,r12d                 ; CMP(Cmp_r32_rm32) [R15D,R12D]                        encoding(3 bytes) = 45 3b fc
0044h jne short 00abh               ; JNE(Jne_rel8_64) [ABh:jmp64]                         encoding(2 bytes) = 75 65
0046h movsxd rdx,r15d               ; MOVSXD(Movsxd_r64_rm32) [RDX,R15D]                   encoding(3 bytes) = 49 63 d7
0049h mov rcx,7FFC86FF98E8h         ; MOV(Mov_r64_imm64) [RCX,7ffc86ff98e8h:imm64]         encoding(10 bytes) = 48 b9 e8 98 ff 86 fc 7f 00 00
0053h call 7FFCE67394A0h            ; CALL(Call_rel32_64) [5F47B7F0h:jmp64]                encoding(5 bytes) = e8 98 b7 47 5f
0058h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
005ch mov edx,[rax+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 50 08
005fh mov r8,rbx                    ; MOV(Mov_r64_rm64) [R8,RBX]                           encoding(3 bytes) = 4c 8b c3
0062h vmovdqu xmm0,xmmword ptr [rsi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 06
0066h vmovdqu xmmword ptr [rsp+48h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 48
006ch vmovdqu xmm0,xmmword ptr [rdi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RDI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 07
0070h vmovdqu xmmword ptr [rsp+38h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 38
0076h lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
007bh mov [r9],rcx                  ; MOV(Mov_rm64_r64) [mem(64u,R9:br,DS:sr),RCX]         encoding(3 bytes) = 49 89 09
007eh mov [r9+8],edx                ; MOV(Mov_rm32_r32) [mem(32u,R9:br,DS:sr),EDX]         encoding(4 bytes) = 41 89 51 08
0082h mov rcx,r8                    ; MOV(Mov_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 8b c8
0085h lea rdx,[rsp+48h]             ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 54 24 48
008ah lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
008fh lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
0094h call 7FFC872BD210h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFF560h:jmp64]        encoding(5 bytes) = e8 c7 f4 ff ff
0099h mov rax,rbx                   ; MOV(Mov_r64_rm64) [RAX,RBX]                          encoding(3 bytes) = 48 8b c3
009ch add rsp,60h                   ; ADD(Add_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 c4 60
00a0h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
00a1h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
00a2h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
00a3h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
00a4h pop r12                       ; POP(Pop_r64) [R12]                                   encoding(2 bytes) = 41 5c
00a6h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
00a8h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
00aah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
00abh mov ecx,0BDDh                 ; MOV(Mov_r32_imm32) [ECX,bddh:imm32]                  encoding(5 bytes) = b9 dd 0b 00 00
00b0h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00bah call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F475C70h:jmp64]                encoding(5 bytes) = e8 b1 5b 47 5f
00bfh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
00c2h mov ecx,0BE7h                 ; MOV(Mov_r32_imm32) [ECX,be7h:imm32]                  encoding(5 bytes) = b9 e7 0b 00 00
00c7h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00d1h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F475C70h:jmp64]                encoding(5 bytes) = e8 9a 5b 47 5f
00d6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00d9h lea r8,[rsp+58h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 58
00deh mov [r8],r14b                 ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),R14L]           encoding(3 bytes) = 45 88 30
00e1h mov [r8+4],ebp                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBP]         encoding(4 bytes) = 41 89 68 04
00e5h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00e8h mov ecx,r15d                  ; MOV(Mov_r32_rm32) [ECX,R15D]                         encoding(3 bytes) = 41 8b cf
00ebh mov edx,r12d                  ; MOV(Mov_r32_rm32) [EDX,R12D]                         encoding(3 bytes) = 41 8b d4
00eeh mov rax,[rsp+58h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 58
00f3h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00f8h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFCA02C8h:jmp64]        encoding(5 bytes) = e8 cb 01 ca ff
00fdh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
0100h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F458CA0h:jmp64]                encoding(5 bytes) = e8 9b 8b 45 5f
0105h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> lteqBytes => new byte[262]{0x41,0x57,0x41,0x56,0x41,0x54,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x60,0xC5,0xF8,0x77,0x48,0x8B,0xF1,0x48,0x8D,0x7C,0x24,0x28,0xB9,0x0C,0x00,0x00,0x00,0x33,0xC0,0xF3,0xAB,0x48,0x8B,0xCE,0x48,0x8B,0xD9,0x48,0x8B,0xF2,0x49,0x8B,0xF8,0xBD,0xA2,0x00,0x00,0x00,0x41,0xBE,0x01,0x00,0x00,0x00,0x44,0x8B,0x7E,0x08,0x44,0x8B,0x67,0x08,0x45,0x3B,0xFC,0x75,0x65,0x49,0x63,0xD7,0x48,0xB9,0xE8,0x98,0xFF,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x98,0xB7,0x47,0x5F,0x48,0x8D,0x48,0x10,0x8B,0x50,0x08,0x4C,0x8B,0xC3,0xC5,0xFA,0x6F,0x06,0xC5,0xFA,0x7F,0x44,0x24,0x48,0xC5,0xFA,0x6F,0x07,0xC5,0xFA,0x7F,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0x49,0x89,0x09,0x41,0x89,0x51,0x08,0x49,0x8B,0xC8,0x48,0x8D,0x54,0x24,0x48,0x4C,0x8D,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0xE8,0xC7,0xF4,0xFF,0xFF,0x48,0x8B,0xC3,0x48,0x83,0xC4,0x60,0x5B,0x5D,0x5E,0x5F,0x41,0x5C,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0xDD,0x0B,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xB1,0x5B,0x47,0x5F,0x48,0x8B,0xF0,0xB9,0xE7,0x0B,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x9A,0x5B,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x58,0x45,0x88,0x30,0x41,0x89,0x68,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCF,0x41,0x8B,0xD4,0x48,0x8B,0x44,0x24,0x58,0x48,0x89,0x44,0x24,0x20,0xE8,0xCB,0x01,0xCA,0xFF,0x48,0x8B,0xC8,0xE8,0x9B,0x8B,0x45,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> lteq(ReadOnlySpan<double> lhs, ReadOnlySpan<double> rhs)
; location: [7FFC872BDDE0h, 7FFC872BDEE5h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push r12                      ; PUSH(Push_r64) [R12]                                 encoding(2 bytes) = 41 54
0006h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0007h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0008h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0009h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
000ah sub rsp,60h                   ; SUB(Sub_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 ec 60
000eh vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0011h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0014h lea rdi,[rsp+28h]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 7c 24 28
0019h mov ecx,0Ch                   ; MOV(Mov_r32_imm32) [ECX,ch:imm32]                    encoding(5 bytes) = b9 0c 00 00 00
001eh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0020h rep stosd                     ; STOSD(Stosd_m32_EAX) [mem(32u),EAX]                  encoding(2 bytes) = f3 ab
0022h mov rcx,rsi                   ; MOV(Mov_r64_rm64) [RCX,RSI]                          encoding(3 bytes) = 48 8b ce
0025h mov rbx,rcx                   ; MOV(Mov_r64_rm64) [RBX,RCX]                          encoding(3 bytes) = 48 8b d9
0028h mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
002bh mov rdi,r8                    ; MOV(Mov_r64_rm64) [RDI,R8]                           encoding(3 bytes) = 49 8b f8
002eh mov ebp,0A6h                  ; MOV(Mov_r32_imm32) [EBP,a6h:imm32]                   encoding(5 bytes) = bd a6 00 00 00
0033h mov r14d,1                    ; MOV(Mov_r32_imm32) [R14D,1h:imm32]                   encoding(6 bytes) = 41 be 01 00 00 00
0039h mov r15d,[rsi+8]              ; MOV(Mov_r32_rm32) [R15D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 8b 7e 08
003dh mov r12d,[rdi+8]              ; MOV(Mov_r32_rm32) [R12D,mem(32u,RDI:br,DS:sr)]       encoding(4 bytes) = 44 8b 67 08
0041h cmp r15d,r12d                 ; CMP(Cmp_r32_rm32) [R15D,R12D]                        encoding(3 bytes) = 45 3b fc
0044h jne short 00abh               ; JNE(Jne_rel8_64) [ABh:jmp64]                         encoding(2 bytes) = 75 65
0046h movsxd rdx,r15d               ; MOVSXD(Movsxd_r64_rm32) [RDX,R15D]                   encoding(3 bytes) = 49 63 d7
0049h mov rcx,7FFC86FF98E8h         ; MOV(Mov_r64_imm64) [RCX,7ffc86ff98e8h:imm64]         encoding(10 bytes) = 48 b9 e8 98 ff 86 fc 7f 00 00
0053h call 7FFCE67394A0h            ; CALL(Call_rel32_64) [5F47B6C0h:jmp64]                encoding(5 bytes) = e8 68 b6 47 5f
0058h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
005ch mov edx,[rax+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 50 08
005fh mov r8,rbx                    ; MOV(Mov_r64_rm64) [R8,RBX]                           encoding(3 bytes) = 4c 8b c3
0062h vmovdqu xmm0,xmmword ptr [rsi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 06
0066h vmovdqu xmmword ptr [rsp+48h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 48
006ch vmovdqu xmm0,xmmword ptr [rdi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RDI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 07
0070h vmovdqu xmmword ptr [rsp+38h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 38
0076h lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
007bh mov [r9],rcx                  ; MOV(Mov_rm64_r64) [mem(64u,R9:br,DS:sr),RCX]         encoding(3 bytes) = 49 89 09
007eh mov [r9+8],edx                ; MOV(Mov_rm32_r32) [mem(32u,R9:br,DS:sr),EDX]         encoding(4 bytes) = 41 89 51 08
0082h mov rcx,r8                    ; MOV(Mov_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 8b c8
0085h lea rdx,[rsp+48h]             ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 54 24 48
008ah lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
008fh lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
0094h call 7FFC872BD2A0h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFF4C0h:jmp64]        encoding(5 bytes) = e8 27 f4 ff ff
0099h mov rax,rbx                   ; MOV(Mov_r64_rm64) [RAX,RBX]                          encoding(3 bytes) = 48 8b c3
009ch add rsp,60h                   ; ADD(Add_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 c4 60
00a0h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
00a1h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
00a2h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
00a3h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
00a4h pop r12                       ; POP(Pop_r64) [R12]                                   encoding(2 bytes) = 41 5c
00a6h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
00a8h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
00aah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
00abh mov ecx,0BDDh                 ; MOV(Mov_r32_imm32) [ECX,bddh:imm32]                  encoding(5 bytes) = b9 dd 0b 00 00
00b0h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00bah call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F475B40h:jmp64]                encoding(5 bytes) = e8 81 5a 47 5f
00bfh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
00c2h mov ecx,0BE7h                 ; MOV(Mov_r32_imm32) [ECX,be7h:imm32]                  encoding(5 bytes) = b9 e7 0b 00 00
00c7h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00d1h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F475B40h:jmp64]                encoding(5 bytes) = e8 6a 5a 47 5f
00d6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00d9h lea r8,[rsp+58h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 58
00deh mov [r8],r14b                 ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),R14L]           encoding(3 bytes) = 45 88 30
00e1h mov [r8+4],ebp                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBP]         encoding(4 bytes) = 41 89 68 04
00e5h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00e8h mov ecx,r15d                  ; MOV(Mov_r32_rm32) [ECX,R15D]                         encoding(3 bytes) = 41 8b cf
00ebh mov edx,r12d                  ; MOV(Mov_r32_rm32) [EDX,R12D]                         encoding(3 bytes) = 41 8b d4
00eeh mov rax,[rsp+58h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 58
00f3h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00f8h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFCA0198h:jmp64]        encoding(5 bytes) = e8 9b 00 ca ff
00fdh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
0100h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F458B70h:jmp64]                encoding(5 bytes) = e8 6b 8a 45 5f
0105h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> lteqBytes => new byte[262]{0x41,0x57,0x41,0x56,0x41,0x54,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x60,0xC5,0xF8,0x77,0x48,0x8B,0xF1,0x48,0x8D,0x7C,0x24,0x28,0xB9,0x0C,0x00,0x00,0x00,0x33,0xC0,0xF3,0xAB,0x48,0x8B,0xCE,0x48,0x8B,0xD9,0x48,0x8B,0xF2,0x49,0x8B,0xF8,0xBD,0xA6,0x00,0x00,0x00,0x41,0xBE,0x01,0x00,0x00,0x00,0x44,0x8B,0x7E,0x08,0x44,0x8B,0x67,0x08,0x45,0x3B,0xFC,0x75,0x65,0x49,0x63,0xD7,0x48,0xB9,0xE8,0x98,0xFF,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x68,0xB6,0x47,0x5F,0x48,0x8D,0x48,0x10,0x8B,0x50,0x08,0x4C,0x8B,0xC3,0xC5,0xFA,0x6F,0x06,0xC5,0xFA,0x7F,0x44,0x24,0x48,0xC5,0xFA,0x6F,0x07,0xC5,0xFA,0x7F,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0x49,0x89,0x09,0x41,0x89,0x51,0x08,0x49,0x8B,0xC8,0x48,0x8D,0x54,0x24,0x48,0x4C,0x8D,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0xE8,0x27,0xF4,0xFF,0xFF,0x48,0x8B,0xC3,0x48,0x83,0xC4,0x60,0x5B,0x5D,0x5E,0x5F,0x41,0x5C,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0xDD,0x0B,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x81,0x5A,0x47,0x5F,0x48,0x8B,0xF0,0xB9,0xE7,0x0B,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x6A,0x5A,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x58,0x45,0x88,0x30,0x41,0x89,0x68,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCF,0x41,0x8B,0xD4,0x48,0x8B,0x44,0x24,0x58,0x48,0x89,0x44,0x24,0x20,0xE8,0x9B,0x00,0xCA,0xFF,0x48,0x8B,0xC8,0xE8,0x6B,0x8A,0x45,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: sbyte max(sbyte lhs, sbyte rhs)
; location: [7FFC872BDF10h, 7FFC872BDF24h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cl                  ; MOVSX(Movsx_r64_rm8) [RAX,CL]                        encoding(4 bytes) = 48 0f be c1
0009h movsx rdx,dl                  ; MOVSX(Movsx_r64_rm8) [RDX,DL]                        encoding(4 bytes) = 48 0f be d2
000dh cmp eax,edx                   ; CMP(Cmp_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 3b c2
000fh jg short 0014h                ; JG(Jg_rel8_64) [14h:jmp64]                           encoding(2 bytes) = 7f 03
0011h mov eax,edx                   ; MOV(Mov_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 8b c2
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0014h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> maxBytes => new byte[21]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBE,0xC1,0x48,0x0F,0xBE,0xD2,0x3B,0xC2,0x7F,0x03,0x8B,0xC2,0xC3,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: byte max(byte lhs, byte rhs)
; location: [7FFC872BDF40h, 7FFC872BDF52h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0008h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
000bh cmp eax,edx                   ; CMP(Cmp_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 3b c2
000dh jg short 0012h                ; JG(Jg_rel8_64) [12h:jmp64]                           encoding(2 bytes) = 7f 03
000fh mov eax,edx                   ; MOV(Mov_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 8b c2
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0012h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> maxBytes => new byte[19]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC1,0x0F,0xB6,0xD2,0x3B,0xC2,0x7F,0x03,0x8B,0xC2,0xC3,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: short max(short lhs, short rhs)
; location: [7FFC872BDF70h, 7FFC872BDF84h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cx                  ; MOVSX(Movsx_r64_rm16) [RAX,CX]                       encoding(4 bytes) = 48 0f bf c1
0009h movsx rdx,dx                  ; MOVSX(Movsx_r64_rm16) [RDX,DX]                       encoding(4 bytes) = 48 0f bf d2
000dh cmp eax,edx                   ; CMP(Cmp_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 3b c2
000fh jg short 0014h                ; JG(Jg_rel8_64) [14h:jmp64]                           encoding(2 bytes) = 7f 03
0011h mov eax,edx                   ; MOV(Mov_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 8b c2
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0014h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> maxBytes => new byte[21]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBF,0xC1,0x48,0x0F,0xBF,0xD2,0x3B,0xC2,0x7F,0x03,0x8B,0xC2,0xC3,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ushort max(ushort lhs, ushort rhs)
; location: [7FFC872BDFA0h, 7FFC872BDFB2h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cx                  ; MOVZX(Movzx_r32_rm16) [EAX,CX]                       encoding(3 bytes) = 0f b7 c1
0008h movzx edx,dx                  ; MOVZX(Movzx_r32_rm16) [EDX,DX]                       encoding(3 bytes) = 0f b7 d2
000bh cmp eax,edx                   ; CMP(Cmp_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 3b c2
000dh jg short 0012h                ; JG(Jg_rel8_64) [12h:jmp64]                           encoding(2 bytes) = 7f 03
000fh mov eax,edx                   ; MOV(Mov_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 8b c2
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0012h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> maxBytes => new byte[19]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB7,0xC1,0x0F,0xB7,0xD2,0x3B,0xC2,0x7F,0x03,0x8B,0xC2,0xC3,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: int max(int lhs, int rhs)
; location: [7FFC872BDFD0h, 7FFC872BDFDEh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h cmp ecx,edx                   ; CMP(Cmp_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 3b ca
0007h jg short 000ch                ; JG(Jg_rel8_64) [Ch:jmp64]                            encoding(2 bytes) = 7f 03
0009h mov eax,edx                   ; MOV(Mov_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 8b c2
000bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
000ch mov eax,ecx                   ; MOV(Mov_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 8b c1
000eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> maxBytes => new byte[15]{0x0F,0x1F,0x44,0x00,0x00,0x3B,0xCA,0x7F,0x03,0x8B,0xC2,0xC3,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: uint max(uint lhs, uint rhs)
; location: [7FFC872BDFF0h, 7FFC872BDFFEh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h cmp ecx,edx                   ; CMP(Cmp_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 3b ca
0007h ja short 000ch                ; JA(Ja_rel8_64) [Ch:jmp64]                            encoding(2 bytes) = 77 03
0009h mov eax,edx                   ; MOV(Mov_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 8b c2
000bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
000ch mov eax,ecx                   ; MOV(Mov_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 8b c1
000eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> maxBytes => new byte[15]{0x0F,0x1F,0x44,0x00,0x00,0x3B,0xCA,0x77,0x03,0x8B,0xC2,0xC3,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: long max(long lhs, long rhs)
; location: [7FFC872BE010h, 7FFC872BE021h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h cmp rcx,rdx                   ; CMP(Cmp_r64_rm64) [RCX,RDX]                          encoding(3 bytes) = 48 3b ca
0008h jg short 000eh                ; JG(Jg_rel8_64) [Eh:jmp64]                            encoding(2 bytes) = 7f 04
000ah mov rax,rdx                   ; MOV(Mov_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 8b c2
000dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
000eh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> maxBytes => new byte[18]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x3B,0xCA,0x7F,0x04,0x48,0x8B,0xC2,0xC3,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ulong max(ulong lhs, ulong rhs)
; location: [7FFC872BE040h, 7FFC872BE051h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h cmp rcx,rdx                   ; CMP(Cmp_r64_rm64) [RCX,RDX]                          encoding(3 bytes) = 48 3b ca
0008h ja short 000eh                ; JA(Ja_rel8_64) [Eh:jmp64]                            encoding(2 bytes) = 77 04
000ah mov rax,rdx                   ; MOV(Mov_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 8b c2
000dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
000eh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> maxBytes => new byte[18]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x3B,0xCA,0x77,0x04,0x48,0x8B,0xC2,0xC3,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: float max(float lhs, float rhs)
; location: [7FFC872BE070h, 7FFC872BE080h]
0000h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0003h xchg ax,ax                    ; NOP(Nopw)                                            encoding(2 bytes) = 66 90
0005h vucomiss xmm0,xmm1            ; VUCOMISS(VEX_Vucomiss_xmm_xmmm32) [XMM0,XMM1]        encoding(VEX, 4 bytes) = c5 f8 2e c1
0009h ja short 0010h                ; JA(Ja_rel8_64) [10h:jmp64]                           encoding(2 bytes) = 77 05
000bh vmovaps xmm0,xmm1             ; VMOVAPS(VEX_Vmovaps_xmm_xmmm128) [XMM0,XMM1]         encoding(VEX, 4 bytes) = c5 f8 28 c1
000fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0010h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> maxBytes => new byte[17]{0xC5,0xF8,0x77,0x66,0x90,0xC5,0xF8,0x2E,0xC1,0x77,0x05,0xC5,0xF8,0x28,0xC1,0xC3,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: double max(double lhs, double rhs)
; location: [7FFC872BE0A0h, 7FFC872BE0B0h]
0000h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0003h xchg ax,ax                    ; NOP(Nopw)                                            encoding(2 bytes) = 66 90
0005h vucomisd xmm0,xmm1            ; VUCOMISD(VEX_Vucomisd_xmm_xmmm64) [XMM0,XMM1]        encoding(VEX, 4 bytes) = c5 f9 2e c1
0009h ja short 0010h                ; JA(Ja_rel8_64) [10h:jmp64]                           encoding(2 bytes) = 77 05
000bh vmovaps xmm0,xmm1             ; VMOVAPS(VEX_Vmovaps_xmm_xmmm128) [XMM0,XMM1]         encoding(VEX, 4 bytes) = c5 f8 28 c1
000fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0010h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> maxBytes => new byte[17]{0xC5,0xF8,0x77,0x66,0x90,0xC5,0xF9,0x2E,0xC1,0x77,0x05,0xC5,0xF8,0x28,0xC1,0xC3,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: sbyte max(ReadOnlySpan<sbyte> src)
; location: [7FFC872BE0D0h, 7FFC872BE109h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rdx,[rcx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 11
0008h mov ecx,[rcx+8]               ; MOV(Mov_r32_rm32) [ECX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 49 08
000bh test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
000dh ja short 0012h                ; JA(Ja_rel8_64) [12h:jmp64]                           encoding(2 bytes) = 77 03
000fh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0012h movsx rax,byte ptr [rdx]      ; MOVSX(Movsx_r64_rm8) [RAX,mem(8i,RDX:br,DS:sr)]      encoding(4 bytes) = 48 0f be 02
0016h mov r8d,1                     ; MOV(Mov_r32_imm32) [R8D,1h:imm32]                    encoding(6 bytes) = 41 b8 01 00 00 00
001ch cmp ecx,1                     ; CMP(Cmp_rm32_imm8) [ECX,1h:imm32]                    encoding(3 bytes) = 83 f9 01
001fh jle short 0039h               ; JLE(Jle_rel8_64) [39h:jmp64]                         encoding(2 bytes) = 7e 18
0021h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0024h movsx r9,byte ptr [rdx+r9]    ; MOVSX(Movsx_r64_rm8) [R9,mem(8i,RDX:br,DS:sr)]       encoding(5 bytes) = 4e 0f be 0c 0a
0029h cmp r9d,eax                   ; CMP(Cmp_r32_rm32) [R9D,EAX]                          encoding(3 bytes) = 44 3b c8
002ch jle short 0031h               ; JLE(Jle_rel8_64) [31h:jmp64]                         encoding(2 bytes) = 7e 03
002eh mov eax,r9d                   ; MOV(Mov_r32_rm32) [EAX,R9D]                          encoding(3 bytes) = 41 8b c1
0031h inc r8d                       ; INC(Inc_rm32) [R8D]                                  encoding(3 bytes) = 41 ff c0
0034h cmp r8d,ecx                   ; CMP(Cmp_r32_rm32) [R8D,ECX]                          encoding(3 bytes) = 44 3b c1
0037h jl short 0021h                ; JL(Jl_rel8_64) [21h:jmp64]                           encoding(2 bytes) = 7c e8
0039h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> maxBytes => new byte[58]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x11,0x8B,0x49,0x08,0x85,0xC9,0x77,0x03,0x33,0xC0,0xC3,0x48,0x0F,0xBE,0x02,0x41,0xB8,0x01,0x00,0x00,0x00,0x83,0xF9,0x01,0x7E,0x18,0x4D,0x63,0xC8,0x4E,0x0F,0xBE,0x0C,0x0A,0x44,0x3B,0xC8,0x7E,0x03,0x41,0x8B,0xC1,0x41,0xFF,0xC0,0x44,0x3B,0xC1,0x7C,0xE8,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: byte max(ReadOnlySpan<byte> src)
; location: [7FFC872BE120h, 7FFC872BE158h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rdx,[rcx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 11
0008h mov ecx,[rcx+8]               ; MOV(Mov_r32_rm32) [ECX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 49 08
000bh test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
000dh ja short 0012h                ; JA(Ja_rel8_64) [12h:jmp64]                           encoding(2 bytes) = 77 03
000fh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0012h movzx eax,byte ptr [rdx]      ; MOVZX(Movzx_r32_rm8) [EAX,mem(8u,RDX:br,DS:sr)]      encoding(3 bytes) = 0f b6 02
0015h mov r8d,1                     ; MOV(Mov_r32_imm32) [R8D,1h:imm32]                    encoding(6 bytes) = 41 b8 01 00 00 00
001bh cmp ecx,1                     ; CMP(Cmp_rm32_imm8) [ECX,1h:imm32]                    encoding(3 bytes) = 83 f9 01
001eh jle short 0038h               ; JLE(Jle_rel8_64) [38h:jmp64]                         encoding(2 bytes) = 7e 18
0020h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0023h movzx r9d,byte ptr [rdx+r9]   ; MOVZX(Movzx_r32_rm8) [R9D,mem(8u,RDX:br,DS:sr)]      encoding(5 bytes) = 46 0f b6 0c 0a
0028h cmp r9d,eax                   ; CMP(Cmp_r32_rm32) [R9D,EAX]                          encoding(3 bytes) = 44 3b c8
002bh jle short 0030h               ; JLE(Jle_rel8_64) [30h:jmp64]                         encoding(2 bytes) = 7e 03
002dh mov eax,r9d                   ; MOV(Mov_r32_rm32) [EAX,R9D]                          encoding(3 bytes) = 41 8b c1
0030h inc r8d                       ; INC(Inc_rm32) [R8D]                                  encoding(3 bytes) = 41 ff c0
0033h cmp r8d,ecx                   ; CMP(Cmp_r32_rm32) [R8D,ECX]                          encoding(3 bytes) = 44 3b c1
0036h jl short 0020h                ; JL(Jl_rel8_64) [20h:jmp64]                           encoding(2 bytes) = 7c e8
0038h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> maxBytes => new byte[57]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x11,0x8B,0x49,0x08,0x85,0xC9,0x77,0x03,0x33,0xC0,0xC3,0x0F,0xB6,0x02,0x41,0xB8,0x01,0x00,0x00,0x00,0x83,0xF9,0x01,0x7E,0x18,0x4D,0x63,0xC8,0x46,0x0F,0xB6,0x0C,0x0A,0x44,0x3B,0xC8,0x7E,0x03,0x41,0x8B,0xC1,0x41,0xFF,0xC0,0x44,0x3B,0xC1,0x7C,0xE8,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: short max(ReadOnlySpan<short> src)
; location: [7FFC872BE170h, 7FFC872BE1A9h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rdx,[rcx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 11
0008h mov ecx,[rcx+8]               ; MOV(Mov_r32_rm32) [ECX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 49 08
000bh test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
000dh ja short 0012h                ; JA(Ja_rel8_64) [12h:jmp64]                           encoding(2 bytes) = 77 03
000fh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0012h movsx rax,word ptr [rdx]      ; MOVSX(Movsx_r64_rm16) [RAX,mem(16i,RDX:br,DS:sr)]    encoding(4 bytes) = 48 0f bf 02
0016h mov r8d,1                     ; MOV(Mov_r32_imm32) [R8D,1h:imm32]                    encoding(6 bytes) = 41 b8 01 00 00 00
001ch cmp ecx,1                     ; CMP(Cmp_rm32_imm8) [ECX,1h:imm32]                    encoding(3 bytes) = 83 f9 01
001fh jle short 0039h               ; JLE(Jle_rel8_64) [39h:jmp64]                         encoding(2 bytes) = 7e 18
0021h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0024h movsx r9,word ptr [rdx+r9*2]  ; MOVSX(Movsx_r64_rm16) [R9,mem(16i,RDX:br,DS:sr)]     encoding(5 bytes) = 4e 0f bf 0c 4a
0029h cmp r9d,eax                   ; CMP(Cmp_r32_rm32) [R9D,EAX]                          encoding(3 bytes) = 44 3b c8
002ch jle short 0031h               ; JLE(Jle_rel8_64) [31h:jmp64]                         encoding(2 bytes) = 7e 03
002eh mov eax,r9d                   ; MOV(Mov_r32_rm32) [EAX,R9D]                          encoding(3 bytes) = 41 8b c1
0031h inc r8d                       ; INC(Inc_rm32) [R8D]                                  encoding(3 bytes) = 41 ff c0
0034h cmp r8d,ecx                   ; CMP(Cmp_r32_rm32) [R8D,ECX]                          encoding(3 bytes) = 44 3b c1
0037h jl short 0021h                ; JL(Jl_rel8_64) [21h:jmp64]                           encoding(2 bytes) = 7c e8
0039h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> maxBytes => new byte[58]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x11,0x8B,0x49,0x08,0x85,0xC9,0x77,0x03,0x33,0xC0,0xC3,0x48,0x0F,0xBF,0x02,0x41,0xB8,0x01,0x00,0x00,0x00,0x83,0xF9,0x01,0x7E,0x18,0x4D,0x63,0xC8,0x4E,0x0F,0xBF,0x0C,0x4A,0x44,0x3B,0xC8,0x7E,0x03,0x41,0x8B,0xC1,0x41,0xFF,0xC0,0x44,0x3B,0xC1,0x7C,0xE8,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ushort max(ReadOnlySpan<ushort> src)
; location: [7FFC872BE1C0h, 7FFC872BE1F8h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rdx,[rcx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 11
0008h mov ecx,[rcx+8]               ; MOV(Mov_r32_rm32) [ECX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 49 08
000bh test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
000dh ja short 0012h                ; JA(Ja_rel8_64) [12h:jmp64]                           encoding(2 bytes) = 77 03
000fh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0012h movzx eax,word ptr [rdx]      ; MOVZX(Movzx_r32_rm16) [EAX,mem(16u,RDX:br,DS:sr)]    encoding(3 bytes) = 0f b7 02
0015h mov r8d,1                     ; MOV(Mov_r32_imm32) [R8D,1h:imm32]                    encoding(6 bytes) = 41 b8 01 00 00 00
001bh cmp ecx,1                     ; CMP(Cmp_rm32_imm8) [ECX,1h:imm32]                    encoding(3 bytes) = 83 f9 01
001eh jle short 0038h               ; JLE(Jle_rel8_64) [38h:jmp64]                         encoding(2 bytes) = 7e 18
0020h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0023h movzx r9d,word ptr [rdx+r9*2] ; MOVZX(Movzx_r32_rm16) [R9D,mem(16u,RDX:br,DS:sr)]    encoding(5 bytes) = 46 0f b7 0c 4a
0028h cmp r9d,eax                   ; CMP(Cmp_r32_rm32) [R9D,EAX]                          encoding(3 bytes) = 44 3b c8
002bh jle short 0030h               ; JLE(Jle_rel8_64) [30h:jmp64]                         encoding(2 bytes) = 7e 03
002dh mov eax,r9d                   ; MOV(Mov_r32_rm32) [EAX,R9D]                          encoding(3 bytes) = 41 8b c1
0030h inc r8d                       ; INC(Inc_rm32) [R8D]                                  encoding(3 bytes) = 41 ff c0
0033h cmp r8d,ecx                   ; CMP(Cmp_r32_rm32) [R8D,ECX]                          encoding(3 bytes) = 44 3b c1
0036h jl short 0020h                ; JL(Jl_rel8_64) [20h:jmp64]                           encoding(2 bytes) = 7c e8
0038h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> maxBytes => new byte[57]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x11,0x8B,0x49,0x08,0x85,0xC9,0x77,0x03,0x33,0xC0,0xC3,0x0F,0xB7,0x02,0x41,0xB8,0x01,0x00,0x00,0x00,0x83,0xF9,0x01,0x7E,0x18,0x4D,0x63,0xC8,0x46,0x0F,0xB7,0x0C,0x4A,0x44,0x3B,0xC8,0x7E,0x03,0x41,0x8B,0xC1,0x41,0xFF,0xC0,0x44,0x3B,0xC1,0x7C,0xE8,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: int max(ReadOnlySpan<int> src)
; location: [7FFC872BE210h, 7FFC872BE246h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rdx,[rcx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 11
0008h mov ecx,[rcx+8]               ; MOV(Mov_r32_rm32) [ECX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 49 08
000bh test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
000dh ja short 0012h                ; JA(Ja_rel8_64) [12h:jmp64]                           encoding(2 bytes) = 77 03
000fh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0012h mov eax,[rdx]                 ; MOV(Mov_r32_rm32) [EAX,mem(32u,RDX:br,DS:sr)]        encoding(2 bytes) = 8b 02
0014h mov r8d,1                     ; MOV(Mov_r32_imm32) [R8D,1h:imm32]                    encoding(6 bytes) = 41 b8 01 00 00 00
001ah cmp ecx,1                     ; CMP(Cmp_rm32_imm8) [ECX,1h:imm32]                    encoding(3 bytes) = 83 f9 01
001dh jle short 0036h               ; JLE(Jle_rel8_64) [36h:jmp64]                         encoding(2 bytes) = 7e 17
001fh movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0022h mov r9d,[rdx+r9*4]            ; MOV(Mov_r32_rm32) [R9D,mem(32u,RDX:br,DS:sr)]        encoding(4 bytes) = 46 8b 0c 8a
0026h cmp r9d,eax                   ; CMP(Cmp_r32_rm32) [R9D,EAX]                          encoding(3 bytes) = 44 3b c8
0029h jle short 002eh               ; JLE(Jle_rel8_64) [2Eh:jmp64]                         encoding(2 bytes) = 7e 03
002bh mov eax,r9d                   ; MOV(Mov_r32_rm32) [EAX,R9D]                          encoding(3 bytes) = 41 8b c1
002eh inc r8d                       ; INC(Inc_rm32) [R8D]                                  encoding(3 bytes) = 41 ff c0
0031h cmp r8d,ecx                   ; CMP(Cmp_r32_rm32) [R8D,ECX]                          encoding(3 bytes) = 44 3b c1
0034h jl short 001fh                ; JL(Jl_rel8_64) [1Fh:jmp64]                           encoding(2 bytes) = 7c e9
0036h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> maxBytes => new byte[55]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x11,0x8B,0x49,0x08,0x85,0xC9,0x77,0x03,0x33,0xC0,0xC3,0x8B,0x02,0x41,0xB8,0x01,0x00,0x00,0x00,0x83,0xF9,0x01,0x7E,0x17,0x4D,0x63,0xC8,0x46,0x8B,0x0C,0x8A,0x44,0x3B,0xC8,0x7E,0x03,0x41,0x8B,0xC1,0x41,0xFF,0xC0,0x44,0x3B,0xC1,0x7C,0xE9,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: uint max(ReadOnlySpan<uint> src)
; location: [7FFC872BE260h, 7FFC872BE296h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rdx,[rcx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 11
0008h mov ecx,[rcx+8]               ; MOV(Mov_r32_rm32) [ECX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 49 08
000bh test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
000dh ja short 0012h                ; JA(Ja_rel8_64) [12h:jmp64]                           encoding(2 bytes) = 77 03
000fh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0012h mov eax,[rdx]                 ; MOV(Mov_r32_rm32) [EAX,mem(32u,RDX:br,DS:sr)]        encoding(2 bytes) = 8b 02
0014h mov r8d,1                     ; MOV(Mov_r32_imm32) [R8D,1h:imm32]                    encoding(6 bytes) = 41 b8 01 00 00 00
001ah cmp ecx,1                     ; CMP(Cmp_rm32_imm8) [ECX,1h:imm32]                    encoding(3 bytes) = 83 f9 01
001dh jle short 0036h               ; JLE(Jle_rel8_64) [36h:jmp64]                         encoding(2 bytes) = 7e 17
001fh movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0022h mov r9d,[rdx+r9*4]            ; MOV(Mov_r32_rm32) [R9D,mem(32u,RDX:br,DS:sr)]        encoding(4 bytes) = 46 8b 0c 8a
0026h cmp r9d,eax                   ; CMP(Cmp_r32_rm32) [R9D,EAX]                          encoding(3 bytes) = 44 3b c8
0029h jbe short 002eh               ; JBE(Jbe_rel8_64) [2Eh:jmp64]                         encoding(2 bytes) = 76 03
002bh mov eax,r9d                   ; MOV(Mov_r32_rm32) [EAX,R9D]                          encoding(3 bytes) = 41 8b c1
002eh inc r8d                       ; INC(Inc_rm32) [R8D]                                  encoding(3 bytes) = 41 ff c0
0031h cmp r8d,ecx                   ; CMP(Cmp_r32_rm32) [R8D,ECX]                          encoding(3 bytes) = 44 3b c1
0034h jl short 001fh                ; JL(Jl_rel8_64) [1Fh:jmp64]                           encoding(2 bytes) = 7c e9
0036h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> maxBytes => new byte[55]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x11,0x8B,0x49,0x08,0x85,0xC9,0x77,0x03,0x33,0xC0,0xC3,0x8B,0x02,0x41,0xB8,0x01,0x00,0x00,0x00,0x83,0xF9,0x01,0x7E,0x17,0x4D,0x63,0xC8,0x46,0x8B,0x0C,0x8A,0x44,0x3B,0xC8,0x76,0x03,0x41,0x8B,0xC1,0x41,0xFF,0xC0,0x44,0x3B,0xC1,0x7C,0xE9,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: long max(ReadOnlySpan<long> src)
; location: [7FFC872BE2B0h, 7FFC872BE2E7h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rdx,[rcx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 11
0008h mov ecx,[rcx+8]               ; MOV(Mov_r32_rm32) [ECX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 49 08
000bh test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
000dh ja short 0012h                ; JA(Ja_rel8_64) [12h:jmp64]                           encoding(2 bytes) = 77 03
000fh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0012h mov rax,[rdx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 02
0015h mov r8d,1                     ; MOV(Mov_r32_imm32) [R8D,1h:imm32]                    encoding(6 bytes) = 41 b8 01 00 00 00
001bh cmp ecx,1                     ; CMP(Cmp_rm32_imm8) [ECX,1h:imm32]                    encoding(3 bytes) = 83 f9 01
001eh jle short 0037h               ; JLE(Jle_rel8_64) [37h:jmp64]                         encoding(2 bytes) = 7e 17
0020h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0023h mov r9,[rdx+r9*8]             ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(4 bytes) = 4e 8b 0c ca
0027h cmp r9,rax                    ; CMP(Cmp_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 3b c8
002ah jle short 002fh               ; JLE(Jle_rel8_64) [2Fh:jmp64]                         encoding(2 bytes) = 7e 03
002ch mov rax,r9                    ; MOV(Mov_r64_rm64) [RAX,R9]                           encoding(3 bytes) = 49 8b c1
002fh inc r8d                       ; INC(Inc_rm32) [R8D]                                  encoding(3 bytes) = 41 ff c0
0032h cmp r8d,ecx                   ; CMP(Cmp_r32_rm32) [R8D,ECX]                          encoding(3 bytes) = 44 3b c1
0035h jl short 0020h                ; JL(Jl_rel8_64) [20h:jmp64]                           encoding(2 bytes) = 7c e9
0037h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> maxBytes => new byte[56]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x11,0x8B,0x49,0x08,0x85,0xC9,0x77,0x03,0x33,0xC0,0xC3,0x48,0x8B,0x02,0x41,0xB8,0x01,0x00,0x00,0x00,0x83,0xF9,0x01,0x7E,0x17,0x4D,0x63,0xC8,0x4E,0x8B,0x0C,0xCA,0x4C,0x3B,0xC8,0x7E,0x03,0x49,0x8B,0xC1,0x41,0xFF,0xC0,0x44,0x3B,0xC1,0x7C,0xE9,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ulong max(ReadOnlySpan<ulong> src)
; location: [7FFC872BE300h, 7FFC872BE337h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rdx,[rcx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 11
0008h mov ecx,[rcx+8]               ; MOV(Mov_r32_rm32) [ECX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 49 08
000bh test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
000dh ja short 0012h                ; JA(Ja_rel8_64) [12h:jmp64]                           encoding(2 bytes) = 77 03
000fh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0012h mov rax,[rdx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 02
0015h mov r8d,1                     ; MOV(Mov_r32_imm32) [R8D,1h:imm32]                    encoding(6 bytes) = 41 b8 01 00 00 00
001bh cmp ecx,1                     ; CMP(Cmp_rm32_imm8) [ECX,1h:imm32]                    encoding(3 bytes) = 83 f9 01
001eh jle short 0037h               ; JLE(Jle_rel8_64) [37h:jmp64]                         encoding(2 bytes) = 7e 17
0020h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0023h mov r9,[rdx+r9*8]             ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(4 bytes) = 4e 8b 0c ca
0027h cmp r9,rax                    ; CMP(Cmp_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 3b c8
002ah jbe short 002fh               ; JBE(Jbe_rel8_64) [2Fh:jmp64]                         encoding(2 bytes) = 76 03
002ch mov rax,r9                    ; MOV(Mov_r64_rm64) [RAX,R9]                           encoding(3 bytes) = 49 8b c1
002fh inc r8d                       ; INC(Inc_rm32) [R8D]                                  encoding(3 bytes) = 41 ff c0
0032h cmp r8d,ecx                   ; CMP(Cmp_r32_rm32) [R8D,ECX]                          encoding(3 bytes) = 44 3b c1
0035h jl short 0020h                ; JL(Jl_rel8_64) [20h:jmp64]                           encoding(2 bytes) = 7c e9
0037h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> maxBytes => new byte[56]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x11,0x8B,0x49,0x08,0x85,0xC9,0x77,0x03,0x33,0xC0,0xC3,0x48,0x8B,0x02,0x41,0xB8,0x01,0x00,0x00,0x00,0x83,0xF9,0x01,0x7E,0x17,0x4D,0x63,0xC8,0x4E,0x8B,0x0C,0xCA,0x4C,0x3B,0xC8,0x76,0x03,0x49,0x8B,0xC1,0x41,0xFF,0xC0,0x44,0x3B,0xC1,0x7C,0xE9,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: float max(ReadOnlySpan<float> src)
; location: [7FFC872BE350h, 7FFC872BE38Bh]
0000h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0003h xchg ax,ax                    ; NOP(Nopw)                                            encoding(2 bytes) = 66 90
0005h mov rax,[rcx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 01
0008h mov edx,[rcx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 51 08
000bh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
000dh ja short 0014h                ; JA(Ja_rel8_64) [14h:jmp64]                           encoding(2 bytes) = 77 05
000fh vxorps xmm0,xmm0,xmm0         ; VXORPS(VEX_Vxorps_xmm_xmm_xmmm128) [XMM0,XMM0,XMM0]  encoding(VEX, 4 bytes) = c5 f8 57 c0
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0014h vmovss xmm0,dword ptr [rax]   ; VMOVSS(VEX_Vmovss_xmm_m32) [XMM0,mem(Float32,RAX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 10 00
0018h mov ecx,1                     ; MOV(Mov_r32_imm32) [ECX,1h:imm32]                    encoding(5 bytes) = b9 01 00 00 00
001dh cmp edx,1                     ; CMP(Cmp_rm32_imm8) [EDX,1h:imm32]                    encoding(3 bytes) = 83 fa 01
0020h jle short 003bh               ; JLE(Jle_rel8_64) [3Bh:jmp64]                         encoding(2 bytes) = 7e 19
0022h movsxd r8,ecx                 ; MOVSXD(Movsxd_r64_rm32) [R8,ECX]                     encoding(3 bytes) = 4c 63 c1
0025h vmovss xmm1,dword ptr [rax+r8*4]; VMOVSS(VEX_Vmovss_xmm_m32) [XMM1,mem(Float32,RAX:br,DS:sr)] encoding(VEX, 6 bytes) = c4 a1 7a 10 0c 80
002bh vucomiss xmm1,xmm0            ; VUCOMISS(VEX_Vucomiss_xmm_xmmm32) [XMM1,XMM0]        encoding(VEX, 4 bytes) = c5 f8 2e c8
002fh jbe short 0035h               ; JBE(Jbe_rel8_64) [35h:jmp64]                         encoding(2 bytes) = 76 04
0031h vmovaps xmm0,xmm1             ; VMOVAPS(VEX_Vmovaps_xmm_xmmm128) [XMM0,XMM1]         encoding(VEX, 4 bytes) = c5 f8 28 c1
0035h inc ecx                       ; INC(Inc_rm32) [ECX]                                  encoding(2 bytes) = ff c1
0037h cmp ecx,edx                   ; CMP(Cmp_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 3b ca
0039h jl short 0022h                ; JL(Jl_rel8_64) [22h:jmp64]                           encoding(2 bytes) = 7c e7
003bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> maxBytes => new byte[60]{0xC5,0xF8,0x77,0x66,0x90,0x48,0x8B,0x01,0x8B,0x51,0x08,0x85,0xD2,0x77,0x05,0xC5,0xF8,0x57,0xC0,0xC3,0xC5,0xFA,0x10,0x00,0xB9,0x01,0x00,0x00,0x00,0x83,0xFA,0x01,0x7E,0x19,0x4C,0x63,0xC1,0xC4,0xA1,0x7A,0x10,0x0C,0x80,0xC5,0xF8,0x2E,0xC8,0x76,0x04,0xC5,0xF8,0x28,0xC1,0xFF,0xC1,0x3B,0xCA,0x7C,0xE7,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: double max(ReadOnlySpan<double> src)
; location: [7FFC872BE3A0h, 7FFC872BE3DBh]
0000h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0003h xchg ax,ax                    ; NOP(Nopw)                                            encoding(2 bytes) = 66 90
0005h mov rax,[rcx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 01
0008h mov edx,[rcx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 51 08
000bh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
000dh ja short 0014h                ; JA(Ja_rel8_64) [14h:jmp64]                           encoding(2 bytes) = 77 05
000fh vxorps xmm0,xmm0,xmm0         ; VXORPS(VEX_Vxorps_xmm_xmm_xmmm128) [XMM0,XMM0,XMM0]  encoding(VEX, 4 bytes) = c5 f8 57 c0
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0014h vmovsd xmm0,qword ptr [rax]   ; VMOVSD(VEX_Vmovsd_xmm_m64) [XMM0,mem(Float64,RAX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fb 10 00
0018h mov ecx,1                     ; MOV(Mov_r32_imm32) [ECX,1h:imm32]                    encoding(5 bytes) = b9 01 00 00 00
001dh cmp edx,1                     ; CMP(Cmp_rm32_imm8) [EDX,1h:imm32]                    encoding(3 bytes) = 83 fa 01
0020h jle short 003bh               ; JLE(Jle_rel8_64) [3Bh:jmp64]                         encoding(2 bytes) = 7e 19
0022h movsxd r8,ecx                 ; MOVSXD(Movsxd_r64_rm32) [R8,ECX]                     encoding(3 bytes) = 4c 63 c1
0025h vmovsd xmm1,qword ptr [rax+r8*8]; VMOVSD(VEX_Vmovsd_xmm_m64) [XMM1,mem(Float64,RAX:br,DS:sr)] encoding(VEX, 6 bytes) = c4 a1 7b 10 0c c0
002bh vucomisd xmm1,xmm0            ; VUCOMISD(VEX_Vucomisd_xmm_xmmm64) [XMM1,XMM0]        encoding(VEX, 4 bytes) = c5 f9 2e c8
002fh jbe short 0035h               ; JBE(Jbe_rel8_64) [35h:jmp64]                         encoding(2 bytes) = 76 04
0031h vmovaps xmm0,xmm1             ; VMOVAPS(VEX_Vmovaps_xmm_xmmm128) [XMM0,XMM1]         encoding(VEX, 4 bytes) = c5 f8 28 c1
0035h inc ecx                       ; INC(Inc_rm32) [ECX]                                  encoding(2 bytes) = ff c1
0037h cmp ecx,edx                   ; CMP(Cmp_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 3b ca
0039h jl short 0022h                ; JL(Jl_rel8_64) [22h:jmp64]                           encoding(2 bytes) = 7c e7
003bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> maxBytes => new byte[60]{0xC5,0xF8,0x77,0x66,0x90,0x48,0x8B,0x01,0x8B,0x51,0x08,0x85,0xD2,0x77,0x05,0xC5,0xF8,0x57,0xC0,0xC3,0xC5,0xFB,0x10,0x00,0xB9,0x01,0x00,0x00,0x00,0x83,0xFA,0x01,0x7E,0x19,0x4C,0x63,0xC1,0xC4,0xA1,0x7B,0x10,0x0C,0xC0,0xC5,0xF9,0x2E,0xC8,0x76,0x04,0xC5,0xF8,0x28,0xC1,0xFF,0xC1,0x3B,0xCA,0x7C,0xE7,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: sbyte min(sbyte lhs, sbyte rhs)
; location: [7FFC872BE3F0h, 7FFC872BE404h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cl                  ; MOVSX(Movsx_r64_rm8) [RAX,CL]                        encoding(4 bytes) = 48 0f be c1
0009h movsx rdx,dl                  ; MOVSX(Movsx_r64_rm8) [RDX,DL]                        encoding(4 bytes) = 48 0f be d2
000dh cmp eax,edx                   ; CMP(Cmp_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 3b c2
000fh jl short 0014h                ; JL(Jl_rel8_64) [14h:jmp64]                           encoding(2 bytes) = 7c 03
0011h mov eax,edx                   ; MOV(Mov_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 8b c2
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0014h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> minBytes => new byte[21]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBE,0xC1,0x48,0x0F,0xBE,0xD2,0x3B,0xC2,0x7C,0x03,0x8B,0xC2,0xC3,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: byte min(byte lhs, byte rhs)
; location: [7FFC872BE420h, 7FFC872BE432h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0008h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
000bh cmp eax,edx                   ; CMP(Cmp_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 3b c2
000dh jl short 0012h                ; JL(Jl_rel8_64) [12h:jmp64]                           encoding(2 bytes) = 7c 03
000fh mov eax,edx                   ; MOV(Mov_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 8b c2
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0012h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> minBytes => new byte[19]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC1,0x0F,0xB6,0xD2,0x3B,0xC2,0x7C,0x03,0x8B,0xC2,0xC3,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: short min(short lhs, short rhs)
; location: [7FFC872BE450h, 7FFC872BE464h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cx                  ; MOVSX(Movsx_r64_rm16) [RAX,CX]                       encoding(4 bytes) = 48 0f bf c1
0009h movsx rdx,dx                  ; MOVSX(Movsx_r64_rm16) [RDX,DX]                       encoding(4 bytes) = 48 0f bf d2
000dh cmp eax,edx                   ; CMP(Cmp_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 3b c2
000fh jl short 0014h                ; JL(Jl_rel8_64) [14h:jmp64]                           encoding(2 bytes) = 7c 03
0011h mov eax,edx                   ; MOV(Mov_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 8b c2
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0014h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> minBytes => new byte[21]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBF,0xC1,0x48,0x0F,0xBF,0xD2,0x3B,0xC2,0x7C,0x03,0x8B,0xC2,0xC3,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ushort min(ushort lhs, ushort rhs)
; location: [7FFC872BE480h, 7FFC872BE492h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cx                  ; MOVZX(Movzx_r32_rm16) [EAX,CX]                       encoding(3 bytes) = 0f b7 c1
0008h movzx edx,dx                  ; MOVZX(Movzx_r32_rm16) [EDX,DX]                       encoding(3 bytes) = 0f b7 d2
000bh cmp eax,edx                   ; CMP(Cmp_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 3b c2
000dh jl short 0012h                ; JL(Jl_rel8_64) [12h:jmp64]                           encoding(2 bytes) = 7c 03
000fh mov eax,edx                   ; MOV(Mov_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 8b c2
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0012h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> minBytes => new byte[19]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB7,0xC1,0x0F,0xB7,0xD2,0x3B,0xC2,0x7C,0x03,0x8B,0xC2,0xC3,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: int min(int lhs, int rhs)
; location: [7FFC872BE4B0h, 7FFC872BE4BEh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h cmp ecx,edx                   ; CMP(Cmp_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 3b ca
0007h jl short 000ch                ; JL(Jl_rel8_64) [Ch:jmp64]                            encoding(2 bytes) = 7c 03
0009h mov eax,edx                   ; MOV(Mov_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 8b c2
000bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
000ch mov eax,ecx                   ; MOV(Mov_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 8b c1
000eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> minBytes => new byte[15]{0x0F,0x1F,0x44,0x00,0x00,0x3B,0xCA,0x7C,0x03,0x8B,0xC2,0xC3,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: uint min(uint lhs, uint rhs)
; location: [7FFC872BE4D0h, 7FFC872BE4DEh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h cmp ecx,edx                   ; CMP(Cmp_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 3b ca
0007h jb short 000ch                ; JB(Jb_rel8_64) [Ch:jmp64]                            encoding(2 bytes) = 72 03
0009h mov eax,edx                   ; MOV(Mov_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 8b c2
000bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
000ch mov eax,ecx                   ; MOV(Mov_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 8b c1
000eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> minBytes => new byte[15]{0x0F,0x1F,0x44,0x00,0x00,0x3B,0xCA,0x72,0x03,0x8B,0xC2,0xC3,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: long min(long lhs, long rhs)
; location: [7FFC872BE4F0h, 7FFC872BE501h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h cmp rcx,rdx                   ; CMP(Cmp_r64_rm64) [RCX,RDX]                          encoding(3 bytes) = 48 3b ca
0008h jl short 000eh                ; JL(Jl_rel8_64) [Eh:jmp64]                            encoding(2 bytes) = 7c 04
000ah mov rax,rdx                   ; MOV(Mov_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 8b c2
000dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
000eh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> minBytes => new byte[18]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x3B,0xCA,0x7C,0x04,0x48,0x8B,0xC2,0xC3,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ulong min(ulong lhs, ulong rhs)
; location: [7FFC872BE520h, 7FFC872BE531h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h cmp rcx,rdx                   ; CMP(Cmp_r64_rm64) [RCX,RDX]                          encoding(3 bytes) = 48 3b ca
0008h jb short 000eh                ; JB(Jb_rel8_64) [Eh:jmp64]                            encoding(2 bytes) = 72 04
000ah mov rax,rdx                   ; MOV(Mov_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 8b c2
000dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
000eh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> minBytes => new byte[18]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x3B,0xCA,0x72,0x04,0x48,0x8B,0xC2,0xC3,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: sbyte min(ReadOnlySpan<sbyte> src)
; location: [7FFC872BE550h, 7FFC872BE589h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rdx,[rcx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 11
0008h mov ecx,[rcx+8]               ; MOV(Mov_r32_rm32) [ECX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 49 08
000bh test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
000dh ja short 0012h                ; JA(Ja_rel8_64) [12h:jmp64]                           encoding(2 bytes) = 77 03
000fh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0012h movsx rax,byte ptr [rdx]      ; MOVSX(Movsx_r64_rm8) [RAX,mem(8i,RDX:br,DS:sr)]      encoding(4 bytes) = 48 0f be 02
0016h mov r8d,1                     ; MOV(Mov_r32_imm32) [R8D,1h:imm32]                    encoding(6 bytes) = 41 b8 01 00 00 00
001ch cmp ecx,1                     ; CMP(Cmp_rm32_imm8) [ECX,1h:imm32]                    encoding(3 bytes) = 83 f9 01
001fh jle short 0039h               ; JLE(Jle_rel8_64) [39h:jmp64]                         encoding(2 bytes) = 7e 18
0021h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0024h movsx r9,byte ptr [rdx+r9]    ; MOVSX(Movsx_r64_rm8) [R9,mem(8i,RDX:br,DS:sr)]       encoding(5 bytes) = 4e 0f be 0c 0a
0029h cmp r9d,eax                   ; CMP(Cmp_r32_rm32) [R9D,EAX]                          encoding(3 bytes) = 44 3b c8
002ch jge short 0031h               ; JGE(Jge_rel8_64) [31h:jmp64]                         encoding(2 bytes) = 7d 03
002eh mov eax,r9d                   ; MOV(Mov_r32_rm32) [EAX,R9D]                          encoding(3 bytes) = 41 8b c1
0031h inc r8d                       ; INC(Inc_rm32) [R8D]                                  encoding(3 bytes) = 41 ff c0
0034h cmp r8d,ecx                   ; CMP(Cmp_r32_rm32) [R8D,ECX]                          encoding(3 bytes) = 44 3b c1
0037h jl short 0021h                ; JL(Jl_rel8_64) [21h:jmp64]                           encoding(2 bytes) = 7c e8
0039h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> minBytes => new byte[58]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x11,0x8B,0x49,0x08,0x85,0xC9,0x77,0x03,0x33,0xC0,0xC3,0x48,0x0F,0xBE,0x02,0x41,0xB8,0x01,0x00,0x00,0x00,0x83,0xF9,0x01,0x7E,0x18,0x4D,0x63,0xC8,0x4E,0x0F,0xBE,0x0C,0x0A,0x44,0x3B,0xC8,0x7D,0x03,0x41,0x8B,0xC1,0x41,0xFF,0xC0,0x44,0x3B,0xC1,0x7C,0xE8,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: byte min(ReadOnlySpan<byte> src)
; location: [7FFC872BE5A0h, 7FFC872BE5D8h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rdx,[rcx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 11
0008h mov ecx,[rcx+8]               ; MOV(Mov_r32_rm32) [ECX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 49 08
000bh test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
000dh ja short 0012h                ; JA(Ja_rel8_64) [12h:jmp64]                           encoding(2 bytes) = 77 03
000fh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0012h movzx eax,byte ptr [rdx]      ; MOVZX(Movzx_r32_rm8) [EAX,mem(8u,RDX:br,DS:sr)]      encoding(3 bytes) = 0f b6 02
0015h mov r8d,1                     ; MOV(Mov_r32_imm32) [R8D,1h:imm32]                    encoding(6 bytes) = 41 b8 01 00 00 00
001bh cmp ecx,1                     ; CMP(Cmp_rm32_imm8) [ECX,1h:imm32]                    encoding(3 bytes) = 83 f9 01
001eh jle short 0038h               ; JLE(Jle_rel8_64) [38h:jmp64]                         encoding(2 bytes) = 7e 18
0020h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0023h movzx r9d,byte ptr [rdx+r9]   ; MOVZX(Movzx_r32_rm8) [R9D,mem(8u,RDX:br,DS:sr)]      encoding(5 bytes) = 46 0f b6 0c 0a
0028h cmp r9d,eax                   ; CMP(Cmp_r32_rm32) [R9D,EAX]                          encoding(3 bytes) = 44 3b c8
002bh jge short 0030h               ; JGE(Jge_rel8_64) [30h:jmp64]                         encoding(2 bytes) = 7d 03
002dh mov eax,r9d                   ; MOV(Mov_r32_rm32) [EAX,R9D]                          encoding(3 bytes) = 41 8b c1
0030h inc r8d                       ; INC(Inc_rm32) [R8D]                                  encoding(3 bytes) = 41 ff c0
0033h cmp r8d,ecx                   ; CMP(Cmp_r32_rm32) [R8D,ECX]                          encoding(3 bytes) = 44 3b c1
0036h jl short 0020h                ; JL(Jl_rel8_64) [20h:jmp64]                           encoding(2 bytes) = 7c e8
0038h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> minBytes => new byte[57]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x11,0x8B,0x49,0x08,0x85,0xC9,0x77,0x03,0x33,0xC0,0xC3,0x0F,0xB6,0x02,0x41,0xB8,0x01,0x00,0x00,0x00,0x83,0xF9,0x01,0x7E,0x18,0x4D,0x63,0xC8,0x46,0x0F,0xB6,0x0C,0x0A,0x44,0x3B,0xC8,0x7D,0x03,0x41,0x8B,0xC1,0x41,0xFF,0xC0,0x44,0x3B,0xC1,0x7C,0xE8,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: short min(ReadOnlySpan<short> src)
; location: [7FFC872BE5F0h, 7FFC872BE629h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rdx,[rcx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 11
0008h mov ecx,[rcx+8]               ; MOV(Mov_r32_rm32) [ECX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 49 08
000bh test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
000dh ja short 0012h                ; JA(Ja_rel8_64) [12h:jmp64]                           encoding(2 bytes) = 77 03
000fh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0012h movsx rax,word ptr [rdx]      ; MOVSX(Movsx_r64_rm16) [RAX,mem(16i,RDX:br,DS:sr)]    encoding(4 bytes) = 48 0f bf 02
0016h mov r8d,1                     ; MOV(Mov_r32_imm32) [R8D,1h:imm32]                    encoding(6 bytes) = 41 b8 01 00 00 00
001ch cmp ecx,1                     ; CMP(Cmp_rm32_imm8) [ECX,1h:imm32]                    encoding(3 bytes) = 83 f9 01
001fh jle short 0039h               ; JLE(Jle_rel8_64) [39h:jmp64]                         encoding(2 bytes) = 7e 18
0021h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0024h movsx r9,word ptr [rdx+r9*2]  ; MOVSX(Movsx_r64_rm16) [R9,mem(16i,RDX:br,DS:sr)]     encoding(5 bytes) = 4e 0f bf 0c 4a
0029h cmp r9d,eax                   ; CMP(Cmp_r32_rm32) [R9D,EAX]                          encoding(3 bytes) = 44 3b c8
002ch jge short 0031h               ; JGE(Jge_rel8_64) [31h:jmp64]                         encoding(2 bytes) = 7d 03
002eh mov eax,r9d                   ; MOV(Mov_r32_rm32) [EAX,R9D]                          encoding(3 bytes) = 41 8b c1
0031h inc r8d                       ; INC(Inc_rm32) [R8D]                                  encoding(3 bytes) = 41 ff c0
0034h cmp r8d,ecx                   ; CMP(Cmp_r32_rm32) [R8D,ECX]                          encoding(3 bytes) = 44 3b c1
0037h jl short 0021h                ; JL(Jl_rel8_64) [21h:jmp64]                           encoding(2 bytes) = 7c e8
0039h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> minBytes => new byte[58]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x11,0x8B,0x49,0x08,0x85,0xC9,0x77,0x03,0x33,0xC0,0xC3,0x48,0x0F,0xBF,0x02,0x41,0xB8,0x01,0x00,0x00,0x00,0x83,0xF9,0x01,0x7E,0x18,0x4D,0x63,0xC8,0x4E,0x0F,0xBF,0x0C,0x4A,0x44,0x3B,0xC8,0x7D,0x03,0x41,0x8B,0xC1,0x41,0xFF,0xC0,0x44,0x3B,0xC1,0x7C,0xE8,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ushort min(ReadOnlySpan<ushort> src)
; location: [7FFC872BE640h, 7FFC872BE678h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rdx,[rcx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 11
0008h mov ecx,[rcx+8]               ; MOV(Mov_r32_rm32) [ECX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 49 08
000bh test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
000dh ja short 0012h                ; JA(Ja_rel8_64) [12h:jmp64]                           encoding(2 bytes) = 77 03
000fh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0012h movzx eax,word ptr [rdx]      ; MOVZX(Movzx_r32_rm16) [EAX,mem(16u,RDX:br,DS:sr)]    encoding(3 bytes) = 0f b7 02
0015h mov r8d,1                     ; MOV(Mov_r32_imm32) [R8D,1h:imm32]                    encoding(6 bytes) = 41 b8 01 00 00 00
001bh cmp ecx,1                     ; CMP(Cmp_rm32_imm8) [ECX,1h:imm32]                    encoding(3 bytes) = 83 f9 01
001eh jle short 0038h               ; JLE(Jle_rel8_64) [38h:jmp64]                         encoding(2 bytes) = 7e 18
0020h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0023h movzx r9d,word ptr [rdx+r9*2] ; MOVZX(Movzx_r32_rm16) [R9D,mem(16u,RDX:br,DS:sr)]    encoding(5 bytes) = 46 0f b7 0c 4a
0028h cmp r9d,eax                   ; CMP(Cmp_r32_rm32) [R9D,EAX]                          encoding(3 bytes) = 44 3b c8
002bh jge short 0030h               ; JGE(Jge_rel8_64) [30h:jmp64]                         encoding(2 bytes) = 7d 03
002dh mov eax,r9d                   ; MOV(Mov_r32_rm32) [EAX,R9D]                          encoding(3 bytes) = 41 8b c1
0030h inc r8d                       ; INC(Inc_rm32) [R8D]                                  encoding(3 bytes) = 41 ff c0
0033h cmp r8d,ecx                   ; CMP(Cmp_r32_rm32) [R8D,ECX]                          encoding(3 bytes) = 44 3b c1
0036h jl short 0020h                ; JL(Jl_rel8_64) [20h:jmp64]                           encoding(2 bytes) = 7c e8
0038h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> minBytes => new byte[57]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x11,0x8B,0x49,0x08,0x85,0xC9,0x77,0x03,0x33,0xC0,0xC3,0x0F,0xB7,0x02,0x41,0xB8,0x01,0x00,0x00,0x00,0x83,0xF9,0x01,0x7E,0x18,0x4D,0x63,0xC8,0x46,0x0F,0xB7,0x0C,0x4A,0x44,0x3B,0xC8,0x7D,0x03,0x41,0x8B,0xC1,0x41,0xFF,0xC0,0x44,0x3B,0xC1,0x7C,0xE8,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: int min(ReadOnlySpan<int> src)
; location: [7FFC872BE690h, 7FFC872BE6C6h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rdx,[rcx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 11
0008h mov ecx,[rcx+8]               ; MOV(Mov_r32_rm32) [ECX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 49 08
000bh test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
000dh ja short 0012h                ; JA(Ja_rel8_64) [12h:jmp64]                           encoding(2 bytes) = 77 03
000fh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0012h mov eax,[rdx]                 ; MOV(Mov_r32_rm32) [EAX,mem(32u,RDX:br,DS:sr)]        encoding(2 bytes) = 8b 02
0014h mov r8d,1                     ; MOV(Mov_r32_imm32) [R8D,1h:imm32]                    encoding(6 bytes) = 41 b8 01 00 00 00
001ah cmp ecx,1                     ; CMP(Cmp_rm32_imm8) [ECX,1h:imm32]                    encoding(3 bytes) = 83 f9 01
001dh jle short 0036h               ; JLE(Jle_rel8_64) [36h:jmp64]                         encoding(2 bytes) = 7e 17
001fh movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0022h mov r9d,[rdx+r9*4]            ; MOV(Mov_r32_rm32) [R9D,mem(32u,RDX:br,DS:sr)]        encoding(4 bytes) = 46 8b 0c 8a
0026h cmp r9d,eax                   ; CMP(Cmp_r32_rm32) [R9D,EAX]                          encoding(3 bytes) = 44 3b c8
0029h jge short 002eh               ; JGE(Jge_rel8_64) [2Eh:jmp64]                         encoding(2 bytes) = 7d 03
002bh mov eax,r9d                   ; MOV(Mov_r32_rm32) [EAX,R9D]                          encoding(3 bytes) = 41 8b c1
002eh inc r8d                       ; INC(Inc_rm32) [R8D]                                  encoding(3 bytes) = 41 ff c0
0031h cmp r8d,ecx                   ; CMP(Cmp_r32_rm32) [R8D,ECX]                          encoding(3 bytes) = 44 3b c1
0034h jl short 001fh                ; JL(Jl_rel8_64) [1Fh:jmp64]                           encoding(2 bytes) = 7c e9
0036h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> minBytes => new byte[55]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x11,0x8B,0x49,0x08,0x85,0xC9,0x77,0x03,0x33,0xC0,0xC3,0x8B,0x02,0x41,0xB8,0x01,0x00,0x00,0x00,0x83,0xF9,0x01,0x7E,0x17,0x4D,0x63,0xC8,0x46,0x8B,0x0C,0x8A,0x44,0x3B,0xC8,0x7D,0x03,0x41,0x8B,0xC1,0x41,0xFF,0xC0,0x44,0x3B,0xC1,0x7C,0xE9,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: uint min(ReadOnlySpan<uint> src)
; location: [7FFC872BE6E0h, 7FFC872BE716h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rdx,[rcx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 11
0008h mov ecx,[rcx+8]               ; MOV(Mov_r32_rm32) [ECX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 49 08
000bh test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
000dh ja short 0012h                ; JA(Ja_rel8_64) [12h:jmp64]                           encoding(2 bytes) = 77 03
000fh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0012h mov eax,[rdx]                 ; MOV(Mov_r32_rm32) [EAX,mem(32u,RDX:br,DS:sr)]        encoding(2 bytes) = 8b 02
0014h mov r8d,1                     ; MOV(Mov_r32_imm32) [R8D,1h:imm32]                    encoding(6 bytes) = 41 b8 01 00 00 00
001ah cmp ecx,1                     ; CMP(Cmp_rm32_imm8) [ECX,1h:imm32]                    encoding(3 bytes) = 83 f9 01
001dh jle short 0036h               ; JLE(Jle_rel8_64) [36h:jmp64]                         encoding(2 bytes) = 7e 17
001fh movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0022h mov r9d,[rdx+r9*4]            ; MOV(Mov_r32_rm32) [R9D,mem(32u,RDX:br,DS:sr)]        encoding(4 bytes) = 46 8b 0c 8a
0026h cmp r9d,eax                   ; CMP(Cmp_r32_rm32) [R9D,EAX]                          encoding(3 bytes) = 44 3b c8
0029h jae short 002eh               ; JAE(Jae_rel8_64) [2Eh:jmp64]                         encoding(2 bytes) = 73 03
002bh mov eax,r9d                   ; MOV(Mov_r32_rm32) [EAX,R9D]                          encoding(3 bytes) = 41 8b c1
002eh inc r8d                       ; INC(Inc_rm32) [R8D]                                  encoding(3 bytes) = 41 ff c0
0031h cmp r8d,ecx                   ; CMP(Cmp_r32_rm32) [R8D,ECX]                          encoding(3 bytes) = 44 3b c1
0034h jl short 001fh                ; JL(Jl_rel8_64) [1Fh:jmp64]                           encoding(2 bytes) = 7c e9
0036h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> minBytes => new byte[55]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x11,0x8B,0x49,0x08,0x85,0xC9,0x77,0x03,0x33,0xC0,0xC3,0x8B,0x02,0x41,0xB8,0x01,0x00,0x00,0x00,0x83,0xF9,0x01,0x7E,0x17,0x4D,0x63,0xC8,0x46,0x8B,0x0C,0x8A,0x44,0x3B,0xC8,0x73,0x03,0x41,0x8B,0xC1,0x41,0xFF,0xC0,0x44,0x3B,0xC1,0x7C,0xE9,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: long min(ReadOnlySpan<long> src)
; location: [7FFC872BE730h, 7FFC872BE767h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rdx,[rcx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 11
0008h mov ecx,[rcx+8]               ; MOV(Mov_r32_rm32) [ECX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 49 08
000bh test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
000dh ja short 0012h                ; JA(Ja_rel8_64) [12h:jmp64]                           encoding(2 bytes) = 77 03
000fh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0012h mov rax,[rdx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 02
0015h mov r8d,1                     ; MOV(Mov_r32_imm32) [R8D,1h:imm32]                    encoding(6 bytes) = 41 b8 01 00 00 00
001bh cmp ecx,1                     ; CMP(Cmp_rm32_imm8) [ECX,1h:imm32]                    encoding(3 bytes) = 83 f9 01
001eh jle short 0037h               ; JLE(Jle_rel8_64) [37h:jmp64]                         encoding(2 bytes) = 7e 17
0020h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0023h mov r9,[rdx+r9*8]             ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(4 bytes) = 4e 8b 0c ca
0027h cmp r9,rax                    ; CMP(Cmp_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 3b c8
002ah jge short 002fh               ; JGE(Jge_rel8_64) [2Fh:jmp64]                         encoding(2 bytes) = 7d 03
002ch mov rax,r9                    ; MOV(Mov_r64_rm64) [RAX,R9]                           encoding(3 bytes) = 49 8b c1
002fh inc r8d                       ; INC(Inc_rm32) [R8D]                                  encoding(3 bytes) = 41 ff c0
0032h cmp r8d,ecx                   ; CMP(Cmp_r32_rm32) [R8D,ECX]                          encoding(3 bytes) = 44 3b c1
0035h jl short 0020h                ; JL(Jl_rel8_64) [20h:jmp64]                           encoding(2 bytes) = 7c e9
0037h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> minBytes => new byte[56]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x11,0x8B,0x49,0x08,0x85,0xC9,0x77,0x03,0x33,0xC0,0xC3,0x48,0x8B,0x02,0x41,0xB8,0x01,0x00,0x00,0x00,0x83,0xF9,0x01,0x7E,0x17,0x4D,0x63,0xC8,0x4E,0x8B,0x0C,0xCA,0x4C,0x3B,0xC8,0x7D,0x03,0x49,0x8B,0xC1,0x41,0xFF,0xC0,0x44,0x3B,0xC1,0x7C,0xE9,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ulong min(ReadOnlySpan<ulong> src)
; location: [7FFC872BE780h, 7FFC872BE7B7h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rdx,[rcx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 11
0008h mov ecx,[rcx+8]               ; MOV(Mov_r32_rm32) [ECX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 49 08
000bh test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
000dh ja short 0012h                ; JA(Ja_rel8_64) [12h:jmp64]                           encoding(2 bytes) = 77 03
000fh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0012h mov rax,[rdx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 02
0015h mov r8d,1                     ; MOV(Mov_r32_imm32) [R8D,1h:imm32]                    encoding(6 bytes) = 41 b8 01 00 00 00
001bh cmp ecx,1                     ; CMP(Cmp_rm32_imm8) [ECX,1h:imm32]                    encoding(3 bytes) = 83 f9 01
001eh jle short 0037h               ; JLE(Jle_rel8_64) [37h:jmp64]                         encoding(2 bytes) = 7e 17
0020h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0023h mov r9,[rdx+r9*8]             ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(4 bytes) = 4e 8b 0c ca
0027h cmp r9,rax                    ; CMP(Cmp_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 3b c8
002ah jae short 002fh               ; JAE(Jae_rel8_64) [2Fh:jmp64]                         encoding(2 bytes) = 73 03
002ch mov rax,r9                    ; MOV(Mov_r64_rm64) [RAX,R9]                           encoding(3 bytes) = 49 8b c1
002fh inc r8d                       ; INC(Inc_rm32) [R8D]                                  encoding(3 bytes) = 41 ff c0
0032h cmp r8d,ecx                   ; CMP(Cmp_r32_rm32) [R8D,ECX]                          encoding(3 bytes) = 44 3b c1
0035h jl short 0020h                ; JL(Jl_rel8_64) [20h:jmp64]                           encoding(2 bytes) = 7c e9
0037h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> minBytes => new byte[56]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x11,0x8B,0x49,0x08,0x85,0xC9,0x77,0x03,0x33,0xC0,0xC3,0x48,0x8B,0x02,0x41,0xB8,0x01,0x00,0x00,0x00,0x83,0xF9,0x01,0x7E,0x17,0x4D,0x63,0xC8,0x4E,0x8B,0x0C,0xCA,0x4C,0x3B,0xC8,0x73,0x03,0x49,0x8B,0xC1,0x41,0xFF,0xC0,0x44,0x3B,0xC1,0x7C,0xE9,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: float min(float lhs, float rhs)
; location: [7FFC872BE7D0h, 7FFC872BE7E0h]
0000h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0003h xchg ax,ax                    ; NOP(Nopw)                                            encoding(2 bytes) = 66 90
0005h vucomiss xmm1,xmm0            ; VUCOMISS(VEX_Vucomiss_xmm_xmmm32) [XMM1,XMM0]        encoding(VEX, 4 bytes) = c5 f8 2e c8
0009h ja short 0010h                ; JA(Ja_rel8_64) [10h:jmp64]                           encoding(2 bytes) = 77 05
000bh vmovaps xmm0,xmm1             ; VMOVAPS(VEX_Vmovaps_xmm_xmmm128) [XMM0,XMM1]         encoding(VEX, 4 bytes) = c5 f8 28 c1
000fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0010h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> minBytes => new byte[17]{0xC5,0xF8,0x77,0x66,0x90,0xC5,0xF8,0x2E,0xC8,0x77,0x05,0xC5,0xF8,0x28,0xC1,0xC3,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: double min(double lhs, double rhs)
; location: [7FFC872BE800h, 7FFC872BE810h]
0000h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0003h xchg ax,ax                    ; NOP(Nopw)                                            encoding(2 bytes) = 66 90
0005h vucomisd xmm1,xmm0            ; VUCOMISD(VEX_Vucomisd_xmm_xmmm64) [XMM1,XMM0]        encoding(VEX, 4 bytes) = c5 f9 2e c8
0009h ja short 0010h                ; JA(Ja_rel8_64) [10h:jmp64]                           encoding(2 bytes) = 77 05
000bh vmovaps xmm0,xmm1             ; VMOVAPS(VEX_Vmovaps_xmm_xmmm128) [XMM0,XMM1]         encoding(VEX, 4 bytes) = c5 f8 28 c1
000fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0010h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> minBytes => new byte[17]{0xC5,0xF8,0x77,0x66,0x90,0xC5,0xF9,0x2E,0xC8,0x77,0x05,0xC5,0xF8,0x28,0xC1,0xC3,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: float min(ReadOnlySpan<float> src)
; location: [7FFC872BE830h, 7FFC872BE86Bh]
0000h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0003h xchg ax,ax                    ; NOP(Nopw)                                            encoding(2 bytes) = 66 90
0005h mov rax,[rcx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 01
0008h mov edx,[rcx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 51 08
000bh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
000dh ja short 0014h                ; JA(Ja_rel8_64) [14h:jmp64]                           encoding(2 bytes) = 77 05
000fh vxorps xmm0,xmm0,xmm0         ; VXORPS(VEX_Vxorps_xmm_xmm_xmmm128) [XMM0,XMM0,XMM0]  encoding(VEX, 4 bytes) = c5 f8 57 c0
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0014h vmovss xmm0,dword ptr [rax]   ; VMOVSS(VEX_Vmovss_xmm_m32) [XMM0,mem(Float32,RAX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 10 00
0018h mov ecx,1                     ; MOV(Mov_r32_imm32) [ECX,1h:imm32]                    encoding(5 bytes) = b9 01 00 00 00
001dh cmp edx,1                     ; CMP(Cmp_rm32_imm8) [EDX,1h:imm32]                    encoding(3 bytes) = 83 fa 01
0020h jle short 003bh               ; JLE(Jle_rel8_64) [3Bh:jmp64]                         encoding(2 bytes) = 7e 19
0022h movsxd r8,ecx                 ; MOVSXD(Movsxd_r64_rm32) [R8,ECX]                     encoding(3 bytes) = 4c 63 c1
0025h vmovss xmm1,dword ptr [rax+r8*4]; VMOVSS(VEX_Vmovss_xmm_m32) [XMM1,mem(Float32,RAX:br,DS:sr)] encoding(VEX, 6 bytes) = c4 a1 7a 10 0c 80
002bh vucomiss xmm0,xmm1            ; VUCOMISS(VEX_Vucomiss_xmm_xmmm32) [XMM0,XMM1]        encoding(VEX, 4 bytes) = c5 f8 2e c1
002fh jbe short 0035h               ; JBE(Jbe_rel8_64) [35h:jmp64]                         encoding(2 bytes) = 76 04
0031h vmovaps xmm0,xmm1             ; VMOVAPS(VEX_Vmovaps_xmm_xmmm128) [XMM0,XMM1]         encoding(VEX, 4 bytes) = c5 f8 28 c1
0035h inc ecx                       ; INC(Inc_rm32) [ECX]                                  encoding(2 bytes) = ff c1
0037h cmp ecx,edx                   ; CMP(Cmp_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 3b ca
0039h jl short 0022h                ; JL(Jl_rel8_64) [22h:jmp64]                           encoding(2 bytes) = 7c e7
003bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> minBytes => new byte[60]{0xC5,0xF8,0x77,0x66,0x90,0x48,0x8B,0x01,0x8B,0x51,0x08,0x85,0xD2,0x77,0x05,0xC5,0xF8,0x57,0xC0,0xC3,0xC5,0xFA,0x10,0x00,0xB9,0x01,0x00,0x00,0x00,0x83,0xFA,0x01,0x7E,0x19,0x4C,0x63,0xC1,0xC4,0xA1,0x7A,0x10,0x0C,0x80,0xC5,0xF8,0x2E,0xC1,0x76,0x04,0xC5,0xF8,0x28,0xC1,0xFF,0xC1,0x3B,0xCA,0x7C,0xE7,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: double min(ReadOnlySpan<double> src)
; location: [7FFC872BE880h, 7FFC872BE8BBh]
0000h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0003h xchg ax,ax                    ; NOP(Nopw)                                            encoding(2 bytes) = 66 90
0005h mov rax,[rcx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 01
0008h mov edx,[rcx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 51 08
000bh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
000dh ja short 0014h                ; JA(Ja_rel8_64) [14h:jmp64]                           encoding(2 bytes) = 77 05
000fh vxorps xmm0,xmm0,xmm0         ; VXORPS(VEX_Vxorps_xmm_xmm_xmmm128) [XMM0,XMM0,XMM0]  encoding(VEX, 4 bytes) = c5 f8 57 c0
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0014h vmovsd xmm0,qword ptr [rax]   ; VMOVSD(VEX_Vmovsd_xmm_m64) [XMM0,mem(Float64,RAX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fb 10 00
0018h mov ecx,1                     ; MOV(Mov_r32_imm32) [ECX,1h:imm32]                    encoding(5 bytes) = b9 01 00 00 00
001dh cmp edx,1                     ; CMP(Cmp_rm32_imm8) [EDX,1h:imm32]                    encoding(3 bytes) = 83 fa 01
0020h jle short 003bh               ; JLE(Jle_rel8_64) [3Bh:jmp64]                         encoding(2 bytes) = 7e 19
0022h movsxd r8,ecx                 ; MOVSXD(Movsxd_r64_rm32) [R8,ECX]                     encoding(3 bytes) = 4c 63 c1
0025h vmovsd xmm1,qword ptr [rax+r8*8]; VMOVSD(VEX_Vmovsd_xmm_m64) [XMM1,mem(Float64,RAX:br,DS:sr)] encoding(VEX, 6 bytes) = c4 a1 7b 10 0c c0
002bh vucomisd xmm0,xmm1            ; VUCOMISD(VEX_Vucomisd_xmm_xmmm64) [XMM0,XMM1]        encoding(VEX, 4 bytes) = c5 f9 2e c1
002fh jbe short 0035h               ; JBE(Jbe_rel8_64) [35h:jmp64]                         encoding(2 bytes) = 76 04
0031h vmovaps xmm0,xmm1             ; VMOVAPS(VEX_Vmovaps_xmm_xmmm128) [XMM0,XMM1]         encoding(VEX, 4 bytes) = c5 f8 28 c1
0035h inc ecx                       ; INC(Inc_rm32) [ECX]                                  encoding(2 bytes) = ff c1
0037h cmp ecx,edx                   ; CMP(Cmp_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 3b ca
0039h jl short 0022h                ; JL(Jl_rel8_64) [22h:jmp64]                           encoding(2 bytes) = 7c e7
003bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> minBytes => new byte[60]{0xC5,0xF8,0x77,0x66,0x90,0x48,0x8B,0x01,0x8B,0x51,0x08,0x85,0xD2,0x77,0x05,0xC5,0xF8,0x57,0xC0,0xC3,0xC5,0xFB,0x10,0x00,0xB9,0x01,0x00,0x00,0x00,0x83,0xFA,0x01,0x7E,0x19,0x4C,0x63,0xC1,0xC4,0xA1,0x7B,0x10,0x0C,0xC0,0xC5,0xF9,0x2E,0xC1,0x76,0x04,0xC5,0xF8,0x28,0xC1,0xFF,0xC1,0x3B,0xCA,0x7C,0xE7,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: sbyte mod(sbyte lhs, sbyte rhs)
; location: [7FFC872BE8D0h, 7FFC872BE8E4h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cl                  ; MOVSX(Movsx_r64_rm8) [RAX,CL]                        encoding(4 bytes) = 48 0f be c1
0009h movsx rcx,dl                  ; MOVSX(Movsx_r64_rm8) [RCX,DL]                        encoding(4 bytes) = 48 0f be ca
000dh cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
000eh idiv ecx                      ; IDIV(Idiv_rm32) [ECX]                                encoding(2 bytes) = f7 f9
0010h movsx rax,dl                  ; MOVSX(Movsx_r64_rm8) [RAX,DL]                        encoding(4 bytes) = 48 0f be c2
0014h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> modBytes => new byte[21]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBE,0xC1,0x48,0x0F,0xBE,0xCA,0x99,0xF7,0xF9,0x48,0x0F,0xBE,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: byte mod(byte lhs, byte rhs)
; location: [7FFC872BE900h, 7FFC872BE911h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0008h movzx ecx,dl                  ; MOVZX(Movzx_r32_rm8) [ECX,DL]                        encoding(3 bytes) = 0f b6 ca
000bh cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
000ch idiv ecx                      ; IDIV(Idiv_rm32) [ECX]                                encoding(2 bytes) = f7 f9
000eh movzx eax,dl                  ; MOVZX(Movzx_r32_rm8) [EAX,DL]                        encoding(3 bytes) = 0f b6 c2
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> modBytes => new byte[18]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC1,0x0F,0xB6,0xCA,0x99,0xF7,0xF9,0x0F,0xB6,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: short mod(short lhs, short rhs)
; location: [7FFC872BE930h, 7FFC872BE944h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cx                  ; MOVSX(Movsx_r64_rm16) [RAX,CX]                       encoding(4 bytes) = 48 0f bf c1
0009h movsx rcx,dx                  ; MOVSX(Movsx_r64_rm16) [RCX,DX]                       encoding(4 bytes) = 48 0f bf ca
000dh cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
000eh idiv ecx                      ; IDIV(Idiv_rm32) [ECX]                                encoding(2 bytes) = f7 f9
0010h movsx rax,dx                  ; MOVSX(Movsx_r64_rm16) [RAX,DX]                       encoding(4 bytes) = 48 0f bf c2
0014h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> modBytes => new byte[21]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBF,0xC1,0x48,0x0F,0xBF,0xCA,0x99,0xF7,0xF9,0x48,0x0F,0xBF,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ushort mod(ushort lhs, ushort rhs)
; location: [7FFC872BE960h, 7FFC872BE971h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cx                  ; MOVZX(Movzx_r32_rm16) [EAX,CX]                       encoding(3 bytes) = 0f b7 c1
0008h movzx ecx,dx                  ; MOVZX(Movzx_r32_rm16) [ECX,DX]                       encoding(3 bytes) = 0f b7 ca
000bh cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
000ch idiv ecx                      ; IDIV(Idiv_rm32) [ECX]                                encoding(2 bytes) = f7 f9
000eh movzx eax,dx                  ; MOVZX(Movzx_r32_rm16) [EAX,DX]                       encoding(3 bytes) = 0f b7 c2
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> modBytes => new byte[18]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB7,0xC1,0x0F,0xB7,0xCA,0x99,0xF7,0xF9,0x0F,0xB7,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: int mod(int lhs, int rhs)
; location: [7FFC872BE990h, 7FFC872BE9A0h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov r8d,edx                   ; MOV(Mov_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 8b c2
0008h mov eax,ecx                   ; MOV(Mov_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 8b c1
000ah cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
000bh idiv r8d                      ; IDIV(Idiv_rm32) [R8D]                                encoding(3 bytes) = 41 f7 f8
000eh mov eax,edx                   ; MOV(Mov_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 8b c2
0010h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> modBytes => new byte[17]{0x0F,0x1F,0x44,0x00,0x00,0x44,0x8B,0xC2,0x8B,0xC1,0x99,0x41,0xF7,0xF8,0x8B,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: uint mod(uint lhs, uint rhs)
; location: [7FFC872BE9C0h, 7FFC872BE9D1h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov r8d,edx                   ; MOV(Mov_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 8b c2
0008h mov eax,ecx                   ; MOV(Mov_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 8b c1
000ah xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
000ch div r8d                       ; DIV(Div_rm32) [R8D]                                  encoding(3 bytes) = 41 f7 f0
000fh mov eax,edx                   ; MOV(Mov_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 8b c2
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> modBytes => new byte[18]{0x0F,0x1F,0x44,0x00,0x00,0x44,0x8B,0xC2,0x8B,0xC1,0x33,0xD2,0x41,0xF7,0xF0,0x8B,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: long mod(long lhs, long rhs)
; location: [7FFC872BE9F0h, 7FFC872BEA03h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov r8,rdx                    ; MOV(Mov_r64_rm64) [R8,RDX]                           encoding(3 bytes) = 4c 8b c2
0008h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000bh cqo                           ; CQO(Cqo)                                             encoding(2 bytes) = 48 99
000dh idiv r8                       ; IDIV(Idiv_rm64) [R8]                                 encoding(3 bytes) = 49 f7 f8
0010h mov rax,rdx                   ; MOV(Mov_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 8b c2
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> modBytes => new byte[20]{0x0F,0x1F,0x44,0x00,0x00,0x4C,0x8B,0xC2,0x48,0x8B,0xC1,0x48,0x99,0x49,0xF7,0xF8,0x48,0x8B,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ulong mod(ulong lhs, ulong rhs)
; location: [7FFC872BEA20h, 7FFC872BEA33h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov r8,rdx                    ; MOV(Mov_r64_rm64) [R8,RDX]                           encoding(3 bytes) = 4c 8b c2
0008h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000bh xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
000dh div r8                        ; DIV(Div_rm64) [R8]                                   encoding(3 bytes) = 49 f7 f0
0010h mov rax,rdx                   ; MOV(Mov_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 8b c2
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> modBytes => new byte[20]{0x0F,0x1F,0x44,0x00,0x00,0x4C,0x8B,0xC2,0x48,0x8B,0xC1,0x33,0xD2,0x49,0xF7,0xF0,0x48,0x8B,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref sbyte mod(ref sbyte lhs, in sbyte rhs)
; location: [7FFC872BEA50h, 7FFC872BEA66h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,byte ptr [rcx]      ; MOVSX(Movsx_r64_rm8) [RAX,mem(8i,RCX:br,DS:sr)]      encoding(4 bytes) = 48 0f be 01
0009h movsx r8,byte ptr [rdx]       ; MOVSX(Movsx_r64_rm8) [R8,mem(8i,RDX:br,DS:sr)]       encoding(4 bytes) = 4c 0f be 02
000dh cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
000eh idiv r8d                      ; IDIV(Idiv_rm32) [R8D]                                encoding(3 bytes) = 41 f7 f8
0011h mov [rcx],dl                  ; MOV(Mov_rm8_r8) [mem(8u,RCX:br,DS:sr),DL]            encoding(2 bytes) = 88 11
0013h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0016h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> modBytes => new byte[23]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBE,0x01,0x4C,0x0F,0xBE,0x02,0x99,0x41,0xF7,0xF8,0x88,0x11,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref byte mod(ref byte lhs, in byte rhs)
; location: [7FFC872BEA80h, 7FFC872BEA95h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,byte ptr [rcx]      ; MOVZX(Movzx_r32_rm8) [EAX,mem(8u,RCX:br,DS:sr)]      encoding(3 bytes) = 0f b6 01
0008h movzx r8d,byte ptr [rdx]      ; MOVZX(Movzx_r32_rm8) [R8D,mem(8u,RDX:br,DS:sr)]      encoding(4 bytes) = 44 0f b6 02
000ch cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
000dh idiv r8d                      ; IDIV(Idiv_rm32) [R8D]                                encoding(3 bytes) = 41 f7 f8
0010h mov [rcx],dl                  ; MOV(Mov_rm8_r8) [mem(8u,RCX:br,DS:sr),DL]            encoding(2 bytes) = 88 11
0012h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0015h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> modBytes => new byte[22]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0x01,0x44,0x0F,0xB6,0x02,0x99,0x41,0xF7,0xF8,0x88,0x11,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref short mod(ref short lhs, in short rhs)
; location: [7FFC872BEAB0h, 7FFC872BEAC7h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,word ptr [rcx]      ; MOVSX(Movsx_r64_rm16) [RAX,mem(16i,RCX:br,DS:sr)]    encoding(4 bytes) = 48 0f bf 01
0009h movsx r8,word ptr [rdx]       ; MOVSX(Movsx_r64_rm16) [R8,mem(16i,RDX:br,DS:sr)]     encoding(4 bytes) = 4c 0f bf 02
000dh cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
000eh idiv r8d                      ; IDIV(Idiv_rm32) [R8D]                                encoding(3 bytes) = 41 f7 f8
0011h mov [rcx],dx                  ; MOV(Mov_rm16_r16) [mem(16u,RCX:br,DS:sr),DX]         encoding(3 bytes) = 66 89 11
0014h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0017h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> modBytes => new byte[24]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBF,0x01,0x4C,0x0F,0xBF,0x02,0x99,0x41,0xF7,0xF8,0x66,0x89,0x11,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref ushort mod(ref ushort lhs, in ushort rhs)
; location: [7FFC872BEAE0h, 7FFC872BEAF6h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,word ptr [rcx]      ; MOVZX(Movzx_r32_rm16) [EAX,mem(16u,RCX:br,DS:sr)]    encoding(3 bytes) = 0f b7 01
0008h movzx r8d,word ptr [rdx]      ; MOVZX(Movzx_r32_rm16) [R8D,mem(16u,RDX:br,DS:sr)]    encoding(4 bytes) = 44 0f b7 02
000ch cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
000dh idiv r8d                      ; IDIV(Idiv_rm32) [R8D]                                encoding(3 bytes) = 41 f7 f8
0010h mov [rcx],dx                  ; MOV(Mov_rm16_r16) [mem(16u,RCX:br,DS:sr),DX]         encoding(3 bytes) = 66 89 11
0013h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0016h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> modBytes => new byte[23]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB7,0x01,0x44,0x0F,0xB7,0x02,0x99,0x41,0xF7,0xF8,0x66,0x89,0x11,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref int mod(ref int lhs, in int rhs)
; location: [7FFC872BEB10h, 7FFC872BEB23h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov r8,rdx                    ; MOV(Mov_r64_rm64) [R8,RDX]                           encoding(3 bytes) = 4c 8b c2
0008h mov eax,[rcx]                 ; MOV(Mov_r32_rm32) [EAX,mem(32u,RCX:br,DS:sr)]        encoding(2 bytes) = 8b 01
000ah cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
000bh idiv dword ptr [r8]           ; IDIV(Idiv_rm32) [mem(32i,R8:br,DS:sr)]               encoding(3 bytes) = 41 f7 38
000eh mov [rcx],edx                 ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(2 bytes) = 89 11
0010h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> modBytes => new byte[20]{0x0F,0x1F,0x44,0x00,0x00,0x4C,0x8B,0xC2,0x8B,0x01,0x99,0x41,0xF7,0x38,0x89,0x11,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref uint mod(ref uint lhs, in uint rhs)
; location: [7FFC872BEB40h, 7FFC872BEB54h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov r8,rdx                    ; MOV(Mov_r64_rm64) [R8,RDX]                           encoding(3 bytes) = 4c 8b c2
0008h mov eax,[rcx]                 ; MOV(Mov_r32_rm32) [EAX,mem(32u,RCX:br,DS:sr)]        encoding(2 bytes) = 8b 01
000ah xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
000ch div dword ptr [r8]            ; DIV(Div_rm32) [mem(32u,R8:br,DS:sr)]                 encoding(3 bytes) = 41 f7 30
000fh mov [rcx],edx                 ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(2 bytes) = 89 11
0011h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0014h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> modBytes => new byte[21]{0x0F,0x1F,0x44,0x00,0x00,0x4C,0x8B,0xC2,0x8B,0x01,0x33,0xD2,0x41,0xF7,0x30,0x89,0x11,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref long mod(ref long lhs, in long rhs)
; location: [7FFC872BEB70h, 7FFC872BEB86h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov r8,rdx                    ; MOV(Mov_r64_rm64) [R8,RDX]                           encoding(3 bytes) = 4c 8b c2
0008h mov rax,[rcx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 01
000bh cqo                           ; CQO(Cqo)                                             encoding(2 bytes) = 48 99
000dh idiv qword ptr [r8]           ; IDIV(Idiv_rm64) [mem(64i,R8:br,DS:sr)]               encoding(3 bytes) = 49 f7 38
0010h mov [rcx],rdx                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RDX]        encoding(3 bytes) = 48 89 11
0013h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0016h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> modBytes => new byte[23]{0x0F,0x1F,0x44,0x00,0x00,0x4C,0x8B,0xC2,0x48,0x8B,0x01,0x48,0x99,0x49,0xF7,0x38,0x48,0x89,0x11,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref ulong mod(ref ulong lhs, in ulong rhs)
; location: [7FFC872BEBA0h, 7FFC872BEBB6h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov r8,rdx                    ; MOV(Mov_r64_rm64) [R8,RDX]                           encoding(3 bytes) = 4c 8b c2
0008h mov rax,[rcx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 01
000bh xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
000dh div qword ptr [r8]            ; DIV(Div_rm64) [mem(64u,R8:br,DS:sr)]                 encoding(3 bytes) = 49 f7 30
0010h mov [rcx],rdx                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RDX]        encoding(3 bytes) = 48 89 11
0013h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0016h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> modBytes => new byte[23]{0x0F,0x1F,0x44,0x00,0x00,0x4C,0x8B,0xC2,0x48,0x8B,0x01,0x33,0xD2,0x49,0xF7,0x30,0x48,0x89,0x11,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<sbyte> mod(ReadOnlySpan<sbyte> lhs, ReadOnlySpan<sbyte> rhs, Span<sbyte> dst)
; location: [7FFC872BEBD0h, 7FFC872BECB6h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0005h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0006h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0007h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0008h sub rsp,38h                   ; SUB(Sub_rm64_imm8) [RSP,38h:imm64]                   encoding(4 bytes) = 48 83 ec 38
000ch mov r10,[r9]                  ; MOV(Mov_r64_rm64) [R10,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 4d 8b 11
000fh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
0013h mov r11,[r8]                  ; MOV(Mov_r64_rm64) [R11,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 4d 8b 18
0016h mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
001ah mov rsi,[rdx]                 ; MOV(Mov_r64_rm64) [RSI,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 32
001dh mov edi,[rdx+8]               ; MOV(Mov_r32_rm32) [EDI,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 7a 08
0020h mov ebx,6Ah                   ; MOV(Mov_r32_imm32) [EBX,6ah:imm32]                   encoding(5 bytes) = bb 6a 00 00 00
0025h mov ebp,1                     ; MOV(Mov_r32_imm32) [EBP,1h:imm32]                    encoding(5 bytes) = bd 01 00 00 00
002ah mov r14d,edi                  ; MOV(Mov_r32_rm32) [R14D,EDI]                         encoding(3 bytes) = 44 8b f7
002dh mov r15d,r8d                  ; MOV(Mov_r32_rm32) [R15D,R8D]                         encoding(3 bytes) = 45 8b f8
0030h cmp edi,r8d                   ; CMP(Cmp_r32_rm32) [EDI,R8D]                          encoding(3 bytes) = 41 3b f8
0033h jne short 0086h               ; JNE(Jne_rel8_64) [86h:jmp64]                         encoding(2 bytes) = 75 51
0035h xor r14d,r14d                 ; XOR(Xor_r32_rm32) [R14D,R14D]                        encoding(3 bytes) = 45 33 f6
0038h test edi,edi                  ; TEST(Test_rm32_r32) [EDI,EDI]                        encoding(2 bytes) = 85 ff
003ah jle short 006fh               ; JLE(Jle_rel8_64) [6Fh:jmp64]                         encoding(2 bytes) = 7e 33
003ch cmp r14d,r9d                  ; CMP(Cmp_r32_rm32) [R14D,R9D]                         encoding(3 bytes) = 45 3b f1
003fh jae near ptr 00e1h            ; JAE(Jae_rel32_64) [E1h:jmp64]                        encoding(6 bytes) = 0f 83 9c 00 00 00
0045h movsxd rax,r14d               ; MOVSXD(Movsxd_r64_rm32) [RAX,R14D]                   encoding(3 bytes) = 49 63 c6
0048h lea r15,[r10+rax]             ; LEA(Lea_r64_m) [R15,mem(Unknown,R10:br,DS:sr)]       encoding(4 bytes) = 4d 8d 3c 02
004ch movsx rdx,byte ptr [rsi+rax]  ; MOVSX(Movsx_r64_rm8) [RDX,mem(8i,RSI:br,DS:sr)]      encoding(5 bytes) = 48 0f be 14 06
0051h cmp r14d,r8d                  ; CMP(Cmp_r32_rm32) [R14D,R8D]                         encoding(3 bytes) = 45 3b f0
0054h jae near ptr 00e1h            ; JAE(Jae_rel32_64) [E1h:jmp64]                        encoding(6 bytes) = 0f 83 87 00 00 00
005ah movsx rbp,byte ptr [r11+rax]  ; MOVSX(Movsx_r64_rm8) [RBP,mem(8i,R11:br,DS:sr)]      encoding(5 bytes) = 49 0f be 2c 03
005fh mov eax,edx                   ; MOV(Mov_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 8b c2
0061h cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
0062h idiv ebp                      ; IDIV(Idiv_rm32) [EBP]                                encoding(2 bytes) = f7 fd
0064h mov [r15],dl                  ; MOV(Mov_rm8_r8) [mem(8u,R15:br,DS:sr),DL]            encoding(3 bytes) = 41 88 17
0067h inc r14d                      ; INC(Inc_rm32) [R14D]                                 encoding(3 bytes) = 41 ff c6
006ah cmp r14d,edi                  ; CMP(Cmp_r32_rm32) [R14D,EDI]                         encoding(3 bytes) = 44 3b f7
006dh jl short 003ch                ; JL(Jl_rel8_64) [3Ch:jmp64]                           encoding(2 bytes) = 7c cd
006fh mov [rcx],r10                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R10]        encoding(3 bytes) = 4c 89 11
0072h mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0076h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0079h add rsp,38h                   ; ADD(Add_rm64_imm8) [RSP,38h:imm64]                   encoding(4 bytes) = 48 83 c4 38
007dh pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
007eh pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
007fh pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0080h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0081h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0083h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
0085h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0086h mov ecx,29Dh                  ; MOV(Mov_r32_imm32) [ECX,29dh:imm32]                  encoding(5 bytes) = b9 9d 02 00 00
008bh mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0095h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F474D50h:jmp64]                encoding(5 bytes) = e8 b6 4c 47 5f
009ah mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
009dh mov ecx,0C3Fh                 ; MOV(Mov_r32_imm32) [ECX,c3fh:imm32]                  encoding(5 bytes) = b9 3f 0c 00 00
00a2h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00ach call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F474D50h:jmp64]                encoding(5 bytes) = e8 9f 4c 47 5f
00b1h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00b4h lea r8,[rsp+30h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 30
00b9h mov [r8],bpl                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),BPL]            encoding(3 bytes) = 41 88 28
00bch mov [r8+4],ebx                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBX]         encoding(4 bytes) = 41 89 58 04
00c0h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00c3h mov ecx,r14d                  ; MOV(Mov_r32_rm32) [ECX,R14D]                         encoding(3 bytes) = 41 8b ce
00c6h mov edx,r15d                  ; MOV(Mov_r32_rm32) [EDX,R15D]                         encoding(3 bytes) = 41 8b d7
00c9h mov rax,[rsp+30h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 30
00ceh mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00d3h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFC9F3A8h:jmp64]        encoding(5 bytes) = e8 d0 f2 c9 ff
00d8h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00dbh call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F457D80h:jmp64]                encoding(5 bytes) = e8 a0 7c 45 5f
00e0h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00e1h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A61E0h:jmp64]                encoding(5 bytes) = e8 fa 60 5a 5f
00e6h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> modBytes => new byte[231]{0x41,0x57,0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x38,0x4D,0x8B,0x11,0x45,0x8B,0x49,0x08,0x4D,0x8B,0x18,0x45,0x8B,0x40,0x08,0x48,0x8B,0x32,0x8B,0x7A,0x08,0xBB,0x6A,0x00,0x00,0x00,0xBD,0x01,0x00,0x00,0x00,0x44,0x8B,0xF7,0x45,0x8B,0xF8,0x41,0x3B,0xF8,0x75,0x51,0x45,0x33,0xF6,0x85,0xFF,0x7E,0x33,0x45,0x3B,0xF1,0x0F,0x83,0x9C,0x00,0x00,0x00,0x49,0x63,0xC6,0x4D,0x8D,0x3C,0x02,0x48,0x0F,0xBE,0x14,0x06,0x45,0x3B,0xF0,0x0F,0x83,0x87,0x00,0x00,0x00,0x49,0x0F,0xBE,0x2C,0x03,0x8B,0xC2,0x99,0xF7,0xFD,0x41,0x88,0x17,0x41,0xFF,0xC6,0x44,0x3B,0xF7,0x7C,0xCD,0x4C,0x89,0x11,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x38,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0x9D,0x02,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xB6,0x4C,0x47,0x5F,0x48,0x8B,0xF0,0xB9,0x3F,0x0C,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x9F,0x4C,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x30,0x41,0x88,0x28,0x41,0x89,0x58,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCE,0x41,0x8B,0xD7,0x48,0x8B,0x44,0x24,0x30,0x48,0x89,0x44,0x24,0x20,0xE8,0xD0,0xF2,0xC9,0xFF,0x48,0x8B,0xC8,0xE8,0xA0,0x7C,0x45,0x5F,0xCC,0xE8,0xFA,0x60,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<byte> mod(ReadOnlySpan<byte> lhs, ReadOnlySpan<byte> rhs, Span<byte> dst)
; location: [7FFC872BECE0h, 7FFC872BEDC5h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0005h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0006h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0007h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0008h sub rsp,38h                   ; SUB(Sub_rm64_imm8) [RSP,38h:imm64]                   encoding(4 bytes) = 48 83 ec 38
000ch mov r10,[r9]                  ; MOV(Mov_r64_rm64) [R10,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 4d 8b 11
000fh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
0013h mov r11,[r8]                  ; MOV(Mov_r64_rm64) [R11,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 4d 8b 18
0016h mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
001ah mov rsi,[rdx]                 ; MOV(Mov_r64_rm64) [RSI,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 32
001dh mov edi,[rdx+8]               ; MOV(Mov_r32_rm32) [EDI,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 7a 08
0020h mov ebx,72h                   ; MOV(Mov_r32_imm32) [EBX,72h:imm32]                   encoding(5 bytes) = bb 72 00 00 00
0025h mov ebp,1                     ; MOV(Mov_r32_imm32) [EBP,1h:imm32]                    encoding(5 bytes) = bd 01 00 00 00
002ah mov r14d,edi                  ; MOV(Mov_r32_rm32) [R14D,EDI]                         encoding(3 bytes) = 44 8b f7
002dh mov r15d,r8d                  ; MOV(Mov_r32_rm32) [R15D,R8D]                         encoding(3 bytes) = 45 8b f8
0030h cmp edi,r8d                   ; CMP(Cmp_r32_rm32) [EDI,R8D]                          encoding(3 bytes) = 41 3b f8
0033h jne short 0085h               ; JNE(Jne_rel8_64) [85h:jmp64]                         encoding(2 bytes) = 75 50
0035h xor r14d,r14d                 ; XOR(Xor_r32_rm32) [R14D,R14D]                        encoding(3 bytes) = 45 33 f6
0038h test edi,edi                  ; TEST(Test_rm32_r32) [EDI,EDI]                        encoding(2 bytes) = 85 ff
003ah jle short 006eh               ; JLE(Jle_rel8_64) [6Eh:jmp64]                         encoding(2 bytes) = 7e 32
003ch cmp r14d,r9d                  ; CMP(Cmp_r32_rm32) [R14D,R9D]                         encoding(3 bytes) = 45 3b f1
003fh jae near ptr 00e0h            ; JAE(Jae_rel32_64) [E0h:jmp64]                        encoding(6 bytes) = 0f 83 9b 00 00 00
0045h movsxd rax,r14d               ; MOVSXD(Movsxd_r64_rm32) [RAX,R14D]                   encoding(3 bytes) = 49 63 c6
0048h lea r15,[r10+rax]             ; LEA(Lea_r64_m) [R15,mem(Unknown,R10:br,DS:sr)]       encoding(4 bytes) = 4d 8d 3c 02
004ch movzx edx,byte ptr [rsi+rax]  ; MOVZX(Movzx_r32_rm8) [EDX,mem(8u,RSI:br,DS:sr)]      encoding(4 bytes) = 0f b6 14 06
0050h cmp r14d,r8d                  ; CMP(Cmp_r32_rm32) [R14D,R8D]                         encoding(3 bytes) = 45 3b f0
0053h jae near ptr 00e0h            ; JAE(Jae_rel32_64) [E0h:jmp64]                        encoding(6 bytes) = 0f 83 87 00 00 00
0059h movzx ebp,byte ptr [r11+rax]  ; MOVZX(Movzx_r32_rm8) [EBP,mem(8u,R11:br,DS:sr)]      encoding(5 bytes) = 41 0f b6 2c 03
005eh mov eax,edx                   ; MOV(Mov_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 8b c2
0060h cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
0061h idiv ebp                      ; IDIV(Idiv_rm32) [EBP]                                encoding(2 bytes) = f7 fd
0063h mov [r15],dl                  ; MOV(Mov_rm8_r8) [mem(8u,R15:br,DS:sr),DL]            encoding(3 bytes) = 41 88 17
0066h inc r14d                      ; INC(Inc_rm32) [R14D]                                 encoding(3 bytes) = 41 ff c6
0069h cmp r14d,edi                  ; CMP(Cmp_r32_rm32) [R14D,EDI]                         encoding(3 bytes) = 44 3b f7
006ch jl short 003ch                ; JL(Jl_rel8_64) [3Ch:jmp64]                           encoding(2 bytes) = 7c ce
006eh mov [rcx],r10                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R10]        encoding(3 bytes) = 4c 89 11
0071h mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0075h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0078h add rsp,38h                   ; ADD(Add_rm64_imm8) [RSP,38h:imm64]                   encoding(4 bytes) = 48 83 c4 38
007ch pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
007dh pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
007eh pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
007fh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0080h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0082h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
0084h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0085h mov ecx,29Dh                  ; MOV(Mov_r32_imm32) [ECX,29dh:imm32]                  encoding(5 bytes) = b9 9d 02 00 00
008ah mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0094h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F474C40h:jmp64]                encoding(5 bytes) = e8 a7 4b 47 5f
0099h mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
009ch mov ecx,0C3Fh                 ; MOV(Mov_r32_imm32) [ECX,c3fh:imm32]                  encoding(5 bytes) = b9 3f 0c 00 00
00a1h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00abh call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F474C40h:jmp64]                encoding(5 bytes) = e8 90 4b 47 5f
00b0h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00b3h lea r8,[rsp+30h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 30
00b8h mov [r8],bpl                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),BPL]            encoding(3 bytes) = 41 88 28
00bbh mov [r8+4],ebx                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBX]         encoding(4 bytes) = 41 89 58 04
00bfh mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00c2h mov ecx,r14d                  ; MOV(Mov_r32_rm32) [ECX,R14D]                         encoding(3 bytes) = 41 8b ce
00c5h mov edx,r15d                  ; MOV(Mov_r32_rm32) [EDX,R15D]                         encoding(3 bytes) = 41 8b d7
00c8h mov rax,[rsp+30h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 30
00cdh mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00d2h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFC9F298h:jmp64]        encoding(5 bytes) = e8 c1 f1 c9 ff
00d7h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00dah call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F457C70h:jmp64]                encoding(5 bytes) = e8 91 7b 45 5f
00dfh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00e0h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A60D0h:jmp64]                encoding(5 bytes) = e8 eb 5f 5a 5f
00e5h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> modBytes => new byte[230]{0x41,0x57,0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x38,0x4D,0x8B,0x11,0x45,0x8B,0x49,0x08,0x4D,0x8B,0x18,0x45,0x8B,0x40,0x08,0x48,0x8B,0x32,0x8B,0x7A,0x08,0xBB,0x72,0x00,0x00,0x00,0xBD,0x01,0x00,0x00,0x00,0x44,0x8B,0xF7,0x45,0x8B,0xF8,0x41,0x3B,0xF8,0x75,0x50,0x45,0x33,0xF6,0x85,0xFF,0x7E,0x32,0x45,0x3B,0xF1,0x0F,0x83,0x9B,0x00,0x00,0x00,0x49,0x63,0xC6,0x4D,0x8D,0x3C,0x02,0x0F,0xB6,0x14,0x06,0x45,0x3B,0xF0,0x0F,0x83,0x87,0x00,0x00,0x00,0x41,0x0F,0xB6,0x2C,0x03,0x8B,0xC2,0x99,0xF7,0xFD,0x41,0x88,0x17,0x41,0xFF,0xC6,0x44,0x3B,0xF7,0x7C,0xCE,0x4C,0x89,0x11,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x38,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0x9D,0x02,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xA7,0x4B,0x47,0x5F,0x48,0x8B,0xF0,0xB9,0x3F,0x0C,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x90,0x4B,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x30,0x41,0x88,0x28,0x41,0x89,0x58,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCE,0x41,0x8B,0xD7,0x48,0x8B,0x44,0x24,0x30,0x48,0x89,0x44,0x24,0x20,0xE8,0xC1,0xF1,0xC9,0xFF,0x48,0x8B,0xC8,0xE8,0x91,0x7B,0x45,0x5F,0xCC,0xE8,0xEB,0x5F,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: void mod(ReadOnlySpan<short> lhs, ReadOnlySpan<short> rhs, Span<short> dst)
; location: [7FFC872BEDF0h, 7FFC872BEEBAh]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
000dh mov r10d,[rdx+8]              ; MOV(Mov_r32_rm32) [R10D,mem(32u,RDX:br,DS:sr)]       encoding(4 bytes) = 44 8b 52 08
0011h mov r11,[rcx]                 ; MOV(Mov_r64_rm64) [R11,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 19
0014h mov ecx,[rcx+8]               ; MOV(Mov_r32_rm32) [ECX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 49 08
0017h mov esi,7Ah                   ; MOV(Mov_r32_imm32) [ESI,7ah:imm32]                   encoding(5 bytes) = be 7a 00 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,ecx                   ; MOV(Mov_r32_rm32) [EBX,ECX]                          encoding(2 bytes) = 8b d9
0023h mov ebp,r10d                  ; MOV(Mov_r32_rm32) [EBP,R10D]                         encoding(3 bytes) = 41 8b ea
0026h cmp ecx,r10d                  ; CMP(Cmp_r32_rm32) [ECX,R10D]                         encoding(3 bytes) = 41 3b ca
0029h jne short 006ch               ; JNE(Jne_rel8_64) [6Ch:jmp64]                         encoding(2 bytes) = 75 41
002bh xor ebx,ebx                   ; XOR(Xor_r32_rm32) [EBX,EBX]                          encoding(2 bytes) = 33 db
002dh test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
002fh jle short 0061h               ; JLE(Jle_rel8_64) [61h:jmp64]                         encoding(2 bytes) = 7e 30
0031h cmp ebx,[r8+8]                ; CMP(Cmp_r32_rm32) [EBX,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 41 3b 58 08
0035h jae near ptr 00c5h            ; JAE(Jae_rel32_64) [C5h:jmp64]                        encoding(6 bytes) = 0f 83 8a 00 00 00
003bh mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
003eh movsxd rdx,ebx                ; MOVSXD(Movsxd_r64_rm32) [RDX,EBX]                    encoding(3 bytes) = 48 63 d3
0041h lea rbp,[rax+rdx*2]           ; LEA(Lea_r64_m) [RBP,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 2c 50
0045h movsx rax,word ptr [r11+rdx*2]; MOVSX(Movsx_r64_rm16) [RAX,mem(16i,R11:br,DS:sr)]    encoding(5 bytes) = 49 0f bf 04 53
004ah cmp ebx,r10d                  ; CMP(Cmp_r32_rm32) [EBX,R10D]                         encoding(3 bytes) = 41 3b da
004dh jae short 00c5h               ; JAE(Jae_rel8_64) [C5h:jmp64]                         encoding(2 bytes) = 73 76
004fh movsx rdi,word ptr [r9+rdx*2] ; MOVSX(Movsx_r64_rm16) [RDI,mem(16i,R9:br,DS:sr)]     encoding(5 bytes) = 49 0f bf 3c 51
0054h cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
0055h idiv edi                      ; IDIV(Idiv_rm32) [EDI]                                encoding(2 bytes) = f7 ff
0057h mov [rbp],dx                  ; MOV(Mov_rm16_r16) [mem(16u,RBP:br,SS:sr),DX]         encoding(4 bytes) = 66 89 55 00
005bh inc ebx                       ; INC(Inc_rm32) [EBX]                                  encoding(2 bytes) = ff c3
005dh cmp ebx,ecx                   ; CMP(Cmp_r32_rm32) [EBX,ECX]                          encoding(2 bytes) = 3b d9
005fh jl short 0031h                ; JL(Jl_rel8_64) [31h:jmp64]                           encoding(2 bytes) = 7c d0
0061h add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0065h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0066h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0067h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0068h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0069h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
006bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
006ch mov ecx,29Dh                  ; MOV(Mov_r32_imm32) [ECX,29dh:imm32]                  encoding(5 bytes) = b9 9d 02 00 00
0071h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
007bh call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F474B30h:jmp64]                encoding(5 bytes) = e8 b0 4a 47 5f
0080h mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0083h mov ecx,0C3Fh                 ; MOV(Mov_r32_imm32) [ECX,c3fh:imm32]                  encoding(5 bytes) = b9 3f 0c 00 00
0088h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0092h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F474B30h:jmp64]                encoding(5 bytes) = e8 99 4a 47 5f
0097h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
009ah lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
009fh mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00a2h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00a6h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00a9h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00abh mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00adh mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00b2h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b7h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFC9F188h:jmp64]        encoding(5 bytes) = e8 cc f0 c9 ff
00bch mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00bfh call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F457B60h:jmp64]                encoding(5 bytes) = e8 9c 7a 45 5f
00c4h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00c5h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A5FC0h:jmp64]                encoding(5 bytes) = e8 f6 5e 5a 5f
00cah int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> modBytes => new byte[203]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x4C,0x8B,0x0A,0x44,0x8B,0x52,0x08,0x4C,0x8B,0x19,0x8B,0x49,0x08,0xBE,0x7A,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xD9,0x41,0x8B,0xEA,0x41,0x3B,0xCA,0x75,0x41,0x33,0xDB,0x85,0xC9,0x7E,0x30,0x41,0x3B,0x58,0x08,0x0F,0x83,0x8A,0x00,0x00,0x00,0x49,0x8B,0x00,0x48,0x63,0xD3,0x48,0x8D,0x2C,0x50,0x49,0x0F,0xBF,0x04,0x53,0x41,0x3B,0xDA,0x73,0x76,0x49,0x0F,0xBF,0x3C,0x51,0x99,0xF7,0xFF,0x66,0x89,0x55,0x00,0xFF,0xC3,0x3B,0xD9,0x7C,0xD0,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x9D,0x02,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xB0,0x4A,0x47,0x5F,0x4C,0x8B,0xF0,0xB9,0x3F,0x0C,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x99,0x4A,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0xCC,0xF0,0xC9,0xFF,0x48,0x8B,0xC8,0xE8,0x9C,0x7A,0x45,0x5F,0xCC,0xE8,0xF6,0x5E,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: void mod(ReadOnlySpan<ushort> lhs, ReadOnlySpan<ushort> rhs, Span<ushort> dst)
; location: [7FFC872BEEE0h, 7FFC872BEFAAh]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
000dh mov r10d,[rdx+8]              ; MOV(Mov_r32_rm32) [R10D,mem(32u,RDX:br,DS:sr)]       encoding(4 bytes) = 44 8b 52 08
0011h mov r11,[rcx]                 ; MOV(Mov_r64_rm64) [R11,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 19
0014h mov ecx,[rcx+8]               ; MOV(Mov_r32_rm32) [ECX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 49 08
0017h mov esi,81h                   ; MOV(Mov_r32_imm32) [ESI,81h:imm32]                   encoding(5 bytes) = be 81 00 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,ecx                   ; MOV(Mov_r32_rm32) [EBX,ECX]                          encoding(2 bytes) = 8b d9
0023h mov ebp,r10d                  ; MOV(Mov_r32_rm32) [EBP,R10D]                         encoding(3 bytes) = 41 8b ea
0026h cmp ecx,r10d                  ; CMP(Cmp_r32_rm32) [ECX,R10D]                         encoding(3 bytes) = 41 3b ca
0029h jne short 006ch               ; JNE(Jne_rel8_64) [6Ch:jmp64]                         encoding(2 bytes) = 75 41
002bh xor ebx,ebx                   ; XOR(Xor_r32_rm32) [EBX,EBX]                          encoding(2 bytes) = 33 db
002dh test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
002fh jle short 0061h               ; JLE(Jle_rel8_64) [61h:jmp64]                         encoding(2 bytes) = 7e 30
0031h cmp ebx,[r8+8]                ; CMP(Cmp_r32_rm32) [EBX,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 41 3b 58 08
0035h jae near ptr 00c5h            ; JAE(Jae_rel32_64) [C5h:jmp64]                        encoding(6 bytes) = 0f 83 8a 00 00 00
003bh mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
003eh movsxd rdx,ebx                ; MOVSXD(Movsxd_r64_rm32) [RDX,EBX]                    encoding(3 bytes) = 48 63 d3
0041h lea rbp,[rax+rdx*2]           ; LEA(Lea_r64_m) [RBP,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 2c 50
0045h movzx eax,word ptr [r11+rdx*2]; MOVZX(Movzx_r32_rm16) [EAX,mem(16u,R11:br,DS:sr)]    encoding(5 bytes) = 41 0f b7 04 53
004ah cmp ebx,r10d                  ; CMP(Cmp_r32_rm32) [EBX,R10D]                         encoding(3 bytes) = 41 3b da
004dh jae short 00c5h               ; JAE(Jae_rel8_64) [C5h:jmp64]                         encoding(2 bytes) = 73 76
004fh movzx edi,word ptr [r9+rdx*2] ; MOVZX(Movzx_r32_rm16) [EDI,mem(16u,R9:br,DS:sr)]     encoding(5 bytes) = 41 0f b7 3c 51
0054h cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
0055h idiv edi                      ; IDIV(Idiv_rm32) [EDI]                                encoding(2 bytes) = f7 ff
0057h mov [rbp],dx                  ; MOV(Mov_rm16_r16) [mem(16u,RBP:br,SS:sr),DX]         encoding(4 bytes) = 66 89 55 00
005bh inc ebx                       ; INC(Inc_rm32) [EBX]                                  encoding(2 bytes) = ff c3
005dh cmp ebx,ecx                   ; CMP(Cmp_r32_rm32) [EBX,ECX]                          encoding(2 bytes) = 3b d9
005fh jl short 0031h                ; JL(Jl_rel8_64) [31h:jmp64]                           encoding(2 bytes) = 7c d0
0061h add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0065h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0066h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0067h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0068h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0069h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
006bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
006ch mov ecx,29Dh                  ; MOV(Mov_r32_imm32) [ECX,29dh:imm32]                  encoding(5 bytes) = b9 9d 02 00 00
0071h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
007bh call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F474A40h:jmp64]                encoding(5 bytes) = e8 c0 49 47 5f
0080h mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0083h mov ecx,0C3Fh                 ; MOV(Mov_r32_imm32) [ECX,c3fh:imm32]                  encoding(5 bytes) = b9 3f 0c 00 00
0088h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0092h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F474A40h:jmp64]                encoding(5 bytes) = e8 a9 49 47 5f
0097h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
009ah lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
009fh mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00a2h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00a6h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00a9h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00abh mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00adh mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00b2h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b7h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFC9F098h:jmp64]        encoding(5 bytes) = e8 dc ef c9 ff
00bch mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00bfh call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F457A70h:jmp64]                encoding(5 bytes) = e8 ac 79 45 5f
00c4h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00c5h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A5ED0h:jmp64]                encoding(5 bytes) = e8 06 5e 5a 5f
00cah int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> modBytes => new byte[203]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x4C,0x8B,0x0A,0x44,0x8B,0x52,0x08,0x4C,0x8B,0x19,0x8B,0x49,0x08,0xBE,0x81,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xD9,0x41,0x8B,0xEA,0x41,0x3B,0xCA,0x75,0x41,0x33,0xDB,0x85,0xC9,0x7E,0x30,0x41,0x3B,0x58,0x08,0x0F,0x83,0x8A,0x00,0x00,0x00,0x49,0x8B,0x00,0x48,0x63,0xD3,0x48,0x8D,0x2C,0x50,0x41,0x0F,0xB7,0x04,0x53,0x41,0x3B,0xDA,0x73,0x76,0x41,0x0F,0xB7,0x3C,0x51,0x99,0xF7,0xFF,0x66,0x89,0x55,0x00,0xFF,0xC3,0x3B,0xD9,0x7C,0xD0,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x9D,0x02,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xC0,0x49,0x47,0x5F,0x4C,0x8B,0xF0,0xB9,0x3F,0x0C,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xA9,0x49,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0xDC,0xEF,0xC9,0xFF,0x48,0x8B,0xC8,0xE8,0xAC,0x79,0x45,0x5F,0xCC,0xE8,0x06,0x5E,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: void mod(ReadOnlySpan<int> lhs, ReadOnlySpan<int> rhs, Span<int> dst)
; location: [7FFC872BEFD0h, 7FFC872BF097h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
000dh mov r10d,[rdx+8]              ; MOV(Mov_r32_rm32) [R10D,mem(32u,RDX:br,DS:sr)]       encoding(4 bytes) = 44 8b 52 08
0011h mov r11,[rcx]                 ; MOV(Mov_r64_rm64) [R11,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 19
0014h mov ecx,[rcx+8]               ; MOV(Mov_r32_rm32) [ECX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 49 08
0017h mov esi,88h                   ; MOV(Mov_r32_imm32) [ESI,88h:imm32]                   encoding(5 bytes) = be 88 00 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,ecx                   ; MOV(Mov_r32_rm32) [EBX,ECX]                          encoding(2 bytes) = 8b d9
0023h mov ebp,r10d                  ; MOV(Mov_r32_rm32) [EBP,R10D]                         encoding(3 bytes) = 41 8b ea
0026h cmp ecx,r10d                  ; CMP(Cmp_r32_rm32) [ECX,R10D]                         encoding(3 bytes) = 41 3b ca
0029h jne short 0069h               ; JNE(Jne_rel8_64) [69h:jmp64]                         encoding(2 bytes) = 75 3e
002bh xor ebx,ebx                   ; XOR(Xor_r32_rm32) [EBX,EBX]                          encoding(2 bytes) = 33 db
002dh test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
002fh jle short 005eh               ; JLE(Jle_rel8_64) [5Eh:jmp64]                         encoding(2 bytes) = 7e 2d
0031h cmp ebx,[r8+8]                ; CMP(Cmp_r32_rm32) [EBX,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 41 3b 58 08
0035h jae near ptr 00c2h            ; JAE(Jae_rel32_64) [C2h:jmp64]                        encoding(6 bytes) = 0f 83 87 00 00 00
003bh mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
003eh movsxd rdx,ebx                ; MOVSXD(Movsxd_r64_rm32) [RDX,EBX]                    encoding(3 bytes) = 48 63 d3
0041h lea rbp,[rax+rdx*4]           ; LEA(Lea_r64_m) [RBP,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 2c 90
0045h mov eax,[r11+rdx*4]           ; MOV(Mov_r32_rm32) [EAX,mem(32u,R11:br,DS:sr)]        encoding(4 bytes) = 41 8b 04 93
0049h cmp ebx,r10d                  ; CMP(Cmp_r32_rm32) [EBX,R10D]                         encoding(3 bytes) = 41 3b da
004ch jae short 00c2h               ; JAE(Jae_rel8_64) [C2h:jmp64]                         encoding(2 bytes) = 73 74
004eh mov edi,[r9+rdx*4]            ; MOV(Mov_r32_rm32) [EDI,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 41 8b 3c 91
0052h cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
0053h idiv edi                      ; IDIV(Idiv_rm32) [EDI]                                encoding(2 bytes) = f7 ff
0055h mov [rbp],edx                 ; MOV(Mov_rm32_r32) [mem(32u,RBP:br,SS:sr),EDX]        encoding(3 bytes) = 89 55 00
0058h inc ebx                       ; INC(Inc_rm32) [EBX]                                  encoding(2 bytes) = ff c3
005ah cmp ebx,ecx                   ; CMP(Cmp_r32_rm32) [EBX,ECX]                          encoding(2 bytes) = 3b d9
005ch jl short 0031h                ; JL(Jl_rel8_64) [31h:jmp64]                           encoding(2 bytes) = 7c d3
005eh add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0062h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0063h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0064h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0065h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0066h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0068h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0069h mov ecx,29Dh                  ; MOV(Mov_r32_imm32) [ECX,29dh:imm32]                  encoding(5 bytes) = b9 9d 02 00 00
006eh mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0078h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F474950h:jmp64]                encoding(5 bytes) = e8 d3 48 47 5f
007dh mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0080h mov ecx,0C3Fh                 ; MOV(Mov_r32_imm32) [ECX,c3fh:imm32]                  encoding(5 bytes) = b9 3f 0c 00 00
0085h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
008fh call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F474950h:jmp64]                encoding(5 bytes) = e8 bc 48 47 5f
0094h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
0097h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
009ch mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
009fh mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00a3h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00a6h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00a8h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00aah mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00afh mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b4h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFC9EFA8h:jmp64]        encoding(5 bytes) = e8 ef ee c9 ff
00b9h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00bch call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F457980h:jmp64]                encoding(5 bytes) = e8 bf 78 45 5f
00c1h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00c2h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A5DE0h:jmp64]                encoding(5 bytes) = e8 19 5d 5a 5f
00c7h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> modBytes => new byte[200]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x4C,0x8B,0x0A,0x44,0x8B,0x52,0x08,0x4C,0x8B,0x19,0x8B,0x49,0x08,0xBE,0x88,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xD9,0x41,0x8B,0xEA,0x41,0x3B,0xCA,0x75,0x3E,0x33,0xDB,0x85,0xC9,0x7E,0x2D,0x41,0x3B,0x58,0x08,0x0F,0x83,0x87,0x00,0x00,0x00,0x49,0x8B,0x00,0x48,0x63,0xD3,0x48,0x8D,0x2C,0x90,0x41,0x8B,0x04,0x93,0x41,0x3B,0xDA,0x73,0x74,0x41,0x8B,0x3C,0x91,0x99,0xF7,0xFF,0x89,0x55,0x00,0xFF,0xC3,0x3B,0xD9,0x7C,0xD3,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x9D,0x02,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xD3,0x48,0x47,0x5F,0x4C,0x8B,0xF0,0xB9,0x3F,0x0C,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xBC,0x48,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0xEF,0xEE,0xC9,0xFF,0x48,0x8B,0xC8,0xE8,0xBF,0x78,0x45,0x5F,0xCC,0xE8,0x19,0x5D,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: void mod(ReadOnlySpan<uint> lhs, ReadOnlySpan<uint> rhs, Span<uint> dst)
; location: [7FFC872BF0C0h, 7FFC872BF188h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
000dh mov r10d,[rdx+8]              ; MOV(Mov_r32_rm32) [R10D,mem(32u,RDX:br,DS:sr)]       encoding(4 bytes) = 44 8b 52 08
0011h mov r11,[rcx]                 ; MOV(Mov_r64_rm64) [R11,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 19
0014h mov ecx,[rcx+8]               ; MOV(Mov_r32_rm32) [ECX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 49 08
0017h mov esi,8Fh                   ; MOV(Mov_r32_imm32) [ESI,8fh:imm32]                   encoding(5 bytes) = be 8f 00 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,ecx                   ; MOV(Mov_r32_rm32) [EBX,ECX]                          encoding(2 bytes) = 8b d9
0023h mov ebp,r10d                  ; MOV(Mov_r32_rm32) [EBP,R10D]                         encoding(3 bytes) = 41 8b ea
0026h cmp ecx,r10d                  ; CMP(Cmp_r32_rm32) [ECX,R10D]                         encoding(3 bytes) = 41 3b ca
0029h jne short 006ah               ; JNE(Jne_rel8_64) [6Ah:jmp64]                         encoding(2 bytes) = 75 3f
002bh xor ebx,ebx                   ; XOR(Xor_r32_rm32) [EBX,EBX]                          encoding(2 bytes) = 33 db
002dh test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
002fh jle short 005fh               ; JLE(Jle_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 7e 2e
0031h cmp ebx,[r8+8]                ; CMP(Cmp_r32_rm32) [EBX,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 41 3b 58 08
0035h jae near ptr 00c3h            ; JAE(Jae_rel32_64) [C3h:jmp64]                        encoding(6 bytes) = 0f 83 88 00 00 00
003bh mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
003eh movsxd rdx,ebx                ; MOVSXD(Movsxd_r64_rm32) [RDX,EBX]                    encoding(3 bytes) = 48 63 d3
0041h lea rbp,[rax+rdx*4]           ; LEA(Lea_r64_m) [RBP,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 2c 90
0045h mov eax,[r11+rdx*4]           ; MOV(Mov_r32_rm32) [EAX,mem(32u,R11:br,DS:sr)]        encoding(4 bytes) = 41 8b 04 93
0049h cmp ebx,r10d                  ; CMP(Cmp_r32_rm32) [EBX,R10D]                         encoding(3 bytes) = 41 3b da
004ch jae short 00c3h               ; JAE(Jae_rel8_64) [C3h:jmp64]                         encoding(2 bytes) = 73 75
004eh mov edi,[r9+rdx*4]            ; MOV(Mov_r32_rm32) [EDI,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 41 8b 3c 91
0052h xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
0054h div edi                       ; DIV(Div_rm32) [EDI]                                  encoding(2 bytes) = f7 f7
0056h mov [rbp],edx                 ; MOV(Mov_rm32_r32) [mem(32u,RBP:br,SS:sr),EDX]        encoding(3 bytes) = 89 55 00
0059h inc ebx                       ; INC(Inc_rm32) [EBX]                                  encoding(2 bytes) = ff c3
005bh cmp ebx,ecx                   ; CMP(Cmp_r32_rm32) [EBX,ECX]                          encoding(2 bytes) = 3b d9
005dh jl short 0031h                ; JL(Jl_rel8_64) [31h:jmp64]                           encoding(2 bytes) = 7c d2
005fh add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0063h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0064h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0065h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0066h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0067h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0069h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
006ah mov ecx,29Dh                  ; MOV(Mov_r32_imm32) [ECX,29dh:imm32]                  encoding(5 bytes) = b9 9d 02 00 00
006fh mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0079h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F474860h:jmp64]                encoding(5 bytes) = e8 e2 47 47 5f
007eh mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0081h mov ecx,0C3Fh                 ; MOV(Mov_r32_imm32) [ECX,c3fh:imm32]                  encoding(5 bytes) = b9 3f 0c 00 00
0086h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0090h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F474860h:jmp64]                encoding(5 bytes) = e8 cb 47 47 5f
0095h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
0098h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
009dh mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00a0h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00a4h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00a7h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00a9h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00abh mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00b0h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b5h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFC9EEB8h:jmp64]        encoding(5 bytes) = e8 fe ed c9 ff
00bah mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00bdh call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F457890h:jmp64]                encoding(5 bytes) = e8 ce 77 45 5f
00c2h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00c3h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A5CF0h:jmp64]                encoding(5 bytes) = e8 28 5c 5a 5f
00c8h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> modBytes => new byte[201]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x4C,0x8B,0x0A,0x44,0x8B,0x52,0x08,0x4C,0x8B,0x19,0x8B,0x49,0x08,0xBE,0x8F,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xD9,0x41,0x8B,0xEA,0x41,0x3B,0xCA,0x75,0x3F,0x33,0xDB,0x85,0xC9,0x7E,0x2E,0x41,0x3B,0x58,0x08,0x0F,0x83,0x88,0x00,0x00,0x00,0x49,0x8B,0x00,0x48,0x63,0xD3,0x48,0x8D,0x2C,0x90,0x41,0x8B,0x04,0x93,0x41,0x3B,0xDA,0x73,0x75,0x41,0x8B,0x3C,0x91,0x33,0xD2,0xF7,0xF7,0x89,0x55,0x00,0xFF,0xC3,0x3B,0xD9,0x7C,0xD2,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x9D,0x02,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xE2,0x47,0x47,0x5F,0x4C,0x8B,0xF0,0xB9,0x3F,0x0C,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xCB,0x47,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0xFE,0xED,0xC9,0xFF,0x48,0x8B,0xC8,0xE8,0xCE,0x77,0x45,0x5F,0xCC,0xE8,0x28,0x5C,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: void mod(ReadOnlySpan<long> lhs, ReadOnlySpan<long> rhs, Span<long> dst)
; location: [7FFC872BF1B0h, 7FFC872BF27Ah]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
000dh mov r10d,[rdx+8]              ; MOV(Mov_r32_rm32) [R10D,mem(32u,RDX:br,DS:sr)]       encoding(4 bytes) = 44 8b 52 08
0011h mov r11,[rcx]                 ; MOV(Mov_r64_rm64) [R11,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 19
0014h mov ecx,[rcx+8]               ; MOV(Mov_r32_rm32) [ECX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 49 08
0017h mov esi,96h                   ; MOV(Mov_r32_imm32) [ESI,96h:imm32]                   encoding(5 bytes) = be 96 00 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,ecx                   ; MOV(Mov_r32_rm32) [EBX,ECX]                          encoding(2 bytes) = 8b d9
0023h mov ebp,r10d                  ; MOV(Mov_r32_rm32) [EBP,R10D]                         encoding(3 bytes) = 41 8b ea
0026h cmp ecx,r10d                  ; CMP(Cmp_r32_rm32) [ECX,R10D]                         encoding(3 bytes) = 41 3b ca
0029h jne short 006ch               ; JNE(Jne_rel8_64) [6Ch:jmp64]                         encoding(2 bytes) = 75 41
002bh xor ebx,ebx                   ; XOR(Xor_r32_rm32) [EBX,EBX]                          encoding(2 bytes) = 33 db
002dh test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
002fh jle short 0061h               ; JLE(Jle_rel8_64) [61h:jmp64]                         encoding(2 bytes) = 7e 30
0031h cmp ebx,[r8+8]                ; CMP(Cmp_r32_rm32) [EBX,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 41 3b 58 08
0035h jae near ptr 00c5h            ; JAE(Jae_rel32_64) [C5h:jmp64]                        encoding(6 bytes) = 0f 83 8a 00 00 00
003bh mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
003eh movsxd rdx,ebx                ; MOVSXD(Movsxd_r64_rm32) [RDX,EBX]                    encoding(3 bytes) = 48 63 d3
0041h lea rbp,[rax+rdx*8]           ; LEA(Lea_r64_m) [RBP,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 2c d0
0045h mov rax,[r11+rdx*8]           ; MOV(Mov_r64_rm64) [RAX,mem(64u,R11:br,DS:sr)]        encoding(4 bytes) = 49 8b 04 d3
0049h cmp ebx,r10d                  ; CMP(Cmp_r32_rm32) [EBX,R10D]                         encoding(3 bytes) = 41 3b da
004ch jae short 00c5h               ; JAE(Jae_rel8_64) [C5h:jmp64]                         encoding(2 bytes) = 73 77
004eh mov rdi,[r9+rdx*8]            ; MOV(Mov_r64_rm64) [RDI,mem(64u,R9:br,DS:sr)]         encoding(4 bytes) = 49 8b 3c d1
0052h cqo                           ; CQO(Cqo)                                             encoding(2 bytes) = 48 99
0054h idiv rdi                      ; IDIV(Idiv_rm64) [RDI]                                encoding(3 bytes) = 48 f7 ff
0057h mov [rbp],rdx                 ; MOV(Mov_rm64_r64) [mem(64u,RBP:br,SS:sr),RDX]        encoding(4 bytes) = 48 89 55 00
005bh inc ebx                       ; INC(Inc_rm32) [EBX]                                  encoding(2 bytes) = ff c3
005dh cmp ebx,ecx                   ; CMP(Cmp_r32_rm32) [EBX,ECX]                          encoding(2 bytes) = 3b d9
005fh jl short 0031h                ; JL(Jl_rel8_64) [31h:jmp64]                           encoding(2 bytes) = 7c d0
0061h add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0065h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0066h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0067h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0068h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0069h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
006bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
006ch mov ecx,29Dh                  ; MOV(Mov_r32_imm32) [ECX,29dh:imm32]                  encoding(5 bytes) = b9 9d 02 00 00
0071h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
007bh call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F474770h:jmp64]                encoding(5 bytes) = e8 f0 46 47 5f
0080h mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0083h mov ecx,0C3Fh                 ; MOV(Mov_r32_imm32) [ECX,c3fh:imm32]                  encoding(5 bytes) = b9 3f 0c 00 00
0088h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0092h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F474770h:jmp64]                encoding(5 bytes) = e8 d9 46 47 5f
0097h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
009ah lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
009fh mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00a2h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00a6h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00a9h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00abh mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00adh mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00b2h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b7h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFC9EDC8h:jmp64]        encoding(5 bytes) = e8 0c ed c9 ff
00bch mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00bfh call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F4577A0h:jmp64]                encoding(5 bytes) = e8 dc 76 45 5f
00c4h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00c5h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A5C00h:jmp64]                encoding(5 bytes) = e8 36 5b 5a 5f
00cah int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> modBytes => new byte[203]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x4C,0x8B,0x0A,0x44,0x8B,0x52,0x08,0x4C,0x8B,0x19,0x8B,0x49,0x08,0xBE,0x96,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xD9,0x41,0x8B,0xEA,0x41,0x3B,0xCA,0x75,0x41,0x33,0xDB,0x85,0xC9,0x7E,0x30,0x41,0x3B,0x58,0x08,0x0F,0x83,0x8A,0x00,0x00,0x00,0x49,0x8B,0x00,0x48,0x63,0xD3,0x48,0x8D,0x2C,0xD0,0x49,0x8B,0x04,0xD3,0x41,0x3B,0xDA,0x73,0x77,0x49,0x8B,0x3C,0xD1,0x48,0x99,0x48,0xF7,0xFF,0x48,0x89,0x55,0x00,0xFF,0xC3,0x3B,0xD9,0x7C,0xD0,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x9D,0x02,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xF0,0x46,0x47,0x5F,0x4C,0x8B,0xF0,0xB9,0x3F,0x0C,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xD9,0x46,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x0C,0xED,0xC9,0xFF,0x48,0x8B,0xC8,0xE8,0xDC,0x76,0x45,0x5F,0xCC,0xE8,0x36,0x5B,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: void mod(ReadOnlySpan<ulong> lhs, ReadOnlySpan<ulong> rhs, Span<ulong> dst)
; location: [7FFC872BF2A0h, 7FFC872BF36Ah]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
000dh mov r10d,[rdx+8]              ; MOV(Mov_r32_rm32) [R10D,mem(32u,RDX:br,DS:sr)]       encoding(4 bytes) = 44 8b 52 08
0011h mov r11,[rcx]                 ; MOV(Mov_r64_rm64) [R11,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 19
0014h mov ecx,[rcx+8]               ; MOV(Mov_r32_rm32) [ECX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 49 08
0017h mov esi,9Dh                   ; MOV(Mov_r32_imm32) [ESI,9dh:imm32]                   encoding(5 bytes) = be 9d 00 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,ecx                   ; MOV(Mov_r32_rm32) [EBX,ECX]                          encoding(2 bytes) = 8b d9
0023h mov ebp,r10d                  ; MOV(Mov_r32_rm32) [EBP,R10D]                         encoding(3 bytes) = 41 8b ea
0026h cmp ecx,r10d                  ; CMP(Cmp_r32_rm32) [ECX,R10D]                         encoding(3 bytes) = 41 3b ca
0029h jne short 006ch               ; JNE(Jne_rel8_64) [6Ch:jmp64]                         encoding(2 bytes) = 75 41
002bh xor ebx,ebx                   ; XOR(Xor_r32_rm32) [EBX,EBX]                          encoding(2 bytes) = 33 db
002dh test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
002fh jle short 0061h               ; JLE(Jle_rel8_64) [61h:jmp64]                         encoding(2 bytes) = 7e 30
0031h cmp ebx,[r8+8]                ; CMP(Cmp_r32_rm32) [EBX,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 41 3b 58 08
0035h jae near ptr 00c5h            ; JAE(Jae_rel32_64) [C5h:jmp64]                        encoding(6 bytes) = 0f 83 8a 00 00 00
003bh mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
003eh movsxd rdx,ebx                ; MOVSXD(Movsxd_r64_rm32) [RDX,EBX]                    encoding(3 bytes) = 48 63 d3
0041h lea rbp,[rax+rdx*8]           ; LEA(Lea_r64_m) [RBP,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 2c d0
0045h mov rax,[r11+rdx*8]           ; MOV(Mov_r64_rm64) [RAX,mem(64u,R11:br,DS:sr)]        encoding(4 bytes) = 49 8b 04 d3
0049h cmp ebx,r10d                  ; CMP(Cmp_r32_rm32) [EBX,R10D]                         encoding(3 bytes) = 41 3b da
004ch jae short 00c5h               ; JAE(Jae_rel8_64) [C5h:jmp64]                         encoding(2 bytes) = 73 77
004eh mov rdi,[r9+rdx*8]            ; MOV(Mov_r64_rm64) [RDI,mem(64u,R9:br,DS:sr)]         encoding(4 bytes) = 49 8b 3c d1
0052h xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
0054h div rdi                       ; DIV(Div_rm64) [RDI]                                  encoding(3 bytes) = 48 f7 f7
0057h mov [rbp],rdx                 ; MOV(Mov_rm64_r64) [mem(64u,RBP:br,SS:sr),RDX]        encoding(4 bytes) = 48 89 55 00
005bh inc ebx                       ; INC(Inc_rm32) [EBX]                                  encoding(2 bytes) = ff c3
005dh cmp ebx,ecx                   ; CMP(Cmp_r32_rm32) [EBX,ECX]                          encoding(2 bytes) = 3b d9
005fh jl short 0031h                ; JL(Jl_rel8_64) [31h:jmp64]                           encoding(2 bytes) = 7c d0
0061h add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0065h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0066h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0067h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0068h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0069h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
006bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
006ch mov ecx,29Dh                  ; MOV(Mov_r32_imm32) [ECX,29dh:imm32]                  encoding(5 bytes) = b9 9d 02 00 00
0071h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
007bh call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F474680h:jmp64]                encoding(5 bytes) = e8 00 46 47 5f
0080h mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0083h mov ecx,0C3Fh                 ; MOV(Mov_r32_imm32) [ECX,c3fh:imm32]                  encoding(5 bytes) = b9 3f 0c 00 00
0088h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0092h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F474680h:jmp64]                encoding(5 bytes) = e8 e9 45 47 5f
0097h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
009ah lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
009fh mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00a2h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00a6h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00a9h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00abh mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00adh mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00b2h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b7h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFC9ECD8h:jmp64]        encoding(5 bytes) = e8 1c ec c9 ff
00bch mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00bfh call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F4576B0h:jmp64]                encoding(5 bytes) = e8 ec 75 45 5f
00c4h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00c5h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A5B10h:jmp64]                encoding(5 bytes) = e8 46 5a 5a 5f
00cah int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> modBytes => new byte[203]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x4C,0x8B,0x0A,0x44,0x8B,0x52,0x08,0x4C,0x8B,0x19,0x8B,0x49,0x08,0xBE,0x9D,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xD9,0x41,0x8B,0xEA,0x41,0x3B,0xCA,0x75,0x41,0x33,0xDB,0x85,0xC9,0x7E,0x30,0x41,0x3B,0x58,0x08,0x0F,0x83,0x8A,0x00,0x00,0x00,0x49,0x8B,0x00,0x48,0x63,0xD3,0x48,0x8D,0x2C,0xD0,0x49,0x8B,0x04,0xD3,0x41,0x3B,0xDA,0x73,0x77,0x49,0x8B,0x3C,0xD1,0x33,0xD2,0x48,0xF7,0xF7,0x48,0x89,0x55,0x00,0xFF,0xC3,0x3B,0xD9,0x7C,0xD0,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x9D,0x02,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x00,0x46,0x47,0x5F,0x4C,0x8B,0xF0,0xB9,0x3F,0x0C,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xE9,0x45,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x1C,0xEC,0xC9,0xFF,0x48,0x8B,0xC8,0xE8,0xEC,0x75,0x45,0x5F,0xCC,0xE8,0x46,0x5A,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<sbyte> mod(Span<sbyte> lhs, ReadOnlySpan<sbyte> rhs)
; location: [7FFC872BF390h, 7FFC872BF468h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,40h                   ; SUB(Sub_rm64_imm8) [RSP,40h:imm64]                   encoding(4 bytes) = 48 83 ec 40
000ah mov r9,[r8]                   ; MOV(Mov_r64_rm64) [R9,mem(64u,R8:br,DS:sr)]          encoding(3 bytes) = 4d 8b 08
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0014h mov r11d,[rdx+8]              ; MOV(Mov_r32_rm32) [R11D,mem(32u,RDX:br,DS:sr)]       encoding(4 bytes) = 44 8b 5a 08
0018h mov esi,0A4h                  ; MOV(Mov_r32_imm32) [ESI,a4h:imm32]                   encoding(5 bytes) = be a4 00 00 00
001dh mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0022h mov ebx,r11d                  ; MOV(Mov_r32_rm32) [EBX,R11D]                         encoding(3 bytes) = 41 8b db
0025h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0028h cmp r11d,r8d                  ; CMP(Cmp_r32_rm32) [R11D,R8D]                         encoding(3 bytes) = 45 3b d8
002bh jne short 007ah               ; JNE(Jne_rel8_64) [7Ah:jmp64]                         encoding(2 bytes) = 75 4d
002dh xor ebx,ebx                   ; XOR(Xor_r32_rm32) [EBX,EBX]                          encoding(2 bytes) = 33 db
002fh test r11d,r11d                ; TEST(Test_rm32_r32) [R11D,R11D]                      encoding(3 bytes) = 45 85 db
0032h jle short 0065h               ; JLE(Jle_rel8_64) [65h:jmp64]                         encoding(2 bytes) = 7e 31
0034h movsxd rax,ebx                ; MOVSXD(Movsxd_r64_rm32) [RAX,EBX]                    encoding(3 bytes) = 48 63 c3
0037h mov [rsp+30h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 30
003ch lea rbp,[r10+rax]             ; LEA(Lea_r64_m) [RBP,mem(Unknown,R10:br,DS:sr)]       encoding(4 bytes) = 49 8d 2c 02
0040h movsx rax,byte ptr [rbp]      ; MOVSX(Movsx_r64_rm8) [RAX,mem(8i,RBP:br,SS:sr)]      encoding(5 bytes) = 48 0f be 45 00
0045h cmp ebx,r8d                   ; CMP(Cmp_r32_rm32) [EBX,R8D]                          encoding(3 bytes) = 41 3b d8
0048h jae near ptr 00d3h            ; JAE(Jae_rel32_64) [D3h:jmp64]                        encoding(6 bytes) = 0f 83 85 00 00 00
004eh mov rdx,[rsp+30h]             ; MOV(Mov_r64_rm64) [RDX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 54 24 30
0053h movsx rdi,byte ptr [r9+rdx]   ; MOVSX(Movsx_r64_rm8) [RDI,mem(8i,R9:br,DS:sr)]       encoding(5 bytes) = 49 0f be 3c 11
0058h cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
0059h idiv edi                      ; IDIV(Idiv_rm32) [EDI]                                encoding(2 bytes) = f7 ff
005bh mov [rbp],dl                  ; MOV(Mov_rm8_r8) [mem(8u,RBP:br,SS:sr),DL]            encoding(3 bytes) = 88 55 00
005eh inc ebx                       ; INC(Inc_rm32) [EBX]                                  encoding(2 bytes) = ff c3
0060h cmp ebx,r11d                  ; CMP(Cmp_r32_rm32) [EBX,R11D]                         encoding(3 bytes) = 41 3b db
0063h jl short 0034h                ; JL(Jl_rel8_64) [34h:jmp64]                           encoding(2 bytes) = 7c cf
0065h mov [rcx],r10                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R10]        encoding(3 bytes) = 4c 89 11
0068h mov [rcx+8],r11d              ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R11D]       encoding(4 bytes) = 44 89 59 08
006ch mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
006fh add rsp,40h                   ; ADD(Add_rm64_imm8) [RSP,40h:imm64]                   encoding(4 bytes) = 48 83 c4 40
0073h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0074h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0075h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0076h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0077h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0079h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
007ah mov ecx,29Dh                  ; MOV(Mov_r32_imm32) [ECX,29dh:imm32]                  encoding(5 bytes) = b9 9d 02 00 00
007fh mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0089h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F474590h:jmp64]                encoding(5 bytes) = e8 02 45 47 5f
008eh mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0091h mov ecx,0C3Fh                 ; MOV(Mov_r32_imm32) [ECX,c3fh:imm32]                  encoding(5 bytes) = b9 3f 0c 00 00
0096h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00a0h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F474590h:jmp64]                encoding(5 bytes) = e8 eb 44 47 5f
00a5h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00a8h lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
00adh mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00b0h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00b4h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00b7h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00b9h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00bbh mov rax,[rsp+38h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 38
00c0h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00c5h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFC9EBE8h:jmp64]        encoding(5 bytes) = e8 1e eb c9 ff
00cah mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00cdh call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F4575C0h:jmp64]                encoding(5 bytes) = e8 ee 74 45 5f
00d2h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00d3h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A5A20h:jmp64]                encoding(5 bytes) = e8 48 59 5a 5f
00d8h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> modBytes => new byte[217]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x40,0x4D,0x8B,0x08,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x12,0x44,0x8B,0x5A,0x08,0xBE,0xA4,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x41,0x8B,0xDB,0x41,0x8B,0xE8,0x45,0x3B,0xD8,0x75,0x4D,0x33,0xDB,0x45,0x85,0xDB,0x7E,0x31,0x48,0x63,0xC3,0x48,0x89,0x44,0x24,0x30,0x49,0x8D,0x2C,0x02,0x48,0x0F,0xBE,0x45,0x00,0x41,0x3B,0xD8,0x0F,0x83,0x85,0x00,0x00,0x00,0x48,0x8B,0x54,0x24,0x30,0x49,0x0F,0xBE,0x3C,0x11,0x99,0xF7,0xFF,0x88,0x55,0x00,0xFF,0xC3,0x41,0x3B,0xDB,0x7C,0xCF,0x4C,0x89,0x11,0x44,0x89,0x59,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x40,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x9D,0x02,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x02,0x45,0x47,0x5F,0x4C,0x8B,0xF0,0xB9,0x3F,0x0C,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xEB,0x44,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x38,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x38,0x48,0x89,0x44,0x24,0x20,0xE8,0x1E,0xEB,0xC9,0xFF,0x48,0x8B,0xC8,0xE8,0xEE,0x74,0x45,0x5F,0xCC,0xE8,0x48,0x59,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<byte> mod(Span<byte> lhs, ReadOnlySpan<byte> rhs)
; location: [7FFC872BF490h, 7FFC872BF567h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,40h                   ; SUB(Sub_rm64_imm8) [RSP,40h:imm64]                   encoding(4 bytes) = 48 83 ec 40
000ah mov r9,[r8]                   ; MOV(Mov_r64_rm64) [R9,mem(64u,R8:br,DS:sr)]          encoding(3 bytes) = 4d 8b 08
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0014h mov r11d,[rdx+8]              ; MOV(Mov_r32_rm32) [R11D,mem(32u,RDX:br,DS:sr)]       encoding(4 bytes) = 44 8b 5a 08
0018h mov esi,0ACh                  ; MOV(Mov_r32_imm32) [ESI,ach:imm32]                   encoding(5 bytes) = be ac 00 00 00
001dh mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0022h mov ebx,r11d                  ; MOV(Mov_r32_rm32) [EBX,R11D]                         encoding(3 bytes) = 41 8b db
0025h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0028h cmp r11d,r8d                  ; CMP(Cmp_r32_rm32) [R11D,R8D]                         encoding(3 bytes) = 45 3b d8
002bh jne short 0079h               ; JNE(Jne_rel8_64) [79h:jmp64]                         encoding(2 bytes) = 75 4c
002dh xor ebx,ebx                   ; XOR(Xor_r32_rm32) [EBX,EBX]                          encoding(2 bytes) = 33 db
002fh test r11d,r11d                ; TEST(Test_rm32_r32) [R11D,R11D]                      encoding(3 bytes) = 45 85 db
0032h jle short 0064h               ; JLE(Jle_rel8_64) [64h:jmp64]                         encoding(2 bytes) = 7e 30
0034h movsxd rax,ebx                ; MOVSXD(Movsxd_r64_rm32) [RAX,EBX]                    encoding(3 bytes) = 48 63 c3
0037h mov [rsp+30h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 30
003ch lea rbp,[r10+rax]             ; LEA(Lea_r64_m) [RBP,mem(Unknown,R10:br,DS:sr)]       encoding(4 bytes) = 49 8d 2c 02
0040h movzx eax,byte ptr [rbp]      ; MOVZX(Movzx_r32_rm8) [EAX,mem(8u,RBP:br,SS:sr)]      encoding(4 bytes) = 0f b6 45 00
0044h cmp ebx,r8d                   ; CMP(Cmp_r32_rm32) [EBX,R8D]                          encoding(3 bytes) = 41 3b d8
0047h jae near ptr 00d2h            ; JAE(Jae_rel32_64) [D2h:jmp64]                        encoding(6 bytes) = 0f 83 85 00 00 00
004dh mov rdx,[rsp+30h]             ; MOV(Mov_r64_rm64) [RDX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 54 24 30
0052h movzx edi,byte ptr [r9+rdx]   ; MOVZX(Movzx_r32_rm8) [EDI,mem(8u,R9:br,DS:sr)]       encoding(5 bytes) = 41 0f b6 3c 11
0057h cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
0058h idiv edi                      ; IDIV(Idiv_rm32) [EDI]                                encoding(2 bytes) = f7 ff
005ah mov [rbp],dl                  ; MOV(Mov_rm8_r8) [mem(8u,RBP:br,SS:sr),DL]            encoding(3 bytes) = 88 55 00
005dh inc ebx                       ; INC(Inc_rm32) [EBX]                                  encoding(2 bytes) = ff c3
005fh cmp ebx,r11d                  ; CMP(Cmp_r32_rm32) [EBX,R11D]                         encoding(3 bytes) = 41 3b db
0062h jl short 0034h                ; JL(Jl_rel8_64) [34h:jmp64]                           encoding(2 bytes) = 7c d0
0064h mov [rcx],r10                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R10]        encoding(3 bytes) = 4c 89 11
0067h mov [rcx+8],r11d              ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R11D]       encoding(4 bytes) = 44 89 59 08
006bh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
006eh add rsp,40h                   ; ADD(Add_rm64_imm8) [RSP,40h:imm64]                   encoding(4 bytes) = 48 83 c4 40
0072h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0073h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0074h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0075h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0076h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0078h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0079h mov ecx,29Dh                  ; MOV(Mov_r32_imm32) [ECX,29dh:imm32]                  encoding(5 bytes) = b9 9d 02 00 00
007eh mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0088h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F474490h:jmp64]                encoding(5 bytes) = e8 03 44 47 5f
008dh mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0090h mov ecx,0C3Fh                 ; MOV(Mov_r32_imm32) [ECX,c3fh:imm32]                  encoding(5 bytes) = b9 3f 0c 00 00
0095h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
009fh call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F474490h:jmp64]                encoding(5 bytes) = e8 ec 43 47 5f
00a4h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00a7h lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
00ach mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00afh mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00b3h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00b6h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00b8h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00bah mov rax,[rsp+38h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 38
00bfh mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00c4h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFC9EAE8h:jmp64]        encoding(5 bytes) = e8 1f ea c9 ff
00c9h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00cch call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F4574C0h:jmp64]                encoding(5 bytes) = e8 ef 73 45 5f
00d1h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00d2h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A5920h:jmp64]                encoding(5 bytes) = e8 49 58 5a 5f
00d7h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> modBytes => new byte[216]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x40,0x4D,0x8B,0x08,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x12,0x44,0x8B,0x5A,0x08,0xBE,0xAC,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x41,0x8B,0xDB,0x41,0x8B,0xE8,0x45,0x3B,0xD8,0x75,0x4C,0x33,0xDB,0x45,0x85,0xDB,0x7E,0x30,0x48,0x63,0xC3,0x48,0x89,0x44,0x24,0x30,0x49,0x8D,0x2C,0x02,0x0F,0xB6,0x45,0x00,0x41,0x3B,0xD8,0x0F,0x83,0x85,0x00,0x00,0x00,0x48,0x8B,0x54,0x24,0x30,0x41,0x0F,0xB6,0x3C,0x11,0x99,0xF7,0xFF,0x88,0x55,0x00,0xFF,0xC3,0x41,0x3B,0xDB,0x7C,0xD0,0x4C,0x89,0x11,0x44,0x89,0x59,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x40,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x9D,0x02,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x03,0x44,0x47,0x5F,0x4C,0x8B,0xF0,0xB9,0x3F,0x0C,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xEC,0x43,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x38,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x38,0x48,0x89,0x44,0x24,0x20,0xE8,0x1F,0xEA,0xC9,0xFF,0x48,0x8B,0xC8,0xE8,0xEF,0x73,0x45,0x5F,0xCC,0xE8,0x49,0x58,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<short> mod(Span<short> lhs, ReadOnlySpan<short> rhs)
; location: [7FFC872BF590h, 7FFC872BF669h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,40h                   ; SUB(Sub_rm64_imm8) [RSP,40h:imm64]                   encoding(4 bytes) = 48 83 ec 40
000ah mov r9,[r8]                   ; MOV(Mov_r64_rm64) [R9,mem(64u,R8:br,DS:sr)]          encoding(3 bytes) = 4d 8b 08
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0014h mov r11d,[rdx+8]              ; MOV(Mov_r32_rm32) [R11D,mem(32u,RDX:br,DS:sr)]       encoding(4 bytes) = 44 8b 5a 08
0018h mov esi,0B4h                  ; MOV(Mov_r32_imm32) [ESI,b4h:imm32]                   encoding(5 bytes) = be b4 00 00 00
001dh mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0022h mov ebx,r11d                  ; MOV(Mov_r32_rm32) [EBX,R11D]                         encoding(3 bytes) = 41 8b db
0025h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0028h cmp r11d,r8d                  ; CMP(Cmp_r32_rm32) [R11D,R8D]                         encoding(3 bytes) = 45 3b d8
002bh jne short 007bh               ; JNE(Jne_rel8_64) [7Bh:jmp64]                         encoding(2 bytes) = 75 4e
002dh xor ebx,ebx                   ; XOR(Xor_r32_rm32) [EBX,EBX]                          encoding(2 bytes) = 33 db
002fh test r11d,r11d                ; TEST(Test_rm32_r32) [R11D,R11D]                      encoding(3 bytes) = 45 85 db
0032h jle short 0066h               ; JLE(Jle_rel8_64) [66h:jmp64]                         encoding(2 bytes) = 7e 32
0034h movsxd rax,ebx                ; MOVSXD(Movsxd_r64_rm32) [RAX,EBX]                    encoding(3 bytes) = 48 63 c3
0037h mov [rsp+30h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 30
003ch lea rbp,[r10+rax*2]           ; LEA(Lea_r64_m) [RBP,mem(Unknown,R10:br,DS:sr)]       encoding(4 bytes) = 49 8d 2c 42
0040h movsx rax,word ptr [rbp]      ; MOVSX(Movsx_r64_rm16) [RAX,mem(16i,RBP:br,SS:sr)]    encoding(5 bytes) = 48 0f bf 45 00
0045h cmp ebx,r8d                   ; CMP(Cmp_r32_rm32) [EBX,R8D]                          encoding(3 bytes) = 41 3b d8
0048h jae near ptr 00d4h            ; JAE(Jae_rel32_64) [D4h:jmp64]                        encoding(6 bytes) = 0f 83 86 00 00 00
004eh mov rdx,[rsp+30h]             ; MOV(Mov_r64_rm64) [RDX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 54 24 30
0053h movsx rdi,word ptr [r9+rdx*2] ; MOVSX(Movsx_r64_rm16) [RDI,mem(16i,R9:br,DS:sr)]     encoding(5 bytes) = 49 0f bf 3c 51
0058h cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
0059h idiv edi                      ; IDIV(Idiv_rm32) [EDI]                                encoding(2 bytes) = f7 ff
005bh mov [rbp],dx                  ; MOV(Mov_rm16_r16) [mem(16u,RBP:br,SS:sr),DX]         encoding(4 bytes) = 66 89 55 00
005fh inc ebx                       ; INC(Inc_rm32) [EBX]                                  encoding(2 bytes) = ff c3
0061h cmp ebx,r11d                  ; CMP(Cmp_r32_rm32) [EBX,R11D]                         encoding(3 bytes) = 41 3b db
0064h jl short 0034h                ; JL(Jl_rel8_64) [34h:jmp64]                           encoding(2 bytes) = 7c ce
0066h mov [rcx],r10                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R10]        encoding(3 bytes) = 4c 89 11
0069h mov [rcx+8],r11d              ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R11D]       encoding(4 bytes) = 44 89 59 08
006dh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0070h add rsp,40h                   ; ADD(Add_rm64_imm8) [RSP,40h:imm64]                   encoding(4 bytes) = 48 83 c4 40
0074h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0075h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0076h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0077h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0078h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
007ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
007bh mov ecx,29Dh                  ; MOV(Mov_r32_imm32) [ECX,29dh:imm32]                  encoding(5 bytes) = b9 9d 02 00 00
0080h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
008ah call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F474390h:jmp64]                encoding(5 bytes) = e8 01 43 47 5f
008fh mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0092h mov ecx,0C3Fh                 ; MOV(Mov_r32_imm32) [ECX,c3fh:imm32]                  encoding(5 bytes) = b9 3f 0c 00 00
0097h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00a1h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F474390h:jmp64]                encoding(5 bytes) = e8 ea 42 47 5f
00a6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00a9h lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
00aeh mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00b1h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00b5h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00b8h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00bah mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00bch mov rax,[rsp+38h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 38
00c1h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00c6h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFC9E9E8h:jmp64]        encoding(5 bytes) = e8 1d e9 c9 ff
00cbh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00ceh call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F4573C0h:jmp64]                encoding(5 bytes) = e8 ed 72 45 5f
00d3h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00d4h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A5820h:jmp64]                encoding(5 bytes) = e8 47 57 5a 5f
00d9h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> modBytes => new byte[218]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x40,0x4D,0x8B,0x08,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x12,0x44,0x8B,0x5A,0x08,0xBE,0xB4,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x41,0x8B,0xDB,0x41,0x8B,0xE8,0x45,0x3B,0xD8,0x75,0x4E,0x33,0xDB,0x45,0x85,0xDB,0x7E,0x32,0x48,0x63,0xC3,0x48,0x89,0x44,0x24,0x30,0x49,0x8D,0x2C,0x42,0x48,0x0F,0xBF,0x45,0x00,0x41,0x3B,0xD8,0x0F,0x83,0x86,0x00,0x00,0x00,0x48,0x8B,0x54,0x24,0x30,0x49,0x0F,0xBF,0x3C,0x51,0x99,0xF7,0xFF,0x66,0x89,0x55,0x00,0xFF,0xC3,0x41,0x3B,0xDB,0x7C,0xCE,0x4C,0x89,0x11,0x44,0x89,0x59,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x40,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x9D,0x02,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x01,0x43,0x47,0x5F,0x4C,0x8B,0xF0,0xB9,0x3F,0x0C,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xEA,0x42,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x38,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x38,0x48,0x89,0x44,0x24,0x20,0xE8,0x1D,0xE9,0xC9,0xFF,0x48,0x8B,0xC8,0xE8,0xED,0x72,0x45,0x5F,0xCC,0xE8,0x47,0x57,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<ushort> mod(Span<ushort> lhs, ReadOnlySpan<ushort> rhs)
; location: [7FFC872BF690h, 7FFC872BF768h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,40h                   ; SUB(Sub_rm64_imm8) [RSP,40h:imm64]                   encoding(4 bytes) = 48 83 ec 40
000ah mov r9,[r8]                   ; MOV(Mov_r64_rm64) [R9,mem(64u,R8:br,DS:sr)]          encoding(3 bytes) = 4d 8b 08
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0014h mov r11d,[rdx+8]              ; MOV(Mov_r32_rm32) [R11D,mem(32u,RDX:br,DS:sr)]       encoding(4 bytes) = 44 8b 5a 08
0018h mov esi,0BCh                  ; MOV(Mov_r32_imm32) [ESI,bch:imm32]                   encoding(5 bytes) = be bc 00 00 00
001dh mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0022h mov ebx,r11d                  ; MOV(Mov_r32_rm32) [EBX,R11D]                         encoding(3 bytes) = 41 8b db
0025h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0028h cmp r11d,r8d                  ; CMP(Cmp_r32_rm32) [R11D,R8D]                         encoding(3 bytes) = 45 3b d8
002bh jne short 007ah               ; JNE(Jne_rel8_64) [7Ah:jmp64]                         encoding(2 bytes) = 75 4d
002dh xor ebx,ebx                   ; XOR(Xor_r32_rm32) [EBX,EBX]                          encoding(2 bytes) = 33 db
002fh test r11d,r11d                ; TEST(Test_rm32_r32) [R11D,R11D]                      encoding(3 bytes) = 45 85 db
0032h jle short 0065h               ; JLE(Jle_rel8_64) [65h:jmp64]                         encoding(2 bytes) = 7e 31
0034h movsxd rax,ebx                ; MOVSXD(Movsxd_r64_rm32) [RAX,EBX]                    encoding(3 bytes) = 48 63 c3
0037h mov [rsp+30h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 30
003ch lea rbp,[r10+rax*2]           ; LEA(Lea_r64_m) [RBP,mem(Unknown,R10:br,DS:sr)]       encoding(4 bytes) = 49 8d 2c 42
0040h movzx eax,word ptr [rbp]      ; MOVZX(Movzx_r32_rm16) [EAX,mem(16u,RBP:br,SS:sr)]    encoding(4 bytes) = 0f b7 45 00
0044h cmp ebx,r8d                   ; CMP(Cmp_r32_rm32) [EBX,R8D]                          encoding(3 bytes) = 41 3b d8
0047h jae near ptr 00d3h            ; JAE(Jae_rel32_64) [D3h:jmp64]                        encoding(6 bytes) = 0f 83 86 00 00 00
004dh mov rdx,[rsp+30h]             ; MOV(Mov_r64_rm64) [RDX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 54 24 30
0052h movzx edi,word ptr [r9+rdx*2] ; MOVZX(Movzx_r32_rm16) [EDI,mem(16u,R9:br,DS:sr)]     encoding(5 bytes) = 41 0f b7 3c 51
0057h cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
0058h idiv edi                      ; IDIV(Idiv_rm32) [EDI]                                encoding(2 bytes) = f7 ff
005ah mov [rbp],dx                  ; MOV(Mov_rm16_r16) [mem(16u,RBP:br,SS:sr),DX]         encoding(4 bytes) = 66 89 55 00
005eh inc ebx                       ; INC(Inc_rm32) [EBX]                                  encoding(2 bytes) = ff c3
0060h cmp ebx,r11d                  ; CMP(Cmp_r32_rm32) [EBX,R11D]                         encoding(3 bytes) = 41 3b db
0063h jl short 0034h                ; JL(Jl_rel8_64) [34h:jmp64]                           encoding(2 bytes) = 7c cf
0065h mov [rcx],r10                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R10]        encoding(3 bytes) = 4c 89 11
0068h mov [rcx+8],r11d              ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R11D]       encoding(4 bytes) = 44 89 59 08
006ch mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
006fh add rsp,40h                   ; ADD(Add_rm64_imm8) [RSP,40h:imm64]                   encoding(4 bytes) = 48 83 c4 40
0073h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0074h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0075h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0076h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0077h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0079h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
007ah mov ecx,29Dh                  ; MOV(Mov_r32_imm32) [ECX,29dh:imm32]                  encoding(5 bytes) = b9 9d 02 00 00
007fh mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0089h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F474290h:jmp64]                encoding(5 bytes) = e8 02 42 47 5f
008eh mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0091h mov ecx,0C3Fh                 ; MOV(Mov_r32_imm32) [ECX,c3fh:imm32]                  encoding(5 bytes) = b9 3f 0c 00 00
0096h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00a0h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F474290h:jmp64]                encoding(5 bytes) = e8 eb 41 47 5f
00a5h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00a8h lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
00adh mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00b0h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00b4h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00b7h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00b9h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00bbh mov rax,[rsp+38h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 38
00c0h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00c5h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFC9E8E8h:jmp64]        encoding(5 bytes) = e8 1e e8 c9 ff
00cah mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00cdh call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F4572C0h:jmp64]                encoding(5 bytes) = e8 ee 71 45 5f
00d2h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00d3h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A5720h:jmp64]                encoding(5 bytes) = e8 48 56 5a 5f
00d8h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> modBytes => new byte[217]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x40,0x4D,0x8B,0x08,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x12,0x44,0x8B,0x5A,0x08,0xBE,0xBC,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x41,0x8B,0xDB,0x41,0x8B,0xE8,0x45,0x3B,0xD8,0x75,0x4D,0x33,0xDB,0x45,0x85,0xDB,0x7E,0x31,0x48,0x63,0xC3,0x48,0x89,0x44,0x24,0x30,0x49,0x8D,0x2C,0x42,0x0F,0xB7,0x45,0x00,0x41,0x3B,0xD8,0x0F,0x83,0x86,0x00,0x00,0x00,0x48,0x8B,0x54,0x24,0x30,0x41,0x0F,0xB7,0x3C,0x51,0x99,0xF7,0xFF,0x66,0x89,0x55,0x00,0xFF,0xC3,0x41,0x3B,0xDB,0x7C,0xCF,0x4C,0x89,0x11,0x44,0x89,0x59,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x40,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x9D,0x02,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x02,0x42,0x47,0x5F,0x4C,0x8B,0xF0,0xB9,0x3F,0x0C,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xEB,0x41,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x38,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x38,0x48,0x89,0x44,0x24,0x20,0xE8,0x1E,0xE8,0xC9,0xFF,0x48,0x8B,0xC8,0xE8,0xEE,0x71,0x45,0x5F,0xCC,0xE8,0x48,0x56,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<int> mod(Span<int> lhs, ReadOnlySpan<int> rhs)
; location: [7FFC872BF790h, 7FFC872BF857h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov r9,[r8]                   ; MOV(Mov_r64_rm64) [R9,mem(64u,R8:br,DS:sr)]          encoding(3 bytes) = 4d 8b 08
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0014h mov r11d,[rdx+8]              ; MOV(Mov_r32_rm32) [R11D,mem(32u,RDX:br,DS:sr)]       encoding(4 bytes) = 44 8b 5a 08
0018h mov esi,0C4h                  ; MOV(Mov_r32_imm32) [ESI,c4h:imm32]                   encoding(5 bytes) = be c4 00 00 00
001dh mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0022h mov ebx,r11d                  ; MOV(Mov_r32_rm32) [EBX,R11D]                         encoding(3 bytes) = 41 8b db
0025h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0028h cmp r11d,r8d                  ; CMP(Cmp_r32_rm32) [R11D,R8D]                         encoding(3 bytes) = 45 3b d8
002bh jne short 0069h               ; JNE(Jne_rel8_64) [69h:jmp64]                         encoding(2 bytes) = 75 3c
002dh xor ebx,ebx                   ; XOR(Xor_r32_rm32) [EBX,EBX]                          encoding(2 bytes) = 33 db
002fh test r11d,r11d                ; TEST(Test_rm32_r32) [R11D,R11D]                      encoding(3 bytes) = 45 85 db
0032h jle short 0054h               ; JLE(Jle_rel8_64) [54h:jmp64]                         encoding(2 bytes) = 7e 20
0034h movsxd rbp,ebx                ; MOVSXD(Movsxd_r64_rm32) [RBP,EBX]                    encoding(3 bytes) = 48 63 eb
0037h lea rdi,[r10+rbp*4]           ; LEA(Lea_r64_m) [RDI,mem(Unknown,R10:br,DS:sr)]       encoding(4 bytes) = 49 8d 3c aa
003bh mov eax,[rdi]                 ; MOV(Mov_r32_rm32) [EAX,mem(32u,RDI:br,DS:sr)]        encoding(2 bytes) = 8b 07
003dh cmp ebx,r8d                   ; CMP(Cmp_r32_rm32) [EBX,R8D]                          encoding(3 bytes) = 41 3b d8
0040h jae near ptr 00c2h            ; JAE(Jae_rel32_64) [C2h:jmp64]                        encoding(6 bytes) = 0f 83 7c 00 00 00
0046h cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
0047h idiv dword ptr [r9+rbp*4]     ; IDIV(Idiv_rm32) [mem(32i,R9:br,DS:sr)]               encoding(4 bytes) = 41 f7 3c a9
004bh mov [rdi],edx                 ; MOV(Mov_rm32_r32) [mem(32u,RDI:br,DS:sr),EDX]        encoding(2 bytes) = 89 17
004dh inc ebx                       ; INC(Inc_rm32) [EBX]                                  encoding(2 bytes) = ff c3
004fh cmp ebx,r11d                  ; CMP(Cmp_r32_rm32) [EBX,R11D]                         encoding(3 bytes) = 41 3b db
0052h jl short 0034h                ; JL(Jl_rel8_64) [34h:jmp64]                           encoding(2 bytes) = 7c e0
0054h mov [rcx],r10                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R10]        encoding(3 bytes) = 4c 89 11
0057h mov [rcx+8],r11d              ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R11D]       encoding(4 bytes) = 44 89 59 08
005bh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
005eh add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0062h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0063h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0064h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0065h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0066h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0068h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0069h mov ecx,29Dh                  ; MOV(Mov_r32_imm32) [ECX,29dh:imm32]                  encoding(5 bytes) = b9 9d 02 00 00
006eh mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0078h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F474190h:jmp64]                encoding(5 bytes) = e8 13 41 47 5f
007dh mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0080h mov ecx,0C3Fh                 ; MOV(Mov_r32_imm32) [ECX,c3fh:imm32]                  encoding(5 bytes) = b9 3f 0c 00 00
0085h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
008fh call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F474190h:jmp64]                encoding(5 bytes) = e8 fc 40 47 5f
0094h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
0097h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
009ch mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
009fh mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00a3h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00a6h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00a8h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00aah mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00afh mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b4h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFC9E7E8h:jmp64]        encoding(5 bytes) = e8 2f e7 c9 ff
00b9h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00bch call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F4571C0h:jmp64]                encoding(5 bytes) = e8 ff 70 45 5f
00c1h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00c2h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A5620h:jmp64]                encoding(5 bytes) = e8 59 55 5a 5f
00c7h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> modBytes => new byte[200]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x4D,0x8B,0x08,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x12,0x44,0x8B,0x5A,0x08,0xBE,0xC4,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x41,0x8B,0xDB,0x41,0x8B,0xE8,0x45,0x3B,0xD8,0x75,0x3C,0x33,0xDB,0x45,0x85,0xDB,0x7E,0x20,0x48,0x63,0xEB,0x49,0x8D,0x3C,0xAA,0x8B,0x07,0x41,0x3B,0xD8,0x0F,0x83,0x7C,0x00,0x00,0x00,0x99,0x41,0xF7,0x3C,0xA9,0x89,0x17,0xFF,0xC3,0x41,0x3B,0xDB,0x7C,0xE0,0x4C,0x89,0x11,0x44,0x89,0x59,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x9D,0x02,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x13,0x41,0x47,0x5F,0x4C,0x8B,0xF0,0xB9,0x3F,0x0C,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xFC,0x40,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x2F,0xE7,0xC9,0xFF,0x48,0x8B,0xC8,0xE8,0xFF,0x70,0x45,0x5F,0xCC,0xE8,0x59,0x55,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<uint> mod(Span<uint> lhs, ReadOnlySpan<uint> rhs)
; location: [7FFC872BF880h, 7FFC872BF948h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov r9,[r8]                   ; MOV(Mov_r64_rm64) [R9,mem(64u,R8:br,DS:sr)]          encoding(3 bytes) = 4d 8b 08
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0014h mov r11d,[rdx+8]              ; MOV(Mov_r32_rm32) [R11D,mem(32u,RDX:br,DS:sr)]       encoding(4 bytes) = 44 8b 5a 08
0018h mov esi,0CCh                  ; MOV(Mov_r32_imm32) [ESI,cch:imm32]                   encoding(5 bytes) = be cc 00 00 00
001dh mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0022h mov ebx,r11d                  ; MOV(Mov_r32_rm32) [EBX,R11D]                         encoding(3 bytes) = 41 8b db
0025h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0028h cmp r11d,r8d                  ; CMP(Cmp_r32_rm32) [R11D,R8D]                         encoding(3 bytes) = 45 3b d8
002bh jne short 006ah               ; JNE(Jne_rel8_64) [6Ah:jmp64]                         encoding(2 bytes) = 75 3d
002dh xor ebx,ebx                   ; XOR(Xor_r32_rm32) [EBX,EBX]                          encoding(2 bytes) = 33 db
002fh test r11d,r11d                ; TEST(Test_rm32_r32) [R11D,R11D]                      encoding(3 bytes) = 45 85 db
0032h jle short 0055h               ; JLE(Jle_rel8_64) [55h:jmp64]                         encoding(2 bytes) = 7e 21
0034h movsxd rbp,ebx                ; MOVSXD(Movsxd_r64_rm32) [RBP,EBX]                    encoding(3 bytes) = 48 63 eb
0037h lea rdi,[r10+rbp*4]           ; LEA(Lea_r64_m) [RDI,mem(Unknown,R10:br,DS:sr)]       encoding(4 bytes) = 49 8d 3c aa
003bh mov eax,[rdi]                 ; MOV(Mov_r32_rm32) [EAX,mem(32u,RDI:br,DS:sr)]        encoding(2 bytes) = 8b 07
003dh cmp ebx,r8d                   ; CMP(Cmp_r32_rm32) [EBX,R8D]                          encoding(3 bytes) = 41 3b d8
0040h jae near ptr 00c3h            ; JAE(Jae_rel32_64) [C3h:jmp64]                        encoding(6 bytes) = 0f 83 7d 00 00 00
0046h xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
0048h div dword ptr [r9+rbp*4]      ; DIV(Div_rm32) [mem(32u,R9:br,DS:sr)]                 encoding(4 bytes) = 41 f7 34 a9
004ch mov [rdi],edx                 ; MOV(Mov_rm32_r32) [mem(32u,RDI:br,DS:sr),EDX]        encoding(2 bytes) = 89 17
004eh inc ebx                       ; INC(Inc_rm32) [EBX]                                  encoding(2 bytes) = ff c3
0050h cmp ebx,r11d                  ; CMP(Cmp_r32_rm32) [EBX,R11D]                         encoding(3 bytes) = 41 3b db
0053h jl short 0034h                ; JL(Jl_rel8_64) [34h:jmp64]                           encoding(2 bytes) = 7c df
0055h mov [rcx],r10                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R10]        encoding(3 bytes) = 4c 89 11
0058h mov [rcx+8],r11d              ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R11D]       encoding(4 bytes) = 44 89 59 08
005ch mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
005fh add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0063h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0064h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0065h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0066h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0067h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0069h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
006ah mov ecx,29Dh                  ; MOV(Mov_r32_imm32) [ECX,29dh:imm32]                  encoding(5 bytes) = b9 9d 02 00 00
006fh mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0079h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F4740A0h:jmp64]                encoding(5 bytes) = e8 22 40 47 5f
007eh mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0081h mov ecx,0C3Fh                 ; MOV(Mov_r32_imm32) [ECX,c3fh:imm32]                  encoding(5 bytes) = b9 3f 0c 00 00
0086h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0090h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F4740A0h:jmp64]                encoding(5 bytes) = e8 0b 40 47 5f
0095h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
0098h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
009dh mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00a0h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00a4h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00a7h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00a9h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00abh mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00b0h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b5h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFC9E6F8h:jmp64]        encoding(5 bytes) = e8 3e e6 c9 ff
00bah mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00bdh call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F4570D0h:jmp64]                encoding(5 bytes) = e8 0e 70 45 5f
00c2h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00c3h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A5530h:jmp64]                encoding(5 bytes) = e8 68 54 5a 5f
00c8h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> modBytes => new byte[201]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x4D,0x8B,0x08,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x12,0x44,0x8B,0x5A,0x08,0xBE,0xCC,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x41,0x8B,0xDB,0x41,0x8B,0xE8,0x45,0x3B,0xD8,0x75,0x3D,0x33,0xDB,0x45,0x85,0xDB,0x7E,0x21,0x48,0x63,0xEB,0x49,0x8D,0x3C,0xAA,0x8B,0x07,0x41,0x3B,0xD8,0x0F,0x83,0x7D,0x00,0x00,0x00,0x33,0xD2,0x41,0xF7,0x34,0xA9,0x89,0x17,0xFF,0xC3,0x41,0x3B,0xDB,0x7C,0xDF,0x4C,0x89,0x11,0x44,0x89,0x59,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x9D,0x02,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x22,0x40,0x47,0x5F,0x4C,0x8B,0xF0,0xB9,0x3F,0x0C,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x0B,0x40,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x3E,0xE6,0xC9,0xFF,0x48,0x8B,0xC8,0xE8,0x0E,0x70,0x45,0x5F,0xCC,0xE8,0x68,0x54,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<long> mod(Span<long> lhs, ReadOnlySpan<long> rhs)
; location: [7FFC872BF970h, 7FFC872BFA3Ah]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov r9,[r8]                   ; MOV(Mov_r64_rm64) [R9,mem(64u,R8:br,DS:sr)]          encoding(3 bytes) = 4d 8b 08
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0014h mov r11d,[rdx+8]              ; MOV(Mov_r32_rm32) [R11D,mem(32u,RDX:br,DS:sr)]       encoding(4 bytes) = 44 8b 5a 08
0018h mov esi,0D4h                  ; MOV(Mov_r32_imm32) [ESI,d4h:imm32]                   encoding(5 bytes) = be d4 00 00 00
001dh mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0022h mov ebx,r11d                  ; MOV(Mov_r32_rm32) [EBX,R11D]                         encoding(3 bytes) = 41 8b db
0025h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0028h cmp r11d,r8d                  ; CMP(Cmp_r32_rm32) [R11D,R8D]                         encoding(3 bytes) = 45 3b d8
002bh jne short 006ch               ; JNE(Jne_rel8_64) [6Ch:jmp64]                         encoding(2 bytes) = 75 3f
002dh xor ebx,ebx                   ; XOR(Xor_r32_rm32) [EBX,EBX]                          encoding(2 bytes) = 33 db
002fh test r11d,r11d                ; TEST(Test_rm32_r32) [R11D,R11D]                      encoding(3 bytes) = 45 85 db
0032h jle short 0057h               ; JLE(Jle_rel8_64) [57h:jmp64]                         encoding(2 bytes) = 7e 23
0034h movsxd rbp,ebx                ; MOVSXD(Movsxd_r64_rm32) [RBP,EBX]                    encoding(3 bytes) = 48 63 eb
0037h lea rdi,[r10+rbp*8]           ; LEA(Lea_r64_m) [RDI,mem(Unknown,R10:br,DS:sr)]       encoding(4 bytes) = 49 8d 3c ea
003bh mov rax,[rdi]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RDI:br,DS:sr)]        encoding(3 bytes) = 48 8b 07
003eh cmp ebx,r8d                   ; CMP(Cmp_r32_rm32) [EBX,R8D]                          encoding(3 bytes) = 41 3b d8
0041h jae near ptr 00c5h            ; JAE(Jae_rel32_64) [C5h:jmp64]                        encoding(6 bytes) = 0f 83 7e 00 00 00
0047h cqo                           ; CQO(Cqo)                                             encoding(2 bytes) = 48 99
0049h idiv qword ptr [r9+rbp*8]     ; IDIV(Idiv_rm64) [mem(64i,R9:br,DS:sr)]               encoding(4 bytes) = 49 f7 3c e9
004dh mov [rdi],rdx                 ; MOV(Mov_rm64_r64) [mem(64u,RDI:br,DS:sr),RDX]        encoding(3 bytes) = 48 89 17
0050h inc ebx                       ; INC(Inc_rm32) [EBX]                                  encoding(2 bytes) = ff c3
0052h cmp ebx,r11d                  ; CMP(Cmp_r32_rm32) [EBX,R11D]                         encoding(3 bytes) = 41 3b db
0055h jl short 0034h                ; JL(Jl_rel8_64) [34h:jmp64]                           encoding(2 bytes) = 7c dd
0057h mov [rcx],r10                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R10]        encoding(3 bytes) = 4c 89 11
005ah mov [rcx+8],r11d              ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R11D]       encoding(4 bytes) = 44 89 59 08
005eh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0061h add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0065h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0066h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0067h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0068h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0069h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
006bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
006ch mov ecx,29Dh                  ; MOV(Mov_r32_imm32) [ECX,29dh:imm32]                  encoding(5 bytes) = b9 9d 02 00 00
0071h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
007bh call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F473FB0h:jmp64]                encoding(5 bytes) = e8 30 3f 47 5f
0080h mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0083h mov ecx,0C3Fh                 ; MOV(Mov_r32_imm32) [ECX,c3fh:imm32]                  encoding(5 bytes) = b9 3f 0c 00 00
0088h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0092h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F473FB0h:jmp64]                encoding(5 bytes) = e8 19 3f 47 5f
0097h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
009ah lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
009fh mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00a2h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00a6h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00a9h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00abh mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00adh mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00b2h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b7h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFC9E608h:jmp64]        encoding(5 bytes) = e8 4c e5 c9 ff
00bch mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00bfh call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F456FE0h:jmp64]                encoding(5 bytes) = e8 1c 6f 45 5f
00c4h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00c5h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A5440h:jmp64]                encoding(5 bytes) = e8 76 53 5a 5f
00cah int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> modBytes => new byte[203]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x4D,0x8B,0x08,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x12,0x44,0x8B,0x5A,0x08,0xBE,0xD4,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x41,0x8B,0xDB,0x41,0x8B,0xE8,0x45,0x3B,0xD8,0x75,0x3F,0x33,0xDB,0x45,0x85,0xDB,0x7E,0x23,0x48,0x63,0xEB,0x49,0x8D,0x3C,0xEA,0x48,0x8B,0x07,0x41,0x3B,0xD8,0x0F,0x83,0x7E,0x00,0x00,0x00,0x48,0x99,0x49,0xF7,0x3C,0xE9,0x48,0x89,0x17,0xFF,0xC3,0x41,0x3B,0xDB,0x7C,0xDD,0x4C,0x89,0x11,0x44,0x89,0x59,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x9D,0x02,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x30,0x3F,0x47,0x5F,0x4C,0x8B,0xF0,0xB9,0x3F,0x0C,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x19,0x3F,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x4C,0xE5,0xC9,0xFF,0x48,0x8B,0xC8,0xE8,0x1C,0x6F,0x45,0x5F,0xCC,0xE8,0x76,0x53,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<ulong> mod(Span<ulong> lhs, ReadOnlySpan<ulong> rhs)
; location: [7FFC872BFA60h, 7FFC872BFB2Ah]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov r9,[r8]                   ; MOV(Mov_r64_rm64) [R9,mem(64u,R8:br,DS:sr)]          encoding(3 bytes) = 4d 8b 08
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0014h mov r11d,[rdx+8]              ; MOV(Mov_r32_rm32) [R11D,mem(32u,RDX:br,DS:sr)]       encoding(4 bytes) = 44 8b 5a 08
0018h mov esi,0DCh                  ; MOV(Mov_r32_imm32) [ESI,dch:imm32]                   encoding(5 bytes) = be dc 00 00 00
001dh mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0022h mov ebx,r11d                  ; MOV(Mov_r32_rm32) [EBX,R11D]                         encoding(3 bytes) = 41 8b db
0025h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0028h cmp r11d,r8d                  ; CMP(Cmp_r32_rm32) [R11D,R8D]                         encoding(3 bytes) = 45 3b d8
002bh jne short 006ch               ; JNE(Jne_rel8_64) [6Ch:jmp64]                         encoding(2 bytes) = 75 3f
002dh xor ebx,ebx                   ; XOR(Xor_r32_rm32) [EBX,EBX]                          encoding(2 bytes) = 33 db
002fh test r11d,r11d                ; TEST(Test_rm32_r32) [R11D,R11D]                      encoding(3 bytes) = 45 85 db
0032h jle short 0057h               ; JLE(Jle_rel8_64) [57h:jmp64]                         encoding(2 bytes) = 7e 23
0034h movsxd rbp,ebx                ; MOVSXD(Movsxd_r64_rm32) [RBP,EBX]                    encoding(3 bytes) = 48 63 eb
0037h lea rdi,[r10+rbp*8]           ; LEA(Lea_r64_m) [RDI,mem(Unknown,R10:br,DS:sr)]       encoding(4 bytes) = 49 8d 3c ea
003bh mov rax,[rdi]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RDI:br,DS:sr)]        encoding(3 bytes) = 48 8b 07
003eh cmp ebx,r8d                   ; CMP(Cmp_r32_rm32) [EBX,R8D]                          encoding(3 bytes) = 41 3b d8
0041h jae near ptr 00c5h            ; JAE(Jae_rel32_64) [C5h:jmp64]                        encoding(6 bytes) = 0f 83 7e 00 00 00
0047h xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
0049h div qword ptr [r9+rbp*8]      ; DIV(Div_rm64) [mem(64u,R9:br,DS:sr)]                 encoding(4 bytes) = 49 f7 34 e9
004dh mov [rdi],rdx                 ; MOV(Mov_rm64_r64) [mem(64u,RDI:br,DS:sr),RDX]        encoding(3 bytes) = 48 89 17
0050h inc ebx                       ; INC(Inc_rm32) [EBX]                                  encoding(2 bytes) = ff c3
0052h cmp ebx,r11d                  ; CMP(Cmp_r32_rm32) [EBX,R11D]                         encoding(3 bytes) = 41 3b db
0055h jl short 0034h                ; JL(Jl_rel8_64) [34h:jmp64]                           encoding(2 bytes) = 7c dd
0057h mov [rcx],r10                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R10]        encoding(3 bytes) = 4c 89 11
005ah mov [rcx+8],r11d              ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R11D]       encoding(4 bytes) = 44 89 59 08
005eh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0061h add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0065h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0066h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0067h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0068h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0069h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
006bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
006ch mov ecx,29Dh                  ; MOV(Mov_r32_imm32) [ECX,29dh:imm32]                  encoding(5 bytes) = b9 9d 02 00 00
0071h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
007bh call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F473EC0h:jmp64]                encoding(5 bytes) = e8 40 3e 47 5f
0080h mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0083h mov ecx,0C3Fh                 ; MOV(Mov_r32_imm32) [ECX,c3fh:imm32]                  encoding(5 bytes) = b9 3f 0c 00 00
0088h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0092h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F473EC0h:jmp64]                encoding(5 bytes) = e8 29 3e 47 5f
0097h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
009ah lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
009fh mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00a2h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00a6h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00a9h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00abh mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00adh mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00b2h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b7h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFC9E518h:jmp64]        encoding(5 bytes) = e8 5c e4 c9 ff
00bch mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00bfh call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F456EF0h:jmp64]                encoding(5 bytes) = e8 2c 6e 45 5f
00c4h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00c5h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A5350h:jmp64]                encoding(5 bytes) = e8 86 52 5a 5f
00cah int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> modBytes => new byte[203]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x4D,0x8B,0x08,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x12,0x44,0x8B,0x5A,0x08,0xBE,0xDC,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x41,0x8B,0xDB,0x41,0x8B,0xE8,0x45,0x3B,0xD8,0x75,0x3F,0x33,0xDB,0x45,0x85,0xDB,0x7E,0x23,0x48,0x63,0xEB,0x49,0x8D,0x3C,0xEA,0x48,0x8B,0x07,0x41,0x3B,0xD8,0x0F,0x83,0x7E,0x00,0x00,0x00,0x33,0xD2,0x49,0xF7,0x34,0xE9,0x48,0x89,0x17,0xFF,0xC3,0x41,0x3B,0xDB,0x7C,0xDD,0x4C,0x89,0x11,0x44,0x89,0x59,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x9D,0x02,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x40,0x3E,0x47,0x5F,0x4C,0x8B,0xF0,0xB9,0x3F,0x0C,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x29,0x3E,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x5C,0xE4,0xC9,0xFF,0x48,0x8B,0xC8,0xE8,0x2C,0x6E,0x45,0x5F,0xCC,0xE8,0x86,0x52,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<sbyte> mod(Span<sbyte> lhs, sbyte rhs)
; location: [7FFC872BFB50h, 7FFC872BFB8Bh]
0000h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0001h nop dword ptr [rax]           ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(4 bytes) = 0f 1f 40 00
0005h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0008h mov r10d,[rdx+8]              ; MOV(Mov_r32_rm32) [R10D,mem(32u,RDX:br,DS:sr)]       encoding(4 bytes) = 44 8b 52 08
000ch xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
000fh test r10d,r10d                ; TEST(Test_rm32_r32) [R10D,R10D]                      encoding(3 bytes) = 45 85 d2
0012h jle short 0030h               ; JLE(Jle_rel8_64) [30h:jmp64]                         encoding(2 bytes) = 7e 1c
0014h movsx r8,r8b                  ; MOVSX(Movsx_r64_rm8) [R8,R8L]                        encoding(4 bytes) = 4d 0f be c0
0018h movsxd rsi,r11d               ; MOVSXD(Movsxd_r64_rm32) [RSI,R11D]                   encoding(3 bytes) = 49 63 f3
001bh add rsi,r9                    ; ADD(Add_r64_rm64) [RSI,R9]                           encoding(3 bytes) = 49 03 f1
001eh movsx rax,byte ptr [rsi]      ; MOVSX(Movsx_r64_rm8) [RAX,mem(8i,RSI:br,DS:sr)]      encoding(4 bytes) = 48 0f be 06
0022h cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
0023h idiv r8d                      ; IDIV(Idiv_rm32) [R8D]                                encoding(3 bytes) = 41 f7 f8
0026h mov [rsi],dl                  ; MOV(Mov_rm8_r8) [mem(8u,RSI:br,DS:sr),DL]            encoding(2 bytes) = 88 16
0028h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
002bh cmp r11d,r10d                 ; CMP(Cmp_r32_rm32) [R11D,R10D]                        encoding(3 bytes) = 45 3b da
002eh jl short 0018h                ; JL(Jl_rel8_64) [18h:jmp64]                           encoding(2 bytes) = 7c e8
0030h mov [rcx],r9                  ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R9]         encoding(3 bytes) = 4c 89 09
0033h mov [rcx+8],r10d              ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R10D]       encoding(4 bytes) = 44 89 51 08
0037h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
003ah pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
003bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> modBytes => new byte[60]{0x56,0x0F,0x1F,0x40,0x00,0x4C,0x8B,0x0A,0x44,0x8B,0x52,0x08,0x45,0x33,0xDB,0x45,0x85,0xD2,0x7E,0x1C,0x4D,0x0F,0xBE,0xC0,0x49,0x63,0xF3,0x49,0x03,0xF1,0x48,0x0F,0xBE,0x06,0x99,0x41,0xF7,0xF8,0x88,0x16,0x41,0xFF,0xC3,0x45,0x3B,0xDA,0x7C,0xE8,0x4C,0x89,0x09,0x44,0x89,0x51,0x08,0x48,0x8B,0xC1,0x5E,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<byte> mod(Span<byte> lhs, byte rhs)
; location: [7FFC872BFBA0h, 7FFC872BFBDAh]
0000h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0001h nop dword ptr [rax]           ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(4 bytes) = 0f 1f 40 00
0005h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0008h mov r10d,[rdx+8]              ; MOV(Mov_r32_rm32) [R10D,mem(32u,RDX:br,DS:sr)]       encoding(4 bytes) = 44 8b 52 08
000ch xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
000fh test r10d,r10d                ; TEST(Test_rm32_r32) [R10D,R10D]                      encoding(3 bytes) = 45 85 d2
0012h jle short 002fh               ; JLE(Jle_rel8_64) [2Fh:jmp64]                         encoding(2 bytes) = 7e 1b
0014h movzx r8d,r8b                 ; MOVZX(Movzx_r32_rm8) [R8D,R8L]                       encoding(4 bytes) = 45 0f b6 c0
0018h movsxd rsi,r11d               ; MOVSXD(Movsxd_r64_rm32) [RSI,R11D]                   encoding(3 bytes) = 49 63 f3
001bh add rsi,r9                    ; ADD(Add_r64_rm64) [RSI,R9]                           encoding(3 bytes) = 49 03 f1
001eh movzx eax,byte ptr [rsi]      ; MOVZX(Movzx_r32_rm8) [EAX,mem(8u,RSI:br,DS:sr)]      encoding(3 bytes) = 0f b6 06
0021h cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
0022h idiv r8d                      ; IDIV(Idiv_rm32) [R8D]                                encoding(3 bytes) = 41 f7 f8
0025h mov [rsi],dl                  ; MOV(Mov_rm8_r8) [mem(8u,RSI:br,DS:sr),DL]            encoding(2 bytes) = 88 16
0027h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
002ah cmp r11d,r10d                 ; CMP(Cmp_r32_rm32) [R11D,R10D]                        encoding(3 bytes) = 45 3b da
002dh jl short 0018h                ; JL(Jl_rel8_64) [18h:jmp64]                           encoding(2 bytes) = 7c e9
002fh mov [rcx],r9                  ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R9]         encoding(3 bytes) = 4c 89 09
0032h mov [rcx+8],r10d              ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R10D]       encoding(4 bytes) = 44 89 51 08
0036h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0039h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
003ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> modBytes => new byte[59]{0x56,0x0F,0x1F,0x40,0x00,0x4C,0x8B,0x0A,0x44,0x8B,0x52,0x08,0x45,0x33,0xDB,0x45,0x85,0xD2,0x7E,0x1B,0x45,0x0F,0xB6,0xC0,0x49,0x63,0xF3,0x49,0x03,0xF1,0x0F,0xB6,0x06,0x99,0x41,0xF7,0xF8,0x88,0x16,0x41,0xFF,0xC3,0x45,0x3B,0xDA,0x7C,0xE9,0x4C,0x89,0x09,0x44,0x89,0x51,0x08,0x48,0x8B,0xC1,0x5E,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<short> mod(Span<short> lhs, short rhs)
; location: [7FFC872BFBF0h, 7FFC872BFC2Dh]
0000h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0001h nop dword ptr [rax]           ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(4 bytes) = 0f 1f 40 00
0005h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0008h mov r10d,[rdx+8]              ; MOV(Mov_r32_rm32) [R10D,mem(32u,RDX:br,DS:sr)]       encoding(4 bytes) = 44 8b 52 08
000ch xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
000fh test r10d,r10d                ; TEST(Test_rm32_r32) [R10D,R10D]                      encoding(3 bytes) = 45 85 d2
0012h jle short 0032h               ; JLE(Jle_rel8_64) [32h:jmp64]                         encoding(2 bytes) = 7e 1e
0014h movsx r8,r8w                  ; MOVSX(Movsx_r64_rm16) [R8,R8W]                       encoding(4 bytes) = 4d 0f bf c0
0018h movsxd rax,r11d               ; MOVSXD(Movsxd_r64_rm32) [RAX,R11D]                   encoding(3 bytes) = 49 63 c3
001bh lea rsi,[r9+rax*2]            ; LEA(Lea_r64_m) [RSI,mem(Unknown,R9:br,DS:sr)]        encoding(4 bytes) = 49 8d 34 41
001fh movsx rax,word ptr [rsi]      ; MOVSX(Movsx_r64_rm16) [RAX,mem(16i,RSI:br,DS:sr)]    encoding(4 bytes) = 48 0f bf 06
0023h cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
0024h idiv r8d                      ; IDIV(Idiv_rm32) [R8D]                                encoding(3 bytes) = 41 f7 f8
0027h mov [rsi],dx                  ; MOV(Mov_rm16_r16) [mem(16u,RSI:br,DS:sr),DX]         encoding(3 bytes) = 66 89 16
002ah inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
002dh cmp r11d,r10d                 ; CMP(Cmp_r32_rm32) [R11D,R10D]                        encoding(3 bytes) = 45 3b da
0030h jl short 0018h                ; JL(Jl_rel8_64) [18h:jmp64]                           encoding(2 bytes) = 7c e6
0032h mov [rcx],r9                  ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R9]         encoding(3 bytes) = 4c 89 09
0035h mov [rcx+8],r10d              ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R10D]       encoding(4 bytes) = 44 89 51 08
0039h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
003ch pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
003dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> modBytes => new byte[62]{0x56,0x0F,0x1F,0x40,0x00,0x4C,0x8B,0x0A,0x44,0x8B,0x52,0x08,0x45,0x33,0xDB,0x45,0x85,0xD2,0x7E,0x1E,0x4D,0x0F,0xBF,0xC0,0x49,0x63,0xC3,0x49,0x8D,0x34,0x41,0x48,0x0F,0xBF,0x06,0x99,0x41,0xF7,0xF8,0x66,0x89,0x16,0x41,0xFF,0xC3,0x45,0x3B,0xDA,0x7C,0xE6,0x4C,0x89,0x09,0x44,0x89,0x51,0x08,0x48,0x8B,0xC1,0x5E,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<ushort> mod(Span<ushort> lhs, ushort rhs)
; location: [7FFC872BFC50h, 7FFC872BFC8Ch]
0000h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0001h nop dword ptr [rax]           ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(4 bytes) = 0f 1f 40 00
0005h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0008h mov r10d,[rdx+8]              ; MOV(Mov_r32_rm32) [R10D,mem(32u,RDX:br,DS:sr)]       encoding(4 bytes) = 44 8b 52 08
000ch xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
000fh test r10d,r10d                ; TEST(Test_rm32_r32) [R10D,R10D]                      encoding(3 bytes) = 45 85 d2
0012h jle short 0031h               ; JLE(Jle_rel8_64) [31h:jmp64]                         encoding(2 bytes) = 7e 1d
0014h movzx r8d,r8w                 ; MOVZX(Movzx_r32_rm16) [R8D,R8W]                      encoding(4 bytes) = 45 0f b7 c0
0018h movsxd rax,r11d               ; MOVSXD(Movsxd_r64_rm32) [RAX,R11D]                   encoding(3 bytes) = 49 63 c3
001bh lea rsi,[r9+rax*2]            ; LEA(Lea_r64_m) [RSI,mem(Unknown,R9:br,DS:sr)]        encoding(4 bytes) = 49 8d 34 41
001fh movzx eax,word ptr [rsi]      ; MOVZX(Movzx_r32_rm16) [EAX,mem(16u,RSI:br,DS:sr)]    encoding(3 bytes) = 0f b7 06
0022h cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
0023h idiv r8d                      ; IDIV(Idiv_rm32) [R8D]                                encoding(3 bytes) = 41 f7 f8
0026h mov [rsi],dx                  ; MOV(Mov_rm16_r16) [mem(16u,RSI:br,DS:sr),DX]         encoding(3 bytes) = 66 89 16
0029h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
002ch cmp r11d,r10d                 ; CMP(Cmp_r32_rm32) [R11D,R10D]                        encoding(3 bytes) = 45 3b da
002fh jl short 0018h                ; JL(Jl_rel8_64) [18h:jmp64]                           encoding(2 bytes) = 7c e7
0031h mov [rcx],r9                  ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R9]         encoding(3 bytes) = 4c 89 09
0034h mov [rcx+8],r10d              ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R10D]       encoding(4 bytes) = 44 89 51 08
0038h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
003bh pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
003ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> modBytes => new byte[61]{0x56,0x0F,0x1F,0x40,0x00,0x4C,0x8B,0x0A,0x44,0x8B,0x52,0x08,0x45,0x33,0xDB,0x45,0x85,0xD2,0x7E,0x1D,0x45,0x0F,0xB7,0xC0,0x49,0x63,0xC3,0x49,0x8D,0x34,0x41,0x0F,0xB7,0x06,0x99,0x41,0xF7,0xF8,0x66,0x89,0x16,0x41,0xFF,0xC3,0x45,0x3B,0xDA,0x7C,0xE7,0x4C,0x89,0x09,0x44,0x89,0x51,0x08,0x48,0x8B,0xC1,0x5E,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<int> mod(Span<int> lhs, int rhs)
; location: [7FFC872BFCB0h, 7FFC872BFCE6h]
0000h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0001h nop dword ptr [rax]           ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(4 bytes) = 0f 1f 40 00
0005h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0008h mov r10d,[rdx+8]              ; MOV(Mov_r32_rm32) [R10D,mem(32u,RDX:br,DS:sr)]       encoding(4 bytes) = 44 8b 52 08
000ch xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
000fh test r10d,r10d                ; TEST(Test_rm32_r32) [R10D,R10D]                      encoding(3 bytes) = 45 85 d2
0012h jle short 002bh               ; JLE(Jle_rel8_64) [2Bh:jmp64]                         encoding(2 bytes) = 7e 17
0014h movsxd rax,r11d               ; MOVSXD(Movsxd_r64_rm32) [RAX,R11D]                   encoding(3 bytes) = 49 63 c3
0017h lea rsi,[r9+rax*4]            ; LEA(Lea_r64_m) [RSI,mem(Unknown,R9:br,DS:sr)]        encoding(4 bytes) = 49 8d 34 81
001bh mov eax,[rsi]                 ; MOV(Mov_r32_rm32) [EAX,mem(32u,RSI:br,DS:sr)]        encoding(2 bytes) = 8b 06
001dh cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
001eh idiv r8d                      ; IDIV(Idiv_rm32) [R8D]                                encoding(3 bytes) = 41 f7 f8
0021h mov [rsi],edx                 ; MOV(Mov_rm32_r32) [mem(32u,RSI:br,DS:sr),EDX]        encoding(2 bytes) = 89 16
0023h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
0026h cmp r11d,r10d                 ; CMP(Cmp_r32_rm32) [R11D,R10D]                        encoding(3 bytes) = 45 3b da
0029h jl short 0014h                ; JL(Jl_rel8_64) [14h:jmp64]                           encoding(2 bytes) = 7c e9
002bh mov [rcx],r9                  ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R9]         encoding(3 bytes) = 4c 89 09
002eh mov [rcx+8],r10d              ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R10D]       encoding(4 bytes) = 44 89 51 08
0032h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0035h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0036h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> modBytes => new byte[55]{0x56,0x0F,0x1F,0x40,0x00,0x4C,0x8B,0x0A,0x44,0x8B,0x52,0x08,0x45,0x33,0xDB,0x45,0x85,0xD2,0x7E,0x17,0x49,0x63,0xC3,0x49,0x8D,0x34,0x81,0x8B,0x06,0x99,0x41,0xF7,0xF8,0x89,0x16,0x41,0xFF,0xC3,0x45,0x3B,0xDA,0x7C,0xE9,0x4C,0x89,0x09,0x44,0x89,0x51,0x08,0x48,0x8B,0xC1,0x5E,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<uint> mod(Span<uint> lhs, uint rhs)
; location: [7FFC872BFD00h, 7FFC872BFD37h]
0000h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0001h nop dword ptr [rax]           ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(4 bytes) = 0f 1f 40 00
0005h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0008h mov r10d,[rdx+8]              ; MOV(Mov_r32_rm32) [R10D,mem(32u,RDX:br,DS:sr)]       encoding(4 bytes) = 44 8b 52 08
000ch xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
000fh test r10d,r10d                ; TEST(Test_rm32_r32) [R10D,R10D]                      encoding(3 bytes) = 45 85 d2
0012h jle short 002ch               ; JLE(Jle_rel8_64) [2Ch:jmp64]                         encoding(2 bytes) = 7e 18
0014h movsxd rax,r11d               ; MOVSXD(Movsxd_r64_rm32) [RAX,R11D]                   encoding(3 bytes) = 49 63 c3
0017h lea rsi,[r9+rax*4]            ; LEA(Lea_r64_m) [RSI,mem(Unknown,R9:br,DS:sr)]        encoding(4 bytes) = 49 8d 34 81
001bh mov eax,[rsi]                 ; MOV(Mov_r32_rm32) [EAX,mem(32u,RSI:br,DS:sr)]        encoding(2 bytes) = 8b 06
001dh xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
001fh div r8d                       ; DIV(Div_rm32) [R8D]                                  encoding(3 bytes) = 41 f7 f0
0022h mov [rsi],edx                 ; MOV(Mov_rm32_r32) [mem(32u,RSI:br,DS:sr),EDX]        encoding(2 bytes) = 89 16
0024h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
0027h cmp r11d,r10d                 ; CMP(Cmp_r32_rm32) [R11D,R10D]                        encoding(3 bytes) = 45 3b da
002ah jl short 0014h                ; JL(Jl_rel8_64) [14h:jmp64]                           encoding(2 bytes) = 7c e8
002ch mov [rcx],r9                  ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R9]         encoding(3 bytes) = 4c 89 09
002fh mov [rcx+8],r10d              ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R10D]       encoding(4 bytes) = 44 89 51 08
0033h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0036h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0037h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> modBytes => new byte[56]{0x56,0x0F,0x1F,0x40,0x00,0x4C,0x8B,0x0A,0x44,0x8B,0x52,0x08,0x45,0x33,0xDB,0x45,0x85,0xD2,0x7E,0x18,0x49,0x63,0xC3,0x49,0x8D,0x34,0x81,0x8B,0x06,0x33,0xD2,0x41,0xF7,0xF0,0x89,0x16,0x41,0xFF,0xC3,0x45,0x3B,0xDA,0x7C,0xE8,0x4C,0x89,0x09,0x44,0x89,0x51,0x08,0x48,0x8B,0xC1,0x5E,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<long> mod(Span<long> lhs, long rhs)
; location: [7FFC872BFD50h, 7FFC872BFD89h]
0000h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0001h nop dword ptr [rax]           ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(4 bytes) = 0f 1f 40 00
0005h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0008h mov r10d,[rdx+8]              ; MOV(Mov_r32_rm32) [R10D,mem(32u,RDX:br,DS:sr)]       encoding(4 bytes) = 44 8b 52 08
000ch xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
000fh test r10d,r10d                ; TEST(Test_rm32_r32) [R10D,R10D]                      encoding(3 bytes) = 45 85 d2
0012h jle short 002eh               ; JLE(Jle_rel8_64) [2Eh:jmp64]                         encoding(2 bytes) = 7e 1a
0014h movsxd rax,r11d               ; MOVSXD(Movsxd_r64_rm32) [RAX,R11D]                   encoding(3 bytes) = 49 63 c3
0017h lea rsi,[r9+rax*8]            ; LEA(Lea_r64_m) [RSI,mem(Unknown,R9:br,DS:sr)]        encoding(4 bytes) = 49 8d 34 c1
001bh mov rax,[rsi]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSI:br,DS:sr)]        encoding(3 bytes) = 48 8b 06
001eh cqo                           ; CQO(Cqo)                                             encoding(2 bytes) = 48 99
0020h idiv r8                       ; IDIV(Idiv_rm64) [R8]                                 encoding(3 bytes) = 49 f7 f8
0023h mov [rsi],rdx                 ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RDX]        encoding(3 bytes) = 48 89 16
0026h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
0029h cmp r11d,r10d                 ; CMP(Cmp_r32_rm32) [R11D,R10D]                        encoding(3 bytes) = 45 3b da
002ch jl short 0014h                ; JL(Jl_rel8_64) [14h:jmp64]                           encoding(2 bytes) = 7c e6
002eh mov [rcx],r9                  ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R9]         encoding(3 bytes) = 4c 89 09
0031h mov [rcx+8],r10d              ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R10D]       encoding(4 bytes) = 44 89 51 08
0035h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0038h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0039h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> modBytes => new byte[58]{0x56,0x0F,0x1F,0x40,0x00,0x4C,0x8B,0x0A,0x44,0x8B,0x52,0x08,0x45,0x33,0xDB,0x45,0x85,0xD2,0x7E,0x1A,0x49,0x63,0xC3,0x49,0x8D,0x34,0xC1,0x48,0x8B,0x06,0x48,0x99,0x49,0xF7,0xF8,0x48,0x89,0x16,0x41,0xFF,0xC3,0x45,0x3B,0xDA,0x7C,0xE6,0x4C,0x89,0x09,0x44,0x89,0x51,0x08,0x48,0x8B,0xC1,0x5E,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<ulong> mod(Span<ulong> lhs, ulong rhs)
; location: [7FFC872BFDA0h, 7FFC872BFDD9h]
0000h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0001h nop dword ptr [rax]           ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(4 bytes) = 0f 1f 40 00
0005h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0008h mov r10d,[rdx+8]              ; MOV(Mov_r32_rm32) [R10D,mem(32u,RDX:br,DS:sr)]       encoding(4 bytes) = 44 8b 52 08
000ch xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
000fh test r10d,r10d                ; TEST(Test_rm32_r32) [R10D,R10D]                      encoding(3 bytes) = 45 85 d2
0012h jle short 002eh               ; JLE(Jle_rel8_64) [2Eh:jmp64]                         encoding(2 bytes) = 7e 1a
0014h movsxd rax,r11d               ; MOVSXD(Movsxd_r64_rm32) [RAX,R11D]                   encoding(3 bytes) = 49 63 c3
0017h lea rsi,[r9+rax*8]            ; LEA(Lea_r64_m) [RSI,mem(Unknown,R9:br,DS:sr)]        encoding(4 bytes) = 49 8d 34 c1
001bh mov rax,[rsi]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSI:br,DS:sr)]        encoding(3 bytes) = 48 8b 06
001eh xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
0020h div r8                        ; DIV(Div_rm64) [R8]                                   encoding(3 bytes) = 49 f7 f0
0023h mov [rsi],rdx                 ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RDX]        encoding(3 bytes) = 48 89 16
0026h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
0029h cmp r11d,r10d                 ; CMP(Cmp_r32_rm32) [R11D,R10D]                        encoding(3 bytes) = 45 3b da
002ch jl short 0014h                ; JL(Jl_rel8_64) [14h:jmp64]                           encoding(2 bytes) = 7c e6
002eh mov [rcx],r9                  ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R9]         encoding(3 bytes) = 4c 89 09
0031h mov [rcx+8],r10d              ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R10D]       encoding(4 bytes) = 44 89 51 08
0035h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0038h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0039h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> modBytes => new byte[58]{0x56,0x0F,0x1F,0x40,0x00,0x4C,0x8B,0x0A,0x44,0x8B,0x52,0x08,0x45,0x33,0xDB,0x45,0x85,0xD2,0x7E,0x1A,0x49,0x63,0xC3,0x49,0x8D,0x34,0xC1,0x48,0x8B,0x06,0x33,0xD2,0x49,0xF7,0xF0,0x48,0x89,0x16,0x41,0xFF,0xC3,0x45,0x3B,0xDA,0x7C,0xE6,0x4C,0x89,0x09,0x44,0x89,0x51,0x08,0x48,0x8B,0xC1,0x5E,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<sbyte> mod(ReadOnlySpan<sbyte> lhs, sbyte rhs, Span<sbyte> dst)
; location: [7FFC872BFDF0h, 7FFC872BFE42h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0003h sub rsp,20h                   ; SUB(Sub_rm64_imm8) [RSP,20h:imm64]                   encoding(4 bytes) = 48 83 ec 20
0007h mov r10,[r9]                  ; MOV(Mov_r64_rm64) [R10,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 4d 8b 11
000ah mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000eh mov r11,[rdx]                 ; MOV(Mov_r64_rm64) [R11,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 1a
0011h mov esi,[rdx+8]               ; MOV(Mov_r32_rm32) [ESI,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 72 08
0014h xor edi,edi                   ; XOR(Xor_r32_rm32) [EDI,EDI]                          encoding(2 bytes) = 33 ff
0016h test esi,esi                  ; TEST(Test_rm32_r32) [ESI,ESI]                        encoding(2 bytes) = 85 f6
0018h jle short 003bh               ; JLE(Jle_rel8_64) [3Bh:jmp64]                         encoding(2 bytes) = 7e 21
001ah movsx r8,r8b                  ; MOVSX(Movsx_r64_rm8) [R8,R8L]                        encoding(4 bytes) = 4d 0f be c0
001eh cmp edi,r9d                   ; CMP(Cmp_r32_rm32) [EDI,R9D]                          encoding(3 bytes) = 41 3b f9
0021h jae short 004dh               ; JAE(Jae_rel8_64) [4Dh:jmp64]                         encoding(2 bytes) = 73 2a
0023h movsxd rax,edi                ; MOVSXD(Movsxd_r64_rm32) [RAX,EDI]                    encoding(3 bytes) = 48 63 c7
0026h lea rbx,[r10+rax]             ; LEA(Lea_r64_m) [RBX,mem(Unknown,R10:br,DS:sr)]       encoding(4 bytes) = 49 8d 1c 02
002ah movsx rax,byte ptr [r11+rax]  ; MOVSX(Movsx_r64_rm8) [RAX,mem(8i,R11:br,DS:sr)]      encoding(5 bytes) = 49 0f be 04 03
002fh cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
0030h idiv r8d                      ; IDIV(Idiv_rm32) [R8D]                                encoding(3 bytes) = 41 f7 f8
0033h mov [rbx],dl                  ; MOV(Mov_rm8_r8) [mem(8u,RBX:br,DS:sr),DL]            encoding(2 bytes) = 88 13
0035h inc edi                       ; INC(Inc_rm32) [EDI]                                  encoding(2 bytes) = ff c7
0037h cmp edi,esi                   ; CMP(Cmp_r32_rm32) [EDI,ESI]                          encoding(2 bytes) = 3b fe
0039h jl short 001eh                ; JL(Jl_rel8_64) [1Eh:jmp64]                           encoding(2 bytes) = 7c e3
003bh mov [rcx],r10                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R10]        encoding(3 bytes) = 4c 89 11
003eh mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0042h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0045h add rsp,20h                   ; ADD(Add_rm64_imm8) [RSP,20h:imm64]                   encoding(4 bytes) = 48 83 c4 20
0049h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
004ah pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
004bh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
004ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
004dh call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A4FC0h:jmp64]                encoding(5 bytes) = e8 6e 4f 5a 5f
0052h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> modBytes => new byte[83]{0x57,0x56,0x53,0x48,0x83,0xEC,0x20,0x4D,0x8B,0x11,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x1A,0x8B,0x72,0x08,0x33,0xFF,0x85,0xF6,0x7E,0x21,0x4D,0x0F,0xBE,0xC0,0x41,0x3B,0xF9,0x73,0x2A,0x48,0x63,0xC7,0x49,0x8D,0x1C,0x02,0x49,0x0F,0xBE,0x04,0x03,0x99,0x41,0xF7,0xF8,0x88,0x13,0xFF,0xC7,0x3B,0xFE,0x7C,0xE3,0x4C,0x89,0x11,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x20,0x5B,0x5E,0x5F,0xC3,0xE8,0x6E,0x4F,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<byte> mod(ReadOnlySpan<byte> lhs, byte rhs, Span<byte> dst)
; location: [7FFC872BFE60h, 7FFC872BFEB2h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0003h sub rsp,20h                   ; SUB(Sub_rm64_imm8) [RSP,20h:imm64]                   encoding(4 bytes) = 48 83 ec 20
0007h mov r10,[r9]                  ; MOV(Mov_r64_rm64) [R10,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 4d 8b 11
000ah mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000eh mov r11,[rdx]                 ; MOV(Mov_r64_rm64) [R11,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 1a
0011h mov esi,[rdx+8]               ; MOV(Mov_r32_rm32) [ESI,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 72 08
0014h xor edi,edi                   ; XOR(Xor_r32_rm32) [EDI,EDI]                          encoding(2 bytes) = 33 ff
0016h test esi,esi                  ; TEST(Test_rm32_r32) [ESI,ESI]                        encoding(2 bytes) = 85 f6
0018h jle short 003bh               ; JLE(Jle_rel8_64) [3Bh:jmp64]                         encoding(2 bytes) = 7e 21
001ah movzx r8d,r8b                 ; MOVZX(Movzx_r32_rm8) [R8D,R8L]                       encoding(4 bytes) = 45 0f b6 c0
001eh cmp edi,r9d                   ; CMP(Cmp_r32_rm32) [EDI,R9D]                          encoding(3 bytes) = 41 3b f9
0021h jae short 004dh               ; JAE(Jae_rel8_64) [4Dh:jmp64]                         encoding(2 bytes) = 73 2a
0023h movsxd rax,edi                ; MOVSXD(Movsxd_r64_rm32) [RAX,EDI]                    encoding(3 bytes) = 48 63 c7
0026h lea rbx,[r10+rax]             ; LEA(Lea_r64_m) [RBX,mem(Unknown,R10:br,DS:sr)]       encoding(4 bytes) = 49 8d 1c 02
002ah movzx eax,byte ptr [r11+rax]  ; MOVZX(Movzx_r32_rm8) [EAX,mem(8u,R11:br,DS:sr)]      encoding(5 bytes) = 41 0f b6 04 03
002fh cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
0030h idiv r8d                      ; IDIV(Idiv_rm32) [R8D]                                encoding(3 bytes) = 41 f7 f8
0033h mov [rbx],dl                  ; MOV(Mov_rm8_r8) [mem(8u,RBX:br,DS:sr),DL]            encoding(2 bytes) = 88 13
0035h inc edi                       ; INC(Inc_rm32) [EDI]                                  encoding(2 bytes) = ff c7
0037h cmp edi,esi                   ; CMP(Cmp_r32_rm32) [EDI,ESI]                          encoding(2 bytes) = 3b fe
0039h jl short 001eh                ; JL(Jl_rel8_64) [1Eh:jmp64]                           encoding(2 bytes) = 7c e3
003bh mov [rcx],r10                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R10]        encoding(3 bytes) = 4c 89 11
003eh mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0042h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0045h add rsp,20h                   ; ADD(Add_rm64_imm8) [RSP,20h:imm64]                   encoding(4 bytes) = 48 83 c4 20
0049h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
004ah pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
004bh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
004ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
004dh call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A4F50h:jmp64]                encoding(5 bytes) = e8 fe 4e 5a 5f
0052h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> modBytes => new byte[83]{0x57,0x56,0x53,0x48,0x83,0xEC,0x20,0x4D,0x8B,0x11,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x1A,0x8B,0x72,0x08,0x33,0xFF,0x85,0xF6,0x7E,0x21,0x45,0x0F,0xB6,0xC0,0x41,0x3B,0xF9,0x73,0x2A,0x48,0x63,0xC7,0x49,0x8D,0x1C,0x02,0x41,0x0F,0xB6,0x04,0x03,0x99,0x41,0xF7,0xF8,0x88,0x13,0xFF,0xC7,0x3B,0xFE,0x7C,0xE3,0x4C,0x89,0x11,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x20,0x5B,0x5E,0x5F,0xC3,0xE8,0xFE,0x4E,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<short> mod(ReadOnlySpan<short> lhs, short rhs, Span<short> dst)
; location: [7FFC872BFED0h, 7FFC872BFF23h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0003h sub rsp,20h                   ; SUB(Sub_rm64_imm8) [RSP,20h:imm64]                   encoding(4 bytes) = 48 83 ec 20
0007h mov r10,[r9]                  ; MOV(Mov_r64_rm64) [R10,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 4d 8b 11
000ah mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000eh mov r11,[rdx]                 ; MOV(Mov_r64_rm64) [R11,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 1a
0011h mov esi,[rdx+8]               ; MOV(Mov_r32_rm32) [ESI,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 72 08
0014h xor edi,edi                   ; XOR(Xor_r32_rm32) [EDI,EDI]                          encoding(2 bytes) = 33 ff
0016h test esi,esi                  ; TEST(Test_rm32_r32) [ESI,ESI]                        encoding(2 bytes) = 85 f6
0018h jle short 003ch               ; JLE(Jle_rel8_64) [3Ch:jmp64]                         encoding(2 bytes) = 7e 22
001ah movsx r8,r8w                  ; MOVSX(Movsx_r64_rm16) [R8,R8W]                       encoding(4 bytes) = 4d 0f bf c0
001eh cmp edi,r9d                   ; CMP(Cmp_r32_rm32) [EDI,R9D]                          encoding(3 bytes) = 41 3b f9
0021h jae short 004eh               ; JAE(Jae_rel8_64) [4Eh:jmp64]                         encoding(2 bytes) = 73 2b
0023h movsxd rax,edi                ; MOVSXD(Movsxd_r64_rm32) [RAX,EDI]                    encoding(3 bytes) = 48 63 c7
0026h lea rbx,[r10+rax*2]           ; LEA(Lea_r64_m) [RBX,mem(Unknown,R10:br,DS:sr)]       encoding(4 bytes) = 49 8d 1c 42
002ah movsx rax,word ptr [r11+rax*2]; MOVSX(Movsx_r64_rm16) [RAX,mem(16i,R11:br,DS:sr)]    encoding(5 bytes) = 49 0f bf 04 43
002fh cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
0030h idiv r8d                      ; IDIV(Idiv_rm32) [R8D]                                encoding(3 bytes) = 41 f7 f8
0033h mov [rbx],dx                  ; MOV(Mov_rm16_r16) [mem(16u,RBX:br,DS:sr),DX]         encoding(3 bytes) = 66 89 13
0036h inc edi                       ; INC(Inc_rm32) [EDI]                                  encoding(2 bytes) = ff c7
0038h cmp edi,esi                   ; CMP(Cmp_r32_rm32) [EDI,ESI]                          encoding(2 bytes) = 3b fe
003ah jl short 001eh                ; JL(Jl_rel8_64) [1Eh:jmp64]                           encoding(2 bytes) = 7c e2
003ch mov [rcx],r10                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R10]        encoding(3 bytes) = 4c 89 11
003fh mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0043h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0046h add rsp,20h                   ; ADD(Add_rm64_imm8) [RSP,20h:imm64]                   encoding(4 bytes) = 48 83 c4 20
004ah pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
004bh pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
004ch pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
004dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
004eh call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A4EE0h:jmp64]                encoding(5 bytes) = e8 8d 4e 5a 5f
0053h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> modBytes => new byte[84]{0x57,0x56,0x53,0x48,0x83,0xEC,0x20,0x4D,0x8B,0x11,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x1A,0x8B,0x72,0x08,0x33,0xFF,0x85,0xF6,0x7E,0x22,0x4D,0x0F,0xBF,0xC0,0x41,0x3B,0xF9,0x73,0x2B,0x48,0x63,0xC7,0x49,0x8D,0x1C,0x42,0x49,0x0F,0xBF,0x04,0x43,0x99,0x41,0xF7,0xF8,0x66,0x89,0x13,0xFF,0xC7,0x3B,0xFE,0x7C,0xE2,0x4C,0x89,0x11,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x20,0x5B,0x5E,0x5F,0xC3,0xE8,0x8D,0x4E,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<ushort> mod(ReadOnlySpan<ushort> lhs, ushort rhs, Span<ushort> dst)
; location: [7FFC872BFF40h, 7FFC872BFF93h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0003h sub rsp,20h                   ; SUB(Sub_rm64_imm8) [RSP,20h:imm64]                   encoding(4 bytes) = 48 83 ec 20
0007h mov r10,[r9]                  ; MOV(Mov_r64_rm64) [R10,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 4d 8b 11
000ah mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000eh mov r11,[rdx]                 ; MOV(Mov_r64_rm64) [R11,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 1a
0011h mov esi,[rdx+8]               ; MOV(Mov_r32_rm32) [ESI,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 72 08
0014h xor edi,edi                   ; XOR(Xor_r32_rm32) [EDI,EDI]                          encoding(2 bytes) = 33 ff
0016h test esi,esi                  ; TEST(Test_rm32_r32) [ESI,ESI]                        encoding(2 bytes) = 85 f6
0018h jle short 003ch               ; JLE(Jle_rel8_64) [3Ch:jmp64]                         encoding(2 bytes) = 7e 22
001ah movzx r8d,r8w                 ; MOVZX(Movzx_r32_rm16) [R8D,R8W]                      encoding(4 bytes) = 45 0f b7 c0
001eh cmp edi,r9d                   ; CMP(Cmp_r32_rm32) [EDI,R9D]                          encoding(3 bytes) = 41 3b f9
0021h jae short 004eh               ; JAE(Jae_rel8_64) [4Eh:jmp64]                         encoding(2 bytes) = 73 2b
0023h movsxd rax,edi                ; MOVSXD(Movsxd_r64_rm32) [RAX,EDI]                    encoding(3 bytes) = 48 63 c7
0026h lea rbx,[r10+rax*2]           ; LEA(Lea_r64_m) [RBX,mem(Unknown,R10:br,DS:sr)]       encoding(4 bytes) = 49 8d 1c 42
002ah movzx eax,word ptr [r11+rax*2]; MOVZX(Movzx_r32_rm16) [EAX,mem(16u,R11:br,DS:sr)]    encoding(5 bytes) = 41 0f b7 04 43
002fh cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
0030h idiv r8d                      ; IDIV(Idiv_rm32) [R8D]                                encoding(3 bytes) = 41 f7 f8
0033h mov [rbx],dx                  ; MOV(Mov_rm16_r16) [mem(16u,RBX:br,DS:sr),DX]         encoding(3 bytes) = 66 89 13
0036h inc edi                       ; INC(Inc_rm32) [EDI]                                  encoding(2 bytes) = ff c7
0038h cmp edi,esi                   ; CMP(Cmp_r32_rm32) [EDI,ESI]                          encoding(2 bytes) = 3b fe
003ah jl short 001eh                ; JL(Jl_rel8_64) [1Eh:jmp64]                           encoding(2 bytes) = 7c e2
003ch mov [rcx],r10                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R10]        encoding(3 bytes) = 4c 89 11
003fh mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0043h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0046h add rsp,20h                   ; ADD(Add_rm64_imm8) [RSP,20h:imm64]                   encoding(4 bytes) = 48 83 c4 20
004ah pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
004bh pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
004ch pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
004dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
004eh call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A4E70h:jmp64]                encoding(5 bytes) = e8 1d 4e 5a 5f
0053h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> modBytes => new byte[84]{0x57,0x56,0x53,0x48,0x83,0xEC,0x20,0x4D,0x8B,0x11,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x1A,0x8B,0x72,0x08,0x33,0xFF,0x85,0xF6,0x7E,0x22,0x45,0x0F,0xB7,0xC0,0x41,0x3B,0xF9,0x73,0x2B,0x48,0x63,0xC7,0x49,0x8D,0x1C,0x42,0x41,0x0F,0xB7,0x04,0x43,0x99,0x41,0xF7,0xF8,0x66,0x89,0x13,0xFF,0xC7,0x3B,0xFE,0x7C,0xE2,0x4C,0x89,0x11,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x20,0x5B,0x5E,0x5F,0xC3,0xE8,0x1D,0x4E,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<int> mod(ReadOnlySpan<int> lhs, int rhs, Span<int> dst)
; location: [7FFC872BFFB0h, 7FFC872BFFFDh]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0003h sub rsp,20h                   ; SUB(Sub_rm64_imm8) [RSP,20h:imm64]                   encoding(4 bytes) = 48 83 ec 20
0007h mov r10,[r9]                  ; MOV(Mov_r64_rm64) [R10,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 4d 8b 11
000ah mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000eh mov r11,[rdx]                 ; MOV(Mov_r64_rm64) [R11,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 1a
0011h mov esi,[rdx+8]               ; MOV(Mov_r32_rm32) [ESI,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 72 08
0014h xor edi,edi                   ; XOR(Xor_r32_rm32) [EDI,EDI]                          encoding(2 bytes) = 33 ff
0016h test esi,esi                  ; TEST(Test_rm32_r32) [ESI,ESI]                        encoding(2 bytes) = 85 f6
0018h jle short 0036h               ; JLE(Jle_rel8_64) [36h:jmp64]                         encoding(2 bytes) = 7e 1c
001ah cmp edi,r9d                   ; CMP(Cmp_r32_rm32) [EDI,R9D]                          encoding(3 bytes) = 41 3b f9
001dh jae short 0048h               ; JAE(Jae_rel8_64) [48h:jmp64]                         encoding(2 bytes) = 73 29
001fh movsxd rax,edi                ; MOVSXD(Movsxd_r64_rm32) [RAX,EDI]                    encoding(3 bytes) = 48 63 c7
0022h lea rbx,[r10+rax*4]           ; LEA(Lea_r64_m) [RBX,mem(Unknown,R10:br,DS:sr)]       encoding(4 bytes) = 49 8d 1c 82
0026h mov eax,[r11+rax*4]           ; MOV(Mov_r32_rm32) [EAX,mem(32u,R11:br,DS:sr)]        encoding(4 bytes) = 41 8b 04 83
002ah cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
002bh idiv r8d                      ; IDIV(Idiv_rm32) [R8D]                                encoding(3 bytes) = 41 f7 f8
002eh mov [rbx],edx                 ; MOV(Mov_rm32_r32) [mem(32u,RBX:br,DS:sr),EDX]        encoding(2 bytes) = 89 13
0030h inc edi                       ; INC(Inc_rm32) [EDI]                                  encoding(2 bytes) = ff c7
0032h cmp edi,esi                   ; CMP(Cmp_r32_rm32) [EDI,ESI]                          encoding(2 bytes) = 3b fe
0034h jl short 001ah                ; JL(Jl_rel8_64) [1Ah:jmp64]                           encoding(2 bytes) = 7c e4
0036h mov [rcx],r10                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R10]        encoding(3 bytes) = 4c 89 11
0039h mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
003dh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0040h add rsp,20h                   ; ADD(Add_rm64_imm8) [RSP,20h:imm64]                   encoding(4 bytes) = 48 83 c4 20
0044h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0045h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0046h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0047h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0048h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A4E00h:jmp64]                encoding(5 bytes) = e8 b3 4d 5a 5f
004dh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> modBytes => new byte[78]{0x57,0x56,0x53,0x48,0x83,0xEC,0x20,0x4D,0x8B,0x11,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x1A,0x8B,0x72,0x08,0x33,0xFF,0x85,0xF6,0x7E,0x1C,0x41,0x3B,0xF9,0x73,0x29,0x48,0x63,0xC7,0x49,0x8D,0x1C,0x82,0x41,0x8B,0x04,0x83,0x99,0x41,0xF7,0xF8,0x89,0x13,0xFF,0xC7,0x3B,0xFE,0x7C,0xE4,0x4C,0x89,0x11,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x20,0x5B,0x5E,0x5F,0xC3,0xE8,0xB3,0x4D,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<uint> mod(ReadOnlySpan<uint> lhs, uint rhs, Span<uint> dst)
; location: [7FFC872C0020h, 7FFC872C006Eh]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0003h sub rsp,20h                   ; SUB(Sub_rm64_imm8) [RSP,20h:imm64]                   encoding(4 bytes) = 48 83 ec 20
0007h mov r10,[r9]                  ; MOV(Mov_r64_rm64) [R10,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 4d 8b 11
000ah mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000eh mov r11,[rdx]                 ; MOV(Mov_r64_rm64) [R11,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 1a
0011h mov esi,[rdx+8]               ; MOV(Mov_r32_rm32) [ESI,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 72 08
0014h xor edi,edi                   ; XOR(Xor_r32_rm32) [EDI,EDI]                          encoding(2 bytes) = 33 ff
0016h test esi,esi                  ; TEST(Test_rm32_r32) [ESI,ESI]                        encoding(2 bytes) = 85 f6
0018h jle short 0037h               ; JLE(Jle_rel8_64) [37h:jmp64]                         encoding(2 bytes) = 7e 1d
001ah cmp edi,r9d                   ; CMP(Cmp_r32_rm32) [EDI,R9D]                          encoding(3 bytes) = 41 3b f9
001dh jae short 0049h               ; JAE(Jae_rel8_64) [49h:jmp64]                         encoding(2 bytes) = 73 2a
001fh movsxd rax,edi                ; MOVSXD(Movsxd_r64_rm32) [RAX,EDI]                    encoding(3 bytes) = 48 63 c7
0022h lea rbx,[r10+rax*4]           ; LEA(Lea_r64_m) [RBX,mem(Unknown,R10:br,DS:sr)]       encoding(4 bytes) = 49 8d 1c 82
0026h mov eax,[r11+rax*4]           ; MOV(Mov_r32_rm32) [EAX,mem(32u,R11:br,DS:sr)]        encoding(4 bytes) = 41 8b 04 83
002ah xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
002ch div r8d                       ; DIV(Div_rm32) [R8D]                                  encoding(3 bytes) = 41 f7 f0
002fh mov [rbx],edx                 ; MOV(Mov_rm32_r32) [mem(32u,RBX:br,DS:sr),EDX]        encoding(2 bytes) = 89 13
0031h inc edi                       ; INC(Inc_rm32) [EDI]                                  encoding(2 bytes) = ff c7
0033h cmp edi,esi                   ; CMP(Cmp_r32_rm32) [EDI,ESI]                          encoding(2 bytes) = 3b fe
0035h jl short 001ah                ; JL(Jl_rel8_64) [1Ah:jmp64]                           encoding(2 bytes) = 7c e3
0037h mov [rcx],r10                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R10]        encoding(3 bytes) = 4c 89 11
003ah mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
003eh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0041h add rsp,20h                   ; ADD(Add_rm64_imm8) [RSP,20h:imm64]                   encoding(4 bytes) = 48 83 c4 20
0045h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0046h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0047h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0048h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0049h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A4D90h:jmp64]                encoding(5 bytes) = e8 42 4d 5a 5f
004eh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> modBytes => new byte[79]{0x57,0x56,0x53,0x48,0x83,0xEC,0x20,0x4D,0x8B,0x11,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x1A,0x8B,0x72,0x08,0x33,0xFF,0x85,0xF6,0x7E,0x1D,0x41,0x3B,0xF9,0x73,0x2A,0x48,0x63,0xC7,0x49,0x8D,0x1C,0x82,0x41,0x8B,0x04,0x83,0x33,0xD2,0x41,0xF7,0xF0,0x89,0x13,0xFF,0xC7,0x3B,0xFE,0x7C,0xE3,0x4C,0x89,0x11,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x20,0x5B,0x5E,0x5F,0xC3,0xE8,0x42,0x4D,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<long> mod(ReadOnlySpan<long> lhs, long rhs, Span<long> dst)
; location: [7FFC872C0090h, 7FFC872C00DFh]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0003h sub rsp,20h                   ; SUB(Sub_rm64_imm8) [RSP,20h:imm64]                   encoding(4 bytes) = 48 83 ec 20
0007h mov r10,[r9]                  ; MOV(Mov_r64_rm64) [R10,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 4d 8b 11
000ah mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000eh mov r11,[rdx]                 ; MOV(Mov_r64_rm64) [R11,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 1a
0011h mov esi,[rdx+8]               ; MOV(Mov_r32_rm32) [ESI,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 72 08
0014h xor edi,edi                   ; XOR(Xor_r32_rm32) [EDI,EDI]                          encoding(2 bytes) = 33 ff
0016h test esi,esi                  ; TEST(Test_rm32_r32) [ESI,ESI]                        encoding(2 bytes) = 85 f6
0018h jle short 0038h               ; JLE(Jle_rel8_64) [38h:jmp64]                         encoding(2 bytes) = 7e 1e
001ah cmp edi,r9d                   ; CMP(Cmp_r32_rm32) [EDI,R9D]                          encoding(3 bytes) = 41 3b f9
001dh jae short 004ah               ; JAE(Jae_rel8_64) [4Ah:jmp64]                         encoding(2 bytes) = 73 2b
001fh movsxd rax,edi                ; MOVSXD(Movsxd_r64_rm32) [RAX,EDI]                    encoding(3 bytes) = 48 63 c7
0022h lea rbx,[r10+rax*8]           ; LEA(Lea_r64_m) [RBX,mem(Unknown,R10:br,DS:sr)]       encoding(4 bytes) = 49 8d 1c c2
0026h mov rax,[r11+rax*8]           ; MOV(Mov_r64_rm64) [RAX,mem(64u,R11:br,DS:sr)]        encoding(4 bytes) = 49 8b 04 c3
002ah cqo                           ; CQO(Cqo)                                             encoding(2 bytes) = 48 99
002ch idiv r8                       ; IDIV(Idiv_rm64) [R8]                                 encoding(3 bytes) = 49 f7 f8
002fh mov [rbx],rdx                 ; MOV(Mov_rm64_r64) [mem(64u,RBX:br,DS:sr),RDX]        encoding(3 bytes) = 48 89 13
0032h inc edi                       ; INC(Inc_rm32) [EDI]                                  encoding(2 bytes) = ff c7
0034h cmp edi,esi                   ; CMP(Cmp_r32_rm32) [EDI,ESI]                          encoding(2 bytes) = 3b fe
0036h jl short 001ah                ; JL(Jl_rel8_64) [1Ah:jmp64]                           encoding(2 bytes) = 7c e2
0038h mov [rcx],r10                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R10]        encoding(3 bytes) = 4c 89 11
003bh mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
003fh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0042h add rsp,20h                   ; ADD(Add_rm64_imm8) [RSP,20h:imm64]                   encoding(4 bytes) = 48 83 c4 20
0046h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0047h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0048h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0049h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
004ah call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A4D20h:jmp64]                encoding(5 bytes) = e8 d1 4c 5a 5f
004fh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> modBytes => new byte[80]{0x57,0x56,0x53,0x48,0x83,0xEC,0x20,0x4D,0x8B,0x11,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x1A,0x8B,0x72,0x08,0x33,0xFF,0x85,0xF6,0x7E,0x1E,0x41,0x3B,0xF9,0x73,0x2B,0x48,0x63,0xC7,0x49,0x8D,0x1C,0xC2,0x49,0x8B,0x04,0xC3,0x48,0x99,0x49,0xF7,0xF8,0x48,0x89,0x13,0xFF,0xC7,0x3B,0xFE,0x7C,0xE2,0x4C,0x89,0x11,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x20,0x5B,0x5E,0x5F,0xC3,0xE8,0xD1,0x4C,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<ulong> mod(ReadOnlySpan<ulong> lhs, ulong rhs, Span<ulong> dst)
; location: [7FFC872C0100h, 7FFC872C014Fh]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0003h sub rsp,20h                   ; SUB(Sub_rm64_imm8) [RSP,20h:imm64]                   encoding(4 bytes) = 48 83 ec 20
0007h mov r10,[r9]                  ; MOV(Mov_r64_rm64) [R10,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 4d 8b 11
000ah mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000eh mov r11,[rdx]                 ; MOV(Mov_r64_rm64) [R11,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 1a
0011h mov esi,[rdx+8]               ; MOV(Mov_r32_rm32) [ESI,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 72 08
0014h xor edi,edi                   ; XOR(Xor_r32_rm32) [EDI,EDI]                          encoding(2 bytes) = 33 ff
0016h test esi,esi                  ; TEST(Test_rm32_r32) [ESI,ESI]                        encoding(2 bytes) = 85 f6
0018h jle short 0038h               ; JLE(Jle_rel8_64) [38h:jmp64]                         encoding(2 bytes) = 7e 1e
001ah cmp edi,r9d                   ; CMP(Cmp_r32_rm32) [EDI,R9D]                          encoding(3 bytes) = 41 3b f9
001dh jae short 004ah               ; JAE(Jae_rel8_64) [4Ah:jmp64]                         encoding(2 bytes) = 73 2b
001fh movsxd rax,edi                ; MOVSXD(Movsxd_r64_rm32) [RAX,EDI]                    encoding(3 bytes) = 48 63 c7
0022h lea rbx,[r10+rax*8]           ; LEA(Lea_r64_m) [RBX,mem(Unknown,R10:br,DS:sr)]       encoding(4 bytes) = 49 8d 1c c2
0026h mov rax,[r11+rax*8]           ; MOV(Mov_r64_rm64) [RAX,mem(64u,R11:br,DS:sr)]        encoding(4 bytes) = 49 8b 04 c3
002ah xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
002ch div r8                        ; DIV(Div_rm64) [R8]                                   encoding(3 bytes) = 49 f7 f0
002fh mov [rbx],rdx                 ; MOV(Mov_rm64_r64) [mem(64u,RBX:br,DS:sr),RDX]        encoding(3 bytes) = 48 89 13
0032h inc edi                       ; INC(Inc_rm32) [EDI]                                  encoding(2 bytes) = ff c7
0034h cmp edi,esi                   ; CMP(Cmp_r32_rm32) [EDI,ESI]                          encoding(2 bytes) = 3b fe
0036h jl short 001ah                ; JL(Jl_rel8_64) [1Ah:jmp64]                           encoding(2 bytes) = 7c e2
0038h mov [rcx],r10                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R10]        encoding(3 bytes) = 4c 89 11
003bh mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
003fh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0042h add rsp,20h                   ; ADD(Add_rm64_imm8) [RSP,20h:imm64]                   encoding(4 bytes) = 48 83 c4 20
0046h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0047h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0048h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0049h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
004ah call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A4CB0h:jmp64]                encoding(5 bytes) = e8 61 4c 5a 5f
004fh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> modBytes => new byte[80]{0x57,0x56,0x53,0x48,0x83,0xEC,0x20,0x4D,0x8B,0x11,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x1A,0x8B,0x72,0x08,0x33,0xFF,0x85,0xF6,0x7E,0x1E,0x41,0x3B,0xF9,0x73,0x2B,0x48,0x63,0xC7,0x49,0x8D,0x1C,0xC2,0x49,0x8B,0x04,0xC3,0x33,0xD2,0x49,0xF7,0xF0,0x48,0x89,0x13,0xFF,0xC7,0x3B,0xFE,0x7C,0xE2,0x4C,0x89,0x11,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x20,0x5B,0x5E,0x5F,0xC3,0xE8,0x61,0x4C,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: sbyte mul(sbyte lhs, sbyte rhs)
; location: [7FFC872C0170h, 7FFC872C0184h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cl                  ; MOVSX(Movsx_r64_rm8) [RAX,CL]                        encoding(4 bytes) = 48 0f be c1
0009h movsx rdx,dl                  ; MOVSX(Movsx_r64_rm8) [RDX,DL]                        encoding(4 bytes) = 48 0f be d2
000dh imul eax,edx                  ; IMUL(Imul_r32_rm32) [EAX,EDX]                        encoding(3 bytes) = 0f af c2
0010h movsx rax,al                  ; MOVSX(Movsx_r64_rm8) [RAX,AL]                        encoding(4 bytes) = 48 0f be c0
0014h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> mulBytes => new byte[21]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBE,0xC1,0x48,0x0F,0xBE,0xD2,0x0F,0xAF,0xC2,0x48,0x0F,0xBE,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: byte mul(byte lhs, byte rhs)
; location: [7FFC872C01A0h, 7FFC872C01B1h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0008h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
000bh imul eax,edx                  ; IMUL(Imul_r32_rm32) [EAX,EDX]                        encoding(3 bytes) = 0f af c2
000eh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> mulBytes => new byte[18]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC1,0x0F,0xB6,0xD2,0x0F,0xAF,0xC2,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: short idiv(short lhs, short rhs)
; location: [7FFC872C01D0h, 7FFC872C01E4h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cx                  ; MOVSX(Movsx_r64_rm16) [RAX,CX]                       encoding(4 bytes) = 48 0f bf c1
0009h movsx rcx,dx                  ; MOVSX(Movsx_r64_rm16) [RCX,DX]                       encoding(4 bytes) = 48 0f bf ca
000dh cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
000eh idiv ecx                      ; IDIV(Idiv_rm32) [ECX]                                encoding(2 bytes) = f7 f9
0010h movsx rax,ax                  ; MOVSX(Movsx_r64_rm16) [RAX,AX]                       encoding(4 bytes) = 48 0f bf c0
0014h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> idivBytes => new byte[21]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBF,0xC1,0x48,0x0F,0xBF,0xCA,0x99,0xF7,0xF9,0x48,0x0F,0xBF,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ushort idiv(ushort lhs, ushort rhs)
; location: [7FFC872C0200h, 7FFC872C0211h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cx                  ; MOVZX(Movzx_r32_rm16) [EAX,CX]                       encoding(3 bytes) = 0f b7 c1
0008h movzx ecx,dx                  ; MOVZX(Movzx_r32_rm16) [ECX,DX]                       encoding(3 bytes) = 0f b7 ca
000bh cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
000ch idiv ecx                      ; IDIV(Idiv_rm32) [ECX]                                encoding(2 bytes) = f7 f9
000eh movzx eax,ax                  ; MOVZX(Movzx_r32_rm16) [EAX,AX]                       encoding(3 bytes) = 0f b7 c0
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> idivBytes => new byte[18]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB7,0xC1,0x0F,0xB7,0xCA,0x99,0xF7,0xF9,0x0F,0xB7,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: int idiv(int lhs, int rhs)
; location: [7FFC872C0230h, 7FFC872C023Eh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov r8d,edx                   ; MOV(Mov_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 8b c2
0008h mov eax,ecx                   ; MOV(Mov_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 8b c1
000ah cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
000bh idiv r8d                      ; IDIV(Idiv_rm32) [R8D]                                encoding(3 bytes) = 41 f7 f8
000eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> idivBytes => new byte[15]{0x0F,0x1F,0x44,0x00,0x00,0x44,0x8B,0xC2,0x8B,0xC1,0x99,0x41,0xF7,0xF8,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: uint idiv(uint lhs, uint rhs)
; location: [7FFC872C0250h, 7FFC872C025Fh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov r8d,edx                   ; MOV(Mov_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 8b c2
0008h mov eax,ecx                   ; MOV(Mov_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 8b c1
000ah xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
000ch div r8d                       ; DIV(Div_rm32) [R8D]                                  encoding(3 bytes) = 41 f7 f0
000fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> idivBytes => new byte[16]{0x0F,0x1F,0x44,0x00,0x00,0x44,0x8B,0xC2,0x8B,0xC1,0x33,0xD2,0x41,0xF7,0xF0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: long idiv(long lhs, long rhs)
; location: [7FFC872C0270h, 7FFC872C0280h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov r8,rdx                    ; MOV(Mov_r64_rm64) [R8,RDX]                           encoding(3 bytes) = 4c 8b c2
0008h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000bh cqo                           ; CQO(Cqo)                                             encoding(2 bytes) = 48 99
000dh idiv r8                       ; IDIV(Idiv_rm64) [R8]                                 encoding(3 bytes) = 49 f7 f8
0010h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> idivBytes => new byte[17]{0x0F,0x1F,0x44,0x00,0x00,0x4C,0x8B,0xC2,0x48,0x8B,0xC1,0x48,0x99,0x49,0xF7,0xF8,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ulong idiv(ulong lhs, ulong rhs)
; location: [7FFC872C02A0h, 7FFC872C02B0h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov r8,rdx                    ; MOV(Mov_r64_rm64) [R8,RDX]                           encoding(3 bytes) = 4c 8b c2
0008h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000bh xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
000dh div r8                        ; DIV(Div_rm64) [R8]                                   encoding(3 bytes) = 49 f7 f0
0010h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> idivBytes => new byte[17]{0x0F,0x1F,0x44,0x00,0x00,0x4C,0x8B,0xC2,0x48,0x8B,0xC1,0x33,0xD2,0x49,0xF7,0xF0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref sbyte idiv(ref sbyte lhs, in sbyte rhs)
; location: [7FFC872C02D0h, 7FFC872C02E6h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,byte ptr [rcx]      ; MOVSX(Movsx_r64_rm8) [RAX,mem(8i,RCX:br,DS:sr)]      encoding(4 bytes) = 48 0f be 01
0009h movsx r8,byte ptr [rdx]       ; MOVSX(Movsx_r64_rm8) [R8,mem(8i,RDX:br,DS:sr)]       encoding(4 bytes) = 4c 0f be 02
000dh cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
000eh idiv r8d                      ; IDIV(Idiv_rm32) [R8D]                                encoding(3 bytes) = 41 f7 f8
0011h mov [rcx],al                  ; MOV(Mov_rm8_r8) [mem(8u,RCX:br,DS:sr),AL]            encoding(2 bytes) = 88 01
0013h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0016h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> idivBytes => new byte[23]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBE,0x01,0x4C,0x0F,0xBE,0x02,0x99,0x41,0xF7,0xF8,0x88,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref byte idiv(ref byte lhs, in byte rhs)
; location: [7FFC872C0300h, 7FFC872C0315h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,byte ptr [rcx]      ; MOVZX(Movzx_r32_rm8) [EAX,mem(8u,RCX:br,DS:sr)]      encoding(3 bytes) = 0f b6 01
0008h movzx r8d,byte ptr [rdx]      ; MOVZX(Movzx_r32_rm8) [R8D,mem(8u,RDX:br,DS:sr)]      encoding(4 bytes) = 44 0f b6 02
000ch cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
000dh idiv r8d                      ; IDIV(Idiv_rm32) [R8D]                                encoding(3 bytes) = 41 f7 f8
0010h mov [rcx],al                  ; MOV(Mov_rm8_r8) [mem(8u,RCX:br,DS:sr),AL]            encoding(2 bytes) = 88 01
0012h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0015h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> idivBytes => new byte[22]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0x01,0x44,0x0F,0xB6,0x02,0x99,0x41,0xF7,0xF8,0x88,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref short idiv(ref short lhs, in short rhs)
; location: [7FFC872C0330h, 7FFC872C0347h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,word ptr [rcx]      ; MOVSX(Movsx_r64_rm16) [RAX,mem(16i,RCX:br,DS:sr)]    encoding(4 bytes) = 48 0f bf 01
0009h movsx r8,word ptr [rdx]       ; MOVSX(Movsx_r64_rm16) [R8,mem(16i,RDX:br,DS:sr)]     encoding(4 bytes) = 4c 0f bf 02
000dh cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
000eh idiv r8d                      ; IDIV(Idiv_rm32) [R8D]                                encoding(3 bytes) = 41 f7 f8
0011h mov [rcx],ax                  ; MOV(Mov_rm16_r16) [mem(16u,RCX:br,DS:sr),AX]         encoding(3 bytes) = 66 89 01
0014h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0017h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> idivBytes => new byte[24]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBF,0x01,0x4C,0x0F,0xBF,0x02,0x99,0x41,0xF7,0xF8,0x66,0x89,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref ushort idiv(ref ushort lhs, in ushort rhs)
; location: [7FFC872C0360h, 7FFC872C0376h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,word ptr [rcx]      ; MOVZX(Movzx_r32_rm16) [EAX,mem(16u,RCX:br,DS:sr)]    encoding(3 bytes) = 0f b7 01
0008h movzx r8d,word ptr [rdx]      ; MOVZX(Movzx_r32_rm16) [R8D,mem(16u,RDX:br,DS:sr)]    encoding(4 bytes) = 44 0f b7 02
000ch cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
000dh idiv r8d                      ; IDIV(Idiv_rm32) [R8D]                                encoding(3 bytes) = 41 f7 f8
0010h mov [rcx],ax                  ; MOV(Mov_rm16_r16) [mem(16u,RCX:br,DS:sr),AX]         encoding(3 bytes) = 66 89 01
0013h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0016h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> idivBytes => new byte[23]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB7,0x01,0x44,0x0F,0xB7,0x02,0x99,0x41,0xF7,0xF8,0x66,0x89,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref int idiv(ref int lhs, in int rhs)
; location: [7FFC872C0390h, 7FFC872C03A3h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov r8,rdx                    ; MOV(Mov_r64_rm64) [R8,RDX]                           encoding(3 bytes) = 4c 8b c2
0008h mov eax,[rcx]                 ; MOV(Mov_r32_rm32) [EAX,mem(32u,RCX:br,DS:sr)]        encoding(2 bytes) = 8b 01
000ah cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
000bh idiv dword ptr [r8]           ; IDIV(Idiv_rm32) [mem(32i,R8:br,DS:sr)]               encoding(3 bytes) = 41 f7 38
000eh mov [rcx],eax                 ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EAX]        encoding(2 bytes) = 89 01
0010h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> idivBytes => new byte[20]{0x0F,0x1F,0x44,0x00,0x00,0x4C,0x8B,0xC2,0x8B,0x01,0x99,0x41,0xF7,0x38,0x89,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref uint idiv(ref uint lhs, in uint rhs)
; location: [7FFC872C03C0h, 7FFC872C03D4h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov r8,rdx                    ; MOV(Mov_r64_rm64) [R8,RDX]                           encoding(3 bytes) = 4c 8b c2
0008h mov eax,[rcx]                 ; MOV(Mov_r32_rm32) [EAX,mem(32u,RCX:br,DS:sr)]        encoding(2 bytes) = 8b 01
000ah xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
000ch div dword ptr [r8]            ; DIV(Div_rm32) [mem(32u,R8:br,DS:sr)]                 encoding(3 bytes) = 41 f7 30
000fh mov [rcx],eax                 ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EAX]        encoding(2 bytes) = 89 01
0011h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0014h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> idivBytes => new byte[21]{0x0F,0x1F,0x44,0x00,0x00,0x4C,0x8B,0xC2,0x8B,0x01,0x33,0xD2,0x41,0xF7,0x30,0x89,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref long idiv(ref long lhs, in long rhs)
; location: [7FFC872C03F0h, 7FFC872C0406h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov r8,rdx                    ; MOV(Mov_r64_rm64) [R8,RDX]                           encoding(3 bytes) = 4c 8b c2
0008h mov rax,[rcx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 01
000bh cqo                           ; CQO(Cqo)                                             encoding(2 bytes) = 48 99
000dh idiv qword ptr [r8]           ; IDIV(Idiv_rm64) [mem(64i,R8:br,DS:sr)]               encoding(3 bytes) = 49 f7 38
0010h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0013h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0016h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> idivBytes => new byte[23]{0x0F,0x1F,0x44,0x00,0x00,0x4C,0x8B,0xC2,0x48,0x8B,0x01,0x48,0x99,0x49,0xF7,0x38,0x48,0x89,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref ulong idiv(ref ulong lhs, in ulong rhs)
; location: [7FFC872C0420h, 7FFC872C0436h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov r8,rdx                    ; MOV(Mov_r64_rm64) [R8,RDX]                           encoding(3 bytes) = 4c 8b c2
0008h mov rax,[rcx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 01
000bh xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
000dh div qword ptr [r8]            ; DIV(Div_rm64) [mem(64u,R8:br,DS:sr)]                 encoding(3 bytes) = 49 f7 30
0010h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0013h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0016h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> idivBytes => new byte[23]{0x0F,0x1F,0x44,0x00,0x00,0x4C,0x8B,0xC2,0x48,0x8B,0x01,0x33,0xD2,0x49,0xF7,0x30,0x48,0x89,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<sbyte> idiv(ReadOnlySpan<sbyte> lhs, ReadOnlySpan<sbyte> rhs, Span<sbyte> dst)
; location: [7FFC872C0450h, 7FFC872C0536h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0005h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0006h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0007h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0008h sub rsp,38h                   ; SUB(Sub_rm64_imm8) [RSP,38h:imm64]                   encoding(4 bytes) = 48 83 ec 38
000ch mov r10,[r9]                  ; MOV(Mov_r64_rm64) [R10,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 4d 8b 11
000fh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
0013h mov r11,[r8]                  ; MOV(Mov_r64_rm64) [R11,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 4d 8b 18
0016h mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
001ah mov rsi,[rdx]                 ; MOV(Mov_r64_rm64) [RSI,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 32
001dh mov edi,[rdx+8]               ; MOV(Mov_r32_rm32) [EDI,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 7a 08
0020h mov ebx,6Fh                   ; MOV(Mov_r32_imm32) [EBX,6fh:imm32]                   encoding(5 bytes) = bb 6f 00 00 00
0025h mov ebp,1                     ; MOV(Mov_r32_imm32) [EBP,1h:imm32]                    encoding(5 bytes) = bd 01 00 00 00
002ah mov r14d,edi                  ; MOV(Mov_r32_rm32) [R14D,EDI]                         encoding(3 bytes) = 44 8b f7
002dh mov r15d,r8d                  ; MOV(Mov_r32_rm32) [R15D,R8D]                         encoding(3 bytes) = 45 8b f8
0030h cmp edi,r8d                   ; CMP(Cmp_r32_rm32) [EDI,R8D]                          encoding(3 bytes) = 41 3b f8
0033h jne short 0086h               ; JNE(Jne_rel8_64) [86h:jmp64]                         encoding(2 bytes) = 75 51
0035h xor r14d,r14d                 ; XOR(Xor_r32_rm32) [R14D,R14D]                        encoding(3 bytes) = 45 33 f6
0038h test edi,edi                  ; TEST(Test_rm32_r32) [EDI,EDI]                        encoding(2 bytes) = 85 ff
003ah jle short 006fh               ; JLE(Jle_rel8_64) [6Fh:jmp64]                         encoding(2 bytes) = 7e 33
003ch cmp r14d,r9d                  ; CMP(Cmp_r32_rm32) [R14D,R9D]                         encoding(3 bytes) = 45 3b f1
003fh jae near ptr 00e1h            ; JAE(Jae_rel32_64) [E1h:jmp64]                        encoding(6 bytes) = 0f 83 9c 00 00 00
0045h movsxd rax,r14d               ; MOVSXD(Movsxd_r64_rm32) [RAX,R14D]                   encoding(3 bytes) = 49 63 c6
0048h lea r15,[r10+rax]             ; LEA(Lea_r64_m) [R15,mem(Unknown,R10:br,DS:sr)]       encoding(4 bytes) = 4d 8d 3c 02
004ch movsx rdx,byte ptr [rsi+rax]  ; MOVSX(Movsx_r64_rm8) [RDX,mem(8i,RSI:br,DS:sr)]      encoding(5 bytes) = 48 0f be 14 06
0051h cmp r14d,r8d                  ; CMP(Cmp_r32_rm32) [R14D,R8D]                         encoding(3 bytes) = 45 3b f0
0054h jae near ptr 00e1h            ; JAE(Jae_rel32_64) [E1h:jmp64]                        encoding(6 bytes) = 0f 83 87 00 00 00
005ah movsx rbp,byte ptr [r11+rax]  ; MOVSX(Movsx_r64_rm8) [RBP,mem(8i,R11:br,DS:sr)]      encoding(5 bytes) = 49 0f be 2c 03
005fh mov eax,edx                   ; MOV(Mov_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 8b c2
0061h cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
0062h idiv ebp                      ; IDIV(Idiv_rm32) [EBP]                                encoding(2 bytes) = f7 fd
0064h mov [r15],al                  ; MOV(Mov_rm8_r8) [mem(8u,R15:br,DS:sr),AL]            encoding(3 bytes) = 41 88 07
0067h inc r14d                      ; INC(Inc_rm32) [R14D]                                 encoding(3 bytes) = 41 ff c6
006ah cmp r14d,edi                  ; CMP(Cmp_r32_rm32) [R14D,EDI]                         encoding(3 bytes) = 44 3b f7
006dh jl short 003ch                ; JL(Jl_rel8_64) [3Ch:jmp64]                           encoding(2 bytes) = 7c cd
006fh mov [rcx],r10                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R10]        encoding(3 bytes) = 4c 89 11
0072h mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0076h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0079h add rsp,38h                   ; ADD(Add_rm64_imm8) [RSP,38h:imm64]                   encoding(4 bytes) = 48 83 c4 38
007dh pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
007eh pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
007fh pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0080h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0081h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0083h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
0085h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0086h mov ecx,0ACBh                 ; MOV(Mov_r32_imm32) [ECX,acbh:imm32]                  encoding(5 bytes) = b9 cb 0a 00 00
008bh mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0095h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F4734D0h:jmp64]                encoding(5 bytes) = e8 36 34 47 5f
009ah mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
009dh mov ecx,0AD5h                 ; MOV(Mov_r32_imm32) [ECX,ad5h:imm32]                  encoding(5 bytes) = b9 d5 0a 00 00
00a2h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00ach call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F4734D0h:jmp64]                encoding(5 bytes) = e8 1f 34 47 5f
00b1h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00b4h lea r8,[rsp+30h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 30
00b9h mov [r8],bpl                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),BPL]            encoding(3 bytes) = 41 88 28
00bch mov [r8+4],ebx                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBX]         encoding(4 bytes) = 41 89 58 04
00c0h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00c3h mov ecx,r14d                  ; MOV(Mov_r32_rm32) [ECX,R14D]                         encoding(3 bytes) = 41 8b ce
00c6h mov edx,r15d                  ; MOV(Mov_r32_rm32) [EDX,R15D]                         encoding(3 bytes) = 41 8b d7
00c9h mov rax,[rsp+30h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 30
00ceh mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00d3h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFC9DB28h:jmp64]        encoding(5 bytes) = e8 50 da c9 ff
00d8h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00dbh call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F456500h:jmp64]                encoding(5 bytes) = e8 20 64 45 5f
00e0h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00e1h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A4960h:jmp64]                encoding(5 bytes) = e8 7a 48 5a 5f
00e6h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> idivBytes => new byte[231]{0x41,0x57,0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x38,0x4D,0x8B,0x11,0x45,0x8B,0x49,0x08,0x4D,0x8B,0x18,0x45,0x8B,0x40,0x08,0x48,0x8B,0x32,0x8B,0x7A,0x08,0xBB,0x6F,0x00,0x00,0x00,0xBD,0x01,0x00,0x00,0x00,0x44,0x8B,0xF7,0x45,0x8B,0xF8,0x41,0x3B,0xF8,0x75,0x51,0x45,0x33,0xF6,0x85,0xFF,0x7E,0x33,0x45,0x3B,0xF1,0x0F,0x83,0x9C,0x00,0x00,0x00,0x49,0x63,0xC6,0x4D,0x8D,0x3C,0x02,0x48,0x0F,0xBE,0x14,0x06,0x45,0x3B,0xF0,0x0F,0x83,0x87,0x00,0x00,0x00,0x49,0x0F,0xBE,0x2C,0x03,0x8B,0xC2,0x99,0xF7,0xFD,0x41,0x88,0x07,0x41,0xFF,0xC6,0x44,0x3B,0xF7,0x7C,0xCD,0x4C,0x89,0x11,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x38,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0xCB,0x0A,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x36,0x34,0x47,0x5F,0x48,0x8B,0xF0,0xB9,0xD5,0x0A,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x1F,0x34,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x30,0x41,0x88,0x28,0x41,0x89,0x58,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCE,0x41,0x8B,0xD7,0x48,0x8B,0x44,0x24,0x30,0x48,0x89,0x44,0x24,0x20,0xE8,0x50,0xDA,0xC9,0xFF,0x48,0x8B,0xC8,0xE8,0x20,0x64,0x45,0x5F,0xCC,0xE8,0x7A,0x48,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<byte> idiv(ReadOnlySpan<byte> lhs, ReadOnlySpan<byte> rhs, Span<byte> dst)
; location: [7FFC872C0560h, 7FFC872C0645h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0005h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0006h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0007h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0008h sub rsp,38h                   ; SUB(Sub_rm64_imm8) [RSP,38h:imm64]                   encoding(4 bytes) = 48 83 ec 38
000ch mov r10,[r9]                  ; MOV(Mov_r64_rm64) [R10,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 4d 8b 11
000fh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
0013h mov r11,[r8]                  ; MOV(Mov_r64_rm64) [R11,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 4d 8b 18
0016h mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
001ah mov rsi,[rdx]                 ; MOV(Mov_r64_rm64) [RSI,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 32
001dh mov edi,[rdx+8]               ; MOV(Mov_r32_rm32) [EDI,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 7a 08
0020h mov ebx,77h                   ; MOV(Mov_r32_imm32) [EBX,77h:imm32]                   encoding(5 bytes) = bb 77 00 00 00
0025h mov ebp,1                     ; MOV(Mov_r32_imm32) [EBP,1h:imm32]                    encoding(5 bytes) = bd 01 00 00 00
002ah mov r14d,edi                  ; MOV(Mov_r32_rm32) [R14D,EDI]                         encoding(3 bytes) = 44 8b f7
002dh mov r15d,r8d                  ; MOV(Mov_r32_rm32) [R15D,R8D]                         encoding(3 bytes) = 45 8b f8
0030h cmp edi,r8d                   ; CMP(Cmp_r32_rm32) [EDI,R8D]                          encoding(3 bytes) = 41 3b f8
0033h jne short 0085h               ; JNE(Jne_rel8_64) [85h:jmp64]                         encoding(2 bytes) = 75 50
0035h xor r14d,r14d                 ; XOR(Xor_r32_rm32) [R14D,R14D]                        encoding(3 bytes) = 45 33 f6
0038h test edi,edi                  ; TEST(Test_rm32_r32) [EDI,EDI]                        encoding(2 bytes) = 85 ff
003ah jle short 006eh               ; JLE(Jle_rel8_64) [6Eh:jmp64]                         encoding(2 bytes) = 7e 32
003ch cmp r14d,r9d                  ; CMP(Cmp_r32_rm32) [R14D,R9D]                         encoding(3 bytes) = 45 3b f1
003fh jae near ptr 00e0h            ; JAE(Jae_rel32_64) [E0h:jmp64]                        encoding(6 bytes) = 0f 83 9b 00 00 00
0045h movsxd rax,r14d               ; MOVSXD(Movsxd_r64_rm32) [RAX,R14D]                   encoding(3 bytes) = 49 63 c6
0048h lea r15,[r10+rax]             ; LEA(Lea_r64_m) [R15,mem(Unknown,R10:br,DS:sr)]       encoding(4 bytes) = 4d 8d 3c 02
004ch movzx edx,byte ptr [rsi+rax]  ; MOVZX(Movzx_r32_rm8) [EDX,mem(8u,RSI:br,DS:sr)]      encoding(4 bytes) = 0f b6 14 06
0050h cmp r14d,r8d                  ; CMP(Cmp_r32_rm32) [R14D,R8D]                         encoding(3 bytes) = 45 3b f0
0053h jae near ptr 00e0h            ; JAE(Jae_rel32_64) [E0h:jmp64]                        encoding(6 bytes) = 0f 83 87 00 00 00
0059h movzx ebp,byte ptr [r11+rax]  ; MOVZX(Movzx_r32_rm8) [EBP,mem(8u,R11:br,DS:sr)]      encoding(5 bytes) = 41 0f b6 2c 03
005eh mov eax,edx                   ; MOV(Mov_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 8b c2
0060h cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
0061h idiv ebp                      ; IDIV(Idiv_rm32) [EBP]                                encoding(2 bytes) = f7 fd
0063h mov [r15],al                  ; MOV(Mov_rm8_r8) [mem(8u,R15:br,DS:sr),AL]            encoding(3 bytes) = 41 88 07
0066h inc r14d                      ; INC(Inc_rm32) [R14D]                                 encoding(3 bytes) = 41 ff c6
0069h cmp r14d,edi                  ; CMP(Cmp_r32_rm32) [R14D,EDI]                         encoding(3 bytes) = 44 3b f7
006ch jl short 003ch                ; JL(Jl_rel8_64) [3Ch:jmp64]                           encoding(2 bytes) = 7c ce
006eh mov [rcx],r10                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R10]        encoding(3 bytes) = 4c 89 11
0071h mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0075h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0078h add rsp,38h                   ; ADD(Add_rm64_imm8) [RSP,38h:imm64]                   encoding(4 bytes) = 48 83 c4 38
007ch pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
007dh pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
007eh pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
007fh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0080h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0082h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
0084h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0085h mov ecx,0ACBh                 ; MOV(Mov_r32_imm32) [ECX,acbh:imm32]                  encoding(5 bytes) = b9 cb 0a 00 00
008ah mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0094h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F4733C0h:jmp64]                encoding(5 bytes) = e8 27 33 47 5f
0099h mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
009ch mov ecx,0AD5h                 ; MOV(Mov_r32_imm32) [ECX,ad5h:imm32]                  encoding(5 bytes) = b9 d5 0a 00 00
00a1h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00abh call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F4733C0h:jmp64]                encoding(5 bytes) = e8 10 33 47 5f
00b0h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00b3h lea r8,[rsp+30h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 30
00b8h mov [r8],bpl                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),BPL]            encoding(3 bytes) = 41 88 28
00bbh mov [r8+4],ebx                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBX]         encoding(4 bytes) = 41 89 58 04
00bfh mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00c2h mov ecx,r14d                  ; MOV(Mov_r32_rm32) [ECX,R14D]                         encoding(3 bytes) = 41 8b ce
00c5h mov edx,r15d                  ; MOV(Mov_r32_rm32) [EDX,R15D]                         encoding(3 bytes) = 41 8b d7
00c8h mov rax,[rsp+30h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 30
00cdh mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00d2h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFC9DA18h:jmp64]        encoding(5 bytes) = e8 41 d9 c9 ff
00d7h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00dah call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F4563F0h:jmp64]                encoding(5 bytes) = e8 11 63 45 5f
00dfh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00e0h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A4850h:jmp64]                encoding(5 bytes) = e8 6b 47 5a 5f
00e5h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> idivBytes => new byte[230]{0x41,0x57,0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x38,0x4D,0x8B,0x11,0x45,0x8B,0x49,0x08,0x4D,0x8B,0x18,0x45,0x8B,0x40,0x08,0x48,0x8B,0x32,0x8B,0x7A,0x08,0xBB,0x77,0x00,0x00,0x00,0xBD,0x01,0x00,0x00,0x00,0x44,0x8B,0xF7,0x45,0x8B,0xF8,0x41,0x3B,0xF8,0x75,0x50,0x45,0x33,0xF6,0x85,0xFF,0x7E,0x32,0x45,0x3B,0xF1,0x0F,0x83,0x9B,0x00,0x00,0x00,0x49,0x63,0xC6,0x4D,0x8D,0x3C,0x02,0x0F,0xB6,0x14,0x06,0x45,0x3B,0xF0,0x0F,0x83,0x87,0x00,0x00,0x00,0x41,0x0F,0xB6,0x2C,0x03,0x8B,0xC2,0x99,0xF7,0xFD,0x41,0x88,0x07,0x41,0xFF,0xC6,0x44,0x3B,0xF7,0x7C,0xCE,0x4C,0x89,0x11,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x38,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0xCB,0x0A,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x27,0x33,0x47,0x5F,0x48,0x8B,0xF0,0xB9,0xD5,0x0A,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x10,0x33,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x30,0x41,0x88,0x28,0x41,0x89,0x58,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCE,0x41,0x8B,0xD7,0x48,0x8B,0x44,0x24,0x30,0x48,0x89,0x44,0x24,0x20,0xE8,0x41,0xD9,0xC9,0xFF,0x48,0x8B,0xC8,0xE8,0x11,0x63,0x45,0x5F,0xCC,0xE8,0x6B,0x47,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<short> idiv(ReadOnlySpan<short> lhs, ReadOnlySpan<short> rhs, Span<short> dst)
; location: [7FFC872C0670h, 7FFC872C0757h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0005h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0006h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0007h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0008h sub rsp,38h                   ; SUB(Sub_rm64_imm8) [RSP,38h:imm64]                   encoding(4 bytes) = 48 83 ec 38
000ch mov r10,[r9]                  ; MOV(Mov_r64_rm64) [R10,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 4d 8b 11
000fh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
0013h mov r11,[r8]                  ; MOV(Mov_r64_rm64) [R11,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 4d 8b 18
0016h mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
001ah mov rsi,[rdx]                 ; MOV(Mov_r64_rm64) [RSI,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 32
001dh mov edi,[rdx+8]               ; MOV(Mov_r32_rm32) [EDI,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 7a 08
0020h mov ebx,7Fh                   ; MOV(Mov_r32_imm32) [EBX,7fh:imm32]                   encoding(5 bytes) = bb 7f 00 00 00
0025h mov ebp,1                     ; MOV(Mov_r32_imm32) [EBP,1h:imm32]                    encoding(5 bytes) = bd 01 00 00 00
002ah mov r14d,edi                  ; MOV(Mov_r32_rm32) [R14D,EDI]                         encoding(3 bytes) = 44 8b f7
002dh mov r15d,r8d                  ; MOV(Mov_r32_rm32) [R15D,R8D]                         encoding(3 bytes) = 45 8b f8
0030h cmp edi,r8d                   ; CMP(Cmp_r32_rm32) [EDI,R8D]                          encoding(3 bytes) = 41 3b f8
0033h jne short 0087h               ; JNE(Jne_rel8_64) [87h:jmp64]                         encoding(2 bytes) = 75 52
0035h xor r14d,r14d                 ; XOR(Xor_r32_rm32) [R14D,R14D]                        encoding(3 bytes) = 45 33 f6
0038h test edi,edi                  ; TEST(Test_rm32_r32) [EDI,EDI]                        encoding(2 bytes) = 85 ff
003ah jle short 0070h               ; JLE(Jle_rel8_64) [70h:jmp64]                         encoding(2 bytes) = 7e 34
003ch cmp r14d,r9d                  ; CMP(Cmp_r32_rm32) [R14D,R9D]                         encoding(3 bytes) = 45 3b f1
003fh jae near ptr 00e2h            ; JAE(Jae_rel32_64) [E2h:jmp64]                        encoding(6 bytes) = 0f 83 9d 00 00 00
0045h movsxd rax,r14d               ; MOVSXD(Movsxd_r64_rm32) [RAX,R14D]                   encoding(3 bytes) = 49 63 c6
0048h lea r15,[r10+rax*2]           ; LEA(Lea_r64_m) [R15,mem(Unknown,R10:br,DS:sr)]       encoding(4 bytes) = 4d 8d 3c 42
004ch movsx rdx,word ptr [rsi+rax*2]; MOVSX(Movsx_r64_rm16) [RDX,mem(16i,RSI:br,DS:sr)]    encoding(5 bytes) = 48 0f bf 14 46
0051h cmp r14d,r8d                  ; CMP(Cmp_r32_rm32) [R14D,R8D]                         encoding(3 bytes) = 45 3b f0
0054h jae near ptr 00e2h            ; JAE(Jae_rel32_64) [E2h:jmp64]                        encoding(6 bytes) = 0f 83 88 00 00 00
005ah movsx rbp,word ptr [r11+rax*2]; MOVSX(Movsx_r64_rm16) [RBP,mem(16i,R11:br,DS:sr)]    encoding(5 bytes) = 49 0f bf 2c 43
005fh mov eax,edx                   ; MOV(Mov_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 8b c2
0061h cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
0062h idiv ebp                      ; IDIV(Idiv_rm32) [EBP]                                encoding(2 bytes) = f7 fd
0064h mov [r15],ax                  ; MOV(Mov_rm16_r16) [mem(16u,R15:br,DS:sr),AX]         encoding(4 bytes) = 66 41 89 07
0068h inc r14d                      ; INC(Inc_rm32) [R14D]                                 encoding(3 bytes) = 41 ff c6
006bh cmp r14d,edi                  ; CMP(Cmp_r32_rm32) [R14D,EDI]                         encoding(3 bytes) = 44 3b f7
006eh jl short 003ch                ; JL(Jl_rel8_64) [3Ch:jmp64]                           encoding(2 bytes) = 7c cc
0070h mov [rcx],r10                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R10]        encoding(3 bytes) = 4c 89 11
0073h mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0077h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
007ah add rsp,38h                   ; ADD(Add_rm64_imm8) [RSP,38h:imm64]                   encoding(4 bytes) = 48 83 c4 38
007eh pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
007fh pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0080h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0081h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0082h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0084h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
0086h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0087h mov ecx,0ACBh                 ; MOV(Mov_r32_imm32) [ECX,acbh:imm32]                  encoding(5 bytes) = b9 cb 0a 00 00
008ch mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0096h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F4732B0h:jmp64]                encoding(5 bytes) = e8 15 32 47 5f
009bh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
009eh mov ecx,0AD5h                 ; MOV(Mov_r32_imm32) [ECX,ad5h:imm32]                  encoding(5 bytes) = b9 d5 0a 00 00
00a3h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00adh call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F4732B0h:jmp64]                encoding(5 bytes) = e8 fe 31 47 5f
00b2h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00b5h lea r8,[rsp+30h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 30
00bah mov [r8],bpl                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),BPL]            encoding(3 bytes) = 41 88 28
00bdh mov [r8+4],ebx                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBX]         encoding(4 bytes) = 41 89 58 04
00c1h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00c4h mov ecx,r14d                  ; MOV(Mov_r32_rm32) [ECX,R14D]                         encoding(3 bytes) = 41 8b ce
00c7h mov edx,r15d                  ; MOV(Mov_r32_rm32) [EDX,R15D]                         encoding(3 bytes) = 41 8b d7
00cah mov rax,[rsp+30h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 30
00cfh mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00d4h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFC9D908h:jmp64]        encoding(5 bytes) = e8 2f d8 c9 ff
00d9h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00dch call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F4562E0h:jmp64]                encoding(5 bytes) = e8 ff 61 45 5f
00e1h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00e2h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A4740h:jmp64]                encoding(5 bytes) = e8 59 46 5a 5f
00e7h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> idivBytes => new byte[232]{0x41,0x57,0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x38,0x4D,0x8B,0x11,0x45,0x8B,0x49,0x08,0x4D,0x8B,0x18,0x45,0x8B,0x40,0x08,0x48,0x8B,0x32,0x8B,0x7A,0x08,0xBB,0x7F,0x00,0x00,0x00,0xBD,0x01,0x00,0x00,0x00,0x44,0x8B,0xF7,0x45,0x8B,0xF8,0x41,0x3B,0xF8,0x75,0x52,0x45,0x33,0xF6,0x85,0xFF,0x7E,0x34,0x45,0x3B,0xF1,0x0F,0x83,0x9D,0x00,0x00,0x00,0x49,0x63,0xC6,0x4D,0x8D,0x3C,0x42,0x48,0x0F,0xBF,0x14,0x46,0x45,0x3B,0xF0,0x0F,0x83,0x88,0x00,0x00,0x00,0x49,0x0F,0xBF,0x2C,0x43,0x8B,0xC2,0x99,0xF7,0xFD,0x66,0x41,0x89,0x07,0x41,0xFF,0xC6,0x44,0x3B,0xF7,0x7C,0xCC,0x4C,0x89,0x11,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x38,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0xCB,0x0A,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x15,0x32,0x47,0x5F,0x48,0x8B,0xF0,0xB9,0xD5,0x0A,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xFE,0x31,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x30,0x41,0x88,0x28,0x41,0x89,0x58,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCE,0x41,0x8B,0xD7,0x48,0x8B,0x44,0x24,0x30,0x48,0x89,0x44,0x24,0x20,0xE8,0x2F,0xD8,0xC9,0xFF,0x48,0x8B,0xC8,0xE8,0xFF,0x61,0x45,0x5F,0xCC,0xE8,0x59,0x46,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<ushort> idiv(ReadOnlySpan<ushort> lhs, ReadOnlySpan<ushort> rhs, Span<ushort> dst)
; location: [7FFC872C0780h, 7FFC872C0866h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0005h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0006h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0007h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0008h sub rsp,38h                   ; SUB(Sub_rm64_imm8) [RSP,38h:imm64]                   encoding(4 bytes) = 48 83 ec 38
000ch mov r10,[r9]                  ; MOV(Mov_r64_rm64) [R10,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 4d 8b 11
000fh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
0013h mov r11,[r8]                  ; MOV(Mov_r64_rm64) [R11,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 4d 8b 18
0016h mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
001ah mov rsi,[rdx]                 ; MOV(Mov_r64_rm64) [RSI,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 32
001dh mov edi,[rdx+8]               ; MOV(Mov_r32_rm32) [EDI,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 7a 08
0020h mov ebx,87h                   ; MOV(Mov_r32_imm32) [EBX,87h:imm32]                   encoding(5 bytes) = bb 87 00 00 00
0025h mov ebp,1                     ; MOV(Mov_r32_imm32) [EBP,1h:imm32]                    encoding(5 bytes) = bd 01 00 00 00
002ah mov r14d,edi                  ; MOV(Mov_r32_rm32) [R14D,EDI]                         encoding(3 bytes) = 44 8b f7
002dh mov r15d,r8d                  ; MOV(Mov_r32_rm32) [R15D,R8D]                         encoding(3 bytes) = 45 8b f8
0030h cmp edi,r8d                   ; CMP(Cmp_r32_rm32) [EDI,R8D]                          encoding(3 bytes) = 41 3b f8
0033h jne short 0086h               ; JNE(Jne_rel8_64) [86h:jmp64]                         encoding(2 bytes) = 75 51
0035h xor r14d,r14d                 ; XOR(Xor_r32_rm32) [R14D,R14D]                        encoding(3 bytes) = 45 33 f6
0038h test edi,edi                  ; TEST(Test_rm32_r32) [EDI,EDI]                        encoding(2 bytes) = 85 ff
003ah jle short 006fh               ; JLE(Jle_rel8_64) [6Fh:jmp64]                         encoding(2 bytes) = 7e 33
003ch cmp r14d,r9d                  ; CMP(Cmp_r32_rm32) [R14D,R9D]                         encoding(3 bytes) = 45 3b f1
003fh jae near ptr 00e1h            ; JAE(Jae_rel32_64) [E1h:jmp64]                        encoding(6 bytes) = 0f 83 9c 00 00 00
0045h movsxd rax,r14d               ; MOVSXD(Movsxd_r64_rm32) [RAX,R14D]                   encoding(3 bytes) = 49 63 c6
0048h lea r15,[r10+rax*2]           ; LEA(Lea_r64_m) [R15,mem(Unknown,R10:br,DS:sr)]       encoding(4 bytes) = 4d 8d 3c 42
004ch movzx edx,word ptr [rsi+rax*2]; MOVZX(Movzx_r32_rm16) [EDX,mem(16u,RSI:br,DS:sr)]    encoding(4 bytes) = 0f b7 14 46
0050h cmp r14d,r8d                  ; CMP(Cmp_r32_rm32) [R14D,R8D]                         encoding(3 bytes) = 45 3b f0
0053h jae near ptr 00e1h            ; JAE(Jae_rel32_64) [E1h:jmp64]                        encoding(6 bytes) = 0f 83 88 00 00 00
0059h movzx ebp,word ptr [r11+rax*2]; MOVZX(Movzx_r32_rm16) [EBP,mem(16u,R11:br,DS:sr)]    encoding(5 bytes) = 41 0f b7 2c 43
005eh mov eax,edx                   ; MOV(Mov_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 8b c2
0060h cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
0061h idiv ebp                      ; IDIV(Idiv_rm32) [EBP]                                encoding(2 bytes) = f7 fd
0063h mov [r15],ax                  ; MOV(Mov_rm16_r16) [mem(16u,R15:br,DS:sr),AX]         encoding(4 bytes) = 66 41 89 07
0067h inc r14d                      ; INC(Inc_rm32) [R14D]                                 encoding(3 bytes) = 41 ff c6
006ah cmp r14d,edi                  ; CMP(Cmp_r32_rm32) [R14D,EDI]                         encoding(3 bytes) = 44 3b f7
006dh jl short 003ch                ; JL(Jl_rel8_64) [3Ch:jmp64]                           encoding(2 bytes) = 7c cd
006fh mov [rcx],r10                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R10]        encoding(3 bytes) = 4c 89 11
0072h mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0076h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0079h add rsp,38h                   ; ADD(Add_rm64_imm8) [RSP,38h:imm64]                   encoding(4 bytes) = 48 83 c4 38
007dh pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
007eh pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
007fh pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0080h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0081h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0083h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
0085h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0086h mov ecx,0ACBh                 ; MOV(Mov_r32_imm32) [ECX,acbh:imm32]                  encoding(5 bytes) = b9 cb 0a 00 00
008bh mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0095h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F4731A0h:jmp64]                encoding(5 bytes) = e8 06 31 47 5f
009ah mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
009dh mov ecx,0AD5h                 ; MOV(Mov_r32_imm32) [ECX,ad5h:imm32]                  encoding(5 bytes) = b9 d5 0a 00 00
00a2h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00ach call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F4731A0h:jmp64]                encoding(5 bytes) = e8 ef 30 47 5f
00b1h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00b4h lea r8,[rsp+30h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 30
00b9h mov [r8],bpl                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),BPL]            encoding(3 bytes) = 41 88 28
00bch mov [r8+4],ebx                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBX]         encoding(4 bytes) = 41 89 58 04
00c0h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00c3h mov ecx,r14d                  ; MOV(Mov_r32_rm32) [ECX,R14D]                         encoding(3 bytes) = 41 8b ce
00c6h mov edx,r15d                  ; MOV(Mov_r32_rm32) [EDX,R15D]                         encoding(3 bytes) = 41 8b d7
00c9h mov rax,[rsp+30h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 30
00ceh mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00d3h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFC9D7F8h:jmp64]        encoding(5 bytes) = e8 20 d7 c9 ff
00d8h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00dbh call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F4561D0h:jmp64]                encoding(5 bytes) = e8 f0 60 45 5f
00e0h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00e1h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A4630h:jmp64]                encoding(5 bytes) = e8 4a 45 5a 5f
00e6h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> idivBytes => new byte[231]{0x41,0x57,0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x38,0x4D,0x8B,0x11,0x45,0x8B,0x49,0x08,0x4D,0x8B,0x18,0x45,0x8B,0x40,0x08,0x48,0x8B,0x32,0x8B,0x7A,0x08,0xBB,0x87,0x00,0x00,0x00,0xBD,0x01,0x00,0x00,0x00,0x44,0x8B,0xF7,0x45,0x8B,0xF8,0x41,0x3B,0xF8,0x75,0x51,0x45,0x33,0xF6,0x85,0xFF,0x7E,0x33,0x45,0x3B,0xF1,0x0F,0x83,0x9C,0x00,0x00,0x00,0x49,0x63,0xC6,0x4D,0x8D,0x3C,0x42,0x0F,0xB7,0x14,0x46,0x45,0x3B,0xF0,0x0F,0x83,0x88,0x00,0x00,0x00,0x41,0x0F,0xB7,0x2C,0x43,0x8B,0xC2,0x99,0xF7,0xFD,0x66,0x41,0x89,0x07,0x41,0xFF,0xC6,0x44,0x3B,0xF7,0x7C,0xCD,0x4C,0x89,0x11,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x38,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0xCB,0x0A,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x06,0x31,0x47,0x5F,0x48,0x8B,0xF0,0xB9,0xD5,0x0A,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xEF,0x30,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x30,0x41,0x88,0x28,0x41,0x89,0x58,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCE,0x41,0x8B,0xD7,0x48,0x8B,0x44,0x24,0x30,0x48,0x89,0x44,0x24,0x20,0xE8,0x20,0xD7,0xC9,0xFF,0x48,0x8B,0xC8,0xE8,0xF0,0x60,0x45,0x5F,0xCC,0xE8,0x4A,0x45,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<int> idiv(ReadOnlySpan<int> lhs, ReadOnlySpan<int> rhs, Span<int> dst)
; location: [7FFC872C0890h, 7FFC872C0973h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0005h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0006h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0007h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0008h sub rsp,38h                   ; SUB(Sub_rm64_imm8) [RSP,38h:imm64]                   encoding(4 bytes) = 48 83 ec 38
000ch mov r10,[r9]                  ; MOV(Mov_r64_rm64) [R10,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 4d 8b 11
000fh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
0013h mov r11,[r8]                  ; MOV(Mov_r64_rm64) [R11,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 4d 8b 18
0016h mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
001ah mov rsi,[rdx]                 ; MOV(Mov_r64_rm64) [RSI,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 32
001dh mov edi,[rdx+8]               ; MOV(Mov_r32_rm32) [EDI,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 7a 08
0020h mov ebx,8Fh                   ; MOV(Mov_r32_imm32) [EBX,8fh:imm32]                   encoding(5 bytes) = bb 8f 00 00 00
0025h mov ebp,1                     ; MOV(Mov_r32_imm32) [EBP,1h:imm32]                    encoding(5 bytes) = bd 01 00 00 00
002ah mov r14d,edi                  ; MOV(Mov_r32_rm32) [R14D,EDI]                         encoding(3 bytes) = 44 8b f7
002dh mov r15d,r8d                  ; MOV(Mov_r32_rm32) [R15D,R8D]                         encoding(3 bytes) = 45 8b f8
0030h cmp edi,r8d                   ; CMP(Cmp_r32_rm32) [EDI,R8D]                          encoding(3 bytes) = 41 3b f8
0033h jne short 0083h               ; JNE(Jne_rel8_64) [83h:jmp64]                         encoding(2 bytes) = 75 4e
0035h xor r14d,r14d                 ; XOR(Xor_r32_rm32) [R14D,R14D]                        encoding(3 bytes) = 45 33 f6
0038h test edi,edi                  ; TEST(Test_rm32_r32) [EDI,EDI]                        encoding(2 bytes) = 85 ff
003ah jle short 006ch               ; JLE(Jle_rel8_64) [6Ch:jmp64]                         encoding(2 bytes) = 7e 30
003ch cmp r14d,r9d                  ; CMP(Cmp_r32_rm32) [R14D,R9D]                         encoding(3 bytes) = 45 3b f1
003fh jae near ptr 00deh            ; JAE(Jae_rel32_64) [DEh:jmp64]                        encoding(6 bytes) = 0f 83 99 00 00 00
0045h movsxd rax,r14d               ; MOVSXD(Movsxd_r64_rm32) [RAX,R14D]                   encoding(3 bytes) = 49 63 c6
0048h lea r15,[r10+rax*4]           ; LEA(Lea_r64_m) [R15,mem(Unknown,R10:br,DS:sr)]       encoding(4 bytes) = 4d 8d 3c 82
004ch mov edx,[rsi+rax*4]           ; MOV(Mov_r32_rm32) [EDX,mem(32u,RSI:br,DS:sr)]        encoding(3 bytes) = 8b 14 86
004fh cmp r14d,r8d                  ; CMP(Cmp_r32_rm32) [R14D,R8D]                         encoding(3 bytes) = 45 3b f0
0052h jae near ptr 00deh            ; JAE(Jae_rel32_64) [DEh:jmp64]                        encoding(6 bytes) = 0f 83 86 00 00 00
0058h mov ebp,[r11+rax*4]           ; MOV(Mov_r32_rm32) [EBP,mem(32u,R11:br,DS:sr)]        encoding(4 bytes) = 41 8b 2c 83
005ch mov eax,edx                   ; MOV(Mov_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 8b c2
005eh cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
005fh idiv ebp                      ; IDIV(Idiv_rm32) [EBP]                                encoding(2 bytes) = f7 fd
0061h mov [r15],eax                 ; MOV(Mov_rm32_r32) [mem(32u,R15:br,DS:sr),EAX]        encoding(3 bytes) = 41 89 07
0064h inc r14d                      ; INC(Inc_rm32) [R14D]                                 encoding(3 bytes) = 41 ff c6
0067h cmp r14d,edi                  ; CMP(Cmp_r32_rm32) [R14D,EDI]                         encoding(3 bytes) = 44 3b f7
006ah jl short 003ch                ; JL(Jl_rel8_64) [3Ch:jmp64]                           encoding(2 bytes) = 7c d0
006ch mov [rcx],r10                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R10]        encoding(3 bytes) = 4c 89 11
006fh mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0073h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0076h add rsp,38h                   ; ADD(Add_rm64_imm8) [RSP,38h:imm64]                   encoding(4 bytes) = 48 83 c4 38
007ah pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
007bh pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
007ch pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
007dh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
007eh pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0080h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
0082h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0083h mov ecx,0ACBh                 ; MOV(Mov_r32_imm32) [ECX,acbh:imm32]                  encoding(5 bytes) = b9 cb 0a 00 00
0088h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0092h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F473090h:jmp64]                encoding(5 bytes) = e8 f9 2f 47 5f
0097h mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
009ah mov ecx,0AD5h                 ; MOV(Mov_r32_imm32) [ECX,ad5h:imm32]                  encoding(5 bytes) = b9 d5 0a 00 00
009fh mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00a9h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F473090h:jmp64]                encoding(5 bytes) = e8 e2 2f 47 5f
00aeh mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00b1h lea r8,[rsp+30h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 30
00b6h mov [r8],bpl                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),BPL]            encoding(3 bytes) = 41 88 28
00b9h mov [r8+4],ebx                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBX]         encoding(4 bytes) = 41 89 58 04
00bdh mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00c0h mov ecx,r14d                  ; MOV(Mov_r32_rm32) [ECX,R14D]                         encoding(3 bytes) = 41 8b ce
00c3h mov edx,r15d                  ; MOV(Mov_r32_rm32) [EDX,R15D]                         encoding(3 bytes) = 41 8b d7
00c6h mov rax,[rsp+30h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 30
00cbh mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00d0h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFC9D6E8h:jmp64]        encoding(5 bytes) = e8 13 d6 c9 ff
00d5h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00d8h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F4560C0h:jmp64]                encoding(5 bytes) = e8 e3 5f 45 5f
00ddh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00deh call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A4520h:jmp64]                encoding(5 bytes) = e8 3d 44 5a 5f
00e3h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> idivBytes => new byte[228]{0x41,0x57,0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x38,0x4D,0x8B,0x11,0x45,0x8B,0x49,0x08,0x4D,0x8B,0x18,0x45,0x8B,0x40,0x08,0x48,0x8B,0x32,0x8B,0x7A,0x08,0xBB,0x8F,0x00,0x00,0x00,0xBD,0x01,0x00,0x00,0x00,0x44,0x8B,0xF7,0x45,0x8B,0xF8,0x41,0x3B,0xF8,0x75,0x4E,0x45,0x33,0xF6,0x85,0xFF,0x7E,0x30,0x45,0x3B,0xF1,0x0F,0x83,0x99,0x00,0x00,0x00,0x49,0x63,0xC6,0x4D,0x8D,0x3C,0x82,0x8B,0x14,0x86,0x45,0x3B,0xF0,0x0F,0x83,0x86,0x00,0x00,0x00,0x41,0x8B,0x2C,0x83,0x8B,0xC2,0x99,0xF7,0xFD,0x41,0x89,0x07,0x41,0xFF,0xC6,0x44,0x3B,0xF7,0x7C,0xD0,0x4C,0x89,0x11,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x38,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0xCB,0x0A,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xF9,0x2F,0x47,0x5F,0x48,0x8B,0xF0,0xB9,0xD5,0x0A,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xE2,0x2F,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x30,0x41,0x88,0x28,0x41,0x89,0x58,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCE,0x41,0x8B,0xD7,0x48,0x8B,0x44,0x24,0x30,0x48,0x89,0x44,0x24,0x20,0xE8,0x13,0xD6,0xC9,0xFF,0x48,0x8B,0xC8,0xE8,0xE3,0x5F,0x45,0x5F,0xCC,0xE8,0x3D,0x44,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<uint> idiv(ReadOnlySpan<uint> lhs, ReadOnlySpan<uint> rhs, Span<uint> dst)
; location: [7FFC872C09A0h, 7FFC872C0A84h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0005h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0006h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0007h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0008h sub rsp,38h                   ; SUB(Sub_rm64_imm8) [RSP,38h:imm64]                   encoding(4 bytes) = 48 83 ec 38
000ch mov r10,[r9]                  ; MOV(Mov_r64_rm64) [R10,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 4d 8b 11
000fh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
0013h mov r11,[r8]                  ; MOV(Mov_r64_rm64) [R11,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 4d 8b 18
0016h mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
001ah mov rsi,[rdx]                 ; MOV(Mov_r64_rm64) [RSI,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 32
001dh mov edi,[rdx+8]               ; MOV(Mov_r32_rm32) [EDI,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 7a 08
0020h mov ebx,97h                   ; MOV(Mov_r32_imm32) [EBX,97h:imm32]                   encoding(5 bytes) = bb 97 00 00 00
0025h mov ebp,1                     ; MOV(Mov_r32_imm32) [EBP,1h:imm32]                    encoding(5 bytes) = bd 01 00 00 00
002ah mov r14d,edi                  ; MOV(Mov_r32_rm32) [R14D,EDI]                         encoding(3 bytes) = 44 8b f7
002dh mov r15d,r8d                  ; MOV(Mov_r32_rm32) [R15D,R8D]                         encoding(3 bytes) = 45 8b f8
0030h cmp edi,r8d                   ; CMP(Cmp_r32_rm32) [EDI,R8D]                          encoding(3 bytes) = 41 3b f8
0033h jne short 0084h               ; JNE(Jne_rel8_64) [84h:jmp64]                         encoding(2 bytes) = 75 4f
0035h xor r14d,r14d                 ; XOR(Xor_r32_rm32) [R14D,R14D]                        encoding(3 bytes) = 45 33 f6
0038h test edi,edi                  ; TEST(Test_rm32_r32) [EDI,EDI]                        encoding(2 bytes) = 85 ff
003ah jle short 006dh               ; JLE(Jle_rel8_64) [6Dh:jmp64]                         encoding(2 bytes) = 7e 31
003ch cmp r14d,r9d                  ; CMP(Cmp_r32_rm32) [R14D,R9D]                         encoding(3 bytes) = 45 3b f1
003fh jae near ptr 00dfh            ; JAE(Jae_rel32_64) [DFh:jmp64]                        encoding(6 bytes) = 0f 83 9a 00 00 00
0045h movsxd rax,r14d               ; MOVSXD(Movsxd_r64_rm32) [RAX,R14D]                   encoding(3 bytes) = 49 63 c6
0048h lea r15,[r10+rax*4]           ; LEA(Lea_r64_m) [R15,mem(Unknown,R10:br,DS:sr)]       encoding(4 bytes) = 4d 8d 3c 82
004ch mov edx,[rsi+rax*4]           ; MOV(Mov_r32_rm32) [EDX,mem(32u,RSI:br,DS:sr)]        encoding(3 bytes) = 8b 14 86
004fh cmp r14d,r8d                  ; CMP(Cmp_r32_rm32) [R14D,R8D]                         encoding(3 bytes) = 45 3b f0
0052h jae near ptr 00dfh            ; JAE(Jae_rel32_64) [DFh:jmp64]                        encoding(6 bytes) = 0f 83 87 00 00 00
0058h mov ebp,[r11+rax*4]           ; MOV(Mov_r32_rm32) [EBP,mem(32u,R11:br,DS:sr)]        encoding(4 bytes) = 41 8b 2c 83
005ch mov eax,edx                   ; MOV(Mov_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 8b c2
005eh xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
0060h div ebp                       ; DIV(Div_rm32) [EBP]                                  encoding(2 bytes) = f7 f5
0062h mov [r15],eax                 ; MOV(Mov_rm32_r32) [mem(32u,R15:br,DS:sr),EAX]        encoding(3 bytes) = 41 89 07
0065h inc r14d                      ; INC(Inc_rm32) [R14D]                                 encoding(3 bytes) = 41 ff c6
0068h cmp r14d,edi                  ; CMP(Cmp_r32_rm32) [R14D,EDI]                         encoding(3 bytes) = 44 3b f7
006bh jl short 003ch                ; JL(Jl_rel8_64) [3Ch:jmp64]                           encoding(2 bytes) = 7c cf
006dh mov [rcx],r10                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R10]        encoding(3 bytes) = 4c 89 11
0070h mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0074h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0077h add rsp,38h                   ; ADD(Add_rm64_imm8) [RSP,38h:imm64]                   encoding(4 bytes) = 48 83 c4 38
007bh pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
007ch pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
007dh pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
007eh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
007fh pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0081h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
0083h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0084h mov ecx,0ACBh                 ; MOV(Mov_r32_imm32) [ECX,acbh:imm32]                  encoding(5 bytes) = b9 cb 0a 00 00
0089h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0093h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F472F80h:jmp64]                encoding(5 bytes) = e8 e8 2e 47 5f
0098h mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
009bh mov ecx,0AD5h                 ; MOV(Mov_r32_imm32) [ECX,ad5h:imm32]                  encoding(5 bytes) = b9 d5 0a 00 00
00a0h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00aah call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F472F80h:jmp64]                encoding(5 bytes) = e8 d1 2e 47 5f
00afh mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00b2h lea r8,[rsp+30h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 30
00b7h mov [r8],bpl                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),BPL]            encoding(3 bytes) = 41 88 28
00bah mov [r8+4],ebx                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBX]         encoding(4 bytes) = 41 89 58 04
00beh mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00c1h mov ecx,r14d                  ; MOV(Mov_r32_rm32) [ECX,R14D]                         encoding(3 bytes) = 41 8b ce
00c4h mov edx,r15d                  ; MOV(Mov_r32_rm32) [EDX,R15D]                         encoding(3 bytes) = 41 8b d7
00c7h mov rax,[rsp+30h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 30
00cch mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00d1h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFC9D5D8h:jmp64]        encoding(5 bytes) = e8 02 d5 c9 ff
00d6h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00d9h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F455FB0h:jmp64]                encoding(5 bytes) = e8 d2 5e 45 5f
00deh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00dfh call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A4410h:jmp64]                encoding(5 bytes) = e8 2c 43 5a 5f
00e4h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> idivBytes => new byte[229]{0x41,0x57,0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x38,0x4D,0x8B,0x11,0x45,0x8B,0x49,0x08,0x4D,0x8B,0x18,0x45,0x8B,0x40,0x08,0x48,0x8B,0x32,0x8B,0x7A,0x08,0xBB,0x97,0x00,0x00,0x00,0xBD,0x01,0x00,0x00,0x00,0x44,0x8B,0xF7,0x45,0x8B,0xF8,0x41,0x3B,0xF8,0x75,0x4F,0x45,0x33,0xF6,0x85,0xFF,0x7E,0x31,0x45,0x3B,0xF1,0x0F,0x83,0x9A,0x00,0x00,0x00,0x49,0x63,0xC6,0x4D,0x8D,0x3C,0x82,0x8B,0x14,0x86,0x45,0x3B,0xF0,0x0F,0x83,0x87,0x00,0x00,0x00,0x41,0x8B,0x2C,0x83,0x8B,0xC2,0x33,0xD2,0xF7,0xF5,0x41,0x89,0x07,0x41,0xFF,0xC6,0x44,0x3B,0xF7,0x7C,0xCF,0x4C,0x89,0x11,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x38,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0xCB,0x0A,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xE8,0x2E,0x47,0x5F,0x48,0x8B,0xF0,0xB9,0xD5,0x0A,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xD1,0x2E,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x30,0x41,0x88,0x28,0x41,0x89,0x58,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCE,0x41,0x8B,0xD7,0x48,0x8B,0x44,0x24,0x30,0x48,0x89,0x44,0x24,0x20,0xE8,0x02,0xD5,0xC9,0xFF,0x48,0x8B,0xC8,0xE8,0xD2,0x5E,0x45,0x5F,0xCC,0xE8,0x2C,0x43,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<long> idiv(ReadOnlySpan<long> lhs, ReadOnlySpan<long> rhs, Span<long> dst)
; location: [7FFC872C0AB0h, 7FFC872C0B97h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0005h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0006h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0007h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0008h sub rsp,38h                   ; SUB(Sub_rm64_imm8) [RSP,38h:imm64]                   encoding(4 bytes) = 48 83 ec 38
000ch mov r10,[r9]                  ; MOV(Mov_r64_rm64) [R10,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 4d 8b 11
000fh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
0013h mov r11,[r8]                  ; MOV(Mov_r64_rm64) [R11,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 4d 8b 18
0016h mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
001ah mov rsi,[rdx]                 ; MOV(Mov_r64_rm64) [RSI,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 32
001dh mov edi,[rdx+8]               ; MOV(Mov_r32_rm32) [EDI,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 7a 08
0020h mov ebx,9Fh                   ; MOV(Mov_r32_imm32) [EBX,9fh:imm32]                   encoding(5 bytes) = bb 9f 00 00 00
0025h mov ebp,1                     ; MOV(Mov_r32_imm32) [EBP,1h:imm32]                    encoding(5 bytes) = bd 01 00 00 00
002ah mov r14d,edi                  ; MOV(Mov_r32_rm32) [R14D,EDI]                         encoding(3 bytes) = 44 8b f7
002dh mov r15d,r8d                  ; MOV(Mov_r32_rm32) [R15D,R8D]                         encoding(3 bytes) = 45 8b f8
0030h cmp edi,r8d                   ; CMP(Cmp_r32_rm32) [EDI,R8D]                          encoding(3 bytes) = 41 3b f8
0033h jne short 0087h               ; JNE(Jne_rel8_64) [87h:jmp64]                         encoding(2 bytes) = 75 52
0035h xor r14d,r14d                 ; XOR(Xor_r32_rm32) [R14D,R14D]                        encoding(3 bytes) = 45 33 f6
0038h test edi,edi                  ; TEST(Test_rm32_r32) [EDI,EDI]                        encoding(2 bytes) = 85 ff
003ah jle short 0070h               ; JLE(Jle_rel8_64) [70h:jmp64]                         encoding(2 bytes) = 7e 34
003ch cmp r14d,r9d                  ; CMP(Cmp_r32_rm32) [R14D,R9D]                         encoding(3 bytes) = 45 3b f1
003fh jae near ptr 00e2h            ; JAE(Jae_rel32_64) [E2h:jmp64]                        encoding(6 bytes) = 0f 83 9d 00 00 00
0045h movsxd rax,r14d               ; MOVSXD(Movsxd_r64_rm32) [RAX,R14D]                   encoding(3 bytes) = 49 63 c6
0048h lea r15,[r10+rax*8]           ; LEA(Lea_r64_m) [R15,mem(Unknown,R10:br,DS:sr)]       encoding(4 bytes) = 4d 8d 3c c2
004ch mov rdx,[rsi+rax*8]           ; MOV(Mov_r64_rm64) [RDX,mem(64u,RSI:br,DS:sr)]        encoding(4 bytes) = 48 8b 14 c6
0050h cmp r14d,r8d                  ; CMP(Cmp_r32_rm32) [R14D,R8D]                         encoding(3 bytes) = 45 3b f0
0053h jae near ptr 00e2h            ; JAE(Jae_rel32_64) [E2h:jmp64]                        encoding(6 bytes) = 0f 83 89 00 00 00
0059h mov rbp,[r11+rax*8]           ; MOV(Mov_r64_rm64) [RBP,mem(64u,R11:br,DS:sr)]        encoding(4 bytes) = 49 8b 2c c3
005dh mov rax,rdx                   ; MOV(Mov_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 8b c2
0060h cqo                           ; CQO(Cqo)                                             encoding(2 bytes) = 48 99
0062h idiv rbp                      ; IDIV(Idiv_rm64) [RBP]                                encoding(3 bytes) = 48 f7 fd
0065h mov [r15],rax                 ; MOV(Mov_rm64_r64) [mem(64u,R15:br,DS:sr),RAX]        encoding(3 bytes) = 49 89 07
0068h inc r14d                      ; INC(Inc_rm32) [R14D]                                 encoding(3 bytes) = 41 ff c6
006bh cmp r14d,edi                  ; CMP(Cmp_r32_rm32) [R14D,EDI]                         encoding(3 bytes) = 44 3b f7
006eh jl short 003ch                ; JL(Jl_rel8_64) [3Ch:jmp64]                           encoding(2 bytes) = 7c cc
0070h mov [rcx],r10                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R10]        encoding(3 bytes) = 4c 89 11
0073h mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0077h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
007ah add rsp,38h                   ; ADD(Add_rm64_imm8) [RSP,38h:imm64]                   encoding(4 bytes) = 48 83 c4 38
007eh pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
007fh pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0080h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0081h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0082h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0084h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
0086h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0087h mov ecx,0ACBh                 ; MOV(Mov_r32_imm32) [ECX,acbh:imm32]                  encoding(5 bytes) = b9 cb 0a 00 00
008ch mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0096h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F472E70h:jmp64]                encoding(5 bytes) = e8 d5 2d 47 5f
009bh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
009eh mov ecx,0AD5h                 ; MOV(Mov_r32_imm32) [ECX,ad5h:imm32]                  encoding(5 bytes) = b9 d5 0a 00 00
00a3h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00adh call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F472E70h:jmp64]                encoding(5 bytes) = e8 be 2d 47 5f
00b2h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00b5h lea r8,[rsp+30h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 30
00bah mov [r8],bpl                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),BPL]            encoding(3 bytes) = 41 88 28
00bdh mov [r8+4],ebx                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBX]         encoding(4 bytes) = 41 89 58 04
00c1h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00c4h mov ecx,r14d                  ; MOV(Mov_r32_rm32) [ECX,R14D]                         encoding(3 bytes) = 41 8b ce
00c7h mov edx,r15d                  ; MOV(Mov_r32_rm32) [EDX,R15D]                         encoding(3 bytes) = 41 8b d7
00cah mov rax,[rsp+30h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 30
00cfh mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00d4h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFC9D4C8h:jmp64]        encoding(5 bytes) = e8 ef d3 c9 ff
00d9h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00dch call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F455EA0h:jmp64]                encoding(5 bytes) = e8 bf 5d 45 5f
00e1h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00e2h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A4300h:jmp64]                encoding(5 bytes) = e8 19 42 5a 5f
00e7h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> idivBytes => new byte[232]{0x41,0x57,0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x38,0x4D,0x8B,0x11,0x45,0x8B,0x49,0x08,0x4D,0x8B,0x18,0x45,0x8B,0x40,0x08,0x48,0x8B,0x32,0x8B,0x7A,0x08,0xBB,0x9F,0x00,0x00,0x00,0xBD,0x01,0x00,0x00,0x00,0x44,0x8B,0xF7,0x45,0x8B,0xF8,0x41,0x3B,0xF8,0x75,0x52,0x45,0x33,0xF6,0x85,0xFF,0x7E,0x34,0x45,0x3B,0xF1,0x0F,0x83,0x9D,0x00,0x00,0x00,0x49,0x63,0xC6,0x4D,0x8D,0x3C,0xC2,0x48,0x8B,0x14,0xC6,0x45,0x3B,0xF0,0x0F,0x83,0x89,0x00,0x00,0x00,0x49,0x8B,0x2C,0xC3,0x48,0x8B,0xC2,0x48,0x99,0x48,0xF7,0xFD,0x49,0x89,0x07,0x41,0xFF,0xC6,0x44,0x3B,0xF7,0x7C,0xCC,0x4C,0x89,0x11,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x38,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0xCB,0x0A,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xD5,0x2D,0x47,0x5F,0x48,0x8B,0xF0,0xB9,0xD5,0x0A,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xBE,0x2D,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x30,0x41,0x88,0x28,0x41,0x89,0x58,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCE,0x41,0x8B,0xD7,0x48,0x8B,0x44,0x24,0x30,0x48,0x89,0x44,0x24,0x20,0xE8,0xEF,0xD3,0xC9,0xFF,0x48,0x8B,0xC8,0xE8,0xBF,0x5D,0x45,0x5F,0xCC,0xE8,0x19,0x42,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<ulong> idiv(ReadOnlySpan<ulong> lhs, ReadOnlySpan<ulong> rhs, Span<ulong> dst)
; location: [7FFC872C0BC0h, 7FFC872C0CA7h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0005h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0006h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0007h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0008h sub rsp,38h                   ; SUB(Sub_rm64_imm8) [RSP,38h:imm64]                   encoding(4 bytes) = 48 83 ec 38
000ch mov r10,[r9]                  ; MOV(Mov_r64_rm64) [R10,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 4d 8b 11
000fh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
0013h mov r11,[r8]                  ; MOV(Mov_r64_rm64) [R11,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 4d 8b 18
0016h mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
001ah mov rsi,[rdx]                 ; MOV(Mov_r64_rm64) [RSI,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 32
001dh mov edi,[rdx+8]               ; MOV(Mov_r32_rm32) [EDI,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 7a 08
0020h mov ebx,0A7h                  ; MOV(Mov_r32_imm32) [EBX,a7h:imm32]                   encoding(5 bytes) = bb a7 00 00 00
0025h mov ebp,1                     ; MOV(Mov_r32_imm32) [EBP,1h:imm32]                    encoding(5 bytes) = bd 01 00 00 00
002ah mov r14d,edi                  ; MOV(Mov_r32_rm32) [R14D,EDI]                         encoding(3 bytes) = 44 8b f7
002dh mov r15d,r8d                  ; MOV(Mov_r32_rm32) [R15D,R8D]                         encoding(3 bytes) = 45 8b f8
0030h cmp edi,r8d                   ; CMP(Cmp_r32_rm32) [EDI,R8D]                          encoding(3 bytes) = 41 3b f8
0033h jne short 0087h               ; JNE(Jne_rel8_64) [87h:jmp64]                         encoding(2 bytes) = 75 52
0035h xor r14d,r14d                 ; XOR(Xor_r32_rm32) [R14D,R14D]                        encoding(3 bytes) = 45 33 f6
0038h test edi,edi                  ; TEST(Test_rm32_r32) [EDI,EDI]                        encoding(2 bytes) = 85 ff
003ah jle short 0070h               ; JLE(Jle_rel8_64) [70h:jmp64]                         encoding(2 bytes) = 7e 34
003ch cmp r14d,r9d                  ; CMP(Cmp_r32_rm32) [R14D,R9D]                         encoding(3 bytes) = 45 3b f1
003fh jae near ptr 00e2h            ; JAE(Jae_rel32_64) [E2h:jmp64]                        encoding(6 bytes) = 0f 83 9d 00 00 00
0045h movsxd rax,r14d               ; MOVSXD(Movsxd_r64_rm32) [RAX,R14D]                   encoding(3 bytes) = 49 63 c6
0048h lea r15,[r10+rax*8]           ; LEA(Lea_r64_m) [R15,mem(Unknown,R10:br,DS:sr)]       encoding(4 bytes) = 4d 8d 3c c2
004ch mov rdx,[rsi+rax*8]           ; MOV(Mov_r64_rm64) [RDX,mem(64u,RSI:br,DS:sr)]        encoding(4 bytes) = 48 8b 14 c6
0050h cmp r14d,r8d                  ; CMP(Cmp_r32_rm32) [R14D,R8D]                         encoding(3 bytes) = 45 3b f0
0053h jae near ptr 00e2h            ; JAE(Jae_rel32_64) [E2h:jmp64]                        encoding(6 bytes) = 0f 83 89 00 00 00
0059h mov rbp,[r11+rax*8]           ; MOV(Mov_r64_rm64) [RBP,mem(64u,R11:br,DS:sr)]        encoding(4 bytes) = 49 8b 2c c3
005dh mov rax,rdx                   ; MOV(Mov_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 8b c2
0060h xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
0062h div rbp                       ; DIV(Div_rm64) [RBP]                                  encoding(3 bytes) = 48 f7 f5
0065h mov [r15],rax                 ; MOV(Mov_rm64_r64) [mem(64u,R15:br,DS:sr),RAX]        encoding(3 bytes) = 49 89 07
0068h inc r14d                      ; INC(Inc_rm32) [R14D]                                 encoding(3 bytes) = 41 ff c6
006bh cmp r14d,edi                  ; CMP(Cmp_r32_rm32) [R14D,EDI]                         encoding(3 bytes) = 44 3b f7
006eh jl short 003ch                ; JL(Jl_rel8_64) [3Ch:jmp64]                           encoding(2 bytes) = 7c cc
0070h mov [rcx],r10                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R10]        encoding(3 bytes) = 4c 89 11
0073h mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0077h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
007ah add rsp,38h                   ; ADD(Add_rm64_imm8) [RSP,38h:imm64]                   encoding(4 bytes) = 48 83 c4 38
007eh pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
007fh pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0080h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0081h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0082h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0084h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
0086h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0087h mov ecx,0ACBh                 ; MOV(Mov_r32_imm32) [ECX,acbh:imm32]                  encoding(5 bytes) = b9 cb 0a 00 00
008ch mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0096h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F472D60h:jmp64]                encoding(5 bytes) = e8 c5 2c 47 5f
009bh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
009eh mov ecx,0AD5h                 ; MOV(Mov_r32_imm32) [ECX,ad5h:imm32]                  encoding(5 bytes) = b9 d5 0a 00 00
00a3h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00adh call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F472D60h:jmp64]                encoding(5 bytes) = e8 ae 2c 47 5f
00b2h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00b5h lea r8,[rsp+30h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 30
00bah mov [r8],bpl                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),BPL]            encoding(3 bytes) = 41 88 28
00bdh mov [r8+4],ebx                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBX]         encoding(4 bytes) = 41 89 58 04
00c1h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00c4h mov ecx,r14d                  ; MOV(Mov_r32_rm32) [ECX,R14D]                         encoding(3 bytes) = 41 8b ce
00c7h mov edx,r15d                  ; MOV(Mov_r32_rm32) [EDX,R15D]                         encoding(3 bytes) = 41 8b d7
00cah mov rax,[rsp+30h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 30
00cfh mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00d4h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFC9D3B8h:jmp64]        encoding(5 bytes) = e8 df d2 c9 ff
00d9h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00dch call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F455D90h:jmp64]                encoding(5 bytes) = e8 af 5c 45 5f
00e1h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00e2h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A41F0h:jmp64]                encoding(5 bytes) = e8 09 41 5a 5f
00e7h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> idivBytes => new byte[232]{0x41,0x57,0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x38,0x4D,0x8B,0x11,0x45,0x8B,0x49,0x08,0x4D,0x8B,0x18,0x45,0x8B,0x40,0x08,0x48,0x8B,0x32,0x8B,0x7A,0x08,0xBB,0xA7,0x00,0x00,0x00,0xBD,0x01,0x00,0x00,0x00,0x44,0x8B,0xF7,0x45,0x8B,0xF8,0x41,0x3B,0xF8,0x75,0x52,0x45,0x33,0xF6,0x85,0xFF,0x7E,0x34,0x45,0x3B,0xF1,0x0F,0x83,0x9D,0x00,0x00,0x00,0x49,0x63,0xC6,0x4D,0x8D,0x3C,0xC2,0x48,0x8B,0x14,0xC6,0x45,0x3B,0xF0,0x0F,0x83,0x89,0x00,0x00,0x00,0x49,0x8B,0x2C,0xC3,0x48,0x8B,0xC2,0x33,0xD2,0x48,0xF7,0xF5,0x49,0x89,0x07,0x41,0xFF,0xC6,0x44,0x3B,0xF7,0x7C,0xCC,0x4C,0x89,0x11,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x38,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0xCB,0x0A,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xC5,0x2C,0x47,0x5F,0x48,0x8B,0xF0,0xB9,0xD5,0x0A,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xAE,0x2C,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x30,0x41,0x88,0x28,0x41,0x89,0x58,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCE,0x41,0x8B,0xD7,0x48,0x8B,0x44,0x24,0x30,0x48,0x89,0x44,0x24,0x20,0xE8,0xDF,0xD2,0xC9,0xFF,0x48,0x8B,0xC8,0xE8,0xAF,0x5C,0x45,0x5F,0xCC,0xE8,0x09,0x41,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<sbyte> idiv(Span<sbyte> lhs, ReadOnlySpan<sbyte> rhs)
; location: [7FFC872C0CD0h, 7FFC872C0DA8h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,40h                   ; SUB(Sub_rm64_imm8) [RSP,40h:imm64]                   encoding(4 bytes) = 48 83 ec 40
000ah mov r9,[r8]                   ; MOV(Mov_r64_rm64) [R9,mem(64u,R8:br,DS:sr)]          encoding(3 bytes) = 4d 8b 08
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0014h mov r11d,[rdx+8]              ; MOV(Mov_r32_rm32) [R11D,mem(32u,RDX:br,DS:sr)]       encoding(4 bytes) = 44 8b 5a 08
0018h mov esi,0AFh                  ; MOV(Mov_r32_imm32) [ESI,afh:imm32]                   encoding(5 bytes) = be af 00 00 00
001dh mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0022h mov ebx,r11d                  ; MOV(Mov_r32_rm32) [EBX,R11D]                         encoding(3 bytes) = 41 8b db
0025h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0028h cmp r11d,r8d                  ; CMP(Cmp_r32_rm32) [R11D,R8D]                         encoding(3 bytes) = 45 3b d8
002bh jne short 007ah               ; JNE(Jne_rel8_64) [7Ah:jmp64]                         encoding(2 bytes) = 75 4d
002dh xor ebx,ebx                   ; XOR(Xor_r32_rm32) [EBX,EBX]                          encoding(2 bytes) = 33 db
002fh test r11d,r11d                ; TEST(Test_rm32_r32) [R11D,R11D]                      encoding(3 bytes) = 45 85 db
0032h jle short 0065h               ; JLE(Jle_rel8_64) [65h:jmp64]                         encoding(2 bytes) = 7e 31
0034h movsxd rax,ebx                ; MOVSXD(Movsxd_r64_rm32) [RAX,EBX]                    encoding(3 bytes) = 48 63 c3
0037h mov [rsp+30h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 30
003ch lea rbp,[r10+rax]             ; LEA(Lea_r64_m) [RBP,mem(Unknown,R10:br,DS:sr)]       encoding(4 bytes) = 49 8d 2c 02
0040h movsx rax,byte ptr [rbp]      ; MOVSX(Movsx_r64_rm8) [RAX,mem(8i,RBP:br,SS:sr)]      encoding(5 bytes) = 48 0f be 45 00
0045h cmp ebx,r8d                   ; CMP(Cmp_r32_rm32) [EBX,R8D]                          encoding(3 bytes) = 41 3b d8
0048h jae near ptr 00d3h            ; JAE(Jae_rel32_64) [D3h:jmp64]                        encoding(6 bytes) = 0f 83 85 00 00 00
004eh mov rdx,[rsp+30h]             ; MOV(Mov_r64_rm64) [RDX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 54 24 30
0053h movsx rdi,byte ptr [r9+rdx]   ; MOVSX(Movsx_r64_rm8) [RDI,mem(8i,R9:br,DS:sr)]       encoding(5 bytes) = 49 0f be 3c 11
0058h cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
0059h idiv edi                      ; IDIV(Idiv_rm32) [EDI]                                encoding(2 bytes) = f7 ff
005bh mov [rbp],al                  ; MOV(Mov_rm8_r8) [mem(8u,RBP:br,SS:sr),AL]            encoding(3 bytes) = 88 45 00
005eh inc ebx                       ; INC(Inc_rm32) [EBX]                                  encoding(2 bytes) = ff c3
0060h cmp ebx,r11d                  ; CMP(Cmp_r32_rm32) [EBX,R11D]                         encoding(3 bytes) = 41 3b db
0063h jl short 0034h                ; JL(Jl_rel8_64) [34h:jmp64]                           encoding(2 bytes) = 7c cf
0065h mov [rcx],r10                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R10]        encoding(3 bytes) = 4c 89 11
0068h mov [rcx+8],r11d              ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R11D]       encoding(4 bytes) = 44 89 59 08
006ch mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
006fh add rsp,40h                   ; ADD(Add_rm64_imm8) [RSP,40h:imm64]                   encoding(4 bytes) = 48 83 c4 40
0073h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0074h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0075h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0076h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0077h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0079h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
007ah mov ecx,0ACBh                 ; MOV(Mov_r32_imm32) [ECX,acbh:imm32]                  encoding(5 bytes) = b9 cb 0a 00 00
007fh mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0089h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F472C50h:jmp64]                encoding(5 bytes) = e8 c2 2b 47 5f
008eh mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0091h mov ecx,0AD5h                 ; MOV(Mov_r32_imm32) [ECX,ad5h:imm32]                  encoding(5 bytes) = b9 d5 0a 00 00
0096h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00a0h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F472C50h:jmp64]                encoding(5 bytes) = e8 ab 2b 47 5f
00a5h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00a8h lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
00adh mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00b0h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00b4h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00b7h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00b9h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00bbh mov rax,[rsp+38h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 38
00c0h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00c5h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFC9D2A8h:jmp64]        encoding(5 bytes) = e8 de d1 c9 ff
00cah mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00cdh call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F455C80h:jmp64]                encoding(5 bytes) = e8 ae 5b 45 5f
00d2h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00d3h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A40E0h:jmp64]                encoding(5 bytes) = e8 08 40 5a 5f
00d8h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> idivBytes => new byte[217]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x40,0x4D,0x8B,0x08,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x12,0x44,0x8B,0x5A,0x08,0xBE,0xAF,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x41,0x8B,0xDB,0x41,0x8B,0xE8,0x45,0x3B,0xD8,0x75,0x4D,0x33,0xDB,0x45,0x85,0xDB,0x7E,0x31,0x48,0x63,0xC3,0x48,0x89,0x44,0x24,0x30,0x49,0x8D,0x2C,0x02,0x48,0x0F,0xBE,0x45,0x00,0x41,0x3B,0xD8,0x0F,0x83,0x85,0x00,0x00,0x00,0x48,0x8B,0x54,0x24,0x30,0x49,0x0F,0xBE,0x3C,0x11,0x99,0xF7,0xFF,0x88,0x45,0x00,0xFF,0xC3,0x41,0x3B,0xDB,0x7C,0xCF,0x4C,0x89,0x11,0x44,0x89,0x59,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x40,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0xCB,0x0A,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xC2,0x2B,0x47,0x5F,0x4C,0x8B,0xF0,0xB9,0xD5,0x0A,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xAB,0x2B,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x38,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x38,0x48,0x89,0x44,0x24,0x20,0xE8,0xDE,0xD1,0xC9,0xFF,0x48,0x8B,0xC8,0xE8,0xAE,0x5B,0x45,0x5F,0xCC,0xE8,0x08,0x40,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<byte> idiv(Span<byte> lhs, ReadOnlySpan<byte> rhs)
; location: [7FFC872C0DD0h, 7FFC872C0EA7h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,40h                   ; SUB(Sub_rm64_imm8) [RSP,40h:imm64]                   encoding(4 bytes) = 48 83 ec 40
000ah mov r9,[r8]                   ; MOV(Mov_r64_rm64) [R9,mem(64u,R8:br,DS:sr)]          encoding(3 bytes) = 4d 8b 08
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0014h mov r11d,[rdx+8]              ; MOV(Mov_r32_rm32) [R11D,mem(32u,RDX:br,DS:sr)]       encoding(4 bytes) = 44 8b 5a 08
0018h mov esi,0B7h                  ; MOV(Mov_r32_imm32) [ESI,b7h:imm32]                   encoding(5 bytes) = be b7 00 00 00
001dh mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0022h mov ebx,r11d                  ; MOV(Mov_r32_rm32) [EBX,R11D]                         encoding(3 bytes) = 41 8b db
0025h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0028h cmp r11d,r8d                  ; CMP(Cmp_r32_rm32) [R11D,R8D]                         encoding(3 bytes) = 45 3b d8
002bh jne short 0079h               ; JNE(Jne_rel8_64) [79h:jmp64]                         encoding(2 bytes) = 75 4c
002dh xor ebx,ebx                   ; XOR(Xor_r32_rm32) [EBX,EBX]                          encoding(2 bytes) = 33 db
002fh test r11d,r11d                ; TEST(Test_rm32_r32) [R11D,R11D]                      encoding(3 bytes) = 45 85 db
0032h jle short 0064h               ; JLE(Jle_rel8_64) [64h:jmp64]                         encoding(2 bytes) = 7e 30
0034h movsxd rax,ebx                ; MOVSXD(Movsxd_r64_rm32) [RAX,EBX]                    encoding(3 bytes) = 48 63 c3
0037h mov [rsp+30h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 30
003ch lea rbp,[r10+rax]             ; LEA(Lea_r64_m) [RBP,mem(Unknown,R10:br,DS:sr)]       encoding(4 bytes) = 49 8d 2c 02
0040h movzx eax,byte ptr [rbp]      ; MOVZX(Movzx_r32_rm8) [EAX,mem(8u,RBP:br,SS:sr)]      encoding(4 bytes) = 0f b6 45 00
0044h cmp ebx,r8d                   ; CMP(Cmp_r32_rm32) [EBX,R8D]                          encoding(3 bytes) = 41 3b d8
0047h jae near ptr 00d2h            ; JAE(Jae_rel32_64) [D2h:jmp64]                        encoding(6 bytes) = 0f 83 85 00 00 00
004dh mov rdx,[rsp+30h]             ; MOV(Mov_r64_rm64) [RDX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 54 24 30
0052h movzx edi,byte ptr [r9+rdx]   ; MOVZX(Movzx_r32_rm8) [EDI,mem(8u,R9:br,DS:sr)]       encoding(5 bytes) = 41 0f b6 3c 11
0057h cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
0058h idiv edi                      ; IDIV(Idiv_rm32) [EDI]                                encoding(2 bytes) = f7 ff
005ah mov [rbp],al                  ; MOV(Mov_rm8_r8) [mem(8u,RBP:br,SS:sr),AL]            encoding(3 bytes) = 88 45 00
005dh inc ebx                       ; INC(Inc_rm32) [EBX]                                  encoding(2 bytes) = ff c3
005fh cmp ebx,r11d                  ; CMP(Cmp_r32_rm32) [EBX,R11D]                         encoding(3 bytes) = 41 3b db
0062h jl short 0034h                ; JL(Jl_rel8_64) [34h:jmp64]                           encoding(2 bytes) = 7c d0
0064h mov [rcx],r10                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R10]        encoding(3 bytes) = 4c 89 11
0067h mov [rcx+8],r11d              ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R11D]       encoding(4 bytes) = 44 89 59 08
006bh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
006eh add rsp,40h                   ; ADD(Add_rm64_imm8) [RSP,40h:imm64]                   encoding(4 bytes) = 48 83 c4 40
0072h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0073h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0074h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0075h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0076h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0078h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0079h mov ecx,0ACBh                 ; MOV(Mov_r32_imm32) [ECX,acbh:imm32]                  encoding(5 bytes) = b9 cb 0a 00 00
007eh mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0088h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F472B50h:jmp64]                encoding(5 bytes) = e8 c3 2a 47 5f
008dh mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0090h mov ecx,0AD5h                 ; MOV(Mov_r32_imm32) [ECX,ad5h:imm32]                  encoding(5 bytes) = b9 d5 0a 00 00
0095h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
009fh call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F472B50h:jmp64]                encoding(5 bytes) = e8 ac 2a 47 5f
00a4h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00a7h lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
00ach mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00afh mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00b3h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00b6h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00b8h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00bah mov rax,[rsp+38h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 38
00bfh mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00c4h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFC9D1A8h:jmp64]        encoding(5 bytes) = e8 df d0 c9 ff
00c9h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00cch call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F455B80h:jmp64]                encoding(5 bytes) = e8 af 5a 45 5f
00d1h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00d2h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A3FE0h:jmp64]                encoding(5 bytes) = e8 09 3f 5a 5f
00d7h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> idivBytes => new byte[216]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x40,0x4D,0x8B,0x08,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x12,0x44,0x8B,0x5A,0x08,0xBE,0xB7,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x41,0x8B,0xDB,0x41,0x8B,0xE8,0x45,0x3B,0xD8,0x75,0x4C,0x33,0xDB,0x45,0x85,0xDB,0x7E,0x30,0x48,0x63,0xC3,0x48,0x89,0x44,0x24,0x30,0x49,0x8D,0x2C,0x02,0x0F,0xB6,0x45,0x00,0x41,0x3B,0xD8,0x0F,0x83,0x85,0x00,0x00,0x00,0x48,0x8B,0x54,0x24,0x30,0x41,0x0F,0xB6,0x3C,0x11,0x99,0xF7,0xFF,0x88,0x45,0x00,0xFF,0xC3,0x41,0x3B,0xDB,0x7C,0xD0,0x4C,0x89,0x11,0x44,0x89,0x59,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x40,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0xCB,0x0A,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xC3,0x2A,0x47,0x5F,0x4C,0x8B,0xF0,0xB9,0xD5,0x0A,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xAC,0x2A,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x38,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x38,0x48,0x89,0x44,0x24,0x20,0xE8,0xDF,0xD0,0xC9,0xFF,0x48,0x8B,0xC8,0xE8,0xAF,0x5A,0x45,0x5F,0xCC,0xE8,0x09,0x3F,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<short> idiv(Span<short> lhs, ReadOnlySpan<short> rhs)
; location: [7FFC872C0ED0h, 7FFC872C0FA9h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,40h                   ; SUB(Sub_rm64_imm8) [RSP,40h:imm64]                   encoding(4 bytes) = 48 83 ec 40
000ah mov r9,[r8]                   ; MOV(Mov_r64_rm64) [R9,mem(64u,R8:br,DS:sr)]          encoding(3 bytes) = 4d 8b 08
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0014h mov r11d,[rdx+8]              ; MOV(Mov_r32_rm32) [R11D,mem(32u,RDX:br,DS:sr)]       encoding(4 bytes) = 44 8b 5a 08
0018h mov esi,0BFh                  ; MOV(Mov_r32_imm32) [ESI,bfh:imm32]                   encoding(5 bytes) = be bf 00 00 00
001dh mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0022h mov ebx,r11d                  ; MOV(Mov_r32_rm32) [EBX,R11D]                         encoding(3 bytes) = 41 8b db
0025h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0028h cmp r11d,r8d                  ; CMP(Cmp_r32_rm32) [R11D,R8D]                         encoding(3 bytes) = 45 3b d8
002bh jne short 007bh               ; JNE(Jne_rel8_64) [7Bh:jmp64]                         encoding(2 bytes) = 75 4e
002dh xor ebx,ebx                   ; XOR(Xor_r32_rm32) [EBX,EBX]                          encoding(2 bytes) = 33 db
002fh test r11d,r11d                ; TEST(Test_rm32_r32) [R11D,R11D]                      encoding(3 bytes) = 45 85 db
0032h jle short 0066h               ; JLE(Jle_rel8_64) [66h:jmp64]                         encoding(2 bytes) = 7e 32
0034h movsxd rax,ebx                ; MOVSXD(Movsxd_r64_rm32) [RAX,EBX]                    encoding(3 bytes) = 48 63 c3
0037h mov [rsp+30h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 30
003ch lea rbp,[r10+rax*2]           ; LEA(Lea_r64_m) [RBP,mem(Unknown,R10:br,DS:sr)]       encoding(4 bytes) = 49 8d 2c 42
0040h movsx rax,word ptr [rbp]      ; MOVSX(Movsx_r64_rm16) [RAX,mem(16i,RBP:br,SS:sr)]    encoding(5 bytes) = 48 0f bf 45 00
0045h cmp ebx,r8d                   ; CMP(Cmp_r32_rm32) [EBX,R8D]                          encoding(3 bytes) = 41 3b d8
0048h jae near ptr 00d4h            ; JAE(Jae_rel32_64) [D4h:jmp64]                        encoding(6 bytes) = 0f 83 86 00 00 00
004eh mov rdx,[rsp+30h]             ; MOV(Mov_r64_rm64) [RDX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 54 24 30
0053h movsx rdi,word ptr [r9+rdx*2] ; MOVSX(Movsx_r64_rm16) [RDI,mem(16i,R9:br,DS:sr)]     encoding(5 bytes) = 49 0f bf 3c 51
0058h cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
0059h idiv edi                      ; IDIV(Idiv_rm32) [EDI]                                encoding(2 bytes) = f7 ff
005bh mov [rbp],ax                  ; MOV(Mov_rm16_r16) [mem(16u,RBP:br,SS:sr),AX]         encoding(4 bytes) = 66 89 45 00
005fh inc ebx                       ; INC(Inc_rm32) [EBX]                                  encoding(2 bytes) = ff c3
0061h cmp ebx,r11d                  ; CMP(Cmp_r32_rm32) [EBX,R11D]                         encoding(3 bytes) = 41 3b db
0064h jl short 0034h                ; JL(Jl_rel8_64) [34h:jmp64]                           encoding(2 bytes) = 7c ce
0066h mov [rcx],r10                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R10]        encoding(3 bytes) = 4c 89 11
0069h mov [rcx+8],r11d              ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R11D]       encoding(4 bytes) = 44 89 59 08
006dh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0070h add rsp,40h                   ; ADD(Add_rm64_imm8) [RSP,40h:imm64]                   encoding(4 bytes) = 48 83 c4 40
0074h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0075h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0076h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0077h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0078h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
007ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
007bh mov ecx,0ACBh                 ; MOV(Mov_r32_imm32) [ECX,acbh:imm32]                  encoding(5 bytes) = b9 cb 0a 00 00
0080h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
008ah call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F472A50h:jmp64]                encoding(5 bytes) = e8 c1 29 47 5f
008fh mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0092h mov ecx,0AD5h                 ; MOV(Mov_r32_imm32) [ECX,ad5h:imm32]                  encoding(5 bytes) = b9 d5 0a 00 00
0097h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00a1h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F472A50h:jmp64]                encoding(5 bytes) = e8 aa 29 47 5f
00a6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00a9h lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
00aeh mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00b1h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00b5h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00b8h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00bah mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00bch mov rax,[rsp+38h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 38
00c1h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00c6h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFC9D0A8h:jmp64]        encoding(5 bytes) = e8 dd cf c9 ff
00cbh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00ceh call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F455A80h:jmp64]                encoding(5 bytes) = e8 ad 59 45 5f
00d3h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00d4h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A3EE0h:jmp64]                encoding(5 bytes) = e8 07 3e 5a 5f
00d9h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> idivBytes => new byte[218]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x40,0x4D,0x8B,0x08,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x12,0x44,0x8B,0x5A,0x08,0xBE,0xBF,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x41,0x8B,0xDB,0x41,0x8B,0xE8,0x45,0x3B,0xD8,0x75,0x4E,0x33,0xDB,0x45,0x85,0xDB,0x7E,0x32,0x48,0x63,0xC3,0x48,0x89,0x44,0x24,0x30,0x49,0x8D,0x2C,0x42,0x48,0x0F,0xBF,0x45,0x00,0x41,0x3B,0xD8,0x0F,0x83,0x86,0x00,0x00,0x00,0x48,0x8B,0x54,0x24,0x30,0x49,0x0F,0xBF,0x3C,0x51,0x99,0xF7,0xFF,0x66,0x89,0x45,0x00,0xFF,0xC3,0x41,0x3B,0xDB,0x7C,0xCE,0x4C,0x89,0x11,0x44,0x89,0x59,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x40,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0xCB,0x0A,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xC1,0x29,0x47,0x5F,0x4C,0x8B,0xF0,0xB9,0xD5,0x0A,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xAA,0x29,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x38,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x38,0x48,0x89,0x44,0x24,0x20,0xE8,0xDD,0xCF,0xC9,0xFF,0x48,0x8B,0xC8,0xE8,0xAD,0x59,0x45,0x5F,0xCC,0xE8,0x07,0x3E,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<ushort> idiv(Span<ushort> lhs, ReadOnlySpan<ushort> rhs)
; location: [7FFC872C0FD0h, 7FFC872C10A8h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,40h                   ; SUB(Sub_rm64_imm8) [RSP,40h:imm64]                   encoding(4 bytes) = 48 83 ec 40
000ah mov r9,[r8]                   ; MOV(Mov_r64_rm64) [R9,mem(64u,R8:br,DS:sr)]          encoding(3 bytes) = 4d 8b 08
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0014h mov r11d,[rdx+8]              ; MOV(Mov_r32_rm32) [R11D,mem(32u,RDX:br,DS:sr)]       encoding(4 bytes) = 44 8b 5a 08
0018h mov esi,0C7h                  ; MOV(Mov_r32_imm32) [ESI,c7h:imm32]                   encoding(5 bytes) = be c7 00 00 00
001dh mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0022h mov ebx,r11d                  ; MOV(Mov_r32_rm32) [EBX,R11D]                         encoding(3 bytes) = 41 8b db
0025h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0028h cmp r11d,r8d                  ; CMP(Cmp_r32_rm32) [R11D,R8D]                         encoding(3 bytes) = 45 3b d8
002bh jne short 007ah               ; JNE(Jne_rel8_64) [7Ah:jmp64]                         encoding(2 bytes) = 75 4d
002dh xor ebx,ebx                   ; XOR(Xor_r32_rm32) [EBX,EBX]                          encoding(2 bytes) = 33 db
002fh test r11d,r11d                ; TEST(Test_rm32_r32) [R11D,R11D]                      encoding(3 bytes) = 45 85 db
0032h jle short 0065h               ; JLE(Jle_rel8_64) [65h:jmp64]                         encoding(2 bytes) = 7e 31
0034h movsxd rax,ebx                ; MOVSXD(Movsxd_r64_rm32) [RAX,EBX]                    encoding(3 bytes) = 48 63 c3
0037h mov [rsp+30h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 30
003ch lea rbp,[r10+rax*2]           ; LEA(Lea_r64_m) [RBP,mem(Unknown,R10:br,DS:sr)]       encoding(4 bytes) = 49 8d 2c 42
0040h movzx eax,word ptr [rbp]      ; MOVZX(Movzx_r32_rm16) [EAX,mem(16u,RBP:br,SS:sr)]    encoding(4 bytes) = 0f b7 45 00
0044h cmp ebx,r8d                   ; CMP(Cmp_r32_rm32) [EBX,R8D]                          encoding(3 bytes) = 41 3b d8
0047h jae near ptr 00d3h            ; JAE(Jae_rel32_64) [D3h:jmp64]                        encoding(6 bytes) = 0f 83 86 00 00 00
004dh mov rdx,[rsp+30h]             ; MOV(Mov_r64_rm64) [RDX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 54 24 30
0052h movzx edi,word ptr [r9+rdx*2] ; MOVZX(Movzx_r32_rm16) [EDI,mem(16u,R9:br,DS:sr)]     encoding(5 bytes) = 41 0f b7 3c 51
0057h cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
0058h idiv edi                      ; IDIV(Idiv_rm32) [EDI]                                encoding(2 bytes) = f7 ff
005ah mov [rbp],ax                  ; MOV(Mov_rm16_r16) [mem(16u,RBP:br,SS:sr),AX]         encoding(4 bytes) = 66 89 45 00
005eh inc ebx                       ; INC(Inc_rm32) [EBX]                                  encoding(2 bytes) = ff c3
0060h cmp ebx,r11d                  ; CMP(Cmp_r32_rm32) [EBX,R11D]                         encoding(3 bytes) = 41 3b db
0063h jl short 0034h                ; JL(Jl_rel8_64) [34h:jmp64]                           encoding(2 bytes) = 7c cf
0065h mov [rcx],r10                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R10]        encoding(3 bytes) = 4c 89 11
0068h mov [rcx+8],r11d              ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R11D]       encoding(4 bytes) = 44 89 59 08
006ch mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
006fh add rsp,40h                   ; ADD(Add_rm64_imm8) [RSP,40h:imm64]                   encoding(4 bytes) = 48 83 c4 40
0073h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0074h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0075h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0076h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0077h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0079h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
007ah mov ecx,0ACBh                 ; MOV(Mov_r32_imm32) [ECX,acbh:imm32]                  encoding(5 bytes) = b9 cb 0a 00 00
007fh mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0089h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F472950h:jmp64]                encoding(5 bytes) = e8 c2 28 47 5f
008eh mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0091h mov ecx,0AD5h                 ; MOV(Mov_r32_imm32) [ECX,ad5h:imm32]                  encoding(5 bytes) = b9 d5 0a 00 00
0096h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00a0h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F472950h:jmp64]                encoding(5 bytes) = e8 ab 28 47 5f
00a5h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00a8h lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
00adh mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00b0h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00b4h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00b7h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00b9h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00bbh mov rax,[rsp+38h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 38
00c0h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00c5h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFC9CFA8h:jmp64]        encoding(5 bytes) = e8 de ce c9 ff
00cah mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00cdh call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F455980h:jmp64]                encoding(5 bytes) = e8 ae 58 45 5f
00d2h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00d3h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A3DE0h:jmp64]                encoding(5 bytes) = e8 08 3d 5a 5f
00d8h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> idivBytes => new byte[217]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x40,0x4D,0x8B,0x08,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x12,0x44,0x8B,0x5A,0x08,0xBE,0xC7,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x41,0x8B,0xDB,0x41,0x8B,0xE8,0x45,0x3B,0xD8,0x75,0x4D,0x33,0xDB,0x45,0x85,0xDB,0x7E,0x31,0x48,0x63,0xC3,0x48,0x89,0x44,0x24,0x30,0x49,0x8D,0x2C,0x42,0x0F,0xB7,0x45,0x00,0x41,0x3B,0xD8,0x0F,0x83,0x86,0x00,0x00,0x00,0x48,0x8B,0x54,0x24,0x30,0x41,0x0F,0xB7,0x3C,0x51,0x99,0xF7,0xFF,0x66,0x89,0x45,0x00,0xFF,0xC3,0x41,0x3B,0xDB,0x7C,0xCF,0x4C,0x89,0x11,0x44,0x89,0x59,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x40,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0xCB,0x0A,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xC2,0x28,0x47,0x5F,0x4C,0x8B,0xF0,0xB9,0xD5,0x0A,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xAB,0x28,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x38,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x38,0x48,0x89,0x44,0x24,0x20,0xE8,0xDE,0xCE,0xC9,0xFF,0x48,0x8B,0xC8,0xE8,0xAE,0x58,0x45,0x5F,0xCC,0xE8,0x08,0x3D,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<int> idiv(Span<int> lhs, ReadOnlySpan<int> rhs)
; location: [7FFC872C10D0h, 7FFC872C1197h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov r9,[r8]                   ; MOV(Mov_r64_rm64) [R9,mem(64u,R8:br,DS:sr)]          encoding(3 bytes) = 4d 8b 08
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0014h mov r11d,[rdx+8]              ; MOV(Mov_r32_rm32) [R11D,mem(32u,RDX:br,DS:sr)]       encoding(4 bytes) = 44 8b 5a 08
0018h mov esi,0CFh                  ; MOV(Mov_r32_imm32) [ESI,cfh:imm32]                   encoding(5 bytes) = be cf 00 00 00
001dh mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0022h mov ebx,r11d                  ; MOV(Mov_r32_rm32) [EBX,R11D]                         encoding(3 bytes) = 41 8b db
0025h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0028h cmp r11d,r8d                  ; CMP(Cmp_r32_rm32) [R11D,R8D]                         encoding(3 bytes) = 45 3b d8
002bh jne short 0069h               ; JNE(Jne_rel8_64) [69h:jmp64]                         encoding(2 bytes) = 75 3c
002dh xor ebx,ebx                   ; XOR(Xor_r32_rm32) [EBX,EBX]                          encoding(2 bytes) = 33 db
002fh test r11d,r11d                ; TEST(Test_rm32_r32) [R11D,R11D]                      encoding(3 bytes) = 45 85 db
0032h jle short 0054h               ; JLE(Jle_rel8_64) [54h:jmp64]                         encoding(2 bytes) = 7e 20
0034h movsxd rbp,ebx                ; MOVSXD(Movsxd_r64_rm32) [RBP,EBX]                    encoding(3 bytes) = 48 63 eb
0037h lea rdi,[r10+rbp*4]           ; LEA(Lea_r64_m) [RDI,mem(Unknown,R10:br,DS:sr)]       encoding(4 bytes) = 49 8d 3c aa
003bh mov eax,[rdi]                 ; MOV(Mov_r32_rm32) [EAX,mem(32u,RDI:br,DS:sr)]        encoding(2 bytes) = 8b 07
003dh cmp ebx,r8d                   ; CMP(Cmp_r32_rm32) [EBX,R8D]                          encoding(3 bytes) = 41 3b d8
0040h jae near ptr 00c2h            ; JAE(Jae_rel32_64) [C2h:jmp64]                        encoding(6 bytes) = 0f 83 7c 00 00 00
0046h cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
0047h idiv dword ptr [r9+rbp*4]     ; IDIV(Idiv_rm32) [mem(32i,R9:br,DS:sr)]               encoding(4 bytes) = 41 f7 3c a9
004bh mov [rdi],eax                 ; MOV(Mov_rm32_r32) [mem(32u,RDI:br,DS:sr),EAX]        encoding(2 bytes) = 89 07
004dh inc ebx                       ; INC(Inc_rm32) [EBX]                                  encoding(2 bytes) = ff c3
004fh cmp ebx,r11d                  ; CMP(Cmp_r32_rm32) [EBX,R11D]                         encoding(3 bytes) = 41 3b db
0052h jl short 0034h                ; JL(Jl_rel8_64) [34h:jmp64]                           encoding(2 bytes) = 7c e0
0054h mov [rcx],r10                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R10]        encoding(3 bytes) = 4c 89 11
0057h mov [rcx+8],r11d              ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R11D]       encoding(4 bytes) = 44 89 59 08
005bh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
005eh add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0062h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0063h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0064h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0065h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0066h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0068h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0069h mov ecx,0ACBh                 ; MOV(Mov_r32_imm32) [ECX,acbh:imm32]                  encoding(5 bytes) = b9 cb 0a 00 00
006eh mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0078h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F472850h:jmp64]                encoding(5 bytes) = e8 d3 27 47 5f
007dh mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0080h mov ecx,0AD5h                 ; MOV(Mov_r32_imm32) [ECX,ad5h:imm32]                  encoding(5 bytes) = b9 d5 0a 00 00
0085h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
008fh call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F472850h:jmp64]                encoding(5 bytes) = e8 bc 27 47 5f
0094h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
0097h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
009ch mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
009fh mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00a3h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00a6h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00a8h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00aah mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00afh mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b4h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFC9CEA8h:jmp64]        encoding(5 bytes) = e8 ef cd c9 ff
00b9h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00bch call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F455880h:jmp64]                encoding(5 bytes) = e8 bf 57 45 5f
00c1h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00c2h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A3CE0h:jmp64]                encoding(5 bytes) = e8 19 3c 5a 5f
00c7h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> idivBytes => new byte[200]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x4D,0x8B,0x08,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x12,0x44,0x8B,0x5A,0x08,0xBE,0xCF,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x41,0x8B,0xDB,0x41,0x8B,0xE8,0x45,0x3B,0xD8,0x75,0x3C,0x33,0xDB,0x45,0x85,0xDB,0x7E,0x20,0x48,0x63,0xEB,0x49,0x8D,0x3C,0xAA,0x8B,0x07,0x41,0x3B,0xD8,0x0F,0x83,0x7C,0x00,0x00,0x00,0x99,0x41,0xF7,0x3C,0xA9,0x89,0x07,0xFF,0xC3,0x41,0x3B,0xDB,0x7C,0xE0,0x4C,0x89,0x11,0x44,0x89,0x59,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0xCB,0x0A,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xD3,0x27,0x47,0x5F,0x4C,0x8B,0xF0,0xB9,0xD5,0x0A,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xBC,0x27,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0xEF,0xCD,0xC9,0xFF,0x48,0x8B,0xC8,0xE8,0xBF,0x57,0x45,0x5F,0xCC,0xE8,0x19,0x3C,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<uint> idiv(Span<uint> lhs, ReadOnlySpan<uint> rhs)
; location: [7FFC872C11C0h, 7FFC872C1288h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov r9,[r8]                   ; MOV(Mov_r64_rm64) [R9,mem(64u,R8:br,DS:sr)]          encoding(3 bytes) = 4d 8b 08
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0014h mov r11d,[rdx+8]              ; MOV(Mov_r32_rm32) [R11D,mem(32u,RDX:br,DS:sr)]       encoding(4 bytes) = 44 8b 5a 08
0018h mov esi,0D7h                  ; MOV(Mov_r32_imm32) [ESI,d7h:imm32]                   encoding(5 bytes) = be d7 00 00 00
001dh mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0022h mov ebx,r11d                  ; MOV(Mov_r32_rm32) [EBX,R11D]                         encoding(3 bytes) = 41 8b db
0025h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0028h cmp r11d,r8d                  ; CMP(Cmp_r32_rm32) [R11D,R8D]                         encoding(3 bytes) = 45 3b d8
002bh jne short 006ah               ; JNE(Jne_rel8_64) [6Ah:jmp64]                         encoding(2 bytes) = 75 3d
002dh xor ebx,ebx                   ; XOR(Xor_r32_rm32) [EBX,EBX]                          encoding(2 bytes) = 33 db
002fh test r11d,r11d                ; TEST(Test_rm32_r32) [R11D,R11D]                      encoding(3 bytes) = 45 85 db
0032h jle short 0055h               ; JLE(Jle_rel8_64) [55h:jmp64]                         encoding(2 bytes) = 7e 21
0034h movsxd rbp,ebx                ; MOVSXD(Movsxd_r64_rm32) [RBP,EBX]                    encoding(3 bytes) = 48 63 eb
0037h lea rdi,[r10+rbp*4]           ; LEA(Lea_r64_m) [RDI,mem(Unknown,R10:br,DS:sr)]       encoding(4 bytes) = 49 8d 3c aa
003bh mov eax,[rdi]                 ; MOV(Mov_r32_rm32) [EAX,mem(32u,RDI:br,DS:sr)]        encoding(2 bytes) = 8b 07
003dh cmp ebx,r8d                   ; CMP(Cmp_r32_rm32) [EBX,R8D]                          encoding(3 bytes) = 41 3b d8
0040h jae near ptr 00c3h            ; JAE(Jae_rel32_64) [C3h:jmp64]                        encoding(6 bytes) = 0f 83 7d 00 00 00
0046h xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
0048h div dword ptr [r9+rbp*4]      ; DIV(Div_rm32) [mem(32u,R9:br,DS:sr)]                 encoding(4 bytes) = 41 f7 34 a9
004ch mov [rdi],eax                 ; MOV(Mov_rm32_r32) [mem(32u,RDI:br,DS:sr),EAX]        encoding(2 bytes) = 89 07
004eh inc ebx                       ; INC(Inc_rm32) [EBX]                                  encoding(2 bytes) = ff c3
0050h cmp ebx,r11d                  ; CMP(Cmp_r32_rm32) [EBX,R11D]                         encoding(3 bytes) = 41 3b db
0053h jl short 0034h                ; JL(Jl_rel8_64) [34h:jmp64]                           encoding(2 bytes) = 7c df
0055h mov [rcx],r10                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R10]        encoding(3 bytes) = 4c 89 11
0058h mov [rcx+8],r11d              ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R11D]       encoding(4 bytes) = 44 89 59 08
005ch mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
005fh add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0063h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0064h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0065h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0066h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0067h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0069h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
006ah mov ecx,0ACBh                 ; MOV(Mov_r32_imm32) [ECX,acbh:imm32]                  encoding(5 bytes) = b9 cb 0a 00 00
006fh mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0079h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F472760h:jmp64]                encoding(5 bytes) = e8 e2 26 47 5f
007eh mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0081h mov ecx,0AD5h                 ; MOV(Mov_r32_imm32) [ECX,ad5h:imm32]                  encoding(5 bytes) = b9 d5 0a 00 00
0086h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0090h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F472760h:jmp64]                encoding(5 bytes) = e8 cb 26 47 5f
0095h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
0098h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
009dh mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00a0h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00a4h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00a7h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00a9h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00abh mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00b0h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b5h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFC9CDB8h:jmp64]        encoding(5 bytes) = e8 fe cc c9 ff
00bah mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00bdh call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F455790h:jmp64]                encoding(5 bytes) = e8 ce 56 45 5f
00c2h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00c3h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A3BF0h:jmp64]                encoding(5 bytes) = e8 28 3b 5a 5f
00c8h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> idivBytes => new byte[201]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x4D,0x8B,0x08,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x12,0x44,0x8B,0x5A,0x08,0xBE,0xD7,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x41,0x8B,0xDB,0x41,0x8B,0xE8,0x45,0x3B,0xD8,0x75,0x3D,0x33,0xDB,0x45,0x85,0xDB,0x7E,0x21,0x48,0x63,0xEB,0x49,0x8D,0x3C,0xAA,0x8B,0x07,0x41,0x3B,0xD8,0x0F,0x83,0x7D,0x00,0x00,0x00,0x33,0xD2,0x41,0xF7,0x34,0xA9,0x89,0x07,0xFF,0xC3,0x41,0x3B,0xDB,0x7C,0xDF,0x4C,0x89,0x11,0x44,0x89,0x59,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0xCB,0x0A,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xE2,0x26,0x47,0x5F,0x4C,0x8B,0xF0,0xB9,0xD5,0x0A,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xCB,0x26,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0xFE,0xCC,0xC9,0xFF,0x48,0x8B,0xC8,0xE8,0xCE,0x56,0x45,0x5F,0xCC,0xE8,0x28,0x3B,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<long> idiv(Span<long> lhs, ReadOnlySpan<long> rhs)
; location: [7FFC872C12B0h, 7FFC872C137Ah]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov r9,[r8]                   ; MOV(Mov_r64_rm64) [R9,mem(64u,R8:br,DS:sr)]          encoding(3 bytes) = 4d 8b 08
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0014h mov r11d,[rdx+8]              ; MOV(Mov_r32_rm32) [R11D,mem(32u,RDX:br,DS:sr)]       encoding(4 bytes) = 44 8b 5a 08
0018h mov esi,0DFh                  ; MOV(Mov_r32_imm32) [ESI,dfh:imm32]                   encoding(5 bytes) = be df 00 00 00
001dh mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0022h mov ebx,r11d                  ; MOV(Mov_r32_rm32) [EBX,R11D]                         encoding(3 bytes) = 41 8b db
0025h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0028h cmp r11d,r8d                  ; CMP(Cmp_r32_rm32) [R11D,R8D]                         encoding(3 bytes) = 45 3b d8
002bh jne short 006ch               ; JNE(Jne_rel8_64) [6Ch:jmp64]                         encoding(2 bytes) = 75 3f
002dh xor ebx,ebx                   ; XOR(Xor_r32_rm32) [EBX,EBX]                          encoding(2 bytes) = 33 db
002fh test r11d,r11d                ; TEST(Test_rm32_r32) [R11D,R11D]                      encoding(3 bytes) = 45 85 db
0032h jle short 0057h               ; JLE(Jle_rel8_64) [57h:jmp64]                         encoding(2 bytes) = 7e 23
0034h movsxd rbp,ebx                ; MOVSXD(Movsxd_r64_rm32) [RBP,EBX]                    encoding(3 bytes) = 48 63 eb
0037h lea rdi,[r10+rbp*8]           ; LEA(Lea_r64_m) [RDI,mem(Unknown,R10:br,DS:sr)]       encoding(4 bytes) = 49 8d 3c ea
003bh mov rax,[rdi]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RDI:br,DS:sr)]        encoding(3 bytes) = 48 8b 07
003eh cmp ebx,r8d                   ; CMP(Cmp_r32_rm32) [EBX,R8D]                          encoding(3 bytes) = 41 3b d8
0041h jae near ptr 00c5h            ; JAE(Jae_rel32_64) [C5h:jmp64]                        encoding(6 bytes) = 0f 83 7e 00 00 00
0047h cqo                           ; CQO(Cqo)                                             encoding(2 bytes) = 48 99
0049h idiv qword ptr [r9+rbp*8]     ; IDIV(Idiv_rm64) [mem(64i,R9:br,DS:sr)]               encoding(4 bytes) = 49 f7 3c e9
004dh mov [rdi],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RDI:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 07
0050h inc ebx                       ; INC(Inc_rm32) [EBX]                                  encoding(2 bytes) = ff c3
0052h cmp ebx,r11d                  ; CMP(Cmp_r32_rm32) [EBX,R11D]                         encoding(3 bytes) = 41 3b db
0055h jl short 0034h                ; JL(Jl_rel8_64) [34h:jmp64]                           encoding(2 bytes) = 7c dd
0057h mov [rcx],r10                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R10]        encoding(3 bytes) = 4c 89 11
005ah mov [rcx+8],r11d              ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R11D]       encoding(4 bytes) = 44 89 59 08
005eh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0061h add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0065h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0066h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0067h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0068h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0069h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
006bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
006ch mov ecx,0ACBh                 ; MOV(Mov_r32_imm32) [ECX,acbh:imm32]                  encoding(5 bytes) = b9 cb 0a 00 00
0071h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
007bh call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F472670h:jmp64]                encoding(5 bytes) = e8 f0 25 47 5f
0080h mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0083h mov ecx,0AD5h                 ; MOV(Mov_r32_imm32) [ECX,ad5h:imm32]                  encoding(5 bytes) = b9 d5 0a 00 00
0088h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0092h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F472670h:jmp64]                encoding(5 bytes) = e8 d9 25 47 5f
0097h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
009ah lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
009fh mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00a2h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00a6h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00a9h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00abh mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00adh mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00b2h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b7h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFC9CCC8h:jmp64]        encoding(5 bytes) = e8 0c cc c9 ff
00bch mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00bfh call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F4556A0h:jmp64]                encoding(5 bytes) = e8 dc 55 45 5f
00c4h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00c5h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A3B00h:jmp64]                encoding(5 bytes) = e8 36 3a 5a 5f
00cah int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> idivBytes => new byte[203]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x4D,0x8B,0x08,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x12,0x44,0x8B,0x5A,0x08,0xBE,0xDF,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x41,0x8B,0xDB,0x41,0x8B,0xE8,0x45,0x3B,0xD8,0x75,0x3F,0x33,0xDB,0x45,0x85,0xDB,0x7E,0x23,0x48,0x63,0xEB,0x49,0x8D,0x3C,0xEA,0x48,0x8B,0x07,0x41,0x3B,0xD8,0x0F,0x83,0x7E,0x00,0x00,0x00,0x48,0x99,0x49,0xF7,0x3C,0xE9,0x48,0x89,0x07,0xFF,0xC3,0x41,0x3B,0xDB,0x7C,0xDD,0x4C,0x89,0x11,0x44,0x89,0x59,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0xCB,0x0A,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xF0,0x25,0x47,0x5F,0x4C,0x8B,0xF0,0xB9,0xD5,0x0A,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xD9,0x25,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x0C,0xCC,0xC9,0xFF,0x48,0x8B,0xC8,0xE8,0xDC,0x55,0x45,0x5F,0xCC,0xE8,0x36,0x3A,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<ulong> idiv(Span<ulong> lhs, ReadOnlySpan<ulong> rhs)
; location: [7FFC872C13A0h, 7FFC872C146Ah]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov r9,[r8]                   ; MOV(Mov_r64_rm64) [R9,mem(64u,R8:br,DS:sr)]          encoding(3 bytes) = 4d 8b 08
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0014h mov r11d,[rdx+8]              ; MOV(Mov_r32_rm32) [R11D,mem(32u,RDX:br,DS:sr)]       encoding(4 bytes) = 44 8b 5a 08
0018h mov esi,0E7h                  ; MOV(Mov_r32_imm32) [ESI,e7h:imm32]                   encoding(5 bytes) = be e7 00 00 00
001dh mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0022h mov ebx,r11d                  ; MOV(Mov_r32_rm32) [EBX,R11D]                         encoding(3 bytes) = 41 8b db
0025h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0028h cmp r11d,r8d                  ; CMP(Cmp_r32_rm32) [R11D,R8D]                         encoding(3 bytes) = 45 3b d8
002bh jne short 006ch               ; JNE(Jne_rel8_64) [6Ch:jmp64]                         encoding(2 bytes) = 75 3f
002dh xor ebx,ebx                   ; XOR(Xor_r32_rm32) [EBX,EBX]                          encoding(2 bytes) = 33 db
002fh test r11d,r11d                ; TEST(Test_rm32_r32) [R11D,R11D]                      encoding(3 bytes) = 45 85 db
0032h jle short 0057h               ; JLE(Jle_rel8_64) [57h:jmp64]                         encoding(2 bytes) = 7e 23
0034h movsxd rbp,ebx                ; MOVSXD(Movsxd_r64_rm32) [RBP,EBX]                    encoding(3 bytes) = 48 63 eb
0037h lea rdi,[r10+rbp*8]           ; LEA(Lea_r64_m) [RDI,mem(Unknown,R10:br,DS:sr)]       encoding(4 bytes) = 49 8d 3c ea
003bh mov rax,[rdi]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RDI:br,DS:sr)]        encoding(3 bytes) = 48 8b 07
003eh cmp ebx,r8d                   ; CMP(Cmp_r32_rm32) [EBX,R8D]                          encoding(3 bytes) = 41 3b d8
0041h jae near ptr 00c5h            ; JAE(Jae_rel32_64) [C5h:jmp64]                        encoding(6 bytes) = 0f 83 7e 00 00 00
0047h xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
0049h div qword ptr [r9+rbp*8]      ; DIV(Div_rm64) [mem(64u,R9:br,DS:sr)]                 encoding(4 bytes) = 49 f7 34 e9
004dh mov [rdi],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RDI:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 07
0050h inc ebx                       ; INC(Inc_rm32) [EBX]                                  encoding(2 bytes) = ff c3
0052h cmp ebx,r11d                  ; CMP(Cmp_r32_rm32) [EBX,R11D]                         encoding(3 bytes) = 41 3b db
0055h jl short 0034h                ; JL(Jl_rel8_64) [34h:jmp64]                           encoding(2 bytes) = 7c dd
0057h mov [rcx],r10                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R10]        encoding(3 bytes) = 4c 89 11
005ah mov [rcx+8],r11d              ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R11D]       encoding(4 bytes) = 44 89 59 08
005eh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0061h add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0065h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0066h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0067h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0068h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0069h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
006bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
006ch mov ecx,0ACBh                 ; MOV(Mov_r32_imm32) [ECX,acbh:imm32]                  encoding(5 bytes) = b9 cb 0a 00 00
0071h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
007bh call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F472580h:jmp64]                encoding(5 bytes) = e8 00 25 47 5f
0080h mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0083h mov ecx,0AD5h                 ; MOV(Mov_r32_imm32) [ECX,ad5h:imm32]                  encoding(5 bytes) = b9 d5 0a 00 00
0088h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0092h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F472580h:jmp64]                encoding(5 bytes) = e8 e9 24 47 5f
0097h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
009ah lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
009fh mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00a2h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00a6h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00a9h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00abh mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00adh mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00b2h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b7h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFC9CBD8h:jmp64]        encoding(5 bytes) = e8 1c cb c9 ff
00bch mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00bfh call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F4555B0h:jmp64]                encoding(5 bytes) = e8 ec 54 45 5f
00c4h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00c5h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A3A10h:jmp64]                encoding(5 bytes) = e8 46 39 5a 5f
00cah int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> idivBytes => new byte[203]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x4D,0x8B,0x08,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x12,0x44,0x8B,0x5A,0x08,0xBE,0xE7,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x41,0x8B,0xDB,0x41,0x8B,0xE8,0x45,0x3B,0xD8,0x75,0x3F,0x33,0xDB,0x45,0x85,0xDB,0x7E,0x23,0x48,0x63,0xEB,0x49,0x8D,0x3C,0xEA,0x48,0x8B,0x07,0x41,0x3B,0xD8,0x0F,0x83,0x7E,0x00,0x00,0x00,0x33,0xD2,0x49,0xF7,0x34,0xE9,0x48,0x89,0x07,0xFF,0xC3,0x41,0x3B,0xDB,0x7C,0xDD,0x4C,0x89,0x11,0x44,0x89,0x59,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0xCB,0x0A,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x00,0x25,0x47,0x5F,0x4C,0x8B,0xF0,0xB9,0xD5,0x0A,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xE9,0x24,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x1C,0xCB,0xC9,0xFF,0x48,0x8B,0xC8,0xE8,0xEC,0x54,0x45,0x5F,0xCC,0xE8,0x46,0x39,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref ulong ilog2(ref ulong dst, ref ulong x, ulong power)
; location: [7FFC872C1490h, 7FFC872C14B2h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0008h mov r9d,1                     ; MOV(Mov_r32_imm32) [R9D,1h:imm32]                    encoding(6 bytes) = 41 b9 01 00 00 00
000eh mov ecx,r8d                   ; MOV(Mov_r32_rm32) [ECX,R8D]                          encoding(3 bytes) = 41 8b c8
0011h shl r9,cl                     ; SHL(Shl_rm64_CL) [R9,CL]                             encoding(3 bytes) = 49 d3 e1
0014h cmp [rdx],r9                  ; CMP(Cmp_rm64_r64) [mem(64u,RDX:br,DS:sr),R9]         encoding(3 bytes) = 4c 39 0a
0017h jb short 0022h                ; JB(Jb_rel8_64) [22h:jmp64]                           encoding(2 bytes) = 72 09
0019h mov ecx,r8d                   ; MOV(Mov_r32_rm32) [ECX,R8D]                          encoding(3 bytes) = 41 8b c8
001ch shr qword ptr [rdx],cl        ; SHR(Shr_rm64_CL) [mem(64u,RDX:br,DS:sr),CL]          encoding(3 bytes) = 48 d3 2a
001fh or [rax],r8                   ; OR(Or_rm64_r64) [mem(64u,RAX:br,DS:sr),R8]           encoding(3 bytes) = 4c 09 00
0022h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> ilog2Bytes => new byte[35]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0xC1,0x41,0xB9,0x01,0x00,0x00,0x00,0x41,0x8B,0xC8,0x49,0xD3,0xE1,0x4C,0x39,0x0A,0x72,0x09,0x41,0x8B,0xC8,0x48,0xD3,0x2A,0x4C,0x09,0x00,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ulong ilog2(ulong src)
; location: [7FFC872C14D0h, 7FFC872C1574h]
0000h push rax                      ; PUSH(Push_r64) [RAX]                                 encoding(1 byte ) = 50
0001h xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0003h mov [rsp],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(4 bytes) = 48 89 04 24
0007h xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0009h mov [rsp],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(4 bytes) = 48 89 04 24
000dh mov rax,100000000h            ; MOV(Mov_r64_imm64) [RAX,100000000h:imm64]            encoding(10 bytes) = 48 b8 00 00 00 00 01 00 00 00
0017h cmp rcx,rax                   ; CMP(Cmp_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 3b c8
001ah jb short 002ch                ; JB(Jb_rel8_64) [2Ch:jmp64]                           encoding(2 bytes) = 72 10
001ch shr rcx,20h                   ; SHR(Shr_rm64_imm8) [RCX,20h:imm8]                    encoding(4 bytes) = 48 c1 e9 20
0020h mov rax,[rsp]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(4 bytes) = 48 8b 04 24
0024h or rax,20h                    ; OR(Or_rm64_imm8) [RAX,20h:imm64]                     encoding(4 bytes) = 48 83 c8 20
0028h mov [rsp],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(4 bytes) = 48 89 04 24
002ch cmp rcx,10000h                ; CMP(Cmp_rm64_imm32) [RCX,10000h:imm64]               encoding(7 bytes) = 48 81 f9 00 00 01 00
0033h jb short 0045h                ; JB(Jb_rel8_64) [45h:jmp64]                           encoding(2 bytes) = 72 10
0035h shr rcx,10h                   ; SHR(Shr_rm64_imm8) [RCX,10h:imm8]                    encoding(4 bytes) = 48 c1 e9 10
0039h mov rax,[rsp]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(4 bytes) = 48 8b 04 24
003dh or rax,10h                    ; OR(Or_rm64_imm8) [RAX,10h:imm64]                     encoding(4 bytes) = 48 83 c8 10
0041h mov [rsp],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(4 bytes) = 48 89 04 24
0045h cmp rcx,100h                  ; CMP(Cmp_rm64_imm32) [RCX,100h:imm64]                 encoding(7 bytes) = 48 81 f9 00 01 00 00
004ch jb short 005eh                ; JB(Jb_rel8_64) [5Eh:jmp64]                           encoding(2 bytes) = 72 10
004eh shr rcx,8                     ; SHR(Shr_rm64_imm8) [RCX,8h:imm8]                     encoding(4 bytes) = 48 c1 e9 08
0052h mov rax,[rsp]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(4 bytes) = 48 8b 04 24
0056h or rax,8                      ; OR(Or_rm64_imm8) [RAX,8h:imm64]                      encoding(4 bytes) = 48 83 c8 08
005ah mov [rsp],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(4 bytes) = 48 89 04 24
005eh cmp rcx,10h                   ; CMP(Cmp_rm64_imm8) [RCX,10h:imm64]                   encoding(4 bytes) = 48 83 f9 10
0062h jb short 0074h                ; JB(Jb_rel8_64) [74h:jmp64]                           encoding(2 bytes) = 72 10
0064h shr rcx,4                     ; SHR(Shr_rm64_imm8) [RCX,4h:imm8]                     encoding(4 bytes) = 48 c1 e9 04
0068h mov rax,[rsp]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(4 bytes) = 48 8b 04 24
006ch or rax,4                      ; OR(Or_rm64_imm8) [RAX,4h:imm64]                      encoding(4 bytes) = 48 83 c8 04
0070h mov [rsp],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(4 bytes) = 48 89 04 24
0074h cmp rcx,4                     ; CMP(Cmp_rm64_imm8) [RCX,4h:imm64]                    encoding(4 bytes) = 48 83 f9 04
0078h jb short 008ah                ; JB(Jb_rel8_64) [8Ah:jmp64]                           encoding(2 bytes) = 72 10
007ah shr rcx,2                     ; SHR(Shr_rm64_imm8) [RCX,2h:imm8]                     encoding(4 bytes) = 48 c1 e9 02
007eh mov rax,[rsp]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(4 bytes) = 48 8b 04 24
0082h or rax,2                      ; OR(Or_rm64_imm8) [RAX,2h:imm64]                      encoding(4 bytes) = 48 83 c8 02
0086h mov [rsp],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(4 bytes) = 48 89 04 24
008ah cmp rcx,2                     ; CMP(Cmp_rm64_imm8) [RCX,2h:imm64]                    encoding(4 bytes) = 48 83 f9 02
008eh jb short 009ch                ; JB(Jb_rel8_64) [9Ch:jmp64]                           encoding(2 bytes) = 72 0c
0090h mov rax,[rsp]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(4 bytes) = 48 8b 04 24
0094h or rax,1                      ; OR(Or_rm64_imm8) [RAX,1h:imm64]                      encoding(4 bytes) = 48 83 c8 01
0098h mov [rsp],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(4 bytes) = 48 89 04 24
009ch mov rax,[rsp]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(4 bytes) = 48 8b 04 24
00a0h add rsp,8                     ; ADD(Add_rm64_imm8) [RSP,8h:imm64]                    encoding(4 bytes) = 48 83 c4 08
00a4h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> ilog2Bytes => new byte[165]{0x50,0x33,0xC0,0x48,0x89,0x04,0x24,0x33,0xC0,0x48,0x89,0x04,0x24,0x48,0xB8,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x48,0x3B,0xC8,0x72,0x10,0x48,0xC1,0xE9,0x20,0x48,0x8B,0x04,0x24,0x48,0x83,0xC8,0x20,0x48,0x89,0x04,0x24,0x48,0x81,0xF9,0x00,0x00,0x01,0x00,0x72,0x10,0x48,0xC1,0xE9,0x10,0x48,0x8B,0x04,0x24,0x48,0x83,0xC8,0x10,0x48,0x89,0x04,0x24,0x48,0x81,0xF9,0x00,0x01,0x00,0x00,0x72,0x10,0x48,0xC1,0xE9,0x08,0x48,0x8B,0x04,0x24,0x48,0x83,0xC8,0x08,0x48,0x89,0x04,0x24,0x48,0x83,0xF9,0x10,0x72,0x10,0x48,0xC1,0xE9,0x04,0x48,0x8B,0x04,0x24,0x48,0x83,0xC8,0x04,0x48,0x89,0x04,0x24,0x48,0x83,0xF9,0x04,0x72,0x10,0x48,0xC1,0xE9,0x02,0x48,0x8B,0x04,0x24,0x48,0x83,0xC8,0x02,0x48,0x89,0x04,0x24,0x48,0x83,0xF9,0x02,0x72,0x0C,0x48,0x8B,0x04,0x24,0x48,0x83,0xC8,0x01,0x48,0x89,0x04,0x24,0x48,0x8B,0x04,0x24,0x48,0x83,0xC4,0x08,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ulong ilog2(int src)
; location: [7FFC872C1590h, 7FFC872C1637h]
0000h push rax                      ; PUSH(Push_r64) [RAX]                                 encoding(1 byte ) = 50
0001h nop dword ptr [rax]           ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(4 bytes) = 0f 1f 40 00
0005h xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0007h mov [rsp],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(4 bytes) = 48 89 04 24
000bh mov [rsp],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(4 bytes) = 48 89 04 24
000fh movsxd rax,ecx                ; MOVSXD(Movsxd_r64_rm32) [RAX,ECX]                    encoding(3 bytes) = 48 63 c1
0012h mov rdx,100000000h            ; MOV(Mov_r64_imm64) [RDX,100000000h:imm64]            encoding(10 bytes) = 48 ba 00 00 00 00 01 00 00 00
001ch cmp rax,rdx                   ; CMP(Cmp_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 3b c2
001fh jb short 0031h                ; JB(Jb_rel8_64) [31h:jmp64]                           encoding(2 bytes) = 72 10
0021h shr rax,20h                   ; SHR(Shr_rm64_imm8) [RAX,20h:imm8]                    encoding(4 bytes) = 48 c1 e8 20
0025h mov rdx,[rsp]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RSP:br,SS:sr)]        encoding(4 bytes) = 48 8b 14 24
0029h or rdx,20h                    ; OR(Or_rm64_imm8) [RDX,20h:imm64]                     encoding(4 bytes) = 48 83 ca 20
002dh mov [rsp],rdx                 ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RDX]        encoding(4 bytes) = 48 89 14 24
0031h cmp rax,10000h                ; CMP(Cmp_RAX_imm32) [RAX,10000h:imm64]                encoding(6 bytes) = 48 3d 00 00 01 00
0037h jb short 0049h                ; JB(Jb_rel8_64) [49h:jmp64]                           encoding(2 bytes) = 72 10
0039h shr rax,10h                   ; SHR(Shr_rm64_imm8) [RAX,10h:imm8]                    encoding(4 bytes) = 48 c1 e8 10
003dh mov rdx,[rsp]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RSP:br,SS:sr)]        encoding(4 bytes) = 48 8b 14 24
0041h or rdx,10h                    ; OR(Or_rm64_imm8) [RDX,10h:imm64]                     encoding(4 bytes) = 48 83 ca 10
0045h mov [rsp],rdx                 ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RDX]        encoding(4 bytes) = 48 89 14 24
0049h cmp rax,100h                  ; CMP(Cmp_RAX_imm32) [RAX,100h:imm64]                  encoding(6 bytes) = 48 3d 00 01 00 00
004fh jb short 0061h                ; JB(Jb_rel8_64) [61h:jmp64]                           encoding(2 bytes) = 72 10
0051h shr rax,8                     ; SHR(Shr_rm64_imm8) [RAX,8h:imm8]                     encoding(4 bytes) = 48 c1 e8 08
0055h mov rdx,[rsp]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RSP:br,SS:sr)]        encoding(4 bytes) = 48 8b 14 24
0059h or rdx,8                      ; OR(Or_rm64_imm8) [RDX,8h:imm64]                      encoding(4 bytes) = 48 83 ca 08
005dh mov [rsp],rdx                 ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RDX]        encoding(4 bytes) = 48 89 14 24
0061h cmp rax,10h                   ; CMP(Cmp_rm64_imm8) [RAX,10h:imm64]                   encoding(4 bytes) = 48 83 f8 10
0065h jb short 0077h                ; JB(Jb_rel8_64) [77h:jmp64]                           encoding(2 bytes) = 72 10
0067h shr rax,4                     ; SHR(Shr_rm64_imm8) [RAX,4h:imm8]                     encoding(4 bytes) = 48 c1 e8 04
006bh mov rdx,[rsp]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RSP:br,SS:sr)]        encoding(4 bytes) = 48 8b 14 24
006fh or rdx,4                      ; OR(Or_rm64_imm8) [RDX,4h:imm64]                      encoding(4 bytes) = 48 83 ca 04
0073h mov [rsp],rdx                 ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RDX]        encoding(4 bytes) = 48 89 14 24
0077h cmp rax,4                     ; CMP(Cmp_rm64_imm8) [RAX,4h:imm64]                    encoding(4 bytes) = 48 83 f8 04
007bh jb short 008dh                ; JB(Jb_rel8_64) [8Dh:jmp64]                           encoding(2 bytes) = 72 10
007dh shr rax,2                     ; SHR(Shr_rm64_imm8) [RAX,2h:imm8]                     encoding(4 bytes) = 48 c1 e8 02
0081h mov rdx,[rsp]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RSP:br,SS:sr)]        encoding(4 bytes) = 48 8b 14 24
0085h or rdx,2                      ; OR(Or_rm64_imm8) [RDX,2h:imm64]                      encoding(4 bytes) = 48 83 ca 02
0089h mov [rsp],rdx                 ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RDX]        encoding(4 bytes) = 48 89 14 24
008dh cmp rax,2                     ; CMP(Cmp_rm64_imm8) [RAX,2h:imm64]                    encoding(4 bytes) = 48 83 f8 02
0091h jb short 009fh                ; JB(Jb_rel8_64) [9Fh:jmp64]                           encoding(2 bytes) = 72 0c
0093h mov rax,[rsp]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(4 bytes) = 48 8b 04 24
0097h or rax,1                      ; OR(Or_rm64_imm8) [RAX,1h:imm64]                      encoding(4 bytes) = 48 83 c8 01
009bh mov [rsp],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(4 bytes) = 48 89 04 24
009fh mov rax,[rsp]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(4 bytes) = 48 8b 04 24
00a3h add rsp,8                     ; ADD(Add_rm64_imm8) [RSP,8h:imm64]                    encoding(4 bytes) = 48 83 c4 08
00a7h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> ilog2Bytes => new byte[168]{0x50,0x0F,0x1F,0x40,0x00,0x33,0xC0,0x48,0x89,0x04,0x24,0x48,0x89,0x04,0x24,0x48,0x63,0xC1,0x48,0xBA,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x48,0x3B,0xC2,0x72,0x10,0x48,0xC1,0xE8,0x20,0x48,0x8B,0x14,0x24,0x48,0x83,0xCA,0x20,0x48,0x89,0x14,0x24,0x48,0x3D,0x00,0x00,0x01,0x00,0x72,0x10,0x48,0xC1,0xE8,0x10,0x48,0x8B,0x14,0x24,0x48,0x83,0xCA,0x10,0x48,0x89,0x14,0x24,0x48,0x3D,0x00,0x01,0x00,0x00,0x72,0x10,0x48,0xC1,0xE8,0x08,0x48,0x8B,0x14,0x24,0x48,0x83,0xCA,0x08,0x48,0x89,0x14,0x24,0x48,0x83,0xF8,0x10,0x72,0x10,0x48,0xC1,0xE8,0x04,0x48,0x8B,0x14,0x24,0x48,0x83,0xCA,0x04,0x48,0x89,0x14,0x24,0x48,0x83,0xF8,0x04,0x72,0x10,0x48,0xC1,0xE8,0x02,0x48,0x8B,0x14,0x24,0x48,0x83,0xCA,0x02,0x48,0x89,0x14,0x24,0x48,0x83,0xF8,0x02,0x72,0x0C,0x48,0x8B,0x04,0x24,0x48,0x83,0xC8,0x01,0x48,0x89,0x04,0x24,0x48,0x8B,0x04,0x24,0x48,0x83,0xC4,0x08,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ulong ilog2(uint src)
; location: [7FFC872C1650h, 7FFC872C16F6h]
0000h push rax                      ; PUSH(Push_r64) [RAX]                                 encoding(1 byte ) = 50
0001h nop dword ptr [rax]           ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(4 bytes) = 0f 1f 40 00
0005h xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0007h mov [rsp],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(4 bytes) = 48 89 04 24
000bh mov [rsp],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(4 bytes) = 48 89 04 24
000fh mov eax,ecx                   ; MOV(Mov_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 8b c1
0011h mov rdx,100000000h            ; MOV(Mov_r64_imm64) [RDX,100000000h:imm64]            encoding(10 bytes) = 48 ba 00 00 00 00 01 00 00 00
001bh cmp rax,rdx                   ; CMP(Cmp_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 3b c2
001eh jb short 0030h                ; JB(Jb_rel8_64) [30h:jmp64]                           encoding(2 bytes) = 72 10
0020h shr rax,20h                   ; SHR(Shr_rm64_imm8) [RAX,20h:imm8]                    encoding(4 bytes) = 48 c1 e8 20
0024h mov rdx,[rsp]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RSP:br,SS:sr)]        encoding(4 bytes) = 48 8b 14 24
0028h or rdx,20h                    ; OR(Or_rm64_imm8) [RDX,20h:imm64]                     encoding(4 bytes) = 48 83 ca 20
002ch mov [rsp],rdx                 ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RDX]        encoding(4 bytes) = 48 89 14 24
0030h cmp rax,10000h                ; CMP(Cmp_RAX_imm32) [RAX,10000h:imm64]                encoding(6 bytes) = 48 3d 00 00 01 00
0036h jb short 0048h                ; JB(Jb_rel8_64) [48h:jmp64]                           encoding(2 bytes) = 72 10
0038h shr rax,10h                   ; SHR(Shr_rm64_imm8) [RAX,10h:imm8]                    encoding(4 bytes) = 48 c1 e8 10
003ch mov rdx,[rsp]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RSP:br,SS:sr)]        encoding(4 bytes) = 48 8b 14 24
0040h or rdx,10h                    ; OR(Or_rm64_imm8) [RDX,10h:imm64]                     encoding(4 bytes) = 48 83 ca 10
0044h mov [rsp],rdx                 ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RDX]        encoding(4 bytes) = 48 89 14 24
0048h cmp rax,100h                  ; CMP(Cmp_RAX_imm32) [RAX,100h:imm64]                  encoding(6 bytes) = 48 3d 00 01 00 00
004eh jb short 0060h                ; JB(Jb_rel8_64) [60h:jmp64]                           encoding(2 bytes) = 72 10
0050h shr rax,8                     ; SHR(Shr_rm64_imm8) [RAX,8h:imm8]                     encoding(4 bytes) = 48 c1 e8 08
0054h mov rdx,[rsp]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RSP:br,SS:sr)]        encoding(4 bytes) = 48 8b 14 24
0058h or rdx,8                      ; OR(Or_rm64_imm8) [RDX,8h:imm64]                      encoding(4 bytes) = 48 83 ca 08
005ch mov [rsp],rdx                 ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RDX]        encoding(4 bytes) = 48 89 14 24
0060h cmp rax,10h                   ; CMP(Cmp_rm64_imm8) [RAX,10h:imm64]                   encoding(4 bytes) = 48 83 f8 10
0064h jb short 0076h                ; JB(Jb_rel8_64) [76h:jmp64]                           encoding(2 bytes) = 72 10
0066h shr rax,4                     ; SHR(Shr_rm64_imm8) [RAX,4h:imm8]                     encoding(4 bytes) = 48 c1 e8 04
006ah mov rdx,[rsp]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RSP:br,SS:sr)]        encoding(4 bytes) = 48 8b 14 24
006eh or rdx,4                      ; OR(Or_rm64_imm8) [RDX,4h:imm64]                      encoding(4 bytes) = 48 83 ca 04
0072h mov [rsp],rdx                 ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RDX]        encoding(4 bytes) = 48 89 14 24
0076h cmp rax,4                     ; CMP(Cmp_rm64_imm8) [RAX,4h:imm64]                    encoding(4 bytes) = 48 83 f8 04
007ah jb short 008ch                ; JB(Jb_rel8_64) [8Ch:jmp64]                           encoding(2 bytes) = 72 10
007ch shr rax,2                     ; SHR(Shr_rm64_imm8) [RAX,2h:imm8]                     encoding(4 bytes) = 48 c1 e8 02
0080h mov rdx,[rsp]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RSP:br,SS:sr)]        encoding(4 bytes) = 48 8b 14 24
0084h or rdx,2                      ; OR(Or_rm64_imm8) [RDX,2h:imm64]                      encoding(4 bytes) = 48 83 ca 02
0088h mov [rsp],rdx                 ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RDX]        encoding(4 bytes) = 48 89 14 24
008ch cmp rax,2                     ; CMP(Cmp_rm64_imm8) [RAX,2h:imm64]                    encoding(4 bytes) = 48 83 f8 02
0090h jb short 009eh                ; JB(Jb_rel8_64) [9Eh:jmp64]                           encoding(2 bytes) = 72 0c
0092h mov rax,[rsp]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(4 bytes) = 48 8b 04 24
0096h or rax,1                      ; OR(Or_rm64_imm8) [RAX,1h:imm64]                      encoding(4 bytes) = 48 83 c8 01
009ah mov [rsp],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(4 bytes) = 48 89 04 24
009eh mov rax,[rsp]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(4 bytes) = 48 8b 04 24
00a2h add rsp,8                     ; ADD(Add_rm64_imm8) [RSP,8h:imm64]                    encoding(4 bytes) = 48 83 c4 08
00a6h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> ilog2Bytes => new byte[167]{0x50,0x0F,0x1F,0x40,0x00,0x33,0xC0,0x48,0x89,0x04,0x24,0x48,0x89,0x04,0x24,0x8B,0xC1,0x48,0xBA,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x48,0x3B,0xC2,0x72,0x10,0x48,0xC1,0xE8,0x20,0x48,0x8B,0x14,0x24,0x48,0x83,0xCA,0x20,0x48,0x89,0x14,0x24,0x48,0x3D,0x00,0x00,0x01,0x00,0x72,0x10,0x48,0xC1,0xE8,0x10,0x48,0x8B,0x14,0x24,0x48,0x83,0xCA,0x10,0x48,0x89,0x14,0x24,0x48,0x3D,0x00,0x01,0x00,0x00,0x72,0x10,0x48,0xC1,0xE8,0x08,0x48,0x8B,0x14,0x24,0x48,0x83,0xCA,0x08,0x48,0x89,0x14,0x24,0x48,0x83,0xF8,0x10,0x72,0x10,0x48,0xC1,0xE8,0x04,0x48,0x8B,0x14,0x24,0x48,0x83,0xCA,0x04,0x48,0x89,0x14,0x24,0x48,0x83,0xF8,0x04,0x72,0x10,0x48,0xC1,0xE8,0x02,0x48,0x8B,0x14,0x24,0x48,0x83,0xCA,0x02,0x48,0x89,0x14,0x24,0x48,0x83,0xF8,0x02,0x72,0x0C,0x48,0x8B,0x04,0x24,0x48,0x83,0xC8,0x01,0x48,0x89,0x04,0x24,0x48,0x8B,0x04,0x24,0x48,0x83,0xC4,0x08,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: sbyte inc(sbyte src)
; location: [7FFC872C1710h, 7FFC872C1723h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cl                  ; MOVSX(Movsx_r64_rm8) [RAX,CL]                        encoding(4 bytes) = 48 0f be c1
0009h inc eax                       ; INC(Inc_rm32) [EAX]                                  encoding(2 bytes) = ff c0
000bh movsx rax,al                  ; MOVSX(Movsx_r64_rm8) [RAX,AL]                        encoding(4 bytes) = 48 0f be c0
000fh movsx rax,al                  ; MOVSX(Movsx_r64_rm8) [RAX,AL]                        encoding(4 bytes) = 48 0f be c0
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> incBytes => new byte[20]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBE,0xC1,0xFF,0xC0,0x48,0x0F,0xBE,0xC0,0x48,0x0F,0xBE,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: byte inc(byte src)
; location: [7FFC872C1740h, 7FFC872C1750h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0008h inc eax                       ; INC(Inc_rm32) [EAX]                                  encoding(2 bytes) = ff c0
000ah movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000dh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0010h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> incBytes => new byte[17]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC1,0xFF,0xC0,0x0F,0xB6,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: short inc(short src)
; location: [7FFC872C1770h, 7FFC872C1783h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cx                  ; MOVSX(Movsx_r64_rm16) [RAX,CX]                       encoding(4 bytes) = 48 0f bf c1
0009h inc eax                       ; INC(Inc_rm32) [EAX]                                  encoding(2 bytes) = ff c0
000bh movsx rax,ax                  ; MOVSX(Movsx_r64_rm16) [RAX,AX]                       encoding(4 bytes) = 48 0f bf c0
000fh movsx rax,ax                  ; MOVSX(Movsx_r64_rm16) [RAX,AX]                       encoding(4 bytes) = 48 0f bf c0
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> incBytes => new byte[20]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBF,0xC1,0xFF,0xC0,0x48,0x0F,0xBF,0xC0,0x48,0x0F,0xBF,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ushort inc(ushort src)
; location: [7FFC872C17A0h, 7FFC872C17B0h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cx                  ; MOVZX(Movzx_r32_rm16) [EAX,CX]                       encoding(3 bytes) = 0f b7 c1
0008h inc eax                       ; INC(Inc_rm32) [EAX]                                  encoding(2 bytes) = ff c0
000ah movzx eax,ax                  ; MOVZX(Movzx_r32_rm16) [EAX,AX]                       encoding(3 bytes) = 0f b7 c0
000dh movzx eax,ax                  ; MOVZX(Movzx_r32_rm16) [EAX,AX]                       encoding(3 bytes) = 0f b7 c0
0010h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> incBytes => new byte[17]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB7,0xC1,0xFF,0xC0,0x0F,0xB7,0xC0,0x0F,0xB7,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: int inc(int src)
; location: [7FFC872C17D0h, 7FFC872C17D8h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h lea eax,[rcx+1]               ; LEA(Lea_r32_m) [EAX,mem(Unknown,RCX:br,DS:sr)]       encoding(3 bytes) = 8d 41 01
0008h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> incBytes => new byte[9]{0x0F,0x1F,0x44,0x00,0x00,0x8D,0x41,0x01,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: uint inc(uint src)
; location: [7FFC872C17F0h, 7FFC872C17F8h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h lea eax,[rcx+1]               ; LEA(Lea_r32_m) [EAX,mem(Unknown,RCX:br,DS:sr)]       encoding(3 bytes) = 8d 41 01
0008h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> incBytes => new byte[9]{0x0F,0x1F,0x44,0x00,0x00,0x8D,0x41,0x01,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: long inc(long src)
; location: [7FFC872C1810h, 7FFC872C1819h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h lea rax,[rcx+1]               ; LEA(Lea_r64_m) [RAX,mem(Unknown,RCX:br,DS:sr)]       encoding(4 bytes) = 48 8d 41 01
0009h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> incBytes => new byte[10]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8D,0x41,0x01,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ulong inc(ulong src)
; location: [7FFC872C1830h, 7FFC872C1839h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h lea rax,[rcx+1]               ; LEA(Lea_r64_m) [RAX,mem(Unknown,RCX:br,DS:sr)]       encoding(4 bytes) = 48 8d 41 01
0009h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> incBytes => new byte[10]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8D,0x41,0x01,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref sbyte inc(ref sbyte src)
; location: [7FFC872C1850h, 7FFC872C185Ah]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h inc byte ptr [rcx]            ; INC(Inc_rm8) [mem(8u,RCX:br,DS:sr)]                  encoding(2 bytes) = fe 01
0007h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> incBytes => new byte[11]{0x0F,0x1F,0x44,0x00,0x00,0xFE,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref byte inc(ref byte src)
; location: [7FFC872C1870h, 7FFC872C187Ah]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h inc byte ptr [rcx]            ; INC(Inc_rm8) [mem(8u,RCX:br,DS:sr)]                  encoding(2 bytes) = fe 01
0007h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> incBytes => new byte[11]{0x0F,0x1F,0x44,0x00,0x00,0xFE,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref short inc(ref short src)
; location: [7FFC872C1890h, 7FFC872C189Bh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h inc word ptr [rcx]            ; INC(Inc_rm16) [mem(16u,RCX:br,DS:sr)]                encoding(3 bytes) = 66 ff 01
0008h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> incBytes => new byte[12]{0x0F,0x1F,0x44,0x00,0x00,0x66,0xFF,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref ushort inc(ref ushort src)
; location: [7FFC872C18B0h, 7FFC872C18BBh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h inc word ptr [rcx]            ; INC(Inc_rm16) [mem(16u,RCX:br,DS:sr)]                encoding(3 bytes) = 66 ff 01
0008h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> incBytes => new byte[12]{0x0F,0x1F,0x44,0x00,0x00,0x66,0xFF,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref int inc(ref int src)
; location: [7FFC872C18D0h, 7FFC872C18DAh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h inc dword ptr [rcx]           ; INC(Inc_rm32) [mem(32u,RCX:br,DS:sr)]                encoding(2 bytes) = ff 01
0007h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> incBytes => new byte[11]{0x0F,0x1F,0x44,0x00,0x00,0xFF,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref uint inc(ref uint src)
; location: [7FFC872C18F0h, 7FFC872C18FAh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h inc dword ptr [rcx]           ; INC(Inc_rm32) [mem(32u,RCX:br,DS:sr)]                encoding(2 bytes) = ff 01
0007h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> incBytes => new byte[11]{0x0F,0x1F,0x44,0x00,0x00,0xFF,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref long inc(ref long src)
; location: [7FFC872C1910h, 7FFC872C191Bh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h inc qword ptr [rcx]           ; INC(Inc_rm64) [mem(64u,RCX:br,DS:sr)]                encoding(3 bytes) = 48 ff 01
0008h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> incBytes => new byte[12]{0x0F,0x1F,0x44,0x00,0x00,0x48,0xFF,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref ulong inc(ref ulong src)
; location: [7FFC872C1930h, 7FFC872C193Bh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h inc qword ptr [rcx]           ; INC(Inc_rm64) [mem(64u,RCX:br,DS:sr)]                encoding(3 bytes) = 48 ff 01
0008h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> incBytes => new byte[12]{0x0F,0x1F,0x44,0x00,0x00,0x48,0xFF,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<sbyte> inc(ReadOnlySpan<sbyte> src, Span<sbyte> dst)
; location: [7FFC872C1950h, 7FFC872C1A1Ch]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0014h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0017h mov esi,0AEh                  ; MOV(Mov_r32_imm32) [ESI,aeh:imm32]                   encoding(5 bytes) = be ae 00 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
0023h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0026h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0029h jne short 006eh               ; JNE(Jne_rel8_64) [6Eh:jmp64]                         encoding(2 bytes) = 75 43
002bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
002eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0030h jle short 0059h               ; JLE(Jle_rel8_64) [59h:jmp64]                         encoding(2 bytes) = 7e 27
0032h cmp r10d,r8d                  ; CMP(Cmp_r32_rm32) [R10D,R8D]                         encoding(3 bytes) = 45 3b d0
0035h jae near ptr 00c7h            ; JAE(Jae_rel32_64) [C7h:jmp64]                        encoding(6 bytes) = 0f 83 8c 00 00 00
003bh movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
003eh lea rbx,[rax+r11]             ; LEA(Lea_r64_m) [RBX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 4a 8d 1c 18
0042h movsx r11,byte ptr [r9+r11]   ; MOVSX(Movsx_r64_rm8) [R11,mem(8i,R9:br,DS:sr)]       encoding(5 bytes) = 4f 0f be 1c 19
0047h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
004ah movsx r11,r11b                ; MOVSX(Movsx_r64_rm8) [R11,R11L]                      encoding(4 bytes) = 4d 0f be db
004eh mov [rbx],r11b                ; MOV(Mov_rm8_r8) [mem(8u,RBX:br,DS:sr),R11L]          encoding(3 bytes) = 44 88 1b
0051h inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
0054h cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
0057h jl short 0032h                ; JL(Jl_rel8_64) [32h:jmp64]                           encoding(2 bytes) = 7c d9
0059h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
005ch mov [rcx+8],r8d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R8D]        encoding(4 bytes) = 44 89 41 08
0060h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0063h add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0067h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0068h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0069h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
006ah pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
006bh pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
006dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
006eh mov ecx,3B3h                  ; MOV(Mov_r32_imm32) [ECX,3b3h:imm32]                  encoding(5 bytes) = b9 b3 03 00 00
0073h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
007dh call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F471FD0h:jmp64]                encoding(5 bytes) = e8 4e 1f 47 5f
0082h mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0085h mov ecx,0B2Dh                 ; MOV(Mov_r32_imm32) [ECX,b2dh:imm32]                  encoding(5 bytes) = b9 2d 0b 00 00
008ah mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0094h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F471FD0h:jmp64]                encoding(5 bytes) = e8 37 1f 47 5f
0099h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
009ch lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
00a1h mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00a4h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00a8h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00abh mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00adh mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00afh mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00b4h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b9h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFC9C628h:jmp64]        encoding(5 bytes) = e8 6a c5 c9 ff
00beh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00c1h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F455000h:jmp64]                encoding(5 bytes) = e8 3a 4f 45 5f
00c6h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00c7h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A3460h:jmp64]                encoding(5 bytes) = e8 94 33 5a 5f
00cch int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> incBytes => new byte[205]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x00,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0xBE,0xAE,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x43,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x27,0x45,0x3B,0xD0,0x0F,0x83,0x8C,0x00,0x00,0x00,0x4D,0x63,0xDA,0x4A,0x8D,0x1C,0x18,0x4F,0x0F,0xBE,0x1C,0x19,0x41,0xFF,0xC3,0x4D,0x0F,0xBE,0xDB,0x44,0x88,0x1B,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xD9,0x48,0x89,0x01,0x44,0x89,0x41,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0xB3,0x03,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x4E,0x1F,0x47,0x5F,0x4C,0x8B,0xF0,0xB9,0x2D,0x0B,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x37,0x1F,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x6A,0xC5,0xC9,0xFF,0x48,0x8B,0xC8,0xE8,0x3A,0x4F,0x45,0x5F,0xCC,0xE8,0x94,0x33,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<byte> inc(ReadOnlySpan<byte> src, Span<byte> dst)
; location: [7FFC872C1A40h, 7FFC872C1B0Ch]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0014h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0017h mov esi,0B6h                  ; MOV(Mov_r32_imm32) [ESI,b6h:imm32]                   encoding(5 bytes) = be b6 00 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
0023h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0026h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0029h jne short 006eh               ; JNE(Jne_rel8_64) [6Eh:jmp64]                         encoding(2 bytes) = 75 43
002bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
002eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0030h jle short 0059h               ; JLE(Jle_rel8_64) [59h:jmp64]                         encoding(2 bytes) = 7e 27
0032h cmp r10d,r8d                  ; CMP(Cmp_r32_rm32) [R10D,R8D]                         encoding(3 bytes) = 45 3b d0
0035h jae near ptr 00c7h            ; JAE(Jae_rel32_64) [C7h:jmp64]                        encoding(6 bytes) = 0f 83 8c 00 00 00
003bh movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
003eh lea rbx,[rax+r11]             ; LEA(Lea_r64_m) [RBX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 4a 8d 1c 18
0042h movzx r11d,byte ptr [r9+r11]  ; MOVZX(Movzx_r32_rm8) [R11D,mem(8u,R9:br,DS:sr)]      encoding(5 bytes) = 47 0f b6 1c 19
0047h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
004ah movzx r11d,r11b               ; MOVZX(Movzx_r32_rm8) [R11D,R11L]                     encoding(4 bytes) = 45 0f b6 db
004eh mov [rbx],r11b                ; MOV(Mov_rm8_r8) [mem(8u,RBX:br,DS:sr),R11L]          encoding(3 bytes) = 44 88 1b
0051h inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
0054h cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
0057h jl short 0032h                ; JL(Jl_rel8_64) [32h:jmp64]                           encoding(2 bytes) = 7c d9
0059h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
005ch mov [rcx+8],r8d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R8D]        encoding(4 bytes) = 44 89 41 08
0060h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0063h add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0067h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0068h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0069h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
006ah pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
006bh pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
006dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
006eh mov ecx,3B3h                  ; MOV(Mov_r32_imm32) [ECX,3b3h:imm32]                  encoding(5 bytes) = b9 b3 03 00 00
0073h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
007dh call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F471EE0h:jmp64]                encoding(5 bytes) = e8 5e 1e 47 5f
0082h mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0085h mov ecx,0B2Dh                 ; MOV(Mov_r32_imm32) [ECX,b2dh:imm32]                  encoding(5 bytes) = b9 2d 0b 00 00
008ah mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0094h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F471EE0h:jmp64]                encoding(5 bytes) = e8 47 1e 47 5f
0099h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
009ch lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
00a1h mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00a4h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00a8h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00abh mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00adh mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00afh mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00b4h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b9h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFC9C538h:jmp64]        encoding(5 bytes) = e8 7a c4 c9 ff
00beh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00c1h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F454F10h:jmp64]                encoding(5 bytes) = e8 4a 4e 45 5f
00c6h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00c7h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A3370h:jmp64]                encoding(5 bytes) = e8 a4 32 5a 5f
00cch int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> incBytes => new byte[205]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x00,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0xBE,0xB6,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x43,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x27,0x45,0x3B,0xD0,0x0F,0x83,0x8C,0x00,0x00,0x00,0x4D,0x63,0xDA,0x4A,0x8D,0x1C,0x18,0x47,0x0F,0xB6,0x1C,0x19,0x41,0xFF,0xC3,0x45,0x0F,0xB6,0xDB,0x44,0x88,0x1B,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xD9,0x48,0x89,0x01,0x44,0x89,0x41,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0xB3,0x03,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x5E,0x1E,0x47,0x5F,0x4C,0x8B,0xF0,0xB9,0x2D,0x0B,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x47,0x1E,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x7A,0xC4,0xC9,0xFF,0x48,0x8B,0xC8,0xE8,0x4A,0x4E,0x45,0x5F,0xCC,0xE8,0xA4,0x32,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<short> inc(ReadOnlySpan<short> src, Span<short> dst)
; location: [7FFC872C1B30h, 7FFC872C1BFDh]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0014h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0017h mov esi,0BEh                  ; MOV(Mov_r32_imm32) [ESI,beh:imm32]                   encoding(5 bytes) = be be 00 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
0023h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0026h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0029h jne short 006fh               ; JNE(Jne_rel8_64) [6Fh:jmp64]                         encoding(2 bytes) = 75 44
002bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
002eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0030h jle short 005ah               ; JLE(Jle_rel8_64) [5Ah:jmp64]                         encoding(2 bytes) = 7e 28
0032h cmp r10d,r8d                  ; CMP(Cmp_r32_rm32) [R10D,R8D]                         encoding(3 bytes) = 45 3b d0
0035h jae near ptr 00c8h            ; JAE(Jae_rel32_64) [C8h:jmp64]                        encoding(6 bytes) = 0f 83 8d 00 00 00
003bh movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
003eh lea rbx,[rax+r11*2]           ; LEA(Lea_r64_m) [RBX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 4a 8d 1c 58
0042h movsx r11,word ptr [r9+r11*2] ; MOVSX(Movsx_r64_rm16) [R11,mem(16i,R9:br,DS:sr)]     encoding(5 bytes) = 4f 0f bf 1c 59
0047h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
004ah movsx r11,r11w                ; MOVSX(Movsx_r64_rm16) [R11,R11W]                     encoding(4 bytes) = 4d 0f bf db
004eh mov [rbx],r11w                ; MOV(Mov_rm16_r16) [mem(16u,RBX:br,DS:sr),R11W]       encoding(4 bytes) = 66 44 89 1b
0052h inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
0055h cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
0058h jl short 0032h                ; JL(Jl_rel8_64) [32h:jmp64]                           encoding(2 bytes) = 7c d8
005ah mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
005dh mov [rcx+8],r8d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R8D]        encoding(4 bytes) = 44 89 41 08
0061h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0064h add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0068h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0069h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
006ah pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
006bh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
006ch pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
006eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
006fh mov ecx,3B3h                  ; MOV(Mov_r32_imm32) [ECX,3b3h:imm32]                  encoding(5 bytes) = b9 b3 03 00 00
0074h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
007eh call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F471DF0h:jmp64]                encoding(5 bytes) = e8 6d 1d 47 5f
0083h mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0086h mov ecx,0B2Dh                 ; MOV(Mov_r32_imm32) [ECX,b2dh:imm32]                  encoding(5 bytes) = b9 2d 0b 00 00
008bh mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0095h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F471DF0h:jmp64]                encoding(5 bytes) = e8 56 1d 47 5f
009ah mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
009dh lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
00a2h mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00a5h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00a9h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00ach mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00aeh mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00b0h mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00b5h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00bah call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFC9C448h:jmp64]        encoding(5 bytes) = e8 89 c3 c9 ff
00bfh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00c2h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F454E20h:jmp64]                encoding(5 bytes) = e8 59 4d 45 5f
00c7h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00c8h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A3280h:jmp64]                encoding(5 bytes) = e8 b3 31 5a 5f
00cdh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> incBytes => new byte[206]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x00,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0xBE,0xBE,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x44,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x28,0x45,0x3B,0xD0,0x0F,0x83,0x8D,0x00,0x00,0x00,0x4D,0x63,0xDA,0x4A,0x8D,0x1C,0x58,0x4F,0x0F,0xBF,0x1C,0x59,0x41,0xFF,0xC3,0x4D,0x0F,0xBF,0xDB,0x66,0x44,0x89,0x1B,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xD8,0x48,0x89,0x01,0x44,0x89,0x41,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0xB3,0x03,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x6D,0x1D,0x47,0x5F,0x4C,0x8B,0xF0,0xB9,0x2D,0x0B,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x56,0x1D,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x89,0xC3,0xC9,0xFF,0x48,0x8B,0xC8,0xE8,0x59,0x4D,0x45,0x5F,0xCC,0xE8,0xB3,0x31,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<ushort> inc(ReadOnlySpan<ushort> src, Span<ushort> dst)
; location: [7FFC872C1C20h, 7FFC872C1CEDh]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0014h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0017h mov esi,0C6h                  ; MOV(Mov_r32_imm32) [ESI,c6h:imm32]                   encoding(5 bytes) = be c6 00 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
0023h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0026h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0029h jne short 006fh               ; JNE(Jne_rel8_64) [6Fh:jmp64]                         encoding(2 bytes) = 75 44
002bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
002eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0030h jle short 005ah               ; JLE(Jle_rel8_64) [5Ah:jmp64]                         encoding(2 bytes) = 7e 28
0032h cmp r10d,r8d                  ; CMP(Cmp_r32_rm32) [R10D,R8D]                         encoding(3 bytes) = 45 3b d0
0035h jae near ptr 00c8h            ; JAE(Jae_rel32_64) [C8h:jmp64]                        encoding(6 bytes) = 0f 83 8d 00 00 00
003bh movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
003eh lea rbx,[rax+r11*2]           ; LEA(Lea_r64_m) [RBX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 4a 8d 1c 58
0042h movzx r11d,word ptr [r9+r11*2]; MOVZX(Movzx_r32_rm16) [R11D,mem(16u,R9:br,DS:sr)]    encoding(5 bytes) = 47 0f b7 1c 59
0047h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
004ah movzx r11d,r11w               ; MOVZX(Movzx_r32_rm16) [R11D,R11W]                    encoding(4 bytes) = 45 0f b7 db
004eh mov [rbx],r11w                ; MOV(Mov_rm16_r16) [mem(16u,RBX:br,DS:sr),R11W]       encoding(4 bytes) = 66 44 89 1b
0052h inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
0055h cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
0058h jl short 0032h                ; JL(Jl_rel8_64) [32h:jmp64]                           encoding(2 bytes) = 7c d8
005ah mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
005dh mov [rcx+8],r8d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R8D]        encoding(4 bytes) = 44 89 41 08
0061h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0064h add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0068h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0069h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
006ah pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
006bh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
006ch pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
006eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
006fh mov ecx,3B3h                  ; MOV(Mov_r32_imm32) [ECX,3b3h:imm32]                  encoding(5 bytes) = b9 b3 03 00 00
0074h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
007eh call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F471D00h:jmp64]                encoding(5 bytes) = e8 7d 1c 47 5f
0083h mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0086h mov ecx,0B2Dh                 ; MOV(Mov_r32_imm32) [ECX,b2dh:imm32]                  encoding(5 bytes) = b9 2d 0b 00 00
008bh mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0095h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F471D00h:jmp64]                encoding(5 bytes) = e8 66 1c 47 5f
009ah mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
009dh lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
00a2h mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00a5h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00a9h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00ach mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00aeh mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00b0h mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00b5h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00bah call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFC9C358h:jmp64]        encoding(5 bytes) = e8 99 c2 c9 ff
00bfh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00c2h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F454D30h:jmp64]                encoding(5 bytes) = e8 69 4c 45 5f
00c7h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00c8h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A3190h:jmp64]                encoding(5 bytes) = e8 c3 30 5a 5f
00cdh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> incBytes => new byte[206]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x00,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0xBE,0xC6,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x44,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x28,0x45,0x3B,0xD0,0x0F,0x83,0x8D,0x00,0x00,0x00,0x4D,0x63,0xDA,0x4A,0x8D,0x1C,0x58,0x47,0x0F,0xB7,0x1C,0x59,0x41,0xFF,0xC3,0x45,0x0F,0xB7,0xDB,0x66,0x44,0x89,0x1B,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xD8,0x48,0x89,0x01,0x44,0x89,0x41,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0xB3,0x03,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x7D,0x1C,0x47,0x5F,0x4C,0x8B,0xF0,0xB9,0x2D,0x0B,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x66,0x1C,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x99,0xC2,0xC9,0xFF,0x48,0x8B,0xC8,0xE8,0x69,0x4C,0x45,0x5F,0xCC,0xE8,0xC3,0x30,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<int> inc(ReadOnlySpan<int> src, Span<int> dst)
; location: [7FFC872C1D10h, 7FFC872C1DD7h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0014h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0017h mov esi,0CEh                  ; MOV(Mov_r32_imm32) [ESI,ceh:imm32]                   encoding(5 bytes) = be ce 00 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
0023h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0026h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0029h jne short 0069h               ; JNE(Jne_rel8_64) [69h:jmp64]                         encoding(2 bytes) = 75 3e
002bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
002eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0030h jle short 0054h               ; JLE(Jle_rel8_64) [54h:jmp64]                         encoding(2 bytes) = 7e 22
0032h cmp r10d,r8d                  ; CMP(Cmp_r32_rm32) [R10D,R8D]                         encoding(3 bytes) = 45 3b d0
0035h jae near ptr 00c2h            ; JAE(Jae_rel32_64) [C2h:jmp64]                        encoding(6 bytes) = 0f 83 87 00 00 00
003bh movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
003eh lea rbx,[rax+r11*4]           ; LEA(Lea_r64_m) [RBX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 4a 8d 1c 98
0042h mov r11d,[r9+r11*4]           ; MOV(Mov_r32_rm32) [R11D,mem(32u,R9:br,DS:sr)]        encoding(4 bytes) = 47 8b 1c 99
0046h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
0049h mov [rbx],r11d                ; MOV(Mov_rm32_r32) [mem(32u,RBX:br,DS:sr),R11D]       encoding(3 bytes) = 44 89 1b
004ch inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
004fh cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
0052h jl short 0032h                ; JL(Jl_rel8_64) [32h:jmp64]                           encoding(2 bytes) = 7c de
0054h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0057h mov [rcx+8],r8d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R8D]        encoding(4 bytes) = 44 89 41 08
005bh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
005eh add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0062h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0063h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0064h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0065h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0066h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0068h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0069h mov ecx,3B3h                  ; MOV(Mov_r32_imm32) [ECX,3b3h:imm32]                  encoding(5 bytes) = b9 b3 03 00 00
006eh mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0078h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F471C10h:jmp64]                encoding(5 bytes) = e8 93 1b 47 5f
007dh mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0080h mov ecx,0B2Dh                 ; MOV(Mov_r32_imm32) [ECX,b2dh:imm32]                  encoding(5 bytes) = b9 2d 0b 00 00
0085h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
008fh call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F471C10h:jmp64]                encoding(5 bytes) = e8 7c 1b 47 5f
0094h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
0097h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
009ch mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
009fh mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00a3h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00a6h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00a8h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00aah mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00afh mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b4h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFC9C268h:jmp64]        encoding(5 bytes) = e8 af c1 c9 ff
00b9h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00bch call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F454C40h:jmp64]                encoding(5 bytes) = e8 7f 4b 45 5f
00c1h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00c2h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A30A0h:jmp64]                encoding(5 bytes) = e8 d9 2f 5a 5f
00c7h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> incBytes => new byte[200]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x00,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0xBE,0xCE,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x3E,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x22,0x45,0x3B,0xD0,0x0F,0x83,0x87,0x00,0x00,0x00,0x4D,0x63,0xDA,0x4A,0x8D,0x1C,0x98,0x47,0x8B,0x1C,0x99,0x41,0xFF,0xC3,0x44,0x89,0x1B,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xDE,0x48,0x89,0x01,0x44,0x89,0x41,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0xB3,0x03,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x93,0x1B,0x47,0x5F,0x4C,0x8B,0xF0,0xB9,0x2D,0x0B,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x7C,0x1B,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0xAF,0xC1,0xC9,0xFF,0x48,0x8B,0xC8,0xE8,0x7F,0x4B,0x45,0x5F,0xCC,0xE8,0xD9,0x2F,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<uint> inc(ReadOnlySpan<uint> src, Span<uint> dst)
; location: [7FFC872C1E00h, 7FFC872C1EC7h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0014h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0017h mov esi,0D6h                  ; MOV(Mov_r32_imm32) [ESI,d6h:imm32]                   encoding(5 bytes) = be d6 00 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
0023h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0026h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0029h jne short 0069h               ; JNE(Jne_rel8_64) [69h:jmp64]                         encoding(2 bytes) = 75 3e
002bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
002eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0030h jle short 0054h               ; JLE(Jle_rel8_64) [54h:jmp64]                         encoding(2 bytes) = 7e 22
0032h cmp r10d,r8d                  ; CMP(Cmp_r32_rm32) [R10D,R8D]                         encoding(3 bytes) = 45 3b d0
0035h jae near ptr 00c2h            ; JAE(Jae_rel32_64) [C2h:jmp64]                        encoding(6 bytes) = 0f 83 87 00 00 00
003bh movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
003eh lea rbx,[rax+r11*4]           ; LEA(Lea_r64_m) [RBX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 4a 8d 1c 98
0042h mov r11d,[r9+r11*4]           ; MOV(Mov_r32_rm32) [R11D,mem(32u,R9:br,DS:sr)]        encoding(4 bytes) = 47 8b 1c 99
0046h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
0049h mov [rbx],r11d                ; MOV(Mov_rm32_r32) [mem(32u,RBX:br,DS:sr),R11D]       encoding(3 bytes) = 44 89 1b
004ch inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
004fh cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
0052h jl short 0032h                ; JL(Jl_rel8_64) [32h:jmp64]                           encoding(2 bytes) = 7c de
0054h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0057h mov [rcx+8],r8d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R8D]        encoding(4 bytes) = 44 89 41 08
005bh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
005eh add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0062h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0063h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0064h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0065h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0066h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0068h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0069h mov ecx,3B3h                  ; MOV(Mov_r32_imm32) [ECX,3b3h:imm32]                  encoding(5 bytes) = b9 b3 03 00 00
006eh mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0078h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F471B20h:jmp64]                encoding(5 bytes) = e8 a3 1a 47 5f
007dh mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0080h mov ecx,0B2Dh                 ; MOV(Mov_r32_imm32) [ECX,b2dh:imm32]                  encoding(5 bytes) = b9 2d 0b 00 00
0085h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
008fh call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F471B20h:jmp64]                encoding(5 bytes) = e8 8c 1a 47 5f
0094h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
0097h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
009ch mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
009fh mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00a3h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00a6h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00a8h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00aah mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00afh mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b4h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFC9C178h:jmp64]        encoding(5 bytes) = e8 bf c0 c9 ff
00b9h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00bch call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F454B50h:jmp64]                encoding(5 bytes) = e8 8f 4a 45 5f
00c1h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00c2h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A2FB0h:jmp64]                encoding(5 bytes) = e8 e9 2e 5a 5f
00c7h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> incBytes => new byte[200]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x00,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0xBE,0xD6,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x3E,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x22,0x45,0x3B,0xD0,0x0F,0x83,0x87,0x00,0x00,0x00,0x4D,0x63,0xDA,0x4A,0x8D,0x1C,0x98,0x47,0x8B,0x1C,0x99,0x41,0xFF,0xC3,0x44,0x89,0x1B,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xDE,0x48,0x89,0x01,0x44,0x89,0x41,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0xB3,0x03,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xA3,0x1A,0x47,0x5F,0x4C,0x8B,0xF0,0xB9,0x2D,0x0B,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x8C,0x1A,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0xBF,0xC0,0xC9,0xFF,0x48,0x8B,0xC8,0xE8,0x8F,0x4A,0x45,0x5F,0xCC,0xE8,0xE9,0x2E,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<long> inc(ReadOnlySpan<long> src, Span<long> dst)
; location: [7FFC872C1EF0h, 7FFC872C1FB7h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0014h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0017h mov esi,0DEh                  ; MOV(Mov_r32_imm32) [ESI,deh:imm32]                   encoding(5 bytes) = be de 00 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
0023h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0026h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0029h jne short 0069h               ; JNE(Jne_rel8_64) [69h:jmp64]                         encoding(2 bytes) = 75 3e
002bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
002eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0030h jle short 0054h               ; JLE(Jle_rel8_64) [54h:jmp64]                         encoding(2 bytes) = 7e 22
0032h cmp r10d,r8d                  ; CMP(Cmp_r32_rm32) [R10D,R8D]                         encoding(3 bytes) = 45 3b d0
0035h jae near ptr 00c2h            ; JAE(Jae_rel32_64) [C2h:jmp64]                        encoding(6 bytes) = 0f 83 87 00 00 00
003bh movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
003eh lea rbx,[rax+r11*8]           ; LEA(Lea_r64_m) [RBX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 4a 8d 1c d8
0042h mov r11,[r9+r11*8]            ; MOV(Mov_r64_rm64) [R11,mem(64u,R9:br,DS:sr)]         encoding(4 bytes) = 4f 8b 1c d9
0046h inc r11                       ; INC(Inc_rm64) [R11]                                  encoding(3 bytes) = 49 ff c3
0049h mov [rbx],r11                 ; MOV(Mov_rm64_r64) [mem(64u,RBX:br,DS:sr),R11]        encoding(3 bytes) = 4c 89 1b
004ch inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
004fh cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
0052h jl short 0032h                ; JL(Jl_rel8_64) [32h:jmp64]                           encoding(2 bytes) = 7c de
0054h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0057h mov [rcx+8],r8d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R8D]        encoding(4 bytes) = 44 89 41 08
005bh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
005eh add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0062h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0063h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0064h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0065h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0066h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0068h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0069h mov ecx,3B3h                  ; MOV(Mov_r32_imm32) [ECX,3b3h:imm32]                  encoding(5 bytes) = b9 b3 03 00 00
006eh mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0078h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F471A30h:jmp64]                encoding(5 bytes) = e8 b3 19 47 5f
007dh mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0080h mov ecx,0B2Dh                 ; MOV(Mov_r32_imm32) [ECX,b2dh:imm32]                  encoding(5 bytes) = b9 2d 0b 00 00
0085h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
008fh call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F471A30h:jmp64]                encoding(5 bytes) = e8 9c 19 47 5f
0094h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
0097h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
009ch mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
009fh mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00a3h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00a6h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00a8h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00aah mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00afh mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b4h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFC9C088h:jmp64]        encoding(5 bytes) = e8 cf bf c9 ff
00b9h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00bch call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F454A60h:jmp64]                encoding(5 bytes) = e8 9f 49 45 5f
00c1h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00c2h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A2EC0h:jmp64]                encoding(5 bytes) = e8 f9 2d 5a 5f
00c7h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> incBytes => new byte[200]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x00,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0xBE,0xDE,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x3E,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x22,0x45,0x3B,0xD0,0x0F,0x83,0x87,0x00,0x00,0x00,0x4D,0x63,0xDA,0x4A,0x8D,0x1C,0xD8,0x4F,0x8B,0x1C,0xD9,0x49,0xFF,0xC3,0x4C,0x89,0x1B,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xDE,0x48,0x89,0x01,0x44,0x89,0x41,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0xB3,0x03,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xB3,0x19,0x47,0x5F,0x4C,0x8B,0xF0,0xB9,0x2D,0x0B,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x9C,0x19,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0xCF,0xBF,0xC9,0xFF,0x48,0x8B,0xC8,0xE8,0x9F,0x49,0x45,0x5F,0xCC,0xE8,0xF9,0x2D,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<ulong> inc(ReadOnlySpan<ulong> src, Span<ulong> dst)
; location: [7FFC872C1FE0h, 7FFC872C20A7h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0014h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0017h mov esi,0E6h                  ; MOV(Mov_r32_imm32) [ESI,e6h:imm32]                   encoding(5 bytes) = be e6 00 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
0023h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0026h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0029h jne short 0069h               ; JNE(Jne_rel8_64) [69h:jmp64]                         encoding(2 bytes) = 75 3e
002bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
002eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0030h jle short 0054h               ; JLE(Jle_rel8_64) [54h:jmp64]                         encoding(2 bytes) = 7e 22
0032h cmp r10d,r8d                  ; CMP(Cmp_r32_rm32) [R10D,R8D]                         encoding(3 bytes) = 45 3b d0
0035h jae near ptr 00c2h            ; JAE(Jae_rel32_64) [C2h:jmp64]                        encoding(6 bytes) = 0f 83 87 00 00 00
003bh movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
003eh lea rbx,[rax+r11*8]           ; LEA(Lea_r64_m) [RBX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 4a 8d 1c d8
0042h mov r11,[r9+r11*8]            ; MOV(Mov_r64_rm64) [R11,mem(64u,R9:br,DS:sr)]         encoding(4 bytes) = 4f 8b 1c d9
0046h inc r11                       ; INC(Inc_rm64) [R11]                                  encoding(3 bytes) = 49 ff c3
0049h mov [rbx],r11                 ; MOV(Mov_rm64_r64) [mem(64u,RBX:br,DS:sr),R11]        encoding(3 bytes) = 4c 89 1b
004ch inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
004fh cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
0052h jl short 0032h                ; JL(Jl_rel8_64) [32h:jmp64]                           encoding(2 bytes) = 7c de
0054h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0057h mov [rcx+8],r8d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R8D]        encoding(4 bytes) = 44 89 41 08
005bh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
005eh add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0062h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0063h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0064h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0065h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0066h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0068h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0069h mov ecx,3B3h                  ; MOV(Mov_r32_imm32) [ECX,3b3h:imm32]                  encoding(5 bytes) = b9 b3 03 00 00
006eh mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0078h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F471940h:jmp64]                encoding(5 bytes) = e8 c3 18 47 5f
007dh mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0080h mov ecx,0B2Dh                 ; MOV(Mov_r32_imm32) [ECX,b2dh:imm32]                  encoding(5 bytes) = b9 2d 0b 00 00
0085h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
008fh call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F471940h:jmp64]                encoding(5 bytes) = e8 ac 18 47 5f
0094h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
0097h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
009ch mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
009fh mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00a3h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00a6h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00a8h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00aah mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00afh mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b4h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFC9BF98h:jmp64]        encoding(5 bytes) = e8 df be c9 ff
00b9h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00bch call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F454970h:jmp64]                encoding(5 bytes) = e8 af 48 45 5f
00c1h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00c2h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A2DD0h:jmp64]                encoding(5 bytes) = e8 09 2d 5a 5f
00c7h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> incBytes => new byte[200]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x00,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0xBE,0xE6,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x3E,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x22,0x45,0x3B,0xD0,0x0F,0x83,0x87,0x00,0x00,0x00,0x4D,0x63,0xDA,0x4A,0x8D,0x1C,0xD8,0x4F,0x8B,0x1C,0xD9,0x49,0xFF,0xC3,0x4C,0x89,0x1B,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xDE,0x48,0x89,0x01,0x44,0x89,0x41,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0xB3,0x03,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xC3,0x18,0x47,0x5F,0x4C,0x8B,0xF0,0xB9,0x2D,0x0B,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xAC,0x18,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0xDF,0xBE,0xC9,0xFF,0x48,0x8B,0xC8,0xE8,0xAF,0x48,0x45,0x5F,0xCC,0xE8,0x09,0x2D,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<sbyte> inc(Span<sbyte> src)
; location: [7FFC872C20D0h, 7FFC872C20FCh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,[rdx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 02
0008h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
000bh xor r8d,r8d                   ; XOR(Xor_r32_rm32) [R8D,R8D]                          encoding(3 bytes) = 45 33 c0
000eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0010h jle short 0023h               ; JLE(Jle_rel8_64) [23h:jmp64]                         encoding(2 bytes) = 7e 11
0012h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0015h add r9,rax                    ; ADD(Add_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 03 c8
0018h inc byte ptr [r9]             ; INC(Inc_rm8) [mem(8u,R9:br,DS:sr)]                   encoding(3 bytes) = 41 fe 01
001bh inc r8d                       ; INC(Inc_rm32) [R8D]                                  encoding(3 bytes) = 41 ff c0
001eh cmp r8d,edx                   ; CMP(Cmp_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 3b c2
0021h jl short 0012h                ; JL(Jl_rel8_64) [12h:jmp64]                           encoding(2 bytes) = 7c ef
0023h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0026h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
0029h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
002ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> incBytes => new byte[45]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x02,0x8B,0x52,0x08,0x45,0x33,0xC0,0x85,0xD2,0x7E,0x11,0x4D,0x63,0xC8,0x4C,0x03,0xC8,0x41,0xFE,0x01,0x41,0xFF,0xC0,0x44,0x3B,0xC2,0x7C,0xEF,0x48,0x89,0x01,0x89,0x51,0x08,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<byte> inc(Span<byte> src)
; location: [7FFC872C2110h, 7FFC872C213Ch]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,[rdx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 02
0008h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
000bh xor r8d,r8d                   ; XOR(Xor_r32_rm32) [R8D,R8D]                          encoding(3 bytes) = 45 33 c0
000eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0010h jle short 0023h               ; JLE(Jle_rel8_64) [23h:jmp64]                         encoding(2 bytes) = 7e 11
0012h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0015h add r9,rax                    ; ADD(Add_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 03 c8
0018h inc byte ptr [r9]             ; INC(Inc_rm8) [mem(8u,R9:br,DS:sr)]                   encoding(3 bytes) = 41 fe 01
001bh inc r8d                       ; INC(Inc_rm32) [R8D]                                  encoding(3 bytes) = 41 ff c0
001eh cmp r8d,edx                   ; CMP(Cmp_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 3b c2
0021h jl short 0012h                ; JL(Jl_rel8_64) [12h:jmp64]                           encoding(2 bytes) = 7c ef
0023h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0026h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
0029h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
002ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> incBytes => new byte[45]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x02,0x8B,0x52,0x08,0x45,0x33,0xC0,0x85,0xD2,0x7E,0x11,0x4D,0x63,0xC8,0x4C,0x03,0xC8,0x41,0xFE,0x01,0x41,0xFF,0xC0,0x44,0x3B,0xC2,0x7C,0xEF,0x48,0x89,0x01,0x89,0x51,0x08,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<short> inc(Span<short> src)
; location: [7FFC872C2150h, 7FFC872C217Eh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,[rdx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 02
0008h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
000bh xor r8d,r8d                   ; XOR(Xor_r32_rm32) [R8D,R8D]                          encoding(3 bytes) = 45 33 c0
000eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0010h jle short 0025h               ; JLE(Jle_rel8_64) [25h:jmp64]                         encoding(2 bytes) = 7e 13
0012h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0015h lea r9,[rax+r9*2]             ; LEA(Lea_r64_m) [R9,mem(Unknown,RAX:br,DS:sr)]        encoding(4 bytes) = 4e 8d 0c 48
0019h inc word ptr [r9]             ; INC(Inc_rm16) [mem(16u,R9:br,DS:sr)]                 encoding(4 bytes) = 66 41 ff 01
001dh inc r8d                       ; INC(Inc_rm32) [R8D]                                  encoding(3 bytes) = 41 ff c0
0020h cmp r8d,edx                   ; CMP(Cmp_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 3b c2
0023h jl short 0012h                ; JL(Jl_rel8_64) [12h:jmp64]                           encoding(2 bytes) = 7c ed
0025h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0028h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
002bh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
002eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> incBytes => new byte[47]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x02,0x8B,0x52,0x08,0x45,0x33,0xC0,0x85,0xD2,0x7E,0x13,0x4D,0x63,0xC8,0x4E,0x8D,0x0C,0x48,0x66,0x41,0xFF,0x01,0x41,0xFF,0xC0,0x44,0x3B,0xC2,0x7C,0xED,0x48,0x89,0x01,0x89,0x51,0x08,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<ushort> inc(Span<ushort> src)
; location: [7FFC872C2190h, 7FFC872C21BEh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,[rdx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 02
0008h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
000bh xor r8d,r8d                   ; XOR(Xor_r32_rm32) [R8D,R8D]                          encoding(3 bytes) = 45 33 c0
000eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0010h jle short 0025h               ; JLE(Jle_rel8_64) [25h:jmp64]                         encoding(2 bytes) = 7e 13
0012h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0015h lea r9,[rax+r9*2]             ; LEA(Lea_r64_m) [R9,mem(Unknown,RAX:br,DS:sr)]        encoding(4 bytes) = 4e 8d 0c 48
0019h inc word ptr [r9]             ; INC(Inc_rm16) [mem(16u,R9:br,DS:sr)]                 encoding(4 bytes) = 66 41 ff 01
001dh inc r8d                       ; INC(Inc_rm32) [R8D]                                  encoding(3 bytes) = 41 ff c0
0020h cmp r8d,edx                   ; CMP(Cmp_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 3b c2
0023h jl short 0012h                ; JL(Jl_rel8_64) [12h:jmp64]                           encoding(2 bytes) = 7c ed
0025h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0028h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
002bh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
002eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> incBytes => new byte[47]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x02,0x8B,0x52,0x08,0x45,0x33,0xC0,0x85,0xD2,0x7E,0x13,0x4D,0x63,0xC8,0x4E,0x8D,0x0C,0x48,0x66,0x41,0xFF,0x01,0x41,0xFF,0xC0,0x44,0x3B,0xC2,0x7C,0xED,0x48,0x89,0x01,0x89,0x51,0x08,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<int> inc(Span<int> src)
; location: [7FFC872C21D0h, 7FFC872C21FDh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,[rdx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 02
0008h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
000bh xor r8d,r8d                   ; XOR(Xor_r32_rm32) [R8D,R8D]                          encoding(3 bytes) = 45 33 c0
000eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0010h jle short 0024h               ; JLE(Jle_rel8_64) [24h:jmp64]                         encoding(2 bytes) = 7e 12
0012h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0015h lea r9,[rax+r9*4]             ; LEA(Lea_r64_m) [R9,mem(Unknown,RAX:br,DS:sr)]        encoding(4 bytes) = 4e 8d 0c 88
0019h inc dword ptr [r9]            ; INC(Inc_rm32) [mem(32u,R9:br,DS:sr)]                 encoding(3 bytes) = 41 ff 01
001ch inc r8d                       ; INC(Inc_rm32) [R8D]                                  encoding(3 bytes) = 41 ff c0
001fh cmp r8d,edx                   ; CMP(Cmp_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 3b c2
0022h jl short 0012h                ; JL(Jl_rel8_64) [12h:jmp64]                           encoding(2 bytes) = 7c ee
0024h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0027h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
002ah mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
002dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> incBytes => new byte[46]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x02,0x8B,0x52,0x08,0x45,0x33,0xC0,0x85,0xD2,0x7E,0x12,0x4D,0x63,0xC8,0x4E,0x8D,0x0C,0x88,0x41,0xFF,0x01,0x41,0xFF,0xC0,0x44,0x3B,0xC2,0x7C,0xEE,0x48,0x89,0x01,0x89,0x51,0x08,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<uint> inc(Span<uint> src)
; location: [7FFC872C2210h, 7FFC872C223Dh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,[rdx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 02
0008h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
000bh xor r8d,r8d                   ; XOR(Xor_r32_rm32) [R8D,R8D]                          encoding(3 bytes) = 45 33 c0
000eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0010h jle short 0024h               ; JLE(Jle_rel8_64) [24h:jmp64]                         encoding(2 bytes) = 7e 12
0012h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0015h lea r9,[rax+r9*4]             ; LEA(Lea_r64_m) [R9,mem(Unknown,RAX:br,DS:sr)]        encoding(4 bytes) = 4e 8d 0c 88
0019h inc dword ptr [r9]            ; INC(Inc_rm32) [mem(32u,R9:br,DS:sr)]                 encoding(3 bytes) = 41 ff 01
001ch inc r8d                       ; INC(Inc_rm32) [R8D]                                  encoding(3 bytes) = 41 ff c0
001fh cmp r8d,edx                   ; CMP(Cmp_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 3b c2
0022h jl short 0012h                ; JL(Jl_rel8_64) [12h:jmp64]                           encoding(2 bytes) = 7c ee
0024h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0027h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
002ah mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
002dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> incBytes => new byte[46]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x02,0x8B,0x52,0x08,0x45,0x33,0xC0,0x85,0xD2,0x7E,0x12,0x4D,0x63,0xC8,0x4E,0x8D,0x0C,0x88,0x41,0xFF,0x01,0x41,0xFF,0xC0,0x44,0x3B,0xC2,0x7C,0xEE,0x48,0x89,0x01,0x89,0x51,0x08,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<long> inc(Span<long> src)
; location: [7FFC872C2250h, 7FFC872C227Dh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,[rdx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 02
0008h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
000bh xor r8d,r8d                   ; XOR(Xor_r32_rm32) [R8D,R8D]                          encoding(3 bytes) = 45 33 c0
000eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0010h jle short 0024h               ; JLE(Jle_rel8_64) [24h:jmp64]                         encoding(2 bytes) = 7e 12
0012h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0015h lea r9,[rax+r9*8]             ; LEA(Lea_r64_m) [R9,mem(Unknown,RAX:br,DS:sr)]        encoding(4 bytes) = 4e 8d 0c c8
0019h inc qword ptr [r9]            ; INC(Inc_rm64) [mem(64u,R9:br,DS:sr)]                 encoding(3 bytes) = 49 ff 01
001ch inc r8d                       ; INC(Inc_rm32) [R8D]                                  encoding(3 bytes) = 41 ff c0
001fh cmp r8d,edx                   ; CMP(Cmp_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 3b c2
0022h jl short 0012h                ; JL(Jl_rel8_64) [12h:jmp64]                           encoding(2 bytes) = 7c ee
0024h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0027h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
002ah mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
002dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> incBytes => new byte[46]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x02,0x8B,0x52,0x08,0x45,0x33,0xC0,0x85,0xD2,0x7E,0x12,0x4D,0x63,0xC8,0x4E,0x8D,0x0C,0xC8,0x49,0xFF,0x01,0x41,0xFF,0xC0,0x44,0x3B,0xC2,0x7C,0xEE,0x48,0x89,0x01,0x89,0x51,0x08,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<ulong> inc(Span<ulong> src)
; location: [7FFC872C2290h, 7FFC872C22BDh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,[rdx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 02
0008h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
000bh xor r8d,r8d                   ; XOR(Xor_r32_rm32) [R8D,R8D]                          encoding(3 bytes) = 45 33 c0
000eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0010h jle short 0024h               ; JLE(Jle_rel8_64) [24h:jmp64]                         encoding(2 bytes) = 7e 12
0012h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0015h lea r9,[rax+r9*8]             ; LEA(Lea_r64_m) [R9,mem(Unknown,RAX:br,DS:sr)]        encoding(4 bytes) = 4e 8d 0c c8
0019h inc qword ptr [r9]            ; INC(Inc_rm64) [mem(64u,R9:br,DS:sr)]                 encoding(3 bytes) = 49 ff 01
001ch inc r8d                       ; INC(Inc_rm32) [R8D]                                  encoding(3 bytes) = 41 ff c0
001fh cmp r8d,edx                   ; CMP(Cmp_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 3b c2
0022h jl short 0012h                ; JL(Jl_rel8_64) [12h:jmp64]                           encoding(2 bytes) = 7c ee
0024h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0027h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
002ah mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
002dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> incBytes => new byte[46]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x02,0x8B,0x52,0x08,0x45,0x33,0xC0,0x85,0xD2,0x7E,0x12,0x4D,0x63,0xC8,0x4E,0x8D,0x0C,0xC8,0x49,0xFF,0x01,0x41,0xFF,0xC0,0x44,0x3B,0xC2,0x7C,0xEE,0x48,0x89,0x01,0x89,0x51,0x08,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: sbyte ipow(sbyte b, uint exp)
; location: [7FFC872C22D0h, 7FFC872C230Ch]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0007h jne short 000fh               ; JNE(Jne_rel8_64) [Fh:jmp64]                          encoding(2 bytes) = 75 06
0009h mov eax,1                     ; MOV(Mov_r32_imm32) [EAX,1h:imm32]                    encoding(5 bytes) = b8 01 00 00 00
000eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
000fh mov eax,1                     ; MOV(Mov_r32_imm32) [EAX,1h:imm32]                    encoding(5 bytes) = b8 01 00 00 00
0014h test dl,1                     ; TEST(Test_rm8_imm8) [DL,1h:imm8]                     encoding(3 bytes) = f6 c2 01
0017h je short 0025h                ; JE(Je_rel8_64) [25h:jmp64]                           encoding(2 bytes) = 74 0c
0019h movsx r8,cl                   ; MOVSX(Movsx_r64_rm8) [R8,CL]                         encoding(4 bytes) = 4c 0f be c1
001dh imul eax,r8d                  ; IMUL(Imul_r32_rm32) [EAX,R8D]                        encoding(4 bytes) = 41 0f af c0
0021h movsx rax,al                  ; MOVSX(Movsx_r64_rm8) [RAX,AL]                        encoding(4 bytes) = 48 0f be c0
0025h shr edx,1                     ; SHR(Shr_rm32_1) [EDX,1h:imm8]                        encoding(2 bytes) = d1 ea
0027h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0029h je short 003ch                ; JE(Je_rel8_64) [3Ch:jmp64]                           encoding(2 bytes) = 74 11
002bh movsx r8,cl                   ; MOVSX(Movsx_r64_rm8) [R8,CL]                         encoding(4 bytes) = 4c 0f be c1
002fh mov ecx,r8d                   ; MOV(Mov_r32_rm32) [ECX,R8D]                          encoding(3 bytes) = 41 8b c8
0032h imul ecx,r8d                  ; IMUL(Imul_r32_rm32) [ECX,R8D]                        encoding(4 bytes) = 41 0f af c8
0036h movsx rcx,cl                  ; MOVSX(Movsx_r64_rm8) [RCX,CL]                        encoding(4 bytes) = 48 0f be c9
003ah jmp short 0014h               ; JMP(Jmp_rel8_64) [14h:jmp64]                         encoding(2 bytes) = eb d8
003ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> ipowBytes => new byte[61]{0x0F,0x1F,0x44,0x00,0x00,0x85,0xD2,0x75,0x06,0xB8,0x01,0x00,0x00,0x00,0xC3,0xB8,0x01,0x00,0x00,0x00,0xF6,0xC2,0x01,0x74,0x0C,0x4C,0x0F,0xBE,0xC1,0x41,0x0F,0xAF,0xC0,0x48,0x0F,0xBE,0xC0,0xD1,0xEA,0x85,0xD2,0x74,0x11,0x4C,0x0F,0xBE,0xC1,0x41,0x8B,0xC8,0x41,0x0F,0xAF,0xC8,0x48,0x0F,0xBE,0xC9,0xEB,0xD8,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: byte ipow(byte b, uint exp)
; location: [7FFC872C2320h, 7FFC872C235Ah]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0007h jne short 000fh               ; JNE(Jne_rel8_64) [Fh:jmp64]                          encoding(2 bytes) = 75 06
0009h mov eax,1                     ; MOV(Mov_r32_imm32) [EAX,1h:imm32]                    encoding(5 bytes) = b8 01 00 00 00
000eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
000fh mov eax,1                     ; MOV(Mov_r32_imm32) [EAX,1h:imm32]                    encoding(5 bytes) = b8 01 00 00 00
0014h test dl,1                     ; TEST(Test_rm8_imm8) [DL,1h:imm8]                     encoding(3 bytes) = f6 c2 01
0017h je short 0024h                ; JE(Je_rel8_64) [24h:jmp64]                           encoding(2 bytes) = 74 0b
0019h movzx r8d,cl                  ; MOVZX(Movzx_r32_rm8) [R8D,CL]                        encoding(4 bytes) = 44 0f b6 c1
001dh imul eax,r8d                  ; IMUL(Imul_r32_rm32) [EAX,R8D]                        encoding(4 bytes) = 41 0f af c0
0021h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0024h shr edx,1                     ; SHR(Shr_rm32_1) [EDX,1h:imm8]                        encoding(2 bytes) = d1 ea
0026h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0028h je short 003ah                ; JE(Je_rel8_64) [3Ah:jmp64]                           encoding(2 bytes) = 74 10
002ah movzx r8d,cl                  ; MOVZX(Movzx_r32_rm8) [R8D,CL]                        encoding(4 bytes) = 44 0f b6 c1
002eh mov ecx,r8d                   ; MOV(Mov_r32_rm32) [ECX,R8D]                          encoding(3 bytes) = 41 8b c8
0031h imul ecx,r8d                  ; IMUL(Imul_r32_rm32) [ECX,R8D]                        encoding(4 bytes) = 41 0f af c8
0035h movzx ecx,cl                  ; MOVZX(Movzx_r32_rm8) [ECX,CL]                        encoding(3 bytes) = 0f b6 c9
0038h jmp short 0014h               ; JMP(Jmp_rel8_64) [14h:jmp64]                         encoding(2 bytes) = eb da
003ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> ipowBytes => new byte[59]{0x0F,0x1F,0x44,0x00,0x00,0x85,0xD2,0x75,0x06,0xB8,0x01,0x00,0x00,0x00,0xC3,0xB8,0x01,0x00,0x00,0x00,0xF6,0xC2,0x01,0x74,0x0B,0x44,0x0F,0xB6,0xC1,0x41,0x0F,0xAF,0xC0,0x0F,0xB6,0xC0,0xD1,0xEA,0x85,0xD2,0x74,0x10,0x44,0x0F,0xB6,0xC1,0x41,0x8B,0xC8,0x41,0x0F,0xAF,0xC8,0x0F,0xB6,0xC9,0xEB,0xDA,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: short ipow(short b, uint exp)
; location: [7FFC872C2370h, 7FFC872C23ACh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0007h jne short 000fh               ; JNE(Jne_rel8_64) [Fh:jmp64]                          encoding(2 bytes) = 75 06
0009h mov eax,1                     ; MOV(Mov_r32_imm32) [EAX,1h:imm32]                    encoding(5 bytes) = b8 01 00 00 00
000eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
000fh mov eax,1                     ; MOV(Mov_r32_imm32) [EAX,1h:imm32]                    encoding(5 bytes) = b8 01 00 00 00
0014h test dl,1                     ; TEST(Test_rm8_imm8) [DL,1h:imm8]                     encoding(3 bytes) = f6 c2 01
0017h je short 0025h                ; JE(Je_rel8_64) [25h:jmp64]                           encoding(2 bytes) = 74 0c
0019h movsx r8,cx                   ; MOVSX(Movsx_r64_rm16) [R8,CX]                        encoding(4 bytes) = 4c 0f bf c1
001dh imul eax,r8d                  ; IMUL(Imul_r32_rm32) [EAX,R8D]                        encoding(4 bytes) = 41 0f af c0
0021h movsx rax,ax                  ; MOVSX(Movsx_r64_rm16) [RAX,AX]                       encoding(4 bytes) = 48 0f bf c0
0025h shr edx,1                     ; SHR(Shr_rm32_1) [EDX,1h:imm8]                        encoding(2 bytes) = d1 ea
0027h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0029h je short 003ch                ; JE(Je_rel8_64) [3Ch:jmp64]                           encoding(2 bytes) = 74 11
002bh movsx r8,cx                   ; MOVSX(Movsx_r64_rm16) [R8,CX]                        encoding(4 bytes) = 4c 0f bf c1
002fh mov ecx,r8d                   ; MOV(Mov_r32_rm32) [ECX,R8D]                          encoding(3 bytes) = 41 8b c8
0032h imul ecx,r8d                  ; IMUL(Imul_r32_rm32) [ECX,R8D]                        encoding(4 bytes) = 41 0f af c8
0036h movsx rcx,cx                  ; MOVSX(Movsx_r64_rm16) [RCX,CX]                       encoding(4 bytes) = 48 0f bf c9
003ah jmp short 0014h               ; JMP(Jmp_rel8_64) [14h:jmp64]                         encoding(2 bytes) = eb d8
003ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> ipowBytes => new byte[61]{0x0F,0x1F,0x44,0x00,0x00,0x85,0xD2,0x75,0x06,0xB8,0x01,0x00,0x00,0x00,0xC3,0xB8,0x01,0x00,0x00,0x00,0xF6,0xC2,0x01,0x74,0x0C,0x4C,0x0F,0xBF,0xC1,0x41,0x0F,0xAF,0xC0,0x48,0x0F,0xBF,0xC0,0xD1,0xEA,0x85,0xD2,0x74,0x11,0x4C,0x0F,0xBF,0xC1,0x41,0x8B,0xC8,0x41,0x0F,0xAF,0xC8,0x48,0x0F,0xBF,0xC9,0xEB,0xD8,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ushort ipow(ushort b, uint exp)
; location: [7FFC872C23C0h, 7FFC872C23FAh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0007h jne short 000fh               ; JNE(Jne_rel8_64) [Fh:jmp64]                          encoding(2 bytes) = 75 06
0009h mov eax,1                     ; MOV(Mov_r32_imm32) [EAX,1h:imm32]                    encoding(5 bytes) = b8 01 00 00 00
000eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
000fh mov eax,1                     ; MOV(Mov_r32_imm32) [EAX,1h:imm32]                    encoding(5 bytes) = b8 01 00 00 00
0014h test dl,1                     ; TEST(Test_rm8_imm8) [DL,1h:imm8]                     encoding(3 bytes) = f6 c2 01
0017h je short 0024h                ; JE(Je_rel8_64) [24h:jmp64]                           encoding(2 bytes) = 74 0b
0019h movzx r8d,cx                  ; MOVZX(Movzx_r32_rm16) [R8D,CX]                       encoding(4 bytes) = 44 0f b7 c1
001dh imul eax,r8d                  ; IMUL(Imul_r32_rm32) [EAX,R8D]                        encoding(4 bytes) = 41 0f af c0
0021h movzx eax,ax                  ; MOVZX(Movzx_r32_rm16) [EAX,AX]                       encoding(3 bytes) = 0f b7 c0
0024h shr edx,1                     ; SHR(Shr_rm32_1) [EDX,1h:imm8]                        encoding(2 bytes) = d1 ea
0026h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0028h je short 003ah                ; JE(Je_rel8_64) [3Ah:jmp64]                           encoding(2 bytes) = 74 10
002ah movzx r8d,cx                  ; MOVZX(Movzx_r32_rm16) [R8D,CX]                       encoding(4 bytes) = 44 0f b7 c1
002eh mov ecx,r8d                   ; MOV(Mov_r32_rm32) [ECX,R8D]                          encoding(3 bytes) = 41 8b c8
0031h imul ecx,r8d                  ; IMUL(Imul_r32_rm32) [ECX,R8D]                        encoding(4 bytes) = 41 0f af c8
0035h movzx ecx,cx                  ; MOVZX(Movzx_r32_rm16) [ECX,CX]                       encoding(3 bytes) = 0f b7 c9
0038h jmp short 0014h               ; JMP(Jmp_rel8_64) [14h:jmp64]                         encoding(2 bytes) = eb da
003ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> ipowBytes => new byte[59]{0x0F,0x1F,0x44,0x00,0x00,0x85,0xD2,0x75,0x06,0xB8,0x01,0x00,0x00,0x00,0xC3,0xB8,0x01,0x00,0x00,0x00,0xF6,0xC2,0x01,0x74,0x0B,0x44,0x0F,0xB7,0xC1,0x41,0x0F,0xAF,0xC0,0x0F,0xB7,0xC0,0xD1,0xEA,0x85,0xD2,0x74,0x10,0x44,0x0F,0xB7,0xC1,0x41,0x8B,0xC8,0x41,0x0F,0xAF,0xC8,0x0F,0xB7,0xC9,0xEB,0xDA,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: int ipow(int b, uint exp)
; location: [7FFC872C2410h, 7FFC872C2437h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0007h jne short 000fh               ; JNE(Jne_rel8_64) [Fh:jmp64]                          encoding(2 bytes) = 75 06
0009h mov eax,1                     ; MOV(Mov_r32_imm32) [EAX,1h:imm32]                    encoding(5 bytes) = b8 01 00 00 00
000eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
000fh mov eax,1                     ; MOV(Mov_r32_imm32) [EAX,1h:imm32]                    encoding(5 bytes) = b8 01 00 00 00
0014h test dl,1                     ; TEST(Test_rm8_imm8) [DL,1h:imm8]                     encoding(3 bytes) = f6 c2 01
0017h je short 001ch                ; JE(Je_rel8_64) [1Ch:jmp64]                           encoding(2 bytes) = 74 03
0019h imul eax,ecx                  ; IMUL(Imul_r32_rm32) [EAX,ECX]                        encoding(3 bytes) = 0f af c1
001ch shr edx,1                     ; SHR(Shr_rm32_1) [EDX,1h:imm8]                        encoding(2 bytes) = d1 ea
001eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0020h je short 0027h                ; JE(Je_rel8_64) [27h:jmp64]                           encoding(2 bytes) = 74 05
0022h imul ecx,ecx                  ; IMUL(Imul_r32_rm32) [ECX,ECX]                        encoding(3 bytes) = 0f af c9
0025h jmp short 0014h               ; JMP(Jmp_rel8_64) [14h:jmp64]                         encoding(2 bytes) = eb ed
0027h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> ipowBytes => new byte[40]{0x0F,0x1F,0x44,0x00,0x00,0x85,0xD2,0x75,0x06,0xB8,0x01,0x00,0x00,0x00,0xC3,0xB8,0x01,0x00,0x00,0x00,0xF6,0xC2,0x01,0x74,0x03,0x0F,0xAF,0xC1,0xD1,0xEA,0x85,0xD2,0x74,0x05,0x0F,0xAF,0xC9,0xEB,0xED,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: uint ipow(uint b, uint exp)
; location: [7FFC872C2450h, 7FFC872C2477h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0007h jne short 000fh               ; JNE(Jne_rel8_64) [Fh:jmp64]                          encoding(2 bytes) = 75 06
0009h mov eax,1                     ; MOV(Mov_r32_imm32) [EAX,1h:imm32]                    encoding(5 bytes) = b8 01 00 00 00
000eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
000fh mov eax,1                     ; MOV(Mov_r32_imm32) [EAX,1h:imm32]                    encoding(5 bytes) = b8 01 00 00 00
0014h test dl,1                     ; TEST(Test_rm8_imm8) [DL,1h:imm8]                     encoding(3 bytes) = f6 c2 01
0017h je short 001ch                ; JE(Je_rel8_64) [1Ch:jmp64]                           encoding(2 bytes) = 74 03
0019h imul eax,ecx                  ; IMUL(Imul_r32_rm32) [EAX,ECX]                        encoding(3 bytes) = 0f af c1
001ch shr edx,1                     ; SHR(Shr_rm32_1) [EDX,1h:imm8]                        encoding(2 bytes) = d1 ea
001eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0020h je short 0027h                ; JE(Je_rel8_64) [27h:jmp64]                           encoding(2 bytes) = 74 05
0022h imul ecx,ecx                  ; IMUL(Imul_r32_rm32) [ECX,ECX]                        encoding(3 bytes) = 0f af c9
0025h jmp short 0014h               ; JMP(Jmp_rel8_64) [14h:jmp64]                         encoding(2 bytes) = eb ed
0027h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> ipowBytes => new byte[40]{0x0F,0x1F,0x44,0x00,0x00,0x85,0xD2,0x75,0x06,0xB8,0x01,0x00,0x00,0x00,0xC3,0xB8,0x01,0x00,0x00,0x00,0xF6,0xC2,0x01,0x74,0x03,0x0F,0xAF,0xC1,0xD1,0xEA,0x85,0xD2,0x74,0x05,0x0F,0xAF,0xC9,0xEB,0xED,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: long ipow(long b, uint exp)
; location: [7FFC872C2490h, 7FFC872C24B9h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0007h jne short 000fh               ; JNE(Jne_rel8_64) [Fh:jmp64]                          encoding(2 bytes) = 75 06
0009h mov eax,1                     ; MOV(Mov_r32_imm32) [EAX,1h:imm32]                    encoding(5 bytes) = b8 01 00 00 00
000eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
000fh mov eax,1                     ; MOV(Mov_r32_imm32) [EAX,1h:imm32]                    encoding(5 bytes) = b8 01 00 00 00
0014h test dl,1                     ; TEST(Test_rm8_imm8) [DL,1h:imm8]                     encoding(3 bytes) = f6 c2 01
0017h je short 001dh                ; JE(Je_rel8_64) [1Dh:jmp64]                           encoding(2 bytes) = 74 04
0019h imul rax,rcx                  ; IMUL(Imul_r64_rm64) [RAX,RCX]                        encoding(4 bytes) = 48 0f af c1
001dh shr edx,1                     ; SHR(Shr_rm32_1) [EDX,1h:imm8]                        encoding(2 bytes) = d1 ea
001fh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0021h je short 0029h                ; JE(Je_rel8_64) [29h:jmp64]                           encoding(2 bytes) = 74 06
0023h imul rcx,rcx                  ; IMUL(Imul_r64_rm64) [RCX,RCX]                        encoding(4 bytes) = 48 0f af c9
0027h jmp short 0014h               ; JMP(Jmp_rel8_64) [14h:jmp64]                         encoding(2 bytes) = eb eb
0029h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> ipowBytes => new byte[42]{0x0F,0x1F,0x44,0x00,0x00,0x85,0xD2,0x75,0x06,0xB8,0x01,0x00,0x00,0x00,0xC3,0xB8,0x01,0x00,0x00,0x00,0xF6,0xC2,0x01,0x74,0x04,0x48,0x0F,0xAF,0xC1,0xD1,0xEA,0x85,0xD2,0x74,0x06,0x48,0x0F,0xAF,0xC9,0xEB,0xEB,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ulong ipow(ulong b, uint exp)
; location: [7FFC872C24D0h, 7FFC872C24F9h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0007h jne short 000fh               ; JNE(Jne_rel8_64) [Fh:jmp64]                          encoding(2 bytes) = 75 06
0009h mov eax,1                     ; MOV(Mov_r32_imm32) [EAX,1h:imm32]                    encoding(5 bytes) = b8 01 00 00 00
000eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
000fh mov eax,1                     ; MOV(Mov_r32_imm32) [EAX,1h:imm32]                    encoding(5 bytes) = b8 01 00 00 00
0014h test dl,1                     ; TEST(Test_rm8_imm8) [DL,1h:imm8]                     encoding(3 bytes) = f6 c2 01
0017h je short 001dh                ; JE(Je_rel8_64) [1Dh:jmp64]                           encoding(2 bytes) = 74 04
0019h imul rax,rcx                  ; IMUL(Imul_r64_rm64) [RAX,RCX]                        encoding(4 bytes) = 48 0f af c1
001dh shr edx,1                     ; SHR(Shr_rm32_1) [EDX,1h:imm8]                        encoding(2 bytes) = d1 ea
001fh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0021h je short 0029h                ; JE(Je_rel8_64) [29h:jmp64]                           encoding(2 bytes) = 74 06
0023h imul rcx,rcx                  ; IMUL(Imul_r64_rm64) [RCX,RCX]                        encoding(4 bytes) = 48 0f af c9
0027h jmp short 0014h               ; JMP(Jmp_rel8_64) [14h:jmp64]                         encoding(2 bytes) = eb eb
0029h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> ipowBytes => new byte[42]{0x0F,0x1F,0x44,0x00,0x00,0x85,0xD2,0x75,0x06,0xB8,0x01,0x00,0x00,0x00,0xC3,0xB8,0x01,0x00,0x00,0x00,0xF6,0xC2,0x01,0x74,0x04,0x48,0x0F,0xAF,0xC1,0xD1,0xEA,0x85,0xD2,0x74,0x06,0x48,0x0F,0xAF,0xC9,0xEB,0xEB,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref sbyte ipow(ref sbyte src, uint exp)
; location: [7FFC872C2510h, 7FFC872C252Bh]
0000h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0001h sub rsp,20h                   ; SUB(Sub_rm64_imm8) [RSP,20h:imm64]                   encoding(4 bytes) = 48 83 ec 20
0005h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0008h movsx rcx,byte ptr [rsi]      ; MOVSX(Movsx_r64_rm8) [RCX,mem(8i,RSI:br,DS:sr)]      encoding(4 bytes) = 48 0f be 0e
000ch call 7FFC872C22D0h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFFDC0h:jmp64]        encoding(5 bytes) = e8 af fd ff ff
0011h mov [rsi],al                  ; MOV(Mov_rm8_r8) [mem(8u,RSI:br,DS:sr),AL]            encoding(2 bytes) = 88 06
0013h mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
0016h add rsp,20h                   ; ADD(Add_rm64_imm8) [RSP,20h:imm64]                   encoding(4 bytes) = 48 83 c4 20
001ah pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
001bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> ipowBytes => new byte[28]{0x56,0x48,0x83,0xEC,0x20,0x48,0x8B,0xF1,0x48,0x0F,0xBE,0x0E,0xE8,0xAF,0xFD,0xFF,0xFF,0x88,0x06,0x48,0x8B,0xC6,0x48,0x83,0xC4,0x20,0x5E,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref byte ipow(ref byte src, uint exp)
; location: [7FFC872C2540h, 7FFC872C255Ah]
0000h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0001h sub rsp,20h                   ; SUB(Sub_rm64_imm8) [RSP,20h:imm64]                   encoding(4 bytes) = 48 83 ec 20
0005h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0008h movzx ecx,byte ptr [rsi]      ; MOVZX(Movzx_r32_rm8) [ECX,mem(8u,RSI:br,DS:sr)]      encoding(3 bytes) = 0f b6 0e
000bh call 7FFC872C2320h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFFDE0h:jmp64]        encoding(5 bytes) = e8 d0 fd ff ff
0010h mov [rsi],al                  ; MOV(Mov_rm8_r8) [mem(8u,RSI:br,DS:sr),AL]            encoding(2 bytes) = 88 06
0012h mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
0015h add rsp,20h                   ; ADD(Add_rm64_imm8) [RSP,20h:imm64]                   encoding(4 bytes) = 48 83 c4 20
0019h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
001ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> ipowBytes => new byte[27]{0x56,0x48,0x83,0xEC,0x20,0x48,0x8B,0xF1,0x0F,0xB6,0x0E,0xE8,0xD0,0xFD,0xFF,0xFF,0x88,0x06,0x48,0x8B,0xC6,0x48,0x83,0xC4,0x20,0x5E,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref short ipow(ref short src, uint exp)
; location: [7FFC872C2570h, 7FFC872C258Ch]
0000h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0001h sub rsp,20h                   ; SUB(Sub_rm64_imm8) [RSP,20h:imm64]                   encoding(4 bytes) = 48 83 ec 20
0005h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0008h movsx rcx,word ptr [rsi]      ; MOVSX(Movsx_r64_rm16) [RCX,mem(16i,RSI:br,DS:sr)]    encoding(4 bytes) = 48 0f bf 0e
000ch call 7FFC872C2370h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFFE00h:jmp64]        encoding(5 bytes) = e8 ef fd ff ff
0011h mov [rsi],ax                  ; MOV(Mov_rm16_r16) [mem(16u,RSI:br,DS:sr),AX]         encoding(3 bytes) = 66 89 06
0014h mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
0017h add rsp,20h                   ; ADD(Add_rm64_imm8) [RSP,20h:imm64]                   encoding(4 bytes) = 48 83 c4 20
001bh pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
001ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> ipowBytes => new byte[29]{0x56,0x48,0x83,0xEC,0x20,0x48,0x8B,0xF1,0x48,0x0F,0xBF,0x0E,0xE8,0xEF,0xFD,0xFF,0xFF,0x66,0x89,0x06,0x48,0x8B,0xC6,0x48,0x83,0xC4,0x20,0x5E,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref ushort ipow(ref ushort src, uint exp)
; location: [7FFC872C25B0h, 7FFC872C25CBh]
0000h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0001h sub rsp,20h                   ; SUB(Sub_rm64_imm8) [RSP,20h:imm64]                   encoding(4 bytes) = 48 83 ec 20
0005h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0008h movzx ecx,word ptr [rsi]      ; MOVZX(Movzx_r32_rm16) [ECX,mem(16u,RSI:br,DS:sr)]    encoding(3 bytes) = 0f b7 0e
000bh call 7FFC872C23C0h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFFE10h:jmp64]        encoding(5 bytes) = e8 00 fe ff ff
0010h mov [rsi],ax                  ; MOV(Mov_rm16_r16) [mem(16u,RSI:br,DS:sr),AX]         encoding(3 bytes) = 66 89 06
0013h mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
0016h add rsp,20h                   ; ADD(Add_rm64_imm8) [RSP,20h:imm64]                   encoding(4 bytes) = 48 83 c4 20
001ah pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
001bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> ipowBytes => new byte[28]{0x56,0x48,0x83,0xEC,0x20,0x48,0x8B,0xF1,0x0F,0xB7,0x0E,0xE8,0x00,0xFE,0xFF,0xFF,0x66,0x89,0x06,0x48,0x8B,0xC6,0x48,0x83,0xC4,0x20,0x5E,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref int ipow(ref int src, uint exp)
; location: [7FFC872C25E0h, 7FFC872C25F9h]
0000h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0001h sub rsp,20h                   ; SUB(Sub_rm64_imm8) [RSP,20h:imm64]                   encoding(4 bytes) = 48 83 ec 20
0005h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0008h mov ecx,[rsi]                 ; MOV(Mov_r32_rm32) [ECX,mem(32u,RSI:br,DS:sr)]        encoding(2 bytes) = 8b 0e
000ah call 7FFC872C2410h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFFE30h:jmp64]        encoding(5 bytes) = e8 21 fe ff ff
000fh mov [rsi],eax                 ; MOV(Mov_rm32_r32) [mem(32u,RSI:br,DS:sr),EAX]        encoding(2 bytes) = 89 06
0011h mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
0014h add rsp,20h                   ; ADD(Add_rm64_imm8) [RSP,20h:imm64]                   encoding(4 bytes) = 48 83 c4 20
0018h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0019h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> ipowBytes => new byte[26]{0x56,0x48,0x83,0xEC,0x20,0x48,0x8B,0xF1,0x8B,0x0E,0xE8,0x21,0xFE,0xFF,0xFF,0x89,0x06,0x48,0x8B,0xC6,0x48,0x83,0xC4,0x20,0x5E,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref uint ipow(ref uint src, uint exp)
; location: [7FFC872C2610h, 7FFC872C2629h]
0000h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0001h sub rsp,20h                   ; SUB(Sub_rm64_imm8) [RSP,20h:imm64]                   encoding(4 bytes) = 48 83 ec 20
0005h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0008h mov ecx,[rsi]                 ; MOV(Mov_r32_rm32) [ECX,mem(32u,RSI:br,DS:sr)]        encoding(2 bytes) = 8b 0e
000ah call 7FFC872C2450h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFFE40h:jmp64]        encoding(5 bytes) = e8 31 fe ff ff
000fh mov [rsi],eax                 ; MOV(Mov_rm32_r32) [mem(32u,RSI:br,DS:sr),EAX]        encoding(2 bytes) = 89 06
0011h mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
0014h add rsp,20h                   ; ADD(Add_rm64_imm8) [RSP,20h:imm64]                   encoding(4 bytes) = 48 83 c4 20
0018h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0019h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> ipowBytes => new byte[26]{0x56,0x48,0x83,0xEC,0x20,0x48,0x8B,0xF1,0x8B,0x0E,0xE8,0x31,0xFE,0xFF,0xFF,0x89,0x06,0x48,0x8B,0xC6,0x48,0x83,0xC4,0x20,0x5E,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref long ipow(ref long src, uint exp)
; location: [7FFC872C2640h, 7FFC872C265Bh]
0000h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0001h sub rsp,20h                   ; SUB(Sub_rm64_imm8) [RSP,20h:imm64]                   encoding(4 bytes) = 48 83 ec 20
0005h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0008h mov rcx,[rsi]                 ; MOV(Mov_r64_rm64) [RCX,mem(64u,RSI:br,DS:sr)]        encoding(3 bytes) = 48 8b 0e
000bh call 7FFC872C2490h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFFE50h:jmp64]        encoding(5 bytes) = e8 40 fe ff ff
0010h mov [rsi],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 06
0013h mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
0016h add rsp,20h                   ; ADD(Add_rm64_imm8) [RSP,20h:imm64]                   encoding(4 bytes) = 48 83 c4 20
001ah pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
001bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> ipowBytes => new byte[28]{0x56,0x48,0x83,0xEC,0x20,0x48,0x8B,0xF1,0x48,0x8B,0x0E,0xE8,0x40,0xFE,0xFF,0xFF,0x48,0x89,0x06,0x48,0x8B,0xC6,0x48,0x83,0xC4,0x20,0x5E,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref ulong ipow(ref ulong src, uint exp)
; location: [7FFC872C2670h, 7FFC872C268Bh]
0000h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0001h sub rsp,20h                   ; SUB(Sub_rm64_imm8) [RSP,20h:imm64]                   encoding(4 bytes) = 48 83 ec 20
0005h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0008h mov rcx,[rsi]                 ; MOV(Mov_r64_rm64) [RCX,mem(64u,RSI:br,DS:sr)]        encoding(3 bytes) = 48 8b 0e
000bh call 7FFC872C24D0h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFFE60h:jmp64]        encoding(5 bytes) = e8 50 fe ff ff
0010h mov [rsi],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 06
0013h mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
0016h add rsp,20h                   ; ADD(Add_rm64_imm8) [RSP,20h:imm64]                   encoding(4 bytes) = 48 83 c4 20
001ah pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
001bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> ipowBytes => new byte[28]{0x56,0x48,0x83,0xEC,0x20,0x48,0x8B,0xF1,0x48,0x8B,0x0E,0xE8,0x50,0xFE,0xFF,0xFF,0x48,0x89,0x06,0x48,0x8B,0xC6,0x48,0x83,0xC4,0x20,0x5E,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<sbyte> ipow(Span<sbyte> b, ReadOnlySpan<uint> exp)
; location: [7FFC872C26A0h, 7FFC872C2702h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0005h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0006h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0007h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0008h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
000ch mov rdi,rcx                   ; MOV(Mov_r64_rm64) [RDI,RCX]                          encoding(3 bytes) = 48 8b f9
000fh mov rsi,r8                    ; MOV(Mov_r64_rm64) [RSI,R8]                           encoding(3 bytes) = 49 8b f0
0012h mov rbx,[rdx]                 ; MOV(Mov_r64_rm64) [RBX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 1a
0015h mov ebp,[rdx+8]               ; MOV(Mov_r32_rm32) [EBP,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 6a 08
0018h xor r14d,r14d                 ; XOR(Xor_r32_rm32) [R14D,R14D]                        encoding(3 bytes) = 45 33 f6
001bh test ebp,ebp                  ; TEST(Test_rm32_r32) [EBP,EBP]                        encoding(2 bytes) = 85 ed
001dh jle short 0047h               ; JLE(Jle_rel8_64) [47h:jmp64]                         encoding(2 bytes) = 7e 28
001fh movsxd rcx,r14d               ; MOVSXD(Movsxd_r64_rm32) [RCX,R14D]                   encoding(3 bytes) = 49 63 ce
0022h lea r15,[rbx+rcx]             ; LEA(Lea_r64_m) [R15,mem(Unknown,RBX:br,DS:sr)]       encoding(4 bytes) = 4c 8d 3c 0b
0026h cmp r14d,[rsi+8]              ; CMP(Cmp_r32_rm32) [R14D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 3b 76 08
002ah jae short 005dh               ; JAE(Jae_rel8_64) [5Dh:jmp64]                         encoding(2 bytes) = 73 31
002ch mov rdx,[rsi]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RSI:br,DS:sr)]        encoding(3 bytes) = 48 8b 16
002fh mov edx,[rdx+rcx*4]           ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 14 8a
0032h movsx rcx,byte ptr [rbx+rcx]  ; MOVSX(Movsx_r64_rm8) [RCX,mem(8i,RBX:br,DS:sr)]      encoding(5 bytes) = 48 0f be 0c 0b
0037h call 7FFC872C22D0h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFFC30h:jmp64]        encoding(5 bytes) = e8 f4 fb ff ff
003ch mov [r15],al                  ; MOV(Mov_rm8_r8) [mem(8u,R15:br,DS:sr),AL]            encoding(3 bytes) = 41 88 07
003fh inc r14d                      ; INC(Inc_rm32) [R14D]                                 encoding(3 bytes) = 41 ff c6
0042h cmp r14d,ebp                  ; CMP(Cmp_r32_rm32) [R14D,EBP]                         encoding(3 bytes) = 44 3b f5
0045h jl short 001fh                ; JL(Jl_rel8_64) [1Fh:jmp64]                           encoding(2 bytes) = 7c d8
0047h mov [rdi],rbx                 ; MOV(Mov_rm64_r64) [mem(64u,RDI:br,DS:sr),RBX]        encoding(3 bytes) = 48 89 1f
004ah mov [rdi+8],ebp               ; MOV(Mov_rm32_r32) [mem(32u,RDI:br,DS:sr),EBP]        encoding(3 bytes) = 89 6f 08
004dh mov rax,rdi                   ; MOV(Mov_r64_rm64) [RAX,RDI]                          encoding(3 bytes) = 48 8b c7
0050h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
0054h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0055h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0056h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0057h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0058h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
005ah pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
005ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
005dh call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A2710h:jmp64]                encoding(5 bytes) = e8 ae 26 5a 5f
0062h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> ipowBytes => new byte[99]{0x41,0x57,0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x48,0x8B,0xF9,0x49,0x8B,0xF0,0x48,0x8B,0x1A,0x8B,0x6A,0x08,0x45,0x33,0xF6,0x85,0xED,0x7E,0x28,0x49,0x63,0xCE,0x4C,0x8D,0x3C,0x0B,0x44,0x3B,0x76,0x08,0x73,0x31,0x48,0x8B,0x16,0x8B,0x14,0x8A,0x48,0x0F,0xBE,0x0C,0x0B,0xE8,0xF4,0xFB,0xFF,0xFF,0x41,0x88,0x07,0x41,0xFF,0xC6,0x44,0x3B,0xF5,0x7C,0xD8,0x48,0x89,0x1F,0x89,0x6F,0x08,0x48,0x8B,0xC7,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0x41,0x5F,0xC3,0xE8,0xAE,0x26,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<byte> ipow(Span<byte> b, ReadOnlySpan<uint> exp)
; location: [7FFC872C2730h, 7FFC872C2791h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0005h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0006h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0007h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0008h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
000ch mov rdi,rcx                   ; MOV(Mov_r64_rm64) [RDI,RCX]                          encoding(3 bytes) = 48 8b f9
000fh mov rsi,r8                    ; MOV(Mov_r64_rm64) [RSI,R8]                           encoding(3 bytes) = 49 8b f0
0012h mov rbx,[rdx]                 ; MOV(Mov_r64_rm64) [RBX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 1a
0015h mov ebp,[rdx+8]               ; MOV(Mov_r32_rm32) [EBP,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 6a 08
0018h xor r14d,r14d                 ; XOR(Xor_r32_rm32) [R14D,R14D]                        encoding(3 bytes) = 45 33 f6
001bh test ebp,ebp                  ; TEST(Test_rm32_r32) [EBP,EBP]                        encoding(2 bytes) = 85 ed
001dh jle short 0046h               ; JLE(Jle_rel8_64) [46h:jmp64]                         encoding(2 bytes) = 7e 27
001fh movsxd rcx,r14d               ; MOVSXD(Movsxd_r64_rm32) [RCX,R14D]                   encoding(3 bytes) = 49 63 ce
0022h lea r15,[rbx+rcx]             ; LEA(Lea_r64_m) [R15,mem(Unknown,RBX:br,DS:sr)]       encoding(4 bytes) = 4c 8d 3c 0b
0026h cmp r14d,[rsi+8]              ; CMP(Cmp_r32_rm32) [R14D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 3b 76 08
002ah jae short 005ch               ; JAE(Jae_rel8_64) [5Ch:jmp64]                         encoding(2 bytes) = 73 30
002ch mov rdx,[rsi]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RSI:br,DS:sr)]        encoding(3 bytes) = 48 8b 16
002fh mov edx,[rdx+rcx*4]           ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 14 8a
0032h movzx ecx,byte ptr [rbx+rcx]  ; MOVZX(Movzx_r32_rm8) [ECX,mem(8u,RBX:br,DS:sr)]      encoding(4 bytes) = 0f b6 0c 0b
0036h call 7FFC872C2320h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFFBF0h:jmp64]        encoding(5 bytes) = e8 b5 fb ff ff
003bh mov [r15],al                  ; MOV(Mov_rm8_r8) [mem(8u,R15:br,DS:sr),AL]            encoding(3 bytes) = 41 88 07
003eh inc r14d                      ; INC(Inc_rm32) [R14D]                                 encoding(3 bytes) = 41 ff c6
0041h cmp r14d,ebp                  ; CMP(Cmp_r32_rm32) [R14D,EBP]                         encoding(3 bytes) = 44 3b f5
0044h jl short 001fh                ; JL(Jl_rel8_64) [1Fh:jmp64]                           encoding(2 bytes) = 7c d9
0046h mov [rdi],rbx                 ; MOV(Mov_rm64_r64) [mem(64u,RDI:br,DS:sr),RBX]        encoding(3 bytes) = 48 89 1f
0049h mov [rdi+8],ebp               ; MOV(Mov_rm32_r32) [mem(32u,RDI:br,DS:sr),EBP]        encoding(3 bytes) = 89 6f 08
004ch mov rax,rdi                   ; MOV(Mov_r64_rm64) [RAX,RDI]                          encoding(3 bytes) = 48 8b c7
004fh add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
0053h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0054h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0055h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0056h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0057h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0059h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
005bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
005ch call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A2680h:jmp64]                encoding(5 bytes) = e8 1f 26 5a 5f
0061h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> ipowBytes => new byte[98]{0x41,0x57,0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x48,0x8B,0xF9,0x49,0x8B,0xF0,0x48,0x8B,0x1A,0x8B,0x6A,0x08,0x45,0x33,0xF6,0x85,0xED,0x7E,0x27,0x49,0x63,0xCE,0x4C,0x8D,0x3C,0x0B,0x44,0x3B,0x76,0x08,0x73,0x30,0x48,0x8B,0x16,0x8B,0x14,0x8A,0x0F,0xB6,0x0C,0x0B,0xE8,0xB5,0xFB,0xFF,0xFF,0x41,0x88,0x07,0x41,0xFF,0xC6,0x44,0x3B,0xF5,0x7C,0xD9,0x48,0x89,0x1F,0x89,0x6F,0x08,0x48,0x8B,0xC7,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0x41,0x5F,0xC3,0xE8,0x1F,0x26,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<short> ipow(Span<short> b, ReadOnlySpan<uint> exp)
; location: [7FFC872C27C0h, 7FFC872C2823h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0005h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0006h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0007h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0008h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
000ch mov rdi,rcx                   ; MOV(Mov_r64_rm64) [RDI,RCX]                          encoding(3 bytes) = 48 8b f9
000fh mov rsi,r8                    ; MOV(Mov_r64_rm64) [RSI,R8]                           encoding(3 bytes) = 49 8b f0
0012h mov rbx,[rdx]                 ; MOV(Mov_r64_rm64) [RBX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 1a
0015h mov ebp,[rdx+8]               ; MOV(Mov_r32_rm32) [EBP,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 6a 08
0018h xor r14d,r14d                 ; XOR(Xor_r32_rm32) [R14D,R14D]                        encoding(3 bytes) = 45 33 f6
001bh test ebp,ebp                  ; TEST(Test_rm32_r32) [EBP,EBP]                        encoding(2 bytes) = 85 ed
001dh jle short 0048h               ; JLE(Jle_rel8_64) [48h:jmp64]                         encoding(2 bytes) = 7e 29
001fh movsxd rcx,r14d               ; MOVSXD(Movsxd_r64_rm32) [RCX,R14D]                   encoding(3 bytes) = 49 63 ce
0022h lea r15,[rbx+rcx*2]           ; LEA(Lea_r64_m) [R15,mem(Unknown,RBX:br,DS:sr)]       encoding(4 bytes) = 4c 8d 3c 4b
0026h cmp r14d,[rsi+8]              ; CMP(Cmp_r32_rm32) [R14D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 3b 76 08
002ah jae short 005eh               ; JAE(Jae_rel8_64) [5Eh:jmp64]                         encoding(2 bytes) = 73 32
002ch mov rdx,[rsi]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RSI:br,DS:sr)]        encoding(3 bytes) = 48 8b 16
002fh mov edx,[rdx+rcx*4]           ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 14 8a
0032h movsx rcx,word ptr [rbx+rcx*2]; MOVSX(Movsx_r64_rm16) [RCX,mem(16i,RBX:br,DS:sr)]    encoding(5 bytes) = 48 0f bf 0c 4b
0037h call 7FFC872C2370h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFFBB0h:jmp64]        encoding(5 bytes) = e8 74 fb ff ff
003ch mov [r15],ax                  ; MOV(Mov_rm16_r16) [mem(16u,R15:br,DS:sr),AX]         encoding(4 bytes) = 66 41 89 07
0040h inc r14d                      ; INC(Inc_rm32) [R14D]                                 encoding(3 bytes) = 41 ff c6
0043h cmp r14d,ebp                  ; CMP(Cmp_r32_rm32) [R14D,EBP]                         encoding(3 bytes) = 44 3b f5
0046h jl short 001fh                ; JL(Jl_rel8_64) [1Fh:jmp64]                           encoding(2 bytes) = 7c d7
0048h mov [rdi],rbx                 ; MOV(Mov_rm64_r64) [mem(64u,RDI:br,DS:sr),RBX]        encoding(3 bytes) = 48 89 1f
004bh mov [rdi+8],ebp               ; MOV(Mov_rm32_r32) [mem(32u,RDI:br,DS:sr),EBP]        encoding(3 bytes) = 89 6f 08
004eh mov rax,rdi                   ; MOV(Mov_r64_rm64) [RAX,RDI]                          encoding(3 bytes) = 48 8b c7
0051h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
0055h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0056h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0057h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0058h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0059h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
005bh pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
005dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
005eh call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A25F0h:jmp64]                encoding(5 bytes) = e8 8d 25 5a 5f
0063h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> ipowBytes => new byte[100]{0x41,0x57,0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x48,0x8B,0xF9,0x49,0x8B,0xF0,0x48,0x8B,0x1A,0x8B,0x6A,0x08,0x45,0x33,0xF6,0x85,0xED,0x7E,0x29,0x49,0x63,0xCE,0x4C,0x8D,0x3C,0x4B,0x44,0x3B,0x76,0x08,0x73,0x32,0x48,0x8B,0x16,0x8B,0x14,0x8A,0x48,0x0F,0xBF,0x0C,0x4B,0xE8,0x74,0xFB,0xFF,0xFF,0x66,0x41,0x89,0x07,0x41,0xFF,0xC6,0x44,0x3B,0xF5,0x7C,0xD7,0x48,0x89,0x1F,0x89,0x6F,0x08,0x48,0x8B,0xC7,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0x41,0x5F,0xC3,0xE8,0x8D,0x25,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<ushort> ipow(Span<ushort> b, ReadOnlySpan<uint> exp)
; location: [7FFC872C2850h, 7FFC872C28B2h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0005h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0006h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0007h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0008h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
000ch mov rdi,rcx                   ; MOV(Mov_r64_rm64) [RDI,RCX]                          encoding(3 bytes) = 48 8b f9
000fh mov rsi,r8                    ; MOV(Mov_r64_rm64) [RSI,R8]                           encoding(3 bytes) = 49 8b f0
0012h mov rbx,[rdx]                 ; MOV(Mov_r64_rm64) [RBX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 1a
0015h mov ebp,[rdx+8]               ; MOV(Mov_r32_rm32) [EBP,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 6a 08
0018h xor r14d,r14d                 ; XOR(Xor_r32_rm32) [R14D,R14D]                        encoding(3 bytes) = 45 33 f6
001bh test ebp,ebp                  ; TEST(Test_rm32_r32) [EBP,EBP]                        encoding(2 bytes) = 85 ed
001dh jle short 0047h               ; JLE(Jle_rel8_64) [47h:jmp64]                         encoding(2 bytes) = 7e 28
001fh movsxd rcx,r14d               ; MOVSXD(Movsxd_r64_rm32) [RCX,R14D]                   encoding(3 bytes) = 49 63 ce
0022h lea r15,[rbx+rcx*2]           ; LEA(Lea_r64_m) [R15,mem(Unknown,RBX:br,DS:sr)]       encoding(4 bytes) = 4c 8d 3c 4b
0026h cmp r14d,[rsi+8]              ; CMP(Cmp_r32_rm32) [R14D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 3b 76 08
002ah jae short 005dh               ; JAE(Jae_rel8_64) [5Dh:jmp64]                         encoding(2 bytes) = 73 31
002ch mov rdx,[rsi]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RSI:br,DS:sr)]        encoding(3 bytes) = 48 8b 16
002fh mov edx,[rdx+rcx*4]           ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 14 8a
0032h movzx ecx,word ptr [rbx+rcx*2]; MOVZX(Movzx_r32_rm16) [ECX,mem(16u,RBX:br,DS:sr)]    encoding(4 bytes) = 0f b7 0c 4b
0036h call 7FFC872C23C0h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFFB70h:jmp64]        encoding(5 bytes) = e8 35 fb ff ff
003bh mov [r15],ax                  ; MOV(Mov_rm16_r16) [mem(16u,R15:br,DS:sr),AX]         encoding(4 bytes) = 66 41 89 07
003fh inc r14d                      ; INC(Inc_rm32) [R14D]                                 encoding(3 bytes) = 41 ff c6
0042h cmp r14d,ebp                  ; CMP(Cmp_r32_rm32) [R14D,EBP]                         encoding(3 bytes) = 44 3b f5
0045h jl short 001fh                ; JL(Jl_rel8_64) [1Fh:jmp64]                           encoding(2 bytes) = 7c d8
0047h mov [rdi],rbx                 ; MOV(Mov_rm64_r64) [mem(64u,RDI:br,DS:sr),RBX]        encoding(3 bytes) = 48 89 1f
004ah mov [rdi+8],ebp               ; MOV(Mov_rm32_r32) [mem(32u,RDI:br,DS:sr),EBP]        encoding(3 bytes) = 89 6f 08
004dh mov rax,rdi                   ; MOV(Mov_r64_rm64) [RAX,RDI]                          encoding(3 bytes) = 48 8b c7
0050h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
0054h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0055h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0056h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0057h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0058h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
005ah pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
005ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
005dh call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A2560h:jmp64]                encoding(5 bytes) = e8 fe 24 5a 5f
0062h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> ipowBytes => new byte[99]{0x41,0x57,0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x48,0x8B,0xF9,0x49,0x8B,0xF0,0x48,0x8B,0x1A,0x8B,0x6A,0x08,0x45,0x33,0xF6,0x85,0xED,0x7E,0x28,0x49,0x63,0xCE,0x4C,0x8D,0x3C,0x4B,0x44,0x3B,0x76,0x08,0x73,0x31,0x48,0x8B,0x16,0x8B,0x14,0x8A,0x0F,0xB7,0x0C,0x4B,0xE8,0x35,0xFB,0xFF,0xFF,0x66,0x41,0x89,0x07,0x41,0xFF,0xC6,0x44,0x3B,0xF5,0x7C,0xD8,0x48,0x89,0x1F,0x89,0x6F,0x08,0x48,0x8B,0xC7,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0x41,0x5F,0xC3,0xE8,0xFE,0x24,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<int> ipow(Span<int> b, ReadOnlySpan<uint> exp)
; location: [7FFC872C28E0h, 7FFC872C2940h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0005h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0006h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0007h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0008h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
000ch mov rdi,rcx                   ; MOV(Mov_r64_rm64) [RDI,RCX]                          encoding(3 bytes) = 48 8b f9
000fh mov rsi,r8                    ; MOV(Mov_r64_rm64) [RSI,R8]                           encoding(3 bytes) = 49 8b f0
0012h mov rbx,[rdx]                 ; MOV(Mov_r64_rm64) [RBX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 1a
0015h mov ebp,[rdx+8]               ; MOV(Mov_r32_rm32) [EBP,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 6a 08
0018h xor r14d,r14d                 ; XOR(Xor_r32_rm32) [R14D,R14D]                        encoding(3 bytes) = 45 33 f6
001bh test ebp,ebp                  ; TEST(Test_rm32_r32) [EBP,EBP]                        encoding(2 bytes) = 85 ed
001dh jle short 0045h               ; JLE(Jle_rel8_64) [45h:jmp64]                         encoding(2 bytes) = 7e 26
001fh movsxd rcx,r14d               ; MOVSXD(Movsxd_r64_rm32) [RCX,R14D]                   encoding(3 bytes) = 49 63 ce
0022h lea r15,[rbx+rcx*4]           ; LEA(Lea_r64_m) [R15,mem(Unknown,RBX:br,DS:sr)]       encoding(4 bytes) = 4c 8d 3c 8b
0026h cmp r14d,[rsi+8]              ; CMP(Cmp_r32_rm32) [R14D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 3b 76 08
002ah jae short 005bh               ; JAE(Jae_rel8_64) [5Bh:jmp64]                         encoding(2 bytes) = 73 2f
002ch mov rdx,[rsi]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RSI:br,DS:sr)]        encoding(3 bytes) = 48 8b 16
002fh mov edx,[rdx+rcx*4]           ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 14 8a
0032h mov ecx,[rbx+rcx*4]           ; MOV(Mov_r32_rm32) [ECX,mem(32u,RBX:br,DS:sr)]        encoding(3 bytes) = 8b 0c 8b
0035h call 7FFC872C2410h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFFB30h:jmp64]        encoding(5 bytes) = e8 f6 fa ff ff
003ah mov [r15],eax                 ; MOV(Mov_rm32_r32) [mem(32u,R15:br,DS:sr),EAX]        encoding(3 bytes) = 41 89 07
003dh inc r14d                      ; INC(Inc_rm32) [R14D]                                 encoding(3 bytes) = 41 ff c6
0040h cmp r14d,ebp                  ; CMP(Cmp_r32_rm32) [R14D,EBP]                         encoding(3 bytes) = 44 3b f5
0043h jl short 001fh                ; JL(Jl_rel8_64) [1Fh:jmp64]                           encoding(2 bytes) = 7c da
0045h mov [rdi],rbx                 ; MOV(Mov_rm64_r64) [mem(64u,RDI:br,DS:sr),RBX]        encoding(3 bytes) = 48 89 1f
0048h mov [rdi+8],ebp               ; MOV(Mov_rm32_r32) [mem(32u,RDI:br,DS:sr),EBP]        encoding(3 bytes) = 89 6f 08
004bh mov rax,rdi                   ; MOV(Mov_r64_rm64) [RAX,RDI]                          encoding(3 bytes) = 48 8b c7
004eh add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
0052h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0053h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0054h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0055h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0056h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0058h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
005ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
005bh call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A24D0h:jmp64]                encoding(5 bytes) = e8 70 24 5a 5f
0060h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> ipowBytes => new byte[97]{0x41,0x57,0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x48,0x8B,0xF9,0x49,0x8B,0xF0,0x48,0x8B,0x1A,0x8B,0x6A,0x08,0x45,0x33,0xF6,0x85,0xED,0x7E,0x26,0x49,0x63,0xCE,0x4C,0x8D,0x3C,0x8B,0x44,0x3B,0x76,0x08,0x73,0x2F,0x48,0x8B,0x16,0x8B,0x14,0x8A,0x8B,0x0C,0x8B,0xE8,0xF6,0xFA,0xFF,0xFF,0x41,0x89,0x07,0x41,0xFF,0xC6,0x44,0x3B,0xF5,0x7C,0xDA,0x48,0x89,0x1F,0x89,0x6F,0x08,0x48,0x8B,0xC7,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0x41,0x5F,0xC3,0xE8,0x70,0x24,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<uint> ipow(Span<uint> b, ReadOnlySpan<uint> exp)
; location: [7FFC872C2970h, 7FFC872C29D0h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0005h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0006h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0007h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0008h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
000ch mov rdi,rcx                   ; MOV(Mov_r64_rm64) [RDI,RCX]                          encoding(3 bytes) = 48 8b f9
000fh mov rsi,r8                    ; MOV(Mov_r64_rm64) [RSI,R8]                           encoding(3 bytes) = 49 8b f0
0012h mov rbx,[rdx]                 ; MOV(Mov_r64_rm64) [RBX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 1a
0015h mov ebp,[rdx+8]               ; MOV(Mov_r32_rm32) [EBP,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 6a 08
0018h xor r14d,r14d                 ; XOR(Xor_r32_rm32) [R14D,R14D]                        encoding(3 bytes) = 45 33 f6
001bh test ebp,ebp                  ; TEST(Test_rm32_r32) [EBP,EBP]                        encoding(2 bytes) = 85 ed
001dh jle short 0045h               ; JLE(Jle_rel8_64) [45h:jmp64]                         encoding(2 bytes) = 7e 26
001fh movsxd rcx,r14d               ; MOVSXD(Movsxd_r64_rm32) [RCX,R14D]                   encoding(3 bytes) = 49 63 ce
0022h lea r15,[rbx+rcx*4]           ; LEA(Lea_r64_m) [R15,mem(Unknown,RBX:br,DS:sr)]       encoding(4 bytes) = 4c 8d 3c 8b
0026h cmp r14d,[rsi+8]              ; CMP(Cmp_r32_rm32) [R14D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 3b 76 08
002ah jae short 005bh               ; JAE(Jae_rel8_64) [5Bh:jmp64]                         encoding(2 bytes) = 73 2f
002ch mov rdx,[rsi]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RSI:br,DS:sr)]        encoding(3 bytes) = 48 8b 16
002fh mov edx,[rdx+rcx*4]           ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 14 8a
0032h mov ecx,[rbx+rcx*4]           ; MOV(Mov_r32_rm32) [ECX,mem(32u,RBX:br,DS:sr)]        encoding(3 bytes) = 8b 0c 8b
0035h call 7FFC872C2450h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFFAE0h:jmp64]        encoding(5 bytes) = e8 a6 fa ff ff
003ah mov [r15],eax                 ; MOV(Mov_rm32_r32) [mem(32u,R15:br,DS:sr),EAX]        encoding(3 bytes) = 41 89 07
003dh inc r14d                      ; INC(Inc_rm32) [R14D]                                 encoding(3 bytes) = 41 ff c6
0040h cmp r14d,ebp                  ; CMP(Cmp_r32_rm32) [R14D,EBP]                         encoding(3 bytes) = 44 3b f5
0043h jl short 001fh                ; JL(Jl_rel8_64) [1Fh:jmp64]                           encoding(2 bytes) = 7c da
0045h mov [rdi],rbx                 ; MOV(Mov_rm64_r64) [mem(64u,RDI:br,DS:sr),RBX]        encoding(3 bytes) = 48 89 1f
0048h mov [rdi+8],ebp               ; MOV(Mov_rm32_r32) [mem(32u,RDI:br,DS:sr),EBP]        encoding(3 bytes) = 89 6f 08
004bh mov rax,rdi                   ; MOV(Mov_r64_rm64) [RAX,RDI]                          encoding(3 bytes) = 48 8b c7
004eh add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
0052h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0053h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0054h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0055h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0056h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0058h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
005ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
005bh call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A2440h:jmp64]                encoding(5 bytes) = e8 e0 23 5a 5f
0060h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> ipowBytes => new byte[97]{0x41,0x57,0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x48,0x8B,0xF9,0x49,0x8B,0xF0,0x48,0x8B,0x1A,0x8B,0x6A,0x08,0x45,0x33,0xF6,0x85,0xED,0x7E,0x26,0x49,0x63,0xCE,0x4C,0x8D,0x3C,0x8B,0x44,0x3B,0x76,0x08,0x73,0x2F,0x48,0x8B,0x16,0x8B,0x14,0x8A,0x8B,0x0C,0x8B,0xE8,0xA6,0xFA,0xFF,0xFF,0x41,0x89,0x07,0x41,0xFF,0xC6,0x44,0x3B,0xF5,0x7C,0xDA,0x48,0x89,0x1F,0x89,0x6F,0x08,0x48,0x8B,0xC7,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0x41,0x5F,0xC3,0xE8,0xE0,0x23,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<long> ipow(Span<long> b, ReadOnlySpan<uint> exp)
; location: [7FFC872C2A00h, 7FFC872C2A61h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0005h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0006h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0007h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0008h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
000ch mov rdi,rcx                   ; MOV(Mov_r64_rm64) [RDI,RCX]                          encoding(3 bytes) = 48 8b f9
000fh mov rsi,r8                    ; MOV(Mov_r64_rm64) [RSI,R8]                           encoding(3 bytes) = 49 8b f0
0012h mov rbx,[rdx]                 ; MOV(Mov_r64_rm64) [RBX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 1a
0015h mov ebp,[rdx+8]               ; MOV(Mov_r32_rm32) [EBP,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 6a 08
0018h xor r14d,r14d                 ; XOR(Xor_r32_rm32) [R14D,R14D]                        encoding(3 bytes) = 45 33 f6
001bh test ebp,ebp                  ; TEST(Test_rm32_r32) [EBP,EBP]                        encoding(2 bytes) = 85 ed
001dh jle short 0046h               ; JLE(Jle_rel8_64) [46h:jmp64]                         encoding(2 bytes) = 7e 27
001fh movsxd rcx,r14d               ; MOVSXD(Movsxd_r64_rm32) [RCX,R14D]                   encoding(3 bytes) = 49 63 ce
0022h lea r15,[rbx+rcx*8]           ; LEA(Lea_r64_m) [R15,mem(Unknown,RBX:br,DS:sr)]       encoding(4 bytes) = 4c 8d 3c cb
0026h cmp r14d,[rsi+8]              ; CMP(Cmp_r32_rm32) [R14D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 3b 76 08
002ah jae short 005ch               ; JAE(Jae_rel8_64) [5Ch:jmp64]                         encoding(2 bytes) = 73 30
002ch mov rdx,[rsi]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RSI:br,DS:sr)]        encoding(3 bytes) = 48 8b 16
002fh mov edx,[rdx+rcx*4]           ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 14 8a
0032h mov rcx,[rbx+rcx*8]           ; MOV(Mov_r64_rm64) [RCX,mem(64u,RBX:br,DS:sr)]        encoding(4 bytes) = 48 8b 0c cb
0036h call 7FFC872C2490h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFFA90h:jmp64]        encoding(5 bytes) = e8 55 fa ff ff
003bh mov [r15],rax                 ; MOV(Mov_rm64_r64) [mem(64u,R15:br,DS:sr),RAX]        encoding(3 bytes) = 49 89 07
003eh inc r14d                      ; INC(Inc_rm32) [R14D]                                 encoding(3 bytes) = 41 ff c6
0041h cmp r14d,ebp                  ; CMP(Cmp_r32_rm32) [R14D,EBP]                         encoding(3 bytes) = 44 3b f5
0044h jl short 001fh                ; JL(Jl_rel8_64) [1Fh:jmp64]                           encoding(2 bytes) = 7c d9
0046h mov [rdi],rbx                 ; MOV(Mov_rm64_r64) [mem(64u,RDI:br,DS:sr),RBX]        encoding(3 bytes) = 48 89 1f
0049h mov [rdi+8],ebp               ; MOV(Mov_rm32_r32) [mem(32u,RDI:br,DS:sr),EBP]        encoding(3 bytes) = 89 6f 08
004ch mov rax,rdi                   ; MOV(Mov_r64_rm64) [RAX,RDI]                          encoding(3 bytes) = 48 8b c7
004fh add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
0053h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0054h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0055h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0056h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0057h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0059h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
005bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
005ch call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A23B0h:jmp64]                encoding(5 bytes) = e8 4f 23 5a 5f
0061h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> ipowBytes => new byte[98]{0x41,0x57,0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x48,0x8B,0xF9,0x49,0x8B,0xF0,0x48,0x8B,0x1A,0x8B,0x6A,0x08,0x45,0x33,0xF6,0x85,0xED,0x7E,0x27,0x49,0x63,0xCE,0x4C,0x8D,0x3C,0xCB,0x44,0x3B,0x76,0x08,0x73,0x30,0x48,0x8B,0x16,0x8B,0x14,0x8A,0x48,0x8B,0x0C,0xCB,0xE8,0x55,0xFA,0xFF,0xFF,0x49,0x89,0x07,0x41,0xFF,0xC6,0x44,0x3B,0xF5,0x7C,0xD9,0x48,0x89,0x1F,0x89,0x6F,0x08,0x48,0x8B,0xC7,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0x41,0x5F,0xC3,0xE8,0x4F,0x23,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<ulong> ipow(Span<ulong> b, ReadOnlySpan<uint> exp)
; location: [7FFC872C2A90h, 7FFC872C2AF1h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0005h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0006h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0007h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0008h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
000ch mov rdi,rcx                   ; MOV(Mov_r64_rm64) [RDI,RCX]                          encoding(3 bytes) = 48 8b f9
000fh mov rsi,r8                    ; MOV(Mov_r64_rm64) [RSI,R8]                           encoding(3 bytes) = 49 8b f0
0012h mov rbx,[rdx]                 ; MOV(Mov_r64_rm64) [RBX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 1a
0015h mov ebp,[rdx+8]               ; MOV(Mov_r32_rm32) [EBP,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 6a 08
0018h xor r14d,r14d                 ; XOR(Xor_r32_rm32) [R14D,R14D]                        encoding(3 bytes) = 45 33 f6
001bh test ebp,ebp                  ; TEST(Test_rm32_r32) [EBP,EBP]                        encoding(2 bytes) = 85 ed
001dh jle short 0046h               ; JLE(Jle_rel8_64) [46h:jmp64]                         encoding(2 bytes) = 7e 27
001fh movsxd rcx,r14d               ; MOVSXD(Movsxd_r64_rm32) [RCX,R14D]                   encoding(3 bytes) = 49 63 ce
0022h lea r15,[rbx+rcx*8]           ; LEA(Lea_r64_m) [R15,mem(Unknown,RBX:br,DS:sr)]       encoding(4 bytes) = 4c 8d 3c cb
0026h cmp r14d,[rsi+8]              ; CMP(Cmp_r32_rm32) [R14D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 3b 76 08
002ah jae short 005ch               ; JAE(Jae_rel8_64) [5Ch:jmp64]                         encoding(2 bytes) = 73 30
002ch mov rdx,[rsi]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RSI:br,DS:sr)]        encoding(3 bytes) = 48 8b 16
002fh mov edx,[rdx+rcx*4]           ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 14 8a
0032h mov rcx,[rbx+rcx*8]           ; MOV(Mov_r64_rm64) [RCX,mem(64u,RBX:br,DS:sr)]        encoding(4 bytes) = 48 8b 0c cb
0036h call 7FFC872C24D0h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFFA40h:jmp64]        encoding(5 bytes) = e8 05 fa ff ff
003bh mov [r15],rax                 ; MOV(Mov_rm64_r64) [mem(64u,R15:br,DS:sr),RAX]        encoding(3 bytes) = 49 89 07
003eh inc r14d                      ; INC(Inc_rm32) [R14D]                                 encoding(3 bytes) = 41 ff c6
0041h cmp r14d,ebp                  ; CMP(Cmp_r32_rm32) [R14D,EBP]                         encoding(3 bytes) = 44 3b f5
0044h jl short 001fh                ; JL(Jl_rel8_64) [1Fh:jmp64]                           encoding(2 bytes) = 7c d9
0046h mov [rdi],rbx                 ; MOV(Mov_rm64_r64) [mem(64u,RDI:br,DS:sr),RBX]        encoding(3 bytes) = 48 89 1f
0049h mov [rdi+8],ebp               ; MOV(Mov_rm32_r32) [mem(32u,RDI:br,DS:sr),EBP]        encoding(3 bytes) = 89 6f 08
004ch mov rax,rdi                   ; MOV(Mov_r64_rm64) [RAX,RDI]                          encoding(3 bytes) = 48 8b c7
004fh add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
0053h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0054h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0055h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0056h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0057h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0059h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
005bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
005ch call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A2320h:jmp64]                encoding(5 bytes) = e8 bf 22 5a 5f
0061h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> ipowBytes => new byte[98]{0x41,0x57,0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x48,0x8B,0xF9,0x49,0x8B,0xF0,0x48,0x8B,0x1A,0x8B,0x6A,0x08,0x45,0x33,0xF6,0x85,0xED,0x7E,0x27,0x49,0x63,0xCE,0x4C,0x8D,0x3C,0xCB,0x44,0x3B,0x76,0x08,0x73,0x30,0x48,0x8B,0x16,0x8B,0x14,0x8A,0x48,0x8B,0x0C,0xCB,0xE8,0x05,0xFA,0xFF,0xFF,0x49,0x89,0x07,0x41,0xFF,0xC6,0x44,0x3B,0xF5,0x7C,0xD9,0x48,0x89,0x1F,0x89,0x6F,0x08,0x48,0x8B,0xC7,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0x41,0x5F,0xC3,0xE8,0xBF,0x22,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<sbyte> ipow(Span<sbyte> b, uint exp)
; location: [7FFC872C2B20h, 7FFC872C2B72h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0005h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0006h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0007h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0008h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
000ch mov rdi,rcx                   ; MOV(Mov_r64_rm64) [RDI,RCX]                          encoding(3 bytes) = 48 8b f9
000fh mov esi,r8d                   ; MOV(Mov_r32_rm32) [ESI,R8D]                          encoding(3 bytes) = 41 8b f0
0012h mov rbx,[rdx]                 ; MOV(Mov_r64_rm64) [RBX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 1a
0015h mov ebp,[rdx+8]               ; MOV(Mov_r32_rm32) [EBP,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 6a 08
0018h xor r14d,r14d                 ; XOR(Xor_r32_rm32) [R14D,R14D]                        encoding(3 bytes) = 45 33 f6
001bh test ebp,ebp                  ; TEST(Test_rm32_r32) [EBP,EBP]                        encoding(2 bytes) = 85 ed
001dh jle short 003dh               ; JLE(Jle_rel8_64) [3Dh:jmp64]                         encoding(2 bytes) = 7e 1e
001fh movsxd rcx,r14d               ; MOVSXD(Movsxd_r64_rm32) [RCX,R14D]                   encoding(3 bytes) = 49 63 ce
0022h lea r15,[rbx+rcx]             ; LEA(Lea_r64_m) [R15,mem(Unknown,RBX:br,DS:sr)]       encoding(4 bytes) = 4c 8d 3c 0b
0026h movsx rcx,byte ptr [rbx+rcx]  ; MOVSX(Movsx_r64_rm8) [RCX,mem(8i,RBX:br,DS:sr)]      encoding(5 bytes) = 48 0f be 0c 0b
002bh mov edx,esi                   ; MOV(Mov_r32_rm32) [EDX,ESI]                          encoding(2 bytes) = 8b d6
002dh call 7FFC872C22D0h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFF7B0h:jmp64]        encoding(5 bytes) = e8 7e f7 ff ff
0032h mov [r15],al                  ; MOV(Mov_rm8_r8) [mem(8u,R15:br,DS:sr),AL]            encoding(3 bytes) = 41 88 07
0035h inc r14d                      ; INC(Inc_rm32) [R14D]                                 encoding(3 bytes) = 41 ff c6
0038h cmp r14d,ebp                  ; CMP(Cmp_r32_rm32) [R14D,EBP]                         encoding(3 bytes) = 44 3b f5
003bh jl short 001fh                ; JL(Jl_rel8_64) [1Fh:jmp64]                           encoding(2 bytes) = 7c e2
003dh mov [rdi],rbx                 ; MOV(Mov_rm64_r64) [mem(64u,RDI:br,DS:sr),RBX]        encoding(3 bytes) = 48 89 1f
0040h mov [rdi+8],ebp               ; MOV(Mov_rm32_r32) [mem(32u,RDI:br,DS:sr),EBP]        encoding(3 bytes) = 89 6f 08
0043h mov rax,rdi                   ; MOV(Mov_r64_rm64) [RAX,RDI]                          encoding(3 bytes) = 48 8b c7
0046h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
004ah pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
004bh pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
004ch pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
004dh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
004eh pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0050h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
0052h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> ipowBytes => new byte[83]{0x41,0x57,0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x48,0x8B,0xF9,0x41,0x8B,0xF0,0x48,0x8B,0x1A,0x8B,0x6A,0x08,0x45,0x33,0xF6,0x85,0xED,0x7E,0x1E,0x49,0x63,0xCE,0x4C,0x8D,0x3C,0x0B,0x48,0x0F,0xBE,0x0C,0x0B,0x8B,0xD6,0xE8,0x7E,0xF7,0xFF,0xFF,0x41,0x88,0x07,0x41,0xFF,0xC6,0x44,0x3B,0xF5,0x7C,0xE2,0x48,0x89,0x1F,0x89,0x6F,0x08,0x48,0x8B,0xC7,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0x41,0x5F,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<byte> ipow(Span<byte> b, uint exp)
; location: [7FFC872C2BA0h, 7FFC872C2BF1h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0005h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0006h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0007h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0008h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
000ch mov rdi,rcx                   ; MOV(Mov_r64_rm64) [RDI,RCX]                          encoding(3 bytes) = 48 8b f9
000fh mov esi,r8d                   ; MOV(Mov_r32_rm32) [ESI,R8D]                          encoding(3 bytes) = 41 8b f0
0012h mov rbx,[rdx]                 ; MOV(Mov_r64_rm64) [RBX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 1a
0015h mov ebp,[rdx+8]               ; MOV(Mov_r32_rm32) [EBP,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 6a 08
0018h xor r14d,r14d                 ; XOR(Xor_r32_rm32) [R14D,R14D]                        encoding(3 bytes) = 45 33 f6
001bh test ebp,ebp                  ; TEST(Test_rm32_r32) [EBP,EBP]                        encoding(2 bytes) = 85 ed
001dh jle short 003ch               ; JLE(Jle_rel8_64) [3Ch:jmp64]                         encoding(2 bytes) = 7e 1d
001fh movsxd rcx,r14d               ; MOVSXD(Movsxd_r64_rm32) [RCX,R14D]                   encoding(3 bytes) = 49 63 ce
0022h lea r15,[rbx+rcx]             ; LEA(Lea_r64_m) [R15,mem(Unknown,RBX:br,DS:sr)]       encoding(4 bytes) = 4c 8d 3c 0b
0026h movzx ecx,byte ptr [rbx+rcx]  ; MOVZX(Movzx_r32_rm8) [ECX,mem(8u,RBX:br,DS:sr)]      encoding(4 bytes) = 0f b6 0c 0b
002ah mov edx,esi                   ; MOV(Mov_r32_rm32) [EDX,ESI]                          encoding(2 bytes) = 8b d6
002ch call 7FFC872C2320h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFF780h:jmp64]        encoding(5 bytes) = e8 4f f7 ff ff
0031h mov [r15],al                  ; MOV(Mov_rm8_r8) [mem(8u,R15:br,DS:sr),AL]            encoding(3 bytes) = 41 88 07
0034h inc r14d                      ; INC(Inc_rm32) [R14D]                                 encoding(3 bytes) = 41 ff c6
0037h cmp r14d,ebp                  ; CMP(Cmp_r32_rm32) [R14D,EBP]                         encoding(3 bytes) = 44 3b f5
003ah jl short 001fh                ; JL(Jl_rel8_64) [1Fh:jmp64]                           encoding(2 bytes) = 7c e3
003ch mov [rdi],rbx                 ; MOV(Mov_rm64_r64) [mem(64u,RDI:br,DS:sr),RBX]        encoding(3 bytes) = 48 89 1f
003fh mov [rdi+8],ebp               ; MOV(Mov_rm32_r32) [mem(32u,RDI:br,DS:sr),EBP]        encoding(3 bytes) = 89 6f 08
0042h mov rax,rdi                   ; MOV(Mov_r64_rm64) [RAX,RDI]                          encoding(3 bytes) = 48 8b c7
0045h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
0049h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
004ah pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
004bh pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
004ch pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
004dh pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
004fh pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
0051h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> ipowBytes => new byte[82]{0x41,0x57,0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x48,0x8B,0xF9,0x41,0x8B,0xF0,0x48,0x8B,0x1A,0x8B,0x6A,0x08,0x45,0x33,0xF6,0x85,0xED,0x7E,0x1D,0x49,0x63,0xCE,0x4C,0x8D,0x3C,0x0B,0x0F,0xB6,0x0C,0x0B,0x8B,0xD6,0xE8,0x4F,0xF7,0xFF,0xFF,0x41,0x88,0x07,0x41,0xFF,0xC6,0x44,0x3B,0xF5,0x7C,0xE3,0x48,0x89,0x1F,0x89,0x6F,0x08,0x48,0x8B,0xC7,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0x41,0x5F,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<short> ipow(Span<short> b, uint exp)
; location: [7FFC872C2C20h, 7FFC872C2C73h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0005h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0006h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0007h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0008h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
000ch mov rdi,rcx                   ; MOV(Mov_r64_rm64) [RDI,RCX]                          encoding(3 bytes) = 48 8b f9
000fh mov esi,r8d                   ; MOV(Mov_r32_rm32) [ESI,R8D]                          encoding(3 bytes) = 41 8b f0
0012h mov rbx,[rdx]                 ; MOV(Mov_r64_rm64) [RBX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 1a
0015h mov ebp,[rdx+8]               ; MOV(Mov_r32_rm32) [EBP,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 6a 08
0018h xor r14d,r14d                 ; XOR(Xor_r32_rm32) [R14D,R14D]                        encoding(3 bytes) = 45 33 f6
001bh test ebp,ebp                  ; TEST(Test_rm32_r32) [EBP,EBP]                        encoding(2 bytes) = 85 ed
001dh jle short 003eh               ; JLE(Jle_rel8_64) [3Eh:jmp64]                         encoding(2 bytes) = 7e 1f
001fh movsxd rcx,r14d               ; MOVSXD(Movsxd_r64_rm32) [RCX,R14D]                   encoding(3 bytes) = 49 63 ce
0022h lea r15,[rbx+rcx*2]           ; LEA(Lea_r64_m) [R15,mem(Unknown,RBX:br,DS:sr)]       encoding(4 bytes) = 4c 8d 3c 4b
0026h movsx rcx,word ptr [rbx+rcx*2]; MOVSX(Movsx_r64_rm16) [RCX,mem(16i,RBX:br,DS:sr)]    encoding(5 bytes) = 48 0f bf 0c 4b
002bh mov edx,esi                   ; MOV(Mov_r32_rm32) [EDX,ESI]                          encoding(2 bytes) = 8b d6
002dh call 7FFC872C2370h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFF750h:jmp64]        encoding(5 bytes) = e8 1e f7 ff ff
0032h mov [r15],ax                  ; MOV(Mov_rm16_r16) [mem(16u,R15:br,DS:sr),AX]         encoding(4 bytes) = 66 41 89 07
0036h inc r14d                      ; INC(Inc_rm32) [R14D]                                 encoding(3 bytes) = 41 ff c6
0039h cmp r14d,ebp                  ; CMP(Cmp_r32_rm32) [R14D,EBP]                         encoding(3 bytes) = 44 3b f5
003ch jl short 001fh                ; JL(Jl_rel8_64) [1Fh:jmp64]                           encoding(2 bytes) = 7c e1
003eh mov [rdi],rbx                 ; MOV(Mov_rm64_r64) [mem(64u,RDI:br,DS:sr),RBX]        encoding(3 bytes) = 48 89 1f
0041h mov [rdi+8],ebp               ; MOV(Mov_rm32_r32) [mem(32u,RDI:br,DS:sr),EBP]        encoding(3 bytes) = 89 6f 08
0044h mov rax,rdi                   ; MOV(Mov_r64_rm64) [RAX,RDI]                          encoding(3 bytes) = 48 8b c7
0047h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
004bh pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
004ch pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
004dh pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
004eh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
004fh pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0051h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
0053h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> ipowBytes => new byte[84]{0x41,0x57,0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x48,0x8B,0xF9,0x41,0x8B,0xF0,0x48,0x8B,0x1A,0x8B,0x6A,0x08,0x45,0x33,0xF6,0x85,0xED,0x7E,0x1F,0x49,0x63,0xCE,0x4C,0x8D,0x3C,0x4B,0x48,0x0F,0xBF,0x0C,0x4B,0x8B,0xD6,0xE8,0x1E,0xF7,0xFF,0xFF,0x66,0x41,0x89,0x07,0x41,0xFF,0xC6,0x44,0x3B,0xF5,0x7C,0xE1,0x48,0x89,0x1F,0x89,0x6F,0x08,0x48,0x8B,0xC7,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0x41,0x5F,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<ushort> ipow(Span<ushort> b, uint exp)
; location: [7FFC872C2CA0h, 7FFC872C2CF2h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0005h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0006h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0007h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0008h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
000ch mov rdi,rcx                   ; MOV(Mov_r64_rm64) [RDI,RCX]                          encoding(3 bytes) = 48 8b f9
000fh mov esi,r8d                   ; MOV(Mov_r32_rm32) [ESI,R8D]                          encoding(3 bytes) = 41 8b f0
0012h mov rbx,[rdx]                 ; MOV(Mov_r64_rm64) [RBX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 1a
0015h mov ebp,[rdx+8]               ; MOV(Mov_r32_rm32) [EBP,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 6a 08
0018h xor r14d,r14d                 ; XOR(Xor_r32_rm32) [R14D,R14D]                        encoding(3 bytes) = 45 33 f6
001bh test ebp,ebp                  ; TEST(Test_rm32_r32) [EBP,EBP]                        encoding(2 bytes) = 85 ed
001dh jle short 003dh               ; JLE(Jle_rel8_64) [3Dh:jmp64]                         encoding(2 bytes) = 7e 1e
001fh movsxd rcx,r14d               ; MOVSXD(Movsxd_r64_rm32) [RCX,R14D]                   encoding(3 bytes) = 49 63 ce
0022h lea r15,[rbx+rcx*2]           ; LEA(Lea_r64_m) [R15,mem(Unknown,RBX:br,DS:sr)]       encoding(4 bytes) = 4c 8d 3c 4b
0026h movzx ecx,word ptr [rbx+rcx*2]; MOVZX(Movzx_r32_rm16) [ECX,mem(16u,RBX:br,DS:sr)]    encoding(4 bytes) = 0f b7 0c 4b
002ah mov edx,esi                   ; MOV(Mov_r32_rm32) [EDX,ESI]                          encoding(2 bytes) = 8b d6
002ch call 7FFC872C23C0h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFF720h:jmp64]        encoding(5 bytes) = e8 ef f6 ff ff
0031h mov [r15],ax                  ; MOV(Mov_rm16_r16) [mem(16u,R15:br,DS:sr),AX]         encoding(4 bytes) = 66 41 89 07
0035h inc r14d                      ; INC(Inc_rm32) [R14D]                                 encoding(3 bytes) = 41 ff c6
0038h cmp r14d,ebp                  ; CMP(Cmp_r32_rm32) [R14D,EBP]                         encoding(3 bytes) = 44 3b f5
003bh jl short 001fh                ; JL(Jl_rel8_64) [1Fh:jmp64]                           encoding(2 bytes) = 7c e2
003dh mov [rdi],rbx                 ; MOV(Mov_rm64_r64) [mem(64u,RDI:br,DS:sr),RBX]        encoding(3 bytes) = 48 89 1f
0040h mov [rdi+8],ebp               ; MOV(Mov_rm32_r32) [mem(32u,RDI:br,DS:sr),EBP]        encoding(3 bytes) = 89 6f 08
0043h mov rax,rdi                   ; MOV(Mov_r64_rm64) [RAX,RDI]                          encoding(3 bytes) = 48 8b c7
0046h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
004ah pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
004bh pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
004ch pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
004dh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
004eh pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0050h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
0052h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> ipowBytes => new byte[83]{0x41,0x57,0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x48,0x8B,0xF9,0x41,0x8B,0xF0,0x48,0x8B,0x1A,0x8B,0x6A,0x08,0x45,0x33,0xF6,0x85,0xED,0x7E,0x1E,0x49,0x63,0xCE,0x4C,0x8D,0x3C,0x4B,0x0F,0xB7,0x0C,0x4B,0x8B,0xD6,0xE8,0xEF,0xF6,0xFF,0xFF,0x66,0x41,0x89,0x07,0x41,0xFF,0xC6,0x44,0x3B,0xF5,0x7C,0xE2,0x48,0x89,0x1F,0x89,0x6F,0x08,0x48,0x8B,0xC7,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0x41,0x5F,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<int> ipow(Span<int> b, uint exp)
; location: [7FFC872C2D20h, 7FFC872C2D70h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0005h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0006h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0007h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0008h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
000ch mov rdi,rcx                   ; MOV(Mov_r64_rm64) [RDI,RCX]                          encoding(3 bytes) = 48 8b f9
000fh mov esi,r8d                   ; MOV(Mov_r32_rm32) [ESI,R8D]                          encoding(3 bytes) = 41 8b f0
0012h mov rbx,[rdx]                 ; MOV(Mov_r64_rm64) [RBX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 1a
0015h mov ebp,[rdx+8]               ; MOV(Mov_r32_rm32) [EBP,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 6a 08
0018h xor r14d,r14d                 ; XOR(Xor_r32_rm32) [R14D,R14D]                        encoding(3 bytes) = 45 33 f6
001bh test ebp,ebp                  ; TEST(Test_rm32_r32) [EBP,EBP]                        encoding(2 bytes) = 85 ed
001dh jle short 003bh               ; JLE(Jle_rel8_64) [3Bh:jmp64]                         encoding(2 bytes) = 7e 1c
001fh movsxd rcx,r14d               ; MOVSXD(Movsxd_r64_rm32) [RCX,R14D]                   encoding(3 bytes) = 49 63 ce
0022h lea r15,[rbx+rcx*4]           ; LEA(Lea_r64_m) [R15,mem(Unknown,RBX:br,DS:sr)]       encoding(4 bytes) = 4c 8d 3c 8b
0026h mov ecx,[rbx+rcx*4]           ; MOV(Mov_r32_rm32) [ECX,mem(32u,RBX:br,DS:sr)]        encoding(3 bytes) = 8b 0c 8b
0029h mov edx,esi                   ; MOV(Mov_r32_rm32) [EDX,ESI]                          encoding(2 bytes) = 8b d6
002bh call 7FFC872C2410h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFF6F0h:jmp64]        encoding(5 bytes) = e8 c0 f6 ff ff
0030h mov [r15],eax                 ; MOV(Mov_rm32_r32) [mem(32u,R15:br,DS:sr),EAX]        encoding(3 bytes) = 41 89 07
0033h inc r14d                      ; INC(Inc_rm32) [R14D]                                 encoding(3 bytes) = 41 ff c6
0036h cmp r14d,ebp                  ; CMP(Cmp_r32_rm32) [R14D,EBP]                         encoding(3 bytes) = 44 3b f5
0039h jl short 001fh                ; JL(Jl_rel8_64) [1Fh:jmp64]                           encoding(2 bytes) = 7c e4
003bh mov [rdi],rbx                 ; MOV(Mov_rm64_r64) [mem(64u,RDI:br,DS:sr),RBX]        encoding(3 bytes) = 48 89 1f
003eh mov [rdi+8],ebp               ; MOV(Mov_rm32_r32) [mem(32u,RDI:br,DS:sr),EBP]        encoding(3 bytes) = 89 6f 08
0041h mov rax,rdi                   ; MOV(Mov_r64_rm64) [RAX,RDI]                          encoding(3 bytes) = 48 8b c7
0044h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
0048h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0049h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
004ah pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
004bh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
004ch pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
004eh pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
0050h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> ipowBytes => new byte[81]{0x41,0x57,0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x48,0x8B,0xF9,0x41,0x8B,0xF0,0x48,0x8B,0x1A,0x8B,0x6A,0x08,0x45,0x33,0xF6,0x85,0xED,0x7E,0x1C,0x49,0x63,0xCE,0x4C,0x8D,0x3C,0x8B,0x8B,0x0C,0x8B,0x8B,0xD6,0xE8,0xC0,0xF6,0xFF,0xFF,0x41,0x89,0x07,0x41,0xFF,0xC6,0x44,0x3B,0xF5,0x7C,0xE4,0x48,0x89,0x1F,0x89,0x6F,0x08,0x48,0x8B,0xC7,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0x41,0x5F,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<uint> ipow(Span<uint> b, uint exp)
; location: [7FFC872C2DA0h, 7FFC872C2DF0h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0005h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0006h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0007h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0008h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
000ch mov rdi,rcx                   ; MOV(Mov_r64_rm64) [RDI,RCX]                          encoding(3 bytes) = 48 8b f9
000fh mov esi,r8d                   ; MOV(Mov_r32_rm32) [ESI,R8D]                          encoding(3 bytes) = 41 8b f0
0012h mov rbx,[rdx]                 ; MOV(Mov_r64_rm64) [RBX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 1a
0015h mov ebp,[rdx+8]               ; MOV(Mov_r32_rm32) [EBP,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 6a 08
0018h xor r14d,r14d                 ; XOR(Xor_r32_rm32) [R14D,R14D]                        encoding(3 bytes) = 45 33 f6
001bh test ebp,ebp                  ; TEST(Test_rm32_r32) [EBP,EBP]                        encoding(2 bytes) = 85 ed
001dh jle short 003bh               ; JLE(Jle_rel8_64) [3Bh:jmp64]                         encoding(2 bytes) = 7e 1c
001fh movsxd rcx,r14d               ; MOVSXD(Movsxd_r64_rm32) [RCX,R14D]                   encoding(3 bytes) = 49 63 ce
0022h lea r15,[rbx+rcx*4]           ; LEA(Lea_r64_m) [R15,mem(Unknown,RBX:br,DS:sr)]       encoding(4 bytes) = 4c 8d 3c 8b
0026h mov ecx,[rbx+rcx*4]           ; MOV(Mov_r32_rm32) [ECX,mem(32u,RBX:br,DS:sr)]        encoding(3 bytes) = 8b 0c 8b
0029h mov edx,esi                   ; MOV(Mov_r32_rm32) [EDX,ESI]                          encoding(2 bytes) = 8b d6
002bh call 7FFC872C2450h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFF6B0h:jmp64]        encoding(5 bytes) = e8 80 f6 ff ff
0030h mov [r15],eax                 ; MOV(Mov_rm32_r32) [mem(32u,R15:br,DS:sr),EAX]        encoding(3 bytes) = 41 89 07
0033h inc r14d                      ; INC(Inc_rm32) [R14D]                                 encoding(3 bytes) = 41 ff c6
0036h cmp r14d,ebp                  ; CMP(Cmp_r32_rm32) [R14D,EBP]                         encoding(3 bytes) = 44 3b f5
0039h jl short 001fh                ; JL(Jl_rel8_64) [1Fh:jmp64]                           encoding(2 bytes) = 7c e4
003bh mov [rdi],rbx                 ; MOV(Mov_rm64_r64) [mem(64u,RDI:br,DS:sr),RBX]        encoding(3 bytes) = 48 89 1f
003eh mov [rdi+8],ebp               ; MOV(Mov_rm32_r32) [mem(32u,RDI:br,DS:sr),EBP]        encoding(3 bytes) = 89 6f 08
0041h mov rax,rdi                   ; MOV(Mov_r64_rm64) [RAX,RDI]                          encoding(3 bytes) = 48 8b c7
0044h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
0048h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0049h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
004ah pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
004bh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
004ch pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
004eh pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
0050h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> ipowBytes => new byte[81]{0x41,0x57,0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x48,0x8B,0xF9,0x41,0x8B,0xF0,0x48,0x8B,0x1A,0x8B,0x6A,0x08,0x45,0x33,0xF6,0x85,0xED,0x7E,0x1C,0x49,0x63,0xCE,0x4C,0x8D,0x3C,0x8B,0x8B,0x0C,0x8B,0x8B,0xD6,0xE8,0x80,0xF6,0xFF,0xFF,0x41,0x89,0x07,0x41,0xFF,0xC6,0x44,0x3B,0xF5,0x7C,0xE4,0x48,0x89,0x1F,0x89,0x6F,0x08,0x48,0x8B,0xC7,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0x41,0x5F,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<long> ipow(Span<long> b, uint exp)
; location: [7FFC872C2E20h, 7FFC872C2E71h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0005h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0006h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0007h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0008h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
000ch mov rdi,rcx                   ; MOV(Mov_r64_rm64) [RDI,RCX]                          encoding(3 bytes) = 48 8b f9
000fh mov esi,r8d                   ; MOV(Mov_r32_rm32) [ESI,R8D]                          encoding(3 bytes) = 41 8b f0
0012h mov rbx,[rdx]                 ; MOV(Mov_r64_rm64) [RBX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 1a
0015h mov ebp,[rdx+8]               ; MOV(Mov_r32_rm32) [EBP,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 6a 08
0018h xor r14d,r14d                 ; XOR(Xor_r32_rm32) [R14D,R14D]                        encoding(3 bytes) = 45 33 f6
001bh test ebp,ebp                  ; TEST(Test_rm32_r32) [EBP,EBP]                        encoding(2 bytes) = 85 ed
001dh jle short 003ch               ; JLE(Jle_rel8_64) [3Ch:jmp64]                         encoding(2 bytes) = 7e 1d
001fh movsxd rcx,r14d               ; MOVSXD(Movsxd_r64_rm32) [RCX,R14D]                   encoding(3 bytes) = 49 63 ce
0022h lea r15,[rbx+rcx*8]           ; LEA(Lea_r64_m) [R15,mem(Unknown,RBX:br,DS:sr)]       encoding(4 bytes) = 4c 8d 3c cb
0026h mov rcx,[rbx+rcx*8]           ; MOV(Mov_r64_rm64) [RCX,mem(64u,RBX:br,DS:sr)]        encoding(4 bytes) = 48 8b 0c cb
002ah mov edx,esi                   ; MOV(Mov_r32_rm32) [EDX,ESI]                          encoding(2 bytes) = 8b d6
002ch call 7FFC872C2490h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFF670h:jmp64]        encoding(5 bytes) = e8 3f f6 ff ff
0031h mov [r15],rax                 ; MOV(Mov_rm64_r64) [mem(64u,R15:br,DS:sr),RAX]        encoding(3 bytes) = 49 89 07
0034h inc r14d                      ; INC(Inc_rm32) [R14D]                                 encoding(3 bytes) = 41 ff c6
0037h cmp r14d,ebp                  ; CMP(Cmp_r32_rm32) [R14D,EBP]                         encoding(3 bytes) = 44 3b f5
003ah jl short 001fh                ; JL(Jl_rel8_64) [1Fh:jmp64]                           encoding(2 bytes) = 7c e3
003ch mov [rdi],rbx                 ; MOV(Mov_rm64_r64) [mem(64u,RDI:br,DS:sr),RBX]        encoding(3 bytes) = 48 89 1f
003fh mov [rdi+8],ebp               ; MOV(Mov_rm32_r32) [mem(32u,RDI:br,DS:sr),EBP]        encoding(3 bytes) = 89 6f 08
0042h mov rax,rdi                   ; MOV(Mov_r64_rm64) [RAX,RDI]                          encoding(3 bytes) = 48 8b c7
0045h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
0049h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
004ah pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
004bh pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
004ch pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
004dh pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
004fh pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
0051h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> ipowBytes => new byte[82]{0x41,0x57,0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x48,0x8B,0xF9,0x41,0x8B,0xF0,0x48,0x8B,0x1A,0x8B,0x6A,0x08,0x45,0x33,0xF6,0x85,0xED,0x7E,0x1D,0x49,0x63,0xCE,0x4C,0x8D,0x3C,0xCB,0x48,0x8B,0x0C,0xCB,0x8B,0xD6,0xE8,0x3F,0xF6,0xFF,0xFF,0x49,0x89,0x07,0x41,0xFF,0xC6,0x44,0x3B,0xF5,0x7C,0xE3,0x48,0x89,0x1F,0x89,0x6F,0x08,0x48,0x8B,0xC7,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0x41,0x5F,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<ulong> ipow(Span<ulong> b, uint exp)
; location: [7FFC872C2EA0h, 7FFC872C2EF1h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0005h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0006h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0007h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0008h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
000ch mov rdi,rcx                   ; MOV(Mov_r64_rm64) [RDI,RCX]                          encoding(3 bytes) = 48 8b f9
000fh mov esi,r8d                   ; MOV(Mov_r32_rm32) [ESI,R8D]                          encoding(3 bytes) = 41 8b f0
0012h mov rbx,[rdx]                 ; MOV(Mov_r64_rm64) [RBX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 1a
0015h mov ebp,[rdx+8]               ; MOV(Mov_r32_rm32) [EBP,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 6a 08
0018h xor r14d,r14d                 ; XOR(Xor_r32_rm32) [R14D,R14D]                        encoding(3 bytes) = 45 33 f6
001bh test ebp,ebp                  ; TEST(Test_rm32_r32) [EBP,EBP]                        encoding(2 bytes) = 85 ed
001dh jle short 003ch               ; JLE(Jle_rel8_64) [3Ch:jmp64]                         encoding(2 bytes) = 7e 1d
001fh movsxd rcx,r14d               ; MOVSXD(Movsxd_r64_rm32) [RCX,R14D]                   encoding(3 bytes) = 49 63 ce
0022h lea r15,[rbx+rcx*8]           ; LEA(Lea_r64_m) [R15,mem(Unknown,RBX:br,DS:sr)]       encoding(4 bytes) = 4c 8d 3c cb
0026h mov rcx,[rbx+rcx*8]           ; MOV(Mov_r64_rm64) [RCX,mem(64u,RBX:br,DS:sr)]        encoding(4 bytes) = 48 8b 0c cb
002ah mov edx,esi                   ; MOV(Mov_r32_rm32) [EDX,ESI]                          encoding(2 bytes) = 8b d6
002ch call 7FFC872C24D0h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFF630h:jmp64]        encoding(5 bytes) = e8 ff f5 ff ff
0031h mov [r15],rax                 ; MOV(Mov_rm64_r64) [mem(64u,R15:br,DS:sr),RAX]        encoding(3 bytes) = 49 89 07
0034h inc r14d                      ; INC(Inc_rm32) [R14D]                                 encoding(3 bytes) = 41 ff c6
0037h cmp r14d,ebp                  ; CMP(Cmp_r32_rm32) [R14D,EBP]                         encoding(3 bytes) = 44 3b f5
003ah jl short 001fh                ; JL(Jl_rel8_64) [1Fh:jmp64]                           encoding(2 bytes) = 7c e3
003ch mov [rdi],rbx                 ; MOV(Mov_rm64_r64) [mem(64u,RDI:br,DS:sr),RBX]        encoding(3 bytes) = 48 89 1f
003fh mov [rdi+8],ebp               ; MOV(Mov_rm32_r32) [mem(32u,RDI:br,DS:sr),EBP]        encoding(3 bytes) = 89 6f 08
0042h mov rax,rdi                   ; MOV(Mov_r64_rm64) [RAX,RDI]                          encoding(3 bytes) = 48 8b c7
0045h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
0049h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
004ah pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
004bh pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
004ch pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
004dh pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
004fh pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
0051h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> ipowBytes => new byte[82]{0x41,0x57,0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x48,0x8B,0xF9,0x41,0x8B,0xF0,0x48,0x8B,0x1A,0x8B,0x6A,0x08,0x45,0x33,0xF6,0x85,0xED,0x7E,0x1D,0x49,0x63,0xCE,0x4C,0x8D,0x3C,0xCB,0x48,0x8B,0x0C,0xCB,0x8B,0xD6,0xE8,0xFF,0xF5,0xFF,0xFF,0x49,0x89,0x07,0x41,0xFF,0xC6,0x44,0x3B,0xF5,0x7C,0xE3,0x48,0x89,0x1F,0x89,0x6F,0x08,0x48,0x8B,0xC7,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0x41,0x5F,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool isPow2(sbyte src)
; location: [7FFC872C2F20h, 7FFC872C2F34h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cl                  ; MOVSX(Movsx_r64_rm8) [RAX,CL]                        encoding(4 bytes) = 48 0f be c1
0009h lea edx,[rax-1]               ; LEA(Lea_r32_m) [EDX,mem(Unknown,RAX:br,DS:sr)]       encoding(3 bytes) = 8d 50 ff
000ch test eax,edx                  ; TEST(Test_rm32_r32) [EDX,EAX]                        encoding(2 bytes) = 85 c2
000eh sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
0011h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0014h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> isPow2Bytes => new byte[21]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBE,0xC1,0x8D,0x50,0xFF,0x85,0xC2,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool isPow2(byte src)
; location: [7FFC872C2F50h, 7FFC872C2F63h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0008h lea edx,[rax-1]               ; LEA(Lea_r32_m) [EDX,mem(Unknown,RAX:br,DS:sr)]       encoding(3 bytes) = 8d 50 ff
000bh test eax,edx                  ; TEST(Test_rm32_r32) [EDX,EAX]                        encoding(2 bytes) = 85 c2
000dh sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
0010h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> isPow2Bytes => new byte[20]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC1,0x8D,0x50,0xFF,0x85,0xC2,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool isPow2(short src)
; location: [7FFC872C2F80h, 7FFC872C2F94h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cx                  ; MOVSX(Movsx_r64_rm16) [RAX,CX]                       encoding(4 bytes) = 48 0f bf c1
0009h lea edx,[rax-1]               ; LEA(Lea_r32_m) [EDX,mem(Unknown,RAX:br,DS:sr)]       encoding(3 bytes) = 8d 50 ff
000ch test eax,edx                  ; TEST(Test_rm32_r32) [EDX,EAX]                        encoding(2 bytes) = 85 c2
000eh sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
0011h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0014h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> isPow2Bytes => new byte[21]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBF,0xC1,0x8D,0x50,0xFF,0x85,0xC2,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool isPow2(ushort src)
; location: [7FFC872C2FB0h, 7FFC872C2FC3h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cx                  ; MOVZX(Movzx_r32_rm16) [EAX,CX]                       encoding(3 bytes) = 0f b7 c1
0008h lea edx,[rax-1]               ; LEA(Lea_r32_m) [EDX,mem(Unknown,RAX:br,DS:sr)]       encoding(3 bytes) = 8d 50 ff
000bh test eax,edx                  ; TEST(Test_rm32_r32) [EDX,EAX]                        encoding(2 bytes) = 85 c2
000dh sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
0010h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> isPow2Bytes => new byte[20]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB7,0xC1,0x8D,0x50,0xFF,0x85,0xC2,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool isPow2(int src)
; location: [7FFC872C2FE0h, 7FFC872C2FF0h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h lea eax,[rcx-1]               ; LEA(Lea_r32_m) [EAX,mem(Unknown,RCX:br,DS:sr)]       encoding(3 bytes) = 8d 41 ff
0008h test ecx,eax                  ; TEST(Test_rm32_r32) [EAX,ECX]                        encoding(2 bytes) = 85 c8
000ah sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
000dh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0010h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> isPow2Bytes => new byte[17]{0x0F,0x1F,0x44,0x00,0x00,0x8D,0x41,0xFF,0x85,0xC8,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool isPow2(uint src)
; location: [7FFC872C3010h, 7FFC872C3020h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h lea eax,[rcx-1]               ; LEA(Lea_r32_m) [EAX,mem(Unknown,RCX:br,DS:sr)]       encoding(3 bytes) = 8d 41 ff
0008h test ecx,eax                  ; TEST(Test_rm32_r32) [EAX,ECX]                        encoding(2 bytes) = 85 c8
000ah sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
000dh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0010h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> isPow2Bytes => new byte[17]{0x0F,0x1F,0x44,0x00,0x00,0x8D,0x41,0xFF,0x85,0xC8,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool isPow2(long src)
; location: [7FFC872C3040h, 7FFC872C3052h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h lea rax,[rcx-1]               ; LEA(Lea_r64_m) [RAX,mem(Unknown,RCX:br,DS:sr)]       encoding(4 bytes) = 48 8d 41 ff
0009h test rcx,rax                  ; TEST(Test_rm64_r64) [RAX,RCX]                        encoding(3 bytes) = 48 85 c8
000ch sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
000fh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0012h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> isPow2Bytes => new byte[19]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8D,0x41,0xFF,0x48,0x85,0xC8,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool isPow2(ulong src)
; location: [7FFC872C3070h, 7FFC872C3082h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h lea rax,[rcx-1]               ; LEA(Lea_r64_m) [RAX,mem(Unknown,RCX:br,DS:sr)]       encoding(4 bytes) = 48 8d 41 ff
0009h test rcx,rax                  ; TEST(Test_rm64_r64) [RAX,RCX]                        encoding(3 bytes) = 48 85 c8
000ch sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
000fh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0012h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> isPow2Bytes => new byte[19]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8D,0x41,0xFF,0x48,0x85,0xC8,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool lt(sbyte lhs, sbyte rhs)
; location: [7FFC872C30A0h, 7FFC872C30B5h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cl                  ; MOVSX(Movsx_r64_rm8) [RAX,CL]                        encoding(4 bytes) = 48 0f be c1
0009h movsx rdx,dl                  ; MOVSX(Movsx_r64_rm8) [RDX,DL]                        encoding(4 bytes) = 48 0f be d2
000dh cmp eax,edx                   ; CMP(Cmp_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 3b c2
000fh setl al                       ; SETL(Setl_rm8) [AL]                                  encoding(3 bytes) = 0f 9c c0
0012h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0015h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> ltBytes => new byte[22]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBE,0xC1,0x48,0x0F,0xBE,0xD2,0x3B,0xC2,0x0F,0x9C,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool lt(byte lhs, byte rhs)
; location: [7FFC872C30D0h, 7FFC872C30E3h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0008h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
000bh cmp eax,edx                   ; CMP(Cmp_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 3b c2
000dh setl al                       ; SETL(Setl_rm8) [AL]                                  encoding(3 bytes) = 0f 9c c0
0010h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> ltBytes => new byte[20]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC1,0x0F,0xB6,0xD2,0x3B,0xC2,0x0F,0x9C,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool lt(short lhs, short rhs)
; location: [7FFC872C3100h, 7FFC872C3115h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cx                  ; MOVSX(Movsx_r64_rm16) [RAX,CX]                       encoding(4 bytes) = 48 0f bf c1
0009h movsx rdx,dx                  ; MOVSX(Movsx_r64_rm16) [RDX,DX]                       encoding(4 bytes) = 48 0f bf d2
000dh cmp eax,edx                   ; CMP(Cmp_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 3b c2
000fh setl al                       ; SETL(Setl_rm8) [AL]                                  encoding(3 bytes) = 0f 9c c0
0012h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0015h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> ltBytes => new byte[22]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBF,0xC1,0x48,0x0F,0xBF,0xD2,0x3B,0xC2,0x0F,0x9C,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool lt(ushort lhs, ushort rhs)
; location: [7FFC872C3130h, 7FFC872C3143h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cx                  ; MOVZX(Movzx_r32_rm16) [EAX,CX]                       encoding(3 bytes) = 0f b7 c1
0008h movzx edx,dx                  ; MOVZX(Movzx_r32_rm16) [EDX,DX]                       encoding(3 bytes) = 0f b7 d2
000bh cmp eax,edx                   ; CMP(Cmp_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 3b c2
000dh setl al                       ; SETL(Setl_rm8) [AL]                                  encoding(3 bytes) = 0f 9c c0
0010h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> ltBytes => new byte[20]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB7,0xC1,0x0F,0xB7,0xD2,0x3B,0xC2,0x0F,0x9C,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool lt(int lhs, int rhs)
; location: [7FFC872C3160h, 7FFC872C316Dh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h cmp ecx,edx                   ; CMP(Cmp_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 3b ca
0007h setl al                       ; SETL(Setl_rm8) [AL]                                  encoding(3 bytes) = 0f 9c c0
000ah movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> ltBytes => new byte[14]{0x0F,0x1F,0x44,0x00,0x00,0x3B,0xCA,0x0F,0x9C,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool lt(uint lhs, uint rhs)
; location: [7FFC872C3180h, 7FFC872C318Dh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h cmp ecx,edx                   ; CMP(Cmp_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 3b ca
0007h setb al                       ; SETB(Setb_rm8) [AL]                                  encoding(3 bytes) = 0f 92 c0
000ah movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> ltBytes => new byte[14]{0x0F,0x1F,0x44,0x00,0x00,0x3B,0xCA,0x0F,0x92,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool lt(long lhs, long rhs)
; location: [7FFC872C31A0h, 7FFC872C31AEh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h cmp rcx,rdx                   ; CMP(Cmp_r64_rm64) [RCX,RDX]                          encoding(3 bytes) = 48 3b ca
0008h setl al                       ; SETL(Setl_rm8) [AL]                                  encoding(3 bytes) = 0f 9c c0
000bh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> ltBytes => new byte[15]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x3B,0xCA,0x0F,0x9C,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool lt(ulong lhs, ulong rhs)
; location: [7FFC872C31C0h, 7FFC872C31CEh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h cmp rcx,rdx                   ; CMP(Cmp_r64_rm64) [RCX,RDX]                          encoding(3 bytes) = 48 3b ca
0008h setb al                       ; SETB(Setb_rm8) [AL]                                  encoding(3 bytes) = 0f 92 c0
000bh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> ltBytes => new byte[15]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x3B,0xCA,0x0F,0x92,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool lt(float lhs, float rhs)
; location: [7FFC872C31E0h, 7FFC872C31EFh]
0000h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0003h xchg ax,ax                    ; NOP(Nopw)                                            encoding(2 bytes) = 66 90
0005h vucomiss xmm1,xmm0            ; VUCOMISS(VEX_Vucomiss_xmm_xmmm32) [XMM1,XMM0]        encoding(VEX, 4 bytes) = c5 f8 2e c8
0009h seta al                       ; SETA(Seta_rm8) [AL]                                  encoding(3 bytes) = 0f 97 c0
000ch movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> ltBytes => new byte[16]{0xC5,0xF8,0x77,0x66,0x90,0xC5,0xF8,0x2E,0xC8,0x0F,0x97,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool lt(double lhs, double rhs)
; location: [7FFC872C3210h, 7FFC872C321Fh]
0000h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0003h xchg ax,ax                    ; NOP(Nopw)                                            encoding(2 bytes) = 66 90
0005h vucomisd xmm1,xmm0            ; VUCOMISD(VEX_Vucomisd_xmm_xmmm64) [XMM1,XMM0]        encoding(VEX, 4 bytes) = c5 f9 2e c8
0009h seta al                       ; SETA(Seta_rm8) [AL]                                  encoding(3 bytes) = 0f 97 c0
000ch movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> ltBytes => new byte[16]{0xC5,0xF8,0x77,0x66,0x90,0xC5,0xF9,0x2E,0xC8,0x0F,0x97,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> lt(ReadOnlySpan<sbyte> lhs, ReadOnlySpan<sbyte> rhs, Span<bool> dst)
; location: [7FFC872C3240h, 7FFC872C32A4h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0003h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0004h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0008h mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000bh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000fh mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0012h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0015h xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
0018h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
001ah jle short 004ch               ; JLE(Jle_rel8_64) [4Ch:jmp64]                         encoding(2 bytes) = 7e 30
001ch cmp r11d,r9d                  ; CMP(Cmp_r32_rm32) [R11D,R9D]                         encoding(3 bytes) = 45 3b d9
001fh jae short 005fh               ; JAE(Jae_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 73 3e
0021h movsxd rsi,r11d               ; MOVSXD(Movsxd_r64_rm32) [RSI,R11D]                   encoding(3 bytes) = 49 63 f3
0024h lea rdi,[rax+rsi]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 30
0028h movsx rbx,byte ptr [r10+rsi]  ; MOVSX(Movsx_r64_rm8) [RBX,mem(8i,R10:br,DS:sr)]      encoding(5 bytes) = 49 0f be 1c 32
002dh cmp r11d,[r8+8]               ; CMP(Cmp_r32_rm32) [R11D,mem(32u,R8:br,DS:sr)]        encoding(4 bytes) = 45 3b 58 08
0031h jae short 005fh               ; JAE(Jae_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 73 2c
0033h mov rbp,[r8]                  ; MOV(Mov_r64_rm64) [RBP,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 28
0036h movsx rsi,byte ptr [rsi+rbp]  ; MOVSX(Movsx_r64_rm8) [RSI,mem(8i,RSI:br,DS:sr)]      encoding(5 bytes) = 48 0f be 34 2e
003bh cmp ebx,esi                   ; CMP(Cmp_r32_rm32) [EBX,ESI]                          encoding(2 bytes) = 3b de
003dh setl sil                      ; SETL(Setl_rm8) [SIL]                                 encoding(4 bytes) = 40 0f 9c c6
0041h mov [rdi],sil                 ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),SIL]           encoding(3 bytes) = 40 88 37
0044h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
0047h cmp r11d,edx                  ; CMP(Cmp_r32_rm32) [R11D,EDX]                         encoding(3 bytes) = 44 3b da
004ah jl short 001ch                ; JL(Jl_rel8_64) [1Ch:jmp64]                           encoding(2 bytes) = 7c d0
004ch mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
004fh mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0053h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0056h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
005ah pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
005bh pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
005ch pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
005dh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
005eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
005fh call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A1B70h:jmp64]                encoding(5 bytes) = e8 0c 1b 5a 5f
0064h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> ltBytes => new byte[101]{0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x12,0x8B,0x52,0x08,0x45,0x33,0xDB,0x85,0xD2,0x7E,0x30,0x45,0x3B,0xD9,0x73,0x3E,0x49,0x63,0xF3,0x48,0x8D,0x3C,0x30,0x49,0x0F,0xBE,0x1C,0x32,0x45,0x3B,0x58,0x08,0x73,0x2C,0x49,0x8B,0x28,0x48,0x0F,0xBE,0x34,0x2E,0x3B,0xDE,0x40,0x0F,0x9C,0xC6,0x40,0x88,0x37,0x41,0xFF,0xC3,0x44,0x3B,0xDA,0x7C,0xD0,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0xC3,0xE8,0x0C,0x1B,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> lt(ReadOnlySpan<byte> lhs, ReadOnlySpan<byte> rhs, Span<bool> dst)
; location: [7FFC872C32D0h, 7FFC872C3334h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0003h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0004h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0008h mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000bh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000fh mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0012h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0015h xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
0018h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
001ah jle short 004ch               ; JLE(Jle_rel8_64) [4Ch:jmp64]                         encoding(2 bytes) = 7e 30
001ch cmp r11d,r9d                  ; CMP(Cmp_r32_rm32) [R11D,R9D]                         encoding(3 bytes) = 45 3b d9
001fh jae short 005fh               ; JAE(Jae_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 73 3e
0021h movsxd rsi,r11d               ; MOVSXD(Movsxd_r64_rm32) [RSI,R11D]                   encoding(3 bytes) = 49 63 f3
0024h lea rdi,[rax+rsi]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 30
0028h movzx ebx,byte ptr [r10+rsi]  ; MOVZX(Movzx_r32_rm8) [EBX,mem(8u,R10:br,DS:sr)]      encoding(5 bytes) = 41 0f b6 1c 32
002dh cmp r11d,[r8+8]               ; CMP(Cmp_r32_rm32) [R11D,mem(32u,R8:br,DS:sr)]        encoding(4 bytes) = 45 3b 58 08
0031h jae short 005fh               ; JAE(Jae_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 73 2c
0033h mov rbp,[r8]                  ; MOV(Mov_r64_rm64) [RBP,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 28
0036h movzx esi,byte ptr [rsi+rbp]  ; MOVZX(Movzx_r32_rm8) [ESI,mem(8u,RSI:br,DS:sr)]      encoding(5 bytes) = 40 0f b6 34 2e
003bh cmp ebx,esi                   ; CMP(Cmp_r32_rm32) [EBX,ESI]                          encoding(2 bytes) = 3b de
003dh setl sil                      ; SETL(Setl_rm8) [SIL]                                 encoding(4 bytes) = 40 0f 9c c6
0041h mov [rdi],sil                 ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),SIL]           encoding(3 bytes) = 40 88 37
0044h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
0047h cmp r11d,edx                  ; CMP(Cmp_r32_rm32) [R11D,EDX]                         encoding(3 bytes) = 44 3b da
004ah jl short 001ch                ; JL(Jl_rel8_64) [1Ch:jmp64]                           encoding(2 bytes) = 7c d0
004ch mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
004fh mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0053h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0056h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
005ah pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
005bh pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
005ch pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
005dh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
005eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
005fh call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A1AE0h:jmp64]                encoding(5 bytes) = e8 7c 1a 5a 5f
0064h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> ltBytes => new byte[101]{0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x12,0x8B,0x52,0x08,0x45,0x33,0xDB,0x85,0xD2,0x7E,0x30,0x45,0x3B,0xD9,0x73,0x3E,0x49,0x63,0xF3,0x48,0x8D,0x3C,0x30,0x41,0x0F,0xB6,0x1C,0x32,0x45,0x3B,0x58,0x08,0x73,0x2C,0x49,0x8B,0x28,0x40,0x0F,0xB6,0x34,0x2E,0x3B,0xDE,0x40,0x0F,0x9C,0xC6,0x40,0x88,0x37,0x41,0xFF,0xC3,0x44,0x3B,0xDA,0x7C,0xD0,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0xC3,0xE8,0x7C,0x1A,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> lt(ReadOnlySpan<short> lhs, ReadOnlySpan<short> rhs, Span<bool> dst)
; location: [7FFC872C3360h, 7FFC872C33C5h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0003h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0004h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0008h mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000bh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000fh mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0012h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0015h xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
0018h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
001ah jle short 004dh               ; JLE(Jle_rel8_64) [4Dh:jmp64]                         encoding(2 bytes) = 7e 31
001ch cmp r11d,r9d                  ; CMP(Cmp_r32_rm32) [R11D,R9D]                         encoding(3 bytes) = 45 3b d9
001fh jae short 0060h               ; JAE(Jae_rel8_64) [60h:jmp64]                         encoding(2 bytes) = 73 3f
0021h movsxd rsi,r11d               ; MOVSXD(Movsxd_r64_rm32) [RSI,R11D]                   encoding(3 bytes) = 49 63 f3
0024h lea rdi,[rax+rsi]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 30
0028h movsx rbx,word ptr [r10+rsi*2]; MOVSX(Movsx_r64_rm16) [RBX,mem(16i,R10:br,DS:sr)]    encoding(5 bytes) = 49 0f bf 1c 72
002dh cmp r11d,[r8+8]               ; CMP(Cmp_r32_rm32) [R11D,mem(32u,R8:br,DS:sr)]        encoding(4 bytes) = 45 3b 58 08
0031h jae short 0060h               ; JAE(Jae_rel8_64) [60h:jmp64]                         encoding(2 bytes) = 73 2d
0033h mov rbp,[r8]                  ; MOV(Mov_r64_rm64) [RBP,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 28
0036h movsx rsi,word ptr [rbp+rsi*2]; MOVSX(Movsx_r64_rm16) [RSI,mem(16i,RBP:br,SS:sr)]    encoding(6 bytes) = 48 0f bf 74 75 00
003ch cmp ebx,esi                   ; CMP(Cmp_r32_rm32) [EBX,ESI]                          encoding(2 bytes) = 3b de
003eh setl sil                      ; SETL(Setl_rm8) [SIL]                                 encoding(4 bytes) = 40 0f 9c c6
0042h mov [rdi],sil                 ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),SIL]           encoding(3 bytes) = 40 88 37
0045h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
0048h cmp r11d,edx                  ; CMP(Cmp_r32_rm32) [R11D,EDX]                         encoding(3 bytes) = 44 3b da
004bh jl short 001ch                ; JL(Jl_rel8_64) [1Ch:jmp64]                           encoding(2 bytes) = 7c cf
004dh mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0050h mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0054h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0057h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
005bh pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
005ch pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
005dh pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
005eh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
005fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0060h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A1A50h:jmp64]                encoding(5 bytes) = e8 eb 19 5a 5f
0065h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> ltBytes => new byte[102]{0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x12,0x8B,0x52,0x08,0x45,0x33,0xDB,0x85,0xD2,0x7E,0x31,0x45,0x3B,0xD9,0x73,0x3F,0x49,0x63,0xF3,0x48,0x8D,0x3C,0x30,0x49,0x0F,0xBF,0x1C,0x72,0x45,0x3B,0x58,0x08,0x73,0x2D,0x49,0x8B,0x28,0x48,0x0F,0xBF,0x74,0x75,0x00,0x3B,0xDE,0x40,0x0F,0x9C,0xC6,0x40,0x88,0x37,0x41,0xFF,0xC3,0x44,0x3B,0xDA,0x7C,0xCF,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0xC3,0xE8,0xEB,0x19,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> lt(ReadOnlySpan<ushort> lhs, ReadOnlySpan<ushort> rhs, Span<bool> dst)
; location: [7FFC872C33F0h, 7FFC872C3454h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0003h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0004h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0008h mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000bh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000fh mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0012h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0015h xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
0018h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
001ah jle short 004ch               ; JLE(Jle_rel8_64) [4Ch:jmp64]                         encoding(2 bytes) = 7e 30
001ch cmp r11d,r9d                  ; CMP(Cmp_r32_rm32) [R11D,R9D]                         encoding(3 bytes) = 45 3b d9
001fh jae short 005fh               ; JAE(Jae_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 73 3e
0021h movsxd rsi,r11d               ; MOVSXD(Movsxd_r64_rm32) [RSI,R11D]                   encoding(3 bytes) = 49 63 f3
0024h lea rdi,[rax+rsi]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 30
0028h movzx ebx,word ptr [r10+rsi*2]; MOVZX(Movzx_r32_rm16) [EBX,mem(16u,R10:br,DS:sr)]    encoding(5 bytes) = 41 0f b7 1c 72
002dh cmp r11d,[r8+8]               ; CMP(Cmp_r32_rm32) [R11D,mem(32u,R8:br,DS:sr)]        encoding(4 bytes) = 45 3b 58 08
0031h jae short 005fh               ; JAE(Jae_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 73 2c
0033h mov rbp,[r8]                  ; MOV(Mov_r64_rm64) [RBP,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 28
0036h movzx esi,word ptr [rbp+rsi*2]; MOVZX(Movzx_r32_rm16) [ESI,mem(16u,RBP:br,SS:sr)]    encoding(5 bytes) = 0f b7 74 75 00
003bh cmp ebx,esi                   ; CMP(Cmp_r32_rm32) [EBX,ESI]                          encoding(2 bytes) = 3b de
003dh setl sil                      ; SETL(Setl_rm8) [SIL]                                 encoding(4 bytes) = 40 0f 9c c6
0041h mov [rdi],sil                 ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),SIL]           encoding(3 bytes) = 40 88 37
0044h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
0047h cmp r11d,edx                  ; CMP(Cmp_r32_rm32) [R11D,EDX]                         encoding(3 bytes) = 44 3b da
004ah jl short 001ch                ; JL(Jl_rel8_64) [1Ch:jmp64]                           encoding(2 bytes) = 7c d0
004ch mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
004fh mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0053h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0056h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
005ah pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
005bh pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
005ch pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
005dh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
005eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
005fh call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A19C0h:jmp64]                encoding(5 bytes) = e8 5c 19 5a 5f
0064h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> ltBytes => new byte[101]{0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x12,0x8B,0x52,0x08,0x45,0x33,0xDB,0x85,0xD2,0x7E,0x30,0x45,0x3B,0xD9,0x73,0x3E,0x49,0x63,0xF3,0x48,0x8D,0x3C,0x30,0x41,0x0F,0xB7,0x1C,0x72,0x45,0x3B,0x58,0x08,0x73,0x2C,0x49,0x8B,0x28,0x0F,0xB7,0x74,0x75,0x00,0x3B,0xDE,0x40,0x0F,0x9C,0xC6,0x40,0x88,0x37,0x41,0xFF,0xC3,0x44,0x3B,0xDA,0x7C,0xD0,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0xC3,0xE8,0x5C,0x19,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> lt(ReadOnlySpan<int> lhs, ReadOnlySpan<int> rhs, Span<bool> dst)
; location: [7FFC872C3480h, 7FFC872C34E2h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0003h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0004h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0008h mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000bh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000fh mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0012h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0015h xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
0018h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
001ah jle short 004ah               ; JLE(Jle_rel8_64) [4Ah:jmp64]                         encoding(2 bytes) = 7e 2e
001ch cmp r11d,r9d                  ; CMP(Cmp_r32_rm32) [R11D,R9D]                         encoding(3 bytes) = 45 3b d9
001fh jae short 005dh               ; JAE(Jae_rel8_64) [5Dh:jmp64]                         encoding(2 bytes) = 73 3c
0021h movsxd rsi,r11d               ; MOVSXD(Movsxd_r64_rm32) [RSI,R11D]                   encoding(3 bytes) = 49 63 f3
0024h lea rdi,[rax+rsi]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 30
0028h mov ebx,[r10+rsi*4]           ; MOV(Mov_r32_rm32) [EBX,mem(32u,R10:br,DS:sr)]        encoding(4 bytes) = 41 8b 1c b2
002ch cmp r11d,[r8+8]               ; CMP(Cmp_r32_rm32) [R11D,mem(32u,R8:br,DS:sr)]        encoding(4 bytes) = 45 3b 58 08
0030h jae short 005dh               ; JAE(Jae_rel8_64) [5Dh:jmp64]                         encoding(2 bytes) = 73 2b
0032h mov rbp,[r8]                  ; MOV(Mov_r64_rm64) [RBP,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 28
0035h mov esi,[rbp+rsi*4]           ; MOV(Mov_r32_rm32) [ESI,mem(32u,RBP:br,SS:sr)]        encoding(4 bytes) = 8b 74 b5 00
0039h cmp ebx,esi                   ; CMP(Cmp_r32_rm32) [EBX,ESI]                          encoding(2 bytes) = 3b de
003bh setl sil                      ; SETL(Setl_rm8) [SIL]                                 encoding(4 bytes) = 40 0f 9c c6
003fh mov [rdi],sil                 ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),SIL]           encoding(3 bytes) = 40 88 37
0042h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
0045h cmp r11d,edx                  ; CMP(Cmp_r32_rm32) [R11D,EDX]                         encoding(3 bytes) = 44 3b da
0048h jl short 001ch                ; JL(Jl_rel8_64) [1Ch:jmp64]                           encoding(2 bytes) = 7c d2
004ah mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
004dh mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0051h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0054h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
0058h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0059h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
005ah pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
005bh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
005ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
005dh call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A1930h:jmp64]                encoding(5 bytes) = e8 ce 18 5a 5f
0062h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> ltBytes => new byte[99]{0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x12,0x8B,0x52,0x08,0x45,0x33,0xDB,0x85,0xD2,0x7E,0x2E,0x45,0x3B,0xD9,0x73,0x3C,0x49,0x63,0xF3,0x48,0x8D,0x3C,0x30,0x41,0x8B,0x1C,0xB2,0x45,0x3B,0x58,0x08,0x73,0x2B,0x49,0x8B,0x28,0x8B,0x74,0xB5,0x00,0x3B,0xDE,0x40,0x0F,0x9C,0xC6,0x40,0x88,0x37,0x41,0xFF,0xC3,0x44,0x3B,0xDA,0x7C,0xD2,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0xC3,0xE8,0xCE,0x18,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> lt(ReadOnlySpan<uint> lhs, ReadOnlySpan<uint> rhs, Span<bool> dst)
; location: [7FFC872C3500h, 7FFC872C3562h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0003h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0004h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0008h mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000bh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000fh mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0012h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0015h xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
0018h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
001ah jle short 004ah               ; JLE(Jle_rel8_64) [4Ah:jmp64]                         encoding(2 bytes) = 7e 2e
001ch cmp r11d,r9d                  ; CMP(Cmp_r32_rm32) [R11D,R9D]                         encoding(3 bytes) = 45 3b d9
001fh jae short 005dh               ; JAE(Jae_rel8_64) [5Dh:jmp64]                         encoding(2 bytes) = 73 3c
0021h movsxd rsi,r11d               ; MOVSXD(Movsxd_r64_rm32) [RSI,R11D]                   encoding(3 bytes) = 49 63 f3
0024h lea rdi,[rax+rsi]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 30
0028h mov ebx,[r10+rsi*4]           ; MOV(Mov_r32_rm32) [EBX,mem(32u,R10:br,DS:sr)]        encoding(4 bytes) = 41 8b 1c b2
002ch cmp r11d,[r8+8]               ; CMP(Cmp_r32_rm32) [R11D,mem(32u,R8:br,DS:sr)]        encoding(4 bytes) = 45 3b 58 08
0030h jae short 005dh               ; JAE(Jae_rel8_64) [5Dh:jmp64]                         encoding(2 bytes) = 73 2b
0032h mov rbp,[r8]                  ; MOV(Mov_r64_rm64) [RBP,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 28
0035h mov esi,[rbp+rsi*4]           ; MOV(Mov_r32_rm32) [ESI,mem(32u,RBP:br,SS:sr)]        encoding(4 bytes) = 8b 74 b5 00
0039h cmp ebx,esi                   ; CMP(Cmp_r32_rm32) [EBX,ESI]                          encoding(2 bytes) = 3b de
003bh setb sil                      ; SETB(Setb_rm8) [SIL]                                 encoding(4 bytes) = 40 0f 92 c6
003fh mov [rdi],sil                 ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),SIL]           encoding(3 bytes) = 40 88 37
0042h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
0045h cmp r11d,edx                  ; CMP(Cmp_r32_rm32) [R11D,EDX]                         encoding(3 bytes) = 44 3b da
0048h jl short 001ch                ; JL(Jl_rel8_64) [1Ch:jmp64]                           encoding(2 bytes) = 7c d2
004ah mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
004dh mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0051h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0054h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
0058h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0059h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
005ah pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
005bh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
005ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
005dh call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A18B0h:jmp64]                encoding(5 bytes) = e8 4e 18 5a 5f
0062h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> ltBytes => new byte[99]{0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x12,0x8B,0x52,0x08,0x45,0x33,0xDB,0x85,0xD2,0x7E,0x2E,0x45,0x3B,0xD9,0x73,0x3C,0x49,0x63,0xF3,0x48,0x8D,0x3C,0x30,0x41,0x8B,0x1C,0xB2,0x45,0x3B,0x58,0x08,0x73,0x2B,0x49,0x8B,0x28,0x8B,0x74,0xB5,0x00,0x3B,0xDE,0x40,0x0F,0x92,0xC6,0x40,0x88,0x37,0x41,0xFF,0xC3,0x44,0x3B,0xDA,0x7C,0xD2,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0xC3,0xE8,0x4E,0x18,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> lt(ReadOnlySpan<long> lhs, ReadOnlySpan<long> rhs, Span<bool> dst)
; location: [7FFC872C3580h, 7FFC872C35E4h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0003h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0004h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0008h mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000bh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000fh mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0012h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0015h xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
0018h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
001ah jle short 004ch               ; JLE(Jle_rel8_64) [4Ch:jmp64]                         encoding(2 bytes) = 7e 30
001ch cmp r11d,r9d                  ; CMP(Cmp_r32_rm32) [R11D,R9D]                         encoding(3 bytes) = 45 3b d9
001fh jae short 005fh               ; JAE(Jae_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 73 3e
0021h movsxd rsi,r11d               ; MOVSXD(Movsxd_r64_rm32) [RSI,R11D]                   encoding(3 bytes) = 49 63 f3
0024h lea rdi,[rax+rsi]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 30
0028h mov rbx,[r10+rsi*8]           ; MOV(Mov_r64_rm64) [RBX,mem(64u,R10:br,DS:sr)]        encoding(4 bytes) = 49 8b 1c f2
002ch cmp r11d,[r8+8]               ; CMP(Cmp_r32_rm32) [R11D,mem(32u,R8:br,DS:sr)]        encoding(4 bytes) = 45 3b 58 08
0030h jae short 005fh               ; JAE(Jae_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 73 2d
0032h mov rbp,[r8]                  ; MOV(Mov_r64_rm64) [RBP,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 28
0035h mov rsi,[rbp+rsi*8]           ; MOV(Mov_r64_rm64) [RSI,mem(64u,RBP:br,SS:sr)]        encoding(5 bytes) = 48 8b 74 f5 00
003ah cmp rbx,rsi                   ; CMP(Cmp_r64_rm64) [RBX,RSI]                          encoding(3 bytes) = 48 3b de
003dh setl sil                      ; SETL(Setl_rm8) [SIL]                                 encoding(4 bytes) = 40 0f 9c c6
0041h mov [rdi],sil                 ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),SIL]           encoding(3 bytes) = 40 88 37
0044h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
0047h cmp r11d,edx                  ; CMP(Cmp_r32_rm32) [R11D,EDX]                         encoding(3 bytes) = 44 3b da
004ah jl short 001ch                ; JL(Jl_rel8_64) [1Ch:jmp64]                           encoding(2 bytes) = 7c d0
004ch mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
004fh mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0053h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0056h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
005ah pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
005bh pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
005ch pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
005dh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
005eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
005fh call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A1830h:jmp64]                encoding(5 bytes) = e8 cc 17 5a 5f
0064h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> ltBytes => new byte[101]{0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x12,0x8B,0x52,0x08,0x45,0x33,0xDB,0x85,0xD2,0x7E,0x30,0x45,0x3B,0xD9,0x73,0x3E,0x49,0x63,0xF3,0x48,0x8D,0x3C,0x30,0x49,0x8B,0x1C,0xF2,0x45,0x3B,0x58,0x08,0x73,0x2D,0x49,0x8B,0x28,0x48,0x8B,0x74,0xF5,0x00,0x48,0x3B,0xDE,0x40,0x0F,0x9C,0xC6,0x40,0x88,0x37,0x41,0xFF,0xC3,0x44,0x3B,0xDA,0x7C,0xD0,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0xC3,0xE8,0xCC,0x17,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> lt(ReadOnlySpan<ulong> lhs, ReadOnlySpan<ulong> rhs, Span<bool> dst)
; location: [7FFC872C3610h, 7FFC872C3674h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0003h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0004h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0008h mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000bh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000fh mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0012h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0015h xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
0018h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
001ah jle short 004ch               ; JLE(Jle_rel8_64) [4Ch:jmp64]                         encoding(2 bytes) = 7e 30
001ch cmp r11d,r9d                  ; CMP(Cmp_r32_rm32) [R11D,R9D]                         encoding(3 bytes) = 45 3b d9
001fh jae short 005fh               ; JAE(Jae_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 73 3e
0021h movsxd rsi,r11d               ; MOVSXD(Movsxd_r64_rm32) [RSI,R11D]                   encoding(3 bytes) = 49 63 f3
0024h lea rdi,[rax+rsi]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 30
0028h mov rbx,[r10+rsi*8]           ; MOV(Mov_r64_rm64) [RBX,mem(64u,R10:br,DS:sr)]        encoding(4 bytes) = 49 8b 1c f2
002ch cmp r11d,[r8+8]               ; CMP(Cmp_r32_rm32) [R11D,mem(32u,R8:br,DS:sr)]        encoding(4 bytes) = 45 3b 58 08
0030h jae short 005fh               ; JAE(Jae_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 73 2d
0032h mov rbp,[r8]                  ; MOV(Mov_r64_rm64) [RBP,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 28
0035h mov rsi,[rbp+rsi*8]           ; MOV(Mov_r64_rm64) [RSI,mem(64u,RBP:br,SS:sr)]        encoding(5 bytes) = 48 8b 74 f5 00
003ah cmp rbx,rsi                   ; CMP(Cmp_r64_rm64) [RBX,RSI]                          encoding(3 bytes) = 48 3b de
003dh setb sil                      ; SETB(Setb_rm8) [SIL]                                 encoding(4 bytes) = 40 0f 92 c6
0041h mov [rdi],sil                 ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),SIL]           encoding(3 bytes) = 40 88 37
0044h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
0047h cmp r11d,edx                  ; CMP(Cmp_r32_rm32) [R11D,EDX]                         encoding(3 bytes) = 44 3b da
004ah jl short 001ch                ; JL(Jl_rel8_64) [1Ch:jmp64]                           encoding(2 bytes) = 7c d0
004ch mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
004fh mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0053h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0056h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
005ah pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
005bh pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
005ch pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
005dh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
005eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
005fh call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A17A0h:jmp64]                encoding(5 bytes) = e8 3c 17 5a 5f
0064h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> ltBytes => new byte[101]{0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x12,0x8B,0x52,0x08,0x45,0x33,0xDB,0x85,0xD2,0x7E,0x30,0x45,0x3B,0xD9,0x73,0x3E,0x49,0x63,0xF3,0x48,0x8D,0x3C,0x30,0x49,0x8B,0x1C,0xF2,0x45,0x3B,0x58,0x08,0x73,0x2D,0x49,0x8B,0x28,0x48,0x8B,0x74,0xF5,0x00,0x48,0x3B,0xDE,0x40,0x0F,0x92,0xC6,0x40,0x88,0x37,0x41,0xFF,0xC3,0x44,0x3B,0xDA,0x7C,0xD0,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0xC3,0xE8,0x3C,0x17,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> lt(ReadOnlySpan<float> lhs, ReadOnlySpan<float> rhs, Span<bool> dst)
; location: [7FFC872C36A0h, 7FFC872C3708h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0003h sub rsp,20h                   ; SUB(Sub_rm64_imm8) [RSP,20h:imm64]                   encoding(4 bytes) = 48 83 ec 20
0007h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
000ah mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000dh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
0011h mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0014h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0017h xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
001ah test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
001ch jle short 0051h               ; JLE(Jle_rel8_64) [51h:jmp64]                         encoding(2 bytes) = 7e 33
001eh cmp r11d,r9d                  ; CMP(Cmp_r32_rm32) [R11D,R9D]                         encoding(3 bytes) = 45 3b d9
0021h jae short 0063h               ; JAE(Jae_rel8_64) [63h:jmp64]                         encoding(2 bytes) = 73 40
0023h movsxd rsi,r11d               ; MOVSXD(Movsxd_r64_rm32) [RSI,R11D]                   encoding(3 bytes) = 49 63 f3
0026h lea rdi,[rax+rsi]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 30
002ah vmovss xmm0,dword ptr [r10+rsi*4]; VMOVSS(VEX_Vmovss_xmm_m32) [XMM0,mem(Float32,R10:br,DS:sr)] encoding(VEX, 6 bytes) = c4 c1 7a 10 04 b2
0030h cmp r11d,[r8+8]               ; CMP(Cmp_r32_rm32) [R11D,mem(32u,R8:br,DS:sr)]        encoding(4 bytes) = 45 3b 58 08
0034h jae short 0063h               ; JAE(Jae_rel8_64) [63h:jmp64]                         encoding(2 bytes) = 73 2d
0036h mov rbx,[r8]                  ; MOV(Mov_r64_rm64) [RBX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 18
0039h vmovss xmm1,dword ptr [rbx+rsi*4]; VMOVSS(VEX_Vmovss_xmm_m32) [XMM1,mem(Float32,RBX:br,DS:sr)] encoding(VEX, 5 bytes) = c5 fa 10 0c b3
003eh vucomiss xmm1,xmm0            ; VUCOMISS(VEX_Vucomiss_xmm_xmmm32) [XMM1,XMM0]        encoding(VEX, 4 bytes) = c5 f8 2e c8
0042h seta sil                      ; SETA(Seta_rm8) [SIL]                                 encoding(4 bytes) = 40 0f 97 c6
0046h mov [rdi],sil                 ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),SIL]           encoding(3 bytes) = 40 88 37
0049h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
004ch cmp r11d,edx                  ; CMP(Cmp_r32_rm32) [R11D,EDX]                         encoding(3 bytes) = 44 3b da
004fh jl short 001eh                ; JL(Jl_rel8_64) [1Eh:jmp64]                           encoding(2 bytes) = 7c cd
0051h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0054h mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0058h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
005bh add rsp,20h                   ; ADD(Add_rm64_imm8) [RSP,20h:imm64]                   encoding(4 bytes) = 48 83 c4 20
005fh pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0060h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0061h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0062h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0063h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A1710h:jmp64]                encoding(5 bytes) = e8 a8 16 5a 5f
0068h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> ltBytes => new byte[105]{0x57,0x56,0x53,0x48,0x83,0xEC,0x20,0xC5,0xF8,0x77,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x12,0x8B,0x52,0x08,0x45,0x33,0xDB,0x85,0xD2,0x7E,0x33,0x45,0x3B,0xD9,0x73,0x40,0x49,0x63,0xF3,0x48,0x8D,0x3C,0x30,0xC4,0xC1,0x7A,0x10,0x04,0xB2,0x45,0x3B,0x58,0x08,0x73,0x2D,0x49,0x8B,0x18,0xC5,0xFA,0x10,0x0C,0xB3,0xC5,0xF8,0x2E,0xC8,0x40,0x0F,0x97,0xC6,0x40,0x88,0x37,0x41,0xFF,0xC3,0x44,0x3B,0xDA,0x7C,0xCD,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x20,0x5B,0x5E,0x5F,0xC3,0xE8,0xA8,0x16,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> lt(ReadOnlySpan<double> lhs, ReadOnlySpan<double> rhs, Span<bool> dst)
; location: [7FFC872C3730h, 7FFC872C3798h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0003h sub rsp,20h                   ; SUB(Sub_rm64_imm8) [RSP,20h:imm64]                   encoding(4 bytes) = 48 83 ec 20
0007h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
000ah mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000dh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
0011h mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0014h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0017h xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
001ah test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
001ch jle short 0051h               ; JLE(Jle_rel8_64) [51h:jmp64]                         encoding(2 bytes) = 7e 33
001eh cmp r11d,r9d                  ; CMP(Cmp_r32_rm32) [R11D,R9D]                         encoding(3 bytes) = 45 3b d9
0021h jae short 0063h               ; JAE(Jae_rel8_64) [63h:jmp64]                         encoding(2 bytes) = 73 40
0023h movsxd rsi,r11d               ; MOVSXD(Movsxd_r64_rm32) [RSI,R11D]                   encoding(3 bytes) = 49 63 f3
0026h lea rdi,[rax+rsi]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 30
002ah vmovsd xmm0,qword ptr [r10+rsi*8]; VMOVSD(VEX_Vmovsd_xmm_m64) [XMM0,mem(Float64,R10:br,DS:sr)] encoding(VEX, 6 bytes) = c4 c1 7b 10 04 f2
0030h cmp r11d,[r8+8]               ; CMP(Cmp_r32_rm32) [R11D,mem(32u,R8:br,DS:sr)]        encoding(4 bytes) = 45 3b 58 08
0034h jae short 0063h               ; JAE(Jae_rel8_64) [63h:jmp64]                         encoding(2 bytes) = 73 2d
0036h mov rbx,[r8]                  ; MOV(Mov_r64_rm64) [RBX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 18
0039h vmovsd xmm1,qword ptr [rbx+rsi*8]; VMOVSD(VEX_Vmovsd_xmm_m64) [XMM1,mem(Float64,RBX:br,DS:sr)] encoding(VEX, 5 bytes) = c5 fb 10 0c f3
003eh vucomisd xmm1,xmm0            ; VUCOMISD(VEX_Vucomisd_xmm_xmmm64) [XMM1,XMM0]        encoding(VEX, 4 bytes) = c5 f9 2e c8
0042h seta sil                      ; SETA(Seta_rm8) [SIL]                                 encoding(4 bytes) = 40 0f 97 c6
0046h mov [rdi],sil                 ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),SIL]           encoding(3 bytes) = 40 88 37
0049h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
004ch cmp r11d,edx                  ; CMP(Cmp_r32_rm32) [R11D,EDX]                         encoding(3 bytes) = 44 3b da
004fh jl short 001eh                ; JL(Jl_rel8_64) [1Eh:jmp64]                           encoding(2 bytes) = 7c cd
0051h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0054h mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0058h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
005bh add rsp,20h                   ; ADD(Add_rm64_imm8) [RSP,20h:imm64]                   encoding(4 bytes) = 48 83 c4 20
005fh pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0060h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0061h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0062h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0063h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A1680h:jmp64]                encoding(5 bytes) = e8 18 16 5a 5f
0068h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> ltBytes => new byte[105]{0x57,0x56,0x53,0x48,0x83,0xEC,0x20,0xC5,0xF8,0x77,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x12,0x8B,0x52,0x08,0x45,0x33,0xDB,0x85,0xD2,0x7E,0x33,0x45,0x3B,0xD9,0x73,0x40,0x49,0x63,0xF3,0x48,0x8D,0x3C,0x30,0xC4,0xC1,0x7B,0x10,0x04,0xF2,0x45,0x3B,0x58,0x08,0x73,0x2D,0x49,0x8B,0x18,0xC5,0xFB,0x10,0x0C,0xF3,0xC5,0xF9,0x2E,0xC8,0x40,0x0F,0x97,0xC6,0x40,0x88,0x37,0x41,0xFF,0xC3,0x44,0x3B,0xDA,0x7C,0xCD,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x20,0x5B,0x5E,0x5F,0xC3,0xE8,0x18,0x16,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> lt(ReadOnlySpan<sbyte> lhs, ReadOnlySpan<sbyte> rhs)
; location: [7FFC872C37C0h, 7FFC872C38C5h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push r12                      ; PUSH(Push_r64) [R12]                                 encoding(2 bytes) = 41 54
0006h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0007h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0008h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0009h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
000ah sub rsp,60h                   ; SUB(Sub_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 ec 60
000eh vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0011h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0014h lea rdi,[rsp+28h]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 7c 24 28
0019h mov ecx,0Ch                   ; MOV(Mov_r32_imm32) [ECX,ch:imm32]                    encoding(5 bytes) = b9 0c 00 00 00
001eh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0020h rep stosd                     ; STOSD(Stosd_m32_EAX) [mem(32u),EAX]                  encoding(2 bytes) = f3 ab
0022h mov rcx,rsi                   ; MOV(Mov_r64_rm64) [RCX,RSI]                          encoding(3 bytes) = 48 8b ce
0025h mov rbx,rcx                   ; MOV(Mov_r64_rm64) [RBX,RCX]                          encoding(3 bytes) = 48 8b d9
0028h mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
002bh mov rdi,r8                    ; MOV(Mov_r64_rm64) [RDI,R8]                           encoding(3 bytes) = 49 8b f8
002eh mov ebp,83h                   ; MOV(Mov_r32_imm32) [EBP,83h:imm32]                   encoding(5 bytes) = bd 83 00 00 00
0033h mov r14d,1                    ; MOV(Mov_r32_imm32) [R14D,1h:imm32]                   encoding(6 bytes) = 41 be 01 00 00 00
0039h mov r15d,[rsi+8]              ; MOV(Mov_r32_rm32) [R15D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 8b 7e 08
003dh mov r12d,[rdi+8]              ; MOV(Mov_r32_rm32) [R12D,mem(32u,RDI:br,DS:sr)]       encoding(4 bytes) = 44 8b 67 08
0041h cmp r15d,r12d                 ; CMP(Cmp_r32_rm32) [R15D,R12D]                        encoding(3 bytes) = 45 3b fc
0044h jne short 00abh               ; JNE(Jne_rel8_64) [ABh:jmp64]                         encoding(2 bytes) = 75 65
0046h movsxd rdx,r15d               ; MOVSXD(Movsxd_r64_rm32) [RDX,R15D]                   encoding(3 bytes) = 49 63 d7
0049h mov rcx,7FFC86FF98E8h         ; MOV(Mov_r64_imm64) [RCX,7ffc86ff98e8h:imm64]         encoding(10 bytes) = 48 b9 e8 98 ff 86 fc 7f 00 00
0053h call 7FFCE67394A0h            ; CALL(Call_rel32_64) [5F475CE0h:jmp64]                encoding(5 bytes) = e8 88 5c 47 5f
0058h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
005ch mov edx,[rax+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 50 08
005fh mov r8,rbx                    ; MOV(Mov_r64_rm64) [R8,RBX]                           encoding(3 bytes) = 4c 8b c3
0062h vmovdqu xmm0,xmmword ptr [rsi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 06
0066h vmovdqu xmmword ptr [rsp+48h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 48
006ch vmovdqu xmm0,xmmword ptr [rdi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RDI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 07
0070h vmovdqu xmmword ptr [rsp+38h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 38
0076h lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
007bh mov [r9],rcx                  ; MOV(Mov_rm64_r64) [mem(64u,R9:br,DS:sr),RCX]         encoding(3 bytes) = 49 89 09
007eh mov [r9+8],edx                ; MOV(Mov_rm32_r32) [mem(32u,R9:br,DS:sr),EDX]         encoding(4 bytes) = 41 89 51 08
0082h mov rcx,r8                    ; MOV(Mov_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 8b c8
0085h lea rdx,[rsp+48h]             ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 54 24 48
008ah lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
008fh lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
0094h call 7FFC872C3240h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFFA80h:jmp64]        encoding(5 bytes) = e8 e7 f9 ff ff
0099h mov rax,rbx                   ; MOV(Mov_r64_rm64) [RAX,RBX]                          encoding(3 bytes) = 48 8b c3
009ch add rsp,60h                   ; ADD(Add_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 c4 60
00a0h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
00a1h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
00a2h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
00a3h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
00a4h pop r12                       ; POP(Pop_r64) [R12]                                   encoding(2 bytes) = 41 5c
00a6h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
00a8h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
00aah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
00abh mov ecx,0B83h                 ; MOV(Mov_r32_imm32) [ECX,b83h:imm32]                  encoding(5 bytes) = b9 83 0b 00 00
00b0h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00bah call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F470160h:jmp64]                encoding(5 bytes) = e8 a1 00 47 5f
00bfh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
00c2h mov ecx,0B89h                 ; MOV(Mov_r32_imm32) [ECX,b89h:imm32]                  encoding(5 bytes) = b9 89 0b 00 00
00c7h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00d1h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F470160h:jmp64]                encoding(5 bytes) = e8 8a 00 47 5f
00d6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00d9h lea r8,[rsp+58h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 58
00deh mov [r8],r14b                 ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),R14L]           encoding(3 bytes) = 45 88 30
00e1h mov [r8+4],ebp                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBP]         encoding(4 bytes) = 41 89 68 04
00e5h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00e8h mov ecx,r15d                  ; MOV(Mov_r32_rm32) [ECX,R15D]                         encoding(3 bytes) = 41 8b cf
00ebh mov edx,r12d                  ; MOV(Mov_r32_rm32) [EDX,R12D]                         encoding(3 bytes) = 41 8b d4
00eeh mov rax,[rsp+58h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 58
00f3h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00f8h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFC9A7B8h:jmp64]        encoding(5 bytes) = e8 bb a6 c9 ff
00fdh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
0100h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F453190h:jmp64]                encoding(5 bytes) = e8 8b 30 45 5f
0105h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> ltBytes => new byte[262]{0x41,0x57,0x41,0x56,0x41,0x54,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x60,0xC5,0xF8,0x77,0x48,0x8B,0xF1,0x48,0x8D,0x7C,0x24,0x28,0xB9,0x0C,0x00,0x00,0x00,0x33,0xC0,0xF3,0xAB,0x48,0x8B,0xCE,0x48,0x8B,0xD9,0x48,0x8B,0xF2,0x49,0x8B,0xF8,0xBD,0x83,0x00,0x00,0x00,0x41,0xBE,0x01,0x00,0x00,0x00,0x44,0x8B,0x7E,0x08,0x44,0x8B,0x67,0x08,0x45,0x3B,0xFC,0x75,0x65,0x49,0x63,0xD7,0x48,0xB9,0xE8,0x98,0xFF,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x88,0x5C,0x47,0x5F,0x48,0x8D,0x48,0x10,0x8B,0x50,0x08,0x4C,0x8B,0xC3,0xC5,0xFA,0x6F,0x06,0xC5,0xFA,0x7F,0x44,0x24,0x48,0xC5,0xFA,0x6F,0x07,0xC5,0xFA,0x7F,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0x49,0x89,0x09,0x41,0x89,0x51,0x08,0x49,0x8B,0xC8,0x48,0x8D,0x54,0x24,0x48,0x4C,0x8D,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0xE8,0xE7,0xF9,0xFF,0xFF,0x48,0x8B,0xC3,0x48,0x83,0xC4,0x60,0x5B,0x5D,0x5E,0x5F,0x41,0x5C,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0x83,0x0B,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xA1,0x00,0x47,0x5F,0x48,0x8B,0xF0,0xB9,0x89,0x0B,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x8A,0x00,0x47,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x58,0x45,0x88,0x30,0x41,0x89,0x68,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCF,0x41,0x8B,0xD4,0x48,0x8B,0x44,0x24,0x58,0x48,0x89,0x44,0x24,0x20,0xE8,0xBB,0xA6,0xC9,0xFF,0x48,0x8B,0xC8,0xE8,0x8B,0x30,0x45,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> lt(ReadOnlySpan<byte> lhs, ReadOnlySpan<byte> rhs)
; location: [7FFC872C38F0h, 7FFC872C39F5h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push r12                      ; PUSH(Push_r64) [R12]                                 encoding(2 bytes) = 41 54
0006h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0007h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0008h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0009h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
000ah sub rsp,60h                   ; SUB(Sub_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 ec 60
000eh vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0011h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0014h lea rdi,[rsp+28h]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 7c 24 28
0019h mov ecx,0Ch                   ; MOV(Mov_r32_imm32) [ECX,ch:imm32]                    encoding(5 bytes) = b9 0c 00 00 00
001eh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0020h rep stosd                     ; STOSD(Stosd_m32_EAX) [mem(32u),EAX]                  encoding(2 bytes) = f3 ab
0022h mov rcx,rsi                   ; MOV(Mov_r64_rm64) [RCX,RSI]                          encoding(3 bytes) = 48 8b ce
0025h mov rbx,rcx                   ; MOV(Mov_r64_rm64) [RBX,RCX]                          encoding(3 bytes) = 48 8b d9
0028h mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
002bh mov rdi,r8                    ; MOV(Mov_r64_rm64) [RDI,R8]                           encoding(3 bytes) = 49 8b f8
002eh mov ebp,87h                   ; MOV(Mov_r32_imm32) [EBP,87h:imm32]                   encoding(5 bytes) = bd 87 00 00 00
0033h mov r14d,1                    ; MOV(Mov_r32_imm32) [R14D,1h:imm32]                   encoding(6 bytes) = 41 be 01 00 00 00
0039h mov r15d,[rsi+8]              ; MOV(Mov_r32_rm32) [R15D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 8b 7e 08
003dh mov r12d,[rdi+8]              ; MOV(Mov_r32_rm32) [R12D,mem(32u,RDI:br,DS:sr)]       encoding(4 bytes) = 44 8b 67 08
0041h cmp r15d,r12d                 ; CMP(Cmp_r32_rm32) [R15D,R12D]                        encoding(3 bytes) = 45 3b fc
0044h jne short 00abh               ; JNE(Jne_rel8_64) [ABh:jmp64]                         encoding(2 bytes) = 75 65
0046h movsxd rdx,r15d               ; MOVSXD(Movsxd_r64_rm32) [RDX,R15D]                   encoding(3 bytes) = 49 63 d7
0049h mov rcx,7FFC86FF98E8h         ; MOV(Mov_r64_imm64) [RCX,7ffc86ff98e8h:imm64]         encoding(10 bytes) = 48 b9 e8 98 ff 86 fc 7f 00 00
0053h call 7FFCE67394A0h            ; CALL(Call_rel32_64) [5F475BB0h:jmp64]                encoding(5 bytes) = e8 58 5b 47 5f
0058h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
005ch mov edx,[rax+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 50 08
005fh mov r8,rbx                    ; MOV(Mov_r64_rm64) [R8,RBX]                           encoding(3 bytes) = 4c 8b c3
0062h vmovdqu xmm0,xmmword ptr [rsi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 06
0066h vmovdqu xmmword ptr [rsp+48h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 48
006ch vmovdqu xmm0,xmmword ptr [rdi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RDI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 07
0070h vmovdqu xmmword ptr [rsp+38h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 38
0076h lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
007bh mov [r9],rcx                  ; MOV(Mov_rm64_r64) [mem(64u,R9:br,DS:sr),RCX]         encoding(3 bytes) = 49 89 09
007eh mov [r9+8],edx                ; MOV(Mov_rm32_r32) [mem(32u,R9:br,DS:sr),EDX]         encoding(4 bytes) = 41 89 51 08
0082h mov rcx,r8                    ; MOV(Mov_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 8b c8
0085h lea rdx,[rsp+48h]             ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 54 24 48
008ah lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
008fh lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
0094h call 7FFC872C32D0h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFF9E0h:jmp64]        encoding(5 bytes) = e8 47 f9 ff ff
0099h mov rax,rbx                   ; MOV(Mov_r64_rm64) [RAX,RBX]                          encoding(3 bytes) = 48 8b c3
009ch add rsp,60h                   ; ADD(Add_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 c4 60
00a0h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
00a1h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
00a2h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
00a3h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
00a4h pop r12                       ; POP(Pop_r64) [R12]                                   encoding(2 bytes) = 41 5c
00a6h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
00a8h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
00aah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
00abh mov ecx,0B83h                 ; MOV(Mov_r32_imm32) [ECX,b83h:imm32]                  encoding(5 bytes) = b9 83 0b 00 00
00b0h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00bah call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F470030h:jmp64]                encoding(5 bytes) = e8 71 ff 46 5f
00bfh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
00c2h mov ecx,0B89h                 ; MOV(Mov_r32_imm32) [ECX,b89h:imm32]                  encoding(5 bytes) = b9 89 0b 00 00
00c7h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00d1h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F470030h:jmp64]                encoding(5 bytes) = e8 5a ff 46 5f
00d6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00d9h lea r8,[rsp+58h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 58
00deh mov [r8],r14b                 ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),R14L]           encoding(3 bytes) = 45 88 30
00e1h mov [r8+4],ebp                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBP]         encoding(4 bytes) = 41 89 68 04
00e5h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00e8h mov ecx,r15d                  ; MOV(Mov_r32_rm32) [ECX,R15D]                         encoding(3 bytes) = 41 8b cf
00ebh mov edx,r12d                  ; MOV(Mov_r32_rm32) [EDX,R12D]                         encoding(3 bytes) = 41 8b d4
00eeh mov rax,[rsp+58h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 58
00f3h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00f8h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFC9A688h:jmp64]        encoding(5 bytes) = e8 8b a5 c9 ff
00fdh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
0100h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F453060h:jmp64]                encoding(5 bytes) = e8 5b 2f 45 5f
0105h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> ltBytes => new byte[262]{0x41,0x57,0x41,0x56,0x41,0x54,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x60,0xC5,0xF8,0x77,0x48,0x8B,0xF1,0x48,0x8D,0x7C,0x24,0x28,0xB9,0x0C,0x00,0x00,0x00,0x33,0xC0,0xF3,0xAB,0x48,0x8B,0xCE,0x48,0x8B,0xD9,0x48,0x8B,0xF2,0x49,0x8B,0xF8,0xBD,0x87,0x00,0x00,0x00,0x41,0xBE,0x01,0x00,0x00,0x00,0x44,0x8B,0x7E,0x08,0x44,0x8B,0x67,0x08,0x45,0x3B,0xFC,0x75,0x65,0x49,0x63,0xD7,0x48,0xB9,0xE8,0x98,0xFF,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x58,0x5B,0x47,0x5F,0x48,0x8D,0x48,0x10,0x8B,0x50,0x08,0x4C,0x8B,0xC3,0xC5,0xFA,0x6F,0x06,0xC5,0xFA,0x7F,0x44,0x24,0x48,0xC5,0xFA,0x6F,0x07,0xC5,0xFA,0x7F,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0x49,0x89,0x09,0x41,0x89,0x51,0x08,0x49,0x8B,0xC8,0x48,0x8D,0x54,0x24,0x48,0x4C,0x8D,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0xE8,0x47,0xF9,0xFF,0xFF,0x48,0x8B,0xC3,0x48,0x83,0xC4,0x60,0x5B,0x5D,0x5E,0x5F,0x41,0x5C,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0x83,0x0B,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x71,0xFF,0x46,0x5F,0x48,0x8B,0xF0,0xB9,0x89,0x0B,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x5A,0xFF,0x46,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x58,0x45,0x88,0x30,0x41,0x89,0x68,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCF,0x41,0x8B,0xD4,0x48,0x8B,0x44,0x24,0x58,0x48,0x89,0x44,0x24,0x20,0xE8,0x8B,0xA5,0xC9,0xFF,0x48,0x8B,0xC8,0xE8,0x5B,0x2F,0x45,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<long> dec(Span<long> io)
; location: [7FFC872C3A20h, 7FFC872C3A4Dh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,[rdx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 02
0008h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
000bh xor r8d,r8d                   ; XOR(Xor_r32_rm32) [R8D,R8D]                          encoding(3 bytes) = 45 33 c0
000eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0010h jle short 0024h               ; JLE(Jle_rel8_64) [24h:jmp64]                         encoding(2 bytes) = 7e 12
0012h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0015h lea r9,[rax+r9*8]             ; LEA(Lea_r64_m) [R9,mem(Unknown,RAX:br,DS:sr)]        encoding(4 bytes) = 4e 8d 0c c8
0019h dec qword ptr [r9]            ; DEC(Dec_rm64) [mem(64u,R9:br,DS:sr)]                 encoding(3 bytes) = 49 ff 09
001ch inc r8d                       ; INC(Inc_rm32) [R8D]                                  encoding(3 bytes) = 41 ff c0
001fh cmp r8d,edx                   ; CMP(Cmp_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 3b c2
0022h jl short 0012h                ; JL(Jl_rel8_64) [12h:jmp64]                           encoding(2 bytes) = 7c ee
0024h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0027h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
002ah mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
002dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> decBytes => new byte[46]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x02,0x8B,0x52,0x08,0x45,0x33,0xC0,0x85,0xD2,0x7E,0x12,0x4D,0x63,0xC8,0x4E,0x8D,0x0C,0xC8,0x49,0xFF,0x09,0x41,0xFF,0xC0,0x44,0x3B,0xC2,0x7C,0xEE,0x48,0x89,0x01,0x89,0x51,0x08,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<ulong> dec(Span<ulong> io)
; location: [7FFC872C3A60h, 7FFC872C3A8Dh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,[rdx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 02
0008h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
000bh xor r8d,r8d                   ; XOR(Xor_r32_rm32) [R8D,R8D]                          encoding(3 bytes) = 45 33 c0
000eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0010h jle short 0024h               ; JLE(Jle_rel8_64) [24h:jmp64]                         encoding(2 bytes) = 7e 12
0012h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0015h lea r9,[rax+r9*8]             ; LEA(Lea_r64_m) [R9,mem(Unknown,RAX:br,DS:sr)]        encoding(4 bytes) = 4e 8d 0c c8
0019h dec qword ptr [r9]            ; DEC(Dec_rm64) [mem(64u,R9:br,DS:sr)]                 encoding(3 bytes) = 49 ff 09
001ch inc r8d                       ; INC(Inc_rm32) [R8D]                                  encoding(3 bytes) = 41 ff c0
001fh cmp r8d,edx                   ; CMP(Cmp_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 3b c2
0022h jl short 0012h                ; JL(Jl_rel8_64) [12h:jmp64]                           encoding(2 bytes) = 7c ee
0024h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0027h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
002ah mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
002dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> decBytes => new byte[46]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x02,0x8B,0x52,0x08,0x45,0x33,0xC0,0x85,0xD2,0x7E,0x12,0x4D,0x63,0xC8,0x4E,0x8D,0x0C,0xC8,0x49,0xFF,0x09,0x41,0xFF,0xC0,0x44,0x3B,0xC2,0x7C,0xEE,0x48,0x89,0x01,0x89,0x51,0x08,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool divides(sbyte lhs, sbyte rhs)
; location: [7FFC872C3AA0h, 7FFC872C3AB8h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,dl                  ; MOVSX(Movsx_r64_rm8) [RAX,DL]                        encoding(4 bytes) = 48 0f be c2
0009h movsx rcx,cl                  ; MOVSX(Movsx_r64_rm8) [RCX,CL]                        encoding(4 bytes) = 48 0f be c9
000dh cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
000eh idiv ecx                      ; IDIV(Idiv_rm32) [ECX]                                encoding(2 bytes) = f7 f9
0010h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0012h sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
0015h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0018h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> dividesBytes => new byte[25]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBE,0xC2,0x48,0x0F,0xBE,0xC9,0x99,0xF7,0xF9,0x85,0xD2,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool divides(byte lhs, byte rhs)
; location: [7FFC872C3AD0h, 7FFC872C3AE6h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,dl                  ; MOVZX(Movzx_r32_rm8) [EAX,DL]                        encoding(3 bytes) = 0f b6 c2
0008h movzx ecx,cl                  ; MOVZX(Movzx_r32_rm8) [ECX,CL]                        encoding(3 bytes) = 0f b6 c9
000bh cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
000ch idiv ecx                      ; IDIV(Idiv_rm32) [ECX]                                encoding(2 bytes) = f7 f9
000eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0010h sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
0013h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0016h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> dividesBytes => new byte[23]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC2,0x0F,0xB6,0xC9,0x99,0xF7,0xF9,0x85,0xD2,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool divides(short lhs, short rhs)
; location: [7FFC872C3B00h, 7FFC872C3B18h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,dx                  ; MOVSX(Movsx_r64_rm16) [RAX,DX]                       encoding(4 bytes) = 48 0f bf c2
0009h movsx rcx,cx                  ; MOVSX(Movsx_r64_rm16) [RCX,CX]                       encoding(4 bytes) = 48 0f bf c9
000dh cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
000eh idiv ecx                      ; IDIV(Idiv_rm32) [ECX]                                encoding(2 bytes) = f7 f9
0010h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0012h sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
0015h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0018h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> dividesBytes => new byte[25]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBF,0xC2,0x48,0x0F,0xBF,0xC9,0x99,0xF7,0xF9,0x85,0xD2,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool divides(ushort lhs, ushort rhs)
; location: [7FFC872C3B30h, 7FFC872C3B46h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,dx                  ; MOVZX(Movzx_r32_rm16) [EAX,DX]                       encoding(3 bytes) = 0f b7 c2
0008h movzx ecx,cx                  ; MOVZX(Movzx_r32_rm16) [ECX,CX]                       encoding(3 bytes) = 0f b7 c9
000bh cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
000ch idiv ecx                      ; IDIV(Idiv_rm32) [ECX]                                encoding(2 bytes) = f7 f9
000eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0010h sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
0013h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0016h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> dividesBytes => new byte[23]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB7,0xC2,0x0F,0xB7,0xC9,0x99,0xF7,0xF9,0x85,0xD2,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool divides(int lhs, int rhs)
; location: [7FFC872C3B60h, 7FFC872C3B72h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov eax,edx                   ; MOV(Mov_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 8b c2
0007h cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
0008h idiv ecx                      ; IDIV(Idiv_rm32) [ECX]                                encoding(2 bytes) = f7 f9
000ah test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
000ch sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
000fh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0012h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> dividesBytes => new byte[19]{0x0F,0x1F,0x44,0x00,0x00,0x8B,0xC2,0x99,0xF7,0xF9,0x85,0xD2,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool divides(uint lhs, uint rhs)
; location: [7FFC872C3B90h, 7FFC872C3BA3h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov eax,edx                   ; MOV(Mov_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 8b c2
0007h xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
0009h div ecx                       ; DIV(Div_rm32) [ECX]                                  encoding(2 bytes) = f7 f1
000bh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
000dh sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
0010h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> dividesBytes => new byte[20]{0x0F,0x1F,0x44,0x00,0x00,0x8B,0xC2,0x33,0xD2,0xF7,0xF1,0x85,0xD2,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool divides(long lhs, long rhs)
; location: [7FFC872C3BC0h, 7FFC872C3BD6h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,rdx                   ; MOV(Mov_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 8b c2
0008h cqo                           ; CQO(Cqo)                                             encoding(2 bytes) = 48 99
000ah idiv rcx                      ; IDIV(Idiv_rm64) [RCX]                                encoding(3 bytes) = 48 f7 f9
000dh test rdx,rdx                  ; TEST(Test_rm64_r64) [RDX,RDX]                        encoding(3 bytes) = 48 85 d2
0010h sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
0013h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0016h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> dividesBytes => new byte[23]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0xC2,0x48,0x99,0x48,0xF7,0xF9,0x48,0x85,0xD2,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool divides(ulong lhs, ulong rhs)
; location: [7FFC872C3BF0h, 7FFC872C3C06h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,rdx                   ; MOV(Mov_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 8b c2
0008h xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
000ah div rcx                       ; DIV(Div_rm64) [RCX]                                  encoding(3 bytes) = 48 f7 f1
000dh test rdx,rdx                  ; TEST(Test_rm64_r64) [RDX,RDX]                        encoding(3 bytes) = 48 85 d2
0010h sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
0013h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0016h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> dividesBytes => new byte[23]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0xC2,0x33,0xD2,0x48,0xF7,0xF1,0x48,0x85,0xD2,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: sbyte dot(ReadOnlySpan<sbyte> lhs, ReadOnlySpan<sbyte> rhs)
; location: [7FFC872C3C20h, 7FFC872C3CE7h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[rdx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 02
000dh mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0010h mov r8,[rcx]                  ; MOV(Mov_r64_rm64) [R8,mem(64u,RCX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 01
0013h mov ecx,[rcx+8]               ; MOV(Mov_r32_rm32) [ECX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 49 08
0016h mov esi,1Ch                   ; MOV(Mov_r32_imm32) [ESI,1ch:imm32]                   encoding(5 bytes) = be 1c 00 00 00
001bh mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0020h mov ebx,ecx                   ; MOV(Mov_r32_rm32) [EBX,ECX]                          encoding(2 bytes) = 8b d9
0022h mov ebp,edx                   ; MOV(Mov_r32_rm32) [EBP,EDX]                          encoding(2 bytes) = 8b ea
0024h cmp ecx,edx                   ; CMP(Cmp_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 3b ca
0026h jne short 0069h               ; JNE(Jne_rel8_64) [69h:jmp64]                         encoding(2 bytes) = 75 41
0028h xor r9d,r9d                   ; XOR(Xor_r32_rm32) [R9D,R9D]                          encoding(3 bytes) = 45 33 c9
002bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
002eh test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
0030h jle short 005bh               ; JLE(Jle_rel8_64) [5Bh:jmp64]                         encoding(2 bytes) = 7e 29
0032h movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
0035h movsx rbx,byte ptr [r8+r11]   ; MOVSX(Movsx_r64_rm8) [RBX,mem(8i,R8:br,DS:sr)]       encoding(5 bytes) = 4b 0f be 1c 18
003ah cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
003dh jae near ptr 00c2h            ; JAE(Jae_rel32_64) [C2h:jmp64]                        encoding(6 bytes) = 0f 83 7f 00 00 00
0043h movsx r11,byte ptr [rax+r11]  ; MOVSX(Movsx_r64_rm8) [R11,mem(8i,RAX:br,DS:sr)]      encoding(5 bytes) = 4e 0f be 1c 18
0048h imul r11d,ebx                 ; IMUL(Imul_r32_rm32) [R11D,EBX]                       encoding(4 bytes) = 44 0f af db
004ch add r9d,r11d                  ; ADD(Add_r32_rm32) [R9D,R11D]                         encoding(3 bytes) = 45 03 cb
004fh movsx r9,r9b                  ; MOVSX(Movsx_r64_rm8) [R9,R9L]                        encoding(4 bytes) = 4d 0f be c9
0053h inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
0056h cmp r10d,ecx                  ; CMP(Cmp_r32_rm32) [R10D,ECX]                         encoding(3 bytes) = 44 3b d1
0059h jl short 0032h                ; JL(Jl_rel8_64) [32h:jmp64]                           encoding(2 bytes) = 7c d7
005bh mov eax,r9d                   ; MOV(Mov_r32_rm32) [EAX,R9D]                          encoding(3 bytes) = 41 8b c1
005eh add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0062h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0063h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0064h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0065h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0066h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0068h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0069h mov ecx,181h                  ; MOV(Mov_r32_imm32) [ECX,181h:imm32]                  encoding(5 bytes) = b9 81 01 00 00
006eh mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0078h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F46FD00h:jmp64]                encoding(5 bytes) = e8 83 fc 46 5f
007dh mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0080h mov ecx,9C9h                  ; MOV(Mov_r32_imm32) [ECX,9c9h:imm32]                  encoding(5 bytes) = b9 c9 09 00 00
0085h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
008fh call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F46FD00h:jmp64]                encoding(5 bytes) = e8 6c fc 46 5f
0094h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
0097h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
009ch mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
009fh mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00a3h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00a6h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00a8h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00aah mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00afh mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b4h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFC9A358h:jmp64]        encoding(5 bytes) = e8 9f a2 c9 ff
00b9h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00bch call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F452D30h:jmp64]                encoding(5 bytes) = e8 6f 2c 45 5f
00c1h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00c2h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A1190h:jmp64]                encoding(5 bytes) = e8 c9 10 5a 5f
00c7h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> dotBytes => new byte[200]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x48,0x8B,0x02,0x8B,0x52,0x08,0x4C,0x8B,0x01,0x8B,0x49,0x08,0xBE,0x1C,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xD9,0x8B,0xEA,0x3B,0xCA,0x75,0x41,0x45,0x33,0xC9,0x45,0x33,0xD2,0x85,0xC9,0x7E,0x29,0x4D,0x63,0xDA,0x4B,0x0F,0xBE,0x1C,0x18,0x44,0x3B,0xD2,0x0F,0x83,0x7F,0x00,0x00,0x00,0x4E,0x0F,0xBE,0x1C,0x18,0x44,0x0F,0xAF,0xDB,0x45,0x03,0xCB,0x4D,0x0F,0xBE,0xC9,0x41,0xFF,0xC2,0x44,0x3B,0xD1,0x7C,0xD7,0x41,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x81,0x01,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x83,0xFC,0x46,0x5F,0x4C,0x8B,0xF0,0xB9,0xC9,0x09,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x6C,0xFC,0x46,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x9F,0xA2,0xC9,0xFF,0x48,0x8B,0xC8,0xE8,0x6F,0x2C,0x45,0x5F,0xCC,0xE8,0xC9,0x10,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: byte dot(ReadOnlySpan<byte> lhs, ReadOnlySpan<byte> rhs)
; location: [7FFC872C3D10h, 7FFC872C3DD7h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[rdx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 02
000dh mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0010h mov r8,[rcx]                  ; MOV(Mov_r64_rm64) [R8,mem(64u,RCX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 01
0013h mov ecx,[rcx+8]               ; MOV(Mov_r32_rm32) [ECX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 49 08
0016h mov esi,2Ah                   ; MOV(Mov_r32_imm32) [ESI,2ah:imm32]                   encoding(5 bytes) = be 2a 00 00 00
001bh mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0020h mov ebx,ecx                   ; MOV(Mov_r32_rm32) [EBX,ECX]                          encoding(2 bytes) = 8b d9
0022h mov ebp,edx                   ; MOV(Mov_r32_rm32) [EBP,EDX]                          encoding(2 bytes) = 8b ea
0024h cmp ecx,edx                   ; CMP(Cmp_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 3b ca
0026h jne short 0069h               ; JNE(Jne_rel8_64) [69h:jmp64]                         encoding(2 bytes) = 75 41
0028h xor r9d,r9d                   ; XOR(Xor_r32_rm32) [R9D,R9D]                          encoding(3 bytes) = 45 33 c9
002bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
002eh test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
0030h jle short 005bh               ; JLE(Jle_rel8_64) [5Bh:jmp64]                         encoding(2 bytes) = 7e 29
0032h movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
0035h movzx ebx,byte ptr [r8+r11]   ; MOVZX(Movzx_r32_rm8) [EBX,mem(8u,R8:br,DS:sr)]       encoding(5 bytes) = 43 0f b6 1c 18
003ah cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
003dh jae near ptr 00c2h            ; JAE(Jae_rel32_64) [C2h:jmp64]                        encoding(6 bytes) = 0f 83 7f 00 00 00
0043h movzx r11d,byte ptr [rax+r11] ; MOVZX(Movzx_r32_rm8) [R11D,mem(8u,RAX:br,DS:sr)]     encoding(5 bytes) = 46 0f b6 1c 18
0048h imul r11d,ebx                 ; IMUL(Imul_r32_rm32) [R11D,EBX]                       encoding(4 bytes) = 44 0f af db
004ch add r9d,r11d                  ; ADD(Add_r32_rm32) [R9D,R11D]                         encoding(3 bytes) = 45 03 cb
004fh movzx r9d,r9b                 ; MOVZX(Movzx_r32_rm8) [R9D,R9L]                       encoding(4 bytes) = 45 0f b6 c9
0053h inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
0056h cmp r10d,ecx                  ; CMP(Cmp_r32_rm32) [R10D,ECX]                         encoding(3 bytes) = 44 3b d1
0059h jl short 0032h                ; JL(Jl_rel8_64) [32h:jmp64]                           encoding(2 bytes) = 7c d7
005bh mov eax,r9d                   ; MOV(Mov_r32_rm32) [EAX,R9D]                          encoding(3 bytes) = 41 8b c1
005eh add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0062h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0063h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0064h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0065h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0066h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0068h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0069h mov ecx,181h                  ; MOV(Mov_r32_imm32) [ECX,181h:imm32]                  encoding(5 bytes) = b9 81 01 00 00
006eh mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0078h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F46FC10h:jmp64]                encoding(5 bytes) = e8 93 fb 46 5f
007dh mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0080h mov ecx,9C9h                  ; MOV(Mov_r32_imm32) [ECX,9c9h:imm32]                  encoding(5 bytes) = b9 c9 09 00 00
0085h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
008fh call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F46FC10h:jmp64]                encoding(5 bytes) = e8 7c fb 46 5f
0094h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
0097h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
009ch mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
009fh mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00a3h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00a6h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00a8h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00aah mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00afh mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b4h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFC9A268h:jmp64]        encoding(5 bytes) = e8 af a1 c9 ff
00b9h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00bch call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F452C40h:jmp64]                encoding(5 bytes) = e8 7f 2b 45 5f
00c1h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00c2h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A10A0h:jmp64]                encoding(5 bytes) = e8 d9 0f 5a 5f
00c7h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> dotBytes => new byte[200]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x48,0x8B,0x02,0x8B,0x52,0x08,0x4C,0x8B,0x01,0x8B,0x49,0x08,0xBE,0x2A,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xD9,0x8B,0xEA,0x3B,0xCA,0x75,0x41,0x45,0x33,0xC9,0x45,0x33,0xD2,0x85,0xC9,0x7E,0x29,0x4D,0x63,0xDA,0x43,0x0F,0xB6,0x1C,0x18,0x44,0x3B,0xD2,0x0F,0x83,0x7F,0x00,0x00,0x00,0x46,0x0F,0xB6,0x1C,0x18,0x44,0x0F,0xAF,0xDB,0x45,0x03,0xCB,0x45,0x0F,0xB6,0xC9,0x41,0xFF,0xC2,0x44,0x3B,0xD1,0x7C,0xD7,0x41,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x81,0x01,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x93,0xFB,0x46,0x5F,0x4C,0x8B,0xF0,0xB9,0xC9,0x09,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x7C,0xFB,0x46,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0xAF,0xA1,0xC9,0xFF,0x48,0x8B,0xC8,0xE8,0x7F,0x2B,0x45,0x5F,0xCC,0xE8,0xD9,0x0F,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: short dot(ReadOnlySpan<short> lhs, ReadOnlySpan<short> rhs)
; location: [7FFC872C3E00h, 7FFC872C3EC7h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[rdx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 02
000dh mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0010h mov r8,[rcx]                  ; MOV(Mov_r64_rm64) [R8,mem(64u,RCX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 01
0013h mov ecx,[rcx+8]               ; MOV(Mov_r32_rm32) [ECX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 49 08
0016h mov esi,38h                   ; MOV(Mov_r32_imm32) [ESI,38h:imm32]                   encoding(5 bytes) = be 38 00 00 00
001bh mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0020h mov ebx,ecx                   ; MOV(Mov_r32_rm32) [EBX,ECX]                          encoding(2 bytes) = 8b d9
0022h mov ebp,edx                   ; MOV(Mov_r32_rm32) [EBP,EDX]                          encoding(2 bytes) = 8b ea
0024h cmp ecx,edx                   ; CMP(Cmp_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 3b ca
0026h jne short 0069h               ; JNE(Jne_rel8_64) [69h:jmp64]                         encoding(2 bytes) = 75 41
0028h xor r9d,r9d                   ; XOR(Xor_r32_rm32) [R9D,R9D]                          encoding(3 bytes) = 45 33 c9
002bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
002eh test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
0030h jle short 005bh               ; JLE(Jle_rel8_64) [5Bh:jmp64]                         encoding(2 bytes) = 7e 29
0032h movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
0035h movsx rbx,word ptr [r8+r11*2] ; MOVSX(Movsx_r64_rm16) [RBX,mem(16i,R8:br,DS:sr)]     encoding(5 bytes) = 4b 0f bf 1c 58
003ah cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
003dh jae near ptr 00c2h            ; JAE(Jae_rel32_64) [C2h:jmp64]                        encoding(6 bytes) = 0f 83 7f 00 00 00
0043h movsx r11,word ptr [rax+r11*2]; MOVSX(Movsx_r64_rm16) [R11,mem(16i,RAX:br,DS:sr)]    encoding(5 bytes) = 4e 0f bf 1c 58
0048h imul r11d,ebx                 ; IMUL(Imul_r32_rm32) [R11D,EBX]                       encoding(4 bytes) = 44 0f af db
004ch add r9d,r11d                  ; ADD(Add_r32_rm32) [R9D,R11D]                         encoding(3 bytes) = 45 03 cb
004fh movsx r9,r9w                  ; MOVSX(Movsx_r64_rm16) [R9,R9W]                       encoding(4 bytes) = 4d 0f bf c9
0053h inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
0056h cmp r10d,ecx                  ; CMP(Cmp_r32_rm32) [R10D,ECX]                         encoding(3 bytes) = 44 3b d1
0059h jl short 0032h                ; JL(Jl_rel8_64) [32h:jmp64]                           encoding(2 bytes) = 7c d7
005bh mov eax,r9d                   ; MOV(Mov_r32_rm32) [EAX,R9D]                          encoding(3 bytes) = 41 8b c1
005eh add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0062h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0063h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0064h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0065h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0066h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0068h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0069h mov ecx,181h                  ; MOV(Mov_r32_imm32) [ECX,181h:imm32]                  encoding(5 bytes) = b9 81 01 00 00
006eh mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0078h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F46FB20h:jmp64]                encoding(5 bytes) = e8 a3 fa 46 5f
007dh mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0080h mov ecx,9C9h                  ; MOV(Mov_r32_imm32) [ECX,9c9h:imm32]                  encoding(5 bytes) = b9 c9 09 00 00
0085h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
008fh call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F46FB20h:jmp64]                encoding(5 bytes) = e8 8c fa 46 5f
0094h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
0097h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
009ch mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
009fh mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00a3h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00a6h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00a8h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00aah mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00afh mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b4h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFC9A178h:jmp64]        encoding(5 bytes) = e8 bf a0 c9 ff
00b9h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00bch call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F452B50h:jmp64]                encoding(5 bytes) = e8 8f 2a 45 5f
00c1h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00c2h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A0FB0h:jmp64]                encoding(5 bytes) = e8 e9 0e 5a 5f
00c7h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> dotBytes => new byte[200]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x48,0x8B,0x02,0x8B,0x52,0x08,0x4C,0x8B,0x01,0x8B,0x49,0x08,0xBE,0x38,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xD9,0x8B,0xEA,0x3B,0xCA,0x75,0x41,0x45,0x33,0xC9,0x45,0x33,0xD2,0x85,0xC9,0x7E,0x29,0x4D,0x63,0xDA,0x4B,0x0F,0xBF,0x1C,0x58,0x44,0x3B,0xD2,0x0F,0x83,0x7F,0x00,0x00,0x00,0x4E,0x0F,0xBF,0x1C,0x58,0x44,0x0F,0xAF,0xDB,0x45,0x03,0xCB,0x4D,0x0F,0xBF,0xC9,0x41,0xFF,0xC2,0x44,0x3B,0xD1,0x7C,0xD7,0x41,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x81,0x01,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xA3,0xFA,0x46,0x5F,0x4C,0x8B,0xF0,0xB9,0xC9,0x09,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x8C,0xFA,0x46,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0xBF,0xA0,0xC9,0xFF,0x48,0x8B,0xC8,0xE8,0x8F,0x2A,0x45,0x5F,0xCC,0xE8,0xE9,0x0E,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ushort dot(ReadOnlySpan<ushort> lhs, ReadOnlySpan<ushort> rhs)
; location: [7FFC872C3EF0h, 7FFC872C3FB7h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[rdx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 02
000dh mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0010h mov r8,[rcx]                  ; MOV(Mov_r64_rm64) [R8,mem(64u,RCX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 01
0013h mov ecx,[rcx+8]               ; MOV(Mov_r32_rm32) [ECX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 49 08
0016h mov esi,46h                   ; MOV(Mov_r32_imm32) [ESI,46h:imm32]                   encoding(5 bytes) = be 46 00 00 00
001bh mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0020h mov ebx,ecx                   ; MOV(Mov_r32_rm32) [EBX,ECX]                          encoding(2 bytes) = 8b d9
0022h mov ebp,edx                   ; MOV(Mov_r32_rm32) [EBP,EDX]                          encoding(2 bytes) = 8b ea
0024h cmp ecx,edx                   ; CMP(Cmp_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 3b ca
0026h jne short 0069h               ; JNE(Jne_rel8_64) [69h:jmp64]                         encoding(2 bytes) = 75 41
0028h xor r9d,r9d                   ; XOR(Xor_r32_rm32) [R9D,R9D]                          encoding(3 bytes) = 45 33 c9
002bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
002eh test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
0030h jle short 005bh               ; JLE(Jle_rel8_64) [5Bh:jmp64]                         encoding(2 bytes) = 7e 29
0032h movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
0035h movzx ebx,word ptr [r8+r11*2] ; MOVZX(Movzx_r32_rm16) [EBX,mem(16u,R8:br,DS:sr)]     encoding(5 bytes) = 43 0f b7 1c 58
003ah cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
003dh jae near ptr 00c2h            ; JAE(Jae_rel32_64) [C2h:jmp64]                        encoding(6 bytes) = 0f 83 7f 00 00 00
0043h movzx r11d,word ptr [rax+r11*2]; MOVZX(Movzx_r32_rm16) [R11D,mem(16u,RAX:br,DS:sr)]  encoding(5 bytes) = 46 0f b7 1c 58
0048h imul r11d,ebx                 ; IMUL(Imul_r32_rm32) [R11D,EBX]                       encoding(4 bytes) = 44 0f af db
004ch add r9d,r11d                  ; ADD(Add_r32_rm32) [R9D,R11D]                         encoding(3 bytes) = 45 03 cb
004fh movzx r9d,r9w                 ; MOVZX(Movzx_r32_rm16) [R9D,R9W]                      encoding(4 bytes) = 45 0f b7 c9
0053h inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
0056h cmp r10d,ecx                  ; CMP(Cmp_r32_rm32) [R10D,ECX]                         encoding(3 bytes) = 44 3b d1
0059h jl short 0032h                ; JL(Jl_rel8_64) [32h:jmp64]                           encoding(2 bytes) = 7c d7
005bh mov eax,r9d                   ; MOV(Mov_r32_rm32) [EAX,R9D]                          encoding(3 bytes) = 41 8b c1
005eh add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0062h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0063h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0064h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0065h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0066h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0068h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0069h mov ecx,181h                  ; MOV(Mov_r32_imm32) [ECX,181h:imm32]                  encoding(5 bytes) = b9 81 01 00 00
006eh mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0078h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F46FA30h:jmp64]                encoding(5 bytes) = e8 b3 f9 46 5f
007dh mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0080h mov ecx,9C9h                  ; MOV(Mov_r32_imm32) [ECX,9c9h:imm32]                  encoding(5 bytes) = b9 c9 09 00 00
0085h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
008fh call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F46FA30h:jmp64]                encoding(5 bytes) = e8 9c f9 46 5f
0094h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
0097h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
009ch mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
009fh mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00a3h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00a6h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00a8h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00aah mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00afh mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b4h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFC9A088h:jmp64]        encoding(5 bytes) = e8 cf 9f c9 ff
00b9h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00bch call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F452A60h:jmp64]                encoding(5 bytes) = e8 9f 29 45 5f
00c1h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00c2h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A0EC0h:jmp64]                encoding(5 bytes) = e8 f9 0d 5a 5f
00c7h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> dotBytes => new byte[200]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x48,0x8B,0x02,0x8B,0x52,0x08,0x4C,0x8B,0x01,0x8B,0x49,0x08,0xBE,0x46,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xD9,0x8B,0xEA,0x3B,0xCA,0x75,0x41,0x45,0x33,0xC9,0x45,0x33,0xD2,0x85,0xC9,0x7E,0x29,0x4D,0x63,0xDA,0x43,0x0F,0xB7,0x1C,0x58,0x44,0x3B,0xD2,0x0F,0x83,0x7F,0x00,0x00,0x00,0x46,0x0F,0xB7,0x1C,0x58,0x44,0x0F,0xAF,0xDB,0x45,0x03,0xCB,0x45,0x0F,0xB7,0xC9,0x41,0xFF,0xC2,0x44,0x3B,0xD1,0x7C,0xD7,0x41,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x81,0x01,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xB3,0xF9,0x46,0x5F,0x4C,0x8B,0xF0,0xB9,0xC9,0x09,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x9C,0xF9,0x46,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0xCF,0x9F,0xC9,0xFF,0x48,0x8B,0xC8,0xE8,0x9F,0x29,0x45,0x5F,0xCC,0xE8,0xF9,0x0D,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: int dot(ReadOnlySpan<int> lhs, ReadOnlySpan<int> rhs)
; location: [7FFC872C3FE0h, 7FFC872C409Dh]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[rdx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 02
000dh mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0010h mov r8,[rcx]                  ; MOV(Mov_r64_rm64) [R8,mem(64u,RCX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 01
0013h mov ecx,[rcx+8]               ; MOV(Mov_r32_rm32) [ECX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 49 08
0016h mov esi,54h                   ; MOV(Mov_r32_imm32) [ESI,54h:imm32]                   encoding(5 bytes) = be 54 00 00 00
001bh mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0020h mov ebx,ecx                   ; MOV(Mov_r32_rm32) [EBX,ECX]                          encoding(2 bytes) = 8b d9
0022h mov ebp,edx                   ; MOV(Mov_r32_rm32) [EBP,EDX]                          encoding(2 bytes) = 8b ea
0024h cmp ecx,edx                   ; CMP(Cmp_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 3b ca
0026h jne short 005fh               ; JNE(Jne_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 75 37
0028h xor r9d,r9d                   ; XOR(Xor_r32_rm32) [R9D,R9D]                          encoding(3 bytes) = 45 33 c9
002bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
002eh test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
0030h jle short 0051h               ; JLE(Jle_rel8_64) [51h:jmp64]                         encoding(2 bytes) = 7e 1f
0032h movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
0035h mov ebx,[r8+r11*4]            ; MOV(Mov_r32_rm32) [EBX,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 43 8b 1c 98
0039h cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
003ch jae short 00b8h               ; JAE(Jae_rel8_64) [B8h:jmp64]                         encoding(2 bytes) = 73 7a
003eh mov r11d,[rax+r11*4]          ; MOV(Mov_r32_rm32) [R11D,mem(32u,RAX:br,DS:sr)]       encoding(4 bytes) = 46 8b 1c 98
0042h imul r11d,ebx                 ; IMUL(Imul_r32_rm32) [R11D,EBX]                       encoding(4 bytes) = 44 0f af db
0046h add r9d,r11d                  ; ADD(Add_r32_rm32) [R9D,R11D]                         encoding(3 bytes) = 45 03 cb
0049h inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
004ch cmp r10d,ecx                  ; CMP(Cmp_r32_rm32) [R10D,ECX]                         encoding(3 bytes) = 44 3b d1
004fh jl short 0032h                ; JL(Jl_rel8_64) [32h:jmp64]                           encoding(2 bytes) = 7c e1
0051h mov eax,r9d                   ; MOV(Mov_r32_rm32) [EAX,R9D]                          encoding(3 bytes) = 41 8b c1
0054h add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0058h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0059h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
005ah pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
005bh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
005ch pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
005eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
005fh mov ecx,181h                  ; MOV(Mov_r32_imm32) [ECX,181h:imm32]                  encoding(5 bytes) = b9 81 01 00 00
0064h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
006eh call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F46F940h:jmp64]                encoding(5 bytes) = e8 cd f8 46 5f
0073h mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0076h mov ecx,9C9h                  ; MOV(Mov_r32_imm32) [ECX,9c9h:imm32]                  encoding(5 bytes) = b9 c9 09 00 00
007bh mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0085h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F46F940h:jmp64]                encoding(5 bytes) = e8 b6 f8 46 5f
008ah mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
008dh lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
0092h mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
0095h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
0099h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
009ch mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
009eh mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00a0h mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00a5h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00aah call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFC99F98h:jmp64]        encoding(5 bytes) = e8 e9 9e c9 ff
00afh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00b2h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F452970h:jmp64]                encoding(5 bytes) = e8 b9 28 45 5f
00b7h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00b8h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A0DD0h:jmp64]                encoding(5 bytes) = e8 13 0d 5a 5f
00bdh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> dotBytes => new byte[190]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x48,0x8B,0x02,0x8B,0x52,0x08,0x4C,0x8B,0x01,0x8B,0x49,0x08,0xBE,0x54,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xD9,0x8B,0xEA,0x3B,0xCA,0x75,0x37,0x45,0x33,0xC9,0x45,0x33,0xD2,0x85,0xC9,0x7E,0x1F,0x4D,0x63,0xDA,0x43,0x8B,0x1C,0x98,0x44,0x3B,0xD2,0x73,0x7A,0x46,0x8B,0x1C,0x98,0x44,0x0F,0xAF,0xDB,0x45,0x03,0xCB,0x41,0xFF,0xC2,0x44,0x3B,0xD1,0x7C,0xE1,0x41,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x81,0x01,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xCD,0xF8,0x46,0x5F,0x4C,0x8B,0xF0,0xB9,0xC9,0x09,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xB6,0xF8,0x46,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0xE9,0x9E,0xC9,0xFF,0x48,0x8B,0xC8,0xE8,0xB9,0x28,0x45,0x5F,0xCC,0xE8,0x13,0x0D,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: uint dot(ReadOnlySpan<uint> lhs, ReadOnlySpan<uint> rhs)
; location: [7FFC872C40C0h, 7FFC872C417Dh]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[rdx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 02
000dh mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0010h mov r8,[rcx]                  ; MOV(Mov_r64_rm64) [R8,mem(64u,RCX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 01
0013h mov ecx,[rcx+8]               ; MOV(Mov_r32_rm32) [ECX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 49 08
0016h mov esi,62h                   ; MOV(Mov_r32_imm32) [ESI,62h:imm32]                   encoding(5 bytes) = be 62 00 00 00
001bh mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0020h mov ebx,ecx                   ; MOV(Mov_r32_rm32) [EBX,ECX]                          encoding(2 bytes) = 8b d9
0022h mov ebp,edx                   ; MOV(Mov_r32_rm32) [EBP,EDX]                          encoding(2 bytes) = 8b ea
0024h cmp ecx,edx                   ; CMP(Cmp_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 3b ca
0026h jne short 005fh               ; JNE(Jne_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 75 37
0028h xor r9d,r9d                   ; XOR(Xor_r32_rm32) [R9D,R9D]                          encoding(3 bytes) = 45 33 c9
002bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
002eh test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
0030h jle short 0051h               ; JLE(Jle_rel8_64) [51h:jmp64]                         encoding(2 bytes) = 7e 1f
0032h movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
0035h mov ebx,[r8+r11*4]            ; MOV(Mov_r32_rm32) [EBX,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 43 8b 1c 98
0039h cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
003ch jae short 00b8h               ; JAE(Jae_rel8_64) [B8h:jmp64]                         encoding(2 bytes) = 73 7a
003eh mov r11d,[rax+r11*4]          ; MOV(Mov_r32_rm32) [R11D,mem(32u,RAX:br,DS:sr)]       encoding(4 bytes) = 46 8b 1c 98
0042h imul r11d,ebx                 ; IMUL(Imul_r32_rm32) [R11D,EBX]                       encoding(4 bytes) = 44 0f af db
0046h add r9d,r11d                  ; ADD(Add_r32_rm32) [R9D,R11D]                         encoding(3 bytes) = 45 03 cb
0049h inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
004ch cmp r10d,ecx                  ; CMP(Cmp_r32_rm32) [R10D,ECX]                         encoding(3 bytes) = 44 3b d1
004fh jl short 0032h                ; JL(Jl_rel8_64) [32h:jmp64]                           encoding(2 bytes) = 7c e1
0051h mov eax,r9d                   ; MOV(Mov_r32_rm32) [EAX,R9D]                          encoding(3 bytes) = 41 8b c1
0054h add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0058h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0059h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
005ah pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
005bh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
005ch pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
005eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
005fh mov ecx,181h                  ; MOV(Mov_r32_imm32) [ECX,181h:imm32]                  encoding(5 bytes) = b9 81 01 00 00
0064h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
006eh call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F46F860h:jmp64]                encoding(5 bytes) = e8 ed f7 46 5f
0073h mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0076h mov ecx,9C9h                  ; MOV(Mov_r32_imm32) [ECX,9c9h:imm32]                  encoding(5 bytes) = b9 c9 09 00 00
007bh mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0085h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F46F860h:jmp64]                encoding(5 bytes) = e8 d6 f7 46 5f
008ah mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
008dh lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
0092h mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
0095h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
0099h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
009ch mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
009eh mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00a0h mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00a5h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00aah call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFC99EB8h:jmp64]        encoding(5 bytes) = e8 09 9e c9 ff
00afh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00b2h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F452890h:jmp64]                encoding(5 bytes) = e8 d9 27 45 5f
00b7h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00b8h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A0CF0h:jmp64]                encoding(5 bytes) = e8 33 0c 5a 5f
00bdh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> dotBytes => new byte[190]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x48,0x8B,0x02,0x8B,0x52,0x08,0x4C,0x8B,0x01,0x8B,0x49,0x08,0xBE,0x62,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xD9,0x8B,0xEA,0x3B,0xCA,0x75,0x37,0x45,0x33,0xC9,0x45,0x33,0xD2,0x85,0xC9,0x7E,0x1F,0x4D,0x63,0xDA,0x43,0x8B,0x1C,0x98,0x44,0x3B,0xD2,0x73,0x7A,0x46,0x8B,0x1C,0x98,0x44,0x0F,0xAF,0xDB,0x45,0x03,0xCB,0x41,0xFF,0xC2,0x44,0x3B,0xD1,0x7C,0xE1,0x41,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x81,0x01,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xED,0xF7,0x46,0x5F,0x4C,0x8B,0xF0,0xB9,0xC9,0x09,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xD6,0xF7,0x46,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x09,0x9E,0xC9,0xFF,0x48,0x8B,0xC8,0xE8,0xD9,0x27,0x45,0x5F,0xCC,0xE8,0x33,0x0C,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: long dot(ReadOnlySpan<long> lhs, ReadOnlySpan<long> rhs)
; location: [7FFC872C41A0h, 7FFC872C425Dh]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[rdx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 02
000dh mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0010h mov r8,[rcx]                  ; MOV(Mov_r64_rm64) [R8,mem(64u,RCX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 01
0013h mov ecx,[rcx+8]               ; MOV(Mov_r32_rm32) [ECX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 49 08
0016h mov esi,70h                   ; MOV(Mov_r32_imm32) [ESI,70h:imm32]                   encoding(5 bytes) = be 70 00 00 00
001bh mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0020h mov ebx,ecx                   ; MOV(Mov_r32_rm32) [EBX,ECX]                          encoding(2 bytes) = 8b d9
0022h mov ebp,edx                   ; MOV(Mov_r32_rm32) [EBP,EDX]                          encoding(2 bytes) = 8b ea
0024h cmp ecx,edx                   ; CMP(Cmp_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 3b ca
0026h jne short 005fh               ; JNE(Jne_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 75 37
0028h xor r9d,r9d                   ; XOR(Xor_r32_rm32) [R9D,R9D]                          encoding(3 bytes) = 45 33 c9
002bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
002eh test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
0030h jle short 0051h               ; JLE(Jle_rel8_64) [51h:jmp64]                         encoding(2 bytes) = 7e 1f
0032h movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
0035h mov rbx,[r8+r11*8]            ; MOV(Mov_r64_rm64) [RBX,mem(64u,R8:br,DS:sr)]         encoding(4 bytes) = 4b 8b 1c d8
0039h cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
003ch jae short 00b8h               ; JAE(Jae_rel8_64) [B8h:jmp64]                         encoding(2 bytes) = 73 7a
003eh mov r11,[rax+r11*8]           ; MOV(Mov_r64_rm64) [R11,mem(64u,RAX:br,DS:sr)]        encoding(4 bytes) = 4e 8b 1c d8
0042h imul r11,rbx                  ; IMUL(Imul_r64_rm64) [R11,RBX]                        encoding(4 bytes) = 4c 0f af db
0046h add r9,r11                    ; ADD(Add_r64_rm64) [R9,R11]                           encoding(3 bytes) = 4d 03 cb
0049h inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
004ch cmp r10d,ecx                  ; CMP(Cmp_r32_rm32) [R10D,ECX]                         encoding(3 bytes) = 44 3b d1
004fh jl short 0032h                ; JL(Jl_rel8_64) [32h:jmp64]                           encoding(2 bytes) = 7c e1
0051h mov rax,r9                    ; MOV(Mov_r64_rm64) [RAX,R9]                           encoding(3 bytes) = 49 8b c1
0054h add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0058h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0059h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
005ah pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
005bh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
005ch pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
005eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
005fh mov ecx,181h                  ; MOV(Mov_r32_imm32) [ECX,181h:imm32]                  encoding(5 bytes) = b9 81 01 00 00
0064h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
006eh call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F46F780h:jmp64]                encoding(5 bytes) = e8 0d f7 46 5f
0073h mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0076h mov ecx,9C9h                  ; MOV(Mov_r32_imm32) [ECX,9c9h:imm32]                  encoding(5 bytes) = b9 c9 09 00 00
007bh mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0085h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F46F780h:jmp64]                encoding(5 bytes) = e8 f6 f6 46 5f
008ah mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
008dh lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
0092h mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
0095h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
0099h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
009ch mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
009eh mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00a0h mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00a5h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00aah call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFC99DD8h:jmp64]        encoding(5 bytes) = e8 29 9d c9 ff
00afh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00b2h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F4527B0h:jmp64]                encoding(5 bytes) = e8 f9 26 45 5f
00b7h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00b8h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A0C10h:jmp64]                encoding(5 bytes) = e8 53 0b 5a 5f
00bdh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> dotBytes => new byte[190]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x48,0x8B,0x02,0x8B,0x52,0x08,0x4C,0x8B,0x01,0x8B,0x49,0x08,0xBE,0x70,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xD9,0x8B,0xEA,0x3B,0xCA,0x75,0x37,0x45,0x33,0xC9,0x45,0x33,0xD2,0x85,0xC9,0x7E,0x1F,0x4D,0x63,0xDA,0x4B,0x8B,0x1C,0xD8,0x44,0x3B,0xD2,0x73,0x7A,0x4E,0x8B,0x1C,0xD8,0x4C,0x0F,0xAF,0xDB,0x4D,0x03,0xCB,0x41,0xFF,0xC2,0x44,0x3B,0xD1,0x7C,0xE1,0x49,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x81,0x01,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x0D,0xF7,0x46,0x5F,0x4C,0x8B,0xF0,0xB9,0xC9,0x09,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xF6,0xF6,0x46,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x29,0x9D,0xC9,0xFF,0x48,0x8B,0xC8,0xE8,0xF9,0x26,0x45,0x5F,0xCC,0xE8,0x53,0x0B,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ulong dot(ReadOnlySpan<ulong> lhs, ReadOnlySpan<ulong> rhs)
; location: [7FFC872C4280h, 7FFC872C433Dh]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[rdx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 02
000dh mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0010h mov r8,[rcx]                  ; MOV(Mov_r64_rm64) [R8,mem(64u,RCX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 01
0013h mov ecx,[rcx+8]               ; MOV(Mov_r32_rm32) [ECX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 49 08
0016h mov esi,7Eh                   ; MOV(Mov_r32_imm32) [ESI,7eh:imm32]                   encoding(5 bytes) = be 7e 00 00 00
001bh mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0020h mov ebx,ecx                   ; MOV(Mov_r32_rm32) [EBX,ECX]                          encoding(2 bytes) = 8b d9
0022h mov ebp,edx                   ; MOV(Mov_r32_rm32) [EBP,EDX]                          encoding(2 bytes) = 8b ea
0024h cmp ecx,edx                   ; CMP(Cmp_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 3b ca
0026h jne short 005fh               ; JNE(Jne_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 75 37
0028h xor r9d,r9d                   ; XOR(Xor_r32_rm32) [R9D,R9D]                          encoding(3 bytes) = 45 33 c9
002bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
002eh test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
0030h jle short 0051h               ; JLE(Jle_rel8_64) [51h:jmp64]                         encoding(2 bytes) = 7e 1f
0032h movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
0035h mov rbx,[r8+r11*8]            ; MOV(Mov_r64_rm64) [RBX,mem(64u,R8:br,DS:sr)]         encoding(4 bytes) = 4b 8b 1c d8
0039h cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
003ch jae short 00b8h               ; JAE(Jae_rel8_64) [B8h:jmp64]                         encoding(2 bytes) = 73 7a
003eh mov r11,[rax+r11*8]           ; MOV(Mov_r64_rm64) [R11,mem(64u,RAX:br,DS:sr)]        encoding(4 bytes) = 4e 8b 1c d8
0042h imul r11,rbx                  ; IMUL(Imul_r64_rm64) [R11,RBX]                        encoding(4 bytes) = 4c 0f af db
0046h add r9,r11                    ; ADD(Add_r64_rm64) [R9,R11]                           encoding(3 bytes) = 4d 03 cb
0049h inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
004ch cmp r10d,ecx                  ; CMP(Cmp_r32_rm32) [R10D,ECX]                         encoding(3 bytes) = 44 3b d1
004fh jl short 0032h                ; JL(Jl_rel8_64) [32h:jmp64]                           encoding(2 bytes) = 7c e1
0051h mov rax,r9                    ; MOV(Mov_r64_rm64) [RAX,R9]                           encoding(3 bytes) = 49 8b c1
0054h add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0058h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0059h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
005ah pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
005bh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
005ch pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
005eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
005fh mov ecx,181h                  ; MOV(Mov_r32_imm32) [ECX,181h:imm32]                  encoding(5 bytes) = b9 81 01 00 00
0064h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
006eh call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F46F6A0h:jmp64]                encoding(5 bytes) = e8 2d f6 46 5f
0073h mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0076h mov ecx,9C9h                  ; MOV(Mov_r32_imm32) [ECX,9c9h:imm32]                  encoding(5 bytes) = b9 c9 09 00 00
007bh mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0085h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F46F6A0h:jmp64]                encoding(5 bytes) = e8 16 f6 46 5f
008ah mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
008dh lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
0092h mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
0095h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
0099h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
009ch mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
009eh mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00a0h mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00a5h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00aah call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFC99CF8h:jmp64]        encoding(5 bytes) = e8 49 9c c9 ff
00afh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00b2h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F4526D0h:jmp64]                encoding(5 bytes) = e8 19 26 45 5f
00b7h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00b8h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F5A0B30h:jmp64]                encoding(5 bytes) = e8 73 0a 5a 5f
00bdh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> dotBytes => new byte[190]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x48,0x8B,0x02,0x8B,0x52,0x08,0x4C,0x8B,0x01,0x8B,0x49,0x08,0xBE,0x7E,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xD9,0x8B,0xEA,0x3B,0xCA,0x75,0x37,0x45,0x33,0xC9,0x45,0x33,0xD2,0x85,0xC9,0x7E,0x1F,0x4D,0x63,0xDA,0x4B,0x8B,0x1C,0xD8,0x44,0x3B,0xD2,0x73,0x7A,0x4E,0x8B,0x1C,0xD8,0x4C,0x0F,0xAF,0xDB,0x4D,0x03,0xCB,0x41,0xFF,0xC2,0x44,0x3B,0xD1,0x7C,0xE1,0x49,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x81,0x01,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x2D,0xF6,0x46,0x5F,0x4C,0x8B,0xF0,0xB9,0xC9,0x09,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x16,0xF6,0x46,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x49,0x9C,0xC9,0xFF,0x48,0x8B,0xC8,0xE8,0x19,0x26,0x45,0x5F,0xCC,0xE8,0x73,0x0A,0x5A,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool eq(sbyte lhs, sbyte rhs)
; location: [7FFC872C4360h, 7FFC872C4375h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cl                  ; MOVSX(Movsx_r64_rm8) [RAX,CL]                        encoding(4 bytes) = 48 0f be c1
0009h movsx rdx,dl                  ; MOVSX(Movsx_r64_rm8) [RDX,DL]                        encoding(4 bytes) = 48 0f be d2
000dh cmp eax,edx                   ; CMP(Cmp_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 3b c2
000fh sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
0012h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0015h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> eqBytes => new byte[22]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBE,0xC1,0x48,0x0F,0xBE,0xD2,0x3B,0xC2,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool eq(byte lhs, byte rhs)
; location: [7FFC872C4390h, 7FFC872C43A3h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0008h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
000bh cmp eax,edx                   ; CMP(Cmp_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 3b c2
000dh sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
0010h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> eqBytes => new byte[20]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC1,0x0F,0xB6,0xD2,0x3B,0xC2,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool eq(short lhs, short rhs)
; location: [7FFC872C43C0h, 7FFC872C43D5h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cx                  ; MOVSX(Movsx_r64_rm16) [RAX,CX]                       encoding(4 bytes) = 48 0f bf c1
0009h movsx rdx,dx                  ; MOVSX(Movsx_r64_rm16) [RDX,DX]                       encoding(4 bytes) = 48 0f bf d2
000dh cmp eax,edx                   ; CMP(Cmp_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 3b c2
000fh sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
0012h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0015h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> eqBytes => new byte[22]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBF,0xC1,0x48,0x0F,0xBF,0xD2,0x3B,0xC2,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool eq(ushort lhs, ushort rhs)
; location: [7FFC872C43F0h, 7FFC872C4403h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cx                  ; MOVZX(Movzx_r32_rm16) [EAX,CX]                       encoding(3 bytes) = 0f b7 c1
0008h movzx edx,dx                  ; MOVZX(Movzx_r32_rm16) [EDX,DX]                       encoding(3 bytes) = 0f b7 d2
000bh cmp eax,edx                   ; CMP(Cmp_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 3b c2
000dh sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
0010h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> eqBytes => new byte[20]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB7,0xC1,0x0F,0xB7,0xD2,0x3B,0xC2,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool eq(int lhs, int rhs)
; location: [7FFC872C4420h, 7FFC872C442Dh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h cmp ecx,edx                   ; CMP(Cmp_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 3b ca
0007h sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
000ah movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> eqBytes => new byte[14]{0x0F,0x1F,0x44,0x00,0x00,0x3B,0xCA,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool eq(uint lhs, uint rhs)
; location: [7FFC872C4440h, 7FFC872C444Dh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h cmp ecx,edx                   ; CMP(Cmp_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 3b ca
0007h sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
000ah movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> eqBytes => new byte[14]{0x0F,0x1F,0x44,0x00,0x00,0x3B,0xCA,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool eq(long lhs, long rhs)
; location: [7FFC872C4460h, 7FFC872C446Eh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h cmp rcx,rdx                   ; CMP(Cmp_r64_rm64) [RCX,RDX]                          encoding(3 bytes) = 48 3b ca
0008h sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
000bh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> eqBytes => new byte[15]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x3B,0xCA,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool eq(ulong lhs, ulong rhs)
; location: [7FFC872C4480h, 7FFC872C448Eh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h cmp rcx,rdx                   ; CMP(Cmp_r64_rm64) [RCX,RDX]                          encoding(3 bytes) = 48 3b ca
0008h sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
000bh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> eqBytes => new byte[15]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x3B,0xCA,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool eq(ReadOnlySpan<sbyte> src, sbyte target)
; location: [7FFC872C44A0h, 7FFC872C44D2h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov r8,[rcx]                  ; MOV(Mov_r64_rm64) [R8,mem(64u,RCX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 01
0008h mov ecx,[rcx+8]               ; MOV(Mov_r32_rm32) [ECX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 49 08
000bh xor r9d,r9d                   ; XOR(Xor_r32_rm32) [R9D,R9D]                          encoding(3 bytes) = 45 33 c9
000eh test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
0010h jle short 002ah               ; JLE(Jle_rel8_64) [2Ah:jmp64]                         encoding(2 bytes) = 7e 18
0012h movsx rax,dl                  ; MOVSX(Movsx_r64_rm8) [RAX,DL]                        encoding(4 bytes) = 48 0f be c2
0016h movsxd rdx,r9d                ; MOVSXD(Movsxd_r64_rm32) [RDX,R9D]                    encoding(3 bytes) = 49 63 d1
0019h movsx rdx,byte ptr [r8+rdx]   ; MOVSX(Movsx_r64_rm8) [RDX,mem(8i,R8:br,DS:sr)]       encoding(5 bytes) = 49 0f be 14 10
001eh cmp edx,eax                   ; CMP(Cmp_r32_rm32) [EDX,EAX]                          encoding(2 bytes) = 3b d0
0020h jne short 0030h               ; JNE(Jne_rel8_64) [30h:jmp64]                         encoding(2 bytes) = 75 0e
0022h inc r9d                       ; INC(Inc_rm32) [R9D]                                  encoding(3 bytes) = 41 ff c1
0025h cmp r9d,ecx                   ; CMP(Cmp_r32_rm32) [R9D,ECX]                          encoding(3 bytes) = 44 3b c9
0028h jl short 0016h                ; JL(Jl_rel8_64) [16h:jmp64]                           encoding(2 bytes) = 7c ec
002ah mov eax,1                     ; MOV(Mov_r32_imm32) [EAX,1h:imm32]                    encoding(5 bytes) = b8 01 00 00 00
002fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0030h xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0032h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> eqBytes => new byte[51]{0x0F,0x1F,0x44,0x00,0x00,0x4C,0x8B,0x01,0x8B,0x49,0x08,0x45,0x33,0xC9,0x85,0xC9,0x7E,0x18,0x48,0x0F,0xBE,0xC2,0x49,0x63,0xD1,0x49,0x0F,0xBE,0x14,0x10,0x3B,0xD0,0x75,0x0E,0x41,0xFF,0xC1,0x44,0x3B,0xC9,0x7C,0xEC,0xB8,0x01,0x00,0x00,0x00,0xC3,0x33,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool eq(ReadOnlySpan<byte> src, byte target)
; location: [7FFC872C44F0h, 7FFC872C4521h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov r8,[rcx]                  ; MOV(Mov_r64_rm64) [R8,mem(64u,RCX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 01
0008h mov ecx,[rcx+8]               ; MOV(Mov_r32_rm32) [ECX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 49 08
000bh xor r9d,r9d                   ; XOR(Xor_r32_rm32) [R9D,R9D]                          encoding(3 bytes) = 45 33 c9
000eh test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
0010h jle short 0029h               ; JLE(Jle_rel8_64) [29h:jmp64]                         encoding(2 bytes) = 7e 17
0012h movzx eax,dl                  ; MOVZX(Movzx_r32_rm8) [EAX,DL]                        encoding(3 bytes) = 0f b6 c2
0015h movsxd rdx,r9d                ; MOVSXD(Movsxd_r64_rm32) [RDX,R9D]                    encoding(3 bytes) = 49 63 d1
0018h movzx edx,byte ptr [r8+rdx]   ; MOVZX(Movzx_r32_rm8) [EDX,mem(8u,R8:br,DS:sr)]       encoding(5 bytes) = 41 0f b6 14 10
001dh cmp edx,eax                   ; CMP(Cmp_r32_rm32) [EDX,EAX]                          encoding(2 bytes) = 3b d0
001fh jne short 002fh               ; JNE(Jne_rel8_64) [2Fh:jmp64]                         encoding(2 bytes) = 75 0e
0021h inc r9d                       ; INC(Inc_rm32) [R9D]                                  encoding(3 bytes) = 41 ff c1
0024h cmp r9d,ecx                   ; CMP(Cmp_r32_rm32) [R9D,ECX]                          encoding(3 bytes) = 44 3b c9
0027h jl short 0015h                ; JL(Jl_rel8_64) [15h:jmp64]                           encoding(2 bytes) = 7c ec
0029h mov eax,1                     ; MOV(Mov_r32_imm32) [EAX,1h:imm32]                    encoding(5 bytes) = b8 01 00 00 00
002eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
002fh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0031h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> eqBytes => new byte[50]{0x0F,0x1F,0x44,0x00,0x00,0x4C,0x8B,0x01,0x8B,0x49,0x08,0x45,0x33,0xC9,0x85,0xC9,0x7E,0x17,0x0F,0xB6,0xC2,0x49,0x63,0xD1,0x41,0x0F,0xB6,0x14,0x10,0x3B,0xD0,0x75,0x0E,0x41,0xFF,0xC1,0x44,0x3B,0xC9,0x7C,0xEC,0xB8,0x01,0x00,0x00,0x00,0xC3,0x33,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool eq(ReadOnlySpan<short> src, short target)
; location: [7FFC872C4540h, 7FFC872C4572h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov r8,[rcx]                  ; MOV(Mov_r64_rm64) [R8,mem(64u,RCX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 01
0008h mov ecx,[rcx+8]               ; MOV(Mov_r32_rm32) [ECX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 49 08
000bh xor r9d,r9d                   ; XOR(Xor_r32_rm32) [R9D,R9D]                          encoding(3 bytes) = 45 33 c9
000eh test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
0010h jle short 002ah               ; JLE(Jle_rel8_64) [2Ah:jmp64]                         encoding(2 bytes) = 7e 18
0012h movsx rax,dx                  ; MOVSX(Movsx_r64_rm16) [RAX,DX]                       encoding(4 bytes) = 48 0f bf c2
0016h movsxd rdx,r9d                ; MOVSXD(Movsxd_r64_rm32) [RDX,R9D]                    encoding(3 bytes) = 49 63 d1
0019h movsx rdx,word ptr [r8+rdx*2] ; MOVSX(Movsx_r64_rm16) [RDX,mem(16i,R8:br,DS:sr)]     encoding(5 bytes) = 49 0f bf 14 50
001eh cmp edx,eax                   ; CMP(Cmp_r32_rm32) [EDX,EAX]                          encoding(2 bytes) = 3b d0
0020h jne short 0030h               ; JNE(Jne_rel8_64) [30h:jmp64]                         encoding(2 bytes) = 75 0e
0022h inc r9d                       ; INC(Inc_rm32) [R9D]                                  encoding(3 bytes) = 41 ff c1
0025h cmp r9d,ecx                   ; CMP(Cmp_r32_rm32) [R9D,ECX]                          encoding(3 bytes) = 44 3b c9
0028h jl short 0016h                ; JL(Jl_rel8_64) [16h:jmp64]                           encoding(2 bytes) = 7c ec
002ah mov eax,1                     ; MOV(Mov_r32_imm32) [EAX,1h:imm32]                    encoding(5 bytes) = b8 01 00 00 00
002fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0030h xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0032h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> eqBytes => new byte[51]{0x0F,0x1F,0x44,0x00,0x00,0x4C,0x8B,0x01,0x8B,0x49,0x08,0x45,0x33,0xC9,0x85,0xC9,0x7E,0x18,0x48,0x0F,0xBF,0xC2,0x49,0x63,0xD1,0x49,0x0F,0xBF,0x14,0x50,0x3B,0xD0,0x75,0x0E,0x41,0xFF,0xC1,0x44,0x3B,0xC9,0x7C,0xEC,0xB8,0x01,0x00,0x00,0x00,0xC3,0x33,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool eq(ReadOnlySpan<ushort> src, ushort target)
; location: [7FFC872C4590h, 7FFC872C45C1h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov r8,[rcx]                  ; MOV(Mov_r64_rm64) [R8,mem(64u,RCX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 01
0008h mov ecx,[rcx+8]               ; MOV(Mov_r32_rm32) [ECX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 49 08
000bh xor r9d,r9d                   ; XOR(Xor_r32_rm32) [R9D,R9D]                          encoding(3 bytes) = 45 33 c9
000eh test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
0010h jle short 0029h               ; JLE(Jle_rel8_64) [29h:jmp64]                         encoding(2 bytes) = 7e 17
0012h movzx eax,dx                  ; MOVZX(Movzx_r32_rm16) [EAX,DX]                       encoding(3 bytes) = 0f b7 c2
0015h movsxd rdx,r9d                ; MOVSXD(Movsxd_r64_rm32) [RDX,R9D]                    encoding(3 bytes) = 49 63 d1
0018h movzx edx,word ptr [r8+rdx*2] ; MOVZX(Movzx_r32_rm16) [EDX,mem(16u,R8:br,DS:sr)]     encoding(5 bytes) = 41 0f b7 14 50
001dh cmp edx,eax                   ; CMP(Cmp_r32_rm32) [EDX,EAX]                          encoding(2 bytes) = 3b d0
001fh jne short 002fh               ; JNE(Jne_rel8_64) [2Fh:jmp64]                         encoding(2 bytes) = 75 0e
0021h inc r9d                       ; INC(Inc_rm32) [R9D]                                  encoding(3 bytes) = 41 ff c1
0024h cmp r9d,ecx                   ; CMP(Cmp_r32_rm32) [R9D,ECX]                          encoding(3 bytes) = 44 3b c9
0027h jl short 0015h                ; JL(Jl_rel8_64) [15h:jmp64]                           encoding(2 bytes) = 7c ec
0029h mov eax,1                     ; MOV(Mov_r32_imm32) [EAX,1h:imm32]                    encoding(5 bytes) = b8 01 00 00 00
002eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
002fh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0031h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> eqBytes => new byte[50]{0x0F,0x1F,0x44,0x00,0x00,0x4C,0x8B,0x01,0x8B,0x49,0x08,0x45,0x33,0xC9,0x85,0xC9,0x7E,0x17,0x0F,0xB7,0xC2,0x49,0x63,0xD1,0x41,0x0F,0xB7,0x14,0x50,0x3B,0xD0,0x75,0x0E,0x41,0xFF,0xC1,0x44,0x3B,0xC9,0x7C,0xEC,0xB8,0x01,0x00,0x00,0x00,0xC3,0x33,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool eq(ReadOnlySpan<int> src, int target)
; location: [7FFC872C45E0h, 7FFC872C460Bh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,[rcx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 01
0008h mov ecx,[rcx+8]               ; MOV(Mov_r32_rm32) [ECX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 49 08
000bh xor r8d,r8d                   ; XOR(Xor_r32_rm32) [R8D,R8D]                          encoding(3 bytes) = 45 33 c0
000eh test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
0010h jle short 0023h               ; JLE(Jle_rel8_64) [23h:jmp64]                         encoding(2 bytes) = 7e 11
0012h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0015h cmp [rax+r9*4],edx            ; CMP(Cmp_rm32_r32) [mem(32u,RAX:br,DS:sr),EDX]        encoding(4 bytes) = 42 39 14 88
0019h jne short 0029h               ; JNE(Jne_rel8_64) [29h:jmp64]                         encoding(2 bytes) = 75 0e
001bh inc r8d                       ; INC(Inc_rm32) [R8D]                                  encoding(3 bytes) = 41 ff c0
001eh cmp r8d,ecx                   ; CMP(Cmp_r32_rm32) [R8D,ECX]                          encoding(3 bytes) = 44 3b c1
0021h jl short 0012h                ; JL(Jl_rel8_64) [12h:jmp64]                           encoding(2 bytes) = 7c ef
0023h mov eax,1                     ; MOV(Mov_r32_imm32) [EAX,1h:imm32]                    encoding(5 bytes) = b8 01 00 00 00
0028h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0029h xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
002bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> eqBytes => new byte[44]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x01,0x8B,0x49,0x08,0x45,0x33,0xC0,0x85,0xC9,0x7E,0x11,0x4D,0x63,0xC8,0x42,0x39,0x14,0x88,0x75,0x0E,0x41,0xFF,0xC0,0x44,0x3B,0xC1,0x7C,0xEF,0xB8,0x01,0x00,0x00,0x00,0xC3,0x33,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool eq(ReadOnlySpan<uint> src, uint target)
; location: [7FFC872C4620h, 7FFC872C464Bh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,[rcx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 01
0008h mov ecx,[rcx+8]               ; MOV(Mov_r32_rm32) [ECX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 49 08
000bh xor r8d,r8d                   ; XOR(Xor_r32_rm32) [R8D,R8D]                          encoding(3 bytes) = 45 33 c0
000eh test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
0010h jle short 0023h               ; JLE(Jle_rel8_64) [23h:jmp64]                         encoding(2 bytes) = 7e 11
0012h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0015h cmp [rax+r9*4],edx            ; CMP(Cmp_rm32_r32) [mem(32u,RAX:br,DS:sr),EDX]        encoding(4 bytes) = 42 39 14 88
0019h jne short 0029h               ; JNE(Jne_rel8_64) [29h:jmp64]                         encoding(2 bytes) = 75 0e
001bh inc r8d                       ; INC(Inc_rm32) [R8D]                                  encoding(3 bytes) = 41 ff c0
001eh cmp r8d,ecx                   ; CMP(Cmp_r32_rm32) [R8D,ECX]                          encoding(3 bytes) = 44 3b c1
0021h jl short 0012h                ; JL(Jl_rel8_64) [12h:jmp64]                           encoding(2 bytes) = 7c ef
0023h mov eax,1                     ; MOV(Mov_r32_imm32) [EAX,1h:imm32]                    encoding(5 bytes) = b8 01 00 00 00
0028h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0029h xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
002bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> eqBytes => new byte[44]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x01,0x8B,0x49,0x08,0x45,0x33,0xC0,0x85,0xC9,0x7E,0x11,0x4D,0x63,0xC8,0x42,0x39,0x14,0x88,0x75,0x0E,0x41,0xFF,0xC0,0x44,0x3B,0xC1,0x7C,0xEF,0xB8,0x01,0x00,0x00,0x00,0xC3,0x33,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool eq(ReadOnlySpan<long> src, long target)
; location: [7FFC872C4660h, 7FFC872C468Bh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,[rcx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 01
0008h mov ecx,[rcx+8]               ; MOV(Mov_r32_rm32) [ECX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 49 08
000bh xor r8d,r8d                   ; XOR(Xor_r32_rm32) [R8D,R8D]                          encoding(3 bytes) = 45 33 c0
000eh test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
0010h jle short 0023h               ; JLE(Jle_rel8_64) [23h:jmp64]                         encoding(2 bytes) = 7e 11
0012h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0015h cmp [rax+r9*8],rdx            ; CMP(Cmp_rm64_r64) [mem(64u,RAX:br,DS:sr),RDX]        encoding(4 bytes) = 4a 39 14 c8
0019h jne short 0029h               ; JNE(Jne_rel8_64) [29h:jmp64]                         encoding(2 bytes) = 75 0e
001bh inc r8d                       ; INC(Inc_rm32) [R8D]                                  encoding(3 bytes) = 41 ff c0
001eh cmp r8d,ecx                   ; CMP(Cmp_r32_rm32) [R8D,ECX]                          encoding(3 bytes) = 44 3b c1
0021h jl short 0012h                ; JL(Jl_rel8_64) [12h:jmp64]                           encoding(2 bytes) = 7c ef
0023h mov eax,1                     ; MOV(Mov_r32_imm32) [EAX,1h:imm32]                    encoding(5 bytes) = b8 01 00 00 00
0028h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0029h xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
002bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> eqBytes => new byte[44]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x01,0x8B,0x49,0x08,0x45,0x33,0xC0,0x85,0xC9,0x7E,0x11,0x4D,0x63,0xC8,0x4A,0x39,0x14,0xC8,0x75,0x0E,0x41,0xFF,0xC0,0x44,0x3B,0xC1,0x7C,0xEF,0xB8,0x01,0x00,0x00,0x00,0xC3,0x33,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool eq(ReadOnlySpan<ulong> src, ulong target)
; location: [7FFC872C46A0h, 7FFC872C46CBh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,[rcx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 01
0008h mov ecx,[rcx+8]               ; MOV(Mov_r32_rm32) [ECX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 49 08
000bh xor r8d,r8d                   ; XOR(Xor_r32_rm32) [R8D,R8D]                          encoding(3 bytes) = 45 33 c0
000eh test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
0010h jle short 0023h               ; JLE(Jle_rel8_64) [23h:jmp64]                         encoding(2 bytes) = 7e 11
0012h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0015h cmp [rax+r9*8],rdx            ; CMP(Cmp_rm64_r64) [mem(64u,RAX:br,DS:sr),RDX]        encoding(4 bytes) = 4a 39 14 c8
0019h jne short 0029h               ; JNE(Jne_rel8_64) [29h:jmp64]                         encoding(2 bytes) = 75 0e
001bh inc r8d                       ; INC(Inc_rm32) [R8D]                                  encoding(3 bytes) = 41 ff c0
001eh cmp r8d,ecx                   ; CMP(Cmp_r32_rm32) [R8D,ECX]                          encoding(3 bytes) = 44 3b c1
0021h jl short 0012h                ; JL(Jl_rel8_64) [12h:jmp64]                           encoding(2 bytes) = 7c ef
0023h mov eax,1                     ; MOV(Mov_r32_imm32) [EAX,1h:imm32]                    encoding(5 bytes) = b8 01 00 00 00
0028h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0029h xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
002bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> eqBytes => new byte[44]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x01,0x8B,0x49,0x08,0x45,0x33,0xC0,0x85,0xC9,0x7E,0x11,0x4D,0x63,0xC8,0x4A,0x39,0x14,0xC8,0x75,0x0E,0x41,0xFF,0xC0,0x44,0x3B,0xC1,0x7C,0xEF,0xB8,0x01,0x00,0x00,0x00,0xC3,0x33,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: sbyte flip(sbyte src)
; location: [7FFC872C46E0h, 7FFC872C46EFh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cl                  ; MOVSX(Movsx_r64_rm8) [RAX,CL]                        encoding(4 bytes) = 48 0f be c1
0009h not eax                       ; NOT(Not_rm32) [EAX]                                  encoding(2 bytes) = f7 d0
000bh movsx rax,al                  ; MOVSX(Movsx_r64_rm8) [RAX,AL]                        encoding(4 bytes) = 48 0f be c0
000fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> flipBytes => new byte[16]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBE,0xC1,0xF7,0xD0,0x48,0x0F,0xBE,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: byte flip(byte src)
; location: [7FFC872C4700h, 7FFC872C470Dh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0008h not eax                       ; NOT(Not_rm32) [EAX]                                  encoding(2 bytes) = f7 d0
000ah movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> flipBytes => new byte[14]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC1,0xF7,0xD0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: short flip(short src)
; location: [7FFC872C4720h, 7FFC872C472Fh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cx                  ; MOVSX(Movsx_r64_rm16) [RAX,CX]                       encoding(4 bytes) = 48 0f bf c1
0009h not eax                       ; NOT(Not_rm32) [EAX]                                  encoding(2 bytes) = f7 d0
000bh movsx rax,ax                  ; MOVSX(Movsx_r64_rm16) [RAX,AX]                       encoding(4 bytes) = 48 0f bf c0
000fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> flipBytes => new byte[16]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBF,0xC1,0xF7,0xD0,0x48,0x0F,0xBF,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ushort flip(ushort src)
; location: [7FFC872C4740h, 7FFC872C474Dh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cx                  ; MOVZX(Movzx_r32_rm16) [EAX,CX]                       encoding(3 bytes) = 0f b7 c1
0008h not eax                       ; NOT(Not_rm32) [EAX]                                  encoding(2 bytes) = f7 d0
000ah movzx eax,ax                  ; MOVZX(Movzx_r32_rm16) [EAX,AX]                       encoding(3 bytes) = 0f b7 c0
000dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> flipBytes => new byte[14]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB7,0xC1,0xF7,0xD0,0x0F,0xB7,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: int flip(int src)
; location: [7FFC872C4760h, 7FFC872C4769h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov eax,ecx                   ; MOV(Mov_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 8b c1
0007h not eax                       ; NOT(Not_rm32) [EAX]                                  encoding(2 bytes) = f7 d0
0009h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> flipBytes => new byte[10]{0x0F,0x1F,0x44,0x00,0x00,0x8B,0xC1,0xF7,0xD0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: uint flip(uint src)
; location: [7FFC872C4780h, 7FFC872C4789h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov eax,ecx                   ; MOV(Mov_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 8b c1
0007h not eax                       ; NOT(Not_rm32) [EAX]                                  encoding(2 bytes) = f7 d0
0009h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> flipBytes => new byte[10]{0x0F,0x1F,0x44,0x00,0x00,0x8B,0xC1,0xF7,0xD0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: long flip(long src)
; location: [7FFC872C47A0h, 7FFC872C47ABh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0008h not rax                       ; NOT(Not_rm64) [RAX]                                  encoding(3 bytes) = 48 f7 d0
000bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> flipBytes => new byte[12]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0xC1,0x48,0xF7,0xD0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ulong flip(ulong src)
; location: [7FFC872C47C0h, 7FFC872C47CBh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0008h not rax                       ; NOT(Not_rm64) [RAX]                                  encoding(3 bytes) = 48 f7 d0
000bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> flipBytes => new byte[12]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0xC1,0x48,0xF7,0xD0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref sbyte flip(ref sbyte src)
; location: [7FFC872C47E0h, 7FFC872C47EAh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h not byte ptr [rcx]            ; NOT(Not_rm8) [mem(8u,RCX:br,DS:sr)]                  encoding(2 bytes) = f6 11
0007h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> flipBytes => new byte[11]{0x0F,0x1F,0x44,0x00,0x00,0xF6,0x11,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref byte flip(ref byte src)
; location: [7FFC872C4800h, 7FFC872C480Ah]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h not byte ptr [rcx]            ; NOT(Not_rm8) [mem(8u,RCX:br,DS:sr)]                  encoding(2 bytes) = f6 11
0007h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> flipBytes => new byte[11]{0x0F,0x1F,0x44,0x00,0x00,0xF6,0x11,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref short flip(ref short src)
; location: [7FFC872C4820h, 7FFC872C482Bh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h not word ptr [rcx]            ; NOT(Not_rm16) [mem(16u,RCX:br,DS:sr)]                encoding(3 bytes) = 66 f7 11
0008h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> flipBytes => new byte[12]{0x0F,0x1F,0x44,0x00,0x00,0x66,0xF7,0x11,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref ushort flip(ref ushort src)
; location: [7FFC872C4840h, 7FFC872C484Bh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h not word ptr [rcx]            ; NOT(Not_rm16) [mem(16u,RCX:br,DS:sr)]                encoding(3 bytes) = 66 f7 11
0008h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> flipBytes => new byte[12]{0x0F,0x1F,0x44,0x00,0x00,0x66,0xF7,0x11,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref int flip(ref int src)
; location: [7FFC872C4860h, 7FFC872C486Ah]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h not dword ptr [rcx]           ; NOT(Not_rm32) [mem(32u,RCX:br,DS:sr)]                encoding(2 bytes) = f7 11
0007h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> flipBytes => new byte[11]{0x0F,0x1F,0x44,0x00,0x00,0xF7,0x11,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref uint flip(ref uint src)
; location: [7FFC872C4880h, 7FFC872C488Ah]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h not dword ptr [rcx]           ; NOT(Not_rm32) [mem(32u,RCX:br,DS:sr)]                encoding(2 bytes) = f7 11
0007h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> flipBytes => new byte[11]{0x0F,0x1F,0x44,0x00,0x00,0xF7,0x11,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref long flip(ref long src)
; location: [7FFC872C48A0h, 7FFC872C48ABh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h not qword ptr [rcx]           ; NOT(Not_rm64) [mem(64u,RCX:br,DS:sr)]                encoding(3 bytes) = 48 f7 11
0008h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> flipBytes => new byte[12]{0x0F,0x1F,0x44,0x00,0x00,0x48,0xF7,0x11,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref ulong flip(ref ulong src)
; location: [7FFC872C48C0h, 7FFC872C48CBh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h not qword ptr [rcx]           ; NOT(Not_rm64) [mem(64u,RCX:br,DS:sr)]                encoding(3 bytes) = 48 f7 11
0008h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> flipBytes => new byte[12]{0x0F,0x1F,0x44,0x00,0x00,0x48,0xF7,0x11,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref sbyte flip(in sbyte src, ref sbyte dst)
; location: [7FFC872C48E0h, 7FFC872C48F0h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,byte ptr [rcx]      ; MOVSX(Movsx_r64_rm8) [RAX,mem(8i,RCX:br,DS:sr)]      encoding(4 bytes) = 48 0f be 01
0009h not eax                       ; NOT(Not_rm32) [EAX]                                  encoding(2 bytes) = f7 d0
000bh mov [rdx],al                  ; MOV(Mov_rm8_r8) [mem(8u,RDX:br,DS:sr),AL]            encoding(2 bytes) = 88 02
000dh mov rax,rdx                   ; MOV(Mov_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 8b c2
0010h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> flipBytes => new byte[17]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBE,0x01,0xF7,0xD0,0x88,0x02,0x48,0x8B,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref byte flip(in byte src, ref byte dst)
; location: [7FFC872C4910h, 7FFC872C491Fh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,byte ptr [rcx]      ; MOVZX(Movzx_r32_rm8) [EAX,mem(8u,RCX:br,DS:sr)]      encoding(3 bytes) = 0f b6 01
0008h not eax                       ; NOT(Not_rm32) [EAX]                                  encoding(2 bytes) = f7 d0
000ah mov [rdx],al                  ; MOV(Mov_rm8_r8) [mem(8u,RDX:br,DS:sr),AL]            encoding(2 bytes) = 88 02
000ch mov rax,rdx                   ; MOV(Mov_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 8b c2
000fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> flipBytes => new byte[16]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0x01,0xF7,0xD0,0x88,0x02,0x48,0x8B,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref short flip(in short src, ref short dst)
; location: [7FFC872C4930h, 7FFC872C4941h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,word ptr [rcx]      ; MOVSX(Movsx_r64_rm16) [RAX,mem(16i,RCX:br,DS:sr)]    encoding(4 bytes) = 48 0f bf 01
0009h not eax                       ; NOT(Not_rm32) [EAX]                                  encoding(2 bytes) = f7 d0
000bh mov [rdx],ax                  ; MOV(Mov_rm16_r16) [mem(16u,RDX:br,DS:sr),AX]         encoding(3 bytes) = 66 89 02
000eh mov rax,rdx                   ; MOV(Mov_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 8b c2
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> flipBytes => new byte[18]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBF,0x01,0xF7,0xD0,0x66,0x89,0x02,0x48,0x8B,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref ushort flip(in ushort src, ref ushort dst)
; location: [7FFC872C4960h, 7FFC872C4970h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,word ptr [rcx]      ; MOVZX(Movzx_r32_rm16) [EAX,mem(16u,RCX:br,DS:sr)]    encoding(3 bytes) = 0f b7 01
0008h not eax                       ; NOT(Not_rm32) [EAX]                                  encoding(2 bytes) = f7 d0
000ah mov [rdx],ax                  ; MOV(Mov_rm16_r16) [mem(16u,RDX:br,DS:sr),AX]         encoding(3 bytes) = 66 89 02
000dh mov rax,rdx                   ; MOV(Mov_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 8b c2
0010h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> flipBytes => new byte[17]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB7,0x01,0xF7,0xD0,0x66,0x89,0x02,0x48,0x8B,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref int flip(in int src, ref int dst)
; location: [7FFC872C4990h, 7FFC872C499Eh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov eax,[rcx]                 ; MOV(Mov_r32_rm32) [EAX,mem(32u,RCX:br,DS:sr)]        encoding(2 bytes) = 8b 01
0007h not eax                       ; NOT(Not_rm32) [EAX]                                  encoding(2 bytes) = f7 d0
0009h mov [rdx],eax                 ; MOV(Mov_rm32_r32) [mem(32u,RDX:br,DS:sr),EAX]        encoding(2 bytes) = 89 02
000bh mov rax,rdx                   ; MOV(Mov_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 8b c2
000eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> flipBytes => new byte[15]{0x0F,0x1F,0x44,0x00,0x00,0x8B,0x01,0xF7,0xD0,0x89,0x02,0x48,0x8B,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref uint flip(in uint src, ref uint dst)
; location: [7FFC872C49B0h, 7FFC872C49BEh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov eax,[rcx]                 ; MOV(Mov_r32_rm32) [EAX,mem(32u,RCX:br,DS:sr)]        encoding(2 bytes) = 8b 01
0007h not eax                       ; NOT(Not_rm32) [EAX]                                  encoding(2 bytes) = f7 d0
0009h mov [rdx],eax                 ; MOV(Mov_rm32_r32) [mem(32u,RDX:br,DS:sr),EAX]        encoding(2 bytes) = 89 02
000bh mov rax,rdx                   ; MOV(Mov_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 8b c2
000eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> flipBytes => new byte[15]{0x0F,0x1F,0x44,0x00,0x00,0x8B,0x01,0xF7,0xD0,0x89,0x02,0x48,0x8B,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref long flip(in long src, ref long dst)
; location: [7FFC872C49D0h, 7FFC872C49E1h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,[rcx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 01
0008h not rax                       ; NOT(Not_rm64) [RAX]                                  encoding(3 bytes) = 48 f7 d0
000bh mov [rdx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RDX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 02
000eh mov rax,rdx                   ; MOV(Mov_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 8b c2
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> flipBytes => new byte[18]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x01,0x48,0xF7,0xD0,0x48,0x89,0x02,0x48,0x8B,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref ulong flip(in ulong src, ref ulong dst)
; location: [7FFC872C4A00h, 7FFC872C4A11h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,[rcx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 01
0008h not rax                       ; NOT(Not_rm64) [RAX]                                  encoding(3 bytes) = 48 f7 d0
000bh mov [rdx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RDX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 02
000eh mov rax,rdx                   ; MOV(Mov_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 8b c2
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> flipBytes => new byte[18]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x01,0x48,0xF7,0xD0,0x48,0x89,0x02,0x48,0x8B,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: sbyte fma(sbyte x, sbyte y, sbyte z)
; location: [7FFC872C4A30h, 7FFC872C4A4Ah]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cl                  ; MOVSX(Movsx_r64_rm8) [RAX,CL]                        encoding(4 bytes) = 48 0f be c1
0009h movsx rdx,dl                  ; MOVSX(Movsx_r64_rm8) [RDX,DL]                        encoding(4 bytes) = 48 0f be d2
000dh imul eax,edx                  ; IMUL(Imul_r32_rm32) [EAX,EDX]                        encoding(3 bytes) = 0f af c2
0010h movsx rdx,r8b                 ; MOVSX(Movsx_r64_rm8) [RDX,R8L]                       encoding(4 bytes) = 49 0f be d0
0014h add eax,edx                   ; ADD(Add_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 03 c2
0016h movsx rax,al                  ; MOVSX(Movsx_r64_rm8) [RAX,AL]                        encoding(4 bytes) = 48 0f be c0
001ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> fmaBytes => new byte[27]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBE,0xC1,0x48,0x0F,0xBE,0xD2,0x0F,0xAF,0xC2,0x49,0x0F,0xBE,0xD0,0x03,0xC2,0x48,0x0F,0xBE,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: byte fma(byte x, byte y, byte z)
; location: [7FFC872C4A60h, 7FFC872C4A77h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0008h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
000bh imul eax,edx                  ; IMUL(Imul_r32_rm32) [EAX,EDX]                        encoding(3 bytes) = 0f af c2
000eh movzx edx,r8b                 ; MOVZX(Movzx_r32_rm8) [EDX,R8L]                       encoding(4 bytes) = 41 0f b6 d0
0012h add eax,edx                   ; ADD(Add_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 03 c2
0014h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0017h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> fmaBytes => new byte[24]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC1,0x0F,0xB6,0xD2,0x0F,0xAF,0xC2,0x41,0x0F,0xB6,0xD0,0x03,0xC2,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: short fma(short x, short y, short z)
; location: [7FFC872C4A90h, 7FFC872C4AAAh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cx                  ; MOVSX(Movsx_r64_rm16) [RAX,CX]                       encoding(4 bytes) = 48 0f bf c1
0009h movsx rdx,dx                  ; MOVSX(Movsx_r64_rm16) [RDX,DX]                       encoding(4 bytes) = 48 0f bf d2
000dh imul eax,edx                  ; IMUL(Imul_r32_rm32) [EAX,EDX]                        encoding(3 bytes) = 0f af c2
0010h movsx rdx,r8w                 ; MOVSX(Movsx_r64_rm16) [RDX,R8W]                      encoding(4 bytes) = 49 0f bf d0
0014h add eax,edx                   ; ADD(Add_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 03 c2
0016h movsx rax,ax                  ; MOVSX(Movsx_r64_rm16) [RAX,AX]                       encoding(4 bytes) = 48 0f bf c0
001ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> fmaBytes => new byte[27]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBF,0xC1,0x48,0x0F,0xBF,0xD2,0x0F,0xAF,0xC2,0x49,0x0F,0xBF,0xD0,0x03,0xC2,0x48,0x0F,0xBF,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ushort fma(ushort x, ushort y, ushort z)
; location: [7FFC872C4AC0h, 7FFC872C4AD7h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cx                  ; MOVZX(Movzx_r32_rm16) [EAX,CX]                       encoding(3 bytes) = 0f b7 c1
0008h movzx edx,dx                  ; MOVZX(Movzx_r32_rm16) [EDX,DX]                       encoding(3 bytes) = 0f b7 d2
000bh imul eax,edx                  ; IMUL(Imul_r32_rm32) [EAX,EDX]                        encoding(3 bytes) = 0f af c2
000eh movzx edx,r8w                 ; MOVZX(Movzx_r32_rm16) [EDX,R8W]                      encoding(4 bytes) = 41 0f b7 d0
0012h add eax,edx                   ; ADD(Add_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 03 c2
0014h movzx eax,ax                  ; MOVZX(Movzx_r32_rm16) [EAX,AX]                       encoding(3 bytes) = 0f b7 c0
0017h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> fmaBytes => new byte[24]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB7,0xC1,0x0F,0xB7,0xD2,0x0F,0xAF,0xC2,0x41,0x0F,0xB7,0xD0,0x03,0xC2,0x0F,0xB7,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: int fma(int x, int y, int z)
; location: [7FFC872C4AF0h, 7FFC872C4AFDh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov eax,ecx                   ; MOV(Mov_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 8b c1
0007h imul eax,edx                  ; IMUL(Imul_r32_rm32) [EAX,EDX]                        encoding(3 bytes) = 0f af c2
000ah add eax,r8d                   ; ADD(Add_r32_rm32) [EAX,R8D]                          encoding(3 bytes) = 41 03 c0
000dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> fmaBytes => new byte[14]{0x0F,0x1F,0x44,0x00,0x00,0x8B,0xC1,0x0F,0xAF,0xC2,0x41,0x03,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: uint fma(uint x, uint y, uint z)
; location: [7FFC872C4B10h, 7FFC872C4B1Dh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov eax,ecx                   ; MOV(Mov_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 8b c1
0007h imul eax,edx                  ; IMUL(Imul_r32_rm32) [EAX,EDX]                        encoding(3 bytes) = 0f af c2
000ah add eax,r8d                   ; ADD(Add_r32_rm32) [EAX,R8D]                          encoding(3 bytes) = 41 03 c0
000dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> fmaBytes => new byte[14]{0x0F,0x1F,0x44,0x00,0x00,0x8B,0xC1,0x0F,0xAF,0xC2,0x41,0x03,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: long fma(long x, long y, long z)
; location: [7FFC872C4B30h, 7FFC872C4B3Fh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0008h imul rax,rdx                  ; IMUL(Imul_r64_rm64) [RAX,RDX]                        encoding(4 bytes) = 48 0f af c2
000ch add rax,r8                    ; ADD(Add_r64_rm64) [RAX,R8]                           encoding(3 bytes) = 49 03 c0
000fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> fmaBytes => new byte[16]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0xC1,0x48,0x0F,0xAF,0xC2,0x49,0x03,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ulong fma(ulong x, ulong y, ulong z)
; location: [7FFC872C4B50h, 7FFC872C4B5Fh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0008h imul rax,rdx                  ; IMUL(Imul_r64_rm64) [RAX,RDX]                        encoding(4 bytes) = 48 0f af c2
000ch add rax,r8                    ; ADD(Add_r64_rm64) [RAX,R8]                           encoding(3 bytes) = 49 03 c0
000fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> fmaBytes => new byte[16]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0xC1,0x48,0x0F,0xAF,0xC2,0x49,0x03,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: sbyte gcd(sbyte lhs, sbyte rhs)
; location: [7FFC872C4B70h, 7FFC872C4BB3h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cl                  ; MOVSX(Movsx_r64_rm8) [RAX,CL]                        encoding(4 bytes) = 48 0f be c1
0009h mov ecx,eax                   ; MOV(Mov_r32_rm32) [ECX,EAX]                          encoding(2 bytes) = 8b c8
000bh sar ecx,7                     ; SAR(Sar_rm32_imm8) [ECX,7h:imm8]                     encoding(3 bytes) = c1 f9 07
000eh add eax,ecx                   ; ADD(Add_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 03 c1
0010h xor eax,ecx                   ; XOR(Xor_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 33 c1
0012h movsx rax,al                  ; MOVSX(Movsx_r64_rm8) [RAX,AL]                        encoding(4 bytes) = 48 0f be c0
0016h movsx rdx,dl                  ; MOVSX(Movsx_r64_rm8) [RDX,DL]                        encoding(4 bytes) = 48 0f be d2
001ah mov ecx,edx                   ; MOV(Mov_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 8b ca
001ch sar ecx,7                     ; SAR(Sar_rm32_imm8) [ECX,7h:imm8]                     encoding(3 bytes) = c1 f9 07
001fh add edx,ecx                   ; ADD(Add_r32_rm32) [EDX,ECX]                          encoding(2 bytes) = 03 d1
0021h xor edx,ecx                   ; XOR(Xor_r32_rm32) [EDX,ECX]                          encoding(2 bytes) = 33 d1
0023h movsx rcx,dl                  ; MOVSX(Movsx_r64_rm8) [RCX,DL]                        encoding(4 bytes) = 48 0f be ca
0027h test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
0029h je short 0041h                ; JE(Je_rel8_64) [41h:jmp64]                           encoding(2 bytes) = 74 16
002bh cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
002ch idiv ecx                      ; IDIV(Idiv_rm32) [ECX]                                encoding(2 bytes) = f7 f9
002eh movsx rax,dl                  ; MOVSX(Movsx_r64_rm8) [RAX,DL]                        encoding(4 bytes) = 48 0f be c2
0032h mov edx,ecx                   ; MOV(Mov_r32_rm32) [EDX,ECX]                          encoding(2 bytes) = 8b d1
0034h mov ecx,eax                   ; MOV(Mov_r32_rm32) [ECX,EAX]                          encoding(2 bytes) = 8b c8
0036h test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
0038h jne short 003dh               ; JNE(Jne_rel8_64) [3Dh:jmp64]                         encoding(2 bytes) = 75 03
003ah mov eax,edx                   ; MOV(Mov_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 8b c2
003ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
003dh mov eax,edx                   ; MOV(Mov_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 8b c2
003fh jmp short 002bh               ; JMP(Jmp_rel8_64) [2Bh:jmp64]                         encoding(2 bytes) = eb ea
0041h mov edx,eax                   ; MOV(Mov_r32_rm32) [EDX,EAX]                          encoding(2 bytes) = 8b d0
0043h jmp short 003ah               ; JMP(Jmp_rel8_64) [3Ah:jmp64]                         encoding(2 bytes) = eb f5
; static ReadOnlySpan<byte> gcdBytes => new byte[69]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBE,0xC1,0x8B,0xC8,0xC1,0xF9,0x07,0x03,0xC1,0x33,0xC1,0x48,0x0F,0xBE,0xC0,0x48,0x0F,0xBE,0xD2,0x8B,0xCA,0xC1,0xF9,0x07,0x03,0xD1,0x33,0xD1,0x48,0x0F,0xBE,0xCA,0x85,0xC9,0x74,0x16,0x99,0xF7,0xF9,0x48,0x0F,0xBE,0xC2,0x8B,0xD1,0x8B,0xC8,0x85,0xC9,0x75,0x03,0x8B,0xC2,0xC3,0x8B,0xC2,0xEB,0xEA,0x8B,0xD0,0xEB,0xF5};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: byte gcd(byte lhs, byte rhs)
; location: [7FFC872C4BD0h, 7FFC872C4BECh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h test dl,dl                    ; TEST(Test_rm8_r8) [DL,DL]                            encoding(2 bytes) = 84 d2
0007h je short 0019h                ; JE(Je_rel8_64) [19h:jmp64]                           encoding(2 bytes) = 74 10
0009h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
000ch movzx ecx,dl                  ; MOVZX(Movzx_r32_rm8) [ECX,DL]                        encoding(3 bytes) = 0f b6 ca
000fh cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
0010h idiv ecx                      ; IDIV(Idiv_rm32) [ECX]                                encoding(2 bytes) = f7 f9
0012h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
0015h test dl,dl                    ; TEST(Test_rm8_r8) [DL,DL]                            encoding(2 bytes) = 84 d2
0017h jne short 0009h               ; JNE(Jne_rel8_64) [9h:jmp64]                          encoding(2 bytes) = 75 f0
0019h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
001ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> gcdBytes => new byte[29]{0x0F,0x1F,0x44,0x00,0x00,0x84,0xD2,0x74,0x10,0x0F,0xB6,0xC1,0x0F,0xB6,0xCA,0x99,0xF7,0xF9,0x0F,0xB6,0xD2,0x84,0xD2,0x75,0xF0,0x0F,0xB6,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: short gcd(short lhs, short rhs)
; location: [7FFC872C4C00h, 7FFC872C4C43h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cx                  ; MOVSX(Movsx_r64_rm16) [RAX,CX]                       encoding(4 bytes) = 48 0f bf c1
0009h mov ecx,eax                   ; MOV(Mov_r32_rm32) [ECX,EAX]                          encoding(2 bytes) = 8b c8
000bh sar ecx,0Fh                   ; SAR(Sar_rm32_imm8) [ECX,fh:imm8]                     encoding(3 bytes) = c1 f9 0f
000eh add eax,ecx                   ; ADD(Add_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 03 c1
0010h xor eax,ecx                   ; XOR(Xor_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 33 c1
0012h movsx rax,ax                  ; MOVSX(Movsx_r64_rm16) [RAX,AX]                       encoding(4 bytes) = 48 0f bf c0
0016h movsx rdx,dx                  ; MOVSX(Movsx_r64_rm16) [RDX,DX]                       encoding(4 bytes) = 48 0f bf d2
001ah mov ecx,edx                   ; MOV(Mov_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 8b ca
001ch sar ecx,0Fh                   ; SAR(Sar_rm32_imm8) [ECX,fh:imm8]                     encoding(3 bytes) = c1 f9 0f
001fh add edx,ecx                   ; ADD(Add_r32_rm32) [EDX,ECX]                          encoding(2 bytes) = 03 d1
0021h xor edx,ecx                   ; XOR(Xor_r32_rm32) [EDX,ECX]                          encoding(2 bytes) = 33 d1
0023h movsx rcx,dx                  ; MOVSX(Movsx_r64_rm16) [RCX,DX]                       encoding(4 bytes) = 48 0f bf ca
0027h test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
0029h je short 0041h                ; JE(Je_rel8_64) [41h:jmp64]                           encoding(2 bytes) = 74 16
002bh cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
002ch idiv ecx                      ; IDIV(Idiv_rm32) [ECX]                                encoding(2 bytes) = f7 f9
002eh movsx rax,dx                  ; MOVSX(Movsx_r64_rm16) [RAX,DX]                       encoding(4 bytes) = 48 0f bf c2
0032h mov edx,ecx                   ; MOV(Mov_r32_rm32) [EDX,ECX]                          encoding(2 bytes) = 8b d1
0034h mov ecx,eax                   ; MOV(Mov_r32_rm32) [ECX,EAX]                          encoding(2 bytes) = 8b c8
0036h test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
0038h jne short 003dh               ; JNE(Jne_rel8_64) [3Dh:jmp64]                         encoding(2 bytes) = 75 03
003ah mov eax,edx                   ; MOV(Mov_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 8b c2
003ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
003dh mov eax,edx                   ; MOV(Mov_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 8b c2
003fh jmp short 002bh               ; JMP(Jmp_rel8_64) [2Bh:jmp64]                         encoding(2 bytes) = eb ea
0041h mov edx,eax                   ; MOV(Mov_r32_rm32) [EDX,EAX]                          encoding(2 bytes) = 8b d0
0043h jmp short 003ah               ; JMP(Jmp_rel8_64) [3Ah:jmp64]                         encoding(2 bytes) = eb f5
; static ReadOnlySpan<byte> gcdBytes => new byte[69]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBF,0xC1,0x8B,0xC8,0xC1,0xF9,0x0F,0x03,0xC1,0x33,0xC1,0x48,0x0F,0xBF,0xC0,0x48,0x0F,0xBF,0xD2,0x8B,0xCA,0xC1,0xF9,0x0F,0x03,0xD1,0x33,0xD1,0x48,0x0F,0xBF,0xCA,0x85,0xC9,0x74,0x16,0x99,0xF7,0xF9,0x48,0x0F,0xBF,0xC2,0x8B,0xD1,0x8B,0xC8,0x85,0xC9,0x75,0x03,0x8B,0xC2,0xC3,0x8B,0xC2,0xEB,0xEA,0x8B,0xD0,0xEB,0xF5};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ushort gcd(ushort lhs, ushort rhs)
; location: [7FFC872C4C60h, 7FFC872C4C82h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,dx                  ; MOVZX(Movzx_r32_rm16) [EAX,DX]                       encoding(3 bytes) = 0f b7 c2
0008h test eax,eax                  ; TEST(Test_rm32_r32) [EAX,EAX]                        encoding(2 bytes) = 85 c0
000ah je short 001fh                ; JE(Je_rel8_64) [1Fh:jmp64]                           encoding(2 bytes) = 74 13
000ch movzx eax,cx                  ; MOVZX(Movzx_r32_rm16) [EAX,CX]                       encoding(3 bytes) = 0f b7 c1
000fh movzx ecx,dx                  ; MOVZX(Movzx_r32_rm16) [ECX,DX]                       encoding(3 bytes) = 0f b7 ca
0012h cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
0013h idiv ecx                      ; IDIV(Idiv_rm32) [ECX]                                encoding(2 bytes) = f7 f9
0015h movzx edx,dx                  ; MOVZX(Movzx_r32_rm16) [EDX,DX]                       encoding(3 bytes) = 0f b7 d2
0018h movzx eax,dx                  ; MOVZX(Movzx_r32_rm16) [EAX,DX]                       encoding(3 bytes) = 0f b7 c2
001bh test eax,eax                  ; TEST(Test_rm32_r32) [EAX,EAX]                        encoding(2 bytes) = 85 c0
001dh jne short 000ch               ; JNE(Jne_rel8_64) [Ch:jmp64]                          encoding(2 bytes) = 75 ed
001fh movzx eax,cx                  ; MOVZX(Movzx_r32_rm16) [EAX,CX]                       encoding(3 bytes) = 0f b7 c1
0022h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> gcdBytes => new byte[35]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB7,0xC2,0x85,0xC0,0x74,0x13,0x0F,0xB7,0xC1,0x0F,0xB7,0xCA,0x99,0xF7,0xF9,0x0F,0xB7,0xD2,0x0F,0xB7,0xC2,0x85,0xC0,0x75,0xED,0x0F,0xB7,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: int gcd(int lhs, int rhs)
; location: [7FFC872C4CA0h, 7FFC872C4CC9h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov eax,ecx                   ; MOV(Mov_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 8b c1
0007h sar eax,1Fh                   ; SAR(Sar_rm32_imm8) [EAX,1fh:imm8]                    encoding(3 bytes) = c1 f8 1f
000ah add ecx,eax                   ; ADD(Add_r32_rm32) [ECX,EAX]                          encoding(2 bytes) = 03 c8
000ch xor eax,ecx                   ; XOR(Xor_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 33 c1
000eh mov ecx,edx                   ; MOV(Mov_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 8b ca
0010h sar ecx,1Fh                   ; SAR(Sar_rm32_imm8) [ECX,1fh:imm8]                    encoding(3 bytes) = c1 f9 1f
0013h lea r8d,[rdx+rcx]             ; LEA(Lea_r32_m) [R8D,mem(Unknown,RDX:br,DS:sr)]       encoding(4 bytes) = 44 8d 04 0a
0017h xor ecx,r8d                   ; XOR(Xor_r32_rm32) [ECX,R8D]                          encoding(3 bytes) = 41 33 c8
001ah test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
001ch je short 0029h                ; JE(Je_rel8_64) [29h:jmp64]                           encoding(2 bytes) = 74 0b
001eh cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
001fh idiv ecx                      ; IDIV(Idiv_rm32) [ECX]                                encoding(2 bytes) = f7 f9
0021h mov eax,ecx                   ; MOV(Mov_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 8b c1
0023h mov ecx,edx                   ; MOV(Mov_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 8b ca
0025h test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
0027h jne short 001eh               ; JNE(Jne_rel8_64) [1Eh:jmp64]                         encoding(2 bytes) = 75 f5
0029h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> gcdBytes => new byte[42]{0x0F,0x1F,0x44,0x00,0x00,0x8B,0xC1,0xC1,0xF8,0x1F,0x03,0xC8,0x33,0xC1,0x8B,0xCA,0xC1,0xF9,0x1F,0x44,0x8D,0x04,0x0A,0x41,0x33,0xC8,0x85,0xC9,0x74,0x0B,0x99,0xF7,0xF9,0x8B,0xC1,0x8B,0xCA,0x85,0xC9,0x75,0xF5,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: uint gcd(uint lhs, uint rhs)
; location: [7FFC872C4CE0h, 7FFC872C4CFAh]
0000h mov eax,ecx                   ; MOV(Mov_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 8b c1
0002h mov r8d,edx                   ; MOV(Mov_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 8b c2
0005h test r8d,r8d                  ; TEST(Test_rm32_r32) [R8D,R8D]                        encoding(3 bytes) = 45 85 c0
0008h je short 001ah                ; JE(Je_rel8_64) [1Ah:jmp64]                           encoding(2 bytes) = 74 10
000ah xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
000ch div r8d                       ; DIV(Div_rm32) [R8D]                                  encoding(3 bytes) = 41 f7 f0
000fh mov eax,r8d                   ; MOV(Mov_r32_rm32) [EAX,R8D]                          encoding(3 bytes) = 41 8b c0
0012h mov r8d,edx                   ; MOV(Mov_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 8b c2
0015h test r8d,r8d                  ; TEST(Test_rm32_r32) [R8D,R8D]                        encoding(3 bytes) = 45 85 c0
0018h jne short 000ah               ; JNE(Jne_rel8_64) [Ah:jmp64]                          encoding(2 bytes) = 75 f0
001ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> gcdBytes => new byte[27]{0x8B,0xC1,0x44,0x8B,0xC2,0x45,0x85,0xC0,0x74,0x10,0x33,0xD2,0x41,0xF7,0xF0,0x41,0x8B,0xC0,0x44,0x8B,0xC2,0x45,0x85,0xC0,0x75,0xF0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: long gcd(long lhs, long rhs)
; location: [7FFC872C4D10h, 7FFC872C4D45h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0008h sar rax,3Fh                   ; SAR(Sar_rm64_imm8) [RAX,3fh:imm8]                    encoding(4 bytes) = 48 c1 f8 3f
000ch add rcx,rax                   ; ADD(Add_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 03 c8
000fh xor rax,rcx                   ; XOR(Xor_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 33 c1
0012h mov rcx,rdx                   ; MOV(Mov_r64_rm64) [RCX,RDX]                          encoding(3 bytes) = 48 8b ca
0015h sar rcx,3Fh                   ; SAR(Sar_rm64_imm8) [RCX,3fh:imm8]                    encoding(4 bytes) = 48 c1 f9 3f
0019h lea r8,[rdx+rcx]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RDX:br,DS:sr)]        encoding(4 bytes) = 4c 8d 04 0a
001dh xor rcx,r8                    ; XOR(Xor_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 33 c8
0020h test rcx,rcx                  ; TEST(Test_rm64_r64) [RCX,RCX]                        encoding(3 bytes) = 48 85 c9
0023h je short 0035h                ; JE(Je_rel8_64) [35h:jmp64]                           encoding(2 bytes) = 74 10
0025h cqo                           ; CQO(Cqo)                                             encoding(2 bytes) = 48 99
0027h idiv rcx                      ; IDIV(Idiv_rm64) [RCX]                                encoding(3 bytes) = 48 f7 f9
002ah mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
002dh mov rcx,rdx                   ; MOV(Mov_r64_rm64) [RCX,RDX]                          encoding(3 bytes) = 48 8b ca
0030h test rcx,rcx                  ; TEST(Test_rm64_r64) [RCX,RCX]                        encoding(3 bytes) = 48 85 c9
0033h jne short 0025h               ; JNE(Jne_rel8_64) [25h:jmp64]                         encoding(2 bytes) = 75 f0
0035h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> gcdBytes => new byte[54]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0xC1,0x48,0xC1,0xF8,0x3F,0x48,0x03,0xC8,0x48,0x33,0xC1,0x48,0x8B,0xCA,0x48,0xC1,0xF9,0x3F,0x4C,0x8D,0x04,0x0A,0x49,0x33,0xC8,0x48,0x85,0xC9,0x74,0x10,0x48,0x99,0x48,0xF7,0xF9,0x48,0x8B,0xC1,0x48,0x8B,0xCA,0x48,0x85,0xC9,0x75,0xF0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ulong gcd(ulong lhs, ulong rhs)
; location: [7FFC872C4D60h, 7FFC872C4D7Bh]
0000h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0003h mov r8,rdx                    ; MOV(Mov_r64_rm64) [R8,RDX]                           encoding(3 bytes) = 4c 8b c2
0006h test r8,r8                    ; TEST(Test_rm64_r64) [R8,R8]                          encoding(3 bytes) = 4d 85 c0
0009h je short 001bh                ; JE(Je_rel8_64) [1Bh:jmp64]                           encoding(2 bytes) = 74 10
000bh xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
000dh div r8                        ; DIV(Div_rm64) [R8]                                   encoding(3 bytes) = 49 f7 f0
0010h mov rax,r8                    ; MOV(Mov_r64_rm64) [RAX,R8]                           encoding(3 bytes) = 49 8b c0
0013h mov r8,rdx                    ; MOV(Mov_r64_rm64) [R8,RDX]                           encoding(3 bytes) = 4c 8b c2
0016h test r8,r8                    ; TEST(Test_rm64_r64) [R8,R8]                          encoding(3 bytes) = 4d 85 c0
0019h jne short 000bh               ; JNE(Jne_rel8_64) [Bh:jmp64]                          encoding(2 bytes) = 75 f0
001bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> gcdBytes => new byte[28]{0x48,0x8B,0xC1,0x4C,0x8B,0xC2,0x4D,0x85,0xC0,0x74,0x10,0x33,0xD2,0x49,0xF7,0xF0,0x49,0x8B,0xC0,0x4C,0x8B,0xC2,0x4D,0x85,0xC0,0x75,0xF0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: uint gcdbin(uint u, uint v)
; location: [7FFC872C4D90h, 7FFC872C4DEFh]
0000h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0004h nop                           ; NOP(Nopd)                                            encoding(1 byte ) = 90
0005h cmp ecx,edx                   ; CMP(Cmp_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 3b ca
0007h je short 0044h                ; JE(Je_rel8_64) [44h:jmp64]                           encoding(2 bytes) = 74 3b
0009h test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
000bh je short 0048h                ; JE(Je_rel8_64) [48h:jmp64]                           encoding(2 bytes) = 74 3b
000dh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
000fh je short 004ch                ; JE(Je_rel8_64) [4Ch:jmp64]                           encoding(2 bytes) = 74 3b
0011h mov eax,ecx                   ; MOV(Mov_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 8b c1
0013h not eax                       ; NOT(Not_rm32) [EAX]                                  encoding(2 bytes) = f7 d0
0015h test al,1                     ; TEST(Test_AL_imm8) [AL,1h:imm8]                      encoding(2 bytes) = a8 01
0017h je short 0022h                ; JE(Je_rel8_64) [22h:jmp64]                           encoding(2 bytes) = 74 09
0019h test dl,1                     ; TEST(Test_rm8_imm8) [DL,1h:imm8]                     encoding(3 bytes) = f6 c2 01
001ch je short 0050h                ; JE(Je_rel8_64) [50h:jmp64]                           encoding(2 bytes) = 74 32
001eh shr ecx,1                     ; SHR(Shr_rm32_1) [ECX,1h:imm8]                        encoding(2 bytes) = d1 e9
0020h jmp short 0005h               ; JMP(Jmp_rel8_64) [5h:jmp64]                          encoding(2 bytes) = eb e3
0022h mov eax,edx                   ; MOV(Mov_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 8b c2
0024h not eax                       ; NOT(Not_rm32) [EAX]                                  encoding(2 bytes) = f7 d0
0026h test al,1                     ; TEST(Test_AL_imm8) [AL,1h:imm8]                      encoding(2 bytes) = a8 01
0028h je short 002eh                ; JE(Je_rel8_64) [2Eh:jmp64]                           encoding(2 bytes) = 74 04
002ah shr edx,1                     ; SHR(Shr_rm32_1) [EDX,1h:imm8]                        encoding(2 bytes) = d1 ea
002ch jmp short 0005h               ; JMP(Jmp_rel8_64) [5h:jmp64]                          encoding(2 bytes) = eb d7
002eh cmp ecx,edx                   ; CMP(Cmp_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 3b ca
0030h jbe short 0038h               ; JBE(Jbe_rel8_64) [38h:jmp64]                         encoding(2 bytes) = 76 06
0032h sub ecx,edx                   ; SUB(Sub_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 2b ca
0034h shr ecx,1                     ; SHR(Shr_rm32_1) [ECX,1h:imm8]                        encoding(2 bytes) = d1 e9
0036h jmp short 0005h               ; JMP(Jmp_rel8_64) [5h:jmp64]                          encoding(2 bytes) = eb cd
0038h sub edx,ecx                   ; SUB(Sub_r32_rm32) [EDX,ECX]                          encoding(2 bytes) = 2b d1
003ah shr edx,1                     ; SHR(Shr_rm32_1) [EDX,1h:imm8]                        encoding(2 bytes) = d1 ea
003ch mov eax,ecx                   ; MOV(Mov_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 8b c1
003eh mov ecx,edx                   ; MOV(Mov_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 8b ca
0040h mov edx,eax                   ; MOV(Mov_r32_rm32) [EDX,EAX]                          encoding(2 bytes) = 8b d0
0042h jmp short 0005h               ; JMP(Jmp_rel8_64) [5h:jmp64]                          encoding(2 bytes) = eb c1
0044h mov eax,ecx                   ; MOV(Mov_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 8b c1
0046h jmp short 005bh               ; JMP(Jmp_rel8_64) [5Bh:jmp64]                         encoding(2 bytes) = eb 13
0048h mov eax,edx                   ; MOV(Mov_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 8b c2
004ah jmp short 005bh               ; JMP(Jmp_rel8_64) [5Bh:jmp64]                         encoding(2 bytes) = eb 0f
004ch mov eax,ecx                   ; MOV(Mov_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 8b c1
004eh jmp short 005bh               ; JMP(Jmp_rel8_64) [5Bh:jmp64]                         encoding(2 bytes) = eb 0b
0050h shr ecx,1                     ; SHR(Shr_rm32_1) [ECX,1h:imm8]                        encoding(2 bytes) = d1 e9
0052h shr edx,1                     ; SHR(Shr_rm32_1) [EDX,1h:imm8]                        encoding(2 bytes) = d1 ea
0054h call 7FFC86C18308h            ; CALL(Call_rel32_64) [FFFFFFFFFF953578h:jmp64]        encoding(5 bytes) = e8 1f 35 95 ff
0059h shl eax,1                     ; SHL(Shl_rm32_1) [EAX,1h:imm8]                        encoding(2 bytes) = d1 e0
005bh add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
005fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> gcdbinBytes => new byte[96]{0x48,0x83,0xEC,0x28,0x90,0x3B,0xCA,0x74,0x3B,0x85,0xC9,0x74,0x3B,0x85,0xD2,0x74,0x3B,0x8B,0xC1,0xF7,0xD0,0xA8,0x01,0x74,0x09,0xF6,0xC2,0x01,0x74,0x32,0xD1,0xE9,0xEB,0xE3,0x8B,0xC2,0xF7,0xD0,0xA8,0x01,0x74,0x04,0xD1,0xEA,0xEB,0xD7,0x3B,0xCA,0x76,0x06,0x2B,0xCA,0xD1,0xE9,0xEB,0xCD,0x2B,0xD1,0xD1,0xEA,0x8B,0xC1,0x8B,0xCA,0x8B,0xD0,0xEB,0xC1,0x8B,0xC1,0xEB,0x13,0x8B,0xC2,0xEB,0x0F,0x8B,0xC1,0xEB,0x0B,0xD1,0xE9,0xD1,0xEA,0xE8,0x1F,0x35,0x95,0xFF,0xD1,0xE0,0x48,0x83,0xC4,0x28,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ulong gcdbin(ulong u, ulong v)
; location: [7FFC872C4E10h, 7FFC872C4E87h]
0000h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0004h nop                           ; NOP(Nopd)                                            encoding(1 byte ) = 90
0005h cmp rcx,rdx                   ; CMP(Cmp_r64_rm64) [RCX,RDX]                          encoding(3 bytes) = 48 3b ca
0008h je short 0056h                ; JE(Je_rel8_64) [56h:jmp64]                           encoding(2 bytes) = 74 4c
000ah test rcx,rcx                  ; TEST(Test_rm64_r64) [RCX,RCX]                        encoding(3 bytes) = 48 85 c9
000dh je short 005bh                ; JE(Je_rel8_64) [5Bh:jmp64]                           encoding(2 bytes) = 74 4c
000fh test rdx,rdx                  ; TEST(Test_rm64_r64) [RDX,RDX]                        encoding(3 bytes) = 48 85 d2
0012h je short 0060h                ; JE(Je_rel8_64) [60h:jmp64]                           encoding(2 bytes) = 74 4c
0014h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0017h not rax                       ; NOT(Not_rm64) [RAX]                                  encoding(3 bytes) = 48 f7 d0
001ah test al,1                     ; TEST(Test_AL_imm8) [AL,1h:imm8]                      encoding(2 bytes) = a8 01
001ch je short 0029h                ; JE(Je_rel8_64) [29h:jmp64]                           encoding(2 bytes) = 74 0b
001eh mov eax,edx                   ; MOV(Mov_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 8b c2
0020h test al,1                     ; TEST(Test_AL_imm8) [AL,1h:imm8]                      encoding(2 bytes) = a8 01
0022h je short 0065h                ; JE(Je_rel8_64) [65h:jmp64]                           encoding(2 bytes) = 74 41
0024h shr rcx,1                     ; SHR(Shr_rm64_1) [RCX,1h:imm8]                        encoding(3 bytes) = 48 d1 e9
0027h jmp short 0005h               ; JMP(Jmp_rel8_64) [5h:jmp64]                          encoding(2 bytes) = eb dc
0029h mov rax,rdx                   ; MOV(Mov_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 8b c2
002ch not rax                       ; NOT(Not_rm64) [RAX]                                  encoding(3 bytes) = 48 f7 d0
002fh test al,1                     ; TEST(Test_AL_imm8) [AL,1h:imm8]                      encoding(2 bytes) = a8 01
0031h je short 0038h                ; JE(Je_rel8_64) [38h:jmp64]                           encoding(2 bytes) = 74 05
0033h shr rdx,1                     ; SHR(Shr_rm64_1) [RDX,1h:imm8]                        encoding(3 bytes) = 48 d1 ea
0036h jmp short 0005h               ; JMP(Jmp_rel8_64) [5h:jmp64]                          encoding(2 bytes) = eb cd
0038h cmp rcx,rdx                   ; CMP(Cmp_r64_rm64) [RCX,RDX]                          encoding(3 bytes) = 48 3b ca
003bh jbe short 0045h               ; JBE(Jbe_rel8_64) [45h:jmp64]                         encoding(2 bytes) = 76 08
003dh sub rcx,rdx                   ; SUB(Sub_r64_rm64) [RCX,RDX]                          encoding(3 bytes) = 48 2b ca
0040h shr rcx,1                     ; SHR(Shr_rm64_1) [RCX,1h:imm8]                        encoding(3 bytes) = 48 d1 e9
0043h jmp short 0005h               ; JMP(Jmp_rel8_64) [5h:jmp64]                          encoding(2 bytes) = eb c0
0045h sub rdx,rcx                   ; SUB(Sub_r64_rm64) [RDX,RCX]                          encoding(3 bytes) = 48 2b d1
0048h shr rdx,1                     ; SHR(Shr_rm64_1) [RDX,1h:imm8]                        encoding(3 bytes) = 48 d1 ea
004bh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
004eh mov rcx,rdx                   ; MOV(Mov_r64_rm64) [RCX,RDX]                          encoding(3 bytes) = 48 8b ca
0051h mov rdx,rax                   ; MOV(Mov_r64_rm64) [RDX,RAX]                          encoding(3 bytes) = 48 8b d0
0054h jmp short 0005h               ; JMP(Jmp_rel8_64) [5h:jmp64]                          encoding(2 bytes) = eb af
0056h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0059h jmp short 0073h               ; JMP(Jmp_rel8_64) [73h:jmp64]                         encoding(2 bytes) = eb 18
005bh mov rax,rdx                   ; MOV(Mov_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 8b c2
005eh jmp short 0073h               ; JMP(Jmp_rel8_64) [73h:jmp64]                         encoding(2 bytes) = eb 13
0060h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0063h jmp short 0073h               ; JMP(Jmp_rel8_64) [73h:jmp64]                         encoding(2 bytes) = eb 0e
0065h shr rcx,1                     ; SHR(Shr_rm64_1) [RCX,1h:imm8]                        encoding(3 bytes) = 48 d1 e9
0068h shr rdx,1                     ; SHR(Shr_rm64_1) [RDX,1h:imm8]                        encoding(3 bytes) = 48 d1 ea
006bh call 7FFC86C18310h            ; CALL(Call_rel32_64) [FFFFFFFFFF953500h:jmp64]        encoding(5 bytes) = e8 90 34 95 ff
0070h shl rax,1                     ; SHL(Shl_rm64_1) [RAX,1h:imm8]                        encoding(3 bytes) = 48 d1 e0
0073h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
0077h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> gcdbinBytes => new byte[120]{0x48,0x83,0xEC,0x28,0x90,0x48,0x3B,0xCA,0x74,0x4C,0x48,0x85,0xC9,0x74,0x4C,0x48,0x85,0xD2,0x74,0x4C,0x48,0x8B,0xC1,0x48,0xF7,0xD0,0xA8,0x01,0x74,0x0B,0x8B,0xC2,0xA8,0x01,0x74,0x41,0x48,0xD1,0xE9,0xEB,0xDC,0x48,0x8B,0xC2,0x48,0xF7,0xD0,0xA8,0x01,0x74,0x05,0x48,0xD1,0xEA,0xEB,0xCD,0x48,0x3B,0xCA,0x76,0x08,0x48,0x2B,0xCA,0x48,0xD1,0xE9,0xEB,0xC0,0x48,0x2B,0xD1,0x48,0xD1,0xEA,0x48,0x8B,0xC1,0x48,0x8B,0xCA,0x48,0x8B,0xD0,0xEB,0xAF,0x48,0x8B,0xC1,0xEB,0x18,0x48,0x8B,0xC2,0xEB,0x13,0x48,0x8B,0xC1,0xEB,0x0E,0x48,0xD1,0xE9,0x48,0xD1,0xEA,0xE8,0x90,0x34,0x95,0xFF,0x48,0xD1,0xE0,0x48,0x83,0xC4,0x28,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: byte gcdbin(byte u, byte v)
; location: [7FFC872C4EA0h, 7FFC872C4EB7h]
0000h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0004h nop                           ; NOP(Nopd)                                            encoding(1 byte ) = 90
0005h movzx ecx,cl                  ; MOVZX(Movzx_r32_rm8) [ECX,CL]                        encoding(3 bytes) = 0f b6 c9
0008h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
000bh call 7FFC872C4D90h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFFEF0h:jmp64]        encoding(5 bytes) = e8 e0 fe ff ff
0010h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0013h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
0017h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> gcdbinBytes => new byte[24]{0x48,0x83,0xEC,0x28,0x90,0x0F,0xB6,0xC9,0x0F,0xB6,0xD2,0xE8,0xE0,0xFE,0xFF,0xFF,0x0F,0xB6,0xC0,0x48,0x83,0xC4,0x28,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ushort gcdbin(ushort u, ushort v)
; location: [7FFC872C4ED0h, 7FFC872C4EE7h]
0000h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0004h nop                           ; NOP(Nopd)                                            encoding(1 byte ) = 90
0005h movzx ecx,cx                  ; MOVZX(Movzx_r32_rm16) [ECX,CX]                       encoding(3 bytes) = 0f b7 c9
0008h movzx edx,dx                  ; MOVZX(Movzx_r32_rm16) [EDX,DX]                       encoding(3 bytes) = 0f b7 d2
000bh call 7FFC872C4D90h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFFEC0h:jmp64]        encoding(5 bytes) = e8 b0 fe ff ff
0010h movzx eax,ax                  ; MOVZX(Movzx_r32_rm16) [EAX,AX]                       encoding(3 bytes) = 0f b7 c0
0013h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
0017h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> gcdbinBytes => new byte[24]{0x48,0x83,0xEC,0x28,0x90,0x0F,0xB7,0xC9,0x0F,0xB7,0xD2,0xE8,0xB0,0xFE,0xFF,0xFF,0x0F,0xB7,0xC0,0x48,0x83,0xC4,0x28,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool gt(sbyte lhs, sbyte rhs)
; location: [7FFC872C4F00h, 7FFC872C4F15h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cl                  ; MOVSX(Movsx_r64_rm8) [RAX,CL]                        encoding(4 bytes) = 48 0f be c1
0009h movsx rdx,dl                  ; MOVSX(Movsx_r64_rm8) [RDX,DL]                        encoding(4 bytes) = 48 0f be d2
000dh cmp eax,edx                   ; CMP(Cmp_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 3b c2
000fh setg al                       ; SETG(Setg_rm8) [AL]                                  encoding(3 bytes) = 0f 9f c0
0012h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0015h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> gtBytes => new byte[22]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBE,0xC1,0x48,0x0F,0xBE,0xD2,0x3B,0xC2,0x0F,0x9F,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool gt(byte lhs, byte rhs)
; location: [7FFC872C4F30h, 7FFC872C4F43h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0008h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
000bh cmp eax,edx                   ; CMP(Cmp_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 3b c2
000dh setg al                       ; SETG(Setg_rm8) [AL]                                  encoding(3 bytes) = 0f 9f c0
0010h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> gtBytes => new byte[20]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC1,0x0F,0xB6,0xD2,0x3B,0xC2,0x0F,0x9F,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool gt(short lhs, short rhs)
; location: [7FFC872C4F60h, 7FFC872C4F75h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cx                  ; MOVSX(Movsx_r64_rm16) [RAX,CX]                       encoding(4 bytes) = 48 0f bf c1
0009h movsx rdx,dx                  ; MOVSX(Movsx_r64_rm16) [RDX,DX]                       encoding(4 bytes) = 48 0f bf d2
000dh cmp eax,edx                   ; CMP(Cmp_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 3b c2
000fh setg al                       ; SETG(Setg_rm8) [AL]                                  encoding(3 bytes) = 0f 9f c0
0012h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0015h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> gtBytes => new byte[22]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBF,0xC1,0x48,0x0F,0xBF,0xD2,0x3B,0xC2,0x0F,0x9F,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool gt(ushort lhs, ushort rhs)
; location: [7FFC872C4F90h, 7FFC872C4FA3h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cx                  ; MOVZX(Movzx_r32_rm16) [EAX,CX]                       encoding(3 bytes) = 0f b7 c1
0008h movzx edx,dx                  ; MOVZX(Movzx_r32_rm16) [EDX,DX]                       encoding(3 bytes) = 0f b7 d2
000bh cmp eax,edx                   ; CMP(Cmp_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 3b c2
000dh setg al                       ; SETG(Setg_rm8) [AL]                                  encoding(3 bytes) = 0f 9f c0
0010h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> gtBytes => new byte[20]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB7,0xC1,0x0F,0xB7,0xD2,0x3B,0xC2,0x0F,0x9F,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool gt(int lhs, int rhs)
; location: [7FFC872C4FC0h, 7FFC872C4FCDh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h cmp ecx,edx                   ; CMP(Cmp_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 3b ca
0007h setg al                       ; SETG(Setg_rm8) [AL]                                  encoding(3 bytes) = 0f 9f c0
000ah movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> gtBytes => new byte[14]{0x0F,0x1F,0x44,0x00,0x00,0x3B,0xCA,0x0F,0x9F,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool gt(uint lhs, uint rhs)
; location: [7FFC872C4FE0h, 7FFC872C4FEDh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h cmp ecx,edx                   ; CMP(Cmp_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 3b ca
0007h seta al                       ; SETA(Seta_rm8) [AL]                                  encoding(3 bytes) = 0f 97 c0
000ah movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> gtBytes => new byte[14]{0x0F,0x1F,0x44,0x00,0x00,0x3B,0xCA,0x0F,0x97,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool gt(long lhs, long rhs)
; location: [7FFC872C5000h, 7FFC872C500Eh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h cmp rcx,rdx                   ; CMP(Cmp_r64_rm64) [RCX,RDX]                          encoding(3 bytes) = 48 3b ca
0008h setg al                       ; SETG(Setg_rm8) [AL]                                  encoding(3 bytes) = 0f 9f c0
000bh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> gtBytes => new byte[15]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x3B,0xCA,0x0F,0x9F,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool gt(ulong lhs, ulong rhs)
; location: [7FFC872C5020h, 7FFC872C502Eh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h cmp rcx,rdx                   ; CMP(Cmp_r64_rm64) [RCX,RDX]                          encoding(3 bytes) = 48 3b ca
0008h seta al                       ; SETA(Seta_rm8) [AL]                                  encoding(3 bytes) = 0f 97 c0
000bh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> gtBytes => new byte[15]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x3B,0xCA,0x0F,0x97,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> gt(ReadOnlySpan<sbyte> lhs, ReadOnlySpan<sbyte> rhs, Span<bool> dst)
; location: [7FFC872C5040h, 7FFC872C50A4h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0003h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0004h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0008h mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000bh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000fh mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0012h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0015h xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
0018h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
001ah jle short 004ch               ; JLE(Jle_rel8_64) [4Ch:jmp64]                         encoding(2 bytes) = 7e 30
001ch cmp r11d,r9d                  ; CMP(Cmp_r32_rm32) [R11D,R9D]                         encoding(3 bytes) = 45 3b d9
001fh jae short 005fh               ; JAE(Jae_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 73 3e
0021h movsxd rsi,r11d               ; MOVSXD(Movsxd_r64_rm32) [RSI,R11D]                   encoding(3 bytes) = 49 63 f3
0024h lea rdi,[rax+rsi]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 30
0028h movsx rbx,byte ptr [r10+rsi]  ; MOVSX(Movsx_r64_rm8) [RBX,mem(8i,R10:br,DS:sr)]      encoding(5 bytes) = 49 0f be 1c 32
002dh cmp r11d,[r8+8]               ; CMP(Cmp_r32_rm32) [R11D,mem(32u,R8:br,DS:sr)]        encoding(4 bytes) = 45 3b 58 08
0031h jae short 005fh               ; JAE(Jae_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 73 2c
0033h mov rbp,[r8]                  ; MOV(Mov_r64_rm64) [RBP,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 28
0036h movsx rsi,byte ptr [rsi+rbp]  ; MOVSX(Movsx_r64_rm8) [RSI,mem(8i,RSI:br,DS:sr)]      encoding(5 bytes) = 48 0f be 34 2e
003bh cmp ebx,esi                   ; CMP(Cmp_r32_rm32) [EBX,ESI]                          encoding(2 bytes) = 3b de
003dh setg sil                      ; SETG(Setg_rm8) [SIL]                                 encoding(4 bytes) = 40 0f 9f c6
0041h mov [rdi],sil                 ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),SIL]           encoding(3 bytes) = 40 88 37
0044h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
0047h cmp r11d,edx                  ; CMP(Cmp_r32_rm32) [R11D,EDX]                         encoding(3 bytes) = 44 3b da
004ah jl short 001ch                ; JL(Jl_rel8_64) [1Ch:jmp64]                           encoding(2 bytes) = 7c d0
004ch mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
004fh mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0053h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0056h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
005ah pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
005bh pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
005ch pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
005dh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
005eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
005fh call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F59FD70h:jmp64]                encoding(5 bytes) = e8 0c fd 59 5f
0064h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> gtBytes => new byte[101]{0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x12,0x8B,0x52,0x08,0x45,0x33,0xDB,0x85,0xD2,0x7E,0x30,0x45,0x3B,0xD9,0x73,0x3E,0x49,0x63,0xF3,0x48,0x8D,0x3C,0x30,0x49,0x0F,0xBE,0x1C,0x32,0x45,0x3B,0x58,0x08,0x73,0x2C,0x49,0x8B,0x28,0x48,0x0F,0xBE,0x34,0x2E,0x3B,0xDE,0x40,0x0F,0x9F,0xC6,0x40,0x88,0x37,0x41,0xFF,0xC3,0x44,0x3B,0xDA,0x7C,0xD0,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0xC3,0xE8,0x0C,0xFD,0x59,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> gt(ReadOnlySpan<byte> lhs, ReadOnlySpan<byte> rhs, Span<bool> dst)
; location: [7FFC872C50D0h, 7FFC872C5134h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0003h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0004h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0008h mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000bh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000fh mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0012h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0015h xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
0018h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
001ah jle short 004ch               ; JLE(Jle_rel8_64) [4Ch:jmp64]                         encoding(2 bytes) = 7e 30
001ch cmp r11d,r9d                  ; CMP(Cmp_r32_rm32) [R11D,R9D]                         encoding(3 bytes) = 45 3b d9
001fh jae short 005fh               ; JAE(Jae_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 73 3e
0021h movsxd rsi,r11d               ; MOVSXD(Movsxd_r64_rm32) [RSI,R11D]                   encoding(3 bytes) = 49 63 f3
0024h lea rdi,[rax+rsi]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 30
0028h movzx ebx,byte ptr [r10+rsi]  ; MOVZX(Movzx_r32_rm8) [EBX,mem(8u,R10:br,DS:sr)]      encoding(5 bytes) = 41 0f b6 1c 32
002dh cmp r11d,[r8+8]               ; CMP(Cmp_r32_rm32) [R11D,mem(32u,R8:br,DS:sr)]        encoding(4 bytes) = 45 3b 58 08
0031h jae short 005fh               ; JAE(Jae_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 73 2c
0033h mov rbp,[r8]                  ; MOV(Mov_r64_rm64) [RBP,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 28
0036h movzx esi,byte ptr [rsi+rbp]  ; MOVZX(Movzx_r32_rm8) [ESI,mem(8u,RSI:br,DS:sr)]      encoding(5 bytes) = 40 0f b6 34 2e
003bh cmp ebx,esi                   ; CMP(Cmp_r32_rm32) [EBX,ESI]                          encoding(2 bytes) = 3b de
003dh setg sil                      ; SETG(Setg_rm8) [SIL]                                 encoding(4 bytes) = 40 0f 9f c6
0041h mov [rdi],sil                 ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),SIL]           encoding(3 bytes) = 40 88 37
0044h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
0047h cmp r11d,edx                  ; CMP(Cmp_r32_rm32) [R11D,EDX]                         encoding(3 bytes) = 44 3b da
004ah jl short 001ch                ; JL(Jl_rel8_64) [1Ch:jmp64]                           encoding(2 bytes) = 7c d0
004ch mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
004fh mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0053h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0056h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
005ah pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
005bh pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
005ch pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
005dh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
005eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
005fh call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F59FCE0h:jmp64]                encoding(5 bytes) = e8 7c fc 59 5f
0064h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> gtBytes => new byte[101]{0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x12,0x8B,0x52,0x08,0x45,0x33,0xDB,0x85,0xD2,0x7E,0x30,0x45,0x3B,0xD9,0x73,0x3E,0x49,0x63,0xF3,0x48,0x8D,0x3C,0x30,0x41,0x0F,0xB6,0x1C,0x32,0x45,0x3B,0x58,0x08,0x73,0x2C,0x49,0x8B,0x28,0x40,0x0F,0xB6,0x34,0x2E,0x3B,0xDE,0x40,0x0F,0x9F,0xC6,0x40,0x88,0x37,0x41,0xFF,0xC3,0x44,0x3B,0xDA,0x7C,0xD0,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0xC3,0xE8,0x7C,0xFC,0x59,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> gt(ReadOnlySpan<short> lhs, ReadOnlySpan<short> rhs, Span<bool> dst)
; location: [7FFC872C5160h, 7FFC872C51C5h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0003h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0004h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0008h mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000bh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000fh mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0012h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0015h xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
0018h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
001ah jle short 004dh               ; JLE(Jle_rel8_64) [4Dh:jmp64]                         encoding(2 bytes) = 7e 31
001ch cmp r11d,r9d                  ; CMP(Cmp_r32_rm32) [R11D,R9D]                         encoding(3 bytes) = 45 3b d9
001fh jae short 0060h               ; JAE(Jae_rel8_64) [60h:jmp64]                         encoding(2 bytes) = 73 3f
0021h movsxd rsi,r11d               ; MOVSXD(Movsxd_r64_rm32) [RSI,R11D]                   encoding(3 bytes) = 49 63 f3
0024h lea rdi,[rax+rsi]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 30
0028h movsx rbx,word ptr [r10+rsi*2]; MOVSX(Movsx_r64_rm16) [RBX,mem(16i,R10:br,DS:sr)]    encoding(5 bytes) = 49 0f bf 1c 72
002dh cmp r11d,[r8+8]               ; CMP(Cmp_r32_rm32) [R11D,mem(32u,R8:br,DS:sr)]        encoding(4 bytes) = 45 3b 58 08
0031h jae short 0060h               ; JAE(Jae_rel8_64) [60h:jmp64]                         encoding(2 bytes) = 73 2d
0033h mov rbp,[r8]                  ; MOV(Mov_r64_rm64) [RBP,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 28
0036h movsx rsi,word ptr [rbp+rsi*2]; MOVSX(Movsx_r64_rm16) [RSI,mem(16i,RBP:br,SS:sr)]    encoding(6 bytes) = 48 0f bf 74 75 00
003ch cmp ebx,esi                   ; CMP(Cmp_r32_rm32) [EBX,ESI]                          encoding(2 bytes) = 3b de
003eh setg sil                      ; SETG(Setg_rm8) [SIL]                                 encoding(4 bytes) = 40 0f 9f c6
0042h mov [rdi],sil                 ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),SIL]           encoding(3 bytes) = 40 88 37
0045h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
0048h cmp r11d,edx                  ; CMP(Cmp_r32_rm32) [R11D,EDX]                         encoding(3 bytes) = 44 3b da
004bh jl short 001ch                ; JL(Jl_rel8_64) [1Ch:jmp64]                           encoding(2 bytes) = 7c cf
004dh mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0050h mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0054h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0057h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
005bh pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
005ch pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
005dh pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
005eh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
005fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0060h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F59FC50h:jmp64]                encoding(5 bytes) = e8 eb fb 59 5f
0065h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> gtBytes => new byte[102]{0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x12,0x8B,0x52,0x08,0x45,0x33,0xDB,0x85,0xD2,0x7E,0x31,0x45,0x3B,0xD9,0x73,0x3F,0x49,0x63,0xF3,0x48,0x8D,0x3C,0x30,0x49,0x0F,0xBF,0x1C,0x72,0x45,0x3B,0x58,0x08,0x73,0x2D,0x49,0x8B,0x28,0x48,0x0F,0xBF,0x74,0x75,0x00,0x3B,0xDE,0x40,0x0F,0x9F,0xC6,0x40,0x88,0x37,0x41,0xFF,0xC3,0x44,0x3B,0xDA,0x7C,0xCF,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0xC3,0xE8,0xEB,0xFB,0x59,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> gt(ReadOnlySpan<ushort> lhs, ReadOnlySpan<ushort> rhs, Span<bool> dst)
; location: [7FFC872C51F0h, 7FFC872C5254h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0003h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0004h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0008h mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000bh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000fh mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0012h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0015h xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
0018h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
001ah jle short 004ch               ; JLE(Jle_rel8_64) [4Ch:jmp64]                         encoding(2 bytes) = 7e 30
001ch cmp r11d,r9d                  ; CMP(Cmp_r32_rm32) [R11D,R9D]                         encoding(3 bytes) = 45 3b d9
001fh jae short 005fh               ; JAE(Jae_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 73 3e
0021h movsxd rsi,r11d               ; MOVSXD(Movsxd_r64_rm32) [RSI,R11D]                   encoding(3 bytes) = 49 63 f3
0024h lea rdi,[rax+rsi]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 30
0028h movzx ebx,word ptr [r10+rsi*2]; MOVZX(Movzx_r32_rm16) [EBX,mem(16u,R10:br,DS:sr)]    encoding(5 bytes) = 41 0f b7 1c 72
002dh cmp r11d,[r8+8]               ; CMP(Cmp_r32_rm32) [R11D,mem(32u,R8:br,DS:sr)]        encoding(4 bytes) = 45 3b 58 08
0031h jae short 005fh               ; JAE(Jae_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 73 2c
0033h mov rbp,[r8]                  ; MOV(Mov_r64_rm64) [RBP,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 28
0036h movzx esi,word ptr [rbp+rsi*2]; MOVZX(Movzx_r32_rm16) [ESI,mem(16u,RBP:br,SS:sr)]    encoding(5 bytes) = 0f b7 74 75 00
003bh cmp ebx,esi                   ; CMP(Cmp_r32_rm32) [EBX,ESI]                          encoding(2 bytes) = 3b de
003dh setg sil                      ; SETG(Setg_rm8) [SIL]                                 encoding(4 bytes) = 40 0f 9f c6
0041h mov [rdi],sil                 ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),SIL]           encoding(3 bytes) = 40 88 37
0044h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
0047h cmp r11d,edx                  ; CMP(Cmp_r32_rm32) [R11D,EDX]                         encoding(3 bytes) = 44 3b da
004ah jl short 001ch                ; JL(Jl_rel8_64) [1Ch:jmp64]                           encoding(2 bytes) = 7c d0
004ch mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
004fh mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0053h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0056h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
005ah pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
005bh pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
005ch pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
005dh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
005eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
005fh call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F59FBC0h:jmp64]                encoding(5 bytes) = e8 5c fb 59 5f
0064h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> gtBytes => new byte[101]{0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x12,0x8B,0x52,0x08,0x45,0x33,0xDB,0x85,0xD2,0x7E,0x30,0x45,0x3B,0xD9,0x73,0x3E,0x49,0x63,0xF3,0x48,0x8D,0x3C,0x30,0x41,0x0F,0xB7,0x1C,0x72,0x45,0x3B,0x58,0x08,0x73,0x2C,0x49,0x8B,0x28,0x0F,0xB7,0x74,0x75,0x00,0x3B,0xDE,0x40,0x0F,0x9F,0xC6,0x40,0x88,0x37,0x41,0xFF,0xC3,0x44,0x3B,0xDA,0x7C,0xD0,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0xC3,0xE8,0x5C,0xFB,0x59,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> gt(ReadOnlySpan<int> lhs, ReadOnlySpan<int> rhs, Span<bool> dst)
; location: [7FFC872C5280h, 7FFC872C52E2h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0003h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0004h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0008h mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000bh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000fh mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0012h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0015h xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
0018h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
001ah jle short 004ah               ; JLE(Jle_rel8_64) [4Ah:jmp64]                         encoding(2 bytes) = 7e 2e
001ch cmp r11d,r9d                  ; CMP(Cmp_r32_rm32) [R11D,R9D]                         encoding(3 bytes) = 45 3b d9
001fh jae short 005dh               ; JAE(Jae_rel8_64) [5Dh:jmp64]                         encoding(2 bytes) = 73 3c
0021h movsxd rsi,r11d               ; MOVSXD(Movsxd_r64_rm32) [RSI,R11D]                   encoding(3 bytes) = 49 63 f3
0024h lea rdi,[rax+rsi]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 30
0028h mov ebx,[r10+rsi*4]           ; MOV(Mov_r32_rm32) [EBX,mem(32u,R10:br,DS:sr)]        encoding(4 bytes) = 41 8b 1c b2
002ch cmp r11d,[r8+8]               ; CMP(Cmp_r32_rm32) [R11D,mem(32u,R8:br,DS:sr)]        encoding(4 bytes) = 45 3b 58 08
0030h jae short 005dh               ; JAE(Jae_rel8_64) [5Dh:jmp64]                         encoding(2 bytes) = 73 2b
0032h mov rbp,[r8]                  ; MOV(Mov_r64_rm64) [RBP,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 28
0035h mov esi,[rbp+rsi*4]           ; MOV(Mov_r32_rm32) [ESI,mem(32u,RBP:br,SS:sr)]        encoding(4 bytes) = 8b 74 b5 00
0039h cmp ebx,esi                   ; CMP(Cmp_r32_rm32) [EBX,ESI]                          encoding(2 bytes) = 3b de
003bh setg sil                      ; SETG(Setg_rm8) [SIL]                                 encoding(4 bytes) = 40 0f 9f c6
003fh mov [rdi],sil                 ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),SIL]           encoding(3 bytes) = 40 88 37
0042h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
0045h cmp r11d,edx                  ; CMP(Cmp_r32_rm32) [R11D,EDX]                         encoding(3 bytes) = 44 3b da
0048h jl short 001ch                ; JL(Jl_rel8_64) [1Ch:jmp64]                           encoding(2 bytes) = 7c d2
004ah mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
004dh mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0051h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0054h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
0058h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0059h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
005ah pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
005bh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
005ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
005dh call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F59FB30h:jmp64]                encoding(5 bytes) = e8 ce fa 59 5f
0062h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> gtBytes => new byte[99]{0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x12,0x8B,0x52,0x08,0x45,0x33,0xDB,0x85,0xD2,0x7E,0x2E,0x45,0x3B,0xD9,0x73,0x3C,0x49,0x63,0xF3,0x48,0x8D,0x3C,0x30,0x41,0x8B,0x1C,0xB2,0x45,0x3B,0x58,0x08,0x73,0x2B,0x49,0x8B,0x28,0x8B,0x74,0xB5,0x00,0x3B,0xDE,0x40,0x0F,0x9F,0xC6,0x40,0x88,0x37,0x41,0xFF,0xC3,0x44,0x3B,0xDA,0x7C,0xD2,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0xC3,0xE8,0xCE,0xFA,0x59,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> gt(ReadOnlySpan<uint> lhs, ReadOnlySpan<uint> rhs, Span<bool> dst)
; location: [7FFC872C5300h, 7FFC872C5362h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0003h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0004h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0008h mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000bh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000fh mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0012h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0015h xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
0018h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
001ah jle short 004ah               ; JLE(Jle_rel8_64) [4Ah:jmp64]                         encoding(2 bytes) = 7e 2e
001ch cmp r11d,r9d                  ; CMP(Cmp_r32_rm32) [R11D,R9D]                         encoding(3 bytes) = 45 3b d9
001fh jae short 005dh               ; JAE(Jae_rel8_64) [5Dh:jmp64]                         encoding(2 bytes) = 73 3c
0021h movsxd rsi,r11d               ; MOVSXD(Movsxd_r64_rm32) [RSI,R11D]                   encoding(3 bytes) = 49 63 f3
0024h lea rdi,[rax+rsi]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 30
0028h mov ebx,[r10+rsi*4]           ; MOV(Mov_r32_rm32) [EBX,mem(32u,R10:br,DS:sr)]        encoding(4 bytes) = 41 8b 1c b2
002ch cmp r11d,[r8+8]               ; CMP(Cmp_r32_rm32) [R11D,mem(32u,R8:br,DS:sr)]        encoding(4 bytes) = 45 3b 58 08
0030h jae short 005dh               ; JAE(Jae_rel8_64) [5Dh:jmp64]                         encoding(2 bytes) = 73 2b
0032h mov rbp,[r8]                  ; MOV(Mov_r64_rm64) [RBP,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 28
0035h mov esi,[rbp+rsi*4]           ; MOV(Mov_r32_rm32) [ESI,mem(32u,RBP:br,SS:sr)]        encoding(4 bytes) = 8b 74 b5 00
0039h cmp ebx,esi                   ; CMP(Cmp_r32_rm32) [EBX,ESI]                          encoding(2 bytes) = 3b de
003bh seta sil                      ; SETA(Seta_rm8) [SIL]                                 encoding(4 bytes) = 40 0f 97 c6
003fh mov [rdi],sil                 ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),SIL]           encoding(3 bytes) = 40 88 37
0042h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
0045h cmp r11d,edx                  ; CMP(Cmp_r32_rm32) [R11D,EDX]                         encoding(3 bytes) = 44 3b da
0048h jl short 001ch                ; JL(Jl_rel8_64) [1Ch:jmp64]                           encoding(2 bytes) = 7c d2
004ah mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
004dh mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0051h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0054h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
0058h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0059h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
005ah pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
005bh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
005ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
005dh call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F59FAB0h:jmp64]                encoding(5 bytes) = e8 4e fa 59 5f
0062h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> gtBytes => new byte[99]{0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x12,0x8B,0x52,0x08,0x45,0x33,0xDB,0x85,0xD2,0x7E,0x2E,0x45,0x3B,0xD9,0x73,0x3C,0x49,0x63,0xF3,0x48,0x8D,0x3C,0x30,0x41,0x8B,0x1C,0xB2,0x45,0x3B,0x58,0x08,0x73,0x2B,0x49,0x8B,0x28,0x8B,0x74,0xB5,0x00,0x3B,0xDE,0x40,0x0F,0x97,0xC6,0x40,0x88,0x37,0x41,0xFF,0xC3,0x44,0x3B,0xDA,0x7C,0xD2,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0xC3,0xE8,0x4E,0xFA,0x59,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> gt(ReadOnlySpan<long> lhs, ReadOnlySpan<long> rhs, Span<bool> dst)
; location: [7FFC872C5380h, 7FFC872C53E4h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0003h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0004h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0008h mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000bh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000fh mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0012h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0015h xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
0018h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
001ah jle short 004ch               ; JLE(Jle_rel8_64) [4Ch:jmp64]                         encoding(2 bytes) = 7e 30
001ch cmp r11d,r9d                  ; CMP(Cmp_r32_rm32) [R11D,R9D]                         encoding(3 bytes) = 45 3b d9
001fh jae short 005fh               ; JAE(Jae_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 73 3e
0021h movsxd rsi,r11d               ; MOVSXD(Movsxd_r64_rm32) [RSI,R11D]                   encoding(3 bytes) = 49 63 f3
0024h lea rdi,[rax+rsi]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 30
0028h mov rbx,[r10+rsi*8]           ; MOV(Mov_r64_rm64) [RBX,mem(64u,R10:br,DS:sr)]        encoding(4 bytes) = 49 8b 1c f2
002ch cmp r11d,[r8+8]               ; CMP(Cmp_r32_rm32) [R11D,mem(32u,R8:br,DS:sr)]        encoding(4 bytes) = 45 3b 58 08
0030h jae short 005fh               ; JAE(Jae_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 73 2d
0032h mov rbp,[r8]                  ; MOV(Mov_r64_rm64) [RBP,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 28
0035h mov rsi,[rbp+rsi*8]           ; MOV(Mov_r64_rm64) [RSI,mem(64u,RBP:br,SS:sr)]        encoding(5 bytes) = 48 8b 74 f5 00
003ah cmp rbx,rsi                   ; CMP(Cmp_r64_rm64) [RBX,RSI]                          encoding(3 bytes) = 48 3b de
003dh setg sil                      ; SETG(Setg_rm8) [SIL]                                 encoding(4 bytes) = 40 0f 9f c6
0041h mov [rdi],sil                 ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),SIL]           encoding(3 bytes) = 40 88 37
0044h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
0047h cmp r11d,edx                  ; CMP(Cmp_r32_rm32) [R11D,EDX]                         encoding(3 bytes) = 44 3b da
004ah jl short 001ch                ; JL(Jl_rel8_64) [1Ch:jmp64]                           encoding(2 bytes) = 7c d0
004ch mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
004fh mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0053h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0056h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
005ah pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
005bh pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
005ch pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
005dh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
005eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
005fh call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F59FA30h:jmp64]                encoding(5 bytes) = e8 cc f9 59 5f
0064h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> gtBytes => new byte[101]{0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x12,0x8B,0x52,0x08,0x45,0x33,0xDB,0x85,0xD2,0x7E,0x30,0x45,0x3B,0xD9,0x73,0x3E,0x49,0x63,0xF3,0x48,0x8D,0x3C,0x30,0x49,0x8B,0x1C,0xF2,0x45,0x3B,0x58,0x08,0x73,0x2D,0x49,0x8B,0x28,0x48,0x8B,0x74,0xF5,0x00,0x48,0x3B,0xDE,0x40,0x0F,0x9F,0xC6,0x40,0x88,0x37,0x41,0xFF,0xC3,0x44,0x3B,0xDA,0x7C,0xD0,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0xC3,0xE8,0xCC,0xF9,0x59,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> gt(ReadOnlySpan<ulong> lhs, ReadOnlySpan<ulong> rhs, Span<bool> dst)
; location: [7FFC872C5410h, 7FFC872C5474h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0003h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0004h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0008h mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000bh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000fh mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0012h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0015h xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
0018h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
001ah jle short 004ch               ; JLE(Jle_rel8_64) [4Ch:jmp64]                         encoding(2 bytes) = 7e 30
001ch cmp r11d,r9d                  ; CMP(Cmp_r32_rm32) [R11D,R9D]                         encoding(3 bytes) = 45 3b d9
001fh jae short 005fh               ; JAE(Jae_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 73 3e
0021h movsxd rsi,r11d               ; MOVSXD(Movsxd_r64_rm32) [RSI,R11D]                   encoding(3 bytes) = 49 63 f3
0024h lea rdi,[rax+rsi]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 30
0028h mov rbx,[r10+rsi*8]           ; MOV(Mov_r64_rm64) [RBX,mem(64u,R10:br,DS:sr)]        encoding(4 bytes) = 49 8b 1c f2
002ch cmp r11d,[r8+8]               ; CMP(Cmp_r32_rm32) [R11D,mem(32u,R8:br,DS:sr)]        encoding(4 bytes) = 45 3b 58 08
0030h jae short 005fh               ; JAE(Jae_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 73 2d
0032h mov rbp,[r8]                  ; MOV(Mov_r64_rm64) [RBP,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 28
0035h mov rsi,[rbp+rsi*8]           ; MOV(Mov_r64_rm64) [RSI,mem(64u,RBP:br,SS:sr)]        encoding(5 bytes) = 48 8b 74 f5 00
003ah cmp rbx,rsi                   ; CMP(Cmp_r64_rm64) [RBX,RSI]                          encoding(3 bytes) = 48 3b de
003dh seta sil                      ; SETA(Seta_rm8) [SIL]                                 encoding(4 bytes) = 40 0f 97 c6
0041h mov [rdi],sil                 ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),SIL]           encoding(3 bytes) = 40 88 37
0044h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
0047h cmp r11d,edx                  ; CMP(Cmp_r32_rm32) [R11D,EDX]                         encoding(3 bytes) = 44 3b da
004ah jl short 001ch                ; JL(Jl_rel8_64) [1Ch:jmp64]                           encoding(2 bytes) = 7c d0
004ch mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
004fh mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0053h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0056h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
005ah pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
005bh pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
005ch pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
005dh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
005eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
005fh call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F59F9A0h:jmp64]                encoding(5 bytes) = e8 3c f9 59 5f
0064h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> gtBytes => new byte[101]{0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x12,0x8B,0x52,0x08,0x45,0x33,0xDB,0x85,0xD2,0x7E,0x30,0x45,0x3B,0xD9,0x73,0x3E,0x49,0x63,0xF3,0x48,0x8D,0x3C,0x30,0x49,0x8B,0x1C,0xF2,0x45,0x3B,0x58,0x08,0x73,0x2D,0x49,0x8B,0x28,0x48,0x8B,0x74,0xF5,0x00,0x48,0x3B,0xDE,0x40,0x0F,0x97,0xC6,0x40,0x88,0x37,0x41,0xFF,0xC3,0x44,0x3B,0xDA,0x7C,0xD0,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0xC3,0xE8,0x3C,0xF9,0x59,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> gt(ReadOnlySpan<sbyte> lhs, ReadOnlySpan<sbyte> rhs)
; location: [7FFC872C54A0h, 7FFC872C55A5h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push r12                      ; PUSH(Push_r64) [R12]                                 encoding(2 bytes) = 41 54
0006h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0007h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0008h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0009h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
000ah sub rsp,60h                   ; SUB(Sub_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 ec 60
000eh vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0011h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0014h lea rdi,[rsp+28h]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 7c 24 28
0019h mov ecx,0Ch                   ; MOV(Mov_r32_imm32) [ECX,ch:imm32]                    encoding(5 bytes) = b9 0c 00 00 00
001eh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0020h rep stosd                     ; STOSD(Stosd_m32_EAX) [mem(32u),EAX]                  encoding(2 bytes) = f3 ab
0022h mov rcx,rsi                   ; MOV(Mov_r64_rm64) [RCX,RSI]                          encoding(3 bytes) = 48 8b ce
0025h mov rbx,rcx                   ; MOV(Mov_r64_rm64) [RBX,RCX]                          encoding(3 bytes) = 48 8b d9
0028h mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
002bh mov rdi,r8                    ; MOV(Mov_r64_rm64) [RDI,R8]                           encoding(3 bytes) = 49 8b f8
002eh mov ebp,6Eh                   ; MOV(Mov_r32_imm32) [EBP,6eh:imm32]                   encoding(5 bytes) = bd 6e 00 00 00
0033h mov r14d,1                    ; MOV(Mov_r32_imm32) [R14D,1h:imm32]                   encoding(6 bytes) = 41 be 01 00 00 00
0039h mov r15d,[rsi+8]              ; MOV(Mov_r32_rm32) [R15D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 8b 7e 08
003dh mov r12d,[rdi+8]              ; MOV(Mov_r32_rm32) [R12D,mem(32u,RDI:br,DS:sr)]       encoding(4 bytes) = 44 8b 67 08
0041h cmp r15d,r12d                 ; CMP(Cmp_r32_rm32) [R15D,R12D]                        encoding(3 bytes) = 45 3b fc
0044h jne short 00abh               ; JNE(Jne_rel8_64) [ABh:jmp64]                         encoding(2 bytes) = 75 65
0046h movsxd rdx,r15d               ; MOVSXD(Movsxd_r64_rm32) [RDX,R15D]                   encoding(3 bytes) = 49 63 d7
0049h mov rcx,7FFC86FF98E8h         ; MOV(Mov_r64_imm64) [RCX,7ffc86ff98e8h:imm64]         encoding(10 bytes) = 48 b9 e8 98 ff 86 fc 7f 00 00
0053h call 7FFCE67394A0h            ; CALL(Call_rel32_64) [5F474000h:jmp64]                encoding(5 bytes) = e8 a8 3f 47 5f
0058h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
005ch mov edx,[rax+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 50 08
005fh mov r8,rbx                    ; MOV(Mov_r64_rm64) [R8,RBX]                           encoding(3 bytes) = 4c 8b c3
0062h vmovdqu xmm0,xmmword ptr [rsi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 06
0066h vmovdqu xmmword ptr [rsp+48h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 48
006ch vmovdqu xmm0,xmmword ptr [rdi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RDI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 07
0070h vmovdqu xmmword ptr [rsp+38h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 38
0076h lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
007bh mov [r9],rcx                  ; MOV(Mov_rm64_r64) [mem(64u,R9:br,DS:sr),RCX]         encoding(3 bytes) = 49 89 09
007eh mov [r9+8],edx                ; MOV(Mov_rm32_r32) [mem(32u,R9:br,DS:sr),EDX]         encoding(4 bytes) = 41 89 51 08
0082h mov rcx,r8                    ; MOV(Mov_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 8b c8
0085h lea rdx,[rsp+48h]             ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 54 24 48
008ah lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
008fh lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
0094h call 7FFC872C5040h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFFBA0h:jmp64]        encoding(5 bytes) = e8 07 fb ff ff
0099h mov rax,rbx                   ; MOV(Mov_r64_rm64) [RAX,RBX]                          encoding(3 bytes) = 48 8b c3
009ch add rsp,60h                   ; ADD(Add_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 c4 60
00a0h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
00a1h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
00a2h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
00a3h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
00a4h pop r12                       ; POP(Pop_r64) [R12]                                   encoding(2 bytes) = 41 5c
00a6h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
00a8h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
00aah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
00abh mov ecx,2FBh                  ; MOV(Mov_r32_imm32) [ECX,2fbh:imm32]                  encoding(5 bytes) = b9 fb 02 00 00
00b0h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00bah call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F46E480h:jmp64]                encoding(5 bytes) = e8 c1 e3 46 5f
00bfh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
00c2h mov ecx,0A1Fh                 ; MOV(Mov_r32_imm32) [ECX,a1fh:imm32]                  encoding(5 bytes) = b9 1f 0a 00 00
00c7h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00d1h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F46E480h:jmp64]                encoding(5 bytes) = e8 aa e3 46 5f
00d6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00d9h lea r8,[rsp+58h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 58
00deh mov [r8],r14b                 ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),R14L]           encoding(3 bytes) = 45 88 30
00e1h mov [r8+4],ebp                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBP]         encoding(4 bytes) = 41 89 68 04
00e5h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00e8h mov ecx,r15d                  ; MOV(Mov_r32_rm32) [ECX,R15D]                         encoding(3 bytes) = 41 8b cf
00ebh mov edx,r12d                  ; MOV(Mov_r32_rm32) [EDX,R12D]                         encoding(3 bytes) = 41 8b d4
00eeh mov rax,[rsp+58h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 58
00f3h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00f8h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFC98AD8h:jmp64]        encoding(5 bytes) = e8 db 89 c9 ff
00fdh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
0100h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F4514B0h:jmp64]                encoding(5 bytes) = e8 ab 13 45 5f
0105h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> gtBytes => new byte[262]{0x41,0x57,0x41,0x56,0x41,0x54,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x60,0xC5,0xF8,0x77,0x48,0x8B,0xF1,0x48,0x8D,0x7C,0x24,0x28,0xB9,0x0C,0x00,0x00,0x00,0x33,0xC0,0xF3,0xAB,0x48,0x8B,0xCE,0x48,0x8B,0xD9,0x48,0x8B,0xF2,0x49,0x8B,0xF8,0xBD,0x6E,0x00,0x00,0x00,0x41,0xBE,0x01,0x00,0x00,0x00,0x44,0x8B,0x7E,0x08,0x44,0x8B,0x67,0x08,0x45,0x3B,0xFC,0x75,0x65,0x49,0x63,0xD7,0x48,0xB9,0xE8,0x98,0xFF,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xA8,0x3F,0x47,0x5F,0x48,0x8D,0x48,0x10,0x8B,0x50,0x08,0x4C,0x8B,0xC3,0xC5,0xFA,0x6F,0x06,0xC5,0xFA,0x7F,0x44,0x24,0x48,0xC5,0xFA,0x6F,0x07,0xC5,0xFA,0x7F,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0x49,0x89,0x09,0x41,0x89,0x51,0x08,0x49,0x8B,0xC8,0x48,0x8D,0x54,0x24,0x48,0x4C,0x8D,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0xE8,0x07,0xFB,0xFF,0xFF,0x48,0x8B,0xC3,0x48,0x83,0xC4,0x60,0x5B,0x5D,0x5E,0x5F,0x41,0x5C,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0xFB,0x02,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xC1,0xE3,0x46,0x5F,0x48,0x8B,0xF0,0xB9,0x1F,0x0A,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xAA,0xE3,0x46,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x58,0x45,0x88,0x30,0x41,0x89,0x68,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCF,0x41,0x8B,0xD4,0x48,0x8B,0x44,0x24,0x58,0x48,0x89,0x44,0x24,0x20,0xE8,0xDB,0x89,0xC9,0xFF,0x48,0x8B,0xC8,0xE8,0xAB,0x13,0x45,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> gt(ReadOnlySpan<byte> lhs, ReadOnlySpan<byte> rhs)
; location: [7FFC872C55D0h, 7FFC872C56D5h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push r12                      ; PUSH(Push_r64) [R12]                                 encoding(2 bytes) = 41 54
0006h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0007h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0008h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0009h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
000ah sub rsp,60h                   ; SUB(Sub_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 ec 60
000eh vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0011h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0014h lea rdi,[rsp+28h]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 7c 24 28
0019h mov ecx,0Ch                   ; MOV(Mov_r32_imm32) [ECX,ch:imm32]                    encoding(5 bytes) = b9 0c 00 00 00
001eh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0020h rep stosd                     ; STOSD(Stosd_m32_EAX) [mem(32u),EAX]                  encoding(2 bytes) = f3 ab
0022h mov rcx,rsi                   ; MOV(Mov_r64_rm64) [RCX,RSI]                          encoding(3 bytes) = 48 8b ce
0025h mov rbx,rcx                   ; MOV(Mov_r64_rm64) [RBX,RCX]                          encoding(3 bytes) = 48 8b d9
0028h mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
002bh mov rdi,r8                    ; MOV(Mov_r64_rm64) [RDI,R8]                           encoding(3 bytes) = 49 8b f8
002eh mov ebp,72h                   ; MOV(Mov_r32_imm32) [EBP,72h:imm32]                   encoding(5 bytes) = bd 72 00 00 00
0033h mov r14d,1                    ; MOV(Mov_r32_imm32) [R14D,1h:imm32]                   encoding(6 bytes) = 41 be 01 00 00 00
0039h mov r15d,[rsi+8]              ; MOV(Mov_r32_rm32) [R15D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 8b 7e 08
003dh mov r12d,[rdi+8]              ; MOV(Mov_r32_rm32) [R12D,mem(32u,RDI:br,DS:sr)]       encoding(4 bytes) = 44 8b 67 08
0041h cmp r15d,r12d                 ; CMP(Cmp_r32_rm32) [R15D,R12D]                        encoding(3 bytes) = 45 3b fc
0044h jne short 00abh               ; JNE(Jne_rel8_64) [ABh:jmp64]                         encoding(2 bytes) = 75 65
0046h movsxd rdx,r15d               ; MOVSXD(Movsxd_r64_rm32) [RDX,R15D]                   encoding(3 bytes) = 49 63 d7
0049h mov rcx,7FFC86FF98E8h         ; MOV(Mov_r64_imm64) [RCX,7ffc86ff98e8h:imm64]         encoding(10 bytes) = 48 b9 e8 98 ff 86 fc 7f 00 00
0053h call 7FFCE67394A0h            ; CALL(Call_rel32_64) [5F473ED0h:jmp64]                encoding(5 bytes) = e8 78 3e 47 5f
0058h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
005ch mov edx,[rax+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 50 08
005fh mov r8,rbx                    ; MOV(Mov_r64_rm64) [R8,RBX]                           encoding(3 bytes) = 4c 8b c3
0062h vmovdqu xmm0,xmmword ptr [rsi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 06
0066h vmovdqu xmmword ptr [rsp+48h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 48
006ch vmovdqu xmm0,xmmword ptr [rdi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RDI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 07
0070h vmovdqu xmmword ptr [rsp+38h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 38
0076h lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
007bh mov [r9],rcx                  ; MOV(Mov_rm64_r64) [mem(64u,R9:br,DS:sr),RCX]         encoding(3 bytes) = 49 89 09
007eh mov [r9+8],edx                ; MOV(Mov_rm32_r32) [mem(32u,R9:br,DS:sr),EDX]         encoding(4 bytes) = 41 89 51 08
0082h mov rcx,r8                    ; MOV(Mov_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 8b c8
0085h lea rdx,[rsp+48h]             ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 54 24 48
008ah lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
008fh lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
0094h call 7FFC872C50D0h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFFB00h:jmp64]        encoding(5 bytes) = e8 67 fa ff ff
0099h mov rax,rbx                   ; MOV(Mov_r64_rm64) [RAX,RBX]                          encoding(3 bytes) = 48 8b c3
009ch add rsp,60h                   ; ADD(Add_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 c4 60
00a0h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
00a1h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
00a2h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
00a3h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
00a4h pop r12                       ; POP(Pop_r64) [R12]                                   encoding(2 bytes) = 41 5c
00a6h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
00a8h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
00aah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
00abh mov ecx,2FBh                  ; MOV(Mov_r32_imm32) [ECX,2fbh:imm32]                  encoding(5 bytes) = b9 fb 02 00 00
00b0h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00bah call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F46E350h:jmp64]                encoding(5 bytes) = e8 91 e2 46 5f
00bfh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
00c2h mov ecx,0A1Fh                 ; MOV(Mov_r32_imm32) [ECX,a1fh:imm32]                  encoding(5 bytes) = b9 1f 0a 00 00
00c7h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00d1h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F46E350h:jmp64]                encoding(5 bytes) = e8 7a e2 46 5f
00d6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00d9h lea r8,[rsp+58h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 58
00deh mov [r8],r14b                 ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),R14L]           encoding(3 bytes) = 45 88 30
00e1h mov [r8+4],ebp                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBP]         encoding(4 bytes) = 41 89 68 04
00e5h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00e8h mov ecx,r15d                  ; MOV(Mov_r32_rm32) [ECX,R15D]                         encoding(3 bytes) = 41 8b cf
00ebh mov edx,r12d                  ; MOV(Mov_r32_rm32) [EDX,R12D]                         encoding(3 bytes) = 41 8b d4
00eeh mov rax,[rsp+58h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 58
00f3h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00f8h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFC989A8h:jmp64]        encoding(5 bytes) = e8 ab 88 c9 ff
00fdh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
0100h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F451380h:jmp64]                encoding(5 bytes) = e8 7b 12 45 5f
0105h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> gtBytes => new byte[262]{0x41,0x57,0x41,0x56,0x41,0x54,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x60,0xC5,0xF8,0x77,0x48,0x8B,0xF1,0x48,0x8D,0x7C,0x24,0x28,0xB9,0x0C,0x00,0x00,0x00,0x33,0xC0,0xF3,0xAB,0x48,0x8B,0xCE,0x48,0x8B,0xD9,0x48,0x8B,0xF2,0x49,0x8B,0xF8,0xBD,0x72,0x00,0x00,0x00,0x41,0xBE,0x01,0x00,0x00,0x00,0x44,0x8B,0x7E,0x08,0x44,0x8B,0x67,0x08,0x45,0x3B,0xFC,0x75,0x65,0x49,0x63,0xD7,0x48,0xB9,0xE8,0x98,0xFF,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x78,0x3E,0x47,0x5F,0x48,0x8D,0x48,0x10,0x8B,0x50,0x08,0x4C,0x8B,0xC3,0xC5,0xFA,0x6F,0x06,0xC5,0xFA,0x7F,0x44,0x24,0x48,0xC5,0xFA,0x6F,0x07,0xC5,0xFA,0x7F,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0x49,0x89,0x09,0x41,0x89,0x51,0x08,0x49,0x8B,0xC8,0x48,0x8D,0x54,0x24,0x48,0x4C,0x8D,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0xE8,0x67,0xFA,0xFF,0xFF,0x48,0x8B,0xC3,0x48,0x83,0xC4,0x60,0x5B,0x5D,0x5E,0x5F,0x41,0x5C,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0xFB,0x02,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x91,0xE2,0x46,0x5F,0x48,0x8B,0xF0,0xB9,0x1F,0x0A,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x7A,0xE2,0x46,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x58,0x45,0x88,0x30,0x41,0x89,0x68,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCF,0x41,0x8B,0xD4,0x48,0x8B,0x44,0x24,0x58,0x48,0x89,0x44,0x24,0x20,0xE8,0xAB,0x88,0xC9,0xFF,0x48,0x8B,0xC8,0xE8,0x7B,0x12,0x45,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> gt(ReadOnlySpan<short> lhs, ReadOnlySpan<short> rhs)
; location: [7FFC872C5700h, 7FFC872C5805h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push r12                      ; PUSH(Push_r64) [R12]                                 encoding(2 bytes) = 41 54
0006h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0007h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0008h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0009h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
000ah sub rsp,60h                   ; SUB(Sub_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 ec 60
000eh vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0011h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0014h lea rdi,[rsp+28h]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 7c 24 28
0019h mov ecx,0Ch                   ; MOV(Mov_r32_imm32) [ECX,ch:imm32]                    encoding(5 bytes) = b9 0c 00 00 00
001eh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0020h rep stosd                     ; STOSD(Stosd_m32_EAX) [mem(32u),EAX]                  encoding(2 bytes) = f3 ab
0022h mov rcx,rsi                   ; MOV(Mov_r64_rm64) [RCX,RSI]                          encoding(3 bytes) = 48 8b ce
0025h mov rbx,rcx                   ; MOV(Mov_r64_rm64) [RBX,RCX]                          encoding(3 bytes) = 48 8b d9
0028h mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
002bh mov rdi,r8                    ; MOV(Mov_r64_rm64) [RDI,R8]                           encoding(3 bytes) = 49 8b f8
002eh mov ebp,76h                   ; MOV(Mov_r32_imm32) [EBP,76h:imm32]                   encoding(5 bytes) = bd 76 00 00 00
0033h mov r14d,1                    ; MOV(Mov_r32_imm32) [R14D,1h:imm32]                   encoding(6 bytes) = 41 be 01 00 00 00
0039h mov r15d,[rsi+8]              ; MOV(Mov_r32_rm32) [R15D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 8b 7e 08
003dh mov r12d,[rdi+8]              ; MOV(Mov_r32_rm32) [R12D,mem(32u,RDI:br,DS:sr)]       encoding(4 bytes) = 44 8b 67 08
0041h cmp r15d,r12d                 ; CMP(Cmp_r32_rm32) [R15D,R12D]                        encoding(3 bytes) = 45 3b fc
0044h jne short 00abh               ; JNE(Jne_rel8_64) [ABh:jmp64]                         encoding(2 bytes) = 75 65
0046h movsxd rdx,r15d               ; MOVSXD(Movsxd_r64_rm32) [RDX,R15D]                   encoding(3 bytes) = 49 63 d7
0049h mov rcx,7FFC86FF98E8h         ; MOV(Mov_r64_imm64) [RCX,7ffc86ff98e8h:imm64]         encoding(10 bytes) = 48 b9 e8 98 ff 86 fc 7f 00 00
0053h call 7FFCE67394A0h            ; CALL(Call_rel32_64) [5F473DA0h:jmp64]                encoding(5 bytes) = e8 48 3d 47 5f
0058h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
005ch mov edx,[rax+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 50 08
005fh mov r8,rbx                    ; MOV(Mov_r64_rm64) [R8,RBX]                           encoding(3 bytes) = 4c 8b c3
0062h vmovdqu xmm0,xmmword ptr [rsi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 06
0066h vmovdqu xmmword ptr [rsp+48h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 48
006ch vmovdqu xmm0,xmmword ptr [rdi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RDI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 07
0070h vmovdqu xmmword ptr [rsp+38h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 38
0076h lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
007bh mov [r9],rcx                  ; MOV(Mov_rm64_r64) [mem(64u,R9:br,DS:sr),RCX]         encoding(3 bytes) = 49 89 09
007eh mov [r9+8],edx                ; MOV(Mov_rm32_r32) [mem(32u,R9:br,DS:sr),EDX]         encoding(4 bytes) = 41 89 51 08
0082h mov rcx,r8                    ; MOV(Mov_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 8b c8
0085h lea rdx,[rsp+48h]             ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 54 24 48
008ah lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
008fh lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
0094h call 7FFC872C5160h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFFA60h:jmp64]        encoding(5 bytes) = e8 c7 f9 ff ff
0099h mov rax,rbx                   ; MOV(Mov_r64_rm64) [RAX,RBX]                          encoding(3 bytes) = 48 8b c3
009ch add rsp,60h                   ; ADD(Add_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 c4 60
00a0h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
00a1h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
00a2h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
00a3h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
00a4h pop r12                       ; POP(Pop_r64) [R12]                                   encoding(2 bytes) = 41 5c
00a6h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
00a8h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
00aah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
00abh mov ecx,2FBh                  ; MOV(Mov_r32_imm32) [ECX,2fbh:imm32]                  encoding(5 bytes) = b9 fb 02 00 00
00b0h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00bah call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F46E220h:jmp64]                encoding(5 bytes) = e8 61 e1 46 5f
00bfh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
00c2h mov ecx,0A1Fh                 ; MOV(Mov_r32_imm32) [ECX,a1fh:imm32]                  encoding(5 bytes) = b9 1f 0a 00 00
00c7h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00d1h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F46E220h:jmp64]                encoding(5 bytes) = e8 4a e1 46 5f
00d6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00d9h lea r8,[rsp+58h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 58
00deh mov [r8],r14b                 ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),R14L]           encoding(3 bytes) = 45 88 30
00e1h mov [r8+4],ebp                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBP]         encoding(4 bytes) = 41 89 68 04
00e5h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00e8h mov ecx,r15d                  ; MOV(Mov_r32_rm32) [ECX,R15D]                         encoding(3 bytes) = 41 8b cf
00ebh mov edx,r12d                  ; MOV(Mov_r32_rm32) [EDX,R12D]                         encoding(3 bytes) = 41 8b d4
00eeh mov rax,[rsp+58h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 58
00f3h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00f8h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFC98878h:jmp64]        encoding(5 bytes) = e8 7b 87 c9 ff
00fdh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
0100h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F451250h:jmp64]                encoding(5 bytes) = e8 4b 11 45 5f
0105h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> gtBytes => new byte[262]{0x41,0x57,0x41,0x56,0x41,0x54,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x60,0xC5,0xF8,0x77,0x48,0x8B,0xF1,0x48,0x8D,0x7C,0x24,0x28,0xB9,0x0C,0x00,0x00,0x00,0x33,0xC0,0xF3,0xAB,0x48,0x8B,0xCE,0x48,0x8B,0xD9,0x48,0x8B,0xF2,0x49,0x8B,0xF8,0xBD,0x76,0x00,0x00,0x00,0x41,0xBE,0x01,0x00,0x00,0x00,0x44,0x8B,0x7E,0x08,0x44,0x8B,0x67,0x08,0x45,0x3B,0xFC,0x75,0x65,0x49,0x63,0xD7,0x48,0xB9,0xE8,0x98,0xFF,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x48,0x3D,0x47,0x5F,0x48,0x8D,0x48,0x10,0x8B,0x50,0x08,0x4C,0x8B,0xC3,0xC5,0xFA,0x6F,0x06,0xC5,0xFA,0x7F,0x44,0x24,0x48,0xC5,0xFA,0x6F,0x07,0xC5,0xFA,0x7F,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0x49,0x89,0x09,0x41,0x89,0x51,0x08,0x49,0x8B,0xC8,0x48,0x8D,0x54,0x24,0x48,0x4C,0x8D,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0xE8,0xC7,0xF9,0xFF,0xFF,0x48,0x8B,0xC3,0x48,0x83,0xC4,0x60,0x5B,0x5D,0x5E,0x5F,0x41,0x5C,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0xFB,0x02,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x61,0xE1,0x46,0x5F,0x48,0x8B,0xF0,0xB9,0x1F,0x0A,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x4A,0xE1,0x46,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x58,0x45,0x88,0x30,0x41,0x89,0x68,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCF,0x41,0x8B,0xD4,0x48,0x8B,0x44,0x24,0x58,0x48,0x89,0x44,0x24,0x20,0xE8,0x7B,0x87,0xC9,0xFF,0x48,0x8B,0xC8,0xE8,0x4B,0x11,0x45,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> gt(ReadOnlySpan<ushort> lhs, ReadOnlySpan<ushort> rhs)
; location: [7FFC872C5830h, 7FFC872C5935h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push r12                      ; PUSH(Push_r64) [R12]                                 encoding(2 bytes) = 41 54
0006h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0007h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0008h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0009h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
000ah sub rsp,60h                   ; SUB(Sub_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 ec 60
000eh vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0011h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0014h lea rdi,[rsp+28h]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 7c 24 28
0019h mov ecx,0Ch                   ; MOV(Mov_r32_imm32) [ECX,ch:imm32]                    encoding(5 bytes) = b9 0c 00 00 00
001eh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0020h rep stosd                     ; STOSD(Stosd_m32_EAX) [mem(32u),EAX]                  encoding(2 bytes) = f3 ab
0022h mov rcx,rsi                   ; MOV(Mov_r64_rm64) [RCX,RSI]                          encoding(3 bytes) = 48 8b ce
0025h mov rbx,rcx                   ; MOV(Mov_r64_rm64) [RBX,RCX]                          encoding(3 bytes) = 48 8b d9
0028h mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
002bh mov rdi,r8                    ; MOV(Mov_r64_rm64) [RDI,R8]                           encoding(3 bytes) = 49 8b f8
002eh mov ebp,7Ah                   ; MOV(Mov_r32_imm32) [EBP,7ah:imm32]                   encoding(5 bytes) = bd 7a 00 00 00
0033h mov r14d,1                    ; MOV(Mov_r32_imm32) [R14D,1h:imm32]                   encoding(6 bytes) = 41 be 01 00 00 00
0039h mov r15d,[rsi+8]              ; MOV(Mov_r32_rm32) [R15D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 8b 7e 08
003dh mov r12d,[rdi+8]              ; MOV(Mov_r32_rm32) [R12D,mem(32u,RDI:br,DS:sr)]       encoding(4 bytes) = 44 8b 67 08
0041h cmp r15d,r12d                 ; CMP(Cmp_r32_rm32) [R15D,R12D]                        encoding(3 bytes) = 45 3b fc
0044h jne short 00abh               ; JNE(Jne_rel8_64) [ABh:jmp64]                         encoding(2 bytes) = 75 65
0046h movsxd rdx,r15d               ; MOVSXD(Movsxd_r64_rm32) [RDX,R15D]                   encoding(3 bytes) = 49 63 d7
0049h mov rcx,7FFC86FF98E8h         ; MOV(Mov_r64_imm64) [RCX,7ffc86ff98e8h:imm64]         encoding(10 bytes) = 48 b9 e8 98 ff 86 fc 7f 00 00
0053h call 7FFCE67394A0h            ; CALL(Call_rel32_64) [5F473C70h:jmp64]                encoding(5 bytes) = e8 18 3c 47 5f
0058h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
005ch mov edx,[rax+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 50 08
005fh mov r8,rbx                    ; MOV(Mov_r64_rm64) [R8,RBX]                           encoding(3 bytes) = 4c 8b c3
0062h vmovdqu xmm0,xmmword ptr [rsi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 06
0066h vmovdqu xmmword ptr [rsp+48h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 48
006ch vmovdqu xmm0,xmmword ptr [rdi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RDI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 07
0070h vmovdqu xmmword ptr [rsp+38h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 38
0076h lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
007bh mov [r9],rcx                  ; MOV(Mov_rm64_r64) [mem(64u,R9:br,DS:sr),RCX]         encoding(3 bytes) = 49 89 09
007eh mov [r9+8],edx                ; MOV(Mov_rm32_r32) [mem(32u,R9:br,DS:sr),EDX]         encoding(4 bytes) = 41 89 51 08
0082h mov rcx,r8                    ; MOV(Mov_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 8b c8
0085h lea rdx,[rsp+48h]             ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 54 24 48
008ah lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
008fh lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
0094h call 7FFC872C51F0h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFF9C0h:jmp64]        encoding(5 bytes) = e8 27 f9 ff ff
0099h mov rax,rbx                   ; MOV(Mov_r64_rm64) [RAX,RBX]                          encoding(3 bytes) = 48 8b c3
009ch add rsp,60h                   ; ADD(Add_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 c4 60
00a0h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
00a1h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
00a2h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
00a3h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
00a4h pop r12                       ; POP(Pop_r64) [R12]                                   encoding(2 bytes) = 41 5c
00a6h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
00a8h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
00aah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
00abh mov ecx,2FBh                  ; MOV(Mov_r32_imm32) [ECX,2fbh:imm32]                  encoding(5 bytes) = b9 fb 02 00 00
00b0h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00bah call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F46E0F0h:jmp64]                encoding(5 bytes) = e8 31 e0 46 5f
00bfh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
00c2h mov ecx,0A1Fh                 ; MOV(Mov_r32_imm32) [ECX,a1fh:imm32]                  encoding(5 bytes) = b9 1f 0a 00 00
00c7h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00d1h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F46E0F0h:jmp64]                encoding(5 bytes) = e8 1a e0 46 5f
00d6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00d9h lea r8,[rsp+58h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 58
00deh mov [r8],r14b                 ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),R14L]           encoding(3 bytes) = 45 88 30
00e1h mov [r8+4],ebp                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBP]         encoding(4 bytes) = 41 89 68 04
00e5h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00e8h mov ecx,r15d                  ; MOV(Mov_r32_rm32) [ECX,R15D]                         encoding(3 bytes) = 41 8b cf
00ebh mov edx,r12d                  ; MOV(Mov_r32_rm32) [EDX,R12D]                         encoding(3 bytes) = 41 8b d4
00eeh mov rax,[rsp+58h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 58
00f3h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00f8h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFC98748h:jmp64]        encoding(5 bytes) = e8 4b 86 c9 ff
00fdh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
0100h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F451120h:jmp64]                encoding(5 bytes) = e8 1b 10 45 5f
0105h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> gtBytes => new byte[262]{0x41,0x57,0x41,0x56,0x41,0x54,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x60,0xC5,0xF8,0x77,0x48,0x8B,0xF1,0x48,0x8D,0x7C,0x24,0x28,0xB9,0x0C,0x00,0x00,0x00,0x33,0xC0,0xF3,0xAB,0x48,0x8B,0xCE,0x48,0x8B,0xD9,0x48,0x8B,0xF2,0x49,0x8B,0xF8,0xBD,0x7A,0x00,0x00,0x00,0x41,0xBE,0x01,0x00,0x00,0x00,0x44,0x8B,0x7E,0x08,0x44,0x8B,0x67,0x08,0x45,0x3B,0xFC,0x75,0x65,0x49,0x63,0xD7,0x48,0xB9,0xE8,0x98,0xFF,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x18,0x3C,0x47,0x5F,0x48,0x8D,0x48,0x10,0x8B,0x50,0x08,0x4C,0x8B,0xC3,0xC5,0xFA,0x6F,0x06,0xC5,0xFA,0x7F,0x44,0x24,0x48,0xC5,0xFA,0x6F,0x07,0xC5,0xFA,0x7F,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0x49,0x89,0x09,0x41,0x89,0x51,0x08,0x49,0x8B,0xC8,0x48,0x8D,0x54,0x24,0x48,0x4C,0x8D,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0xE8,0x27,0xF9,0xFF,0xFF,0x48,0x8B,0xC3,0x48,0x83,0xC4,0x60,0x5B,0x5D,0x5E,0x5F,0x41,0x5C,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0xFB,0x02,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x31,0xE0,0x46,0x5F,0x48,0x8B,0xF0,0xB9,0x1F,0x0A,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x1A,0xE0,0x46,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x58,0x45,0x88,0x30,0x41,0x89,0x68,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCF,0x41,0x8B,0xD4,0x48,0x8B,0x44,0x24,0x58,0x48,0x89,0x44,0x24,0x20,0xE8,0x4B,0x86,0xC9,0xFF,0x48,0x8B,0xC8,0xE8,0x1B,0x10,0x45,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> gt(ReadOnlySpan<int> lhs, ReadOnlySpan<int> rhs)
; location: [7FFC872C5960h, 7FFC872C5A65h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push r12                      ; PUSH(Push_r64) [R12]                                 encoding(2 bytes) = 41 54
0006h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0007h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0008h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0009h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
000ah sub rsp,60h                   ; SUB(Sub_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 ec 60
000eh vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0011h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0014h lea rdi,[rsp+28h]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 7c 24 28
0019h mov ecx,0Ch                   ; MOV(Mov_r32_imm32) [ECX,ch:imm32]                    encoding(5 bytes) = b9 0c 00 00 00
001eh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0020h rep stosd                     ; STOSD(Stosd_m32_EAX) [mem(32u),EAX]                  encoding(2 bytes) = f3 ab
0022h mov rcx,rsi                   ; MOV(Mov_r64_rm64) [RCX,RSI]                          encoding(3 bytes) = 48 8b ce
0025h mov rbx,rcx                   ; MOV(Mov_r64_rm64) [RBX,RCX]                          encoding(3 bytes) = 48 8b d9
0028h mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
002bh mov rdi,r8                    ; MOV(Mov_r64_rm64) [RDI,R8]                           encoding(3 bytes) = 49 8b f8
002eh mov ebp,7Eh                   ; MOV(Mov_r32_imm32) [EBP,7eh:imm32]                   encoding(5 bytes) = bd 7e 00 00 00
0033h mov r14d,1                    ; MOV(Mov_r32_imm32) [R14D,1h:imm32]                   encoding(6 bytes) = 41 be 01 00 00 00
0039h mov r15d,[rsi+8]              ; MOV(Mov_r32_rm32) [R15D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 8b 7e 08
003dh mov r12d,[rdi+8]              ; MOV(Mov_r32_rm32) [R12D,mem(32u,RDI:br,DS:sr)]       encoding(4 bytes) = 44 8b 67 08
0041h cmp r15d,r12d                 ; CMP(Cmp_r32_rm32) [R15D,R12D]                        encoding(3 bytes) = 45 3b fc
0044h jne short 00abh               ; JNE(Jne_rel8_64) [ABh:jmp64]                         encoding(2 bytes) = 75 65
0046h movsxd rdx,r15d               ; MOVSXD(Movsxd_r64_rm32) [RDX,R15D]                   encoding(3 bytes) = 49 63 d7
0049h mov rcx,7FFC86FF98E8h         ; MOV(Mov_r64_imm64) [RCX,7ffc86ff98e8h:imm64]         encoding(10 bytes) = 48 b9 e8 98 ff 86 fc 7f 00 00
0053h call 7FFCE67394A0h            ; CALL(Call_rel32_64) [5F473B40h:jmp64]                encoding(5 bytes) = e8 e8 3a 47 5f
0058h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
005ch mov edx,[rax+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 50 08
005fh mov r8,rbx                    ; MOV(Mov_r64_rm64) [R8,RBX]                           encoding(3 bytes) = 4c 8b c3
0062h vmovdqu xmm0,xmmword ptr [rsi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 06
0066h vmovdqu xmmword ptr [rsp+48h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 48
006ch vmovdqu xmm0,xmmword ptr [rdi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RDI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 07
0070h vmovdqu xmmword ptr [rsp+38h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 38
0076h lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
007bh mov [r9],rcx                  ; MOV(Mov_rm64_r64) [mem(64u,R9:br,DS:sr),RCX]         encoding(3 bytes) = 49 89 09
007eh mov [r9+8],edx                ; MOV(Mov_rm32_r32) [mem(32u,R9:br,DS:sr),EDX]         encoding(4 bytes) = 41 89 51 08
0082h mov rcx,r8                    ; MOV(Mov_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 8b c8
0085h lea rdx,[rsp+48h]             ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 54 24 48
008ah lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
008fh lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
0094h call 7FFC872C5280h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFF920h:jmp64]        encoding(5 bytes) = e8 87 f8 ff ff
0099h mov rax,rbx                   ; MOV(Mov_r64_rm64) [RAX,RBX]                          encoding(3 bytes) = 48 8b c3
009ch add rsp,60h                   ; ADD(Add_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 c4 60
00a0h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
00a1h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
00a2h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
00a3h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
00a4h pop r12                       ; POP(Pop_r64) [R12]                                   encoding(2 bytes) = 41 5c
00a6h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
00a8h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
00aah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
00abh mov ecx,2FBh                  ; MOV(Mov_r32_imm32) [ECX,2fbh:imm32]                  encoding(5 bytes) = b9 fb 02 00 00
00b0h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00bah call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F46DFC0h:jmp64]                encoding(5 bytes) = e8 01 df 46 5f
00bfh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
00c2h mov ecx,0A1Fh                 ; MOV(Mov_r32_imm32) [ECX,a1fh:imm32]                  encoding(5 bytes) = b9 1f 0a 00 00
00c7h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00d1h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F46DFC0h:jmp64]                encoding(5 bytes) = e8 ea de 46 5f
00d6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00d9h lea r8,[rsp+58h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 58
00deh mov [r8],r14b                 ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),R14L]           encoding(3 bytes) = 45 88 30
00e1h mov [r8+4],ebp                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBP]         encoding(4 bytes) = 41 89 68 04
00e5h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00e8h mov ecx,r15d                  ; MOV(Mov_r32_rm32) [ECX,R15D]                         encoding(3 bytes) = 41 8b cf
00ebh mov edx,r12d                  ; MOV(Mov_r32_rm32) [EDX,R12D]                         encoding(3 bytes) = 41 8b d4
00eeh mov rax,[rsp+58h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 58
00f3h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00f8h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFC98618h:jmp64]        encoding(5 bytes) = e8 1b 85 c9 ff
00fdh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
0100h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F450FF0h:jmp64]                encoding(5 bytes) = e8 eb 0e 45 5f
0105h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> gtBytes => new byte[262]{0x41,0x57,0x41,0x56,0x41,0x54,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x60,0xC5,0xF8,0x77,0x48,0x8B,0xF1,0x48,0x8D,0x7C,0x24,0x28,0xB9,0x0C,0x00,0x00,0x00,0x33,0xC0,0xF3,0xAB,0x48,0x8B,0xCE,0x48,0x8B,0xD9,0x48,0x8B,0xF2,0x49,0x8B,0xF8,0xBD,0x7E,0x00,0x00,0x00,0x41,0xBE,0x01,0x00,0x00,0x00,0x44,0x8B,0x7E,0x08,0x44,0x8B,0x67,0x08,0x45,0x3B,0xFC,0x75,0x65,0x49,0x63,0xD7,0x48,0xB9,0xE8,0x98,0xFF,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xE8,0x3A,0x47,0x5F,0x48,0x8D,0x48,0x10,0x8B,0x50,0x08,0x4C,0x8B,0xC3,0xC5,0xFA,0x6F,0x06,0xC5,0xFA,0x7F,0x44,0x24,0x48,0xC5,0xFA,0x6F,0x07,0xC5,0xFA,0x7F,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0x49,0x89,0x09,0x41,0x89,0x51,0x08,0x49,0x8B,0xC8,0x48,0x8D,0x54,0x24,0x48,0x4C,0x8D,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0xE8,0x87,0xF8,0xFF,0xFF,0x48,0x8B,0xC3,0x48,0x83,0xC4,0x60,0x5B,0x5D,0x5E,0x5F,0x41,0x5C,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0xFB,0x02,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x01,0xDF,0x46,0x5F,0x48,0x8B,0xF0,0xB9,0x1F,0x0A,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xEA,0xDE,0x46,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x58,0x45,0x88,0x30,0x41,0x89,0x68,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCF,0x41,0x8B,0xD4,0x48,0x8B,0x44,0x24,0x58,0x48,0x89,0x44,0x24,0x20,0xE8,0x1B,0x85,0xC9,0xFF,0x48,0x8B,0xC8,0xE8,0xEB,0x0E,0x45,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> gt(ReadOnlySpan<uint> lhs, ReadOnlySpan<uint> rhs)
; location: [7FFC872C5A90h, 7FFC872C5B95h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push r12                      ; PUSH(Push_r64) [R12]                                 encoding(2 bytes) = 41 54
0006h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0007h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0008h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0009h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
000ah sub rsp,60h                   ; SUB(Sub_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 ec 60
000eh vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0011h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0014h lea rdi,[rsp+28h]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 7c 24 28
0019h mov ecx,0Ch                   ; MOV(Mov_r32_imm32) [ECX,ch:imm32]                    encoding(5 bytes) = b9 0c 00 00 00
001eh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0020h rep stosd                     ; STOSD(Stosd_m32_EAX) [mem(32u),EAX]                  encoding(2 bytes) = f3 ab
0022h mov rcx,rsi                   ; MOV(Mov_r64_rm64) [RCX,RSI]                          encoding(3 bytes) = 48 8b ce
0025h mov rbx,rcx                   ; MOV(Mov_r64_rm64) [RBX,RCX]                          encoding(3 bytes) = 48 8b d9
0028h mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
002bh mov rdi,r8                    ; MOV(Mov_r64_rm64) [RDI,R8]                           encoding(3 bytes) = 49 8b f8
002eh mov ebp,82h                   ; MOV(Mov_r32_imm32) [EBP,82h:imm32]                   encoding(5 bytes) = bd 82 00 00 00
0033h mov r14d,1                    ; MOV(Mov_r32_imm32) [R14D,1h:imm32]                   encoding(6 bytes) = 41 be 01 00 00 00
0039h mov r15d,[rsi+8]              ; MOV(Mov_r32_rm32) [R15D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 8b 7e 08
003dh mov r12d,[rdi+8]              ; MOV(Mov_r32_rm32) [R12D,mem(32u,RDI:br,DS:sr)]       encoding(4 bytes) = 44 8b 67 08
0041h cmp r15d,r12d                 ; CMP(Cmp_r32_rm32) [R15D,R12D]                        encoding(3 bytes) = 45 3b fc
0044h jne short 00abh               ; JNE(Jne_rel8_64) [ABh:jmp64]                         encoding(2 bytes) = 75 65
0046h movsxd rdx,r15d               ; MOVSXD(Movsxd_r64_rm32) [RDX,R15D]                   encoding(3 bytes) = 49 63 d7
0049h mov rcx,7FFC86FF98E8h         ; MOV(Mov_r64_imm64) [RCX,7ffc86ff98e8h:imm64]         encoding(10 bytes) = 48 b9 e8 98 ff 86 fc 7f 00 00
0053h call 7FFCE67394A0h            ; CALL(Call_rel32_64) [5F473A10h:jmp64]                encoding(5 bytes) = e8 b8 39 47 5f
0058h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
005ch mov edx,[rax+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 50 08
005fh mov r8,rbx                    ; MOV(Mov_r64_rm64) [R8,RBX]                           encoding(3 bytes) = 4c 8b c3
0062h vmovdqu xmm0,xmmword ptr [rsi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 06
0066h vmovdqu xmmword ptr [rsp+48h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 48
006ch vmovdqu xmm0,xmmword ptr [rdi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RDI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 07
0070h vmovdqu xmmword ptr [rsp+38h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 38
0076h lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
007bh mov [r9],rcx                  ; MOV(Mov_rm64_r64) [mem(64u,R9:br,DS:sr),RCX]         encoding(3 bytes) = 49 89 09
007eh mov [r9+8],edx                ; MOV(Mov_rm32_r32) [mem(32u,R9:br,DS:sr),EDX]         encoding(4 bytes) = 41 89 51 08
0082h mov rcx,r8                    ; MOV(Mov_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 8b c8
0085h lea rdx,[rsp+48h]             ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 54 24 48
008ah lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
008fh lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
0094h call 7FFC872C5300h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFF870h:jmp64]        encoding(5 bytes) = e8 d7 f7 ff ff
0099h mov rax,rbx                   ; MOV(Mov_r64_rm64) [RAX,RBX]                          encoding(3 bytes) = 48 8b c3
009ch add rsp,60h                   ; ADD(Add_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 c4 60
00a0h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
00a1h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
00a2h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
00a3h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
00a4h pop r12                       ; POP(Pop_r64) [R12]                                   encoding(2 bytes) = 41 5c
00a6h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
00a8h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
00aah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
00abh mov ecx,2FBh                  ; MOV(Mov_r32_imm32) [ECX,2fbh:imm32]                  encoding(5 bytes) = b9 fb 02 00 00
00b0h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00bah call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F46DE90h:jmp64]                encoding(5 bytes) = e8 d1 dd 46 5f
00bfh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
00c2h mov ecx,0A1Fh                 ; MOV(Mov_r32_imm32) [ECX,a1fh:imm32]                  encoding(5 bytes) = b9 1f 0a 00 00
00c7h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00d1h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F46DE90h:jmp64]                encoding(5 bytes) = e8 ba dd 46 5f
00d6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00d9h lea r8,[rsp+58h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 58
00deh mov [r8],r14b                 ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),R14L]           encoding(3 bytes) = 45 88 30
00e1h mov [r8+4],ebp                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBP]         encoding(4 bytes) = 41 89 68 04
00e5h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00e8h mov ecx,r15d                  ; MOV(Mov_r32_rm32) [ECX,R15D]                         encoding(3 bytes) = 41 8b cf
00ebh mov edx,r12d                  ; MOV(Mov_r32_rm32) [EDX,R12D]                         encoding(3 bytes) = 41 8b d4
00eeh mov rax,[rsp+58h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 58
00f3h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00f8h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFC984E8h:jmp64]        encoding(5 bytes) = e8 eb 83 c9 ff
00fdh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
0100h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F450EC0h:jmp64]                encoding(5 bytes) = e8 bb 0d 45 5f
0105h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> gtBytes => new byte[262]{0x41,0x57,0x41,0x56,0x41,0x54,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x60,0xC5,0xF8,0x77,0x48,0x8B,0xF1,0x48,0x8D,0x7C,0x24,0x28,0xB9,0x0C,0x00,0x00,0x00,0x33,0xC0,0xF3,0xAB,0x48,0x8B,0xCE,0x48,0x8B,0xD9,0x48,0x8B,0xF2,0x49,0x8B,0xF8,0xBD,0x82,0x00,0x00,0x00,0x41,0xBE,0x01,0x00,0x00,0x00,0x44,0x8B,0x7E,0x08,0x44,0x8B,0x67,0x08,0x45,0x3B,0xFC,0x75,0x65,0x49,0x63,0xD7,0x48,0xB9,0xE8,0x98,0xFF,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xB8,0x39,0x47,0x5F,0x48,0x8D,0x48,0x10,0x8B,0x50,0x08,0x4C,0x8B,0xC3,0xC5,0xFA,0x6F,0x06,0xC5,0xFA,0x7F,0x44,0x24,0x48,0xC5,0xFA,0x6F,0x07,0xC5,0xFA,0x7F,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0x49,0x89,0x09,0x41,0x89,0x51,0x08,0x49,0x8B,0xC8,0x48,0x8D,0x54,0x24,0x48,0x4C,0x8D,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0xE8,0xD7,0xF7,0xFF,0xFF,0x48,0x8B,0xC3,0x48,0x83,0xC4,0x60,0x5B,0x5D,0x5E,0x5F,0x41,0x5C,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0xFB,0x02,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xD1,0xDD,0x46,0x5F,0x48,0x8B,0xF0,0xB9,0x1F,0x0A,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xBA,0xDD,0x46,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x58,0x45,0x88,0x30,0x41,0x89,0x68,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCF,0x41,0x8B,0xD4,0x48,0x8B,0x44,0x24,0x58,0x48,0x89,0x44,0x24,0x20,0xE8,0xEB,0x83,0xC9,0xFF,0x48,0x8B,0xC8,0xE8,0xBB,0x0D,0x45,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> gt(ReadOnlySpan<long> lhs, ReadOnlySpan<long> rhs)
; location: [7FFC872C5BC0h, 7FFC872C5CC5h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push r12                      ; PUSH(Push_r64) [R12]                                 encoding(2 bytes) = 41 54
0006h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0007h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0008h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0009h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
000ah sub rsp,60h                   ; SUB(Sub_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 ec 60
000eh vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0011h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0014h lea rdi,[rsp+28h]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 7c 24 28
0019h mov ecx,0Ch                   ; MOV(Mov_r32_imm32) [ECX,ch:imm32]                    encoding(5 bytes) = b9 0c 00 00 00
001eh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0020h rep stosd                     ; STOSD(Stosd_m32_EAX) [mem(32u),EAX]                  encoding(2 bytes) = f3 ab
0022h mov rcx,rsi                   ; MOV(Mov_r64_rm64) [RCX,RSI]                          encoding(3 bytes) = 48 8b ce
0025h mov rbx,rcx                   ; MOV(Mov_r64_rm64) [RBX,RCX]                          encoding(3 bytes) = 48 8b d9
0028h mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
002bh mov rdi,r8                    ; MOV(Mov_r64_rm64) [RDI,R8]                           encoding(3 bytes) = 49 8b f8
002eh mov ebp,86h                   ; MOV(Mov_r32_imm32) [EBP,86h:imm32]                   encoding(5 bytes) = bd 86 00 00 00
0033h mov r14d,1                    ; MOV(Mov_r32_imm32) [R14D,1h:imm32]                   encoding(6 bytes) = 41 be 01 00 00 00
0039h mov r15d,[rsi+8]              ; MOV(Mov_r32_rm32) [R15D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 8b 7e 08
003dh mov r12d,[rdi+8]              ; MOV(Mov_r32_rm32) [R12D,mem(32u,RDI:br,DS:sr)]       encoding(4 bytes) = 44 8b 67 08
0041h cmp r15d,r12d                 ; CMP(Cmp_r32_rm32) [R15D,R12D]                        encoding(3 bytes) = 45 3b fc
0044h jne short 00abh               ; JNE(Jne_rel8_64) [ABh:jmp64]                         encoding(2 bytes) = 75 65
0046h movsxd rdx,r15d               ; MOVSXD(Movsxd_r64_rm32) [RDX,R15D]                   encoding(3 bytes) = 49 63 d7
0049h mov rcx,7FFC86FF98E8h         ; MOV(Mov_r64_imm64) [RCX,7ffc86ff98e8h:imm64]         encoding(10 bytes) = 48 b9 e8 98 ff 86 fc 7f 00 00
0053h call 7FFCE67394A0h            ; CALL(Call_rel32_64) [5F4738E0h:jmp64]                encoding(5 bytes) = e8 88 38 47 5f
0058h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
005ch mov edx,[rax+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 50 08
005fh mov r8,rbx                    ; MOV(Mov_r64_rm64) [R8,RBX]                           encoding(3 bytes) = 4c 8b c3
0062h vmovdqu xmm0,xmmword ptr [rsi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 06
0066h vmovdqu xmmword ptr [rsp+48h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 48
006ch vmovdqu xmm0,xmmword ptr [rdi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RDI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 07
0070h vmovdqu xmmword ptr [rsp+38h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 38
0076h lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
007bh mov [r9],rcx                  ; MOV(Mov_rm64_r64) [mem(64u,R9:br,DS:sr),RCX]         encoding(3 bytes) = 49 89 09
007eh mov [r9+8],edx                ; MOV(Mov_rm32_r32) [mem(32u,R9:br,DS:sr),EDX]         encoding(4 bytes) = 41 89 51 08
0082h mov rcx,r8                    ; MOV(Mov_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 8b c8
0085h lea rdx,[rsp+48h]             ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 54 24 48
008ah lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
008fh lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
0094h call 7FFC872C5380h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFF7C0h:jmp64]        encoding(5 bytes) = e8 27 f7 ff ff
0099h mov rax,rbx                   ; MOV(Mov_r64_rm64) [RAX,RBX]                          encoding(3 bytes) = 48 8b c3
009ch add rsp,60h                   ; ADD(Add_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 c4 60
00a0h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
00a1h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
00a2h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
00a3h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
00a4h pop r12                       ; POP(Pop_r64) [R12]                                   encoding(2 bytes) = 41 5c
00a6h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
00a8h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
00aah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
00abh mov ecx,2FBh                  ; MOV(Mov_r32_imm32) [ECX,2fbh:imm32]                  encoding(5 bytes) = b9 fb 02 00 00
00b0h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00bah call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F46DD60h:jmp64]                encoding(5 bytes) = e8 a1 dc 46 5f
00bfh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
00c2h mov ecx,0A1Fh                 ; MOV(Mov_r32_imm32) [ECX,a1fh:imm32]                  encoding(5 bytes) = b9 1f 0a 00 00
00c7h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00d1h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F46DD60h:jmp64]                encoding(5 bytes) = e8 8a dc 46 5f
00d6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00d9h lea r8,[rsp+58h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 58
00deh mov [r8],r14b                 ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),R14L]           encoding(3 bytes) = 45 88 30
00e1h mov [r8+4],ebp                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBP]         encoding(4 bytes) = 41 89 68 04
00e5h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00e8h mov ecx,r15d                  ; MOV(Mov_r32_rm32) [ECX,R15D]                         encoding(3 bytes) = 41 8b cf
00ebh mov edx,r12d                  ; MOV(Mov_r32_rm32) [EDX,R12D]                         encoding(3 bytes) = 41 8b d4
00eeh mov rax,[rsp+58h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 58
00f3h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00f8h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFC983B8h:jmp64]        encoding(5 bytes) = e8 bb 82 c9 ff
00fdh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
0100h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F450D90h:jmp64]                encoding(5 bytes) = e8 8b 0c 45 5f
0105h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> gtBytes => new byte[262]{0x41,0x57,0x41,0x56,0x41,0x54,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x60,0xC5,0xF8,0x77,0x48,0x8B,0xF1,0x48,0x8D,0x7C,0x24,0x28,0xB9,0x0C,0x00,0x00,0x00,0x33,0xC0,0xF3,0xAB,0x48,0x8B,0xCE,0x48,0x8B,0xD9,0x48,0x8B,0xF2,0x49,0x8B,0xF8,0xBD,0x86,0x00,0x00,0x00,0x41,0xBE,0x01,0x00,0x00,0x00,0x44,0x8B,0x7E,0x08,0x44,0x8B,0x67,0x08,0x45,0x3B,0xFC,0x75,0x65,0x49,0x63,0xD7,0x48,0xB9,0xE8,0x98,0xFF,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x88,0x38,0x47,0x5F,0x48,0x8D,0x48,0x10,0x8B,0x50,0x08,0x4C,0x8B,0xC3,0xC5,0xFA,0x6F,0x06,0xC5,0xFA,0x7F,0x44,0x24,0x48,0xC5,0xFA,0x6F,0x07,0xC5,0xFA,0x7F,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0x49,0x89,0x09,0x41,0x89,0x51,0x08,0x49,0x8B,0xC8,0x48,0x8D,0x54,0x24,0x48,0x4C,0x8D,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0xE8,0x27,0xF7,0xFF,0xFF,0x48,0x8B,0xC3,0x48,0x83,0xC4,0x60,0x5B,0x5D,0x5E,0x5F,0x41,0x5C,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0xFB,0x02,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xA1,0xDC,0x46,0x5F,0x48,0x8B,0xF0,0xB9,0x1F,0x0A,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x8A,0xDC,0x46,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x58,0x45,0x88,0x30,0x41,0x89,0x68,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCF,0x41,0x8B,0xD4,0x48,0x8B,0x44,0x24,0x58,0x48,0x89,0x44,0x24,0x20,0xE8,0xBB,0x82,0xC9,0xFF,0x48,0x8B,0xC8,0xE8,0x8B,0x0C,0x45,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> gt(ReadOnlySpan<ulong> lhs, ReadOnlySpan<ulong> rhs)
; location: [7FFC872C5CF0h, 7FFC872C5DF5h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push r12                      ; PUSH(Push_r64) [R12]                                 encoding(2 bytes) = 41 54
0006h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0007h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0008h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0009h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
000ah sub rsp,60h                   ; SUB(Sub_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 ec 60
000eh vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0011h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0014h lea rdi,[rsp+28h]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 7c 24 28
0019h mov ecx,0Ch                   ; MOV(Mov_r32_imm32) [ECX,ch:imm32]                    encoding(5 bytes) = b9 0c 00 00 00
001eh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0020h rep stosd                     ; STOSD(Stosd_m32_EAX) [mem(32u),EAX]                  encoding(2 bytes) = f3 ab
0022h mov rcx,rsi                   ; MOV(Mov_r64_rm64) [RCX,RSI]                          encoding(3 bytes) = 48 8b ce
0025h mov rbx,rcx                   ; MOV(Mov_r64_rm64) [RBX,RCX]                          encoding(3 bytes) = 48 8b d9
0028h mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
002bh mov rdi,r8                    ; MOV(Mov_r64_rm64) [RDI,R8]                           encoding(3 bytes) = 49 8b f8
002eh mov ebp,8Ah                   ; MOV(Mov_r32_imm32) [EBP,8ah:imm32]                   encoding(5 bytes) = bd 8a 00 00 00
0033h mov r14d,1                    ; MOV(Mov_r32_imm32) [R14D,1h:imm32]                   encoding(6 bytes) = 41 be 01 00 00 00
0039h mov r15d,[rsi+8]              ; MOV(Mov_r32_rm32) [R15D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 8b 7e 08
003dh mov r12d,[rdi+8]              ; MOV(Mov_r32_rm32) [R12D,mem(32u,RDI:br,DS:sr)]       encoding(4 bytes) = 44 8b 67 08
0041h cmp r15d,r12d                 ; CMP(Cmp_r32_rm32) [R15D,R12D]                        encoding(3 bytes) = 45 3b fc
0044h jne short 00abh               ; JNE(Jne_rel8_64) [ABh:jmp64]                         encoding(2 bytes) = 75 65
0046h movsxd rdx,r15d               ; MOVSXD(Movsxd_r64_rm32) [RDX,R15D]                   encoding(3 bytes) = 49 63 d7
0049h mov rcx,7FFC86FF98E8h         ; MOV(Mov_r64_imm64) [RCX,7ffc86ff98e8h:imm64]         encoding(10 bytes) = 48 b9 e8 98 ff 86 fc 7f 00 00
0053h call 7FFCE67394A0h            ; CALL(Call_rel32_64) [5F4737B0h:jmp64]                encoding(5 bytes) = e8 58 37 47 5f
0058h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
005ch mov edx,[rax+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 50 08
005fh mov r8,rbx                    ; MOV(Mov_r64_rm64) [R8,RBX]                           encoding(3 bytes) = 4c 8b c3
0062h vmovdqu xmm0,xmmword ptr [rsi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 06
0066h vmovdqu xmmword ptr [rsp+48h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 48
006ch vmovdqu xmm0,xmmword ptr [rdi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RDI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 07
0070h vmovdqu xmmword ptr [rsp+38h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 38
0076h lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
007bh mov [r9],rcx                  ; MOV(Mov_rm64_r64) [mem(64u,R9:br,DS:sr),RCX]         encoding(3 bytes) = 49 89 09
007eh mov [r9+8],edx                ; MOV(Mov_rm32_r32) [mem(32u,R9:br,DS:sr),EDX]         encoding(4 bytes) = 41 89 51 08
0082h mov rcx,r8                    ; MOV(Mov_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 8b c8
0085h lea rdx,[rsp+48h]             ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 54 24 48
008ah lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
008fh lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
0094h call 7FFC872C5410h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFF720h:jmp64]        encoding(5 bytes) = e8 87 f6 ff ff
0099h mov rax,rbx                   ; MOV(Mov_r64_rm64) [RAX,RBX]                          encoding(3 bytes) = 48 8b c3
009ch add rsp,60h                   ; ADD(Add_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 c4 60
00a0h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
00a1h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
00a2h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
00a3h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
00a4h pop r12                       ; POP(Pop_r64) [R12]                                   encoding(2 bytes) = 41 5c
00a6h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
00a8h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
00aah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
00abh mov ecx,2FBh                  ; MOV(Mov_r32_imm32) [ECX,2fbh:imm32]                  encoding(5 bytes) = b9 fb 02 00 00
00b0h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00bah call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F46DC30h:jmp64]                encoding(5 bytes) = e8 71 db 46 5f
00bfh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
00c2h mov ecx,0A1Fh                 ; MOV(Mov_r32_imm32) [ECX,a1fh:imm32]                  encoding(5 bytes) = b9 1f 0a 00 00
00c7h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00d1h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F46DC30h:jmp64]                encoding(5 bytes) = e8 5a db 46 5f
00d6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00d9h lea r8,[rsp+58h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 58
00deh mov [r8],r14b                 ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),R14L]           encoding(3 bytes) = 45 88 30
00e1h mov [r8+4],ebp                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBP]         encoding(4 bytes) = 41 89 68 04
00e5h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00e8h mov ecx,r15d                  ; MOV(Mov_r32_rm32) [ECX,R15D]                         encoding(3 bytes) = 41 8b cf
00ebh mov edx,r12d                  ; MOV(Mov_r32_rm32) [EDX,R12D]                         encoding(3 bytes) = 41 8b d4
00eeh mov rax,[rsp+58h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 58
00f3h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00f8h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFC98288h:jmp64]        encoding(5 bytes) = e8 8b 81 c9 ff
00fdh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
0100h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F450C60h:jmp64]                encoding(5 bytes) = e8 5b 0b 45 5f
0105h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> gtBytes => new byte[262]{0x41,0x57,0x41,0x56,0x41,0x54,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x60,0xC5,0xF8,0x77,0x48,0x8B,0xF1,0x48,0x8D,0x7C,0x24,0x28,0xB9,0x0C,0x00,0x00,0x00,0x33,0xC0,0xF3,0xAB,0x48,0x8B,0xCE,0x48,0x8B,0xD9,0x48,0x8B,0xF2,0x49,0x8B,0xF8,0xBD,0x8A,0x00,0x00,0x00,0x41,0xBE,0x01,0x00,0x00,0x00,0x44,0x8B,0x7E,0x08,0x44,0x8B,0x67,0x08,0x45,0x3B,0xFC,0x75,0x65,0x49,0x63,0xD7,0x48,0xB9,0xE8,0x98,0xFF,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x58,0x37,0x47,0x5F,0x48,0x8D,0x48,0x10,0x8B,0x50,0x08,0x4C,0x8B,0xC3,0xC5,0xFA,0x6F,0x06,0xC5,0xFA,0x7F,0x44,0x24,0x48,0xC5,0xFA,0x6F,0x07,0xC5,0xFA,0x7F,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0x49,0x89,0x09,0x41,0x89,0x51,0x08,0x49,0x8B,0xC8,0x48,0x8D,0x54,0x24,0x48,0x4C,0x8D,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0xE8,0x87,0xF6,0xFF,0xFF,0x48,0x8B,0xC3,0x48,0x83,0xC4,0x60,0x5B,0x5D,0x5E,0x5F,0x41,0x5C,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0xFB,0x02,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x71,0xDB,0x46,0x5F,0x48,0x8B,0xF0,0xB9,0x1F,0x0A,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x5A,0xDB,0x46,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x58,0x45,0x88,0x30,0x41,0x89,0x68,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCF,0x41,0x8B,0xD4,0x48,0x8B,0x44,0x24,0x58,0x48,0x89,0x44,0x24,0x20,0xE8,0x8B,0x81,0xC9,0xFF,0x48,0x8B,0xC8,0xE8,0x5B,0x0B,0x45,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool gteq(sbyte lhs, sbyte rhs)
; location: [7FFC872C5E20h, 7FFC872C5E35h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cl                  ; MOVSX(Movsx_r64_rm8) [RAX,CL]                        encoding(4 bytes) = 48 0f be c1
0009h movsx rdx,dl                  ; MOVSX(Movsx_r64_rm8) [RDX,DL]                        encoding(4 bytes) = 48 0f be d2
000dh cmp eax,edx                   ; CMP(Cmp_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 3b c2
000fh setge al                      ; SETGE(Setge_rm8) [AL]                                encoding(3 bytes) = 0f 9d c0
0012h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0015h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> gteqBytes => new byte[22]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBE,0xC1,0x48,0x0F,0xBE,0xD2,0x3B,0xC2,0x0F,0x9D,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool gteq(byte lhs, byte rhs)
; location: [7FFC872C5E50h, 7FFC872C5E63h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0008h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
000bh cmp eax,edx                   ; CMP(Cmp_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 3b c2
000dh setge al                      ; SETGE(Setge_rm8) [AL]                                encoding(3 bytes) = 0f 9d c0
0010h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> gteqBytes => new byte[20]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC1,0x0F,0xB6,0xD2,0x3B,0xC2,0x0F,0x9D,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool gteq(short lhs, short rhs)
; location: [7FFC872C5E80h, 7FFC872C5E95h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cx                  ; MOVSX(Movsx_r64_rm16) [RAX,CX]                       encoding(4 bytes) = 48 0f bf c1
0009h movsx rdx,dx                  ; MOVSX(Movsx_r64_rm16) [RDX,DX]                       encoding(4 bytes) = 48 0f bf d2
000dh cmp eax,edx                   ; CMP(Cmp_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 3b c2
000fh setge al                      ; SETGE(Setge_rm8) [AL]                                encoding(3 bytes) = 0f 9d c0
0012h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0015h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> gteqBytes => new byte[22]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBF,0xC1,0x48,0x0F,0xBF,0xD2,0x3B,0xC2,0x0F,0x9D,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool gteq(ushort lhs, ushort rhs)
; location: [7FFC872C5EB0h, 7FFC872C5EC3h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cx                  ; MOVZX(Movzx_r32_rm16) [EAX,CX]                       encoding(3 bytes) = 0f b7 c1
0008h movzx edx,dx                  ; MOVZX(Movzx_r32_rm16) [EDX,DX]                       encoding(3 bytes) = 0f b7 d2
000bh cmp eax,edx                   ; CMP(Cmp_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 3b c2
000dh setge al                      ; SETGE(Setge_rm8) [AL]                                encoding(3 bytes) = 0f 9d c0
0010h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> gteqBytes => new byte[20]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB7,0xC1,0x0F,0xB7,0xD2,0x3B,0xC2,0x0F,0x9D,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool gteq(int lhs, int rhs)
; location: [7FFC872C5EE0h, 7FFC872C5EEDh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h cmp ecx,edx                   ; CMP(Cmp_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 3b ca
0007h setge al                      ; SETGE(Setge_rm8) [AL]                                encoding(3 bytes) = 0f 9d c0
000ah movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> gteqBytes => new byte[14]{0x0F,0x1F,0x44,0x00,0x00,0x3B,0xCA,0x0F,0x9D,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool gteq(uint lhs, uint rhs)
; location: [7FFC872C5F00h, 7FFC872C5F0Dh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h cmp ecx,edx                   ; CMP(Cmp_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 3b ca
0007h setae al                      ; SETAE(Setae_rm8) [AL]                                encoding(3 bytes) = 0f 93 c0
000ah movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> gteqBytes => new byte[14]{0x0F,0x1F,0x44,0x00,0x00,0x3B,0xCA,0x0F,0x93,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool gteq(long lhs, long rhs)
; location: [7FFC872C5F20h, 7FFC872C5F2Eh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h cmp rcx,rdx                   ; CMP(Cmp_r64_rm64) [RCX,RDX]                          encoding(3 bytes) = 48 3b ca
0008h setge al                      ; SETGE(Setge_rm8) [AL]                                encoding(3 bytes) = 0f 9d c0
000bh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> gteqBytes => new byte[15]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x3B,0xCA,0x0F,0x9D,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool gteq(ulong lhs, ulong rhs)
; location: [7FFC872C5F40h, 7FFC872C5F4Eh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h cmp rcx,rdx                   ; CMP(Cmp_r64_rm64) [RCX,RDX]                          encoding(3 bytes) = 48 3b ca
0008h setae al                      ; SETAE(Setae_rm8) [AL]                                encoding(3 bytes) = 0f 93 c0
000bh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> gteqBytes => new byte[15]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x3B,0xCA,0x0F,0x93,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> gteq(ReadOnlySpan<sbyte> lhs, ReadOnlySpan<sbyte> rhs, Span<bool> dst)
; location: [7FFC872C5F60h, 7FFC872C5FC4h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0003h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0004h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0008h mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000bh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000fh mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0012h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0015h xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
0018h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
001ah jle short 004ch               ; JLE(Jle_rel8_64) [4Ch:jmp64]                         encoding(2 bytes) = 7e 30
001ch cmp r11d,r9d                  ; CMP(Cmp_r32_rm32) [R11D,R9D]                         encoding(3 bytes) = 45 3b d9
001fh jae short 005fh               ; JAE(Jae_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 73 3e
0021h movsxd rsi,r11d               ; MOVSXD(Movsxd_r64_rm32) [RSI,R11D]                   encoding(3 bytes) = 49 63 f3
0024h lea rdi,[rax+rsi]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 30
0028h movsx rbx,byte ptr [r10+rsi]  ; MOVSX(Movsx_r64_rm8) [RBX,mem(8i,R10:br,DS:sr)]      encoding(5 bytes) = 49 0f be 1c 32
002dh cmp r11d,[r8+8]               ; CMP(Cmp_r32_rm32) [R11D,mem(32u,R8:br,DS:sr)]        encoding(4 bytes) = 45 3b 58 08
0031h jae short 005fh               ; JAE(Jae_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 73 2c
0033h mov rbp,[r8]                  ; MOV(Mov_r64_rm64) [RBP,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 28
0036h movsx rsi,byte ptr [rsi+rbp]  ; MOVSX(Movsx_r64_rm8) [RSI,mem(8i,RSI:br,DS:sr)]      encoding(5 bytes) = 48 0f be 34 2e
003bh cmp ebx,esi                   ; CMP(Cmp_r32_rm32) [EBX,ESI]                          encoding(2 bytes) = 3b de
003dh setge sil                     ; SETGE(Setge_rm8) [SIL]                               encoding(4 bytes) = 40 0f 9d c6
0041h mov [rdi],sil                 ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),SIL]           encoding(3 bytes) = 40 88 37
0044h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
0047h cmp r11d,edx                  ; CMP(Cmp_r32_rm32) [R11D,EDX]                         encoding(3 bytes) = 44 3b da
004ah jl short 001ch                ; JL(Jl_rel8_64) [1Ch:jmp64]                           encoding(2 bytes) = 7c d0
004ch mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
004fh mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0053h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0056h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
005ah pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
005bh pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
005ch pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
005dh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
005eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
005fh call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F59EE50h:jmp64]                encoding(5 bytes) = e8 ec ed 59 5f
0064h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> gteqBytes => new byte[101]{0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x12,0x8B,0x52,0x08,0x45,0x33,0xDB,0x85,0xD2,0x7E,0x30,0x45,0x3B,0xD9,0x73,0x3E,0x49,0x63,0xF3,0x48,0x8D,0x3C,0x30,0x49,0x0F,0xBE,0x1C,0x32,0x45,0x3B,0x58,0x08,0x73,0x2C,0x49,0x8B,0x28,0x48,0x0F,0xBE,0x34,0x2E,0x3B,0xDE,0x40,0x0F,0x9D,0xC6,0x40,0x88,0x37,0x41,0xFF,0xC3,0x44,0x3B,0xDA,0x7C,0xD0,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0xC3,0xE8,0xEC,0xED,0x59,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> gteq(ReadOnlySpan<byte> lhs, ReadOnlySpan<byte> rhs, Span<bool> dst)
; location: [7FFC872C5FF0h, 7FFC872C6054h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0003h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0004h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0008h mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000bh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000fh mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0012h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0015h xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
0018h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
001ah jle short 004ch               ; JLE(Jle_rel8_64) [4Ch:jmp64]                         encoding(2 bytes) = 7e 30
001ch cmp r11d,r9d                  ; CMP(Cmp_r32_rm32) [R11D,R9D]                         encoding(3 bytes) = 45 3b d9
001fh jae short 005fh               ; JAE(Jae_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 73 3e
0021h movsxd rsi,r11d               ; MOVSXD(Movsxd_r64_rm32) [RSI,R11D]                   encoding(3 bytes) = 49 63 f3
0024h lea rdi,[rax+rsi]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 30
0028h movzx ebx,byte ptr [r10+rsi]  ; MOVZX(Movzx_r32_rm8) [EBX,mem(8u,R10:br,DS:sr)]      encoding(5 bytes) = 41 0f b6 1c 32
002dh cmp r11d,[r8+8]               ; CMP(Cmp_r32_rm32) [R11D,mem(32u,R8:br,DS:sr)]        encoding(4 bytes) = 45 3b 58 08
0031h jae short 005fh               ; JAE(Jae_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 73 2c
0033h mov rbp,[r8]                  ; MOV(Mov_r64_rm64) [RBP,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 28
0036h movzx esi,byte ptr [rsi+rbp]  ; MOVZX(Movzx_r32_rm8) [ESI,mem(8u,RSI:br,DS:sr)]      encoding(5 bytes) = 40 0f b6 34 2e
003bh cmp ebx,esi                   ; CMP(Cmp_r32_rm32) [EBX,ESI]                          encoding(2 bytes) = 3b de
003dh setge sil                     ; SETGE(Setge_rm8) [SIL]                               encoding(4 bytes) = 40 0f 9d c6
0041h mov [rdi],sil                 ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),SIL]           encoding(3 bytes) = 40 88 37
0044h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
0047h cmp r11d,edx                  ; CMP(Cmp_r32_rm32) [R11D,EDX]                         encoding(3 bytes) = 44 3b da
004ah jl short 001ch                ; JL(Jl_rel8_64) [1Ch:jmp64]                           encoding(2 bytes) = 7c d0
004ch mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
004fh mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0053h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0056h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
005ah pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
005bh pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
005ch pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
005dh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
005eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
005fh call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F59EDC0h:jmp64]                encoding(5 bytes) = e8 5c ed 59 5f
0064h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> gteqBytes => new byte[101]{0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x12,0x8B,0x52,0x08,0x45,0x33,0xDB,0x85,0xD2,0x7E,0x30,0x45,0x3B,0xD9,0x73,0x3E,0x49,0x63,0xF3,0x48,0x8D,0x3C,0x30,0x41,0x0F,0xB6,0x1C,0x32,0x45,0x3B,0x58,0x08,0x73,0x2C,0x49,0x8B,0x28,0x40,0x0F,0xB6,0x34,0x2E,0x3B,0xDE,0x40,0x0F,0x9D,0xC6,0x40,0x88,0x37,0x41,0xFF,0xC3,0x44,0x3B,0xDA,0x7C,0xD0,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0xC3,0xE8,0x5C,0xED,0x59,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> gteq(ReadOnlySpan<short> lhs, ReadOnlySpan<short> rhs, Span<bool> dst)
; location: [7FFC872C6080h, 7FFC872C60E5h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0003h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0004h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0008h mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000bh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000fh mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0012h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0015h xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
0018h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
001ah jle short 004dh               ; JLE(Jle_rel8_64) [4Dh:jmp64]                         encoding(2 bytes) = 7e 31
001ch cmp r11d,r9d                  ; CMP(Cmp_r32_rm32) [R11D,R9D]                         encoding(3 bytes) = 45 3b d9
001fh jae short 0060h               ; JAE(Jae_rel8_64) [60h:jmp64]                         encoding(2 bytes) = 73 3f
0021h movsxd rsi,r11d               ; MOVSXD(Movsxd_r64_rm32) [RSI,R11D]                   encoding(3 bytes) = 49 63 f3
0024h lea rdi,[rax+rsi]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 30
0028h movsx rbx,word ptr [r10+rsi*2]; MOVSX(Movsx_r64_rm16) [RBX,mem(16i,R10:br,DS:sr)]    encoding(5 bytes) = 49 0f bf 1c 72
002dh cmp r11d,[r8+8]               ; CMP(Cmp_r32_rm32) [R11D,mem(32u,R8:br,DS:sr)]        encoding(4 bytes) = 45 3b 58 08
0031h jae short 0060h               ; JAE(Jae_rel8_64) [60h:jmp64]                         encoding(2 bytes) = 73 2d
0033h mov rbp,[r8]                  ; MOV(Mov_r64_rm64) [RBP,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 28
0036h movsx rsi,word ptr [rbp+rsi*2]; MOVSX(Movsx_r64_rm16) [RSI,mem(16i,RBP:br,SS:sr)]    encoding(6 bytes) = 48 0f bf 74 75 00
003ch cmp ebx,esi                   ; CMP(Cmp_r32_rm32) [EBX,ESI]                          encoding(2 bytes) = 3b de
003eh setge sil                     ; SETGE(Setge_rm8) [SIL]                               encoding(4 bytes) = 40 0f 9d c6
0042h mov [rdi],sil                 ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),SIL]           encoding(3 bytes) = 40 88 37
0045h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
0048h cmp r11d,edx                  ; CMP(Cmp_r32_rm32) [R11D,EDX]                         encoding(3 bytes) = 44 3b da
004bh jl short 001ch                ; JL(Jl_rel8_64) [1Ch:jmp64]                           encoding(2 bytes) = 7c cf
004dh mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0050h mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0054h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0057h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
005bh pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
005ch pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
005dh pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
005eh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
005fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0060h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F59ED30h:jmp64]                encoding(5 bytes) = e8 cb ec 59 5f
0065h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> gteqBytes => new byte[102]{0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x12,0x8B,0x52,0x08,0x45,0x33,0xDB,0x85,0xD2,0x7E,0x31,0x45,0x3B,0xD9,0x73,0x3F,0x49,0x63,0xF3,0x48,0x8D,0x3C,0x30,0x49,0x0F,0xBF,0x1C,0x72,0x45,0x3B,0x58,0x08,0x73,0x2D,0x49,0x8B,0x28,0x48,0x0F,0xBF,0x74,0x75,0x00,0x3B,0xDE,0x40,0x0F,0x9D,0xC6,0x40,0x88,0x37,0x41,0xFF,0xC3,0x44,0x3B,0xDA,0x7C,0xCF,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0xC3,0xE8,0xCB,0xEC,0x59,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> gteq(ReadOnlySpan<ushort> lhs, ReadOnlySpan<ushort> rhs, Span<bool> dst)
; location: [7FFC872C6110h, 7FFC872C6174h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0003h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0004h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0008h mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000bh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000fh mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0012h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0015h xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
0018h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
001ah jle short 004ch               ; JLE(Jle_rel8_64) [4Ch:jmp64]                         encoding(2 bytes) = 7e 30
001ch cmp r11d,r9d                  ; CMP(Cmp_r32_rm32) [R11D,R9D]                         encoding(3 bytes) = 45 3b d9
001fh jae short 005fh               ; JAE(Jae_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 73 3e
0021h movsxd rsi,r11d               ; MOVSXD(Movsxd_r64_rm32) [RSI,R11D]                   encoding(3 bytes) = 49 63 f3
0024h lea rdi,[rax+rsi]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 30
0028h movzx ebx,word ptr [r10+rsi*2]; MOVZX(Movzx_r32_rm16) [EBX,mem(16u,R10:br,DS:sr)]    encoding(5 bytes) = 41 0f b7 1c 72
002dh cmp r11d,[r8+8]               ; CMP(Cmp_r32_rm32) [R11D,mem(32u,R8:br,DS:sr)]        encoding(4 bytes) = 45 3b 58 08
0031h jae short 005fh               ; JAE(Jae_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 73 2c
0033h mov rbp,[r8]                  ; MOV(Mov_r64_rm64) [RBP,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 28
0036h movzx esi,word ptr [rbp+rsi*2]; MOVZX(Movzx_r32_rm16) [ESI,mem(16u,RBP:br,SS:sr)]    encoding(5 bytes) = 0f b7 74 75 00
003bh cmp ebx,esi                   ; CMP(Cmp_r32_rm32) [EBX,ESI]                          encoding(2 bytes) = 3b de
003dh setge sil                     ; SETGE(Setge_rm8) [SIL]                               encoding(4 bytes) = 40 0f 9d c6
0041h mov [rdi],sil                 ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),SIL]           encoding(3 bytes) = 40 88 37
0044h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
0047h cmp r11d,edx                  ; CMP(Cmp_r32_rm32) [R11D,EDX]                         encoding(3 bytes) = 44 3b da
004ah jl short 001ch                ; JL(Jl_rel8_64) [1Ch:jmp64]                           encoding(2 bytes) = 7c d0
004ch mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
004fh mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0053h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0056h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
005ah pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
005bh pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
005ch pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
005dh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
005eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
005fh call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F59ECA0h:jmp64]                encoding(5 bytes) = e8 3c ec 59 5f
0064h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> gteqBytes => new byte[101]{0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x12,0x8B,0x52,0x08,0x45,0x33,0xDB,0x85,0xD2,0x7E,0x30,0x45,0x3B,0xD9,0x73,0x3E,0x49,0x63,0xF3,0x48,0x8D,0x3C,0x30,0x41,0x0F,0xB7,0x1C,0x72,0x45,0x3B,0x58,0x08,0x73,0x2C,0x49,0x8B,0x28,0x0F,0xB7,0x74,0x75,0x00,0x3B,0xDE,0x40,0x0F,0x9D,0xC6,0x40,0x88,0x37,0x41,0xFF,0xC3,0x44,0x3B,0xDA,0x7C,0xD0,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0xC3,0xE8,0x3C,0xEC,0x59,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> gteq(ReadOnlySpan<int> lhs, ReadOnlySpan<int> rhs, Span<bool> dst)
; location: [7FFC872C61A0h, 7FFC872C6202h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0003h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0004h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0008h mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000bh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000fh mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0012h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0015h xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
0018h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
001ah jle short 004ah               ; JLE(Jle_rel8_64) [4Ah:jmp64]                         encoding(2 bytes) = 7e 2e
001ch cmp r11d,r9d                  ; CMP(Cmp_r32_rm32) [R11D,R9D]                         encoding(3 bytes) = 45 3b d9
001fh jae short 005dh               ; JAE(Jae_rel8_64) [5Dh:jmp64]                         encoding(2 bytes) = 73 3c
0021h movsxd rsi,r11d               ; MOVSXD(Movsxd_r64_rm32) [RSI,R11D]                   encoding(3 bytes) = 49 63 f3
0024h lea rdi,[rax+rsi]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 30
0028h mov ebx,[r10+rsi*4]           ; MOV(Mov_r32_rm32) [EBX,mem(32u,R10:br,DS:sr)]        encoding(4 bytes) = 41 8b 1c b2
002ch cmp r11d,[r8+8]               ; CMP(Cmp_r32_rm32) [R11D,mem(32u,R8:br,DS:sr)]        encoding(4 bytes) = 45 3b 58 08
0030h jae short 005dh               ; JAE(Jae_rel8_64) [5Dh:jmp64]                         encoding(2 bytes) = 73 2b
0032h mov rbp,[r8]                  ; MOV(Mov_r64_rm64) [RBP,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 28
0035h mov esi,[rbp+rsi*4]           ; MOV(Mov_r32_rm32) [ESI,mem(32u,RBP:br,SS:sr)]        encoding(4 bytes) = 8b 74 b5 00
0039h cmp ebx,esi                   ; CMP(Cmp_r32_rm32) [EBX,ESI]                          encoding(2 bytes) = 3b de
003bh setge sil                     ; SETGE(Setge_rm8) [SIL]                               encoding(4 bytes) = 40 0f 9d c6
003fh mov [rdi],sil                 ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),SIL]           encoding(3 bytes) = 40 88 37
0042h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
0045h cmp r11d,edx                  ; CMP(Cmp_r32_rm32) [R11D,EDX]                         encoding(3 bytes) = 44 3b da
0048h jl short 001ch                ; JL(Jl_rel8_64) [1Ch:jmp64]                           encoding(2 bytes) = 7c d2
004ah mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
004dh mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0051h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0054h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
0058h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0059h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
005ah pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
005bh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
005ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
005dh call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F59EC10h:jmp64]                encoding(5 bytes) = e8 ae eb 59 5f
0062h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> gteqBytes => new byte[99]{0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x12,0x8B,0x52,0x08,0x45,0x33,0xDB,0x85,0xD2,0x7E,0x2E,0x45,0x3B,0xD9,0x73,0x3C,0x49,0x63,0xF3,0x48,0x8D,0x3C,0x30,0x41,0x8B,0x1C,0xB2,0x45,0x3B,0x58,0x08,0x73,0x2B,0x49,0x8B,0x28,0x8B,0x74,0xB5,0x00,0x3B,0xDE,0x40,0x0F,0x9D,0xC6,0x40,0x88,0x37,0x41,0xFF,0xC3,0x44,0x3B,0xDA,0x7C,0xD2,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0xC3,0xE8,0xAE,0xEB,0x59,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> gteq(ReadOnlySpan<uint> lhs, ReadOnlySpan<uint> rhs, Span<bool> dst)
; location: [7FFC872C6220h, 7FFC872C6282h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0003h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0004h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0008h mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000bh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000fh mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0012h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0015h xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
0018h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
001ah jle short 004ah               ; JLE(Jle_rel8_64) [4Ah:jmp64]                         encoding(2 bytes) = 7e 2e
001ch cmp r11d,r9d                  ; CMP(Cmp_r32_rm32) [R11D,R9D]                         encoding(3 bytes) = 45 3b d9
001fh jae short 005dh               ; JAE(Jae_rel8_64) [5Dh:jmp64]                         encoding(2 bytes) = 73 3c
0021h movsxd rsi,r11d               ; MOVSXD(Movsxd_r64_rm32) [RSI,R11D]                   encoding(3 bytes) = 49 63 f3
0024h lea rdi,[rax+rsi]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 30
0028h mov ebx,[r10+rsi*4]           ; MOV(Mov_r32_rm32) [EBX,mem(32u,R10:br,DS:sr)]        encoding(4 bytes) = 41 8b 1c b2
002ch cmp r11d,[r8+8]               ; CMP(Cmp_r32_rm32) [R11D,mem(32u,R8:br,DS:sr)]        encoding(4 bytes) = 45 3b 58 08
0030h jae short 005dh               ; JAE(Jae_rel8_64) [5Dh:jmp64]                         encoding(2 bytes) = 73 2b
0032h mov rbp,[r8]                  ; MOV(Mov_r64_rm64) [RBP,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 28
0035h mov esi,[rbp+rsi*4]           ; MOV(Mov_r32_rm32) [ESI,mem(32u,RBP:br,SS:sr)]        encoding(4 bytes) = 8b 74 b5 00
0039h cmp ebx,esi                   ; CMP(Cmp_r32_rm32) [EBX,ESI]                          encoding(2 bytes) = 3b de
003bh setae sil                     ; SETAE(Setae_rm8) [SIL]                               encoding(4 bytes) = 40 0f 93 c6
003fh mov [rdi],sil                 ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),SIL]           encoding(3 bytes) = 40 88 37
0042h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
0045h cmp r11d,edx                  ; CMP(Cmp_r32_rm32) [R11D,EDX]                         encoding(3 bytes) = 44 3b da
0048h jl short 001ch                ; JL(Jl_rel8_64) [1Ch:jmp64]                           encoding(2 bytes) = 7c d2
004ah mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
004dh mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0051h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0054h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
0058h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0059h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
005ah pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
005bh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
005ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
005dh call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F59EB90h:jmp64]                encoding(5 bytes) = e8 2e eb 59 5f
0062h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> gteqBytes => new byte[99]{0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x12,0x8B,0x52,0x08,0x45,0x33,0xDB,0x85,0xD2,0x7E,0x2E,0x45,0x3B,0xD9,0x73,0x3C,0x49,0x63,0xF3,0x48,0x8D,0x3C,0x30,0x41,0x8B,0x1C,0xB2,0x45,0x3B,0x58,0x08,0x73,0x2B,0x49,0x8B,0x28,0x8B,0x74,0xB5,0x00,0x3B,0xDE,0x40,0x0F,0x93,0xC6,0x40,0x88,0x37,0x41,0xFF,0xC3,0x44,0x3B,0xDA,0x7C,0xD2,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0xC3,0xE8,0x2E,0xEB,0x59,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> gteq(ReadOnlySpan<long> lhs, ReadOnlySpan<long> rhs, Span<bool> dst)
; location: [7FFC872C62A0h, 7FFC872C6304h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0003h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0004h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0008h mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000bh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000fh mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0012h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0015h xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
0018h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
001ah jle short 004ch               ; JLE(Jle_rel8_64) [4Ch:jmp64]                         encoding(2 bytes) = 7e 30
001ch cmp r11d,r9d                  ; CMP(Cmp_r32_rm32) [R11D,R9D]                         encoding(3 bytes) = 45 3b d9
001fh jae short 005fh               ; JAE(Jae_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 73 3e
0021h movsxd rsi,r11d               ; MOVSXD(Movsxd_r64_rm32) [RSI,R11D]                   encoding(3 bytes) = 49 63 f3
0024h lea rdi,[rax+rsi]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 30
0028h mov rbx,[r10+rsi*8]           ; MOV(Mov_r64_rm64) [RBX,mem(64u,R10:br,DS:sr)]        encoding(4 bytes) = 49 8b 1c f2
002ch cmp r11d,[r8+8]               ; CMP(Cmp_r32_rm32) [R11D,mem(32u,R8:br,DS:sr)]        encoding(4 bytes) = 45 3b 58 08
0030h jae short 005fh               ; JAE(Jae_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 73 2d
0032h mov rbp,[r8]                  ; MOV(Mov_r64_rm64) [RBP,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 28
0035h mov rsi,[rbp+rsi*8]           ; MOV(Mov_r64_rm64) [RSI,mem(64u,RBP:br,SS:sr)]        encoding(5 bytes) = 48 8b 74 f5 00
003ah cmp rbx,rsi                   ; CMP(Cmp_r64_rm64) [RBX,RSI]                          encoding(3 bytes) = 48 3b de
003dh setge sil                     ; SETGE(Setge_rm8) [SIL]                               encoding(4 bytes) = 40 0f 9d c6
0041h mov [rdi],sil                 ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),SIL]           encoding(3 bytes) = 40 88 37
0044h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
0047h cmp r11d,edx                  ; CMP(Cmp_r32_rm32) [R11D,EDX]                         encoding(3 bytes) = 44 3b da
004ah jl short 001ch                ; JL(Jl_rel8_64) [1Ch:jmp64]                           encoding(2 bytes) = 7c d0
004ch mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
004fh mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0053h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0056h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
005ah pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
005bh pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
005ch pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
005dh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
005eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
005fh call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F59EB10h:jmp64]                encoding(5 bytes) = e8 ac ea 59 5f
0064h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> gteqBytes => new byte[101]{0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x12,0x8B,0x52,0x08,0x45,0x33,0xDB,0x85,0xD2,0x7E,0x30,0x45,0x3B,0xD9,0x73,0x3E,0x49,0x63,0xF3,0x48,0x8D,0x3C,0x30,0x49,0x8B,0x1C,0xF2,0x45,0x3B,0x58,0x08,0x73,0x2D,0x49,0x8B,0x28,0x48,0x8B,0x74,0xF5,0x00,0x48,0x3B,0xDE,0x40,0x0F,0x9D,0xC6,0x40,0x88,0x37,0x41,0xFF,0xC3,0x44,0x3B,0xDA,0x7C,0xD0,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0xC3,0xE8,0xAC,0xEA,0x59,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> gteq(ReadOnlySpan<ulong> lhs, ReadOnlySpan<ulong> rhs, Span<bool> dst)
; location: [7FFC872C6330h, 7FFC872C6394h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0003h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0004h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0008h mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000bh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000fh mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0012h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0015h xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
0018h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
001ah jle short 004ch               ; JLE(Jle_rel8_64) [4Ch:jmp64]                         encoding(2 bytes) = 7e 30
001ch cmp r11d,r9d                  ; CMP(Cmp_r32_rm32) [R11D,R9D]                         encoding(3 bytes) = 45 3b d9
001fh jae short 005fh               ; JAE(Jae_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 73 3e
0021h movsxd rsi,r11d               ; MOVSXD(Movsxd_r64_rm32) [RSI,R11D]                   encoding(3 bytes) = 49 63 f3
0024h lea rdi,[rax+rsi]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 30
0028h mov rbx,[r10+rsi*8]           ; MOV(Mov_r64_rm64) [RBX,mem(64u,R10:br,DS:sr)]        encoding(4 bytes) = 49 8b 1c f2
002ch cmp r11d,[r8+8]               ; CMP(Cmp_r32_rm32) [R11D,mem(32u,R8:br,DS:sr)]        encoding(4 bytes) = 45 3b 58 08
0030h jae short 005fh               ; JAE(Jae_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 73 2d
0032h mov rbp,[r8]                  ; MOV(Mov_r64_rm64) [RBP,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 28
0035h mov rsi,[rbp+rsi*8]           ; MOV(Mov_r64_rm64) [RSI,mem(64u,RBP:br,SS:sr)]        encoding(5 bytes) = 48 8b 74 f5 00
003ah cmp rbx,rsi                   ; CMP(Cmp_r64_rm64) [RBX,RSI]                          encoding(3 bytes) = 48 3b de
003dh setae sil                     ; SETAE(Setae_rm8) [SIL]                               encoding(4 bytes) = 40 0f 93 c6
0041h mov [rdi],sil                 ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),SIL]           encoding(3 bytes) = 40 88 37
0044h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
0047h cmp r11d,edx                  ; CMP(Cmp_r32_rm32) [R11D,EDX]                         encoding(3 bytes) = 44 3b da
004ah jl short 001ch                ; JL(Jl_rel8_64) [1Ch:jmp64]                           encoding(2 bytes) = 7c d0
004ch mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
004fh mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0053h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0056h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
005ah pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
005bh pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
005ch pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
005dh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
005eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
005fh call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F59EA80h:jmp64]                encoding(5 bytes) = e8 1c ea 59 5f
0064h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> gteqBytes => new byte[101]{0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x12,0x8B,0x52,0x08,0x45,0x33,0xDB,0x85,0xD2,0x7E,0x30,0x45,0x3B,0xD9,0x73,0x3E,0x49,0x63,0xF3,0x48,0x8D,0x3C,0x30,0x49,0x8B,0x1C,0xF2,0x45,0x3B,0x58,0x08,0x73,0x2D,0x49,0x8B,0x28,0x48,0x8B,0x74,0xF5,0x00,0x48,0x3B,0xDE,0x40,0x0F,0x93,0xC6,0x40,0x88,0x37,0x41,0xFF,0xC3,0x44,0x3B,0xDA,0x7C,0xD0,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0xC3,0xE8,0x1C,0xEA,0x59,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> gteq(ReadOnlySpan<sbyte> lhs, ReadOnlySpan<sbyte> rhs)
; location: [7FFC872C63C0h, 7FFC872C64C5h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push r12                      ; PUSH(Push_r64) [R12]                                 encoding(2 bytes) = 41 54
0006h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0007h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0008h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0009h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
000ah sub rsp,60h                   ; SUB(Sub_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 ec 60
000eh vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0011h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0014h lea rdi,[rsp+28h]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 7c 24 28
0019h mov ecx,0Ch                   ; MOV(Mov_r32_imm32) [ECX,ch:imm32]                    encoding(5 bytes) = b9 0c 00 00 00
001eh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0020h rep stosd                     ; STOSD(Stosd_m32_EAX) [mem(32u),EAX]                  encoding(2 bytes) = f3 ab
0022h mov rcx,rsi                   ; MOV(Mov_r64_rm64) [RCX,RSI]                          encoding(3 bytes) = 48 8b ce
0025h mov rbx,rcx                   ; MOV(Mov_r64_rm64) [RBX,RCX]                          encoding(3 bytes) = 48 8b d9
0028h mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
002bh mov rdi,r8                    ; MOV(Mov_r64_rm64) [RDI,R8]                           encoding(3 bytes) = 49 8b f8
002eh mov ebp,6Dh                   ; MOV(Mov_r32_imm32) [EBP,6dh:imm32]                   encoding(5 bytes) = bd 6d 00 00 00
0033h mov r14d,1                    ; MOV(Mov_r32_imm32) [R14D,1h:imm32]                   encoding(6 bytes) = 41 be 01 00 00 00
0039h mov r15d,[rsi+8]              ; MOV(Mov_r32_rm32) [R15D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 8b 7e 08
003dh mov r12d,[rdi+8]              ; MOV(Mov_r32_rm32) [R12D,mem(32u,RDI:br,DS:sr)]       encoding(4 bytes) = 44 8b 67 08
0041h cmp r15d,r12d                 ; CMP(Cmp_r32_rm32) [R15D,R12D]                        encoding(3 bytes) = 45 3b fc
0044h jne short 00abh               ; JNE(Jne_rel8_64) [ABh:jmp64]                         encoding(2 bytes) = 75 65
0046h movsxd rdx,r15d               ; MOVSXD(Movsxd_r64_rm32) [RDX,R15D]                   encoding(3 bytes) = 49 63 d7
0049h mov rcx,7FFC86FF98E8h         ; MOV(Mov_r64_imm64) [RCX,7ffc86ff98e8h:imm64]         encoding(10 bytes) = 48 b9 e8 98 ff 86 fc 7f 00 00
0053h call 7FFCE67394A0h            ; CALL(Call_rel32_64) [5F4730E0h:jmp64]                encoding(5 bytes) = e8 88 30 47 5f
0058h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
005ch mov edx,[rax+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 50 08
005fh mov r8,rbx                    ; MOV(Mov_r64_rm64) [R8,RBX]                           encoding(3 bytes) = 4c 8b c3
0062h vmovdqu xmm0,xmmword ptr [rsi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 06
0066h vmovdqu xmmword ptr [rsp+48h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 48
006ch vmovdqu xmm0,xmmword ptr [rdi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RDI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 07
0070h vmovdqu xmmword ptr [rsp+38h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 38
0076h lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
007bh mov [r9],rcx                  ; MOV(Mov_rm64_r64) [mem(64u,R9:br,DS:sr),RCX]         encoding(3 bytes) = 49 89 09
007eh mov [r9+8],edx                ; MOV(Mov_rm32_r32) [mem(32u,R9:br,DS:sr),EDX]         encoding(4 bytes) = 41 89 51 08
0082h mov rcx,r8                    ; MOV(Mov_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 8b c8
0085h lea rdx,[rsp+48h]             ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 54 24 48
008ah lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
008fh lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
0094h call 7FFC872C5F60h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFFBA0h:jmp64]        encoding(5 bytes) = e8 07 fb ff ff
0099h mov rax,rbx                   ; MOV(Mov_r64_rm64) [RAX,RBX]                          encoding(3 bytes) = 48 8b c3
009ch add rsp,60h                   ; ADD(Add_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 c4 60
00a0h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
00a1h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
00a2h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
00a3h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
00a4h pop r12                       ; POP(Pop_r64) [R12]                                   encoding(2 bytes) = 41 5c
00a6h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
00a8h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
00aah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
00abh mov ecx,353h                  ; MOV(Mov_r32_imm32) [ECX,353h:imm32]                  encoding(5 bytes) = b9 53 03 00 00
00b0h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00bah call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F46D560h:jmp64]                encoding(5 bytes) = e8 a1 d4 46 5f
00bfh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
00c2h mov ecx,0A73h                 ; MOV(Mov_r32_imm32) [ECX,a73h:imm32]                  encoding(5 bytes) = b9 73 0a 00 00
00c7h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00d1h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F46D560h:jmp64]                encoding(5 bytes) = e8 8a d4 46 5f
00d6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00d9h lea r8,[rsp+58h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 58
00deh mov [r8],r14b                 ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),R14L]           encoding(3 bytes) = 45 88 30
00e1h mov [r8+4],ebp                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBP]         encoding(4 bytes) = 41 89 68 04
00e5h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00e8h mov ecx,r15d                  ; MOV(Mov_r32_rm32) [ECX,R15D]                         encoding(3 bytes) = 41 8b cf
00ebh mov edx,r12d                  ; MOV(Mov_r32_rm32) [EDX,R12D]                         encoding(3 bytes) = 41 8b d4
00eeh mov rax,[rsp+58h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 58
00f3h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00f8h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFC97BB8h:jmp64]        encoding(5 bytes) = e8 bb 7a c9 ff
00fdh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
0100h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F450590h:jmp64]                encoding(5 bytes) = e8 8b 04 45 5f
0105h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> gteqBytes => new byte[262]{0x41,0x57,0x41,0x56,0x41,0x54,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x60,0xC5,0xF8,0x77,0x48,0x8B,0xF1,0x48,0x8D,0x7C,0x24,0x28,0xB9,0x0C,0x00,0x00,0x00,0x33,0xC0,0xF3,0xAB,0x48,0x8B,0xCE,0x48,0x8B,0xD9,0x48,0x8B,0xF2,0x49,0x8B,0xF8,0xBD,0x6D,0x00,0x00,0x00,0x41,0xBE,0x01,0x00,0x00,0x00,0x44,0x8B,0x7E,0x08,0x44,0x8B,0x67,0x08,0x45,0x3B,0xFC,0x75,0x65,0x49,0x63,0xD7,0x48,0xB9,0xE8,0x98,0xFF,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x88,0x30,0x47,0x5F,0x48,0x8D,0x48,0x10,0x8B,0x50,0x08,0x4C,0x8B,0xC3,0xC5,0xFA,0x6F,0x06,0xC5,0xFA,0x7F,0x44,0x24,0x48,0xC5,0xFA,0x6F,0x07,0xC5,0xFA,0x7F,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0x49,0x89,0x09,0x41,0x89,0x51,0x08,0x49,0x8B,0xC8,0x48,0x8D,0x54,0x24,0x48,0x4C,0x8D,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0xE8,0x07,0xFB,0xFF,0xFF,0x48,0x8B,0xC3,0x48,0x83,0xC4,0x60,0x5B,0x5D,0x5E,0x5F,0x41,0x5C,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0x53,0x03,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xA1,0xD4,0x46,0x5F,0x48,0x8B,0xF0,0xB9,0x73,0x0A,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x8A,0xD4,0x46,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x58,0x45,0x88,0x30,0x41,0x89,0x68,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCF,0x41,0x8B,0xD4,0x48,0x8B,0x44,0x24,0x58,0x48,0x89,0x44,0x24,0x20,0xE8,0xBB,0x7A,0xC9,0xFF,0x48,0x8B,0xC8,0xE8,0x8B,0x04,0x45,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> gteq(ReadOnlySpan<byte> lhs, ReadOnlySpan<byte> rhs)
; location: [7FFC872C64F0h, 7FFC872C65F5h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push r12                      ; PUSH(Push_r64) [R12]                                 encoding(2 bytes) = 41 54
0006h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0007h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0008h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0009h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
000ah sub rsp,60h                   ; SUB(Sub_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 ec 60
000eh vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0011h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0014h lea rdi,[rsp+28h]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 7c 24 28
0019h mov ecx,0Ch                   ; MOV(Mov_r32_imm32) [ECX,ch:imm32]                    encoding(5 bytes) = b9 0c 00 00 00
001eh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0020h rep stosd                     ; STOSD(Stosd_m32_EAX) [mem(32u),EAX]                  encoding(2 bytes) = f3 ab
0022h mov rcx,rsi                   ; MOV(Mov_r64_rm64) [RCX,RSI]                          encoding(3 bytes) = 48 8b ce
0025h mov rbx,rcx                   ; MOV(Mov_r64_rm64) [RBX,RCX]                          encoding(3 bytes) = 48 8b d9
0028h mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
002bh mov rdi,r8                    ; MOV(Mov_r64_rm64) [RDI,R8]                           encoding(3 bytes) = 49 8b f8
002eh mov ebp,71h                   ; MOV(Mov_r32_imm32) [EBP,71h:imm32]                   encoding(5 bytes) = bd 71 00 00 00
0033h mov r14d,1                    ; MOV(Mov_r32_imm32) [R14D,1h:imm32]                   encoding(6 bytes) = 41 be 01 00 00 00
0039h mov r15d,[rsi+8]              ; MOV(Mov_r32_rm32) [R15D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 8b 7e 08
003dh mov r12d,[rdi+8]              ; MOV(Mov_r32_rm32) [R12D,mem(32u,RDI:br,DS:sr)]       encoding(4 bytes) = 44 8b 67 08
0041h cmp r15d,r12d                 ; CMP(Cmp_r32_rm32) [R15D,R12D]                        encoding(3 bytes) = 45 3b fc
0044h jne short 00abh               ; JNE(Jne_rel8_64) [ABh:jmp64]                         encoding(2 bytes) = 75 65
0046h movsxd rdx,r15d               ; MOVSXD(Movsxd_r64_rm32) [RDX,R15D]                   encoding(3 bytes) = 49 63 d7
0049h mov rcx,7FFC86FF98E8h         ; MOV(Mov_r64_imm64) [RCX,7ffc86ff98e8h:imm64]         encoding(10 bytes) = 48 b9 e8 98 ff 86 fc 7f 00 00
0053h call 7FFCE67394A0h            ; CALL(Call_rel32_64) [5F472FB0h:jmp64]                encoding(5 bytes) = e8 58 2f 47 5f
0058h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
005ch mov edx,[rax+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 50 08
005fh mov r8,rbx                    ; MOV(Mov_r64_rm64) [R8,RBX]                           encoding(3 bytes) = 4c 8b c3
0062h vmovdqu xmm0,xmmword ptr [rsi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 06
0066h vmovdqu xmmword ptr [rsp+48h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 48
006ch vmovdqu xmm0,xmmword ptr [rdi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RDI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 07
0070h vmovdqu xmmword ptr [rsp+38h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 38
0076h lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
007bh mov [r9],rcx                  ; MOV(Mov_rm64_r64) [mem(64u,R9:br,DS:sr),RCX]         encoding(3 bytes) = 49 89 09
007eh mov [r9+8],edx                ; MOV(Mov_rm32_r32) [mem(32u,R9:br,DS:sr),EDX]         encoding(4 bytes) = 41 89 51 08
0082h mov rcx,r8                    ; MOV(Mov_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 8b c8
0085h lea rdx,[rsp+48h]             ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 54 24 48
008ah lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
008fh lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
0094h call 7FFC872C5FF0h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFFB00h:jmp64]        encoding(5 bytes) = e8 67 fa ff ff
0099h mov rax,rbx                   ; MOV(Mov_r64_rm64) [RAX,RBX]                          encoding(3 bytes) = 48 8b c3
009ch add rsp,60h                   ; ADD(Add_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 c4 60
00a0h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
00a1h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
00a2h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
00a3h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
00a4h pop r12                       ; POP(Pop_r64) [R12]                                   encoding(2 bytes) = 41 5c
00a6h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
00a8h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
00aah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
00abh mov ecx,353h                  ; MOV(Mov_r32_imm32) [ECX,353h:imm32]                  encoding(5 bytes) = b9 53 03 00 00
00b0h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00bah call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F46D430h:jmp64]                encoding(5 bytes) = e8 71 d3 46 5f
00bfh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
00c2h mov ecx,0A73h                 ; MOV(Mov_r32_imm32) [ECX,a73h:imm32]                  encoding(5 bytes) = b9 73 0a 00 00
00c7h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00d1h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F46D430h:jmp64]                encoding(5 bytes) = e8 5a d3 46 5f
00d6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00d9h lea r8,[rsp+58h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 58
00deh mov [r8],r14b                 ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),R14L]           encoding(3 bytes) = 45 88 30
00e1h mov [r8+4],ebp                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBP]         encoding(4 bytes) = 41 89 68 04
00e5h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00e8h mov ecx,r15d                  ; MOV(Mov_r32_rm32) [ECX,R15D]                         encoding(3 bytes) = 41 8b cf
00ebh mov edx,r12d                  ; MOV(Mov_r32_rm32) [EDX,R12D]                         encoding(3 bytes) = 41 8b d4
00eeh mov rax,[rsp+58h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 58
00f3h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00f8h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFC97A88h:jmp64]        encoding(5 bytes) = e8 8b 79 c9 ff
00fdh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
0100h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F450460h:jmp64]                encoding(5 bytes) = e8 5b 03 45 5f
0105h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> gteqBytes => new byte[262]{0x41,0x57,0x41,0x56,0x41,0x54,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x60,0xC5,0xF8,0x77,0x48,0x8B,0xF1,0x48,0x8D,0x7C,0x24,0x28,0xB9,0x0C,0x00,0x00,0x00,0x33,0xC0,0xF3,0xAB,0x48,0x8B,0xCE,0x48,0x8B,0xD9,0x48,0x8B,0xF2,0x49,0x8B,0xF8,0xBD,0x71,0x00,0x00,0x00,0x41,0xBE,0x01,0x00,0x00,0x00,0x44,0x8B,0x7E,0x08,0x44,0x8B,0x67,0x08,0x45,0x3B,0xFC,0x75,0x65,0x49,0x63,0xD7,0x48,0xB9,0xE8,0x98,0xFF,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x58,0x2F,0x47,0x5F,0x48,0x8D,0x48,0x10,0x8B,0x50,0x08,0x4C,0x8B,0xC3,0xC5,0xFA,0x6F,0x06,0xC5,0xFA,0x7F,0x44,0x24,0x48,0xC5,0xFA,0x6F,0x07,0xC5,0xFA,0x7F,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0x49,0x89,0x09,0x41,0x89,0x51,0x08,0x49,0x8B,0xC8,0x48,0x8D,0x54,0x24,0x48,0x4C,0x8D,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0xE8,0x67,0xFA,0xFF,0xFF,0x48,0x8B,0xC3,0x48,0x83,0xC4,0x60,0x5B,0x5D,0x5E,0x5F,0x41,0x5C,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0x53,0x03,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x71,0xD3,0x46,0x5F,0x48,0x8B,0xF0,0xB9,0x73,0x0A,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x5A,0xD3,0x46,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x58,0x45,0x88,0x30,0x41,0x89,0x68,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCF,0x41,0x8B,0xD4,0x48,0x8B,0x44,0x24,0x58,0x48,0x89,0x44,0x24,0x20,0xE8,0x8B,0x79,0xC9,0xFF,0x48,0x8B,0xC8,0xE8,0x5B,0x03,0x45,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> gteq(ReadOnlySpan<short> lhs, ReadOnlySpan<short> rhs)
; location: [7FFC872C6620h, 7FFC872C6725h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push r12                      ; PUSH(Push_r64) [R12]                                 encoding(2 bytes) = 41 54
0006h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0007h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0008h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0009h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
000ah sub rsp,60h                   ; SUB(Sub_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 ec 60
000eh vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0011h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0014h lea rdi,[rsp+28h]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 7c 24 28
0019h mov ecx,0Ch                   ; MOV(Mov_r32_imm32) [ECX,ch:imm32]                    encoding(5 bytes) = b9 0c 00 00 00
001eh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0020h rep stosd                     ; STOSD(Stosd_m32_EAX) [mem(32u),EAX]                  encoding(2 bytes) = f3 ab
0022h mov rcx,rsi                   ; MOV(Mov_r64_rm64) [RCX,RSI]                          encoding(3 bytes) = 48 8b ce
0025h mov rbx,rcx                   ; MOV(Mov_r64_rm64) [RBX,RCX]                          encoding(3 bytes) = 48 8b d9
0028h mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
002bh mov rdi,r8                    ; MOV(Mov_r64_rm64) [RDI,R8]                           encoding(3 bytes) = 49 8b f8
002eh mov ebp,75h                   ; MOV(Mov_r32_imm32) [EBP,75h:imm32]                   encoding(5 bytes) = bd 75 00 00 00
0033h mov r14d,1                    ; MOV(Mov_r32_imm32) [R14D,1h:imm32]                   encoding(6 bytes) = 41 be 01 00 00 00
0039h mov r15d,[rsi+8]              ; MOV(Mov_r32_rm32) [R15D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 8b 7e 08
003dh mov r12d,[rdi+8]              ; MOV(Mov_r32_rm32) [R12D,mem(32u,RDI:br,DS:sr)]       encoding(4 bytes) = 44 8b 67 08
0041h cmp r15d,r12d                 ; CMP(Cmp_r32_rm32) [R15D,R12D]                        encoding(3 bytes) = 45 3b fc
0044h jne short 00abh               ; JNE(Jne_rel8_64) [ABh:jmp64]                         encoding(2 bytes) = 75 65
0046h movsxd rdx,r15d               ; MOVSXD(Movsxd_r64_rm32) [RDX,R15D]                   encoding(3 bytes) = 49 63 d7
0049h mov rcx,7FFC86FF98E8h         ; MOV(Mov_r64_imm64) [RCX,7ffc86ff98e8h:imm64]         encoding(10 bytes) = 48 b9 e8 98 ff 86 fc 7f 00 00
0053h call 7FFCE67394A0h            ; CALL(Call_rel32_64) [5F472E80h:jmp64]                encoding(5 bytes) = e8 28 2e 47 5f
0058h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
005ch mov edx,[rax+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 50 08
005fh mov r8,rbx                    ; MOV(Mov_r64_rm64) [R8,RBX]                           encoding(3 bytes) = 4c 8b c3
0062h vmovdqu xmm0,xmmword ptr [rsi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 06
0066h vmovdqu xmmword ptr [rsp+48h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 48
006ch vmovdqu xmm0,xmmword ptr [rdi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RDI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 07
0070h vmovdqu xmmword ptr [rsp+38h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 38
0076h lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
007bh mov [r9],rcx                  ; MOV(Mov_rm64_r64) [mem(64u,R9:br,DS:sr),RCX]         encoding(3 bytes) = 49 89 09
007eh mov [r9+8],edx                ; MOV(Mov_rm32_r32) [mem(32u,R9:br,DS:sr),EDX]         encoding(4 bytes) = 41 89 51 08
0082h mov rcx,r8                    ; MOV(Mov_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 8b c8
0085h lea rdx,[rsp+48h]             ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 54 24 48
008ah lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
008fh lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
0094h call 7FFC872C6080h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFFA60h:jmp64]        encoding(5 bytes) = e8 c7 f9 ff ff
0099h mov rax,rbx                   ; MOV(Mov_r64_rm64) [RAX,RBX]                          encoding(3 bytes) = 48 8b c3
009ch add rsp,60h                   ; ADD(Add_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 c4 60
00a0h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
00a1h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
00a2h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
00a3h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
00a4h pop r12                       ; POP(Pop_r64) [R12]                                   encoding(2 bytes) = 41 5c
00a6h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
00a8h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
00aah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
00abh mov ecx,353h                  ; MOV(Mov_r32_imm32) [ECX,353h:imm32]                  encoding(5 bytes) = b9 53 03 00 00
00b0h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00bah call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F46D300h:jmp64]                encoding(5 bytes) = e8 41 d2 46 5f
00bfh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
00c2h mov ecx,0A73h                 ; MOV(Mov_r32_imm32) [ECX,a73h:imm32]                  encoding(5 bytes) = b9 73 0a 00 00
00c7h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00d1h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F46D300h:jmp64]                encoding(5 bytes) = e8 2a d2 46 5f
00d6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00d9h lea r8,[rsp+58h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 58
00deh mov [r8],r14b                 ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),R14L]           encoding(3 bytes) = 45 88 30
00e1h mov [r8+4],ebp                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBP]         encoding(4 bytes) = 41 89 68 04
00e5h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00e8h mov ecx,r15d                  ; MOV(Mov_r32_rm32) [ECX,R15D]                         encoding(3 bytes) = 41 8b cf
00ebh mov edx,r12d                  ; MOV(Mov_r32_rm32) [EDX,R12D]                         encoding(3 bytes) = 41 8b d4
00eeh mov rax,[rsp+58h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 58
00f3h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00f8h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFC97958h:jmp64]        encoding(5 bytes) = e8 5b 78 c9 ff
00fdh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
0100h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F450330h:jmp64]                encoding(5 bytes) = e8 2b 02 45 5f
0105h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> gteqBytes => new byte[262]{0x41,0x57,0x41,0x56,0x41,0x54,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x60,0xC5,0xF8,0x77,0x48,0x8B,0xF1,0x48,0x8D,0x7C,0x24,0x28,0xB9,0x0C,0x00,0x00,0x00,0x33,0xC0,0xF3,0xAB,0x48,0x8B,0xCE,0x48,0x8B,0xD9,0x48,0x8B,0xF2,0x49,0x8B,0xF8,0xBD,0x75,0x00,0x00,0x00,0x41,0xBE,0x01,0x00,0x00,0x00,0x44,0x8B,0x7E,0x08,0x44,0x8B,0x67,0x08,0x45,0x3B,0xFC,0x75,0x65,0x49,0x63,0xD7,0x48,0xB9,0xE8,0x98,0xFF,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x28,0x2E,0x47,0x5F,0x48,0x8D,0x48,0x10,0x8B,0x50,0x08,0x4C,0x8B,0xC3,0xC5,0xFA,0x6F,0x06,0xC5,0xFA,0x7F,0x44,0x24,0x48,0xC5,0xFA,0x6F,0x07,0xC5,0xFA,0x7F,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0x49,0x89,0x09,0x41,0x89,0x51,0x08,0x49,0x8B,0xC8,0x48,0x8D,0x54,0x24,0x48,0x4C,0x8D,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0xE8,0xC7,0xF9,0xFF,0xFF,0x48,0x8B,0xC3,0x48,0x83,0xC4,0x60,0x5B,0x5D,0x5E,0x5F,0x41,0x5C,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0x53,0x03,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x41,0xD2,0x46,0x5F,0x48,0x8B,0xF0,0xB9,0x73,0x0A,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x2A,0xD2,0x46,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x58,0x45,0x88,0x30,0x41,0x89,0x68,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCF,0x41,0x8B,0xD4,0x48,0x8B,0x44,0x24,0x58,0x48,0x89,0x44,0x24,0x20,0xE8,0x5B,0x78,0xC9,0xFF,0x48,0x8B,0xC8,0xE8,0x2B,0x02,0x45,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> gteq(ReadOnlySpan<ushort> lhs, ReadOnlySpan<ushort> rhs)
; location: [7FFC872C6750h, 7FFC872C6855h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push r12                      ; PUSH(Push_r64) [R12]                                 encoding(2 bytes) = 41 54
0006h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0007h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0008h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0009h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
000ah sub rsp,60h                   ; SUB(Sub_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 ec 60
000eh vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0011h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0014h lea rdi,[rsp+28h]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 7c 24 28
0019h mov ecx,0Ch                   ; MOV(Mov_r32_imm32) [ECX,ch:imm32]                    encoding(5 bytes) = b9 0c 00 00 00
001eh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0020h rep stosd                     ; STOSD(Stosd_m32_EAX) [mem(32u),EAX]                  encoding(2 bytes) = f3 ab
0022h mov rcx,rsi                   ; MOV(Mov_r64_rm64) [RCX,RSI]                          encoding(3 bytes) = 48 8b ce
0025h mov rbx,rcx                   ; MOV(Mov_r64_rm64) [RBX,RCX]                          encoding(3 bytes) = 48 8b d9
0028h mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
002bh mov rdi,r8                    ; MOV(Mov_r64_rm64) [RDI,R8]                           encoding(3 bytes) = 49 8b f8
002eh mov ebp,79h                   ; MOV(Mov_r32_imm32) [EBP,79h:imm32]                   encoding(5 bytes) = bd 79 00 00 00
0033h mov r14d,1                    ; MOV(Mov_r32_imm32) [R14D,1h:imm32]                   encoding(6 bytes) = 41 be 01 00 00 00
0039h mov r15d,[rsi+8]              ; MOV(Mov_r32_rm32) [R15D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 8b 7e 08
003dh mov r12d,[rdi+8]              ; MOV(Mov_r32_rm32) [R12D,mem(32u,RDI:br,DS:sr)]       encoding(4 bytes) = 44 8b 67 08
0041h cmp r15d,r12d                 ; CMP(Cmp_r32_rm32) [R15D,R12D]                        encoding(3 bytes) = 45 3b fc
0044h jne short 00abh               ; JNE(Jne_rel8_64) [ABh:jmp64]                         encoding(2 bytes) = 75 65
0046h movsxd rdx,r15d               ; MOVSXD(Movsxd_r64_rm32) [RDX,R15D]                   encoding(3 bytes) = 49 63 d7
0049h mov rcx,7FFC86FF98E8h         ; MOV(Mov_r64_imm64) [RCX,7ffc86ff98e8h:imm64]         encoding(10 bytes) = 48 b9 e8 98 ff 86 fc 7f 00 00
0053h call 7FFCE67394A0h            ; CALL(Call_rel32_64) [5F472D50h:jmp64]                encoding(5 bytes) = e8 f8 2c 47 5f
0058h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
005ch mov edx,[rax+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 50 08
005fh mov r8,rbx                    ; MOV(Mov_r64_rm64) [R8,RBX]                           encoding(3 bytes) = 4c 8b c3
0062h vmovdqu xmm0,xmmword ptr [rsi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 06
0066h vmovdqu xmmword ptr [rsp+48h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 48
006ch vmovdqu xmm0,xmmword ptr [rdi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RDI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 07
0070h vmovdqu xmmword ptr [rsp+38h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 38
0076h lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
007bh mov [r9],rcx                  ; MOV(Mov_rm64_r64) [mem(64u,R9:br,DS:sr),RCX]         encoding(3 bytes) = 49 89 09
007eh mov [r9+8],edx                ; MOV(Mov_rm32_r32) [mem(32u,R9:br,DS:sr),EDX]         encoding(4 bytes) = 41 89 51 08
0082h mov rcx,r8                    ; MOV(Mov_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 8b c8
0085h lea rdx,[rsp+48h]             ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 54 24 48
008ah lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
008fh lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
0094h call 7FFC872C6110h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFF9C0h:jmp64]        encoding(5 bytes) = e8 27 f9 ff ff
0099h mov rax,rbx                   ; MOV(Mov_r64_rm64) [RAX,RBX]                          encoding(3 bytes) = 48 8b c3
009ch add rsp,60h                   ; ADD(Add_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 c4 60
00a0h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
00a1h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
00a2h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
00a3h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
00a4h pop r12                       ; POP(Pop_r64) [R12]                                   encoding(2 bytes) = 41 5c
00a6h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
00a8h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
00aah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
00abh mov ecx,353h                  ; MOV(Mov_r32_imm32) [ECX,353h:imm32]                  encoding(5 bytes) = b9 53 03 00 00
00b0h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00bah call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F46D1D0h:jmp64]                encoding(5 bytes) = e8 11 d1 46 5f
00bfh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
00c2h mov ecx,0A73h                 ; MOV(Mov_r32_imm32) [ECX,a73h:imm32]                  encoding(5 bytes) = b9 73 0a 00 00
00c7h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00d1h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F46D1D0h:jmp64]                encoding(5 bytes) = e8 fa d0 46 5f
00d6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00d9h lea r8,[rsp+58h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 58
00deh mov [r8],r14b                 ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),R14L]           encoding(3 bytes) = 45 88 30
00e1h mov [r8+4],ebp                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBP]         encoding(4 bytes) = 41 89 68 04
00e5h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00e8h mov ecx,r15d                  ; MOV(Mov_r32_rm32) [ECX,R15D]                         encoding(3 bytes) = 41 8b cf
00ebh mov edx,r12d                  ; MOV(Mov_r32_rm32) [EDX,R12D]                         encoding(3 bytes) = 41 8b d4
00eeh mov rax,[rsp+58h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 58
00f3h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00f8h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFC97828h:jmp64]        encoding(5 bytes) = e8 2b 77 c9 ff
00fdh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
0100h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F450200h:jmp64]                encoding(5 bytes) = e8 fb 00 45 5f
0105h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> gteqBytes => new byte[262]{0x41,0x57,0x41,0x56,0x41,0x54,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x60,0xC5,0xF8,0x77,0x48,0x8B,0xF1,0x48,0x8D,0x7C,0x24,0x28,0xB9,0x0C,0x00,0x00,0x00,0x33,0xC0,0xF3,0xAB,0x48,0x8B,0xCE,0x48,0x8B,0xD9,0x48,0x8B,0xF2,0x49,0x8B,0xF8,0xBD,0x79,0x00,0x00,0x00,0x41,0xBE,0x01,0x00,0x00,0x00,0x44,0x8B,0x7E,0x08,0x44,0x8B,0x67,0x08,0x45,0x3B,0xFC,0x75,0x65,0x49,0x63,0xD7,0x48,0xB9,0xE8,0x98,0xFF,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xF8,0x2C,0x47,0x5F,0x48,0x8D,0x48,0x10,0x8B,0x50,0x08,0x4C,0x8B,0xC3,0xC5,0xFA,0x6F,0x06,0xC5,0xFA,0x7F,0x44,0x24,0x48,0xC5,0xFA,0x6F,0x07,0xC5,0xFA,0x7F,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0x49,0x89,0x09,0x41,0x89,0x51,0x08,0x49,0x8B,0xC8,0x48,0x8D,0x54,0x24,0x48,0x4C,0x8D,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0xE8,0x27,0xF9,0xFF,0xFF,0x48,0x8B,0xC3,0x48,0x83,0xC4,0x60,0x5B,0x5D,0x5E,0x5F,0x41,0x5C,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0x53,0x03,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x11,0xD1,0x46,0x5F,0x48,0x8B,0xF0,0xB9,0x73,0x0A,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xFA,0xD0,0x46,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x58,0x45,0x88,0x30,0x41,0x89,0x68,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCF,0x41,0x8B,0xD4,0x48,0x8B,0x44,0x24,0x58,0x48,0x89,0x44,0x24,0x20,0xE8,0x2B,0x77,0xC9,0xFF,0x48,0x8B,0xC8,0xE8,0xFB,0x00,0x45,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> gteq(ReadOnlySpan<int> lhs, ReadOnlySpan<int> rhs)
; location: [7FFC872C6880h, 7FFC872C6985h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push r12                      ; PUSH(Push_r64) [R12]                                 encoding(2 bytes) = 41 54
0006h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0007h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0008h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0009h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
000ah sub rsp,60h                   ; SUB(Sub_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 ec 60
000eh vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0011h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0014h lea rdi,[rsp+28h]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 7c 24 28
0019h mov ecx,0Ch                   ; MOV(Mov_r32_imm32) [ECX,ch:imm32]                    encoding(5 bytes) = b9 0c 00 00 00
001eh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0020h rep stosd                     ; STOSD(Stosd_m32_EAX) [mem(32u),EAX]                  encoding(2 bytes) = f3 ab
0022h mov rcx,rsi                   ; MOV(Mov_r64_rm64) [RCX,RSI]                          encoding(3 bytes) = 48 8b ce
0025h mov rbx,rcx                   ; MOV(Mov_r64_rm64) [RBX,RCX]                          encoding(3 bytes) = 48 8b d9
0028h mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
002bh mov rdi,r8                    ; MOV(Mov_r64_rm64) [RDI,R8]                           encoding(3 bytes) = 49 8b f8
002eh mov ebp,7Dh                   ; MOV(Mov_r32_imm32) [EBP,7dh:imm32]                   encoding(5 bytes) = bd 7d 00 00 00
0033h mov r14d,1                    ; MOV(Mov_r32_imm32) [R14D,1h:imm32]                   encoding(6 bytes) = 41 be 01 00 00 00
0039h mov r15d,[rsi+8]              ; MOV(Mov_r32_rm32) [R15D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 8b 7e 08
003dh mov r12d,[rdi+8]              ; MOV(Mov_r32_rm32) [R12D,mem(32u,RDI:br,DS:sr)]       encoding(4 bytes) = 44 8b 67 08
0041h cmp r15d,r12d                 ; CMP(Cmp_r32_rm32) [R15D,R12D]                        encoding(3 bytes) = 45 3b fc
0044h jne short 00abh               ; JNE(Jne_rel8_64) [ABh:jmp64]                         encoding(2 bytes) = 75 65
0046h movsxd rdx,r15d               ; MOVSXD(Movsxd_r64_rm32) [RDX,R15D]                   encoding(3 bytes) = 49 63 d7
0049h mov rcx,7FFC86FF98E8h         ; MOV(Mov_r64_imm64) [RCX,7ffc86ff98e8h:imm64]         encoding(10 bytes) = 48 b9 e8 98 ff 86 fc 7f 00 00
0053h call 7FFCE67394A0h            ; CALL(Call_rel32_64) [5F472C20h:jmp64]                encoding(5 bytes) = e8 c8 2b 47 5f
0058h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
005ch mov edx,[rax+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 50 08
005fh mov r8,rbx                    ; MOV(Mov_r64_rm64) [R8,RBX]                           encoding(3 bytes) = 4c 8b c3
0062h vmovdqu xmm0,xmmword ptr [rsi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 06
0066h vmovdqu xmmword ptr [rsp+48h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 48
006ch vmovdqu xmm0,xmmword ptr [rdi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RDI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 07
0070h vmovdqu xmmword ptr [rsp+38h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 38
0076h lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
007bh mov [r9],rcx                  ; MOV(Mov_rm64_r64) [mem(64u,R9:br,DS:sr),RCX]         encoding(3 bytes) = 49 89 09
007eh mov [r9+8],edx                ; MOV(Mov_rm32_r32) [mem(32u,R9:br,DS:sr),EDX]         encoding(4 bytes) = 41 89 51 08
0082h mov rcx,r8                    ; MOV(Mov_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 8b c8
0085h lea rdx,[rsp+48h]             ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 54 24 48
008ah lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
008fh lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
0094h call 7FFC872C61A0h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFF920h:jmp64]        encoding(5 bytes) = e8 87 f8 ff ff
0099h mov rax,rbx                   ; MOV(Mov_r64_rm64) [RAX,RBX]                          encoding(3 bytes) = 48 8b c3
009ch add rsp,60h                   ; ADD(Add_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 c4 60
00a0h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
00a1h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
00a2h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
00a3h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
00a4h pop r12                       ; POP(Pop_r64) [R12]                                   encoding(2 bytes) = 41 5c
00a6h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
00a8h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
00aah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
00abh mov ecx,353h                  ; MOV(Mov_r32_imm32) [ECX,353h:imm32]                  encoding(5 bytes) = b9 53 03 00 00
00b0h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00bah call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F46D0A0h:jmp64]                encoding(5 bytes) = e8 e1 cf 46 5f
00bfh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
00c2h mov ecx,0A73h                 ; MOV(Mov_r32_imm32) [ECX,a73h:imm32]                  encoding(5 bytes) = b9 73 0a 00 00
00c7h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00d1h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F46D0A0h:jmp64]                encoding(5 bytes) = e8 ca cf 46 5f
00d6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00d9h lea r8,[rsp+58h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 58
00deh mov [r8],r14b                 ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),R14L]           encoding(3 bytes) = 45 88 30
00e1h mov [r8+4],ebp                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBP]         encoding(4 bytes) = 41 89 68 04
00e5h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00e8h mov ecx,r15d                  ; MOV(Mov_r32_rm32) [ECX,R15D]                         encoding(3 bytes) = 41 8b cf
00ebh mov edx,r12d                  ; MOV(Mov_r32_rm32) [EDX,R12D]                         encoding(3 bytes) = 41 8b d4
00eeh mov rax,[rsp+58h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 58
00f3h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00f8h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFC976F8h:jmp64]        encoding(5 bytes) = e8 fb 75 c9 ff
00fdh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
0100h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F4500D0h:jmp64]                encoding(5 bytes) = e8 cb ff 44 5f
0105h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> gteqBytes => new byte[262]{0x41,0x57,0x41,0x56,0x41,0x54,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x60,0xC5,0xF8,0x77,0x48,0x8B,0xF1,0x48,0x8D,0x7C,0x24,0x28,0xB9,0x0C,0x00,0x00,0x00,0x33,0xC0,0xF3,0xAB,0x48,0x8B,0xCE,0x48,0x8B,0xD9,0x48,0x8B,0xF2,0x49,0x8B,0xF8,0xBD,0x7D,0x00,0x00,0x00,0x41,0xBE,0x01,0x00,0x00,0x00,0x44,0x8B,0x7E,0x08,0x44,0x8B,0x67,0x08,0x45,0x3B,0xFC,0x75,0x65,0x49,0x63,0xD7,0x48,0xB9,0xE8,0x98,0xFF,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xC8,0x2B,0x47,0x5F,0x48,0x8D,0x48,0x10,0x8B,0x50,0x08,0x4C,0x8B,0xC3,0xC5,0xFA,0x6F,0x06,0xC5,0xFA,0x7F,0x44,0x24,0x48,0xC5,0xFA,0x6F,0x07,0xC5,0xFA,0x7F,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0x49,0x89,0x09,0x41,0x89,0x51,0x08,0x49,0x8B,0xC8,0x48,0x8D,0x54,0x24,0x48,0x4C,0x8D,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0xE8,0x87,0xF8,0xFF,0xFF,0x48,0x8B,0xC3,0x48,0x83,0xC4,0x60,0x5B,0x5D,0x5E,0x5F,0x41,0x5C,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0x53,0x03,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xE1,0xCF,0x46,0x5F,0x48,0x8B,0xF0,0xB9,0x73,0x0A,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xCA,0xCF,0x46,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x58,0x45,0x88,0x30,0x41,0x89,0x68,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCF,0x41,0x8B,0xD4,0x48,0x8B,0x44,0x24,0x58,0x48,0x89,0x44,0x24,0x20,0xE8,0xFB,0x75,0xC9,0xFF,0x48,0x8B,0xC8,0xE8,0xCB,0xFF,0x44,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> gteq(ReadOnlySpan<uint> lhs, ReadOnlySpan<uint> rhs)
; location: [7FFC872C69B0h, 7FFC872C6AB5h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push r12                      ; PUSH(Push_r64) [R12]                                 encoding(2 bytes) = 41 54
0006h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0007h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0008h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0009h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
000ah sub rsp,60h                   ; SUB(Sub_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 ec 60
000eh vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0011h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0014h lea rdi,[rsp+28h]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 7c 24 28
0019h mov ecx,0Ch                   ; MOV(Mov_r32_imm32) [ECX,ch:imm32]                    encoding(5 bytes) = b9 0c 00 00 00
001eh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0020h rep stosd                     ; STOSD(Stosd_m32_EAX) [mem(32u),EAX]                  encoding(2 bytes) = f3 ab
0022h mov rcx,rsi                   ; MOV(Mov_r64_rm64) [RCX,RSI]                          encoding(3 bytes) = 48 8b ce
0025h mov rbx,rcx                   ; MOV(Mov_r64_rm64) [RBX,RCX]                          encoding(3 bytes) = 48 8b d9
0028h mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
002bh mov rdi,r8                    ; MOV(Mov_r64_rm64) [RDI,R8]                           encoding(3 bytes) = 49 8b f8
002eh mov ebp,81h                   ; MOV(Mov_r32_imm32) [EBP,81h:imm32]                   encoding(5 bytes) = bd 81 00 00 00
0033h mov r14d,1                    ; MOV(Mov_r32_imm32) [R14D,1h:imm32]                   encoding(6 bytes) = 41 be 01 00 00 00
0039h mov r15d,[rsi+8]              ; MOV(Mov_r32_rm32) [R15D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 8b 7e 08
003dh mov r12d,[rdi+8]              ; MOV(Mov_r32_rm32) [R12D,mem(32u,RDI:br,DS:sr)]       encoding(4 bytes) = 44 8b 67 08
0041h cmp r15d,r12d                 ; CMP(Cmp_r32_rm32) [R15D,R12D]                        encoding(3 bytes) = 45 3b fc
0044h jne short 00abh               ; JNE(Jne_rel8_64) [ABh:jmp64]                         encoding(2 bytes) = 75 65
0046h movsxd rdx,r15d               ; MOVSXD(Movsxd_r64_rm32) [RDX,R15D]                   encoding(3 bytes) = 49 63 d7
0049h mov rcx,7FFC86FF98E8h         ; MOV(Mov_r64_imm64) [RCX,7ffc86ff98e8h:imm64]         encoding(10 bytes) = 48 b9 e8 98 ff 86 fc 7f 00 00
0053h call 7FFCE67394A0h            ; CALL(Call_rel32_64) [5F472AF0h:jmp64]                encoding(5 bytes) = e8 98 2a 47 5f
0058h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
005ch mov edx,[rax+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 50 08
005fh mov r8,rbx                    ; MOV(Mov_r64_rm64) [R8,RBX]                           encoding(3 bytes) = 4c 8b c3
0062h vmovdqu xmm0,xmmword ptr [rsi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 06
0066h vmovdqu xmmword ptr [rsp+48h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 48
006ch vmovdqu xmm0,xmmword ptr [rdi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RDI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 07
0070h vmovdqu xmmword ptr [rsp+38h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 38
0076h lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
007bh mov [r9],rcx                  ; MOV(Mov_rm64_r64) [mem(64u,R9:br,DS:sr),RCX]         encoding(3 bytes) = 49 89 09
007eh mov [r9+8],edx                ; MOV(Mov_rm32_r32) [mem(32u,R9:br,DS:sr),EDX]         encoding(4 bytes) = 41 89 51 08
0082h mov rcx,r8                    ; MOV(Mov_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 8b c8
0085h lea rdx,[rsp+48h]             ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 54 24 48
008ah lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
008fh lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
0094h call 7FFC872C6220h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFF870h:jmp64]        encoding(5 bytes) = e8 d7 f7 ff ff
0099h mov rax,rbx                   ; MOV(Mov_r64_rm64) [RAX,RBX]                          encoding(3 bytes) = 48 8b c3
009ch add rsp,60h                   ; ADD(Add_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 c4 60
00a0h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
00a1h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
00a2h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
00a3h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
00a4h pop r12                       ; POP(Pop_r64) [R12]                                   encoding(2 bytes) = 41 5c
00a6h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
00a8h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
00aah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
00abh mov ecx,353h                  ; MOV(Mov_r32_imm32) [ECX,353h:imm32]                  encoding(5 bytes) = b9 53 03 00 00
00b0h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00bah call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F46CF70h:jmp64]                encoding(5 bytes) = e8 b1 ce 46 5f
00bfh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
00c2h mov ecx,0A73h                 ; MOV(Mov_r32_imm32) [ECX,a73h:imm32]                  encoding(5 bytes) = b9 73 0a 00 00
00c7h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00d1h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F46CF70h:jmp64]                encoding(5 bytes) = e8 9a ce 46 5f
00d6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00d9h lea r8,[rsp+58h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 58
00deh mov [r8],r14b                 ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),R14L]           encoding(3 bytes) = 45 88 30
00e1h mov [r8+4],ebp                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBP]         encoding(4 bytes) = 41 89 68 04
00e5h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00e8h mov ecx,r15d                  ; MOV(Mov_r32_rm32) [ECX,R15D]                         encoding(3 bytes) = 41 8b cf
00ebh mov edx,r12d                  ; MOV(Mov_r32_rm32) [EDX,R12D]                         encoding(3 bytes) = 41 8b d4
00eeh mov rax,[rsp+58h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 58
00f3h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00f8h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFC975C8h:jmp64]        encoding(5 bytes) = e8 cb 74 c9 ff
00fdh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
0100h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F44FFA0h:jmp64]                encoding(5 bytes) = e8 9b fe 44 5f
0105h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> gteqBytes => new byte[262]{0x41,0x57,0x41,0x56,0x41,0x54,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x60,0xC5,0xF8,0x77,0x48,0x8B,0xF1,0x48,0x8D,0x7C,0x24,0x28,0xB9,0x0C,0x00,0x00,0x00,0x33,0xC0,0xF3,0xAB,0x48,0x8B,0xCE,0x48,0x8B,0xD9,0x48,0x8B,0xF2,0x49,0x8B,0xF8,0xBD,0x81,0x00,0x00,0x00,0x41,0xBE,0x01,0x00,0x00,0x00,0x44,0x8B,0x7E,0x08,0x44,0x8B,0x67,0x08,0x45,0x3B,0xFC,0x75,0x65,0x49,0x63,0xD7,0x48,0xB9,0xE8,0x98,0xFF,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x98,0x2A,0x47,0x5F,0x48,0x8D,0x48,0x10,0x8B,0x50,0x08,0x4C,0x8B,0xC3,0xC5,0xFA,0x6F,0x06,0xC5,0xFA,0x7F,0x44,0x24,0x48,0xC5,0xFA,0x6F,0x07,0xC5,0xFA,0x7F,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0x49,0x89,0x09,0x41,0x89,0x51,0x08,0x49,0x8B,0xC8,0x48,0x8D,0x54,0x24,0x48,0x4C,0x8D,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0xE8,0xD7,0xF7,0xFF,0xFF,0x48,0x8B,0xC3,0x48,0x83,0xC4,0x60,0x5B,0x5D,0x5E,0x5F,0x41,0x5C,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0x53,0x03,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xB1,0xCE,0x46,0x5F,0x48,0x8B,0xF0,0xB9,0x73,0x0A,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x9A,0xCE,0x46,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x58,0x45,0x88,0x30,0x41,0x89,0x68,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCF,0x41,0x8B,0xD4,0x48,0x8B,0x44,0x24,0x58,0x48,0x89,0x44,0x24,0x20,0xE8,0xCB,0x74,0xC9,0xFF,0x48,0x8B,0xC8,0xE8,0x9B,0xFE,0x44,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> gteq(ReadOnlySpan<long> lhs, ReadOnlySpan<long> rhs)
; location: [7FFC872C6AE0h, 7FFC872C6BE5h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push r12                      ; PUSH(Push_r64) [R12]                                 encoding(2 bytes) = 41 54
0006h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0007h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0008h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0009h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
000ah sub rsp,60h                   ; SUB(Sub_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 ec 60
000eh vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0011h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0014h lea rdi,[rsp+28h]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 7c 24 28
0019h mov ecx,0Ch                   ; MOV(Mov_r32_imm32) [ECX,ch:imm32]                    encoding(5 bytes) = b9 0c 00 00 00
001eh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0020h rep stosd                     ; STOSD(Stosd_m32_EAX) [mem(32u),EAX]                  encoding(2 bytes) = f3 ab
0022h mov rcx,rsi                   ; MOV(Mov_r64_rm64) [RCX,RSI]                          encoding(3 bytes) = 48 8b ce
0025h mov rbx,rcx                   ; MOV(Mov_r64_rm64) [RBX,RCX]                          encoding(3 bytes) = 48 8b d9
0028h mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
002bh mov rdi,r8                    ; MOV(Mov_r64_rm64) [RDI,R8]                           encoding(3 bytes) = 49 8b f8
002eh mov ebp,85h                   ; MOV(Mov_r32_imm32) [EBP,85h:imm32]                   encoding(5 bytes) = bd 85 00 00 00
0033h mov r14d,1                    ; MOV(Mov_r32_imm32) [R14D,1h:imm32]                   encoding(6 bytes) = 41 be 01 00 00 00
0039h mov r15d,[rsi+8]              ; MOV(Mov_r32_rm32) [R15D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 8b 7e 08
003dh mov r12d,[rdi+8]              ; MOV(Mov_r32_rm32) [R12D,mem(32u,RDI:br,DS:sr)]       encoding(4 bytes) = 44 8b 67 08
0041h cmp r15d,r12d                 ; CMP(Cmp_r32_rm32) [R15D,R12D]                        encoding(3 bytes) = 45 3b fc
0044h jne short 00abh               ; JNE(Jne_rel8_64) [ABh:jmp64]                         encoding(2 bytes) = 75 65
0046h movsxd rdx,r15d               ; MOVSXD(Movsxd_r64_rm32) [RDX,R15D]                   encoding(3 bytes) = 49 63 d7
0049h mov rcx,7FFC86FF98E8h         ; MOV(Mov_r64_imm64) [RCX,7ffc86ff98e8h:imm64]         encoding(10 bytes) = 48 b9 e8 98 ff 86 fc 7f 00 00
0053h call 7FFCE67394A0h            ; CALL(Call_rel32_64) [5F4729C0h:jmp64]                encoding(5 bytes) = e8 68 29 47 5f
0058h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
005ch mov edx,[rax+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 50 08
005fh mov r8,rbx                    ; MOV(Mov_r64_rm64) [R8,RBX]                           encoding(3 bytes) = 4c 8b c3
0062h vmovdqu xmm0,xmmword ptr [rsi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 06
0066h vmovdqu xmmword ptr [rsp+48h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 48
006ch vmovdqu xmm0,xmmword ptr [rdi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RDI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 07
0070h vmovdqu xmmword ptr [rsp+38h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 38
0076h lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
007bh mov [r9],rcx                  ; MOV(Mov_rm64_r64) [mem(64u,R9:br,DS:sr),RCX]         encoding(3 bytes) = 49 89 09
007eh mov [r9+8],edx                ; MOV(Mov_rm32_r32) [mem(32u,R9:br,DS:sr),EDX]         encoding(4 bytes) = 41 89 51 08
0082h mov rcx,r8                    ; MOV(Mov_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 8b c8
0085h lea rdx,[rsp+48h]             ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 54 24 48
008ah lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
008fh lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
0094h call 7FFC872C62A0h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFF7C0h:jmp64]        encoding(5 bytes) = e8 27 f7 ff ff
0099h mov rax,rbx                   ; MOV(Mov_r64_rm64) [RAX,RBX]                          encoding(3 bytes) = 48 8b c3
009ch add rsp,60h                   ; ADD(Add_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 c4 60
00a0h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
00a1h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
00a2h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
00a3h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
00a4h pop r12                       ; POP(Pop_r64) [R12]                                   encoding(2 bytes) = 41 5c
00a6h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
00a8h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
00aah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
00abh mov ecx,353h                  ; MOV(Mov_r32_imm32) [ECX,353h:imm32]                  encoding(5 bytes) = b9 53 03 00 00
00b0h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00bah call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F46CE40h:jmp64]                encoding(5 bytes) = e8 81 cd 46 5f
00bfh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
00c2h mov ecx,0A73h                 ; MOV(Mov_r32_imm32) [ECX,a73h:imm32]                  encoding(5 bytes) = b9 73 0a 00 00
00c7h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00d1h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F46CE40h:jmp64]                encoding(5 bytes) = e8 6a cd 46 5f
00d6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00d9h lea r8,[rsp+58h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 58
00deh mov [r8],r14b                 ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),R14L]           encoding(3 bytes) = 45 88 30
00e1h mov [r8+4],ebp                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBP]         encoding(4 bytes) = 41 89 68 04
00e5h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00e8h mov ecx,r15d                  ; MOV(Mov_r32_rm32) [ECX,R15D]                         encoding(3 bytes) = 41 8b cf
00ebh mov edx,r12d                  ; MOV(Mov_r32_rm32) [EDX,R12D]                         encoding(3 bytes) = 41 8b d4
00eeh mov rax,[rsp+58h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 58
00f3h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00f8h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFC97498h:jmp64]        encoding(5 bytes) = e8 9b 73 c9 ff
00fdh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
0100h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F44FE70h:jmp64]                encoding(5 bytes) = e8 6b fd 44 5f
0105h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> gteqBytes => new byte[262]{0x41,0x57,0x41,0x56,0x41,0x54,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x60,0xC5,0xF8,0x77,0x48,0x8B,0xF1,0x48,0x8D,0x7C,0x24,0x28,0xB9,0x0C,0x00,0x00,0x00,0x33,0xC0,0xF3,0xAB,0x48,0x8B,0xCE,0x48,0x8B,0xD9,0x48,0x8B,0xF2,0x49,0x8B,0xF8,0xBD,0x85,0x00,0x00,0x00,0x41,0xBE,0x01,0x00,0x00,0x00,0x44,0x8B,0x7E,0x08,0x44,0x8B,0x67,0x08,0x45,0x3B,0xFC,0x75,0x65,0x49,0x63,0xD7,0x48,0xB9,0xE8,0x98,0xFF,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x68,0x29,0x47,0x5F,0x48,0x8D,0x48,0x10,0x8B,0x50,0x08,0x4C,0x8B,0xC3,0xC5,0xFA,0x6F,0x06,0xC5,0xFA,0x7F,0x44,0x24,0x48,0xC5,0xFA,0x6F,0x07,0xC5,0xFA,0x7F,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0x49,0x89,0x09,0x41,0x89,0x51,0x08,0x49,0x8B,0xC8,0x48,0x8D,0x54,0x24,0x48,0x4C,0x8D,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0xE8,0x27,0xF7,0xFF,0xFF,0x48,0x8B,0xC3,0x48,0x83,0xC4,0x60,0x5B,0x5D,0x5E,0x5F,0x41,0x5C,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0x53,0x03,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x81,0xCD,0x46,0x5F,0x48,0x8B,0xF0,0xB9,0x73,0x0A,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x6A,0xCD,0x46,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x58,0x45,0x88,0x30,0x41,0x89,0x68,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCF,0x41,0x8B,0xD4,0x48,0x8B,0x44,0x24,0x58,0x48,0x89,0x44,0x24,0x20,0xE8,0x9B,0x73,0xC9,0xFF,0x48,0x8B,0xC8,0xE8,0x6B,0xFD,0x44,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> gteq(ReadOnlySpan<ulong> lhs, ReadOnlySpan<ulong> rhs)
; location: [7FFC872C6C10h, 7FFC872C6D15h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push r12                      ; PUSH(Push_r64) [R12]                                 encoding(2 bytes) = 41 54
0006h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0007h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0008h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0009h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
000ah sub rsp,60h                   ; SUB(Sub_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 ec 60
000eh vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0011h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0014h lea rdi,[rsp+28h]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 7c 24 28
0019h mov ecx,0Ch                   ; MOV(Mov_r32_imm32) [ECX,ch:imm32]                    encoding(5 bytes) = b9 0c 00 00 00
001eh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0020h rep stosd                     ; STOSD(Stosd_m32_EAX) [mem(32u),EAX]                  encoding(2 bytes) = f3 ab
0022h mov rcx,rsi                   ; MOV(Mov_r64_rm64) [RCX,RSI]                          encoding(3 bytes) = 48 8b ce
0025h mov rbx,rcx                   ; MOV(Mov_r64_rm64) [RBX,RCX]                          encoding(3 bytes) = 48 8b d9
0028h mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
002bh mov rdi,r8                    ; MOV(Mov_r64_rm64) [RDI,R8]                           encoding(3 bytes) = 49 8b f8
002eh mov ebp,89h                   ; MOV(Mov_r32_imm32) [EBP,89h:imm32]                   encoding(5 bytes) = bd 89 00 00 00
0033h mov r14d,1                    ; MOV(Mov_r32_imm32) [R14D,1h:imm32]                   encoding(6 bytes) = 41 be 01 00 00 00
0039h mov r15d,[rsi+8]              ; MOV(Mov_r32_rm32) [R15D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 8b 7e 08
003dh mov r12d,[rdi+8]              ; MOV(Mov_r32_rm32) [R12D,mem(32u,RDI:br,DS:sr)]       encoding(4 bytes) = 44 8b 67 08
0041h cmp r15d,r12d                 ; CMP(Cmp_r32_rm32) [R15D,R12D]                        encoding(3 bytes) = 45 3b fc
0044h jne short 00abh               ; JNE(Jne_rel8_64) [ABh:jmp64]                         encoding(2 bytes) = 75 65
0046h movsxd rdx,r15d               ; MOVSXD(Movsxd_r64_rm32) [RDX,R15D]                   encoding(3 bytes) = 49 63 d7
0049h mov rcx,7FFC86FF98E8h         ; MOV(Mov_r64_imm64) [RCX,7ffc86ff98e8h:imm64]         encoding(10 bytes) = 48 b9 e8 98 ff 86 fc 7f 00 00
0053h call 7FFCE67394A0h            ; CALL(Call_rel32_64) [5F472890h:jmp64]                encoding(5 bytes) = e8 38 28 47 5f
0058h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
005ch mov edx,[rax+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 50 08
005fh mov r8,rbx                    ; MOV(Mov_r64_rm64) [R8,RBX]                           encoding(3 bytes) = 4c 8b c3
0062h vmovdqu xmm0,xmmword ptr [rsi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 06
0066h vmovdqu xmmword ptr [rsp+48h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 48
006ch vmovdqu xmm0,xmmword ptr [rdi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RDI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 07
0070h vmovdqu xmmword ptr [rsp+38h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 38
0076h lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
007bh mov [r9],rcx                  ; MOV(Mov_rm64_r64) [mem(64u,R9:br,DS:sr),RCX]         encoding(3 bytes) = 49 89 09
007eh mov [r9+8],edx                ; MOV(Mov_rm32_r32) [mem(32u,R9:br,DS:sr),EDX]         encoding(4 bytes) = 41 89 51 08
0082h mov rcx,r8                    ; MOV(Mov_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 8b c8
0085h lea rdx,[rsp+48h]             ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 54 24 48
008ah lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
008fh lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
0094h call 7FFC872C6330h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFF720h:jmp64]        encoding(5 bytes) = e8 87 f6 ff ff
0099h mov rax,rbx                   ; MOV(Mov_r64_rm64) [RAX,RBX]                          encoding(3 bytes) = 48 8b c3
009ch add rsp,60h                   ; ADD(Add_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 c4 60
00a0h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
00a1h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
00a2h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
00a3h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
00a4h pop r12                       ; POP(Pop_r64) [R12]                                   encoding(2 bytes) = 41 5c
00a6h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
00a8h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
00aah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
00abh mov ecx,353h                  ; MOV(Mov_r32_imm32) [ECX,353h:imm32]                  encoding(5 bytes) = b9 53 03 00 00
00b0h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00bah call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F46CD10h:jmp64]                encoding(5 bytes) = e8 51 cc 46 5f
00bfh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
00c2h mov ecx,0A73h                 ; MOV(Mov_r32_imm32) [ECX,a73h:imm32]                  encoding(5 bytes) = b9 73 0a 00 00
00c7h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00d1h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F46CD10h:jmp64]                encoding(5 bytes) = e8 3a cc 46 5f
00d6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00d9h lea r8,[rsp+58h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 58
00deh mov [r8],r14b                 ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),R14L]           encoding(3 bytes) = 45 88 30
00e1h mov [r8+4],ebp                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBP]         encoding(4 bytes) = 41 89 68 04
00e5h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00e8h mov ecx,r15d                  ; MOV(Mov_r32_rm32) [ECX,R15D]                         encoding(3 bytes) = 41 8b cf
00ebh mov edx,r12d                  ; MOV(Mov_r32_rm32) [EDX,R12D]                         encoding(3 bytes) = 41 8b d4
00eeh mov rax,[rsp+58h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 58
00f3h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00f8h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFC97368h:jmp64]        encoding(5 bytes) = e8 6b 72 c9 ff
00fdh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
0100h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F44FD40h:jmp64]                encoding(5 bytes) = e8 3b fc 44 5f
0105h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> gteqBytes => new byte[262]{0x41,0x57,0x41,0x56,0x41,0x54,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x60,0xC5,0xF8,0x77,0x48,0x8B,0xF1,0x48,0x8D,0x7C,0x24,0x28,0xB9,0x0C,0x00,0x00,0x00,0x33,0xC0,0xF3,0xAB,0x48,0x8B,0xCE,0x48,0x8B,0xD9,0x48,0x8B,0xF2,0x49,0x8B,0xF8,0xBD,0x89,0x00,0x00,0x00,0x41,0xBE,0x01,0x00,0x00,0x00,0x44,0x8B,0x7E,0x08,0x44,0x8B,0x67,0x08,0x45,0x3B,0xFC,0x75,0x65,0x49,0x63,0xD7,0x48,0xB9,0xE8,0x98,0xFF,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x38,0x28,0x47,0x5F,0x48,0x8D,0x48,0x10,0x8B,0x50,0x08,0x4C,0x8B,0xC3,0xC5,0xFA,0x6F,0x06,0xC5,0xFA,0x7F,0x44,0x24,0x48,0xC5,0xFA,0x6F,0x07,0xC5,0xFA,0x7F,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0x49,0x89,0x09,0x41,0x89,0x51,0x08,0x49,0x8B,0xC8,0x48,0x8D,0x54,0x24,0x48,0x4C,0x8D,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0xE8,0x87,0xF6,0xFF,0xFF,0x48,0x8B,0xC3,0x48,0x83,0xC4,0x60,0x5B,0x5D,0x5E,0x5F,0x41,0x5C,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0x53,0x03,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x51,0xCC,0x46,0x5F,0x48,0x8B,0xF0,0xB9,0x73,0x0A,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x3A,0xCC,0x46,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x58,0x45,0x88,0x30,0x41,0x89,0x68,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCF,0x41,0x8B,0xD4,0x48,0x8B,0x44,0x24,0x58,0x48,0x89,0x44,0x24,0x20,0xE8,0x6B,0x72,0xC9,0xFF,0x48,0x8B,0xC8,0xE8,0x3B,0xFC,0x44,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: sbyte idiv(sbyte lhs, sbyte rhs)
; location: [7FFC872C6D40h, 7FFC872C6D54h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cl                  ; MOVSX(Movsx_r64_rm8) [RAX,CL]                        encoding(4 bytes) = 48 0f be c1
0009h movsx rcx,dl                  ; MOVSX(Movsx_r64_rm8) [RCX,DL]                        encoding(4 bytes) = 48 0f be ca
000dh cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
000eh idiv ecx                      ; IDIV(Idiv_rm32) [ECX]                                encoding(2 bytes) = f7 f9
0010h movsx rax,al                  ; MOVSX(Movsx_r64_rm8) [RAX,AL]                        encoding(4 bytes) = 48 0f be c0
0014h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> idivBytes => new byte[21]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBE,0xC1,0x48,0x0F,0xBE,0xCA,0x99,0xF7,0xF9,0x48,0x0F,0xBE,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: byte idiv(byte lhs, byte rhs)
; location: [7FFC872C6D70h, 7FFC872C6D81h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0008h movzx ecx,dl                  ; MOVZX(Movzx_r32_rm8) [ECX,DL]                        encoding(3 bytes) = 0f b6 ca
000bh cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
000ch idiv ecx                      ; IDIV(Idiv_rm32) [ECX]                                encoding(2 bytes) = f7 f9
000eh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> idivBytes => new byte[18]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC1,0x0F,0xB6,0xCA,0x99,0xF7,0xF9,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: sbyte abs(sbyte src)
; location: [7FFC872C6DA0h, 7FFC872C6DB6h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cl                  ; MOVSX(Movsx_r64_rm8) [RAX,CL]                        encoding(4 bytes) = 48 0f be c1
0009h mov edx,eax                   ; MOV(Mov_r32_rm32) [EDX,EAX]                          encoding(2 bytes) = 8b d0
000bh sar edx,7                     ; SAR(Sar_rm32_imm8) [EDX,7h:imm8]                     encoding(3 bytes) = c1 fa 07
000eh add eax,edx                   ; ADD(Add_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 03 c2
0010h xor eax,edx                   ; XOR(Xor_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 33 c2
0012h movsx rax,al                  ; MOVSX(Movsx_r64_rm8) [RAX,AL]                        encoding(4 bytes) = 48 0f be c0
0016h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> absBytes => new byte[23]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBE,0xC1,0x8B,0xD0,0xC1,0xFA,0x07,0x03,0xC2,0x33,0xC2,0x48,0x0F,0xBE,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: short abs(short src)
; location: [7FFC872C6DD0h, 7FFC872C6DE6h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cx                  ; MOVSX(Movsx_r64_rm16) [RAX,CX]                       encoding(4 bytes) = 48 0f bf c1
0009h mov edx,eax                   ; MOV(Mov_r32_rm32) [EDX,EAX]                          encoding(2 bytes) = 8b d0
000bh sar edx,0Fh                   ; SAR(Sar_rm32_imm8) [EDX,fh:imm8]                     encoding(3 bytes) = c1 fa 0f
000eh add eax,edx                   ; ADD(Add_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 03 c2
0010h xor eax,edx                   ; XOR(Xor_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 33 c2
0012h movsx rax,ax                  ; MOVSX(Movsx_r64_rm16) [RAX,AX]                       encoding(4 bytes) = 48 0f bf c0
0016h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> absBytes => new byte[23]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBF,0xC1,0x8B,0xD0,0xC1,0xFA,0x0F,0x03,0xC2,0x33,0xC2,0x48,0x0F,0xBF,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: int abs(int src)
; location: [7FFC872C6E00h, 7FFC872C6E0Fh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov eax,ecx                   ; MOV(Mov_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 8b c1
0007h sar eax,1Fh                   ; SAR(Sar_rm32_imm8) [EAX,1fh:imm8]                    encoding(3 bytes) = c1 f8 1f
000ah lea edx,[rcx+rax]             ; LEA(Lea_r32_m) [EDX,mem(Unknown,RCX:br,DS:sr)]       encoding(3 bytes) = 8d 14 01
000dh xor eax,edx                   ; XOR(Xor_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 33 c2
000fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> absBytes => new byte[16]{0x0F,0x1F,0x44,0x00,0x00,0x8B,0xC1,0xC1,0xF8,0x1F,0x8D,0x14,0x01,0x33,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: long abs(long src)
; location: [7FFC872C6E20h, 7FFC872C6E33h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0008h sar rax,3Fh                   ; SAR(Sar_rm64_imm8) [RAX,3fh:imm8]                    encoding(4 bytes) = 48 c1 f8 3f
000ch lea rdx,[rcx+rax]             ; LEA(Lea_r64_m) [RDX,mem(Unknown,RCX:br,DS:sr)]       encoding(4 bytes) = 48 8d 14 01
0010h xor rax,rdx                   ; XOR(Xor_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 33 c2
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> absBytes => new byte[20]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0xC1,0x48,0xC1,0xF8,0x3F,0x48,0x8D,0x14,0x01,0x48,0x33,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: float abs(float src)
; location: [7FFC872C6E50h, 7FFC872C6E61h]
0000h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0003h xchg ax,ax                    ; NOP(Nopw)                                            encoding(2 bytes) = 66 90
0005h vmovss xmm1,dword ptr [7FFC872C6E68h]; VMOVSS(VEX_Vmovss_xmm_m32) [XMM1,mem(Float32,RIP:br,DS:sr)] encoding(VEX, 8 bytes) = c5 fa 10 0d 0b 00 00 00
000dh vandps xmm0,xmm0,xmm1         ; VANDPS(VEX_Vandps_xmm_xmm_xmmm128) [XMM0,XMM0,XMM1]  encoding(VEX, 4 bytes) = c5 f8 54 c1
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> absBytes => new byte[18]{0xC5,0xF8,0x77,0x66,0x90,0xC5,0xFA,0x10,0x0D,0x0B,0x00,0x00,0x00,0xC5,0xF8,0x54,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: double abs(double src)
; location: [7FFC872C6E80h, 7FFC872C6E91h]
0000h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0003h xchg ax,ax                    ; NOP(Nopw)                                            encoding(2 bytes) = 66 90
0005h vmovsd xmm1,qword ptr [7FFC872C6E98h]; VMOVSD(VEX_Vmovsd_xmm_m64) [XMM1,mem(Float64,RIP:br,DS:sr)] encoding(VEX, 8 bytes) = c5 fb 10 0d 0b 00 00 00
000dh vandps xmm0,xmm0,xmm1         ; VANDPS(VEX_Vandps_xmm_xmm_xmmm128) [XMM0,XMM0,XMM1]  encoding(VEX, 4 bytes) = c5 f8 54 c1
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> absBytes => new byte[18]{0xC5,0xF8,0x77,0x66,0x90,0xC5,0xFB,0x10,0x0D,0x0B,0x00,0x00,0x00,0xC5,0xF8,0x54,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref sbyte abs(ref sbyte src)
; location: [7FFC872C6EB0h, 7FFC872C6EC7h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,byte ptr [rcx]      ; MOVSX(Movsx_r64_rm8) [RAX,mem(8i,RCX:br,DS:sr)]      encoding(4 bytes) = 48 0f be 01
0009h mov edx,eax                   ; MOV(Mov_r32_rm32) [EDX,EAX]                          encoding(2 bytes) = 8b d0
000bh sar edx,7                     ; SAR(Sar_rm32_imm8) [EDX,7h:imm8]                     encoding(3 bytes) = c1 fa 07
000eh add eax,edx                   ; ADD(Add_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 03 c2
0010h xor eax,edx                   ; XOR(Xor_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 33 c2
0012h mov [rcx],al                  ; MOV(Mov_rm8_r8) [mem(8u,RCX:br,DS:sr),AL]            encoding(2 bytes) = 88 01
0014h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0017h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> absBytes => new byte[24]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBE,0x01,0x8B,0xD0,0xC1,0xFA,0x07,0x03,0xC2,0x33,0xC2,0x88,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref short abs(ref short src)
; location: [7FFC872C6EE0h, 7FFC872C6EF8h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,word ptr [rcx]      ; MOVSX(Movsx_r64_rm16) [RAX,mem(16i,RCX:br,DS:sr)]    encoding(4 bytes) = 48 0f bf 01
0009h mov edx,eax                   ; MOV(Mov_r32_rm32) [EDX,EAX]                          encoding(2 bytes) = 8b d0
000bh sar edx,0Fh                   ; SAR(Sar_rm32_imm8) [EDX,fh:imm8]                     encoding(3 bytes) = c1 fa 0f
000eh add eax,edx                   ; ADD(Add_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 03 c2
0010h xor eax,edx                   ; XOR(Xor_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 33 c2
0012h mov [rcx],ax                  ; MOV(Mov_rm16_r16) [mem(16u,RCX:br,DS:sr),AX]         encoding(3 bytes) = 66 89 01
0015h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0018h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> absBytes => new byte[25]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBF,0x01,0x8B,0xD0,0xC1,0xFA,0x0F,0x03,0xC2,0x33,0xC2,0x66,0x89,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref int abs(ref int src)
; location: [7FFC872C6F10h, 7FFC872C6F25h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov eax,[rcx]                 ; MOV(Mov_r32_rm32) [EAX,mem(32u,RCX:br,DS:sr)]        encoding(2 bytes) = 8b 01
0007h mov edx,eax                   ; MOV(Mov_r32_rm32) [EDX,EAX]                          encoding(2 bytes) = 8b d0
0009h sar edx,1Fh                   ; SAR(Sar_rm32_imm8) [EDX,1fh:imm8]                    encoding(3 bytes) = c1 fa 1f
000ch add eax,edx                   ; ADD(Add_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 03 c2
000eh xor eax,edx                   ; XOR(Xor_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 33 c2
0010h mov [rcx],eax                 ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EAX]        encoding(2 bytes) = 89 01
0012h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0015h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> absBytes => new byte[22]{0x0F,0x1F,0x44,0x00,0x00,0x8B,0x01,0x8B,0xD0,0xC1,0xFA,0x1F,0x03,0xC2,0x33,0xC2,0x89,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref long abs(ref long src)
; location: [7FFC872C6F40h, 7FFC872C6F5Bh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,[rcx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 01
0008h mov rdx,rax                   ; MOV(Mov_r64_rm64) [RDX,RAX]                          encoding(3 bytes) = 48 8b d0
000bh sar rdx,3Fh                   ; SAR(Sar_rm64_imm8) [RDX,3fh:imm8]                    encoding(4 bytes) = 48 c1 fa 3f
000fh add rax,rdx                   ; ADD(Add_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 03 c2
0012h xor rax,rdx                   ; XOR(Xor_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 33 c2
0015h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0018h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
001bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> absBytes => new byte[28]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x01,0x48,0x8B,0xD0,0x48,0xC1,0xFA,0x3F,0x48,0x03,0xC2,0x48,0x33,0xC2,0x48,0x89,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<sbyte> abs(ReadOnlySpan<sbyte> src, Span<sbyte> dst)
; location: [7FFC872C6F70h, 7FFC872C7041h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0014h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0017h mov esi,6Dh                   ; MOV(Mov_r32_imm32) [ESI,6dh:imm32]                   encoding(5 bytes) = be 6d 00 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
0023h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0026h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0029h jne short 0073h               ; JNE(Jne_rel8_64) [73h:jmp64]                         encoding(2 bytes) = 75 48
002bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
002eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0030h jle short 005eh               ; JLE(Jle_rel8_64) [5Eh:jmp64]                         encoding(2 bytes) = 7e 2c
0032h cmp r10d,r8d                  ; CMP(Cmp_r32_rm32) [R10D,R8D]                         encoding(3 bytes) = 45 3b d0
0035h jae near ptr 00cch            ; JAE(Jae_rel32_64) [CCh:jmp64]                        encoding(6 bytes) = 0f 83 91 00 00 00
003bh movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
003eh lea rbx,[rax+r11]             ; LEA(Lea_r64_m) [RBX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 4a 8d 1c 18
0042h movsx r11,byte ptr [r9+r11]   ; MOVSX(Movsx_r64_rm8) [R11,mem(8i,R9:br,DS:sr)]       encoding(5 bytes) = 4f 0f be 1c 19
0047h mov ebp,r11d                  ; MOV(Mov_r32_rm32) [EBP,R11D]                         encoding(3 bytes) = 41 8b eb
004ah sar ebp,7                     ; SAR(Sar_rm32_imm8) [EBP,7h:imm8]                     encoding(3 bytes) = c1 fd 07
004dh add r11d,ebp                  ; ADD(Add_r32_rm32) [R11D,EBP]                         encoding(3 bytes) = 44 03 dd
0050h xor r11d,ebp                  ; XOR(Xor_r32_rm32) [R11D,EBP]                         encoding(3 bytes) = 44 33 dd
0053h mov [rbx],r11b                ; MOV(Mov_rm8_r8) [mem(8u,RBX:br,DS:sr),R11L]          encoding(3 bytes) = 44 88 1b
0056h inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
0059h cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
005ch jl short 0032h                ; JL(Jl_rel8_64) [32h:jmp64]                           encoding(2 bytes) = 7c d4
005eh mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0061h mov [rcx+8],r8d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R8D]        encoding(4 bytes) = 44 89 41 08
0065h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0068h add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
006ch pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
006dh pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
006eh pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
006fh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0070h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0072h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0073h mov ecx,8ABh                  ; MOV(Mov_r32_imm32) [ECX,8abh:imm32]                  encoding(5 bytes) = b9 ab 08 00 00
0078h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0082h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F46C9B0h:jmp64]                encoding(5 bytes) = e8 29 c9 46 5f
0087h mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
008ah mov ecx,8B3h                  ; MOV(Mov_r32_imm32) [ECX,8b3h:imm32]                  encoding(5 bytes) = b9 b3 08 00 00
008fh mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0099h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F46C9B0h:jmp64]                encoding(5 bytes) = e8 12 c9 46 5f
009eh mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00a1h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
00a6h mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00a9h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00adh mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00b0h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00b2h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00b4h mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00b9h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00beh call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFC97008h:jmp64]        encoding(5 bytes) = e8 45 6f c9 ff
00c3h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00c6h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F44F9E0h:jmp64]                encoding(5 bytes) = e8 15 f9 44 5f
00cbh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00cch call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F59DE40h:jmp64]                encoding(5 bytes) = e8 6f dd 59 5f
00d1h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> absBytes => new byte[210]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x00,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0xBE,0x6D,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x48,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x2C,0x45,0x3B,0xD0,0x0F,0x83,0x91,0x00,0x00,0x00,0x4D,0x63,0xDA,0x4A,0x8D,0x1C,0x18,0x4F,0x0F,0xBE,0x1C,0x19,0x41,0x8B,0xEB,0xC1,0xFD,0x07,0x44,0x03,0xDD,0x44,0x33,0xDD,0x44,0x88,0x1B,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xD4,0x48,0x89,0x01,0x44,0x89,0x41,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0xAB,0x08,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x29,0xC9,0x46,0x5F,0x4C,0x8B,0xF0,0xB9,0xB3,0x08,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x12,0xC9,0x46,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x45,0x6F,0xC9,0xFF,0x48,0x8B,0xC8,0xE8,0x15,0xF9,0x44,0x5F,0xCC,0xE8,0x6F,0xDD,0x59,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<short> abs(ReadOnlySpan<short> src, Span<short> dst)
; location: [7FFC872C7060h, 7FFC872C7132h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0014h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0017h mov esi,75h                   ; MOV(Mov_r32_imm32) [ESI,75h:imm32]                   encoding(5 bytes) = be 75 00 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
0023h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0026h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0029h jne short 0074h               ; JNE(Jne_rel8_64) [74h:jmp64]                         encoding(2 bytes) = 75 49
002bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
002eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0030h jle short 005fh               ; JLE(Jle_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 7e 2d
0032h cmp r10d,r8d                  ; CMP(Cmp_r32_rm32) [R10D,R8D]                         encoding(3 bytes) = 45 3b d0
0035h jae near ptr 00cdh            ; JAE(Jae_rel32_64) [CDh:jmp64]                        encoding(6 bytes) = 0f 83 92 00 00 00
003bh movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
003eh lea rbx,[rax+r11*2]           ; LEA(Lea_r64_m) [RBX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 4a 8d 1c 58
0042h movsx r11,word ptr [r9+r11*2] ; MOVSX(Movsx_r64_rm16) [R11,mem(16i,R9:br,DS:sr)]     encoding(5 bytes) = 4f 0f bf 1c 59
0047h mov ebp,r11d                  ; MOV(Mov_r32_rm32) [EBP,R11D]                         encoding(3 bytes) = 41 8b eb
004ah sar ebp,0Fh                   ; SAR(Sar_rm32_imm8) [EBP,fh:imm8]                     encoding(3 bytes) = c1 fd 0f
004dh add r11d,ebp                  ; ADD(Add_r32_rm32) [R11D,EBP]                         encoding(3 bytes) = 44 03 dd
0050h xor r11d,ebp                  ; XOR(Xor_r32_rm32) [R11D,EBP]                         encoding(3 bytes) = 44 33 dd
0053h mov [rbx],r11w                ; MOV(Mov_rm16_r16) [mem(16u,RBX:br,DS:sr),R11W]       encoding(4 bytes) = 66 44 89 1b
0057h inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
005ah cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
005dh jl short 0032h                ; JL(Jl_rel8_64) [32h:jmp64]                           encoding(2 bytes) = 7c d3
005fh mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0062h mov [rcx+8],r8d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R8D]        encoding(4 bytes) = 44 89 41 08
0066h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0069h add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
006dh pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
006eh pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
006fh pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0070h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0071h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0073h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0074h mov ecx,8ABh                  ; MOV(Mov_r32_imm32) [ECX,8abh:imm32]                  encoding(5 bytes) = b9 ab 08 00 00
0079h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0083h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F46C8C0h:jmp64]                encoding(5 bytes) = e8 38 c8 46 5f
0088h mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
008bh mov ecx,8B3h                  ; MOV(Mov_r32_imm32) [ECX,8b3h:imm32]                  encoding(5 bytes) = b9 b3 08 00 00
0090h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
009ah call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F46C8C0h:jmp64]                encoding(5 bytes) = e8 21 c8 46 5f
009fh mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00a2h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
00a7h mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00aah mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00aeh mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00b1h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00b3h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00b5h mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00bah mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00bfh call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFC96F18h:jmp64]        encoding(5 bytes) = e8 54 6e c9 ff
00c4h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00c7h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F44F8F0h:jmp64]                encoding(5 bytes) = e8 24 f8 44 5f
00cch int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00cdh call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F59DD50h:jmp64]                encoding(5 bytes) = e8 7e dc 59 5f
00d2h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> absBytes => new byte[211]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x00,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0xBE,0x75,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x49,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x2D,0x45,0x3B,0xD0,0x0F,0x83,0x92,0x00,0x00,0x00,0x4D,0x63,0xDA,0x4A,0x8D,0x1C,0x58,0x4F,0x0F,0xBF,0x1C,0x59,0x41,0x8B,0xEB,0xC1,0xFD,0x0F,0x44,0x03,0xDD,0x44,0x33,0xDD,0x66,0x44,0x89,0x1B,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xD3,0x48,0x89,0x01,0x44,0x89,0x41,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0xAB,0x08,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x38,0xC8,0x46,0x5F,0x4C,0x8B,0xF0,0xB9,0xB3,0x08,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x21,0xC8,0x46,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x54,0x6E,0xC9,0xFF,0x48,0x8B,0xC8,0xE8,0x24,0xF8,0x44,0x5F,0xCC,0xE8,0x7E,0xDC,0x59,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<int> abs(ReadOnlySpan<int> src, Span<int> dst)
; location: [7FFC872C7150h, 7FFC872C7220h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0014h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0017h mov esi,7Dh                   ; MOV(Mov_r32_imm32) [ESI,7dh:imm32]                   encoding(5 bytes) = be 7d 00 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
0023h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0026h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0029h jne short 0072h               ; JNE(Jne_rel8_64) [72h:jmp64]                         encoding(2 bytes) = 75 47
002bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
002eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0030h jle short 005dh               ; JLE(Jle_rel8_64) [5Dh:jmp64]                         encoding(2 bytes) = 7e 2b
0032h cmp r10d,r8d                  ; CMP(Cmp_r32_rm32) [R10D,R8D]                         encoding(3 bytes) = 45 3b d0
0035h jae near ptr 00cbh            ; JAE(Jae_rel32_64) [CBh:jmp64]                        encoding(6 bytes) = 0f 83 90 00 00 00
003bh movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
003eh lea rbx,[rax+r11*4]           ; LEA(Lea_r64_m) [RBX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 4a 8d 1c 98
0042h mov r11d,[r9+r11*4]           ; MOV(Mov_r32_rm32) [R11D,mem(32u,R9:br,DS:sr)]        encoding(4 bytes) = 47 8b 1c 99
0046h mov ebp,r11d                  ; MOV(Mov_r32_rm32) [EBP,R11D]                         encoding(3 bytes) = 41 8b eb
0049h sar ebp,1Fh                   ; SAR(Sar_rm32_imm8) [EBP,1fh:imm8]                    encoding(3 bytes) = c1 fd 1f
004ch add r11d,ebp                  ; ADD(Add_r32_rm32) [R11D,EBP]                         encoding(3 bytes) = 44 03 dd
004fh xor r11d,ebp                  ; XOR(Xor_r32_rm32) [R11D,EBP]                         encoding(3 bytes) = 44 33 dd
0052h mov [rbx],r11d                ; MOV(Mov_rm32_r32) [mem(32u,RBX:br,DS:sr),R11D]       encoding(3 bytes) = 44 89 1b
0055h inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
0058h cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
005bh jl short 0032h                ; JL(Jl_rel8_64) [32h:jmp64]                           encoding(2 bytes) = 7c d5
005dh mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0060h mov [rcx+8],r8d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R8D]        encoding(4 bytes) = 44 89 41 08
0064h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0067h add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
006bh pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
006ch pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
006dh pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
006eh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
006fh pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0071h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0072h mov ecx,8ABh                  ; MOV(Mov_r32_imm32) [ECX,8abh:imm32]                  encoding(5 bytes) = b9 ab 08 00 00
0077h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0081h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F46C7D0h:jmp64]                encoding(5 bytes) = e8 4a c7 46 5f
0086h mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0089h mov ecx,8B3h                  ; MOV(Mov_r32_imm32) [ECX,8b3h:imm32]                  encoding(5 bytes) = b9 b3 08 00 00
008eh mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0098h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F46C7D0h:jmp64]                encoding(5 bytes) = e8 33 c7 46 5f
009dh mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00a0h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
00a5h mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00a8h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00ach mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00afh mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00b1h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00b3h mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00b8h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00bdh call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFC96E28h:jmp64]        encoding(5 bytes) = e8 66 6d c9 ff
00c2h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00c5h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F44F800h:jmp64]                encoding(5 bytes) = e8 36 f7 44 5f
00cah int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00cbh call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F59DC60h:jmp64]                encoding(5 bytes) = e8 90 db 59 5f
00d0h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> absBytes => new byte[209]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x00,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0xBE,0x7D,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x47,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x2B,0x45,0x3B,0xD0,0x0F,0x83,0x90,0x00,0x00,0x00,0x4D,0x63,0xDA,0x4A,0x8D,0x1C,0x98,0x47,0x8B,0x1C,0x99,0x41,0x8B,0xEB,0xC1,0xFD,0x1F,0x44,0x03,0xDD,0x44,0x33,0xDD,0x44,0x89,0x1B,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xD5,0x48,0x89,0x01,0x44,0x89,0x41,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0xAB,0x08,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x4A,0xC7,0x46,0x5F,0x4C,0x8B,0xF0,0xB9,0xB3,0x08,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x33,0xC7,0x46,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x66,0x6D,0xC9,0xFF,0x48,0x8B,0xC8,0xE8,0x36,0xF7,0x44,0x5F,0xCC,0xE8,0x90,0xDB,0x59,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<long> abs(ReadOnlySpan<long> src, Span<long> dst)
; location: [7FFC872C7240h, 7FFC872C7311h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0014h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0017h mov esi,85h                   ; MOV(Mov_r32_imm32) [ESI,85h:imm32]                   encoding(5 bytes) = be 85 00 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
0023h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0026h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0029h jne short 0073h               ; JNE(Jne_rel8_64) [73h:jmp64]                         encoding(2 bytes) = 75 48
002bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
002eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0030h jle short 005eh               ; JLE(Jle_rel8_64) [5Eh:jmp64]                         encoding(2 bytes) = 7e 2c
0032h cmp r10d,r8d                  ; CMP(Cmp_r32_rm32) [R10D,R8D]                         encoding(3 bytes) = 45 3b d0
0035h jae near ptr 00cch            ; JAE(Jae_rel32_64) [CCh:jmp64]                        encoding(6 bytes) = 0f 83 91 00 00 00
003bh movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
003eh lea rbx,[rax+r11*8]           ; LEA(Lea_r64_m) [RBX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 4a 8d 1c d8
0042h mov r11,[r9+r11*8]            ; MOV(Mov_r64_rm64) [R11,mem(64u,R9:br,DS:sr)]         encoding(4 bytes) = 4f 8b 1c d9
0046h mov rbp,r11                   ; MOV(Mov_r64_rm64) [RBP,R11]                          encoding(3 bytes) = 49 8b eb
0049h sar rbp,3Fh                   ; SAR(Sar_rm64_imm8) [RBP,3fh:imm8]                    encoding(4 bytes) = 48 c1 fd 3f
004dh add r11,rbp                   ; ADD(Add_r64_rm64) [R11,RBP]                          encoding(3 bytes) = 4c 03 dd
0050h xor r11,rbp                   ; XOR(Xor_r64_rm64) [R11,RBP]                          encoding(3 bytes) = 4c 33 dd
0053h mov [rbx],r11                 ; MOV(Mov_rm64_r64) [mem(64u,RBX:br,DS:sr),R11]        encoding(3 bytes) = 4c 89 1b
0056h inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
0059h cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
005ch jl short 0032h                ; JL(Jl_rel8_64) [32h:jmp64]                           encoding(2 bytes) = 7c d4
005eh mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0061h mov [rcx+8],r8d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R8D]        encoding(4 bytes) = 44 89 41 08
0065h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0068h add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
006ch pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
006dh pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
006eh pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
006fh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0070h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0072h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0073h mov ecx,8ABh                  ; MOV(Mov_r32_imm32) [ECX,8abh:imm32]                  encoding(5 bytes) = b9 ab 08 00 00
0078h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0082h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F46C6E0h:jmp64]                encoding(5 bytes) = e8 59 c6 46 5f
0087h mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
008ah mov ecx,8B3h                  ; MOV(Mov_r32_imm32) [ECX,8b3h:imm32]                  encoding(5 bytes) = b9 b3 08 00 00
008fh mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0099h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F46C6E0h:jmp64]                encoding(5 bytes) = e8 42 c6 46 5f
009eh mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00a1h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
00a6h mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00a9h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00adh mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00b0h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00b2h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00b4h mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00b9h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00beh call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFC96D38h:jmp64]        encoding(5 bytes) = e8 75 6c c9 ff
00c3h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00c6h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F44F710h:jmp64]                encoding(5 bytes) = e8 45 f6 44 5f
00cbh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00cch call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F59DB70h:jmp64]                encoding(5 bytes) = e8 9f da 59 5f
00d1h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> absBytes => new byte[210]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x00,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0xBE,0x85,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x48,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x2C,0x45,0x3B,0xD0,0x0F,0x83,0x91,0x00,0x00,0x00,0x4D,0x63,0xDA,0x4A,0x8D,0x1C,0xD8,0x4F,0x8B,0x1C,0xD9,0x49,0x8B,0xEB,0x48,0xC1,0xFD,0x3F,0x4C,0x03,0xDD,0x4C,0x33,0xDD,0x4C,0x89,0x1B,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xD4,0x48,0x89,0x01,0x44,0x89,0x41,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0xAB,0x08,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x59,0xC6,0x46,0x5F,0x4C,0x8B,0xF0,0xB9,0xB3,0x08,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x42,0xC6,0x46,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x75,0x6C,0xC9,0xFF,0x48,0x8B,0xC8,0xE8,0x45,0xF6,0x44,0x5F,0xCC,0xE8,0x9F,0xDA,0x59,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<sbyte> abs(Span<sbyte> src)
; location: [7FFC872C7330h, 7FFC872C736Dh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,[rdx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 02
0008h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
000bh xor r8d,r8d                   ; XOR(Xor_r32_rm32) [R8D,R8D]                          encoding(3 bytes) = 45 33 c0
000eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0010h jle short 0034h               ; JLE(Jle_rel8_64) [34h:jmp64]                         encoding(2 bytes) = 7e 22
0012h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0015h add r9,rax                    ; ADD(Add_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 03 c8
0018h movsx r10,byte ptr [r9]       ; MOVSX(Movsx_r64_rm8) [R10,mem(8i,R9:br,DS:sr)]       encoding(4 bytes) = 4d 0f be 11
001ch mov r11d,r10d                 ; MOV(Mov_r32_rm32) [R11D,R10D]                        encoding(3 bytes) = 45 8b da
001fh sar r11d,7                    ; SAR(Sar_rm32_imm8) [R11D,7h:imm8]                    encoding(4 bytes) = 41 c1 fb 07
0023h add r10d,r11d                 ; ADD(Add_r32_rm32) [R10D,R11D]                        encoding(3 bytes) = 45 03 d3
0026h xor r10d,r11d                 ; XOR(Xor_r32_rm32) [R10D,R11D]                        encoding(3 bytes) = 45 33 d3
0029h mov [r9],r10b                 ; MOV(Mov_rm8_r8) [mem(8u,R9:br,DS:sr),R10L]           encoding(3 bytes) = 45 88 11
002ch inc r8d                       ; INC(Inc_rm32) [R8D]                                  encoding(3 bytes) = 41 ff c0
002fh cmp r8d,edx                   ; CMP(Cmp_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 3b c2
0032h jl short 0012h                ; JL(Jl_rel8_64) [12h:jmp64]                           encoding(2 bytes) = 7c de
0034h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0037h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
003ah mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
003dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> absBytes => new byte[62]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x02,0x8B,0x52,0x08,0x45,0x33,0xC0,0x85,0xD2,0x7E,0x22,0x4D,0x63,0xC8,0x4C,0x03,0xC8,0x4D,0x0F,0xBE,0x11,0x45,0x8B,0xDA,0x41,0xC1,0xFB,0x07,0x45,0x03,0xD3,0x45,0x33,0xD3,0x45,0x88,0x11,0x41,0xFF,0xC0,0x44,0x3B,0xC2,0x7C,0xDE,0x48,0x89,0x01,0x89,0x51,0x08,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<short> abs(Span<short> src)
; location: [7FFC872C7380h, 7FFC872C73BFh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,[rdx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 02
0008h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
000bh xor r8d,r8d                   ; XOR(Xor_r32_rm32) [R8D,R8D]                          encoding(3 bytes) = 45 33 c0
000eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0010h jle short 0036h               ; JLE(Jle_rel8_64) [36h:jmp64]                         encoding(2 bytes) = 7e 24
0012h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0015h lea r9,[rax+r9*2]             ; LEA(Lea_r64_m) [R9,mem(Unknown,RAX:br,DS:sr)]        encoding(4 bytes) = 4e 8d 0c 48
0019h movsx r10,word ptr [r9]       ; MOVSX(Movsx_r64_rm16) [R10,mem(16i,R9:br,DS:sr)]     encoding(4 bytes) = 4d 0f bf 11
001dh mov r11d,r10d                 ; MOV(Mov_r32_rm32) [R11D,R10D]                        encoding(3 bytes) = 45 8b da
0020h sar r11d,0Fh                  ; SAR(Sar_rm32_imm8) [R11D,fh:imm8]                    encoding(4 bytes) = 41 c1 fb 0f
0024h add r10d,r11d                 ; ADD(Add_r32_rm32) [R10D,R11D]                        encoding(3 bytes) = 45 03 d3
0027h xor r10d,r11d                 ; XOR(Xor_r32_rm32) [R10D,R11D]                        encoding(3 bytes) = 45 33 d3
002ah mov [r9],r10w                 ; MOV(Mov_rm16_r16) [mem(16u,R9:br,DS:sr),R10W]        encoding(4 bytes) = 66 45 89 11
002eh inc r8d                       ; INC(Inc_rm32) [R8D]                                  encoding(3 bytes) = 41 ff c0
0031h cmp r8d,edx                   ; CMP(Cmp_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 3b c2
0034h jl short 0012h                ; JL(Jl_rel8_64) [12h:jmp64]                           encoding(2 bytes) = 7c dc
0036h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0039h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
003ch mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
003fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> absBytes => new byte[64]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x02,0x8B,0x52,0x08,0x45,0x33,0xC0,0x85,0xD2,0x7E,0x24,0x4D,0x63,0xC8,0x4E,0x8D,0x0C,0x48,0x4D,0x0F,0xBF,0x11,0x45,0x8B,0xDA,0x41,0xC1,0xFB,0x0F,0x45,0x03,0xD3,0x45,0x33,0xD3,0x66,0x45,0x89,0x11,0x41,0xFF,0xC0,0x44,0x3B,0xC2,0x7C,0xDC,0x48,0x89,0x01,0x89,0x51,0x08,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<int> abs(Span<int> src)
; location: [7FFC872C73D0h, 7FFC872C740Dh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,[rdx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 02
0008h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
000bh xor r8d,r8d                   ; XOR(Xor_r32_rm32) [R8D,R8D]                          encoding(3 bytes) = 45 33 c0
000eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0010h jle short 0034h               ; JLE(Jle_rel8_64) [34h:jmp64]                         encoding(2 bytes) = 7e 22
0012h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0015h lea r9,[rax+r9*4]             ; LEA(Lea_r64_m) [R9,mem(Unknown,RAX:br,DS:sr)]        encoding(4 bytes) = 4e 8d 0c 88
0019h mov r10d,[r9]                 ; MOV(Mov_r32_rm32) [R10D,mem(32u,R9:br,DS:sr)]        encoding(3 bytes) = 45 8b 11
001ch mov r11d,r10d                 ; MOV(Mov_r32_rm32) [R11D,R10D]                        encoding(3 bytes) = 45 8b da
001fh sar r11d,1Fh                  ; SAR(Sar_rm32_imm8) [R11D,1fh:imm8]                   encoding(4 bytes) = 41 c1 fb 1f
0023h add r10d,r11d                 ; ADD(Add_r32_rm32) [R10D,R11D]                        encoding(3 bytes) = 45 03 d3
0026h xor r10d,r11d                 ; XOR(Xor_r32_rm32) [R10D,R11D]                        encoding(3 bytes) = 45 33 d3
0029h mov [r9],r10d                 ; MOV(Mov_rm32_r32) [mem(32u,R9:br,DS:sr),R10D]        encoding(3 bytes) = 45 89 11
002ch inc r8d                       ; INC(Inc_rm32) [R8D]                                  encoding(3 bytes) = 41 ff c0
002fh cmp r8d,edx                   ; CMP(Cmp_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 3b c2
0032h jl short 0012h                ; JL(Jl_rel8_64) [12h:jmp64]                           encoding(2 bytes) = 7c de
0034h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0037h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
003ah mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
003dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> absBytes => new byte[62]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x02,0x8B,0x52,0x08,0x45,0x33,0xC0,0x85,0xD2,0x7E,0x22,0x4D,0x63,0xC8,0x4E,0x8D,0x0C,0x88,0x45,0x8B,0x11,0x45,0x8B,0xDA,0x41,0xC1,0xFB,0x1F,0x45,0x03,0xD3,0x45,0x33,0xD3,0x45,0x89,0x11,0x41,0xFF,0xC0,0x44,0x3B,0xC2,0x7C,0xDE,0x48,0x89,0x01,0x89,0x51,0x08,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<long> abs(Span<long> src)
; location: [7FFC872C7420h, 7FFC872C745Dh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,[rdx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 02
0008h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
000bh xor r8d,r8d                   ; XOR(Xor_r32_rm32) [R8D,R8D]                          encoding(3 bytes) = 45 33 c0
000eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0010h jle short 0034h               ; JLE(Jle_rel8_64) [34h:jmp64]                         encoding(2 bytes) = 7e 22
0012h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0015h lea r9,[rax+r9*8]             ; LEA(Lea_r64_m) [R9,mem(Unknown,RAX:br,DS:sr)]        encoding(4 bytes) = 4e 8d 0c c8
0019h mov r10,[r9]                  ; MOV(Mov_r64_rm64) [R10,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 4d 8b 11
001ch mov r11,r10                   ; MOV(Mov_r64_rm64) [R11,R10]                          encoding(3 bytes) = 4d 8b da
001fh sar r11,3Fh                   ; SAR(Sar_rm64_imm8) [R11,3fh:imm8]                    encoding(4 bytes) = 49 c1 fb 3f
0023h add r10,r11                   ; ADD(Add_r64_rm64) [R10,R11]                          encoding(3 bytes) = 4d 03 d3
0026h xor r10,r11                   ; XOR(Xor_r64_rm64) [R10,R11]                          encoding(3 bytes) = 4d 33 d3
0029h mov [r9],r10                  ; MOV(Mov_rm64_r64) [mem(64u,R9:br,DS:sr),R10]         encoding(3 bytes) = 4d 89 11
002ch inc r8d                       ; INC(Inc_rm32) [R8D]                                  encoding(3 bytes) = 41 ff c0
002fh cmp r8d,edx                   ; CMP(Cmp_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 3b c2
0032h jl short 0012h                ; JL(Jl_rel8_64) [12h:jmp64]                           encoding(2 bytes) = 7c de
0034h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0037h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
003ah mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
003dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> absBytes => new byte[62]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x02,0x8B,0x52,0x08,0x45,0x33,0xC0,0x85,0xD2,0x7E,0x22,0x4D,0x63,0xC8,0x4E,0x8D,0x0C,0xC8,0x4D,0x8B,0x11,0x4D,0x8B,0xDA,0x49,0xC1,0xFB,0x3F,0x4D,0x03,0xD3,0x4D,0x33,0xD3,0x4D,0x89,0x11,0x41,0xFF,0xC0,0x44,0x3B,0xC2,0x7C,0xDE,0x48,0x89,0x01,0x89,0x51,0x08,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: sbyte add(sbyte lhs, sbyte rhs)
; location: [7FFC872C7470h, 7FFC872C7483h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cl                  ; MOVSX(Movsx_r64_rm8) [RAX,CL]                        encoding(4 bytes) = 48 0f be c1
0009h movsx rdx,dl                  ; MOVSX(Movsx_r64_rm8) [RDX,DL]                        encoding(4 bytes) = 48 0f be d2
000dh add eax,edx                   ; ADD(Add_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 03 c2
000fh movsx rax,al                  ; MOVSX(Movsx_r64_rm8) [RAX,AL]                        encoding(4 bytes) = 48 0f be c0
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> addBytes => new byte[20]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBE,0xC1,0x48,0x0F,0xBE,0xD2,0x03,0xC2,0x48,0x0F,0xBE,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: byte add(byte lhs, byte rhs)
; location: [7FFC872C74A0h, 7FFC872C74B0h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0008h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
000bh add eax,edx                   ; ADD(Add_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 03 c2
000dh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0010h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> addBytes => new byte[17]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC1,0x0F,0xB6,0xD2,0x03,0xC2,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: short add(short lhs, short rhs)
; location: [7FFC872C74D0h, 7FFC872C74E3h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cx                  ; MOVSX(Movsx_r64_rm16) [RAX,CX]                       encoding(4 bytes) = 48 0f bf c1
0009h movsx rdx,dx                  ; MOVSX(Movsx_r64_rm16) [RDX,DX]                       encoding(4 bytes) = 48 0f bf d2
000dh add eax,edx                   ; ADD(Add_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 03 c2
000fh movsx rax,ax                  ; MOVSX(Movsx_r64_rm16) [RAX,AX]                       encoding(4 bytes) = 48 0f bf c0
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> addBytes => new byte[20]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBF,0xC1,0x48,0x0F,0xBF,0xD2,0x03,0xC2,0x48,0x0F,0xBF,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ushort add(ushort lhs, ushort rhs)
; location: [7FFC872C7500h, 7FFC872C7510h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cx                  ; MOVZX(Movzx_r32_rm16) [EAX,CX]                       encoding(3 bytes) = 0f b7 c1
0008h movzx edx,dx                  ; MOVZX(Movzx_r32_rm16) [EDX,DX]                       encoding(3 bytes) = 0f b7 d2
000bh add eax,edx                   ; ADD(Add_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 03 c2
000dh movzx eax,ax                  ; MOVZX(Movzx_r32_rm16) [EAX,AX]                       encoding(3 bytes) = 0f b7 c0
0010h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> addBytes => new byte[17]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB7,0xC1,0x0F,0xB7,0xD2,0x03,0xC2,0x0F,0xB7,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: int add(int lhs, int rhs)
; location: [7FFC872C7530h, 7FFC872C7538h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h lea eax,[rcx+rdx]             ; LEA(Lea_r32_m) [EAX,mem(Unknown,RCX:br,DS:sr)]       encoding(3 bytes) = 8d 04 11
0008h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> addBytes => new byte[9]{0x0F,0x1F,0x44,0x00,0x00,0x8D,0x04,0x11,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: uint add(uint lhs, uint rhs)
; location: [7FFC872C7550h, 7FFC872C7558h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h lea eax,[rcx+rdx]             ; LEA(Lea_r32_m) [EAX,mem(Unknown,RCX:br,DS:sr)]       encoding(3 bytes) = 8d 04 11
0008h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> addBytes => new byte[9]{0x0F,0x1F,0x44,0x00,0x00,0x8D,0x04,0x11,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: long add(long lhs, long rhs)
; location: [7FFC872C7570h, 7FFC872C7579h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h lea rax,[rcx+rdx]             ; LEA(Lea_r64_m) [RAX,mem(Unknown,RCX:br,DS:sr)]       encoding(4 bytes) = 48 8d 04 11
0009h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> addBytes => new byte[10]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8D,0x04,0x11,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ulong add(ulong lhs, ulong rhs)
; location: [7FFC872C7590h, 7FFC872C7599h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h lea rax,[rcx+rdx]             ; LEA(Lea_r64_m) [RAX,mem(Unknown,RCX:br,DS:sr)]       encoding(4 bytes) = 48 8d 04 11
0009h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> addBytes => new byte[10]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8D,0x04,0x11,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref sbyte add(ref sbyte lhs, sbyte rhs)
; location: [7FFC872C75B0h, 7FFC872C75BEh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,dl                  ; MOVSX(Movsx_r64_rm8) [RAX,DL]                        encoding(4 bytes) = 48 0f be c2
0009h add [rcx],al                  ; ADD(Add_rm8_r8) [mem(8u,RCX:br,DS:sr),AL]            encoding(2 bytes) = 00 01
000bh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> addBytes => new byte[15]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBE,0xC2,0x00,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref byte add(ref byte lhs, byte rhs)
; location: [7FFC872C75D0h, 7FFC872C75DDh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,dl                  ; MOVZX(Movzx_r32_rm8) [EAX,DL]                        encoding(3 bytes) = 0f b6 c2
0008h add [rcx],al                  ; ADD(Add_rm8_r8) [mem(8u,RCX:br,DS:sr),AL]            encoding(2 bytes) = 00 01
000ah mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> addBytes => new byte[14]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC2,0x00,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref short add(ref short lhs, short rhs)
; location: [7FFC872C75F0h, 7FFC872C75FFh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,dx                  ; MOVSX(Movsx_r64_rm16) [RAX,DX]                       encoding(4 bytes) = 48 0f bf c2
0009h add [rcx],ax                  ; ADD(Add_rm16_r16) [mem(16u,RCX:br,DS:sr),AX]         encoding(3 bytes) = 66 01 01
000ch mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> addBytes => new byte[16]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBF,0xC2,0x66,0x01,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref ushort add(ref ushort lhs, ushort rhs)
; location: [7FFC872C7610h, 7FFC872C761Eh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,dx                  ; MOVZX(Movzx_r32_rm16) [EAX,DX]                       encoding(3 bytes) = 0f b7 c2
0008h add [rcx],ax                  ; ADD(Add_rm16_r16) [mem(16u,RCX:br,DS:sr),AX]         encoding(3 bytes) = 66 01 01
000bh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> addBytes => new byte[15]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB7,0xC2,0x66,0x01,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref int add(ref int lhs, int rhs)
; location: [7FFC872C7630h, 7FFC872C763Ah]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h add [rcx],edx                 ; ADD(Add_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(2 bytes) = 01 11
0007h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> addBytes => new byte[11]{0x0F,0x1F,0x44,0x00,0x00,0x01,0x11,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref uint add(ref uint lhs, uint rhs)
; location: [7FFC872C7650h, 7FFC872C765Ah]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h add [rcx],edx                 ; ADD(Add_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(2 bytes) = 01 11
0007h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> addBytes => new byte[11]{0x0F,0x1F,0x44,0x00,0x00,0x01,0x11,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref long add(ref long lhs, long rhs)
; location: [7FFC872C7670h, 7FFC872C767Bh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h add [rcx],rdx                 ; ADD(Add_rm64_r64) [mem(64u,RCX:br,DS:sr),RDX]        encoding(3 bytes) = 48 01 11
0008h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> addBytes => new byte[12]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x01,0x11,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref ulong add(ref ulong lhs, ulong rhs)
; location: [7FFC872C7690h, 7FFC872C769Bh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h add [rcx],rdx                 ; ADD(Add_rm64_r64) [mem(64u,RCX:br,DS:sr),RDX]        encoding(3 bytes) = 48 01 11
0008h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> addBytes => new byte[12]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x01,0x11,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: sbyte and(sbyte lhs, sbyte rhs)
; location: [7FFC872C76B0h, 7FFC872C76C3h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cl                  ; MOVSX(Movsx_r64_rm8) [RAX,CL]                        encoding(4 bytes) = 48 0f be c1
0009h movsx rdx,dl                  ; MOVSX(Movsx_r64_rm8) [RDX,DL]                        encoding(4 bytes) = 48 0f be d2
000dh and eax,edx                   ; AND(And_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 23 c2
000fh movsx rax,al                  ; MOVSX(Movsx_r64_rm8) [RAX,AL]                        encoding(4 bytes) = 48 0f be c0
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> andBytes => new byte[20]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBE,0xC1,0x48,0x0F,0xBE,0xD2,0x23,0xC2,0x48,0x0F,0xBE,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: byte and(byte lhs, byte rhs)
; location: [7FFC872C76E0h, 7FFC872C76F0h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0008h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
000bh and eax,edx                   ; AND(And_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 23 c2
000dh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0010h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> andBytes => new byte[17]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC1,0x0F,0xB6,0xD2,0x23,0xC2,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: short and(short lhs, short rhs)
; location: [7FFC872C7710h, 7FFC872C7723h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cx                  ; MOVSX(Movsx_r64_rm16) [RAX,CX]                       encoding(4 bytes) = 48 0f bf c1
0009h movsx rdx,dx                  ; MOVSX(Movsx_r64_rm16) [RDX,DX]                       encoding(4 bytes) = 48 0f bf d2
000dh and eax,edx                   ; AND(And_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 23 c2
000fh movsx rax,ax                  ; MOVSX(Movsx_r64_rm16) [RAX,AX]                       encoding(4 bytes) = 48 0f bf c0
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> andBytes => new byte[20]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBF,0xC1,0x48,0x0F,0xBF,0xD2,0x23,0xC2,0x48,0x0F,0xBF,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ushort and(ushort lhs, ushort rhs)
; location: [7FFC872C7740h, 7FFC872C7750h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cx                  ; MOVZX(Movzx_r32_rm16) [EAX,CX]                       encoding(3 bytes) = 0f b7 c1
0008h movzx edx,dx                  ; MOVZX(Movzx_r32_rm16) [EDX,DX]                       encoding(3 bytes) = 0f b7 d2
000bh and eax,edx                   ; AND(And_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 23 c2
000dh movzx eax,ax                  ; MOVZX(Movzx_r32_rm16) [EAX,AX]                       encoding(3 bytes) = 0f b7 c0
0010h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> andBytes => new byte[17]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB7,0xC1,0x0F,0xB7,0xD2,0x23,0xC2,0x0F,0xB7,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: int and(int lhs, int rhs)
; location: [7FFC872C7770h, 7FFC872C7779h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov eax,ecx                   ; MOV(Mov_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 8b c1
0007h and eax,edx                   ; AND(And_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 23 c2
0009h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> andBytes => new byte[10]{0x0F,0x1F,0x44,0x00,0x00,0x8B,0xC1,0x23,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: uint and(uint lhs, uint rhs)
; location: [7FFC872C7790h, 7FFC872C7799h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov eax,ecx                   ; MOV(Mov_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 8b c1
0007h and eax,edx                   ; AND(And_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 23 c2
0009h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> andBytes => new byte[10]{0x0F,0x1F,0x44,0x00,0x00,0x8B,0xC1,0x23,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: long and(long lhs, long rhs)
; location: [7FFC872C77B0h, 7FFC872C77BBh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0008h and rax,rdx                   ; AND(And_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 23 c2
000bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> andBytes => new byte[12]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0xC1,0x48,0x23,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ulong and(ulong lhs, ulong rhs)
; location: [7FFC872C77D0h, 7FFC872C77DBh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0008h and rax,rdx                   ; AND(And_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 23 c2
000bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> andBytes => new byte[12]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0xC1,0x48,0x23,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: float and(float lhs, float rhs)
; location: [7FFC872C77F0h, 7FFC872C7819h]
0000h sub rsp,18h                   ; SUB(Sub_rm64_imm8) [RSP,18h:imm64]                   encoding(4 bytes) = 48 83 ec 18
0004h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0007h vmovss dword ptr [rsp+14h],xmm0; VMOVSS(VEX_Vmovss_m32_xmm) [mem(Float32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 11 44 24 14
000dh mov eax,[rsp+14h]             ; MOV(Mov_r32_rm32) [EAX,mem(32u,RSP:br,SS:sr)]        encoding(4 bytes) = 8b 44 24 14
0011h vmovss dword ptr [rsp+10h],xmm1; VMOVSS(VEX_Vmovss_m32_xmm) [mem(Float32,RSP:br,SS:sr),XMM1] encoding(VEX, 6 bytes) = c5 fa 11 4c 24 10
0017h and eax,[rsp+10h]             ; AND(And_r32_rm32) [EAX,mem(32u,RSP:br,SS:sr)]        encoding(4 bytes) = 23 44 24 10
001bh mov [rsp+0Ch],eax             ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),EAX]        encoding(4 bytes) = 89 44 24 0c
001fh vmovss xmm0,dword ptr [rsp+0Ch]; VMOVSS(VEX_Vmovss_xmm_m32) [XMM0,mem(Float32,RSP:br,SS:sr)] encoding(VEX, 6 bytes) = c5 fa 10 44 24 0c
0025h add rsp,18h                   ; ADD(Add_rm64_imm8) [RSP,18h:imm64]                   encoding(4 bytes) = 48 83 c4 18
0029h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> andBytes => new byte[42]{0x48,0x83,0xEC,0x18,0xC5,0xF8,0x77,0xC5,0xFA,0x11,0x44,0x24,0x14,0x8B,0x44,0x24,0x14,0xC5,0xFA,0x11,0x4C,0x24,0x10,0x23,0x44,0x24,0x10,0x89,0x44,0x24,0x0C,0xC5,0xFA,0x10,0x44,0x24,0x0C,0x48,0x83,0xC4,0x18,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: double and(double lhs, double rhs)
; location: [7FFC872C7840h, 7FFC872C786Ah]
0000h sub rsp,18h                   ; SUB(Sub_rm64_imm8) [RSP,18h:imm64]                   encoding(4 bytes) = 48 83 ec 18
0004h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0007h vmovsd qword ptr [rsp+10h],xmm0; VMOVSD(VEX_Vmovsd_m64_xmm) [mem(Float64,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fb 11 44 24 10
000dh mov rax,[rsp+10h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 10
0012h vmovsd qword ptr [rsp+8],xmm1 ; VMOVSD(VEX_Vmovsd_m64_xmm) [mem(Float64,RSP:br,SS:sr),XMM1] encoding(VEX, 6 bytes) = c5 fb 11 4c 24 08
0018h and rax,[rsp+8]               ; AND(And_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 23 44 24 08
001dh mov [rsp],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(4 bytes) = 48 89 04 24
0021h vmovsd xmm0,qword ptr [rsp]   ; VMOVSD(VEX_Vmovsd_xmm_m64) [XMM0,mem(Float64,RSP:br,SS:sr)] encoding(VEX, 5 bytes) = c5 fb 10 04 24
0026h add rsp,18h                   ; ADD(Add_rm64_imm8) [RSP,18h:imm64]                   encoding(4 bytes) = 48 83 c4 18
002ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> andBytes => new byte[43]{0x48,0x83,0xEC,0x18,0xC5,0xF8,0x77,0xC5,0xFB,0x11,0x44,0x24,0x10,0x48,0x8B,0x44,0x24,0x10,0xC5,0xFB,0x11,0x4C,0x24,0x08,0x48,0x23,0x44,0x24,0x08,0x48,0x89,0x04,0x24,0xC5,0xFB,0x10,0x04,0x24,0x48,0x83,0xC4,0x18,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref sbyte and(in sbyte lhs, in sbyte rhs, ref sbyte dst)
; location: [7FFC872C7890h, 7FFC872C78A5h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,byte ptr [rcx]      ; MOVSX(Movsx_r64_rm8) [RAX,mem(8i,RCX:br,DS:sr)]      encoding(4 bytes) = 48 0f be 01
0009h movsx rdx,byte ptr [rdx]      ; MOVSX(Movsx_r64_rm8) [RDX,mem(8i,RDX:br,DS:sr)]      encoding(4 bytes) = 48 0f be 12
000dh and eax,edx                   ; AND(And_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 23 c2
000fh mov [r8],al                   ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),AL]             encoding(3 bytes) = 41 88 00
0012h mov rax,r8                    ; MOV(Mov_r64_rm64) [RAX,R8]                           encoding(3 bytes) = 49 8b c0
0015h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> andBytes => new byte[22]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBE,0x01,0x48,0x0F,0xBE,0x12,0x23,0xC2,0x41,0x88,0x00,0x49,0x8B,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref byte and(in byte lhs, in byte rhs, ref byte dst)
; location: [7FFC872C78C0h, 7FFC872C78D3h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,byte ptr [rcx]      ; MOVZX(Movzx_r32_rm8) [EAX,mem(8u,RCX:br,DS:sr)]      encoding(3 bytes) = 0f b6 01
0008h movzx edx,byte ptr [rdx]      ; MOVZX(Movzx_r32_rm8) [EDX,mem(8u,RDX:br,DS:sr)]      encoding(3 bytes) = 0f b6 12
000bh and eax,edx                   ; AND(And_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 23 c2
000dh mov [r8],al                   ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),AL]             encoding(3 bytes) = 41 88 00
0010h mov rax,r8                    ; MOV(Mov_r64_rm64) [RAX,R8]                           encoding(3 bytes) = 49 8b c0
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> andBytes => new byte[20]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0x01,0x0F,0xB6,0x12,0x23,0xC2,0x41,0x88,0x00,0x49,0x8B,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref short and(in short lhs, in short rhs, ref short dst)
; location: [7FFC872C78F0h, 7FFC872C7906h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,word ptr [rcx]      ; MOVSX(Movsx_r64_rm16) [RAX,mem(16i,RCX:br,DS:sr)]    encoding(4 bytes) = 48 0f bf 01
0009h movsx rdx,word ptr [rdx]      ; MOVSX(Movsx_r64_rm16) [RDX,mem(16i,RDX:br,DS:sr)]    encoding(4 bytes) = 48 0f bf 12
000dh and eax,edx                   ; AND(And_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 23 c2
000fh mov [r8],ax                   ; MOV(Mov_rm16_r16) [mem(16u,R8:br,DS:sr),AX]          encoding(4 bytes) = 66 41 89 00
0013h mov rax,r8                    ; MOV(Mov_r64_rm64) [RAX,R8]                           encoding(3 bytes) = 49 8b c0
0016h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> andBytes => new byte[23]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBF,0x01,0x48,0x0F,0xBF,0x12,0x23,0xC2,0x66,0x41,0x89,0x00,0x49,0x8B,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref ushort and(in ushort lhs, in ushort rhs, ref ushort dst)
; location: [7FFC872C7920h, 7FFC872C7934h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,word ptr [rcx]      ; MOVZX(Movzx_r32_rm16) [EAX,mem(16u,RCX:br,DS:sr)]    encoding(3 bytes) = 0f b7 01
0008h movzx edx,word ptr [rdx]      ; MOVZX(Movzx_r32_rm16) [EDX,mem(16u,RDX:br,DS:sr)]    encoding(3 bytes) = 0f b7 12
000bh and eax,edx                   ; AND(And_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 23 c2
000dh mov [r8],ax                   ; MOV(Mov_rm16_r16) [mem(16u,R8:br,DS:sr),AX]          encoding(4 bytes) = 66 41 89 00
0011h mov rax,r8                    ; MOV(Mov_r64_rm64) [RAX,R8]                           encoding(3 bytes) = 49 8b c0
0014h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> andBytes => new byte[21]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB7,0x01,0x0F,0xB7,0x12,0x23,0xC2,0x66,0x41,0x89,0x00,0x49,0x8B,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref int and(in int lhs, in int rhs, ref int dst)
; location: [7FFC872C7950h, 7FFC872C795Fh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov eax,[rcx]                 ; MOV(Mov_r32_rm32) [EAX,mem(32u,RCX:br,DS:sr)]        encoding(2 bytes) = 8b 01
0007h and eax,[rdx]                 ; AND(And_r32_rm32) [EAX,mem(32u,RDX:br,DS:sr)]        encoding(2 bytes) = 23 02
0009h mov [r8],eax                  ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EAX]         encoding(3 bytes) = 41 89 00
000ch mov rax,r8                    ; MOV(Mov_r64_rm64) [RAX,R8]                           encoding(3 bytes) = 49 8b c0
000fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> andBytes => new byte[16]{0x0F,0x1F,0x44,0x00,0x00,0x8B,0x01,0x23,0x02,0x41,0x89,0x00,0x49,0x8B,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref uint and(in uint lhs, in uint rhs, ref uint dst)
; location: [7FFC872C7970h, 7FFC872C797Fh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov eax,[rcx]                 ; MOV(Mov_r32_rm32) [EAX,mem(32u,RCX:br,DS:sr)]        encoding(2 bytes) = 8b 01
0007h and eax,[rdx]                 ; AND(And_r32_rm32) [EAX,mem(32u,RDX:br,DS:sr)]        encoding(2 bytes) = 23 02
0009h mov [r8],eax                  ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EAX]         encoding(3 bytes) = 41 89 00
000ch mov rax,r8                    ; MOV(Mov_r64_rm64) [RAX,R8]                           encoding(3 bytes) = 49 8b c0
000fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> andBytes => new byte[16]{0x0F,0x1F,0x44,0x00,0x00,0x8B,0x01,0x23,0x02,0x41,0x89,0x00,0x49,0x8B,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref long and(in long lhs, in long rhs, ref long dst)
; location: [7FFC872C7990h, 7FFC872C79A1h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,[rcx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 01
0008h and rax,[rdx]                 ; AND(And_r64_rm64) [RAX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 23 02
000bh mov [r8],rax                  ; MOV(Mov_rm64_r64) [mem(64u,R8:br,DS:sr),RAX]         encoding(3 bytes) = 49 89 00
000eh mov rax,r8                    ; MOV(Mov_r64_rm64) [RAX,R8]                           encoding(3 bytes) = 49 8b c0
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> andBytes => new byte[18]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x01,0x48,0x23,0x02,0x49,0x89,0x00,0x49,0x8B,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref ulong and(in ulong lhs, in ulong rhs, ref ulong dst)
; location: [7FFC872C79C0h, 7FFC872C79D1h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,[rcx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 01
0008h and rax,[rdx]                 ; AND(And_r64_rm64) [RAX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 23 02
000bh mov [r8],rax                  ; MOV(Mov_rm64_r64) [mem(64u,R8:br,DS:sr),RAX]         encoding(3 bytes) = 49 89 00
000eh mov rax,r8                    ; MOV(Mov_r64_rm64) [RAX,R8]                           encoding(3 bytes) = 49 8b c0
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> andBytes => new byte[18]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x01,0x48,0x23,0x02,0x49,0x89,0x00,0x49,0x8B,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref float and(in float lhs, in float rhs, ref float dst)
; location: [7FFC872C79F0h, 7FFC872C7A29h]
0000h sub rsp,18h                   ; SUB(Sub_rm64_imm8) [RSP,18h:imm64]                   encoding(4 bytes) = 48 83 ec 18
0004h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0007h vmovss xmm0,dword ptr [rcx]   ; VMOVSS(VEX_Vmovss_xmm_m32) [XMM0,mem(Float32,RCX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 10 01
000bh vmovss dword ptr [rsp+14h],xmm0; VMOVSS(VEX_Vmovss_m32_xmm) [mem(Float32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 11 44 24 14
0011h mov eax,[rsp+14h]             ; MOV(Mov_r32_rm32) [EAX,mem(32u,RSP:br,SS:sr)]        encoding(4 bytes) = 8b 44 24 14
0015h vmovss xmm0,dword ptr [rdx]   ; VMOVSS(VEX_Vmovss_xmm_m32) [XMM0,mem(Float32,RDX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 10 02
0019h vmovss dword ptr [rsp+10h],xmm0; VMOVSS(VEX_Vmovss_m32_xmm) [mem(Float32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 11 44 24 10
001fh and eax,[rsp+10h]             ; AND(And_r32_rm32) [EAX,mem(32u,RSP:br,SS:sr)]        encoding(4 bytes) = 23 44 24 10
0023h mov [rsp+0Ch],eax             ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),EAX]        encoding(4 bytes) = 89 44 24 0c
0027h vmovss xmm0,dword ptr [rsp+0Ch]; VMOVSS(VEX_Vmovss_xmm_m32) [XMM0,mem(Float32,RSP:br,SS:sr)] encoding(VEX, 6 bytes) = c5 fa 10 44 24 0c
002dh vmovss dword ptr [r8],xmm0    ; VMOVSS(VEX_Vmovss_m32_xmm) [mem(Float32,R8:br,DS:sr),XMM0] encoding(VEX, 5 bytes) = c4 c1 7a 11 00
0032h mov rax,r8                    ; MOV(Mov_r64_rm64) [RAX,R8]                           encoding(3 bytes) = 49 8b c0
0035h add rsp,18h                   ; ADD(Add_rm64_imm8) [RSP,18h:imm64]                   encoding(4 bytes) = 48 83 c4 18
0039h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> andBytes => new byte[58]{0x48,0x83,0xEC,0x18,0xC5,0xF8,0x77,0xC5,0xFA,0x10,0x01,0xC5,0xFA,0x11,0x44,0x24,0x14,0x8B,0x44,0x24,0x14,0xC5,0xFA,0x10,0x02,0xC5,0xFA,0x11,0x44,0x24,0x10,0x23,0x44,0x24,0x10,0x89,0x44,0x24,0x0C,0xC5,0xFA,0x10,0x44,0x24,0x0C,0xC4,0xC1,0x7A,0x11,0x00,0x49,0x8B,0xC0,0x48,0x83,0xC4,0x18,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref double and(in double lhs, in double rhs, ref double dst)
; location: [7FFC872C7A50h, 7FFC872C7A8Ah]
0000h sub rsp,18h                   ; SUB(Sub_rm64_imm8) [RSP,18h:imm64]                   encoding(4 bytes) = 48 83 ec 18
0004h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0007h vmovsd xmm0,qword ptr [rcx]   ; VMOVSD(VEX_Vmovsd_xmm_m64) [XMM0,mem(Float64,RCX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fb 10 01
000bh vmovsd qword ptr [rsp+10h],xmm0; VMOVSD(VEX_Vmovsd_m64_xmm) [mem(Float64,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fb 11 44 24 10
0011h mov rax,[rsp+10h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 10
0016h vmovsd xmm0,qword ptr [rdx]   ; VMOVSD(VEX_Vmovsd_xmm_m64) [XMM0,mem(Float64,RDX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fb 10 02
001ah vmovsd qword ptr [rsp+8],xmm0 ; VMOVSD(VEX_Vmovsd_m64_xmm) [mem(Float64,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fb 11 44 24 08
0020h and rax,[rsp+8]               ; AND(And_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 23 44 24 08
0025h mov [rsp],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(4 bytes) = 48 89 04 24
0029h vmovsd xmm0,qword ptr [rsp]   ; VMOVSD(VEX_Vmovsd_xmm_m64) [XMM0,mem(Float64,RSP:br,SS:sr)] encoding(VEX, 5 bytes) = c5 fb 10 04 24
002eh vmovsd qword ptr [r8],xmm0    ; VMOVSD(VEX_Vmovsd_m64_xmm) [mem(Float64,R8:br,DS:sr),XMM0] encoding(VEX, 5 bytes) = c4 c1 7b 11 00
0033h mov rax,r8                    ; MOV(Mov_r64_rm64) [RAX,R8]                           encoding(3 bytes) = 49 8b c0
0036h add rsp,18h                   ; ADD(Add_rm64_imm8) [RSP,18h:imm64]                   encoding(4 bytes) = 48 83 c4 18
003ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> andBytes => new byte[59]{0x48,0x83,0xEC,0x18,0xC5,0xF8,0x77,0xC5,0xFB,0x10,0x01,0xC5,0xFB,0x11,0x44,0x24,0x10,0x48,0x8B,0x44,0x24,0x10,0xC5,0xFB,0x10,0x02,0xC5,0xFB,0x11,0x44,0x24,0x08,0x48,0x23,0x44,0x24,0x08,0x48,0x89,0x04,0x24,0xC5,0xFB,0x10,0x04,0x24,0xC4,0xC1,0x7B,0x11,0x00,0x49,0x8B,0xC0,0x48,0x83,0xC4,0x18,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref sbyte and(ref sbyte lhs, sbyte rhs)
; location: [7FFC872C7AB0h, 7FFC872C7ABEh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,dl                  ; MOVSX(Movsx_r64_rm8) [RAX,DL]                        encoding(4 bytes) = 48 0f be c2
0009h and [rcx],al                  ; AND(And_rm8_r8) [mem(8u,RCX:br,DS:sr),AL]            encoding(2 bytes) = 20 01
000bh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> andBytes => new byte[15]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBE,0xC2,0x20,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref byte and(ref byte lhs, byte rhs)
; location: [7FFC872C7AD0h, 7FFC872C7ADDh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,dl                  ; MOVZX(Movzx_r32_rm8) [EAX,DL]                        encoding(3 bytes) = 0f b6 c2
0008h and [rcx],al                  ; AND(And_rm8_r8) [mem(8u,RCX:br,DS:sr),AL]            encoding(2 bytes) = 20 01
000ah mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> andBytes => new byte[14]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC2,0x20,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref short and(ref short lhs, short rhs)
; location: [7FFC872C7AF0h, 7FFC872C7AFFh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,dx                  ; MOVSX(Movsx_r64_rm16) [RAX,DX]                       encoding(4 bytes) = 48 0f bf c2
0009h and [rcx],ax                  ; AND(And_rm16_r16) [mem(16u,RCX:br,DS:sr),AX]         encoding(3 bytes) = 66 21 01
000ch mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> andBytes => new byte[16]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBF,0xC2,0x66,0x21,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref ushort and(ref ushort lhs, ushort rhs)
; location: [7FFC872C7B10h, 7FFC872C7B1Eh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,dx                  ; MOVZX(Movzx_r32_rm16) [EAX,DX]                       encoding(3 bytes) = 0f b7 c2
0008h and [rcx],ax                  ; AND(And_rm16_r16) [mem(16u,RCX:br,DS:sr),AX]         encoding(3 bytes) = 66 21 01
000bh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> andBytes => new byte[15]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB7,0xC2,0x66,0x21,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref int and(ref int lhs, int rhs)
; location: [7FFC872C7B30h, 7FFC872C7B3Ah]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h and [rcx],edx                 ; AND(And_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(2 bytes) = 21 11
0007h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> andBytes => new byte[11]{0x0F,0x1F,0x44,0x00,0x00,0x21,0x11,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref uint and(ref uint lhs, uint rhs)
; location: [7FFC872C7B50h, 7FFC872C7B5Ah]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h and [rcx],edx                 ; AND(And_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(2 bytes) = 21 11
0007h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> andBytes => new byte[11]{0x0F,0x1F,0x44,0x00,0x00,0x21,0x11,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref long and(ref long lhs, long rhs)
; location: [7FFC872C7B70h, 7FFC872C7B7Bh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h and [rcx],rdx                 ; AND(And_rm64_r64) [mem(64u,RCX:br,DS:sr),RDX]        encoding(3 bytes) = 48 21 11
0008h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> andBytes => new byte[12]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x21,0x11,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref ulong and(ref ulong lhs, ulong rhs)
; location: [7FFC872C7B90h, 7FFC872C7B9Bh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h and [rcx],rdx                 ; AND(And_rm64_r64) [mem(64u,RCX:br,DS:sr),RDX]        encoding(3 bytes) = 48 21 11
0008h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> andBytes => new byte[12]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x21,0x11,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref float and(ref float lhs, float rhs)
; location: [7FFC872C7BB0h, 7FFC872C7BE4h]
0000h sub rsp,18h                   ; SUB(Sub_rm64_imm8) [RSP,18h:imm64]                   encoding(4 bytes) = 48 83 ec 18
0004h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0007h vmovss xmm0,dword ptr [rcx]   ; VMOVSS(VEX_Vmovss_xmm_m32) [XMM0,mem(Float32,RCX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 10 01
000bh vmovss dword ptr [rsp+14h],xmm0; VMOVSS(VEX_Vmovss_m32_xmm) [mem(Float32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 11 44 24 14
0011h mov eax,[rsp+14h]             ; MOV(Mov_r32_rm32) [EAX,mem(32u,RSP:br,SS:sr)]        encoding(4 bytes) = 8b 44 24 14
0015h vmovss dword ptr [rsp+10h],xmm1; VMOVSS(VEX_Vmovss_m32_xmm) [mem(Float32,RSP:br,SS:sr),XMM1] encoding(VEX, 6 bytes) = c5 fa 11 4c 24 10
001bh and eax,[rsp+10h]             ; AND(And_r32_rm32) [EAX,mem(32u,RSP:br,SS:sr)]        encoding(4 bytes) = 23 44 24 10
001fh mov [rsp+0Ch],eax             ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),EAX]        encoding(4 bytes) = 89 44 24 0c
0023h vmovss xmm0,dword ptr [rsp+0Ch]; VMOVSS(VEX_Vmovss_xmm_m32) [XMM0,mem(Float32,RSP:br,SS:sr)] encoding(VEX, 6 bytes) = c5 fa 10 44 24 0c
0029h vmovss dword ptr [rcx],xmm0   ; VMOVSS(VEX_Vmovss_m32_xmm) [mem(Float32,RCX:br,DS:sr),XMM0] encoding(VEX, 4 bytes) = c5 fa 11 01
002dh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0030h add rsp,18h                   ; ADD(Add_rm64_imm8) [RSP,18h:imm64]                   encoding(4 bytes) = 48 83 c4 18
0034h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> andBytes => new byte[53]{0x48,0x83,0xEC,0x18,0xC5,0xF8,0x77,0xC5,0xFA,0x10,0x01,0xC5,0xFA,0x11,0x44,0x24,0x14,0x8B,0x44,0x24,0x14,0xC5,0xFA,0x11,0x4C,0x24,0x10,0x23,0x44,0x24,0x10,0x89,0x44,0x24,0x0C,0xC5,0xFA,0x10,0x44,0x24,0x0C,0xC5,0xFA,0x11,0x01,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x18,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref double and(ref double lhs, double rhs)
; location: [7FFC872C7C00h, 7FFC872C7C35h]
0000h sub rsp,18h                   ; SUB(Sub_rm64_imm8) [RSP,18h:imm64]                   encoding(4 bytes) = 48 83 ec 18
0004h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0007h vmovsd xmm0,qword ptr [rcx]   ; VMOVSD(VEX_Vmovsd_xmm_m64) [XMM0,mem(Float64,RCX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fb 10 01
000bh vmovsd qword ptr [rsp+10h],xmm0; VMOVSD(VEX_Vmovsd_m64_xmm) [mem(Float64,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fb 11 44 24 10
0011h mov rax,[rsp+10h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 10
0016h vmovsd qword ptr [rsp+8],xmm1 ; VMOVSD(VEX_Vmovsd_m64_xmm) [mem(Float64,RSP:br,SS:sr),XMM1] encoding(VEX, 6 bytes) = c5 fb 11 4c 24 08
001ch and rax,[rsp+8]               ; AND(And_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 23 44 24 08
0021h mov [rsp],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(4 bytes) = 48 89 04 24
0025h vmovsd xmm0,qword ptr [rsp]   ; VMOVSD(VEX_Vmovsd_xmm_m64) [XMM0,mem(Float64,RSP:br,SS:sr)] encoding(VEX, 5 bytes) = c5 fb 10 04 24
002ah vmovsd qword ptr [rcx],xmm0   ; VMOVSD(VEX_Vmovsd_m64_xmm) [mem(Float64,RCX:br,DS:sr),XMM0] encoding(VEX, 4 bytes) = c5 fb 11 01
002eh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0031h add rsp,18h                   ; ADD(Add_rm64_imm8) [RSP,18h:imm64]                   encoding(4 bytes) = 48 83 c4 18
0035h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> andBytes => new byte[54]{0x48,0x83,0xEC,0x18,0xC5,0xF8,0x77,0xC5,0xFB,0x10,0x01,0xC5,0xFB,0x11,0x44,0x24,0x10,0x48,0x8B,0x44,0x24,0x10,0xC5,0xFB,0x11,0x4C,0x24,0x08,0x48,0x23,0x44,0x24,0x08,0x48,0x89,0x04,0x24,0xC5,0xFB,0x10,0x04,0x24,0xC5,0xFB,0x11,0x01,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x18,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: byte avgz(byte lhs, byte rhs)
; location: [7FFC872C7C50h, 7FFC872C7C68h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0008h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
000bh mov ecx,eax                   ; MOV(Mov_r32_rm32) [ECX,EAX]                          encoding(2 bytes) = 8b c8
000dh and ecx,edx                   ; AND(And_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 23 ca
000fh xor eax,edx                   ; XOR(Xor_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 33 c2
0011h sar eax,1                     ; SAR(Sar_rm32_1) [EAX,1h:imm8]                        encoding(2 bytes) = d1 f8
0013h add eax,ecx                   ; ADD(Add_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 03 c1
0015h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0018h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> avgzBytes => new byte[25]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC1,0x0F,0xB6,0xD2,0x8B,0xC8,0x23,0xCA,0x33,0xC2,0xD1,0xF8,0x03,0xC1,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ushort avgz(ushort lhs, ushort rhs)
; location: [7FFC872C7C80h, 7FFC872C7C98h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cx                  ; MOVZX(Movzx_r32_rm16) [EAX,CX]                       encoding(3 bytes) = 0f b7 c1
0008h movzx edx,dx                  ; MOVZX(Movzx_r32_rm16) [EDX,DX]                       encoding(3 bytes) = 0f b7 d2
000bh mov ecx,eax                   ; MOV(Mov_r32_rm32) [ECX,EAX]                          encoding(2 bytes) = 8b c8
000dh and ecx,edx                   ; AND(And_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 23 ca
000fh xor eax,edx                   ; XOR(Xor_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 33 c2
0011h sar eax,1                     ; SAR(Sar_rm32_1) [EAX,1h:imm8]                        encoding(2 bytes) = d1 f8
0013h add eax,ecx                   ; ADD(Add_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 03 c1
0015h movzx eax,ax                  ; MOVZX(Movzx_r32_rm16) [EAX,AX]                       encoding(3 bytes) = 0f b7 c0
0018h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> avgzBytes => new byte[25]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB7,0xC1,0x0F,0xB7,0xD2,0x8B,0xC8,0x23,0xCA,0x33,0xC2,0xD1,0xF8,0x03,0xC1,0x0F,0xB7,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: uint avgz(uint lhs, uint rhs)
; location: [7FFC872C7CB0h, 7FFC872C7CBFh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov eax,ecx                   ; MOV(Mov_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 8b c1
0007h and eax,edx                   ; AND(And_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 23 c2
0009h xor edx,ecx                   ; XOR(Xor_r32_rm32) [EDX,ECX]                          encoding(2 bytes) = 33 d1
000bh shr edx,1                     ; SHR(Shr_rm32_1) [EDX,1h:imm8]                        encoding(2 bytes) = d1 ea
000dh add eax,edx                   ; ADD(Add_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 03 c2
000fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> avgzBytes => new byte[16]{0x0F,0x1F,0x44,0x00,0x00,0x8B,0xC1,0x23,0xC2,0x33,0xD1,0xD1,0xEA,0x03,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ulong avgz(ulong lhs, ulong rhs)
; location: [7FFC872C7CD0h, 7FFC872C7CE4h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0008h and rax,rdx                   ; AND(And_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 23 c2
000bh xor rdx,rcx                   ; XOR(Xor_r64_rm64) [RDX,RCX]                          encoding(3 bytes) = 48 33 d1
000eh shr rdx,1                     ; SHR(Shr_rm64_1) [RDX,1h:imm8]                        encoding(3 bytes) = 48 d1 ea
0011h add rax,rdx                   ; ADD(Add_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 03 c2
0014h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> avgzBytes => new byte[21]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0xC1,0x48,0x23,0xC2,0x48,0x33,0xD1,0x48,0xD1,0xEA,0x48,0x03,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref byte avgz(ref byte lhs, in byte rhs)
; location: [7FFC872C7D00h, 7FFC872C7D1Dh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,byte ptr [rcx]      ; MOVZX(Movzx_r32_rm8) [EAX,mem(8u,RCX:br,DS:sr)]      encoding(3 bytes) = 0f b6 01
0008h movzx edx,byte ptr [rdx]      ; MOVZX(Movzx_r32_rm8) [EDX,mem(8u,RDX:br,DS:sr)]      encoding(3 bytes) = 0f b6 12
000bh mov r8d,eax                   ; MOV(Mov_r32_rm32) [R8D,EAX]                          encoding(3 bytes) = 44 8b c0
000eh and r8d,edx                   ; AND(And_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 23 c2
0011h xor eax,edx                   ; XOR(Xor_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 33 c2
0013h sar eax,1                     ; SAR(Sar_rm32_1) [EAX,1h:imm8]                        encoding(2 bytes) = d1 f8
0015h add eax,r8d                   ; ADD(Add_r32_rm32) [EAX,R8D]                          encoding(3 bytes) = 41 03 c0
0018h mov [rcx],al                  ; MOV(Mov_rm8_r8) [mem(8u,RCX:br,DS:sr),AL]            encoding(2 bytes) = 88 01
001ah mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
001dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> avgzBytes => new byte[30]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0x01,0x0F,0xB6,0x12,0x44,0x8B,0xC0,0x44,0x23,0xC2,0x33,0xC2,0xD1,0xF8,0x41,0x03,0xC0,0x88,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref ushort avgz(ref ushort lhs, in ushort rhs)
; location: [7FFC872C7D30h, 7FFC872C7D4Eh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,word ptr [rcx]      ; MOVZX(Movzx_r32_rm16) [EAX,mem(16u,RCX:br,DS:sr)]    encoding(3 bytes) = 0f b7 01
0008h movzx edx,word ptr [rdx]      ; MOVZX(Movzx_r32_rm16) [EDX,mem(16u,RDX:br,DS:sr)]    encoding(3 bytes) = 0f b7 12
000bh mov r8d,eax                   ; MOV(Mov_r32_rm32) [R8D,EAX]                          encoding(3 bytes) = 44 8b c0
000eh and r8d,edx                   ; AND(And_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 23 c2
0011h xor eax,edx                   ; XOR(Xor_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 33 c2
0013h sar eax,1                     ; SAR(Sar_rm32_1) [EAX,1h:imm8]                        encoding(2 bytes) = d1 f8
0015h add eax,r8d                   ; ADD(Add_r32_rm32) [EAX,R8D]                          encoding(3 bytes) = 41 03 c0
0018h mov [rcx],ax                  ; MOV(Mov_rm16_r16) [mem(16u,RCX:br,DS:sr),AX]         encoding(3 bytes) = 66 89 01
001bh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
001eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> avgzBytes => new byte[31]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB7,0x01,0x0F,0xB7,0x12,0x44,0x8B,0xC0,0x44,0x23,0xC2,0x33,0xC2,0xD1,0xF8,0x41,0x03,0xC0,0x66,0x89,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref uint avgz(ref uint lhs, in uint rhs)
; location: [7FFC872C7D60h, 7FFC872C7D7Bh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov eax,[rcx]                 ; MOV(Mov_r32_rm32) [EAX,mem(32u,RCX:br,DS:sr)]        encoding(2 bytes) = 8b 01
0007h mov edx,[rdx]                 ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(2 bytes) = 8b 12
0009h mov r8d,eax                   ; MOV(Mov_r32_rm32) [R8D,EAX]                          encoding(3 bytes) = 44 8b c0
000ch and r8d,edx                   ; AND(And_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 23 c2
000fh xor eax,edx                   ; XOR(Xor_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 33 c2
0011h shr eax,1                     ; SHR(Shr_rm32_1) [EAX,1h:imm8]                        encoding(2 bytes) = d1 e8
0013h add eax,r8d                   ; ADD(Add_r32_rm32) [EAX,R8D]                          encoding(3 bytes) = 41 03 c0
0016h mov [rcx],eax                 ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EAX]        encoding(2 bytes) = 89 01
0018h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
001bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> avgzBytes => new byte[28]{0x0F,0x1F,0x44,0x00,0x00,0x8B,0x01,0x8B,0x12,0x44,0x8B,0xC0,0x44,0x23,0xC2,0x33,0xC2,0xD1,0xE8,0x41,0x03,0xC0,0x89,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref ulong avgz(ref ulong lhs, in ulong rhs)
; location: [7FFC872C7D90h, 7FFC872C7DB0h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,[rcx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 01
0008h mov rdx,[rdx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 12
000bh mov r8,rax                    ; MOV(Mov_r64_rm64) [R8,RAX]                           encoding(3 bytes) = 4c 8b c0
000eh and r8,rdx                    ; AND(And_r64_rm64) [R8,RDX]                           encoding(3 bytes) = 4c 23 c2
0011h xor rax,rdx                   ; XOR(Xor_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 33 c2
0014h shr rax,1                     ; SHR(Shr_rm64_1) [RAX,1h:imm8]                        encoding(3 bytes) = 48 d1 e8
0017h add rax,r8                    ; ADD(Add_r64_rm64) [RAX,R8]                           encoding(3 bytes) = 49 03 c0
001ah mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
001dh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0020h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> avgzBytes => new byte[33]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x01,0x48,0x8B,0x12,0x4C,0x8B,0xC0,0x4C,0x23,0xC2,0x48,0x33,0xC2,0x48,0xD1,0xE8,0x49,0x03,0xC0,0x48,0x89,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<byte> avgz(ReadOnlySpan<byte> lhs, ReadOnlySpan<byte> rhs)
; location: [7FFC872C7DD0h, 7FFC872C7EDBh]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push r13                      ; PUSH(Push_r64) [R13]                                 encoding(2 bytes) = 41 55
0006h push r12                      ; PUSH(Push_r64) [R12]                                 encoding(2 bytes) = 41 54
0008h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0009h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
000ah push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
000bh push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
000ch sub rsp,38h                   ; SUB(Sub_rm64_imm8) [RSP,38h:imm64]                   encoding(4 bytes) = 48 83 ec 38
0010h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0013h mov rdi,[r8]                  ; MOV(Mov_r64_rm64) [RDI,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 38
0016h mov ebx,[r8+8]                ; MOV(Mov_r32_rm32) [EBX,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 41 8b 58 08
001ah mov rbp,[rdx]                 ; MOV(Mov_r64_rm64) [RBP,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 2a
001dh mov r14d,[rdx+8]              ; MOV(Mov_r32_rm32) [R14D,mem(32u,RDX:br,DS:sr)]       encoding(4 bytes) = 44 8b 72 08
0021h mov r15d,70h                  ; MOV(Mov_r32_imm32) [R15D,70h:imm32]                  encoding(6 bytes) = 41 bf 70 00 00 00
0027h mov r12d,1                    ; MOV(Mov_r32_imm32) [R12D,1h:imm32]                   encoding(6 bytes) = 41 bc 01 00 00 00
002dh mov r13d,r14d                 ; MOV(Mov_r32_rm32) [R13D,R14D]                        encoding(3 bytes) = 45 8b ee
0030h mov eax,ebx                   ; MOV(Mov_r32_rm32) [EAX,EBX]                          encoding(2 bytes) = 8b c3
0032h cmp r14d,ebx                  ; CMP(Cmp_r32_rm32) [R14D,EBX]                         encoding(3 bytes) = 44 3b f3
0035h jne short 00aah               ; JNE(Jne_rel8_64) [AAh:jmp64]                         encoding(2 bytes) = 75 73
0037h movsxd rdx,r14d               ; MOVSXD(Movsxd_r64_rm32) [RDX,R14D]                   encoding(3 bytes) = 49 63 d6
003ah mov rcx,7FFC86BDEA10h         ; MOV(Mov_r64_imm64) [RCX,7ffc86bdea10h:imm64]         encoding(10 bytes) = 48 b9 10 ea bd 86 fc 7f 00 00
0044h call 7FFCE67394A0h            ; CALL(Call_rel32_64) [5F4716D0h:jmp64]                encoding(5 bytes) = e8 87 16 47 5f
0049h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
004dh mov eax,[rax+8]               ; MOV(Mov_r32_rm32) [EAX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 40 08
0050h xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
0052h test eax,eax                  ; TEST(Test_rm32_r32) [EAX,EAX]                        encoding(2 bytes) = 85 c0
0054h jle short 0090h               ; JLE(Jle_rel8_64) [90h:jmp64]                         encoding(2 bytes) = 7e 3a
0056h movsxd r8,edx                 ; MOVSXD(Movsxd_r64_rm32) [R8,EDX]                     encoding(3 bytes) = 4c 63 c2
0059h lea r9,[rcx+r8]               ; LEA(Lea_r64_m) [R9,mem(Unknown,RCX:br,DS:sr)]        encoding(4 bytes) = 4e 8d 0c 01
005dh cmp edx,r14d                  ; CMP(Cmp_r32_rm32) [EDX,R14D]                         encoding(3 bytes) = 41 3b d6
0060h jae near ptr 0106h            ; JAE(Jae_rel32_64) [106h:jmp64]                       encoding(6 bytes) = 0f 83 a0 00 00 00
0066h movzx r10d,byte ptr [r8+rbp]  ; MOVZX(Movzx_r32_rm8) [R10D,mem(8u,R8:br,DS:sr)]      encoding(5 bytes) = 45 0f b6 14 28
006bh cmp edx,ebx                   ; CMP(Cmp_r32_rm32) [EDX,EBX]                          encoding(2 bytes) = 3b d3
006dh jae near ptr 0106h            ; JAE(Jae_rel32_64) [106h:jmp64]                       encoding(6 bytes) = 0f 83 93 00 00 00
0073h movzx r8d,byte ptr [rdi+r8]   ; MOVZX(Movzx_r32_rm8) [R8D,mem(8u,RDI:br,DS:sr)]      encoding(5 bytes) = 46 0f b6 04 07
0078h mov r11d,r10d                 ; MOV(Mov_r32_rm32) [R11D,R10D]                        encoding(3 bytes) = 45 8b da
007bh and r11d,r8d                  ; AND(And_r32_rm32) [R11D,R8D]                         encoding(3 bytes) = 45 23 d8
007eh xor r8d,r10d                  ; XOR(Xor_r32_rm32) [R8D,R10D]                         encoding(3 bytes) = 45 33 c2
0081h sar r8d,1                     ; SAR(Sar_rm32_1) [R8D,1h:imm8]                        encoding(3 bytes) = 41 d1 f8
0084h add r8d,r11d                  ; ADD(Add_r32_rm32) [R8D,R11D]                         encoding(3 bytes) = 45 03 c3
0087h mov [r9],r8b                  ; MOV(Mov_rm8_r8) [mem(8u,R9:br,DS:sr),R8L]            encoding(3 bytes) = 45 88 01
008ah inc edx                       ; INC(Inc_rm32) [EDX]                                  encoding(2 bytes) = ff c2
008ch cmp edx,eax                   ; CMP(Cmp_r32_rm32) [EDX,EAX]                          encoding(2 bytes) = 3b d0
008eh jl short 0056h                ; JL(Jl_rel8_64) [56h:jmp64]                           encoding(2 bytes) = 7c c6
0090h mov [rsi],rcx                 ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(3 bytes) = 48 89 0e
0093h mov [rsi+8],eax               ; MOV(Mov_rm32_r32) [mem(32u,RSI:br,DS:sr),EAX]        encoding(3 bytes) = 89 46 08
0096h mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
0099h add rsp,38h                   ; ADD(Add_rm64_imm8) [RSP,38h:imm64]                   encoding(4 bytes) = 48 83 c4 38
009dh pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
009eh pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
009fh pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
00a0h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
00a1h pop r12                       ; POP(Pop_r64) [R12]                                   encoding(2 bytes) = 41 5c
00a3h pop r13                       ; POP(Pop_r64) [R13]                                   encoding(2 bytes) = 41 5d
00a5h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
00a7h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
00a9h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
00aah mov esi,eax                   ; MOV(Mov_r32_rm32) [ESI,EAX]                          encoding(2 bytes) = 8b f0
00ach mov ecx,909h                  ; MOV(Mov_r32_imm32) [ECX,909h:imm32]                  encoding(5 bytes) = b9 09 09 00 00
00b1h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00bbh call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F46BB50h:jmp64]                encoding(5 bytes) = e8 90 ba 46 5f
00c0h mov rdi,rax                   ; MOV(Mov_r64_rm64) [RDI,RAX]                          encoding(3 bytes) = 48 8b f8
00c3h mov ecx,913h                  ; MOV(Mov_r32_imm32) [ECX,913h:imm32]                  encoding(5 bytes) = b9 13 09 00 00
00c8h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00d2h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F46BB50h:jmp64]                encoding(5 bytes) = e8 79 ba 46 5f
00d7h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00dah lea r8,[rsp+30h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 30
00dfh mov [r8],r12b                 ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),R12L]           encoding(3 bytes) = 45 88 20
00e2h mov [r8+4],r15d               ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),R15D]        encoding(4 bytes) = 45 89 78 04
00e6h mov r8,rdi                    ; MOV(Mov_r64_rm64) [R8,RDI]                           encoding(3 bytes) = 4c 8b c7
00e9h mov ecx,r13d                  ; MOV(Mov_r32_rm32) [ECX,R13D]                         encoding(3 bytes) = 41 8b cd
00ech mov edx,esi                   ; MOV(Mov_r32_rm32) [EDX,ESI]                          encoding(2 bytes) = 8b d6
00eeh mov rax,[rsp+30h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 30
00f3h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00f8h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFC961A8h:jmp64]        encoding(5 bytes) = e8 ab 60 c9 ff
00fdh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
0100h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F44EB80h:jmp64]                encoding(5 bytes) = e8 7b ea 44 5f
0105h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
0106h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F59CFE0h:jmp64]                encoding(5 bytes) = e8 d5 ce 59 5f
010bh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> avgzBytes => new byte[268]{0x41,0x57,0x41,0x56,0x41,0x55,0x41,0x54,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x38,0x48,0x8B,0xF1,0x49,0x8B,0x38,0x41,0x8B,0x58,0x08,0x48,0x8B,0x2A,0x44,0x8B,0x72,0x08,0x41,0xBF,0x70,0x00,0x00,0x00,0x41,0xBC,0x01,0x00,0x00,0x00,0x45,0x8B,0xEE,0x8B,0xC3,0x44,0x3B,0xF3,0x75,0x73,0x49,0x63,0xD6,0x48,0xB9,0x10,0xEA,0xBD,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x87,0x16,0x47,0x5F,0x48,0x8D,0x48,0x10,0x8B,0x40,0x08,0x33,0xD2,0x85,0xC0,0x7E,0x3A,0x4C,0x63,0xC2,0x4E,0x8D,0x0C,0x01,0x41,0x3B,0xD6,0x0F,0x83,0xA0,0x00,0x00,0x00,0x45,0x0F,0xB6,0x14,0x28,0x3B,0xD3,0x0F,0x83,0x93,0x00,0x00,0x00,0x46,0x0F,0xB6,0x04,0x07,0x45,0x8B,0xDA,0x45,0x23,0xD8,0x45,0x33,0xC2,0x41,0xD1,0xF8,0x45,0x03,0xC3,0x45,0x88,0x01,0xFF,0xC2,0x3B,0xD0,0x7C,0xC6,0x48,0x89,0x0E,0x89,0x46,0x08,0x48,0x8B,0xC6,0x48,0x83,0xC4,0x38,0x5B,0x5D,0x5E,0x5F,0x41,0x5C,0x41,0x5D,0x41,0x5E,0x41,0x5F,0xC3,0x8B,0xF0,0xB9,0x09,0x09,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x90,0xBA,0x46,0x5F,0x48,0x8B,0xF8,0xB9,0x13,0x09,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x79,0xBA,0x46,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x30,0x45,0x88,0x20,0x45,0x89,0x78,0x04,0x4C,0x8B,0xC7,0x41,0x8B,0xCD,0x8B,0xD6,0x48,0x8B,0x44,0x24,0x30,0x48,0x89,0x44,0x24,0x20,0xE8,0xAB,0x60,0xC9,0xFF,0x48,0x8B,0xC8,0xE8,0x7B,0xEA,0x44,0x5F,0xCC,0xE8,0xD5,0xCE,0x59,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<byte> avgi(ReadOnlySpan<byte> lhs, ReadOnlySpan<byte> rhs)
; location: [7FFC872C7F00h, 7FFC872C800Bh]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push r13                      ; PUSH(Push_r64) [R13]                                 encoding(2 bytes) = 41 55
0006h push r12                      ; PUSH(Push_r64) [R12]                                 encoding(2 bytes) = 41 54
0008h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0009h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
000ah push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
000bh push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
000ch sub rsp,38h                   ; SUB(Sub_rm64_imm8) [RSP,38h:imm64]                   encoding(4 bytes) = 48 83 ec 38
0010h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0013h mov rdi,[r8]                  ; MOV(Mov_r64_rm64) [RDI,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 38
0016h mov ebx,[r8+8]                ; MOV(Mov_r32_rm32) [EBX,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 41 8b 58 08
001ah mov rbp,[rdx]                 ; MOV(Mov_r64_rm64) [RBP,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 2a
001dh mov r14d,[rdx+8]              ; MOV(Mov_r32_rm32) [R14D,mem(32u,RDX:br,DS:sr)]       encoding(4 bytes) = 44 8b 72 08
0021h mov r15d,78h                  ; MOV(Mov_r32_imm32) [R15D,78h:imm32]                  encoding(6 bytes) = 41 bf 78 00 00 00
0027h mov r12d,1                    ; MOV(Mov_r32_imm32) [R12D,1h:imm32]                   encoding(6 bytes) = 41 bc 01 00 00 00
002dh mov r13d,r14d                 ; MOV(Mov_r32_rm32) [R13D,R14D]                        encoding(3 bytes) = 45 8b ee
0030h mov eax,ebx                   ; MOV(Mov_r32_rm32) [EAX,EBX]                          encoding(2 bytes) = 8b c3
0032h cmp r14d,ebx                  ; CMP(Cmp_r32_rm32) [R14D,EBX]                         encoding(3 bytes) = 44 3b f3
0035h jne short 00aah               ; JNE(Jne_rel8_64) [AAh:jmp64]                         encoding(2 bytes) = 75 73
0037h movsxd rdx,r14d               ; MOVSXD(Movsxd_r64_rm32) [RDX,R14D]                   encoding(3 bytes) = 49 63 d6
003ah mov rcx,7FFC86BDEA10h         ; MOV(Mov_r64_imm64) [RCX,7ffc86bdea10h:imm64]         encoding(10 bytes) = 48 b9 10 ea bd 86 fc 7f 00 00
0044h call 7FFCE67394A0h            ; CALL(Call_rel32_64) [5F4715A0h:jmp64]                encoding(5 bytes) = e8 57 15 47 5f
0049h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
004dh mov eax,[rax+8]               ; MOV(Mov_r32_rm32) [EAX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 40 08
0050h xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
0052h test eax,eax                  ; TEST(Test_rm32_r32) [EAX,EAX]                        encoding(2 bytes) = 85 c0
0054h jle short 0090h               ; JLE(Jle_rel8_64) [90h:jmp64]                         encoding(2 bytes) = 7e 3a
0056h movsxd r8,edx                 ; MOVSXD(Movsxd_r64_rm32) [R8,EDX]                     encoding(3 bytes) = 4c 63 c2
0059h lea r9,[rcx+r8]               ; LEA(Lea_r64_m) [R9,mem(Unknown,RCX:br,DS:sr)]        encoding(4 bytes) = 4e 8d 0c 01
005dh cmp edx,r14d                  ; CMP(Cmp_r32_rm32) [EDX,R14D]                         encoding(3 bytes) = 41 3b d6
0060h jae near ptr 0106h            ; JAE(Jae_rel32_64) [106h:jmp64]                       encoding(6 bytes) = 0f 83 a0 00 00 00
0066h movzx r10d,byte ptr [r8+rbp]  ; MOVZX(Movzx_r32_rm8) [R10D,mem(8u,R8:br,DS:sr)]      encoding(5 bytes) = 45 0f b6 14 28
006bh cmp edx,ebx                   ; CMP(Cmp_r32_rm32) [EDX,EBX]                          encoding(2 bytes) = 3b d3
006dh jae near ptr 0106h            ; JAE(Jae_rel32_64) [106h:jmp64]                       encoding(6 bytes) = 0f 83 93 00 00 00
0073h movzx r8d,byte ptr [rdi+r8]   ; MOVZX(Movzx_r32_rm8) [R8D,mem(8u,RDI:br,DS:sr)]      encoding(5 bytes) = 46 0f b6 04 07
0078h mov r11d,r10d                 ; MOV(Mov_r32_rm32) [R11D,R10D]                        encoding(3 bytes) = 45 8b da
007bh or r11d,r8d                   ; OR(Or_r32_rm32) [R11D,R8D]                           encoding(3 bytes) = 45 0b d8
007eh xor r8d,r10d                  ; XOR(Xor_r32_rm32) [R8D,R10D]                         encoding(3 bytes) = 45 33 c2
0081h sar r8d,1                     ; SAR(Sar_rm32_1) [R8D,1h:imm8]                        encoding(3 bytes) = 41 d1 f8
0084h sub r11d,r8d                  ; SUB(Sub_r32_rm32) [R11D,R8D]                         encoding(3 bytes) = 45 2b d8
0087h mov [r9],r11b                 ; MOV(Mov_rm8_r8) [mem(8u,R9:br,DS:sr),R11L]           encoding(3 bytes) = 45 88 19
008ah inc edx                       ; INC(Inc_rm32) [EDX]                                  encoding(2 bytes) = ff c2
008ch cmp edx,eax                   ; CMP(Cmp_r32_rm32) [EDX,EAX]                          encoding(2 bytes) = 3b d0
008eh jl short 0056h                ; JL(Jl_rel8_64) [56h:jmp64]                           encoding(2 bytes) = 7c c6
0090h mov [rsi],rcx                 ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(3 bytes) = 48 89 0e
0093h mov [rsi+8],eax               ; MOV(Mov_rm32_r32) [mem(32u,RSI:br,DS:sr),EAX]        encoding(3 bytes) = 89 46 08
0096h mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
0099h add rsp,38h                   ; ADD(Add_rm64_imm8) [RSP,38h:imm64]                   encoding(4 bytes) = 48 83 c4 38
009dh pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
009eh pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
009fh pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
00a0h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
00a1h pop r12                       ; POP(Pop_r64) [R12]                                   encoding(2 bytes) = 41 5c
00a3h pop r13                       ; POP(Pop_r64) [R13]                                   encoding(2 bytes) = 41 5d
00a5h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
00a7h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
00a9h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
00aah mov esi,eax                   ; MOV(Mov_r32_rm32) [ESI,EAX]                          encoding(2 bytes) = 8b f0
00ach mov ecx,969h                  ; MOV(Mov_r32_imm32) [ECX,969h:imm32]                  encoding(5 bytes) = b9 69 09 00 00
00b1h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00bbh call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F46BA20h:jmp64]                encoding(5 bytes) = e8 60 b9 46 5f
00c0h mov rdi,rax                   ; MOV(Mov_r64_rm64) [RDI,RAX]                          encoding(3 bytes) = 48 8b f8
00c3h mov ecx,913h                  ; MOV(Mov_r32_imm32) [ECX,913h:imm32]                  encoding(5 bytes) = b9 13 09 00 00
00c8h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00d2h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F46BA20h:jmp64]                encoding(5 bytes) = e8 49 b9 46 5f
00d7h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00dah lea r8,[rsp+30h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 30
00dfh mov [r8],r12b                 ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),R12L]           encoding(3 bytes) = 45 88 20
00e2h mov [r8+4],r15d               ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),R15D]        encoding(4 bytes) = 45 89 78 04
00e6h mov r8,rdi                    ; MOV(Mov_r64_rm64) [R8,RDI]                           encoding(3 bytes) = 4c 8b c7
00e9h mov ecx,r13d                  ; MOV(Mov_r32_rm32) [ECX,R13D]                         encoding(3 bytes) = 41 8b cd
00ech mov edx,esi                   ; MOV(Mov_r32_rm32) [EDX,ESI]                          encoding(2 bytes) = 8b d6
00eeh mov rax,[rsp+30h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 30
00f3h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00f8h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFC96078h:jmp64]        encoding(5 bytes) = e8 7b 5f c9 ff
00fdh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
0100h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F44EA50h:jmp64]                encoding(5 bytes) = e8 4b e9 44 5f
0105h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
0106h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F59CEB0h:jmp64]                encoding(5 bytes) = e8 a5 cd 59 5f
010bh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> avgiBytes => new byte[268]{0x41,0x57,0x41,0x56,0x41,0x55,0x41,0x54,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x38,0x48,0x8B,0xF1,0x49,0x8B,0x38,0x41,0x8B,0x58,0x08,0x48,0x8B,0x2A,0x44,0x8B,0x72,0x08,0x41,0xBF,0x78,0x00,0x00,0x00,0x41,0xBC,0x01,0x00,0x00,0x00,0x45,0x8B,0xEE,0x8B,0xC3,0x44,0x3B,0xF3,0x75,0x73,0x49,0x63,0xD6,0x48,0xB9,0x10,0xEA,0xBD,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x57,0x15,0x47,0x5F,0x48,0x8D,0x48,0x10,0x8B,0x40,0x08,0x33,0xD2,0x85,0xC0,0x7E,0x3A,0x4C,0x63,0xC2,0x4E,0x8D,0x0C,0x01,0x41,0x3B,0xD6,0x0F,0x83,0xA0,0x00,0x00,0x00,0x45,0x0F,0xB6,0x14,0x28,0x3B,0xD3,0x0F,0x83,0x93,0x00,0x00,0x00,0x46,0x0F,0xB6,0x04,0x07,0x45,0x8B,0xDA,0x45,0x0B,0xD8,0x45,0x33,0xC2,0x41,0xD1,0xF8,0x45,0x2B,0xD8,0x45,0x88,0x19,0xFF,0xC2,0x3B,0xD0,0x7C,0xC6,0x48,0x89,0x0E,0x89,0x46,0x08,0x48,0x8B,0xC6,0x48,0x83,0xC4,0x38,0x5B,0x5D,0x5E,0x5F,0x41,0x5C,0x41,0x5D,0x41,0x5E,0x41,0x5F,0xC3,0x8B,0xF0,0xB9,0x69,0x09,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x60,0xB9,0x46,0x5F,0x48,0x8B,0xF8,0xB9,0x13,0x09,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x49,0xB9,0x46,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x30,0x45,0x88,0x20,0x45,0x89,0x78,0x04,0x4C,0x8B,0xC7,0x41,0x8B,0xCD,0x8B,0xD6,0x48,0x8B,0x44,0x24,0x30,0x48,0x89,0x44,0x24,0x20,0xE8,0x7B,0x5F,0xC9,0xFF,0x48,0x8B,0xC8,0xE8,0x4B,0xE9,0x44,0x5F,0xCC,0xE8,0xA5,0xCD,0x59,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<ushort> avgi(ReadOnlySpan<ushort> lhs, ReadOnlySpan<ushort> rhs)
; location: [7FFC872C8030h, 7FFC872C813Dh]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push r13                      ; PUSH(Push_r64) [R13]                                 encoding(2 bytes) = 41 55
0006h push r12                      ; PUSH(Push_r64) [R12]                                 encoding(2 bytes) = 41 54
0008h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0009h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
000ah push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
000bh push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
000ch sub rsp,38h                   ; SUB(Sub_rm64_imm8) [RSP,38h:imm64]                   encoding(4 bytes) = 48 83 ec 38
0010h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0013h mov rdi,[r8]                  ; MOV(Mov_r64_rm64) [RDI,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 38
0016h mov ebx,[r8+8]                ; MOV(Mov_r32_rm32) [EBX,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 41 8b 58 08
001ah mov rbp,[rdx]                 ; MOV(Mov_r64_rm64) [RBP,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 2a
001dh mov r14d,[rdx+8]              ; MOV(Mov_r32_rm32) [R14D,mem(32u,RDX:br,DS:sr)]       encoding(4 bytes) = 44 8b 72 08
0021h mov r15d,80h                  ; MOV(Mov_r32_imm32) [R15D,80h:imm32]                  encoding(6 bytes) = 41 bf 80 00 00 00
0027h mov r12d,1                    ; MOV(Mov_r32_imm32) [R12D,1h:imm32]                   encoding(6 bytes) = 41 bc 01 00 00 00
002dh mov r13d,r14d                 ; MOV(Mov_r32_rm32) [R13D,R14D]                        encoding(3 bytes) = 45 8b ee
0030h mov eax,ebx                   ; MOV(Mov_r32_rm32) [EAX,EBX]                          encoding(2 bytes) = 8b c3
0032h cmp r14d,ebx                  ; CMP(Cmp_r32_rm32) [R14D,EBX]                         encoding(3 bytes) = 44 3b f3
0035h jne short 00ach               ; JNE(Jne_rel8_64) [ACh:jmp64]                         encoding(2 bytes) = 75 75
0037h movsxd rdx,r14d               ; MOVSXD(Movsxd_r64_rm32) [RDX,R14D]                   encoding(3 bytes) = 49 63 d6
003ah mov rcx,7FFC870E5B50h         ; MOV(Mov_r64_imm64) [RCX,7ffc870e5b50h:imm64]         encoding(10 bytes) = 48 b9 50 5b 0e 87 fc 7f 00 00
0044h call 7FFCE67394A0h            ; CALL(Call_rel32_64) [5F471470h:jmp64]                encoding(5 bytes) = e8 27 14 47 5f
0049h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
004dh mov eax,[rax+8]               ; MOV(Mov_r32_rm32) [EAX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 40 08
0050h xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
0052h test eax,eax                  ; TEST(Test_rm32_r32) [EAX,EAX]                        encoding(2 bytes) = 85 c0
0054h jle short 0092h               ; JLE(Jle_rel8_64) [92h:jmp64]                         encoding(2 bytes) = 7e 3c
0056h movsxd r8,edx                 ; MOVSXD(Movsxd_r64_rm32) [R8,EDX]                     encoding(3 bytes) = 4c 63 c2
0059h lea r9,[rcx+r8*2]             ; LEA(Lea_r64_m) [R9,mem(Unknown,RCX:br,DS:sr)]        encoding(4 bytes) = 4e 8d 0c 41
005dh cmp edx,r14d                  ; CMP(Cmp_r32_rm32) [EDX,R14D]                         encoding(3 bytes) = 41 3b d6
0060h jae near ptr 0108h            ; JAE(Jae_rel32_64) [108h:jmp64]                       encoding(6 bytes) = 0f 83 a2 00 00 00
0066h movzx r10d,word ptr [rbp+r8*2]; MOVZX(Movzx_r32_rm16) [R10D,mem(16u,RBP:br,SS:sr)]   encoding(6 bytes) = 46 0f b7 54 45 00
006ch cmp edx,ebx                   ; CMP(Cmp_r32_rm32) [EDX,EBX]                          encoding(2 bytes) = 3b d3
006eh jae near ptr 0108h            ; JAE(Jae_rel32_64) [108h:jmp64]                       encoding(6 bytes) = 0f 83 94 00 00 00
0074h movzx r8d,word ptr [rdi+r8*2] ; MOVZX(Movzx_r32_rm16) [R8D,mem(16u,RDI:br,DS:sr)]    encoding(5 bytes) = 46 0f b7 04 47
0079h mov r11d,r10d                 ; MOV(Mov_r32_rm32) [R11D,R10D]                        encoding(3 bytes) = 45 8b da
007ch or r11d,r8d                   ; OR(Or_r32_rm32) [R11D,R8D]                           encoding(3 bytes) = 45 0b d8
007fh xor r8d,r10d                  ; XOR(Xor_r32_rm32) [R8D,R10D]                         encoding(3 bytes) = 45 33 c2
0082h sar r8d,1                     ; SAR(Sar_rm32_1) [R8D,1h:imm8]                        encoding(3 bytes) = 41 d1 f8
0085h sub r11d,r8d                  ; SUB(Sub_r32_rm32) [R11D,R8D]                         encoding(3 bytes) = 45 2b d8
0088h mov [r9],r11w                 ; MOV(Mov_rm16_r16) [mem(16u,R9:br,DS:sr),R11W]        encoding(4 bytes) = 66 45 89 19
008ch inc edx                       ; INC(Inc_rm32) [EDX]                                  encoding(2 bytes) = ff c2
008eh cmp edx,eax                   ; CMP(Cmp_r32_rm32) [EDX,EAX]                          encoding(2 bytes) = 3b d0
0090h jl short 0056h                ; JL(Jl_rel8_64) [56h:jmp64]                           encoding(2 bytes) = 7c c4
0092h mov [rsi],rcx                 ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(3 bytes) = 48 89 0e
0095h mov [rsi+8],eax               ; MOV(Mov_rm32_r32) [mem(32u,RSI:br,DS:sr),EAX]        encoding(3 bytes) = 89 46 08
0098h mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
009bh add rsp,38h                   ; ADD(Add_rm64_imm8) [RSP,38h:imm64]                   encoding(4 bytes) = 48 83 c4 38
009fh pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
00a0h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
00a1h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
00a2h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
00a3h pop r12                       ; POP(Pop_r64) [R12]                                   encoding(2 bytes) = 41 5c
00a5h pop r13                       ; POP(Pop_r64) [R13]                                   encoding(2 bytes) = 41 5d
00a7h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
00a9h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
00abh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
00ach mov esi,eax                   ; MOV(Mov_r32_rm32) [ESI,EAX]                          encoding(2 bytes) = 8b f0
00aeh mov ecx,969h                  ; MOV(Mov_r32_imm32) [ECX,969h:imm32]                  encoding(5 bytes) = b9 69 09 00 00
00b3h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00bdh call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F46B8F0h:jmp64]                encoding(5 bytes) = e8 2e b8 46 5f
00c2h mov rdi,rax                   ; MOV(Mov_r64_rm64) [RDI,RAX]                          encoding(3 bytes) = 48 8b f8
00c5h mov ecx,913h                  ; MOV(Mov_r32_imm32) [ECX,913h:imm32]                  encoding(5 bytes) = b9 13 09 00 00
00cah mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
00d4h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F46B8F0h:jmp64]                encoding(5 bytes) = e8 17 b8 46 5f
00d9h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00dch lea r8,[rsp+30h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 30
00e1h mov [r8],r12b                 ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),R12L]           encoding(3 bytes) = 45 88 20
00e4h mov [r8+4],r15d               ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),R15D]        encoding(4 bytes) = 45 89 78 04
00e8h mov r8,rdi                    ; MOV(Mov_r64_rm64) [R8,RDI]                           encoding(3 bytes) = 4c 8b c7
00ebh mov ecx,r13d                  ; MOV(Mov_r32_rm32) [ECX,R13D]                         encoding(3 bytes) = 41 8b cd
00eeh mov edx,esi                   ; MOV(Mov_r32_rm32) [EDX,ESI]                          encoding(2 bytes) = 8b d6
00f0h mov rax,[rsp+30h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 30
00f5h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00fah call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFC95F48h:jmp64]        encoding(5 bytes) = e8 49 5e c9 ff
00ffh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
0102h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F44E920h:jmp64]                encoding(5 bytes) = e8 19 e8 44 5f
0107h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
0108h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F59CD80h:jmp64]                encoding(5 bytes) = e8 73 cc 59 5f
010dh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> avgiBytes => new byte[270]{0x41,0x57,0x41,0x56,0x41,0x55,0x41,0x54,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x38,0x48,0x8B,0xF1,0x49,0x8B,0x38,0x41,0x8B,0x58,0x08,0x48,0x8B,0x2A,0x44,0x8B,0x72,0x08,0x41,0xBF,0x80,0x00,0x00,0x00,0x41,0xBC,0x01,0x00,0x00,0x00,0x45,0x8B,0xEE,0x8B,0xC3,0x44,0x3B,0xF3,0x75,0x75,0x49,0x63,0xD6,0x48,0xB9,0x50,0x5B,0x0E,0x87,0xFC,0x7F,0x00,0x00,0xE8,0x27,0x14,0x47,0x5F,0x48,0x8D,0x48,0x10,0x8B,0x40,0x08,0x33,0xD2,0x85,0xC0,0x7E,0x3C,0x4C,0x63,0xC2,0x4E,0x8D,0x0C,0x41,0x41,0x3B,0xD6,0x0F,0x83,0xA2,0x00,0x00,0x00,0x46,0x0F,0xB7,0x54,0x45,0x00,0x3B,0xD3,0x0F,0x83,0x94,0x00,0x00,0x00,0x46,0x0F,0xB7,0x04,0x47,0x45,0x8B,0xDA,0x45,0x0B,0xD8,0x45,0x33,0xC2,0x41,0xD1,0xF8,0x45,0x2B,0xD8,0x66,0x45,0x89,0x19,0xFF,0xC2,0x3B,0xD0,0x7C,0xC4,0x48,0x89,0x0E,0x89,0x46,0x08,0x48,0x8B,0xC6,0x48,0x83,0xC4,0x38,0x5B,0x5D,0x5E,0x5F,0x41,0x5C,0x41,0x5D,0x41,0x5E,0x41,0x5F,0xC3,0x8B,0xF0,0xB9,0x69,0x09,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x2E,0xB8,0x46,0x5F,0x48,0x8B,0xF8,0xB9,0x13,0x09,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x17,0xB8,0x46,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x30,0x45,0x88,0x20,0x45,0x89,0x78,0x04,0x4C,0x8B,0xC7,0x41,0x8B,0xCD,0x8B,0xD6,0x48,0x8B,0x44,0x24,0x30,0x48,0x89,0x44,0x24,0x20,0xE8,0x49,0x5E,0xC9,0xFF,0x48,0x8B,0xC8,0xE8,0x19,0xE8,0x44,0x5F,0xCC,0xE8,0x73,0xCC,0x59,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ulong avgz(ReadOnlySpan<ulong> src)
; location: [7FFC872C8170h, 7FFC872C81C8h]
0000h push rax                      ; PUSH(Push_r64) [RAX]                                 encoding(1 byte ) = 50
0001h xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0003h mov [rsp],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(4 bytes) = 48 89 04 24
0007h mov rdx,[rcx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 11
000ah mov ecx,[rcx+8]               ; MOV(Mov_r32_rm32) [ECX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 49 08
000dh test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
000fh ja short 0018h                ; JA(Ja_rel8_64) [18h:jmp64]                           encoding(2 bytes) = 77 07
0011h xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0013h add rsp,8                     ; ADD(Add_rm64_imm8) [RSP,8h:imm64]                    encoding(4 bytes) = 48 83 c4 08
0017h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0018h mov rax,[rdx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 02
001bh mov [rsp],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(4 bytes) = 48 89 04 24
001fh mov eax,1                     ; MOV(Mov_r32_imm32) [EAX,1h:imm32]                    encoding(5 bytes) = b8 01 00 00 00
0024h cmp ecx,1                     ; CMP(Cmp_rm32_imm8) [ECX,1h:imm32]                    encoding(3 bytes) = 83 f9 01
0027h jle short 0050h               ; JLE(Jle_rel8_64) [50h:jmp64]                         encoding(2 bytes) = 7e 27
0029h movsxd r8,eax                 ; MOVSXD(Movsxd_r64_rm32) [R8,EAX]                     encoding(3 bytes) = 4c 63 c0
002ch lea r8,[rdx+r8*8]             ; LEA(Lea_r64_m) [R8,mem(Unknown,RDX:br,DS:sr)]        encoding(4 bytes) = 4e 8d 04 c2
0030h mov r9,[rsp]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RSP:br,SS:sr)]         encoding(4 bytes) = 4c 8b 0c 24
0034h mov r8,[r8]                   ; MOV(Mov_r64_rm64) [R8,mem(64u,R8:br,DS:sr)]          encoding(3 bytes) = 4d 8b 00
0037h mov r10,r9                    ; MOV(Mov_r64_rm64) [R10,R9]                           encoding(3 bytes) = 4d 8b d1
003ah and r10,r8                    ; AND(And_r64_rm64) [R10,R8]                           encoding(3 bytes) = 4d 23 d0
003dh xor r8,r9                     ; XOR(Xor_r64_rm64) [R8,R9]                            encoding(3 bytes) = 4d 33 c1
0040h shr r8,1                      ; SHR(Shr_rm64_1) [R8,1h:imm8]                         encoding(3 bytes) = 49 d1 e8
0043h add r8,r10                    ; ADD(Add_r64_rm64) [R8,R10]                           encoding(3 bytes) = 4d 03 c2
0046h mov [rsp],r8                  ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),R8]         encoding(4 bytes) = 4c 89 04 24
004ah inc eax                       ; INC(Inc_rm32) [EAX]                                  encoding(2 bytes) = ff c0
004ch cmp eax,ecx                   ; CMP(Cmp_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 3b c1
004eh jl short 0029h                ; JL(Jl_rel8_64) [29h:jmp64]                           encoding(2 bytes) = 7c d9
0050h mov rax,[rsp]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(4 bytes) = 48 8b 04 24
0054h add rsp,8                     ; ADD(Add_rm64_imm8) [RSP,8h:imm64]                    encoding(4 bytes) = 48 83 c4 08
0058h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> avgzBytes => new byte[89]{0x50,0x33,0xC0,0x48,0x89,0x04,0x24,0x48,0x8B,0x11,0x8B,0x49,0x08,0x85,0xC9,0x77,0x07,0x33,0xC0,0x48,0x83,0xC4,0x08,0xC3,0x48,0x8B,0x02,0x48,0x89,0x04,0x24,0xB8,0x01,0x00,0x00,0x00,0x83,0xF9,0x01,0x7E,0x27,0x4C,0x63,0xC0,0x4E,0x8D,0x04,0xC2,0x4C,0x8B,0x0C,0x24,0x4D,0x8B,0x00,0x4D,0x8B,0xD1,0x4D,0x23,0xD0,0x4D,0x33,0xC1,0x49,0xD1,0xE8,0x4D,0x03,0xC2,0x4C,0x89,0x04,0x24,0xFF,0xC0,0x3B,0xC1,0x7C,0xD9,0x48,0x8B,0x04,0x24,0x48,0x83,0xC4,0x08,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: byte avgi(byte lhs, byte rhs)
; location: [7FFC872C81E0h, 7FFC872C81F8h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0008h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
000bh mov ecx,eax                   ; MOV(Mov_r32_rm32) [ECX,EAX]                          encoding(2 bytes) = 8b c8
000dh or ecx,edx                    ; OR(Or_r32_rm32) [ECX,EDX]                            encoding(2 bytes) = 0b ca
000fh xor eax,edx                   ; XOR(Xor_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 33 c2
0011h sar eax,1                     ; SAR(Sar_rm32_1) [EAX,1h:imm8]                        encoding(2 bytes) = d1 f8
0013h sub ecx,eax                   ; SUB(Sub_r32_rm32) [ECX,EAX]                          encoding(2 bytes) = 2b c8
0015h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0018h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> avgiBytes => new byte[25]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC1,0x0F,0xB6,0xD2,0x8B,0xC8,0x0B,0xCA,0x33,0xC2,0xD1,0xF8,0x2B,0xC8,0x0F,0xB6,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ushort avgi(ushort lhs, ushort rhs)
; location: [7FFC872C8210h, 7FFC872C8228h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cx                  ; MOVZX(Movzx_r32_rm16) [EAX,CX]                       encoding(3 bytes) = 0f b7 c1
0008h movzx edx,dx                  ; MOVZX(Movzx_r32_rm16) [EDX,DX]                       encoding(3 bytes) = 0f b7 d2
000bh mov ecx,eax                   ; MOV(Mov_r32_rm32) [ECX,EAX]                          encoding(2 bytes) = 8b c8
000dh or ecx,edx                    ; OR(Or_r32_rm32) [ECX,EDX]                            encoding(2 bytes) = 0b ca
000fh xor eax,edx                   ; XOR(Xor_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 33 c2
0011h sar eax,1                     ; SAR(Sar_rm32_1) [EAX,1h:imm8]                        encoding(2 bytes) = d1 f8
0013h sub ecx,eax                   ; SUB(Sub_r32_rm32) [ECX,EAX]                          encoding(2 bytes) = 2b c8
0015h movzx eax,cx                  ; MOVZX(Movzx_r32_rm16) [EAX,CX]                       encoding(3 bytes) = 0f b7 c1
0018h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> avgiBytes => new byte[25]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB7,0xC1,0x0F,0xB7,0xD2,0x8B,0xC8,0x0B,0xCA,0x33,0xC2,0xD1,0xF8,0x2B,0xC8,0x0F,0xB7,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: uint avgi(uint lhs, uint rhs)
; location: [7FFC872C8240h, 7FFC872C824Fh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov eax,ecx                   ; MOV(Mov_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 8b c1
0007h or eax,edx                    ; OR(Or_r32_rm32) [EAX,EDX]                            encoding(2 bytes) = 0b c2
0009h xor edx,ecx                   ; XOR(Xor_r32_rm32) [EDX,ECX]                          encoding(2 bytes) = 33 d1
000bh shr edx,1                     ; SHR(Shr_rm32_1) [EDX,1h:imm8]                        encoding(2 bytes) = d1 ea
000dh sub eax,edx                   ; SUB(Sub_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 2b c2
000fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> avgiBytes => new byte[16]{0x0F,0x1F,0x44,0x00,0x00,0x8B,0xC1,0x0B,0xC2,0x33,0xD1,0xD1,0xEA,0x2B,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ulong avgi(ulong lhs, ulong rhs)
; location: [7FFC872C8260h, 7FFC872C8274h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0008h or rax,rdx                    ; OR(Or_r64_rm64) [RAX,RDX]                            encoding(3 bytes) = 48 0b c2
000bh xor rdx,rcx                   ; XOR(Xor_r64_rm64) [RDX,RCX]                          encoding(3 bytes) = 48 33 d1
000eh shr rdx,1                     ; SHR(Shr_rm64_1) [RDX,1h:imm8]                        encoding(3 bytes) = 48 d1 ea
0011h sub rax,rdx                   ; SUB(Sub_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 2b c2
0014h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> avgiBytes => new byte[21]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0xC1,0x48,0x0B,0xC2,0x48,0x33,0xD1,0x48,0xD1,0xEA,0x48,0x2B,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: sbyte avg(ReadOnlySpan<sbyte> src)
; location: [7FFC872C8290h, 7FFC872C82E0h]
0000h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0004h nop                           ; NOP(Nopd)                                            encoding(1 byte ) = 90
0005h mov rax,[rcx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 01
0008h mov edx,[rcx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 51 08
000bh xor ecx,ecx                   ; XOR(Xor_r32_rm32) [ECX,ECX]                          encoding(2 bytes) = 33 c9
000dh xor r8d,r8d                   ; XOR(Xor_r32_rm32) [R8D,R8D]                          encoding(3 bytes) = 45 33 c0
0010h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0012h jle short 002fh               ; JLE(Jle_rel8_64) [2Fh:jmp64]                         encoding(2 bytes) = 7e 1b
0014h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0017h movsx r9,byte ptr [rax+r9]    ; MOVSX(Movsx_r64_rm8) [R9,mem(8i,RAX:br,DS:sr)]       encoding(5 bytes) = 4e 0f be 0c 08
001ch movsxd r9,r9d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R9D]                     encoding(3 bytes) = 4d 63 c9
001fh add rcx,r9                    ; ADD(Add_r64_rm64) [RCX,R9]                           encoding(3 bytes) = 49 03 c9
0022h jo short 004bh                ; JO(Jo_rel8_64) [4Bh:jmp64]                           encoding(2 bytes) = 70 27
0024h add r8d,1                     ; ADD(Add_rm32_imm8) [R8D,1h:imm32]                    encoding(4 bytes) = 41 83 c0 01
0028h jo short 004bh                ; JO(Jo_rel8_64) [4Bh:jmp64]                           encoding(2 bytes) = 70 21
002ah cmp r8d,edx                   ; CMP(Cmp_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 3b c2
002dh jl short 0014h                ; JL(Jl_rel8_64) [14h:jmp64]                           encoding(2 bytes) = 7c e5
002fh movsxd r8,edx                 ; MOVSXD(Movsxd_r64_rm32) [R8,EDX]                     encoding(3 bytes) = 4c 63 c2
0032h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0035h cqo                           ; CQO(Cqo)                                             encoding(2 bytes) = 48 99
0037h idiv r8                       ; IDIV(Idiv_rm64) [R8]                                 encoding(3 bytes) = 49 f7 f8
003ah cmp rax,7Fh                   ; CMP(Cmp_rm64_imm8) [RAX,7fh:imm64]                   encoding(4 bytes) = 48 83 f8 7f
003eh jg short 004bh                ; JG(Jg_rel8_64) [4Bh:jmp64]                           encoding(2 bytes) = 7f 0b
0040h cmp rax,0FFFFFFFFFFFFFF80h    ; CMP(Cmp_rm64_imm8) [RAX,ffffffffffffff80h:imm64]     encoding(4 bytes) = 48 83 f8 80
0044h jl short 004bh                ; JL(Jl_rel8_64) [4Bh:jmp64]                           encoding(2 bytes) = 7c 05
0046h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
004ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
004bh call 7FFCE6864C00h            ; CALL(Call_rel32_64) [5F59C970h:jmp64]                encoding(5 bytes) = e8 20 c9 59 5f
0050h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> avgBytes => new byte[81]{0x48,0x83,0xEC,0x28,0x90,0x48,0x8B,0x01,0x8B,0x51,0x08,0x33,0xC9,0x45,0x33,0xC0,0x85,0xD2,0x7E,0x1B,0x4D,0x63,0xC8,0x4E,0x0F,0xBE,0x0C,0x08,0x4D,0x63,0xC9,0x49,0x03,0xC9,0x70,0x27,0x41,0x83,0xC0,0x01,0x70,0x21,0x44,0x3B,0xC2,0x7C,0xE5,0x4C,0x63,0xC2,0x48,0x8B,0xC1,0x48,0x99,0x49,0xF7,0xF8,0x48,0x83,0xF8,0x7F,0x7F,0x0B,0x48,0x83,0xF8,0x80,0x7C,0x05,0x48,0x83,0xC4,0x28,0xC3,0xE8,0x20,0xC9,0x59,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: byte avg(ReadOnlySpan<byte> src)
; location: [7FFC872C8300h, 7FFC872C834Dh]
0000h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0004h nop                           ; NOP(Nopd)                                            encoding(1 byte ) = 90
0005h mov rax,[rcx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 01
0008h mov edx,[rcx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 51 08
000bh xor ecx,ecx                   ; XOR(Xor_r32_rm32) [ECX,ECX]                          encoding(2 bytes) = 33 c9
000dh xor r8d,r8d                   ; XOR(Xor_r32_rm32) [R8D,R8D]                          encoding(3 bytes) = 45 33 c0
0010h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0012h jle short 002ch               ; JLE(Jle_rel8_64) [2Ch:jmp64]                         encoding(2 bytes) = 7e 18
0014h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0017h movzx r9d,byte ptr [rax+r9]   ; MOVZX(Movzx_r32_rm8) [R9D,mem(8u,RAX:br,DS:sr)]      encoding(5 bytes) = 46 0f b6 0c 08
001ch add rcx,r9                    ; ADD(Add_r64_rm64) [RCX,R9]                           encoding(3 bytes) = 49 03 c9
001fh jb short 0048h                ; JB(Jb_rel8_64) [48h:jmp64]                           encoding(2 bytes) = 72 27
0021h add r8d,1                     ; ADD(Add_rm32_imm8) [R8D,1h:imm32]                    encoding(4 bytes) = 41 83 c0 01
0025h jo short 0048h                ; JO(Jo_rel8_64) [48h:jmp64]                           encoding(2 bytes) = 70 21
0027h cmp r8d,edx                   ; CMP(Cmp_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 3b c2
002ah jl short 0014h                ; JL(Jl_rel8_64) [14h:jmp64]                           encoding(2 bytes) = 7c e8
002ch test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
002eh jl short 0048h                ; JL(Jl_rel8_64) [48h:jmp64]                           encoding(2 bytes) = 7c 18
0030h mov r8d,edx                   ; MOV(Mov_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 8b c2
0033h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0036h xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
0038h div r8                        ; DIV(Div_rm64) [R8]                                   encoding(3 bytes) = 49 f7 f0
003bh cmp rax,0FFh                  ; CMP(Cmp_RAX_imm32) [RAX,ffh:imm64]                   encoding(6 bytes) = 48 3d ff 00 00 00
0041h ja short 0048h                ; JA(Ja_rel8_64) [48h:jmp64]                           encoding(2 bytes) = 77 05
0043h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
0047h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0048h call 7FFCE6864C00h            ; CALL(Call_rel32_64) [5F59C900h:jmp64]                encoding(5 bytes) = e8 b3 c8 59 5f
004dh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> avgBytes => new byte[78]{0x48,0x83,0xEC,0x28,0x90,0x48,0x8B,0x01,0x8B,0x51,0x08,0x33,0xC9,0x45,0x33,0xC0,0x85,0xD2,0x7E,0x18,0x4D,0x63,0xC8,0x46,0x0F,0xB6,0x0C,0x08,0x49,0x03,0xC9,0x72,0x27,0x41,0x83,0xC0,0x01,0x70,0x21,0x44,0x3B,0xC2,0x7C,0xE8,0x85,0xD2,0x7C,0x18,0x44,0x8B,0xC2,0x48,0x8B,0xC1,0x33,0xD2,0x49,0xF7,0xF0,0x48,0x3D,0xFF,0x00,0x00,0x00,0x77,0x05,0x48,0x83,0xC4,0x28,0xC3,0xE8,0xB3,0xC8,0x59,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: short avg(ReadOnlySpan<short> src)
; location: [7FFC872C8370h, 7FFC872C83C4h]
0000h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0004h nop                           ; NOP(Nopd)                                            encoding(1 byte ) = 90
0005h mov rax,[rcx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 01
0008h mov edx,[rcx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 51 08
000bh xor ecx,ecx                   ; XOR(Xor_r32_rm32) [ECX,ECX]                          encoding(2 bytes) = 33 c9
000dh xor r8d,r8d                   ; XOR(Xor_r32_rm32) [R8D,R8D]                          encoding(3 bytes) = 45 33 c0
0010h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0012h jle short 002fh               ; JLE(Jle_rel8_64) [2Fh:jmp64]                         encoding(2 bytes) = 7e 1b
0014h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0017h movsx r9,word ptr [rax+r9*2]  ; MOVSX(Movsx_r64_rm16) [R9,mem(16i,RAX:br,DS:sr)]     encoding(5 bytes) = 4e 0f bf 0c 48
001ch movsxd r9,r9d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R9D]                     encoding(3 bytes) = 4d 63 c9
001fh add rcx,r9                    ; ADD(Add_r64_rm64) [RCX,R9]                           encoding(3 bytes) = 49 03 c9
0022h jo short 004fh                ; JO(Jo_rel8_64) [4Fh:jmp64]                           encoding(2 bytes) = 70 2b
0024h add r8d,1                     ; ADD(Add_rm32_imm8) [R8D,1h:imm32]                    encoding(4 bytes) = 41 83 c0 01
0028h jo short 004fh                ; JO(Jo_rel8_64) [4Fh:jmp64]                           encoding(2 bytes) = 70 25
002ah cmp r8d,edx                   ; CMP(Cmp_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 3b c2
002dh jl short 0014h                ; JL(Jl_rel8_64) [14h:jmp64]                           encoding(2 bytes) = 7c e5
002fh movsxd r8,edx                 ; MOVSXD(Movsxd_r64_rm32) [R8,EDX]                     encoding(3 bytes) = 4c 63 c2
0032h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0035h cqo                           ; CQO(Cqo)                                             encoding(2 bytes) = 48 99
0037h idiv r8                       ; IDIV(Idiv_rm64) [R8]                                 encoding(3 bytes) = 49 f7 f8
003ah cmp rax,7FFFh                 ; CMP(Cmp_RAX_imm32) [RAX,7fffh:imm64]                 encoding(6 bytes) = 48 3d ff 7f 00 00
0040h jg short 004fh                ; JG(Jg_rel8_64) [4Fh:jmp64]                           encoding(2 bytes) = 7f 0d
0042h cmp rax,0FFFFFFFFFFFF8000h    ; CMP(Cmp_RAX_imm32) [RAX,ffffffffffff8000h:imm64]     encoding(6 bytes) = 48 3d 00 80 ff ff
0048h jl short 004fh                ; JL(Jl_rel8_64) [4Fh:jmp64]                           encoding(2 bytes) = 7c 05
004ah add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
004eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
004fh call 7FFCE6864C00h            ; CALL(Call_rel32_64) [5F59C890h:jmp64]                encoding(5 bytes) = e8 3c c8 59 5f
0054h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> avgBytes => new byte[85]{0x48,0x83,0xEC,0x28,0x90,0x48,0x8B,0x01,0x8B,0x51,0x08,0x33,0xC9,0x45,0x33,0xC0,0x85,0xD2,0x7E,0x1B,0x4D,0x63,0xC8,0x4E,0x0F,0xBF,0x0C,0x48,0x4D,0x63,0xC9,0x49,0x03,0xC9,0x70,0x2B,0x41,0x83,0xC0,0x01,0x70,0x25,0x44,0x3B,0xC2,0x7C,0xE5,0x4C,0x63,0xC2,0x48,0x8B,0xC1,0x48,0x99,0x49,0xF7,0xF8,0x48,0x3D,0xFF,0x7F,0x00,0x00,0x7F,0x0D,0x48,0x3D,0x00,0x80,0xFF,0xFF,0x7C,0x05,0x48,0x83,0xC4,0x28,0xC3,0xE8,0x3C,0xC8,0x59,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ushort avg(ReadOnlySpan<ushort> src)
; location: [7FFC872C83E0h, 7FFC872C842Dh]
0000h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0004h nop                           ; NOP(Nopd)                                            encoding(1 byte ) = 90
0005h mov rax,[rcx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 01
0008h mov edx,[rcx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 51 08
000bh xor ecx,ecx                   ; XOR(Xor_r32_rm32) [ECX,ECX]                          encoding(2 bytes) = 33 c9
000dh xor r8d,r8d                   ; XOR(Xor_r32_rm32) [R8D,R8D]                          encoding(3 bytes) = 45 33 c0
0010h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0012h jle short 002ch               ; JLE(Jle_rel8_64) [2Ch:jmp64]                         encoding(2 bytes) = 7e 18
0014h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0017h movzx r9d,word ptr [rax+r9*2] ; MOVZX(Movzx_r32_rm16) [R9D,mem(16u,RAX:br,DS:sr)]    encoding(5 bytes) = 46 0f b7 0c 48
001ch add rcx,r9                    ; ADD(Add_r64_rm64) [RCX,R9]                           encoding(3 bytes) = 49 03 c9
001fh jb short 0048h                ; JB(Jb_rel8_64) [48h:jmp64]                           encoding(2 bytes) = 72 27
0021h add r8d,1                     ; ADD(Add_rm32_imm8) [R8D,1h:imm32]                    encoding(4 bytes) = 41 83 c0 01
0025h jo short 0048h                ; JO(Jo_rel8_64) [48h:jmp64]                           encoding(2 bytes) = 70 21
0027h cmp r8d,edx                   ; CMP(Cmp_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 3b c2
002ah jl short 0014h                ; JL(Jl_rel8_64) [14h:jmp64]                           encoding(2 bytes) = 7c e8
002ch test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
002eh jl short 0048h                ; JL(Jl_rel8_64) [48h:jmp64]                           encoding(2 bytes) = 7c 18
0030h mov r8d,edx                   ; MOV(Mov_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 8b c2
0033h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0036h xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
0038h div r8                        ; DIV(Div_rm64) [R8]                                   encoding(3 bytes) = 49 f7 f0
003bh cmp rax,0FFFFh                ; CMP(Cmp_RAX_imm32) [RAX,ffffh:imm64]                 encoding(6 bytes) = 48 3d ff ff 00 00
0041h ja short 0048h                ; JA(Ja_rel8_64) [48h:jmp64]                           encoding(2 bytes) = 77 05
0043h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
0047h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0048h call 7FFCE6864C00h            ; CALL(Call_rel32_64) [5F59C820h:jmp64]                encoding(5 bytes) = e8 d3 c7 59 5f
004dh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> avgBytes => new byte[78]{0x48,0x83,0xEC,0x28,0x90,0x48,0x8B,0x01,0x8B,0x51,0x08,0x33,0xC9,0x45,0x33,0xC0,0x85,0xD2,0x7E,0x18,0x4D,0x63,0xC8,0x46,0x0F,0xB7,0x0C,0x48,0x49,0x03,0xC9,0x72,0x27,0x41,0x83,0xC0,0x01,0x70,0x21,0x44,0x3B,0xC2,0x7C,0xE8,0x85,0xD2,0x7C,0x18,0x44,0x8B,0xC2,0x48,0x8B,0xC1,0x33,0xD2,0x49,0xF7,0xF0,0x48,0x3D,0xFF,0xFF,0x00,0x00,0x77,0x05,0x48,0x83,0xC4,0x28,0xC3,0xE8,0xD3,0xC7,0x59,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: int avg(ReadOnlySpan<int> src)
; location: [7FFC872C8450h, 7FFC872C84A3h]
0000h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0004h nop                           ; NOP(Nopd)                                            encoding(1 byte ) = 90
0005h mov rax,[rcx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 01
0008h mov edx,[rcx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 51 08
000bh xor ecx,ecx                   ; XOR(Xor_r32_rm32) [ECX,ECX]                          encoding(2 bytes) = 33 c9
000dh xor r8d,r8d                   ; XOR(Xor_r32_rm32) [R8D,R8D]                          encoding(3 bytes) = 45 33 c0
0010h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0012h jle short 002eh               ; JLE(Jle_rel8_64) [2Eh:jmp64]                         encoding(2 bytes) = 7e 1a
0014h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0017h mov r9d,[rax+r9*4]            ; MOV(Mov_r32_rm32) [R9D,mem(32u,RAX:br,DS:sr)]        encoding(4 bytes) = 46 8b 0c 88
001bh movsxd r9,r9d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R9D]                     encoding(3 bytes) = 4d 63 c9
001eh add rcx,r9                    ; ADD(Add_r64_rm64) [RCX,R9]                           encoding(3 bytes) = 49 03 c9
0021h jo short 004eh                ; JO(Jo_rel8_64) [4Eh:jmp64]                           encoding(2 bytes) = 70 2b
0023h add r8d,1                     ; ADD(Add_rm32_imm8) [R8D,1h:imm32]                    encoding(4 bytes) = 41 83 c0 01
0027h jo short 004eh                ; JO(Jo_rel8_64) [4Eh:jmp64]                           encoding(2 bytes) = 70 25
0029h cmp r8d,edx                   ; CMP(Cmp_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 3b c2
002ch jl short 0014h                ; JL(Jl_rel8_64) [14h:jmp64]                           encoding(2 bytes) = 7c e6
002eh movsxd r8,edx                 ; MOVSXD(Movsxd_r64_rm32) [R8,EDX]                     encoding(3 bytes) = 4c 63 c2
0031h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0034h cqo                           ; CQO(Cqo)                                             encoding(2 bytes) = 48 99
0036h idiv r8                       ; IDIV(Idiv_rm64) [R8]                                 encoding(3 bytes) = 49 f7 f8
0039h cmp rax,7FFFFFFFh             ; CMP(Cmp_RAX_imm32) [RAX,7fffffffh:imm64]             encoding(6 bytes) = 48 3d ff ff ff 7f
003fh jg short 004eh                ; JG(Jg_rel8_64) [4Eh:jmp64]                           encoding(2 bytes) = 7f 0d
0041h cmp rax,0FFFFFFFF80000000h    ; CMP(Cmp_RAX_imm32) [RAX,ffffffff80000000h:imm64]     encoding(6 bytes) = 48 3d 00 00 00 80
0047h jl short 004eh                ; JL(Jl_rel8_64) [4Eh:jmp64]                           encoding(2 bytes) = 7c 05
0049h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
004dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
004eh call 7FFCE6864C00h            ; CALL(Call_rel32_64) [5F59C7B0h:jmp64]                encoding(5 bytes) = e8 5d c7 59 5f
0053h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> avgBytes => new byte[84]{0x48,0x83,0xEC,0x28,0x90,0x48,0x8B,0x01,0x8B,0x51,0x08,0x33,0xC9,0x45,0x33,0xC0,0x85,0xD2,0x7E,0x1A,0x4D,0x63,0xC8,0x46,0x8B,0x0C,0x88,0x4D,0x63,0xC9,0x49,0x03,0xC9,0x70,0x2B,0x41,0x83,0xC0,0x01,0x70,0x25,0x44,0x3B,0xC2,0x7C,0xE6,0x4C,0x63,0xC2,0x48,0x8B,0xC1,0x48,0x99,0x49,0xF7,0xF8,0x48,0x3D,0xFF,0xFF,0xFF,0x7F,0x7F,0x0D,0x48,0x3D,0x00,0x00,0x00,0x80,0x7C,0x05,0x48,0x83,0xC4,0x28,0xC3,0xE8,0x5D,0xC7,0x59,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: uint avg(ReadOnlySpan<uint> src)
; location: [7FFC872C84C0h, 7FFC872C850Dh]
0000h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0004h nop                           ; NOP(Nopd)                                            encoding(1 byte ) = 90
0005h mov rax,[rcx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 01
0008h mov edx,[rcx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 51 08
000bh xor ecx,ecx                   ; XOR(Xor_r32_rm32) [ECX,ECX]                          encoding(2 bytes) = 33 c9
000dh xor r8d,r8d                   ; XOR(Xor_r32_rm32) [R8D,R8D]                          encoding(3 bytes) = 45 33 c0
0010h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0012h jle short 002bh               ; JLE(Jle_rel8_64) [2Bh:jmp64]                         encoding(2 bytes) = 7e 17
0014h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0017h mov r9d,[rax+r9*4]            ; MOV(Mov_r32_rm32) [R9D,mem(32u,RAX:br,DS:sr)]        encoding(4 bytes) = 46 8b 0c 88
001bh add rcx,r9                    ; ADD(Add_r64_rm64) [RCX,R9]                           encoding(3 bytes) = 49 03 c9
001eh jb short 0048h                ; JB(Jb_rel8_64) [48h:jmp64]                           encoding(2 bytes) = 72 28
0020h add r8d,1                     ; ADD(Add_rm32_imm8) [R8D,1h:imm32]                    encoding(4 bytes) = 41 83 c0 01
0024h jo short 0048h                ; JO(Jo_rel8_64) [48h:jmp64]                           encoding(2 bytes) = 70 22
0026h cmp r8d,edx                   ; CMP(Cmp_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 3b c2
0029h jl short 0014h                ; JL(Jl_rel8_64) [14h:jmp64]                           encoding(2 bytes) = 7c e9
002bh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
002dh jl short 0048h                ; JL(Jl_rel8_64) [48h:jmp64]                           encoding(2 bytes) = 7c 19
002fh mov r8d,edx                   ; MOV(Mov_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 8b c2
0032h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0035h xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
0037h div r8                        ; DIV(Div_rm64) [R8]                                   encoding(3 bytes) = 49 f7 f0
003ah mov rdx,rax                   ; MOV(Mov_r64_rm64) [RDX,RAX]                          encoding(3 bytes) = 48 8b d0
003dh shr rdx,20h                   ; SHR(Shr_rm64_imm8) [RDX,20h:imm8]                    encoding(4 bytes) = 48 c1 ea 20
0041h jne short 0048h               ; JNE(Jne_rel8_64) [48h:jmp64]                         encoding(2 bytes) = 75 05
0043h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
0047h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0048h call 7FFCE6864C00h            ; CALL(Call_rel32_64) [5F59C740h:jmp64]                encoding(5 bytes) = e8 f3 c6 59 5f
004dh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> avgBytes => new byte[78]{0x48,0x83,0xEC,0x28,0x90,0x48,0x8B,0x01,0x8B,0x51,0x08,0x33,0xC9,0x45,0x33,0xC0,0x85,0xD2,0x7E,0x17,0x4D,0x63,0xC8,0x46,0x8B,0x0C,0x88,0x49,0x03,0xC9,0x72,0x28,0x41,0x83,0xC0,0x01,0x70,0x22,0x44,0x3B,0xC2,0x7C,0xE9,0x85,0xD2,0x7C,0x19,0x44,0x8B,0xC2,0x48,0x8B,0xC1,0x33,0xD2,0x49,0xF7,0xF0,0x48,0x8B,0xD0,0x48,0xC1,0xEA,0x20,0x75,0x05,0x48,0x83,0xC4,0x28,0xC3,0xE8,0xF3,0xC6,0x59,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: long avg(ReadOnlySpan<long> src)
; location: [7FFC872C8530h, 7FFC872C856Dh]
0000h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0004h nop                           ; NOP(Nopd)                                            encoding(1 byte ) = 90
0005h mov rax,[rcx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 01
0008h mov edx,[rcx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 51 08
000bh xor ecx,ecx                   ; XOR(Xor_r32_rm32) [ECX,ECX]                          encoding(2 bytes) = 33 c9
000dh xor r8d,r8d                   ; XOR(Xor_r32_rm32) [R8D,R8D]                          encoding(3 bytes) = 45 33 c0
0010h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0012h jle short 0028h               ; JLE(Jle_rel8_64) [28h:jmp64]                         encoding(2 bytes) = 7e 14
0014h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0017h add rcx,[rax+r9*8]            ; ADD(Add_r64_rm64) [RCX,mem(64u,RAX:br,DS:sr)]        encoding(4 bytes) = 4a 03 0c c8
001bh jo short 0038h                ; JO(Jo_rel8_64) [38h:jmp64]                           encoding(2 bytes) = 70 1b
001dh add r8d,1                     ; ADD(Add_rm32_imm8) [R8D,1h:imm32]                    encoding(4 bytes) = 41 83 c0 01
0021h jo short 0038h                ; JO(Jo_rel8_64) [38h:jmp64]                           encoding(2 bytes) = 70 15
0023h cmp r8d,edx                   ; CMP(Cmp_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 3b c2
0026h jl short 0014h                ; JL(Jl_rel8_64) [14h:jmp64]                           encoding(2 bytes) = 7c ec
0028h movsxd r8,edx                 ; MOVSXD(Movsxd_r64_rm32) [R8,EDX]                     encoding(3 bytes) = 4c 63 c2
002bh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
002eh cqo                           ; CQO(Cqo)                                             encoding(2 bytes) = 48 99
0030h idiv r8                       ; IDIV(Idiv_rm64) [R8]                                 encoding(3 bytes) = 49 f7 f8
0033h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
0037h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0038h call 7FFCE6864C00h            ; CALL(Call_rel32_64) [5F59C6D0h:jmp64]                encoding(5 bytes) = e8 93 c6 59 5f
003dh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> avgBytes => new byte[62]{0x48,0x83,0xEC,0x28,0x90,0x48,0x8B,0x01,0x8B,0x51,0x08,0x33,0xC9,0x45,0x33,0xC0,0x85,0xD2,0x7E,0x14,0x4D,0x63,0xC8,0x4A,0x03,0x0C,0xC8,0x70,0x1B,0x41,0x83,0xC0,0x01,0x70,0x15,0x44,0x3B,0xC2,0x7C,0xEC,0x4C,0x63,0xC2,0x48,0x8B,0xC1,0x48,0x99,0x49,0xF7,0xF8,0x48,0x83,0xC4,0x28,0xC3,0xE8,0x93,0xC6,0x59,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ulong avg(ReadOnlySpan<ulong> src)
; location: [7FFC872C8590h, 7FFC872C85D1h]
0000h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0004h nop                           ; NOP(Nopd)                                            encoding(1 byte ) = 90
0005h mov rax,[rcx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 01
0008h mov edx,[rcx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 51 08
000bh xor ecx,ecx                   ; XOR(Xor_r32_rm32) [ECX,ECX]                          encoding(2 bytes) = 33 c9
000dh xor r8d,r8d                   ; XOR(Xor_r32_rm32) [R8D,R8D]                          encoding(3 bytes) = 45 33 c0
0010h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0012h jle short 0028h               ; JLE(Jle_rel8_64) [28h:jmp64]                         encoding(2 bytes) = 7e 14
0014h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0017h add rcx,[rax+r9*8]            ; ADD(Add_r64_rm64) [RCX,mem(64u,RAX:br,DS:sr)]        encoding(4 bytes) = 4a 03 0c c8
001bh jb short 003ch                ; JB(Jb_rel8_64) [3Ch:jmp64]                           encoding(2 bytes) = 72 1f
001dh add r8d,1                     ; ADD(Add_rm32_imm8) [R8D,1h:imm32]                    encoding(4 bytes) = 41 83 c0 01
0021h jo short 003ch                ; JO(Jo_rel8_64) [3Ch:jmp64]                           encoding(2 bytes) = 70 19
0023h cmp r8d,edx                   ; CMP(Cmp_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 3b c2
0026h jl short 0014h                ; JL(Jl_rel8_64) [14h:jmp64]                           encoding(2 bytes) = 7c ec
0028h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
002ah jl short 003ch                ; JL(Jl_rel8_64) [3Ch:jmp64]                           encoding(2 bytes) = 7c 10
002ch mov r8d,edx                   ; MOV(Mov_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 8b c2
002fh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0032h xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
0034h div r8                        ; DIV(Div_rm64) [R8]                                   encoding(3 bytes) = 49 f7 f0
0037h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
003bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
003ch call 7FFCE6864C00h            ; CALL(Call_rel32_64) [5F59C670h:jmp64]                encoding(5 bytes) = e8 2f c6 59 5f
0041h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> avgBytes => new byte[66]{0x48,0x83,0xEC,0x28,0x90,0x48,0x8B,0x01,0x8B,0x51,0x08,0x33,0xC9,0x45,0x33,0xC0,0x85,0xD2,0x7E,0x14,0x4D,0x63,0xC8,0x4A,0x03,0x0C,0xC8,0x72,0x1F,0x41,0x83,0xC0,0x01,0x70,0x19,0x44,0x3B,0xC2,0x7C,0xEC,0x85,0xD2,0x7C,0x10,0x44,0x8B,0xC2,0x48,0x8B,0xC1,0x33,0xD2,0x49,0xF7,0xF0,0x48,0x83,0xC4,0x28,0xC3,0xE8,0x2F,0xC6,0x59,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: float avg(ReadOnlySpan<float> src)
; location: [7FFC872C85F0h, 7FFC872C863Bh]
0000h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0004h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0007h mov rax,[rcx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 01
000ah mov edx,[rcx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 51 08
000dh vxorps xmm0,xmm0,xmm0         ; VXORPS(VEX_Vxorps_xmm_xmm_xmmm128) [XMM0,XMM0,XMM0]  encoding(VEX, 4 bytes) = c5 f8 57 c0
0011h xor ecx,ecx                   ; XOR(Xor_r32_rm32) [ECX,ECX]                          encoding(2 bytes) = 33 c9
0013h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0015h jle short 002dh               ; JLE(Jle_rel8_64) [2Dh:jmp64]                         encoding(2 bytes) = 7e 16
0017h movsxd r8,ecx                 ; MOVSXD(Movsxd_r64_rm32) [R8,ECX]                     encoding(3 bytes) = 4c 63 c1
001ah vcvtss2sd xmm1,xmm1,dword ptr [rax+r8*4]; VCVTSS2SD(VEX_Vcvtss2sd_xmm_xmm_xmmm32) [XMM1,XMM1,mem(Float32,RAX:br,DS:sr)] encoding(VEX, 6 bytes) = c4 a1 72 5a 0c 80
0020h vaddsd xmm0,xmm0,xmm1         ; VADDSD(VEX_Vaddsd_xmm_xmm_xmmm64) [XMM0,XMM0,XMM1]   encoding(VEX, 4 bytes) = c5 fb 58 c1
0024h add ecx,1                     ; ADD(Add_rm32_imm8) [ECX,1h:imm32]                    encoding(3 bytes) = 83 c1 01
0027h jo short 0046h                ; JO(Jo_rel8_64) [46h:jmp64]                           encoding(2 bytes) = 70 1d
0029h cmp ecx,edx                   ; CMP(Cmp_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 3b ca
002bh jl short 0017h                ; JL(Jl_rel8_64) [17h:jmp64]                           encoding(2 bytes) = 7c ea
002dh vxorps xmm1,xmm1,xmm1         ; VXORPS(VEX_Vxorps_xmm_xmm_xmmm128) [XMM1,XMM1,XMM1]  encoding(VEX, 4 bytes) = c5 f0 57 c9
0031h vcvtsi2ss xmm1,xmm1,edx       ; VCVTSI2SS(VEX_Vcvtsi2ss_xmm_xmm_rm32) [XMM1,XMM1,EDX] encoding(VEX, 4 bytes) = c5 f2 2a ca
0035h vcvtss2sd xmm1,xmm1,xmm1      ; VCVTSS2SD(VEX_Vcvtss2sd_xmm_xmm_xmmm32) [XMM1,XMM1,XMM1] encoding(VEX, 4 bytes) = c5 f2 5a c9
0039h vdivsd xmm0,xmm0,xmm1         ; VDIVSD(VEX_Vdivsd_xmm_xmm_xmmm64) [XMM0,XMM0,XMM1]   encoding(VEX, 4 bytes) = c5 fb 5e c1
003dh vcvtsd2ss xmm0,xmm0,xmm0      ; VCVTSD2SS(VEX_Vcvtsd2ss_xmm_xmm_xmmm64) [XMM0,XMM0,XMM0] encoding(VEX, 4 bytes) = c5 fb 5a c0
0041h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
0045h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0046h call 7FFCE6864C00h            ; CALL(Call_rel32_64) [5F59C610h:jmp64]                encoding(5 bytes) = e8 c5 c5 59 5f
004bh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> avgBytes => new byte[76]{0x48,0x83,0xEC,0x28,0xC5,0xF8,0x77,0x48,0x8B,0x01,0x8B,0x51,0x08,0xC5,0xF8,0x57,0xC0,0x33,0xC9,0x85,0xD2,0x7E,0x16,0x4C,0x63,0xC1,0xC4,0xA1,0x72,0x5A,0x0C,0x80,0xC5,0xFB,0x58,0xC1,0x83,0xC1,0x01,0x70,0x1D,0x3B,0xCA,0x7C,0xEA,0xC5,0xF0,0x57,0xC9,0xC5,0xF2,0x2A,0xCA,0xC5,0xF2,0x5A,0xC9,0xC5,0xFB,0x5E,0xC1,0xC5,0xFB,0x5A,0xC0,0x48,0x83,0xC4,0x28,0xC3,0xE8,0xC5,0xC5,0x59,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: double avg(ReadOnlySpan<double> src)
; location: [7FFC872C8660h, 7FFC872C869Fh]
0000h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0004h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0007h mov rax,[rcx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 01
000ah mov edx,[rcx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 51 08
000dh vxorps xmm0,xmm0,xmm0         ; VXORPS(VEX_Vxorps_xmm_xmm_xmmm128) [XMM0,XMM0,XMM0]  encoding(VEX, 4 bytes) = c5 f8 57 c0
0011h xor ecx,ecx                   ; XOR(Xor_r32_rm32) [ECX,ECX]                          encoding(2 bytes) = 33 c9
0013h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0015h jle short 0029h               ; JLE(Jle_rel8_64) [29h:jmp64]                         encoding(2 bytes) = 7e 12
0017h movsxd r8,ecx                 ; MOVSXD(Movsxd_r64_rm32) [R8,ECX]                     encoding(3 bytes) = 4c 63 c1
001ah vaddsd xmm0,xmm0,qword ptr [rax+r8*8]; VADDSD(VEX_Vaddsd_xmm_xmm_xmmm64) [XMM0,XMM0,mem(Float64,RAX:br,DS:sr)] encoding(VEX, 6 bytes) = c4 a1 7b 58 04 c0
0020h add ecx,1                     ; ADD(Add_rm32_imm8) [ECX,1h:imm32]                    encoding(3 bytes) = 83 c1 01
0023h jo short 003ah                ; JO(Jo_rel8_64) [3Ah:jmp64]                           encoding(2 bytes) = 70 15
0025h cmp ecx,edx                   ; CMP(Cmp_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 3b ca
0027h jl short 0017h                ; JL(Jl_rel8_64) [17h:jmp64]                           encoding(2 bytes) = 7c ee
0029h vxorps xmm1,xmm1,xmm1         ; VXORPS(VEX_Vxorps_xmm_xmm_xmmm128) [XMM1,XMM1,XMM1]  encoding(VEX, 4 bytes) = c5 f0 57 c9
002dh vcvtsi2sd xmm1,xmm1,edx       ; VCVTSI2SD(VEX_Vcvtsi2sd_xmm_xmm_rm32) [XMM1,XMM1,EDX] encoding(VEX, 4 bytes) = c5 f3 2a ca
0031h vdivsd xmm0,xmm0,xmm1         ; VDIVSD(VEX_Vdivsd_xmm_xmm_xmmm64) [XMM0,XMM0,XMM1]   encoding(VEX, 4 bytes) = c5 fb 5e c1
0035h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
0039h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
003ah call 7FFCE6864C00h            ; CALL(Call_rel32_64) [5F59C5A0h:jmp64]                encoding(5 bytes) = e8 61 c5 59 5f
003fh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> avgBytes => new byte[64]{0x48,0x83,0xEC,0x28,0xC5,0xF8,0x77,0x48,0x8B,0x01,0x8B,0x51,0x08,0xC5,0xF8,0x57,0xC0,0x33,0xC9,0x85,0xD2,0x7E,0x12,0x4C,0x63,0xC1,0xC4,0xA1,0x7B,0x58,0x04,0xC0,0x83,0xC1,0x01,0x70,0x15,0x3B,0xCA,0x7C,0xEE,0xC5,0xF0,0x57,0xC9,0xC5,0xF3,0x2A,0xCA,0xC5,0xFB,0x5E,0xC1,0x48,0x83,0xC4,0x28,0xC3,0xE8,0x61,0xC5,0x59,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool between(byte x, byte a, byte b)
; location: [7FFC872C86C0h, 7FFC872C86DEh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0008h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
000bh cmp eax,edx                   ; CMP(Cmp_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 3b c2
000dh jl short 001ch                ; JL(Jl_rel8_64) [1Ch:jmp64]                           encoding(2 bytes) = 7c 0d
000fh movzx edx,r8b                 ; MOVZX(Movzx_r32_rm8) [EDX,R8L]                       encoding(4 bytes) = 41 0f b6 d0
0013h cmp eax,edx                   ; CMP(Cmp_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 3b c2
0015h setle al                      ; SETLE(Setle_rm8) [AL]                                encoding(3 bytes) = 0f 9e c0
0018h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
001bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
001ch xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
001eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> betweenBytes => new byte[31]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC1,0x0F,0xB6,0xD2,0x3B,0xC2,0x7C,0x0D,0x41,0x0F,0xB6,0xD0,0x3B,0xC2,0x0F,0x9E,0xC0,0x0F,0xB6,0xC0,0xC3,0x33,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool between(sbyte x, sbyte a, sbyte b)
; location: [7FFC872C86F0h, 7FFC872C8710h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cl                  ; MOVSX(Movsx_r64_rm8) [RAX,CL]                        encoding(4 bytes) = 48 0f be c1
0009h movsx rdx,dl                  ; MOVSX(Movsx_r64_rm8) [RDX,DL]                        encoding(4 bytes) = 48 0f be d2
000dh cmp eax,edx                   ; CMP(Cmp_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 3b c2
000fh jl short 001eh                ; JL(Jl_rel8_64) [1Eh:jmp64]                           encoding(2 bytes) = 7c 0d
0011h movsx rdx,r8b                 ; MOVSX(Movsx_r64_rm8) [RDX,R8L]                       encoding(4 bytes) = 49 0f be d0
0015h cmp eax,edx                   ; CMP(Cmp_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 3b c2
0017h setle al                      ; SETLE(Setle_rm8) [AL]                                encoding(3 bytes) = 0f 9e c0
001ah movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
001dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
001eh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0020h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> betweenBytes => new byte[33]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBE,0xC1,0x48,0x0F,0xBE,0xD2,0x3B,0xC2,0x7C,0x0D,0x49,0x0F,0xBE,0xD0,0x3B,0xC2,0x0F,0x9E,0xC0,0x0F,0xB6,0xC0,0xC3,0x33,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool between(short x, short a, short b)
; location: [7FFC872C8730h, 7FFC872C8750h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cx                  ; MOVSX(Movsx_r64_rm16) [RAX,CX]                       encoding(4 bytes) = 48 0f bf c1
0009h movsx rdx,dx                  ; MOVSX(Movsx_r64_rm16) [RDX,DX]                       encoding(4 bytes) = 48 0f bf d2
000dh cmp eax,edx                   ; CMP(Cmp_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 3b c2
000fh jl short 001eh                ; JL(Jl_rel8_64) [1Eh:jmp64]                           encoding(2 bytes) = 7c 0d
0011h movsx rdx,r8w                 ; MOVSX(Movsx_r64_rm16) [RDX,R8W]                      encoding(4 bytes) = 49 0f bf d0
0015h cmp eax,edx                   ; CMP(Cmp_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 3b c2
0017h setle al                      ; SETLE(Setle_rm8) [AL]                                encoding(3 bytes) = 0f 9e c0
001ah movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
001dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
001eh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0020h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> betweenBytes => new byte[33]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBF,0xC1,0x48,0x0F,0xBF,0xD2,0x3B,0xC2,0x7C,0x0D,0x49,0x0F,0xBF,0xD0,0x3B,0xC2,0x0F,0x9E,0xC0,0x0F,0xB6,0xC0,0xC3,0x33,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool between(ushort x, ushort a, ushort b)
; location: [7FFC872C8770h, 7FFC872C878Eh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cx                  ; MOVZX(Movzx_r32_rm16) [EAX,CX]                       encoding(3 bytes) = 0f b7 c1
0008h movzx edx,dx                  ; MOVZX(Movzx_r32_rm16) [EDX,DX]                       encoding(3 bytes) = 0f b7 d2
000bh cmp eax,edx                   ; CMP(Cmp_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 3b c2
000dh jl short 001ch                ; JL(Jl_rel8_64) [1Ch:jmp64]                           encoding(2 bytes) = 7c 0d
000fh movzx edx,r8w                 ; MOVZX(Movzx_r32_rm16) [EDX,R8W]                      encoding(4 bytes) = 41 0f b7 d0
0013h cmp eax,edx                   ; CMP(Cmp_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 3b c2
0015h setle al                      ; SETLE(Setle_rm8) [AL]                                encoding(3 bytes) = 0f 9e c0
0018h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
001bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
001ch xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
001eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> betweenBytes => new byte[31]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB7,0xC1,0x0F,0xB7,0xD2,0x3B,0xC2,0x7C,0x0D,0x41,0x0F,0xB7,0xD0,0x3B,0xC2,0x0F,0x9E,0xC0,0x0F,0xB6,0xC0,0xC3,0x33,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool between(int x, int a, int b)
; location: [7FFC872C87A0h, 7FFC872C87B5h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h cmp ecx,edx                   ; CMP(Cmp_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 3b ca
0007h jl short 0013h                ; JL(Jl_rel8_64) [13h:jmp64]                           encoding(2 bytes) = 7c 0a
0009h cmp ecx,r8d                   ; CMP(Cmp_r32_rm32) [ECX,R8D]                          encoding(3 bytes) = 41 3b c8
000ch setle al                      ; SETLE(Setle_rm8) [AL]                                encoding(3 bytes) = 0f 9e c0
000fh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0012h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0013h xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0015h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> betweenBytes => new byte[22]{0x0F,0x1F,0x44,0x00,0x00,0x3B,0xCA,0x7C,0x0A,0x41,0x3B,0xC8,0x0F,0x9E,0xC0,0x0F,0xB6,0xC0,0xC3,0x33,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool between(uint x, uint a, uint b)
; location: [7FFC872C87D0h, 7FFC872C87E5h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h cmp ecx,edx                   ; CMP(Cmp_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 3b ca
0007h jb short 0013h                ; JB(Jb_rel8_64) [13h:jmp64]                           encoding(2 bytes) = 72 0a
0009h cmp ecx,r8d                   ; CMP(Cmp_r32_rm32) [ECX,R8D]                          encoding(3 bytes) = 41 3b c8
000ch setbe al                      ; SETBE(Setbe_rm8) [AL]                                encoding(3 bytes) = 0f 96 c0
000fh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0012h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0013h xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0015h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> betweenBytes => new byte[22]{0x0F,0x1F,0x44,0x00,0x00,0x3B,0xCA,0x72,0x0A,0x41,0x3B,0xC8,0x0F,0x96,0xC0,0x0F,0xB6,0xC0,0xC3,0x33,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool between(long x, long a, long b)
; location: [7FFC872C8800h, 7FFC872C8816h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h cmp rcx,rdx                   ; CMP(Cmp_r64_rm64) [RCX,RDX]                          encoding(3 bytes) = 48 3b ca
0008h jl short 0014h                ; JL(Jl_rel8_64) [14h:jmp64]                           encoding(2 bytes) = 7c 0a
000ah cmp rcx,r8                    ; CMP(Cmp_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 3b c8
000dh setle al                      ; SETLE(Setle_rm8) [AL]                                encoding(3 bytes) = 0f 9e c0
0010h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0014h xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0016h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> betweenBytes => new byte[23]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x3B,0xCA,0x7C,0x0A,0x49,0x3B,0xC8,0x0F,0x9E,0xC0,0x0F,0xB6,0xC0,0xC3,0x33,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool between(ulong x, ulong a, ulong b)
; location: [7FFC872C8830h, 7FFC872C8846h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h cmp rcx,rdx                   ; CMP(Cmp_r64_rm64) [RCX,RDX]                          encoding(3 bytes) = 48 3b ca
0008h jb short 0014h                ; JB(Jb_rel8_64) [14h:jmp64]                           encoding(2 bytes) = 72 0a
000ah cmp rcx,r8                    ; CMP(Cmp_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 3b c8
000dh setbe al                      ; SETBE(Setbe_rm8) [AL]                                encoding(3 bytes) = 0f 96 c0
0010h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0014h xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0016h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> betweenBytes => new byte[23]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x3B,0xCA,0x72,0x0A,0x49,0x3B,0xC8,0x0F,0x96,0xC0,0x0F,0xB6,0xC0,0xC3,0x33,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: sbyte dec(sbyte src)
; location: [7FFC872C8860h, 7FFC872C8873h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cl                  ; MOVSX(Movsx_r64_rm8) [RAX,CL]                        encoding(4 bytes) = 48 0f be c1
0009h dec eax                       ; DEC(Dec_rm32) [EAX]                                  encoding(2 bytes) = ff c8
000bh movsx rax,al                  ; MOVSX(Movsx_r64_rm8) [RAX,AL]                        encoding(4 bytes) = 48 0f be c0
000fh movsx rax,al                  ; MOVSX(Movsx_r64_rm8) [RAX,AL]                        encoding(4 bytes) = 48 0f be c0
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> decBytes => new byte[20]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBE,0xC1,0xFF,0xC8,0x48,0x0F,0xBE,0xC0,0x48,0x0F,0xBE,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: byte dec(byte src)
; location: [7FFC872C8890h, 7FFC872C88A0h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0008h dec eax                       ; DEC(Dec_rm32) [EAX]                                  encoding(2 bytes) = ff c8
000ah movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000dh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0010h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> decBytes => new byte[17]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC1,0xFF,0xC8,0x0F,0xB6,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: short dec(short src)
; location: [7FFC872C88C0h, 7FFC872C88D3h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cx                  ; MOVSX(Movsx_r64_rm16) [RAX,CX]                       encoding(4 bytes) = 48 0f bf c1
0009h dec eax                       ; DEC(Dec_rm32) [EAX]                                  encoding(2 bytes) = ff c8
000bh movsx rax,ax                  ; MOVSX(Movsx_r64_rm16) [RAX,AX]                       encoding(4 bytes) = 48 0f bf c0
000fh movsx rax,ax                  ; MOVSX(Movsx_r64_rm16) [RAX,AX]                       encoding(4 bytes) = 48 0f bf c0
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> decBytes => new byte[20]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBF,0xC1,0xFF,0xC8,0x48,0x0F,0xBF,0xC0,0x48,0x0F,0xBF,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ushort dec(ushort src)
; location: [7FFC872C88F0h, 7FFC872C8900h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cx                  ; MOVZX(Movzx_r32_rm16) [EAX,CX]                       encoding(3 bytes) = 0f b7 c1
0008h dec eax                       ; DEC(Dec_rm32) [EAX]                                  encoding(2 bytes) = ff c8
000ah movzx eax,ax                  ; MOVZX(Movzx_r32_rm16) [EAX,AX]                       encoding(3 bytes) = 0f b7 c0
000dh movzx eax,ax                  ; MOVZX(Movzx_r32_rm16) [EAX,AX]                       encoding(3 bytes) = 0f b7 c0
0010h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> decBytes => new byte[17]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB7,0xC1,0xFF,0xC8,0x0F,0xB7,0xC0,0x0F,0xB7,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: int dec(int src)
; location: [7FFC872C8920h, 7FFC872C8928h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h lea eax,[rcx-1]               ; LEA(Lea_r32_m) [EAX,mem(Unknown,RCX:br,DS:sr)]       encoding(3 bytes) = 8d 41 ff
0008h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> decBytes => new byte[9]{0x0F,0x1F,0x44,0x00,0x00,0x8D,0x41,0xFF,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: uint dec(uint src)
; location: [7FFC872C8940h, 7FFC872C8948h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h lea eax,[rcx-1]               ; LEA(Lea_r32_m) [EAX,mem(Unknown,RCX:br,DS:sr)]       encoding(3 bytes) = 8d 41 ff
0008h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> decBytes => new byte[9]{0x0F,0x1F,0x44,0x00,0x00,0x8D,0x41,0xFF,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: long dec(long src)
; location: [7FFC872C8960h, 7FFC872C8969h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h lea rax,[rcx-1]               ; LEA(Lea_r64_m) [RAX,mem(Unknown,RCX:br,DS:sr)]       encoding(4 bytes) = 48 8d 41 ff
0009h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> decBytes => new byte[10]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8D,0x41,0xFF,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ulong dec(ulong src)
; location: [7FFC872C8980h, 7FFC872C8989h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h lea rax,[rcx-1]               ; LEA(Lea_r64_m) [RAX,mem(Unknown,RCX:br,DS:sr)]       encoding(4 bytes) = 48 8d 41 ff
0009h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> decBytes => new byte[10]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8D,0x41,0xFF,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref sbyte dec(ref sbyte src)
; location: [7FFC872C89A0h, 7FFC872C89AAh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h dec byte ptr [rcx]            ; DEC(Dec_rm8) [mem(8u,RCX:br,DS:sr)]                  encoding(2 bytes) = fe 09
0007h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> decBytes => new byte[11]{0x0F,0x1F,0x44,0x00,0x00,0xFE,0x09,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref byte dec(ref byte src)
; location: [7FFC872C89C0h, 7FFC872C89CAh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h dec byte ptr [rcx]            ; DEC(Dec_rm8) [mem(8u,RCX:br,DS:sr)]                  encoding(2 bytes) = fe 09
0007h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> decBytes => new byte[11]{0x0F,0x1F,0x44,0x00,0x00,0xFE,0x09,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref short dec(ref short src)
; location: [7FFC872C89E0h, 7FFC872C89EBh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h dec word ptr [rcx]            ; DEC(Dec_rm16) [mem(16u,RCX:br,DS:sr)]                encoding(3 bytes) = 66 ff 09
0008h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> decBytes => new byte[12]{0x0F,0x1F,0x44,0x00,0x00,0x66,0xFF,0x09,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref ushort dec(ref ushort src)
; location: [7FFC872C8A00h, 7FFC872C8A0Bh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h dec word ptr [rcx]            ; DEC(Dec_rm16) [mem(16u,RCX:br,DS:sr)]                encoding(3 bytes) = 66 ff 09
0008h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> decBytes => new byte[12]{0x0F,0x1F,0x44,0x00,0x00,0x66,0xFF,0x09,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref int dec(ref int src)
; location: [7FFC872C8A20h, 7FFC872C8A2Ah]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h dec dword ptr [rcx]           ; DEC(Dec_rm32) [mem(32u,RCX:br,DS:sr)]                encoding(2 bytes) = ff 09
0007h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> decBytes => new byte[11]{0x0F,0x1F,0x44,0x00,0x00,0xFF,0x09,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref uint dec(ref uint src)
; location: [7FFC872C8A40h, 7FFC872C8A4Ah]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h dec dword ptr [rcx]           ; DEC(Dec_rm32) [mem(32u,RCX:br,DS:sr)]                encoding(2 bytes) = ff 09
0007h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> decBytes => new byte[11]{0x0F,0x1F,0x44,0x00,0x00,0xFF,0x09,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref long dec(ref long src)
; location: [7FFC872C8A60h, 7FFC872C8A6Bh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h dec qword ptr [rcx]           ; DEC(Dec_rm64) [mem(64u,RCX:br,DS:sr)]                encoding(3 bytes) = 48 ff 09
0008h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> decBytes => new byte[12]{0x0F,0x1F,0x44,0x00,0x00,0x48,0xFF,0x09,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref ulong dec(ref ulong src)
; location: [7FFC872C8A80h, 7FFC872C8A8Bh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h dec qword ptr [rcx]           ; DEC(Dec_rm64) [mem(64u,RCX:br,DS:sr)]                encoding(3 bytes) = 48 ff 09
0008h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> decBytes => new byte[12]{0x0F,0x1F,0x44,0x00,0x00,0x48,0xFF,0x09,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<sbyte> dec(ReadOnlySpan<sbyte> src, Span<sbyte> dst)
; location: [7FFC872C8AA0h, 7FFC872C8B6Ch]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0014h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0017h mov esi,0AEh                  ; MOV(Mov_r32_imm32) [ESI,aeh:imm32]                   encoding(5 bytes) = be ae 00 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
0023h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0026h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0029h jne short 006eh               ; JNE(Jne_rel8_64) [6Eh:jmp64]                         encoding(2 bytes) = 75 43
002bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
002eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0030h jle short 0059h               ; JLE(Jle_rel8_64) [59h:jmp64]                         encoding(2 bytes) = 7e 27
0032h cmp r10d,r8d                  ; CMP(Cmp_r32_rm32) [R10D,R8D]                         encoding(3 bytes) = 45 3b d0
0035h jae near ptr 00c7h            ; JAE(Jae_rel32_64) [C7h:jmp64]                        encoding(6 bytes) = 0f 83 8c 00 00 00
003bh movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
003eh lea rbx,[rax+r11]             ; LEA(Lea_r64_m) [RBX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 4a 8d 1c 18
0042h movsx r11,byte ptr [r9+r11]   ; MOVSX(Movsx_r64_rm8) [R11,mem(8i,R9:br,DS:sr)]       encoding(5 bytes) = 4f 0f be 1c 19
0047h dec r11d                      ; DEC(Dec_rm32) [R11D]                                 encoding(3 bytes) = 41 ff cb
004ah movsx r11,r11b                ; MOVSX(Movsx_r64_rm8) [R11,R11L]                      encoding(4 bytes) = 4d 0f be db
004eh mov [rbx],r11b                ; MOV(Mov_rm8_r8) [mem(8u,RBX:br,DS:sr),R11L]          encoding(3 bytes) = 44 88 1b
0051h inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
0054h cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
0057h jl short 0032h                ; JL(Jl_rel8_64) [32h:jmp64]                           encoding(2 bytes) = 7c d9
0059h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
005ch mov [rcx+8],r8d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R8D]        encoding(4 bytes) = 44 89 41 08
0060h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0063h add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0067h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0068h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0069h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
006ah pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
006bh pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
006dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
006eh mov ecx,125h                  ; MOV(Mov_r32_imm32) [ECX,125h:imm32]                  encoding(5 bytes) = b9 25 01 00 00
0073h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
007dh call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F46AE80h:jmp64]                encoding(5 bytes) = e8 fe ad 46 5f
0082h mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0085h mov ecx,973h                  ; MOV(Mov_r32_imm32) [ECX,973h:imm32]                  encoding(5 bytes) = b9 73 09 00 00
008ah mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0094h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F46AE80h:jmp64]                encoding(5 bytes) = e8 e7 ad 46 5f
0099h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
009ch lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
00a1h mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00a4h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00a8h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00abh mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00adh mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00afh mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00b4h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b9h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFC954D8h:jmp64]        encoding(5 bytes) = e8 1a 54 c9 ff
00beh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00c1h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F44DEB0h:jmp64]                encoding(5 bytes) = e8 ea dd 44 5f
00c6h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00c7h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F59C310h:jmp64]                encoding(5 bytes) = e8 44 c2 59 5f
00cch int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> decBytes => new byte[205]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x00,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0xBE,0xAE,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x43,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x27,0x45,0x3B,0xD0,0x0F,0x83,0x8C,0x00,0x00,0x00,0x4D,0x63,0xDA,0x4A,0x8D,0x1C,0x18,0x4F,0x0F,0xBE,0x1C,0x19,0x41,0xFF,0xCB,0x4D,0x0F,0xBE,0xDB,0x44,0x88,0x1B,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xD9,0x48,0x89,0x01,0x44,0x89,0x41,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x25,0x01,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xFE,0xAD,0x46,0x5F,0x4C,0x8B,0xF0,0xB9,0x73,0x09,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xE7,0xAD,0x46,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x1A,0x54,0xC9,0xFF,0x48,0x8B,0xC8,0xE8,0xEA,0xDD,0x44,0x5F,0xCC,0xE8,0x44,0xC2,0x59,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<byte> dec(ReadOnlySpan<byte> src, Span<byte> dst)
; location: [7FFC872C8B90h, 7FFC872C8C5Ch]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0014h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0017h mov esi,0B6h                  ; MOV(Mov_r32_imm32) [ESI,b6h:imm32]                   encoding(5 bytes) = be b6 00 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
0023h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0026h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0029h jne short 006eh               ; JNE(Jne_rel8_64) [6Eh:jmp64]                         encoding(2 bytes) = 75 43
002bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
002eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0030h jle short 0059h               ; JLE(Jle_rel8_64) [59h:jmp64]                         encoding(2 bytes) = 7e 27
0032h cmp r10d,r8d                  ; CMP(Cmp_r32_rm32) [R10D,R8D]                         encoding(3 bytes) = 45 3b d0
0035h jae near ptr 00c7h            ; JAE(Jae_rel32_64) [C7h:jmp64]                        encoding(6 bytes) = 0f 83 8c 00 00 00
003bh movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
003eh lea rbx,[rax+r11]             ; LEA(Lea_r64_m) [RBX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 4a 8d 1c 18
0042h movzx r11d,byte ptr [r9+r11]  ; MOVZX(Movzx_r32_rm8) [R11D,mem(8u,R9:br,DS:sr)]      encoding(5 bytes) = 47 0f b6 1c 19
0047h dec r11d                      ; DEC(Dec_rm32) [R11D]                                 encoding(3 bytes) = 41 ff cb
004ah movzx r11d,r11b               ; MOVZX(Movzx_r32_rm8) [R11D,R11L]                     encoding(4 bytes) = 45 0f b6 db
004eh mov [rbx],r11b                ; MOV(Mov_rm8_r8) [mem(8u,RBX:br,DS:sr),R11L]          encoding(3 bytes) = 44 88 1b
0051h inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
0054h cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
0057h jl short 0032h                ; JL(Jl_rel8_64) [32h:jmp64]                           encoding(2 bytes) = 7c d9
0059h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
005ch mov [rcx+8],r8d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R8D]        encoding(4 bytes) = 44 89 41 08
0060h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0063h add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0067h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0068h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0069h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
006ah pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
006bh pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
006dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
006eh mov ecx,125h                  ; MOV(Mov_r32_imm32) [ECX,125h:imm32]                  encoding(5 bytes) = b9 25 01 00 00
0073h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
007dh call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F46AD90h:jmp64]                encoding(5 bytes) = e8 0e ad 46 5f
0082h mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0085h mov ecx,973h                  ; MOV(Mov_r32_imm32) [ECX,973h:imm32]                  encoding(5 bytes) = b9 73 09 00 00
008ah mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0094h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F46AD90h:jmp64]                encoding(5 bytes) = e8 f7 ac 46 5f
0099h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
009ch lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
00a1h mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00a4h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00a8h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00abh mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00adh mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00afh mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00b4h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b9h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFC953E8h:jmp64]        encoding(5 bytes) = e8 2a 53 c9 ff
00beh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00c1h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F44DDC0h:jmp64]                encoding(5 bytes) = e8 fa dc 44 5f
00c6h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00c7h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F59C220h:jmp64]                encoding(5 bytes) = e8 54 c1 59 5f
00cch int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> decBytes => new byte[205]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x00,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0xBE,0xB6,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x43,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x27,0x45,0x3B,0xD0,0x0F,0x83,0x8C,0x00,0x00,0x00,0x4D,0x63,0xDA,0x4A,0x8D,0x1C,0x18,0x47,0x0F,0xB6,0x1C,0x19,0x41,0xFF,0xCB,0x45,0x0F,0xB6,0xDB,0x44,0x88,0x1B,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xD9,0x48,0x89,0x01,0x44,0x89,0x41,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x25,0x01,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x0E,0xAD,0x46,0x5F,0x4C,0x8B,0xF0,0xB9,0x73,0x09,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0xF7,0xAC,0x46,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x2A,0x53,0xC9,0xFF,0x48,0x8B,0xC8,0xE8,0xFA,0xDC,0x44,0x5F,0xCC,0xE8,0x54,0xC1,0x59,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<short> dec(ReadOnlySpan<short> src, Span<short> dst)
; location: [7FFC872C8C80h, 7FFC872C8D4Dh]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0014h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0017h mov esi,0BEh                  ; MOV(Mov_r32_imm32) [ESI,beh:imm32]                   encoding(5 bytes) = be be 00 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
0023h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0026h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0029h jne short 006fh               ; JNE(Jne_rel8_64) [6Fh:jmp64]                         encoding(2 bytes) = 75 44
002bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
002eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0030h jle short 005ah               ; JLE(Jle_rel8_64) [5Ah:jmp64]                         encoding(2 bytes) = 7e 28
0032h cmp r10d,r8d                  ; CMP(Cmp_r32_rm32) [R10D,R8D]                         encoding(3 bytes) = 45 3b d0
0035h jae near ptr 00c8h            ; JAE(Jae_rel32_64) [C8h:jmp64]                        encoding(6 bytes) = 0f 83 8d 00 00 00
003bh movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
003eh lea rbx,[rax+r11*2]           ; LEA(Lea_r64_m) [RBX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 4a 8d 1c 58
0042h movsx r11,word ptr [r9+r11*2] ; MOVSX(Movsx_r64_rm16) [R11,mem(16i,R9:br,DS:sr)]     encoding(5 bytes) = 4f 0f bf 1c 59
0047h dec r11d                      ; DEC(Dec_rm32) [R11D]                                 encoding(3 bytes) = 41 ff cb
004ah movsx r11,r11w                ; MOVSX(Movsx_r64_rm16) [R11,R11W]                     encoding(4 bytes) = 4d 0f bf db
004eh mov [rbx],r11w                ; MOV(Mov_rm16_r16) [mem(16u,RBX:br,DS:sr),R11W]       encoding(4 bytes) = 66 44 89 1b
0052h inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
0055h cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
0058h jl short 0032h                ; JL(Jl_rel8_64) [32h:jmp64]                           encoding(2 bytes) = 7c d8
005ah mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
005dh mov [rcx+8],r8d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R8D]        encoding(4 bytes) = 44 89 41 08
0061h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0064h add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0068h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0069h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
006ah pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
006bh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
006ch pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
006eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
006fh mov ecx,125h                  ; MOV(Mov_r32_imm32) [ECX,125h:imm32]                  encoding(5 bytes) = b9 25 01 00 00
0074h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
007eh call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F46ACA0h:jmp64]                encoding(5 bytes) = e8 1d ac 46 5f
0083h mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0086h mov ecx,973h                  ; MOV(Mov_r32_imm32) [ECX,973h:imm32]                  encoding(5 bytes) = b9 73 09 00 00
008bh mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0095h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F46ACA0h:jmp64]                encoding(5 bytes) = e8 06 ac 46 5f
009ah mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
009dh lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
00a2h mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00a5h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00a9h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00ach mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00aeh mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00b0h mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00b5h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00bah call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFC952F8h:jmp64]        encoding(5 bytes) = e8 39 52 c9 ff
00bfh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00c2h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F44DCD0h:jmp64]                encoding(5 bytes) = e8 09 dc 44 5f
00c7h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00c8h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F59C130h:jmp64]                encoding(5 bytes) = e8 63 c0 59 5f
00cdh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> decBytes => new byte[206]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x00,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0xBE,0xBE,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x44,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x28,0x45,0x3B,0xD0,0x0F,0x83,0x8D,0x00,0x00,0x00,0x4D,0x63,0xDA,0x4A,0x8D,0x1C,0x58,0x4F,0x0F,0xBF,0x1C,0x59,0x41,0xFF,0xCB,0x4D,0x0F,0xBF,0xDB,0x66,0x44,0x89,0x1B,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xD8,0x48,0x89,0x01,0x44,0x89,0x41,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x25,0x01,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x1D,0xAC,0x46,0x5F,0x4C,0x8B,0xF0,0xB9,0x73,0x09,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x06,0xAC,0x46,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x39,0x52,0xC9,0xFF,0x48,0x8B,0xC8,0xE8,0x09,0xDC,0x44,0x5F,0xCC,0xE8,0x63,0xC0,0x59,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<ushort> dec(ReadOnlySpan<ushort> src, Span<ushort> dst)
; location: [7FFC872C8D70h, 7FFC872C8E3Dh]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0014h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0017h mov esi,0C6h                  ; MOV(Mov_r32_imm32) [ESI,c6h:imm32]                   encoding(5 bytes) = be c6 00 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
0023h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0026h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0029h jne short 006fh               ; JNE(Jne_rel8_64) [6Fh:jmp64]                         encoding(2 bytes) = 75 44
002bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
002eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0030h jle short 005ah               ; JLE(Jle_rel8_64) [5Ah:jmp64]                         encoding(2 bytes) = 7e 28
0032h cmp r10d,r8d                  ; CMP(Cmp_r32_rm32) [R10D,R8D]                         encoding(3 bytes) = 45 3b d0
0035h jae near ptr 00c8h            ; JAE(Jae_rel32_64) [C8h:jmp64]                        encoding(6 bytes) = 0f 83 8d 00 00 00
003bh movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
003eh lea rbx,[rax+r11*2]           ; LEA(Lea_r64_m) [RBX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 4a 8d 1c 58
0042h movzx r11d,word ptr [r9+r11*2]; MOVZX(Movzx_r32_rm16) [R11D,mem(16u,R9:br,DS:sr)]    encoding(5 bytes) = 47 0f b7 1c 59
0047h dec r11d                      ; DEC(Dec_rm32) [R11D]                                 encoding(3 bytes) = 41 ff cb
004ah movzx r11d,r11w               ; MOVZX(Movzx_r32_rm16) [R11D,R11W]                    encoding(4 bytes) = 45 0f b7 db
004eh mov [rbx],r11w                ; MOV(Mov_rm16_r16) [mem(16u,RBX:br,DS:sr),R11W]       encoding(4 bytes) = 66 44 89 1b
0052h inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
0055h cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
0058h jl short 0032h                ; JL(Jl_rel8_64) [32h:jmp64]                           encoding(2 bytes) = 7c d8
005ah mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
005dh mov [rcx+8],r8d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R8D]        encoding(4 bytes) = 44 89 41 08
0061h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0064h add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0068h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0069h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
006ah pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
006bh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
006ch pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
006eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
006fh mov ecx,125h                  ; MOV(Mov_r32_imm32) [ECX,125h:imm32]                  encoding(5 bytes) = b9 25 01 00 00
0074h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
007eh call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F46ABB0h:jmp64]                encoding(5 bytes) = e8 2d ab 46 5f
0083h mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0086h mov ecx,973h                  ; MOV(Mov_r32_imm32) [ECX,973h:imm32]                  encoding(5 bytes) = b9 73 09 00 00
008bh mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0095h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F46ABB0h:jmp64]                encoding(5 bytes) = e8 16 ab 46 5f
009ah mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
009dh lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
00a2h mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00a5h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00a9h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00ach mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00aeh mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00b0h mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00b5h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00bah call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFC95208h:jmp64]        encoding(5 bytes) = e8 49 51 c9 ff
00bfh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00c2h call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F44DBE0h:jmp64]                encoding(5 bytes) = e8 19 db 44 5f
00c7h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00c8h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F59C040h:jmp64]                encoding(5 bytes) = e8 73 bf 59 5f
00cdh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> decBytes => new byte[206]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x00,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0xBE,0xC6,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x44,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x28,0x45,0x3B,0xD0,0x0F,0x83,0x8D,0x00,0x00,0x00,0x4D,0x63,0xDA,0x4A,0x8D,0x1C,0x58,0x47,0x0F,0xB7,0x1C,0x59,0x41,0xFF,0xCB,0x45,0x0F,0xB7,0xDB,0x66,0x44,0x89,0x1B,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xD8,0x48,0x89,0x01,0x44,0x89,0x41,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x25,0x01,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x2D,0xAB,0x46,0x5F,0x4C,0x8B,0xF0,0xB9,0x73,0x09,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x16,0xAB,0x46,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x49,0x51,0xC9,0xFF,0x48,0x8B,0xC8,0xE8,0x19,0xDB,0x44,0x5F,0xCC,0xE8,0x73,0xBF,0x59,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<int> dec(ReadOnlySpan<int> src, Span<int> dst)
; location: [7FFC872C8E60h, 7FFC872C8F27h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0014h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0017h mov esi,0CEh                  ; MOV(Mov_r32_imm32) [ESI,ceh:imm32]                   encoding(5 bytes) = be ce 00 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
0023h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0026h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0029h jne short 0069h               ; JNE(Jne_rel8_64) [69h:jmp64]                         encoding(2 bytes) = 75 3e
002bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
002eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0030h jle short 0054h               ; JLE(Jle_rel8_64) [54h:jmp64]                         encoding(2 bytes) = 7e 22
0032h cmp r10d,r8d                  ; CMP(Cmp_r32_rm32) [R10D,R8D]                         encoding(3 bytes) = 45 3b d0
0035h jae near ptr 00c2h            ; JAE(Jae_rel32_64) [C2h:jmp64]                        encoding(6 bytes) = 0f 83 87 00 00 00
003bh movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
003eh lea rbx,[rax+r11*4]           ; LEA(Lea_r64_m) [RBX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 4a 8d 1c 98
0042h mov r11d,[r9+r11*4]           ; MOV(Mov_r32_rm32) [R11D,mem(32u,R9:br,DS:sr)]        encoding(4 bytes) = 47 8b 1c 99
0046h dec r11d                      ; DEC(Dec_rm32) [R11D]                                 encoding(3 bytes) = 41 ff cb
0049h mov [rbx],r11d                ; MOV(Mov_rm32_r32) [mem(32u,RBX:br,DS:sr),R11D]       encoding(3 bytes) = 44 89 1b
004ch inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
004fh cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
0052h jl short 0032h                ; JL(Jl_rel8_64) [32h:jmp64]                           encoding(2 bytes) = 7c de
0054h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0057h mov [rcx+8],r8d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R8D]        encoding(4 bytes) = 44 89 41 08
005bh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
005eh add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0062h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0063h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0064h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0065h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0066h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0068h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0069h mov ecx,125h                  ; MOV(Mov_r32_imm32) [ECX,125h:imm32]                  encoding(5 bytes) = b9 25 01 00 00
006eh mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0078h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F46AAC0h:jmp64]                encoding(5 bytes) = e8 43 aa 46 5f
007dh mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0080h mov ecx,973h                  ; MOV(Mov_r32_imm32) [ECX,973h:imm32]                  encoding(5 bytes) = b9 73 09 00 00
0085h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
008fh call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F46AAC0h:jmp64]                encoding(5 bytes) = e8 2c aa 46 5f
0094h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
0097h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
009ch mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
009fh mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00a3h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00a6h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00a8h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00aah mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00afh mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b4h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFC95118h:jmp64]        encoding(5 bytes) = e8 5f 50 c9 ff
00b9h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00bch call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F44DAF0h:jmp64]                encoding(5 bytes) = e8 2f da 44 5f
00c1h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00c2h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F59BF50h:jmp64]                encoding(5 bytes) = e8 89 be 59 5f
00c7h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> decBytes => new byte[200]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x00,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0xBE,0xCE,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x3E,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x22,0x45,0x3B,0xD0,0x0F,0x83,0x87,0x00,0x00,0x00,0x4D,0x63,0xDA,0x4A,0x8D,0x1C,0x98,0x47,0x8B,0x1C,0x99,0x41,0xFF,0xCB,0x44,0x89,0x1B,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xDE,0x48,0x89,0x01,0x44,0x89,0x41,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x25,0x01,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x43,0xAA,0x46,0x5F,0x4C,0x8B,0xF0,0xB9,0x73,0x09,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x2C,0xAA,0x46,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x5F,0x50,0xC9,0xFF,0x48,0x8B,0xC8,0xE8,0x2F,0xDA,0x44,0x5F,0xCC,0xE8,0x89,0xBE,0x59,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<uint> dec(ReadOnlySpan<uint> src, Span<uint> dst)
; location: [7FFC872C8F50h, 7FFC872C9017h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0014h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0017h mov esi,0D6h                  ; MOV(Mov_r32_imm32) [ESI,d6h:imm32]                   encoding(5 bytes) = be d6 00 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
0023h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0026h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0029h jne short 0069h               ; JNE(Jne_rel8_64) [69h:jmp64]                         encoding(2 bytes) = 75 3e
002bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
002eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0030h jle short 0054h               ; JLE(Jle_rel8_64) [54h:jmp64]                         encoding(2 bytes) = 7e 22
0032h cmp r10d,r8d                  ; CMP(Cmp_r32_rm32) [R10D,R8D]                         encoding(3 bytes) = 45 3b d0
0035h jae near ptr 00c2h            ; JAE(Jae_rel32_64) [C2h:jmp64]                        encoding(6 bytes) = 0f 83 87 00 00 00
003bh movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
003eh lea rbx,[rax+r11*4]           ; LEA(Lea_r64_m) [RBX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 4a 8d 1c 98
0042h mov r11d,[r9+r11*4]           ; MOV(Mov_r32_rm32) [R11D,mem(32u,R9:br,DS:sr)]        encoding(4 bytes) = 47 8b 1c 99
0046h dec r11d                      ; DEC(Dec_rm32) [R11D]                                 encoding(3 bytes) = 41 ff cb
0049h mov [rbx],r11d                ; MOV(Mov_rm32_r32) [mem(32u,RBX:br,DS:sr),R11D]       encoding(3 bytes) = 44 89 1b
004ch inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
004fh cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
0052h jl short 0032h                ; JL(Jl_rel8_64) [32h:jmp64]                           encoding(2 bytes) = 7c de
0054h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0057h mov [rcx+8],r8d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R8D]        encoding(4 bytes) = 44 89 41 08
005bh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
005eh add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0062h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0063h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0064h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0065h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0066h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0068h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0069h mov ecx,125h                  ; MOV(Mov_r32_imm32) [ECX,125h:imm32]                  encoding(5 bytes) = b9 25 01 00 00
006eh mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0078h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F46A9D0h:jmp64]                encoding(5 bytes) = e8 53 a9 46 5f
007dh mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0080h mov ecx,973h                  ; MOV(Mov_r32_imm32) [ECX,973h:imm32]                  encoding(5 bytes) = b9 73 09 00 00
0085h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
008fh call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F46A9D0h:jmp64]                encoding(5 bytes) = e8 3c a9 46 5f
0094h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
0097h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
009ch mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
009fh mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00a3h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00a6h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00a8h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00aah mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00afh mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b4h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFC95028h:jmp64]        encoding(5 bytes) = e8 6f 4f c9 ff
00b9h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00bch call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F44DA00h:jmp64]                encoding(5 bytes) = e8 3f d9 44 5f
00c1h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00c2h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F59BE60h:jmp64]                encoding(5 bytes) = e8 99 bd 59 5f
00c7h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> decBytes => new byte[200]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x00,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0xBE,0xD6,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x3E,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x22,0x45,0x3B,0xD0,0x0F,0x83,0x87,0x00,0x00,0x00,0x4D,0x63,0xDA,0x4A,0x8D,0x1C,0x98,0x47,0x8B,0x1C,0x99,0x41,0xFF,0xCB,0x44,0x89,0x1B,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xDE,0x48,0x89,0x01,0x44,0x89,0x41,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x25,0x01,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x53,0xA9,0x46,0x5F,0x4C,0x8B,0xF0,0xB9,0x73,0x09,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x3C,0xA9,0x46,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x6F,0x4F,0xC9,0xFF,0x48,0x8B,0xC8,0xE8,0x3F,0xD9,0x44,0x5F,0xCC,0xE8,0x99,0xBD,0x59,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<long> dec(ReadOnlySpan<long> src, Span<long> dst)
; location: [7FFC872C9040h, 7FFC872C9107h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0014h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0017h mov esi,0DEh                  ; MOV(Mov_r32_imm32) [ESI,deh:imm32]                   encoding(5 bytes) = be de 00 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
0023h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0026h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0029h jne short 0069h               ; JNE(Jne_rel8_64) [69h:jmp64]                         encoding(2 bytes) = 75 3e
002bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
002eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0030h jle short 0054h               ; JLE(Jle_rel8_64) [54h:jmp64]                         encoding(2 bytes) = 7e 22
0032h cmp r10d,r8d                  ; CMP(Cmp_r32_rm32) [R10D,R8D]                         encoding(3 bytes) = 45 3b d0
0035h jae near ptr 00c2h            ; JAE(Jae_rel32_64) [C2h:jmp64]                        encoding(6 bytes) = 0f 83 87 00 00 00
003bh movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
003eh lea rbx,[rax+r11*8]           ; LEA(Lea_r64_m) [RBX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 4a 8d 1c d8
0042h mov r11,[r9+r11*8]            ; MOV(Mov_r64_rm64) [R11,mem(64u,R9:br,DS:sr)]         encoding(4 bytes) = 4f 8b 1c d9
0046h dec r11                       ; DEC(Dec_rm64) [R11]                                  encoding(3 bytes) = 49 ff cb
0049h mov [rbx],r11                 ; MOV(Mov_rm64_r64) [mem(64u,RBX:br,DS:sr),R11]        encoding(3 bytes) = 4c 89 1b
004ch inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
004fh cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
0052h jl short 0032h                ; JL(Jl_rel8_64) [32h:jmp64]                           encoding(2 bytes) = 7c de
0054h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0057h mov [rcx+8],r8d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R8D]        encoding(4 bytes) = 44 89 41 08
005bh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
005eh add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0062h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0063h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0064h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0065h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0066h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0068h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0069h mov ecx,125h                  ; MOV(Mov_r32_imm32) [ECX,125h:imm32]                  encoding(5 bytes) = b9 25 01 00 00
006eh mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0078h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F46A8E0h:jmp64]                encoding(5 bytes) = e8 63 a8 46 5f
007dh mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0080h mov ecx,973h                  ; MOV(Mov_r32_imm32) [ECX,973h:imm32]                  encoding(5 bytes) = b9 73 09 00 00
0085h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
008fh call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F46A8E0h:jmp64]                encoding(5 bytes) = e8 4c a8 46 5f
0094h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
0097h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
009ch mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
009fh mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00a3h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00a6h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00a8h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00aah mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00afh mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b4h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFC94F38h:jmp64]        encoding(5 bytes) = e8 7f 4e c9 ff
00b9h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00bch call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F44D910h:jmp64]                encoding(5 bytes) = e8 4f d8 44 5f
00c1h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00c2h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F59BD70h:jmp64]                encoding(5 bytes) = e8 a9 bc 59 5f
00c7h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> decBytes => new byte[200]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x00,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0xBE,0xDE,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x3E,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x22,0x45,0x3B,0xD0,0x0F,0x83,0x87,0x00,0x00,0x00,0x4D,0x63,0xDA,0x4A,0x8D,0x1C,0xD8,0x4F,0x8B,0x1C,0xD9,0x49,0xFF,0xCB,0x4C,0x89,0x1B,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xDE,0x48,0x89,0x01,0x44,0x89,0x41,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x25,0x01,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x63,0xA8,0x46,0x5F,0x4C,0x8B,0xF0,0xB9,0x73,0x09,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x4C,0xA8,0x46,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x7F,0x4E,0xC9,0xFF,0x48,0x8B,0xC8,0xE8,0x4F,0xD8,0x44,0x5F,0xCC,0xE8,0xA9,0xBC,0x59,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<ulong> dec(ReadOnlySpan<ulong> src, Span<ulong> dst)
; location: [7FFC872C9130h, 7FFC872C91F7h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0014h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0017h mov esi,0E6h                  ; MOV(Mov_r32_imm32) [ESI,e6h:imm32]                   encoding(5 bytes) = be e6 00 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
0023h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0026h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0029h jne short 0069h               ; JNE(Jne_rel8_64) [69h:jmp64]                         encoding(2 bytes) = 75 3e
002bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
002eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0030h jle short 0054h               ; JLE(Jle_rel8_64) [54h:jmp64]                         encoding(2 bytes) = 7e 22
0032h cmp r10d,r8d                  ; CMP(Cmp_r32_rm32) [R10D,R8D]                         encoding(3 bytes) = 45 3b d0
0035h jae near ptr 00c2h            ; JAE(Jae_rel32_64) [C2h:jmp64]                        encoding(6 bytes) = 0f 83 87 00 00 00
003bh movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
003eh lea rbx,[rax+r11*8]           ; LEA(Lea_r64_m) [RBX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 4a 8d 1c d8
0042h mov r11,[r9+r11*8]            ; MOV(Mov_r64_rm64) [R11,mem(64u,R9:br,DS:sr)]         encoding(4 bytes) = 4f 8b 1c d9
0046h dec r11                       ; DEC(Dec_rm64) [R11]                                  encoding(3 bytes) = 49 ff cb
0049h mov [rbx],r11                 ; MOV(Mov_rm64_r64) [mem(64u,RBX:br,DS:sr),R11]        encoding(3 bytes) = 4c 89 1b
004ch inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
004fh cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
0052h jl short 0032h                ; JL(Jl_rel8_64) [32h:jmp64]                           encoding(2 bytes) = 7c de
0054h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0057h mov [rcx+8],r8d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R8D]        encoding(4 bytes) = 44 89 41 08
005bh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
005eh add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0062h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0063h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0064h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0065h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0066h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0068h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0069h mov ecx,125h                  ; MOV(Mov_r32_imm32) [ECX,125h:imm32]                  encoding(5 bytes) = b9 25 01 00 00
006eh mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
0078h call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F46A7F0h:jmp64]                encoding(5 bytes) = e8 73 a7 46 5f
007dh mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0080h mov ecx,973h                  ; MOV(Mov_r32_imm32) [ECX,973h:imm32]                  encoding(5 bytes) = b9 73 09 00 00
0085h mov rdx,7FFC86D83E98h         ; MOV(Mov_r64_imm64) [RDX,7ffc86d83e98h:imm64]         encoding(10 bytes) = 48 ba 98 3e d8 86 fc 7f 00 00
008fh call 7FFCE6733920h            ; CALL(Call_rel32_64) [5F46A7F0h:jmp64]                encoding(5 bytes) = e8 5c a7 46 5f
0094h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
0097h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
009ch mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
009fh mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00a3h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00a6h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00a8h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00aah mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00afh mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b4h call 7FFC86F5DF78h            ; CALL(Call_rel32_64) [FFFFFFFFFFC94E48h:jmp64]        encoding(5 bytes) = e8 8f 4d c9 ff
00b9h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00bch call 7FFCE6716950h            ; CALL(Call_rel32_64) [5F44D820h:jmp64]                encoding(5 bytes) = e8 5f d7 44 5f
00c1h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00c2h call 7FFCE6864DB0h            ; CALL(Call_rel32_64) [5F59BC80h:jmp64]                encoding(5 bytes) = e8 b9 bb 59 5f
00c7h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> decBytes => new byte[200]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x00,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0xBE,0xE6,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x3E,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x22,0x45,0x3B,0xD0,0x0F,0x83,0x87,0x00,0x00,0x00,0x4D,0x63,0xDA,0x4A,0x8D,0x1C,0xD8,0x4F,0x8B,0x1C,0xD9,0x49,0xFF,0xCB,0x4C,0x89,0x1B,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xDE,0x48,0x89,0x01,0x44,0x89,0x41,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x25,0x01,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x73,0xA7,0x46,0x5F,0x4C,0x8B,0xF0,0xB9,0x73,0x09,0x00,0x00,0x48,0xBA,0x98,0x3E,0xD8,0x86,0xFC,0x7F,0x00,0x00,0xE8,0x5C,0xA7,0x46,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x8F,0x4D,0xC9,0xFF,0x48,0x8B,0xC8,0xE8,0x5F,0xD7,0x44,0x5F,0xCC,0xE8,0xB9,0xBB,0x59,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<sbyte> dec(Span<sbyte> io)
; location: [7FFC872C9220h, 7FFC872C924Ch]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,[rdx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 02
0008h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
000bh xor r8d,r8d                   ; XOR(Xor_r32_rm32) [R8D,R8D]                          encoding(3 bytes) = 45 33 c0
000eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0010h jle short 0023h               ; JLE(Jle_rel8_64) [23h:jmp64]                         encoding(2 bytes) = 7e 11
0012h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0015h add r9,rax                    ; ADD(Add_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 03 c8
0018h dec byte ptr [r9]             ; DEC(Dec_rm8) [mem(8u,R9:br,DS:sr)]                   encoding(3 bytes) = 41 fe 09
001bh inc r8d                       ; INC(Inc_rm32) [R8D]                                  encoding(3 bytes) = 41 ff c0
001eh cmp r8d,edx                   ; CMP(Cmp_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 3b c2
0021h jl short 0012h                ; JL(Jl_rel8_64) [12h:jmp64]                           encoding(2 bytes) = 7c ef
0023h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0026h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
0029h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
002ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> decBytes => new byte[45]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x02,0x8B,0x52,0x08,0x45,0x33,0xC0,0x85,0xD2,0x7E,0x11,0x4D,0x63,0xC8,0x4C,0x03,0xC8,0x41,0xFE,0x09,0x41,0xFF,0xC0,0x44,0x3B,0xC2,0x7C,0xEF,0x48,0x89,0x01,0x89,0x51,0x08,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<byte> dec(Span<byte> io)
; location: [7FFC872C9260h, 7FFC872C928Ch]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,[rdx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 02
0008h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
000bh xor r8d,r8d                   ; XOR(Xor_r32_rm32) [R8D,R8D]                          encoding(3 bytes) = 45 33 c0
000eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0010h jle short 0023h               ; JLE(Jle_rel8_64) [23h:jmp64]                         encoding(2 bytes) = 7e 11
0012h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0015h add r9,rax                    ; ADD(Add_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 03 c8
0018h dec byte ptr [r9]             ; DEC(Dec_rm8) [mem(8u,R9:br,DS:sr)]                   encoding(3 bytes) = 41 fe 09
001bh inc r8d                       ; INC(Inc_rm32) [R8D]                                  encoding(3 bytes) = 41 ff c0
001eh cmp r8d,edx                   ; CMP(Cmp_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 3b c2
0021h jl short 0012h                ; JL(Jl_rel8_64) [12h:jmp64]                           encoding(2 bytes) = 7c ef
0023h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0026h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
0029h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
002ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> decBytes => new byte[45]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x02,0x8B,0x52,0x08,0x45,0x33,0xC0,0x85,0xD2,0x7E,0x11,0x4D,0x63,0xC8,0x4C,0x03,0xC8,0x41,0xFE,0x09,0x41,0xFF,0xC0,0x44,0x3B,0xC2,0x7C,0xEF,0x48,0x89,0x01,0x89,0x51,0x08,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<short> dec(Span<short> io)
; location: [7FFC872C92A0h, 7FFC872C92CEh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,[rdx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 02
0008h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
000bh xor r8d,r8d                   ; XOR(Xor_r32_rm32) [R8D,R8D]                          encoding(3 bytes) = 45 33 c0
000eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0010h jle short 0025h               ; JLE(Jle_rel8_64) [25h:jmp64]                         encoding(2 bytes) = 7e 13
0012h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0015h lea r9,[rax+r9*2]             ; LEA(Lea_r64_m) [R9,mem(Unknown,RAX:br,DS:sr)]        encoding(4 bytes) = 4e 8d 0c 48
0019h dec word ptr [r9]             ; DEC(Dec_rm16) [mem(16u,R9:br,DS:sr)]                 encoding(4 bytes) = 66 41 ff 09
001dh inc r8d                       ; INC(Inc_rm32) [R8D]                                  encoding(3 bytes) = 41 ff c0
0020h cmp r8d,edx                   ; CMP(Cmp_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 3b c2
0023h jl short 0012h                ; JL(Jl_rel8_64) [12h:jmp64]                           encoding(2 bytes) = 7c ed
0025h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0028h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
002bh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
002eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> decBytes => new byte[47]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x02,0x8B,0x52,0x08,0x45,0x33,0xC0,0x85,0xD2,0x7E,0x13,0x4D,0x63,0xC8,0x4E,0x8D,0x0C,0x48,0x66,0x41,0xFF,0x09,0x41,0xFF,0xC0,0x44,0x3B,0xC2,0x7C,0xED,0x48,0x89,0x01,0x89,0x51,0x08,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<ushort> dec(Span<ushort> io)
; location: [7FFC872C92E0h, 7FFC872C930Eh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,[rdx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 02
0008h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
000bh xor r8d,r8d                   ; XOR(Xor_r32_rm32) [R8D,R8D]                          encoding(3 bytes) = 45 33 c0
000eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0010h jle short 0025h               ; JLE(Jle_rel8_64) [25h:jmp64]                         encoding(2 bytes) = 7e 13
0012h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0015h lea r9,[rax+r9*2]             ; LEA(Lea_r64_m) [R9,mem(Unknown,RAX:br,DS:sr)]        encoding(4 bytes) = 4e 8d 0c 48
0019h dec word ptr [r9]             ; DEC(Dec_rm16) [mem(16u,R9:br,DS:sr)]                 encoding(4 bytes) = 66 41 ff 09
001dh inc r8d                       ; INC(Inc_rm32) [R8D]                                  encoding(3 bytes) = 41 ff c0
0020h cmp r8d,edx                   ; CMP(Cmp_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 3b c2
0023h jl short 0012h                ; JL(Jl_rel8_64) [12h:jmp64]                           encoding(2 bytes) = 7c ed
0025h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0028h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
002bh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
002eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> decBytes => new byte[47]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x02,0x8B,0x52,0x08,0x45,0x33,0xC0,0x85,0xD2,0x7E,0x13,0x4D,0x63,0xC8,0x4E,0x8D,0x0C,0x48,0x66,0x41,0xFF,0x09,0x41,0xFF,0xC0,0x44,0x3B,0xC2,0x7C,0xED,0x48,0x89,0x01,0x89,0x51,0x08,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<int> dec(Span<int> io)
; location: [7FFC872C9320h, 7FFC872C934Dh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,[rdx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 02
0008h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
000bh xor r8d,r8d                   ; XOR(Xor_r32_rm32) [R8D,R8D]                          encoding(3 bytes) = 45 33 c0
000eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0010h jle short 0024h               ; JLE(Jle_rel8_64) [24h:jmp64]                         encoding(2 bytes) = 7e 12
0012h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0015h lea r9,[rax+r9*4]             ; LEA(Lea_r64_m) [R9,mem(Unknown,RAX:br,DS:sr)]        encoding(4 bytes) = 4e 8d 0c 88
0019h dec dword ptr [r9]            ; DEC(Dec_rm32) [mem(32u,R9:br,DS:sr)]                 encoding(3 bytes) = 41 ff 09
001ch inc r8d                       ; INC(Inc_rm32) [R8D]                                  encoding(3 bytes) = 41 ff c0
001fh cmp r8d,edx                   ; CMP(Cmp_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 3b c2
0022h jl short 0012h                ; JL(Jl_rel8_64) [12h:jmp64]                           encoding(2 bytes) = 7c ee
0024h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0027h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
002ah mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
002dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> decBytes => new byte[46]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x02,0x8B,0x52,0x08,0x45,0x33,0xC0,0x85,0xD2,0x7E,0x12,0x4D,0x63,0xC8,0x4E,0x8D,0x0C,0x88,0x41,0xFF,0x09,0x41,0xFF,0xC0,0x44,0x3B,0xC2,0x7C,0xEE,0x48,0x89,0x01,0x89,0x51,0x08,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<uint> dec(Span<uint> io)
; location: [7FFC872C9360h, 7FFC872C938Dh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,[rdx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 02
0008h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
000bh xor r8d,r8d                   ; XOR(Xor_r32_rm32) [R8D,R8D]                          encoding(3 bytes) = 45 33 c0
000eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0010h jle short 0024h               ; JLE(Jle_rel8_64) [24h:jmp64]                         encoding(2 bytes) = 7e 12
0012h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0015h lea r9,[rax+r9*4]             ; LEA(Lea_r64_m) [R9,mem(Unknown,RAX:br,DS:sr)]        encoding(4 bytes) = 4e 8d 0c 88
0019h dec dword ptr [r9]            ; DEC(Dec_rm32) [mem(32u,R9:br,DS:sr)]                 encoding(3 bytes) = 41 ff 09
001ch inc r8d                       ; INC(Inc_rm32) [R8D]                                  encoding(3 bytes) = 41 ff c0
001fh cmp r8d,edx                   ; CMP(Cmp_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 3b c2
0022h jl short 0012h                ; JL(Jl_rel8_64) [12h:jmp64]                           encoding(2 bytes) = 7c ee
0024h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0027h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
002ah mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
002dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> decBytes => new byte[46]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x02,0x8B,0x52,0x08,0x45,0x33,0xC0,0x85,0xD2,0x7E,0x12,0x4D,0x63,0xC8,0x4E,0x8D,0x0C,0x88,0x41,0xFF,0x09,0x41,0xFF,0xC0,0x44,0x3B,0xC2,0x7C,0xEE,0x48,0x89,0x01,0x89,0x51,0x08,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
