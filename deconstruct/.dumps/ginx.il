// 2019-07-24 20:36:14:568
Vec128<byte> or<byte>(byref Vec128<byte> lhs, byref Vec128<byte> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: call Z0.Vec128`1<System.SByte> Z0.dinx::or(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec128`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0061: call Z0.Vec128`1<System.Byte> Z0.dinx::or(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec128`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_009B: call Z0.Vec128`1<System.Int16> Z0.dinx::or(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec128`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00D5: call Z0.Vec128`1<System.UInt16> Z0.dinx::or(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec128`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_010F: call Z0.Vec128`1<System.Int32> Z0.dinx::or(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec128`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_014A: call Z0.Vec128`1<System.UInt32> Z0.dinx::or(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec128`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0185: call Z0.Vec128`1<System.Int64> Z0.dinx::or(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec128`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01C0: call Z0.Vec128`1<System.UInt64> Z0.dinx::or(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec128`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01FB: call Z0.Vec128`1<System.Single> Z0.dinx::or(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Single>&)
    IL_0209: ldobj Z0.Vec128`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0236: call Z0.Vec128`1<System.Double> Z0.dinx::or(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Double>&)
    IL_0244: ldobj Z0.Vec128`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\or.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\or.cs"
    IL_0254: ldc.i4.s 43
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec128<ushort> or<ushort>(byref Vec128<ushort> lhs, byref Vec128<ushort> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: call Z0.Vec128`1<System.SByte> Z0.dinx::or(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec128`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0061: call Z0.Vec128`1<System.Byte> Z0.dinx::or(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec128`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_009B: call Z0.Vec128`1<System.Int16> Z0.dinx::or(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec128`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00D5: call Z0.Vec128`1<System.UInt16> Z0.dinx::or(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec128`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_010F: call Z0.Vec128`1<System.Int32> Z0.dinx::or(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec128`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_014A: call Z0.Vec128`1<System.UInt32> Z0.dinx::or(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec128`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0185: call Z0.Vec128`1<System.Int64> Z0.dinx::or(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec128`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01C0: call Z0.Vec128`1<System.UInt64> Z0.dinx::or(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec128`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01FB: call Z0.Vec128`1<System.Single> Z0.dinx::or(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Single>&)
    IL_0209: ldobj Z0.Vec128`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0236: call Z0.Vec128`1<System.Double> Z0.dinx::or(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Double>&)
    IL_0244: ldobj Z0.Vec128`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\or.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\or.cs"
    IL_0254: ldc.i4.s 43
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec128<uint> or<uint>(byref Vec128<uint> lhs, byref Vec128<uint> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: call Z0.Vec128`1<System.SByte> Z0.dinx::or(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec128`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0061: call Z0.Vec128`1<System.Byte> Z0.dinx::or(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec128`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_009B: call Z0.Vec128`1<System.Int16> Z0.dinx::or(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec128`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00D5: call Z0.Vec128`1<System.UInt16> Z0.dinx::or(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec128`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_010F: call Z0.Vec128`1<System.Int32> Z0.dinx::or(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec128`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_014A: call Z0.Vec128`1<System.UInt32> Z0.dinx::or(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec128`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0185: call Z0.Vec128`1<System.Int64> Z0.dinx::or(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec128`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01C0: call Z0.Vec128`1<System.UInt64> Z0.dinx::or(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec128`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01FB: call Z0.Vec128`1<System.Single> Z0.dinx::or(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Single>&)
    IL_0209: ldobj Z0.Vec128`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0236: call Z0.Vec128`1<System.Double> Z0.dinx::or(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Double>&)
    IL_0244: ldobj Z0.Vec128`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\or.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\or.cs"
    IL_0254: ldc.i4.s 43
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec128<ulong> or<ulong>(byref Vec128<ulong> lhs, byref Vec128<ulong> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: call Z0.Vec128`1<System.SByte> Z0.dinx::or(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec128`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0061: call Z0.Vec128`1<System.Byte> Z0.dinx::or(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec128`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_009B: call Z0.Vec128`1<System.Int16> Z0.dinx::or(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec128`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00D5: call Z0.Vec128`1<System.UInt16> Z0.dinx::or(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec128`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_010F: call Z0.Vec128`1<System.Int32> Z0.dinx::or(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec128`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_014A: call Z0.Vec128`1<System.UInt32> Z0.dinx::or(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec128`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0185: call Z0.Vec128`1<System.Int64> Z0.dinx::or(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec128`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01C0: call Z0.Vec128`1<System.UInt64> Z0.dinx::or(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec128`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01FB: call Z0.Vec128`1<System.Single> Z0.dinx::or(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Single>&)
    IL_0209: ldobj Z0.Vec128`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0236: call Z0.Vec128`1<System.Double> Z0.dinx::or(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Double>&)
    IL_0244: ldobj Z0.Vec128`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\or.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\or.cs"
    IL_0254: ldc.i4.s 43
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec128<sbyte> or<sbyte>(byref Vec128<sbyte> lhs, byref Vec128<sbyte> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: call Z0.Vec128`1<System.SByte> Z0.dinx::or(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec128`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0061: call Z0.Vec128`1<System.Byte> Z0.dinx::or(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec128`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_009B: call Z0.Vec128`1<System.Int16> Z0.dinx::or(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec128`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00D5: call Z0.Vec128`1<System.UInt16> Z0.dinx::or(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec128`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_010F: call Z0.Vec128`1<System.Int32> Z0.dinx::or(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec128`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_014A: call Z0.Vec128`1<System.UInt32> Z0.dinx::or(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec128`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0185: call Z0.Vec128`1<System.Int64> Z0.dinx::or(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec128`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01C0: call Z0.Vec128`1<System.UInt64> Z0.dinx::or(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec128`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01FB: call Z0.Vec128`1<System.Single> Z0.dinx::or(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Single>&)
    IL_0209: ldobj Z0.Vec128`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0236: call Z0.Vec128`1<System.Double> Z0.dinx::or(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Double>&)
    IL_0244: ldobj Z0.Vec128`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\or.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\or.cs"
    IL_0254: ldc.i4.s 43
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec128<short> or<short>(byref Vec128<short> lhs, byref Vec128<short> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: call Z0.Vec128`1<System.SByte> Z0.dinx::or(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec128`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0061: call Z0.Vec128`1<System.Byte> Z0.dinx::or(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec128`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_009B: call Z0.Vec128`1<System.Int16> Z0.dinx::or(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec128`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00D5: call Z0.Vec128`1<System.UInt16> Z0.dinx::or(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec128`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_010F: call Z0.Vec128`1<System.Int32> Z0.dinx::or(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec128`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_014A: call Z0.Vec128`1<System.UInt32> Z0.dinx::or(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec128`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0185: call Z0.Vec128`1<System.Int64> Z0.dinx::or(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec128`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01C0: call Z0.Vec128`1<System.UInt64> Z0.dinx::or(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec128`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01FB: call Z0.Vec128`1<System.Single> Z0.dinx::or(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Single>&)
    IL_0209: ldobj Z0.Vec128`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0236: call Z0.Vec128`1<System.Double> Z0.dinx::or(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Double>&)
    IL_0244: ldobj Z0.Vec128`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\or.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\or.cs"
    IL_0254: ldc.i4.s 43
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec128<int> or<int>(byref Vec128<int> lhs, byref Vec128<int> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: call Z0.Vec128`1<System.SByte> Z0.dinx::or(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec128`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0061: call Z0.Vec128`1<System.Byte> Z0.dinx::or(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec128`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_009B: call Z0.Vec128`1<System.Int16> Z0.dinx::or(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec128`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00D5: call Z0.Vec128`1<System.UInt16> Z0.dinx::or(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec128`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_010F: call Z0.Vec128`1<System.Int32> Z0.dinx::or(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec128`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_014A: call Z0.Vec128`1<System.UInt32> Z0.dinx::or(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec128`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0185: call Z0.Vec128`1<System.Int64> Z0.dinx::or(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec128`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01C0: call Z0.Vec128`1<System.UInt64> Z0.dinx::or(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec128`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01FB: call Z0.Vec128`1<System.Single> Z0.dinx::or(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Single>&)
    IL_0209: ldobj Z0.Vec128`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0236: call Z0.Vec128`1<System.Double> Z0.dinx::or(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Double>&)
    IL_0244: ldobj Z0.Vec128`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\or.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\or.cs"
    IL_0254: ldc.i4.s 43
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec128<long> or<long>(byref Vec128<long> lhs, byref Vec128<long> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: call Z0.Vec128`1<System.SByte> Z0.dinx::or(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec128`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0061: call Z0.Vec128`1<System.Byte> Z0.dinx::or(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec128`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_009B: call Z0.Vec128`1<System.Int16> Z0.dinx::or(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec128`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00D5: call Z0.Vec128`1<System.UInt16> Z0.dinx::or(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec128`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_010F: call Z0.Vec128`1<System.Int32> Z0.dinx::or(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec128`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_014A: call Z0.Vec128`1<System.UInt32> Z0.dinx::or(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec128`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0185: call Z0.Vec128`1<System.Int64> Z0.dinx::or(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec128`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01C0: call Z0.Vec128`1<System.UInt64> Z0.dinx::or(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec128`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01FB: call Z0.Vec128`1<System.Single> Z0.dinx::or(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Single>&)
    IL_0209: ldobj Z0.Vec128`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0236: call Z0.Vec128`1<System.Double> Z0.dinx::or(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Double>&)
    IL_0244: ldobj Z0.Vec128`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\or.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\or.cs"
    IL_0254: ldc.i4.s 43
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec128<float> or<float>(byref Vec128<float> lhs, byref Vec128<float> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: call Z0.Vec128`1<System.SByte> Z0.dinx::or(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec128`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0061: call Z0.Vec128`1<System.Byte> Z0.dinx::or(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec128`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_009B: call Z0.Vec128`1<System.Int16> Z0.dinx::or(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec128`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00D5: call Z0.Vec128`1<System.UInt16> Z0.dinx::or(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec128`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_010F: call Z0.Vec128`1<System.Int32> Z0.dinx::or(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec128`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_014A: call Z0.Vec128`1<System.UInt32> Z0.dinx::or(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec128`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0185: call Z0.Vec128`1<System.Int64> Z0.dinx::or(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec128`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01C0: call Z0.Vec128`1<System.UInt64> Z0.dinx::or(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec128`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01FB: call Z0.Vec128`1<System.Single> Z0.dinx::or(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Single>&)
    IL_0209: ldobj Z0.Vec128`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0236: call Z0.Vec128`1<System.Double> Z0.dinx::or(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Double>&)
    IL_0244: ldobj Z0.Vec128`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\or.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\or.cs"
    IL_0254: ldc.i4.s 43
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec128<double> or<double>(byref Vec128<double> lhs, byref Vec128<double> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: call Z0.Vec128`1<System.SByte> Z0.dinx::or(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec128`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0061: call Z0.Vec128`1<System.Byte> Z0.dinx::or(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec128`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_009B: call Z0.Vec128`1<System.Int16> Z0.dinx::or(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec128`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00D5: call Z0.Vec128`1<System.UInt16> Z0.dinx::or(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec128`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_010F: call Z0.Vec128`1<System.Int32> Z0.dinx::or(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec128`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_014A: call Z0.Vec128`1<System.UInt32> Z0.dinx::or(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec128`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0185: call Z0.Vec128`1<System.Int64> Z0.dinx::or(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec128`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01C0: call Z0.Vec128`1<System.UInt64> Z0.dinx::or(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec128`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01FB: call Z0.Vec128`1<System.Single> Z0.dinx::or(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Single>&)
    IL_0209: ldobj Z0.Vec128`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0236: call Z0.Vec128`1<System.Double> Z0.dinx::or(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Double>&)
    IL_0244: ldobj Z0.Vec128`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\or.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\or.cs"
    IL_0254: ldc.i4.s 43
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec256<byte> or<byte>(byref Vec256<byte> lhs, byref Vec256<byte> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: call Z0.Vec256`1<System.SByte> Z0.dinx::or(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec256`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0061: call Z0.Vec256`1<System.Byte> Z0.dinx::or(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec256`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_009B: call Z0.Vec256`1<System.Int16> Z0.dinx::or(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec256`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00D5: call Z0.Vec256`1<System.UInt16> Z0.dinx::or(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec256`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_010F: call Z0.Vec256`1<System.Int32> Z0.dinx::or(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec256`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_014A: call Z0.Vec256`1<System.UInt32> Z0.dinx::or(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec256`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0185: call Z0.Vec256`1<System.Int64> Z0.dinx::or(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec256`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01C0: call Z0.Vec256`1<System.UInt64> Z0.dinx::or(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec256`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01FB: call Z0.Vec256`1<System.Single> Z0.dinx::or(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Single>&)
    IL_0209: ldobj Z0.Vec256`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0236: call Z0.Vec256`1<System.Double> Z0.dinx::or(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Double>&)
    IL_0244: ldobj Z0.Vec256`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\or.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\or.cs"
    IL_0254: ldc.i4.s 71
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec256<ushort> or<ushort>(byref Vec256<ushort> lhs, byref Vec256<ushort> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: call Z0.Vec256`1<System.SByte> Z0.dinx::or(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec256`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0061: call Z0.Vec256`1<System.Byte> Z0.dinx::or(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec256`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_009B: call Z0.Vec256`1<System.Int16> Z0.dinx::or(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec256`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00D5: call Z0.Vec256`1<System.UInt16> Z0.dinx::or(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec256`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_010F: call Z0.Vec256`1<System.Int32> Z0.dinx::or(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec256`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_014A: call Z0.Vec256`1<System.UInt32> Z0.dinx::or(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec256`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0185: call Z0.Vec256`1<System.Int64> Z0.dinx::or(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec256`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01C0: call Z0.Vec256`1<System.UInt64> Z0.dinx::or(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec256`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01FB: call Z0.Vec256`1<System.Single> Z0.dinx::or(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Single>&)
    IL_0209: ldobj Z0.Vec256`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0236: call Z0.Vec256`1<System.Double> Z0.dinx::or(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Double>&)
    IL_0244: ldobj Z0.Vec256`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\or.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\or.cs"
    IL_0254: ldc.i4.s 71
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec256<uint> or<uint>(byref Vec256<uint> lhs, byref Vec256<uint> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: call Z0.Vec256`1<System.SByte> Z0.dinx::or(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec256`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0061: call Z0.Vec256`1<System.Byte> Z0.dinx::or(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec256`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_009B: call Z0.Vec256`1<System.Int16> Z0.dinx::or(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec256`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00D5: call Z0.Vec256`1<System.UInt16> Z0.dinx::or(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec256`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_010F: call Z0.Vec256`1<System.Int32> Z0.dinx::or(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec256`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_014A: call Z0.Vec256`1<System.UInt32> Z0.dinx::or(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec256`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0185: call Z0.Vec256`1<System.Int64> Z0.dinx::or(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec256`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01C0: call Z0.Vec256`1<System.UInt64> Z0.dinx::or(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec256`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01FB: call Z0.Vec256`1<System.Single> Z0.dinx::or(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Single>&)
    IL_0209: ldobj Z0.Vec256`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0236: call Z0.Vec256`1<System.Double> Z0.dinx::or(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Double>&)
    IL_0244: ldobj Z0.Vec256`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\or.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\or.cs"
    IL_0254: ldc.i4.s 71
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec256<ulong> or<ulong>(byref Vec256<ulong> lhs, byref Vec256<ulong> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: call Z0.Vec256`1<System.SByte> Z0.dinx::or(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec256`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0061: call Z0.Vec256`1<System.Byte> Z0.dinx::or(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec256`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_009B: call Z0.Vec256`1<System.Int16> Z0.dinx::or(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec256`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00D5: call Z0.Vec256`1<System.UInt16> Z0.dinx::or(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec256`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_010F: call Z0.Vec256`1<System.Int32> Z0.dinx::or(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec256`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_014A: call Z0.Vec256`1<System.UInt32> Z0.dinx::or(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec256`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0185: call Z0.Vec256`1<System.Int64> Z0.dinx::or(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec256`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01C0: call Z0.Vec256`1<System.UInt64> Z0.dinx::or(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec256`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01FB: call Z0.Vec256`1<System.Single> Z0.dinx::or(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Single>&)
    IL_0209: ldobj Z0.Vec256`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0236: call Z0.Vec256`1<System.Double> Z0.dinx::or(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Double>&)
    IL_0244: ldobj Z0.Vec256`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\or.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\or.cs"
    IL_0254: ldc.i4.s 71
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec256<sbyte> or<sbyte>(byref Vec256<sbyte> lhs, byref Vec256<sbyte> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: call Z0.Vec256`1<System.SByte> Z0.dinx::or(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec256`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0061: call Z0.Vec256`1<System.Byte> Z0.dinx::or(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec256`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_009B: call Z0.Vec256`1<System.Int16> Z0.dinx::or(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec256`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00D5: call Z0.Vec256`1<System.UInt16> Z0.dinx::or(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec256`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_010F: call Z0.Vec256`1<System.Int32> Z0.dinx::or(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec256`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_014A: call Z0.Vec256`1<System.UInt32> Z0.dinx::or(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec256`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0185: call Z0.Vec256`1<System.Int64> Z0.dinx::or(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec256`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01C0: call Z0.Vec256`1<System.UInt64> Z0.dinx::or(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec256`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01FB: call Z0.Vec256`1<System.Single> Z0.dinx::or(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Single>&)
    IL_0209: ldobj Z0.Vec256`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0236: call Z0.Vec256`1<System.Double> Z0.dinx::or(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Double>&)
    IL_0244: ldobj Z0.Vec256`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\or.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\or.cs"
    IL_0254: ldc.i4.s 71
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec256<short> or<short>(byref Vec256<short> lhs, byref Vec256<short> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: call Z0.Vec256`1<System.SByte> Z0.dinx::or(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec256`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0061: call Z0.Vec256`1<System.Byte> Z0.dinx::or(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec256`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_009B: call Z0.Vec256`1<System.Int16> Z0.dinx::or(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec256`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00D5: call Z0.Vec256`1<System.UInt16> Z0.dinx::or(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec256`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_010F: call Z0.Vec256`1<System.Int32> Z0.dinx::or(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec256`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_014A: call Z0.Vec256`1<System.UInt32> Z0.dinx::or(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec256`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0185: call Z0.Vec256`1<System.Int64> Z0.dinx::or(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec256`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01C0: call Z0.Vec256`1<System.UInt64> Z0.dinx::or(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec256`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01FB: call Z0.Vec256`1<System.Single> Z0.dinx::or(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Single>&)
    IL_0209: ldobj Z0.Vec256`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0236: call Z0.Vec256`1<System.Double> Z0.dinx::or(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Double>&)
    IL_0244: ldobj Z0.Vec256`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\or.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\or.cs"
    IL_0254: ldc.i4.s 71
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec256<int> or<int>(byref Vec256<int> lhs, byref Vec256<int> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: call Z0.Vec256`1<System.SByte> Z0.dinx::or(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec256`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0061: call Z0.Vec256`1<System.Byte> Z0.dinx::or(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec256`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_009B: call Z0.Vec256`1<System.Int16> Z0.dinx::or(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec256`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00D5: call Z0.Vec256`1<System.UInt16> Z0.dinx::or(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec256`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_010F: call Z0.Vec256`1<System.Int32> Z0.dinx::or(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec256`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_014A: call Z0.Vec256`1<System.UInt32> Z0.dinx::or(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec256`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0185: call Z0.Vec256`1<System.Int64> Z0.dinx::or(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec256`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01C0: call Z0.Vec256`1<System.UInt64> Z0.dinx::or(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec256`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01FB: call Z0.Vec256`1<System.Single> Z0.dinx::or(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Single>&)
    IL_0209: ldobj Z0.Vec256`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0236: call Z0.Vec256`1<System.Double> Z0.dinx::or(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Double>&)
    IL_0244: ldobj Z0.Vec256`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\or.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\or.cs"
    IL_0254: ldc.i4.s 71
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec256<long> or<long>(byref Vec256<long> lhs, byref Vec256<long> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: call Z0.Vec256`1<System.SByte> Z0.dinx::or(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec256`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0061: call Z0.Vec256`1<System.Byte> Z0.dinx::or(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec256`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_009B: call Z0.Vec256`1<System.Int16> Z0.dinx::or(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec256`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00D5: call Z0.Vec256`1<System.UInt16> Z0.dinx::or(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec256`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_010F: call Z0.Vec256`1<System.Int32> Z0.dinx::or(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec256`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_014A: call Z0.Vec256`1<System.UInt32> Z0.dinx::or(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec256`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0185: call Z0.Vec256`1<System.Int64> Z0.dinx::or(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec256`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01C0: call Z0.Vec256`1<System.UInt64> Z0.dinx::or(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec256`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01FB: call Z0.Vec256`1<System.Single> Z0.dinx::or(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Single>&)
    IL_0209: ldobj Z0.Vec256`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0236: call Z0.Vec256`1<System.Double> Z0.dinx::or(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Double>&)
    IL_0244: ldobj Z0.Vec256`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\or.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\or.cs"
    IL_0254: ldc.i4.s 71
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec256<float> or<float>(byref Vec256<float> lhs, byref Vec256<float> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: call Z0.Vec256`1<System.SByte> Z0.dinx::or(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec256`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0061: call Z0.Vec256`1<System.Byte> Z0.dinx::or(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec256`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_009B: call Z0.Vec256`1<System.Int16> Z0.dinx::or(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec256`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00D5: call Z0.Vec256`1<System.UInt16> Z0.dinx::or(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec256`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_010F: call Z0.Vec256`1<System.Int32> Z0.dinx::or(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec256`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_014A: call Z0.Vec256`1<System.UInt32> Z0.dinx::or(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec256`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0185: call Z0.Vec256`1<System.Int64> Z0.dinx::or(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec256`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01C0: call Z0.Vec256`1<System.UInt64> Z0.dinx::or(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec256`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01FB: call Z0.Vec256`1<System.Single> Z0.dinx::or(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Single>&)
    IL_0209: ldobj Z0.Vec256`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0236: call Z0.Vec256`1<System.Double> Z0.dinx::or(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Double>&)
    IL_0244: ldobj Z0.Vec256`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\or.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\or.cs"
    IL_0254: ldc.i4.s 71
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec256<double> or<double>(byref Vec256<double> lhs, byref Vec256<double> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: call Z0.Vec256`1<System.SByte> Z0.dinx::or(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec256`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0061: call Z0.Vec256`1<System.Byte> Z0.dinx::or(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec256`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_009B: call Z0.Vec256`1<System.Int16> Z0.dinx::or(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec256`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00D5: call Z0.Vec256`1<System.UInt16> Z0.dinx::or(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec256`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_010F: call Z0.Vec256`1<System.Int32> Z0.dinx::or(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec256`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_014A: call Z0.Vec256`1<System.UInt32> Z0.dinx::or(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec256`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0185: call Z0.Vec256`1<System.Int64> Z0.dinx::or(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec256`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01C0: call Z0.Vec256`1<System.UInt64> Z0.dinx::or(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec256`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01FB: call Z0.Vec256`1<System.Single> Z0.dinx::or(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Single>&)
    IL_0209: ldobj Z0.Vec256`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0236: call Z0.Vec256`1<System.Double> Z0.dinx::or(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Double>&)
    IL_0244: ldobj Z0.Vec256`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\or.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\or.cs"
    IL_0254: ldc.i4.s 71
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
void or<byte>(byref Vec128<byte> lhs, byref Vec128<byte> rhs, byref Byte dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::or(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::or(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::or(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::or(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::or(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::or(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::or(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::or(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::or(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::or(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\or.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\or.cs"
    IL_0208: ldc.i4.s 100
    IL_020A: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_020F: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0214: throw

}
void or<ushort>(byref Vec128<ushort> lhs, byref Vec128<ushort> rhs, byref UInt16 dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::or(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::or(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::or(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::or(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::or(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::or(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::or(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::or(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::or(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::or(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\or.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\or.cs"
    IL_0208: ldc.i4.s 100
    IL_020A: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_020F: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0214: throw

}
void or<uint>(byref Vec128<uint> lhs, byref Vec128<uint> rhs, byref UInt32 dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::or(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::or(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::or(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::or(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::or(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::or(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::or(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::or(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::or(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::or(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\or.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\or.cs"
    IL_0208: ldc.i4.s 100
    IL_020A: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_020F: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0214: throw

}
void or<ulong>(byref Vec128<ulong> lhs, byref Vec128<ulong> rhs, byref UInt64 dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::or(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::or(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::or(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::or(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::or(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::or(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::or(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::or(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::or(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::or(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\or.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\or.cs"
    IL_0208: ldc.i4.s 100
    IL_020A: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_020F: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0214: throw

}
void or<sbyte>(byref Vec128<sbyte> lhs, byref Vec128<sbyte> rhs, byref SByte dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::or(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::or(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::or(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::or(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::or(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::or(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::or(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::or(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::or(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::or(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\or.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\or.cs"
    IL_0208: ldc.i4.s 100
    IL_020A: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_020F: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0214: throw

}
void or<short>(byref Vec128<short> lhs, byref Vec128<short> rhs, byref Int16 dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::or(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::or(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::or(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::or(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::or(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::or(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::or(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::or(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::or(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::or(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\or.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\or.cs"
    IL_0208: ldc.i4.s 100
    IL_020A: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_020F: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0214: throw

}
void or<int>(byref Vec128<int> lhs, byref Vec128<int> rhs, byref Int32 dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::or(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::or(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::or(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::or(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::or(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::or(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::or(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::or(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::or(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::or(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\or.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\or.cs"
    IL_0208: ldc.i4.s 100
    IL_020A: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_020F: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0214: throw

}
void or<long>(byref Vec128<long> lhs, byref Vec128<long> rhs, byref Int64 dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::or(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::or(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::or(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::or(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::or(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::or(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::or(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::or(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::or(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::or(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\or.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\or.cs"
    IL_0208: ldc.i4.s 100
    IL_020A: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_020F: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0214: throw

}
void or<float>(byref Vec128<float> lhs, byref Vec128<float> rhs, byref Single dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::or(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::or(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::or(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::or(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::or(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::or(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::or(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::or(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::or(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::or(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\or.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\or.cs"
    IL_0208: ldc.i4.s 100
    IL_020A: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_020F: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0214: throw

}
void or<double>(byref Vec128<double> lhs, byref Vec128<double> rhs, byref Double dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::or(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::or(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::or(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::or(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::or(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::or(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::or(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::or(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::or(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::or(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\or.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\or.cs"
    IL_0208: ldc.i4.s 100
    IL_020A: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_020F: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0214: throw

}
void or<byte>(byref Vec256<byte> lhs, byref Vec256<byte> rhs, byref Byte dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::or(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::or(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::or(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::or(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::or(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::or(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::or(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::or(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::or(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::or(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\or.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\or.cs"
    IL_0208: ldc.i4 128
    IL_020D: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_0212: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0217: throw

}
void or<ushort>(byref Vec256<ushort> lhs, byref Vec256<ushort> rhs, byref UInt16 dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::or(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::or(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::or(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::or(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::or(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::or(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::or(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::or(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::or(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::or(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\or.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\or.cs"
    IL_0208: ldc.i4 128
    IL_020D: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_0212: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0217: throw

}
void or<uint>(byref Vec256<uint> lhs, byref Vec256<uint> rhs, byref UInt32 dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::or(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::or(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::or(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::or(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::or(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::or(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::or(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::or(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::or(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::or(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\or.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\or.cs"
    IL_0208: ldc.i4 128
    IL_020D: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_0212: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0217: throw

}
void or<ulong>(byref Vec256<ulong> lhs, byref Vec256<ulong> rhs, byref UInt64 dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::or(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::or(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::or(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::or(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::or(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::or(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::or(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::or(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::or(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::or(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\or.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\or.cs"
    IL_0208: ldc.i4 128
    IL_020D: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_0212: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0217: throw

}
void or<sbyte>(byref Vec256<sbyte> lhs, byref Vec256<sbyte> rhs, byref SByte dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::or(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::or(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::or(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::or(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::or(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::or(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::or(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::or(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::or(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::or(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\or.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\or.cs"
    IL_0208: ldc.i4 128
    IL_020D: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_0212: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0217: throw

}
void or<short>(byref Vec256<short> lhs, byref Vec256<short> rhs, byref Int16 dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::or(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::or(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::or(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::or(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::or(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::or(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::or(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::or(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::or(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::or(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\or.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\or.cs"
    IL_0208: ldc.i4 128
    IL_020D: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_0212: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0217: throw

}
void or<int>(byref Vec256<int> lhs, byref Vec256<int> rhs, byref Int32 dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::or(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::or(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::or(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::or(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::or(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::or(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::or(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::or(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::or(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::or(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\or.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\or.cs"
    IL_0208: ldc.i4 128
    IL_020D: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_0212: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0217: throw

}
void or<long>(byref Vec256<long> lhs, byref Vec256<long> rhs, byref Int64 dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::or(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::or(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::or(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::or(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::or(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::or(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::or(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::or(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::or(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::or(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\or.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\or.cs"
    IL_0208: ldc.i4 128
    IL_020D: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_0212: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0217: throw

}
void or<float>(byref Vec256<float> lhs, byref Vec256<float> rhs, byref Single dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::or(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::or(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::or(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::or(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::or(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::or(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::or(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::or(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::or(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::or(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\or.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\or.cs"
    IL_0208: ldc.i4 128
    IL_020D: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_0212: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0217: throw

}
void or<double>(byref Vec256<double> lhs, byref Vec256<double> rhs, byref Double dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::or(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::or(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::or(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::or(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::or(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::or(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::or(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::or(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::or(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::or(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\or.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\or.cs"
    IL_0208: ldc.i4 128
    IL_020D: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_0212: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0217: throw

}
Vec128<byte> xor<byte>(byref Vec128<byte> lhs, byref Vec128<byte> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: call Z0.Vec128`1<System.SByte> Z0.dinx::xor(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec128`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0061: call Z0.Vec128`1<System.Byte> Z0.dinx::xor(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec128`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_009B: call Z0.Vec128`1<System.Int16> Z0.dinx::xor(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec128`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00D5: call Z0.Vec128`1<System.UInt16> Z0.dinx::xor(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec128`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_010F: call Z0.Vec128`1<System.Int32> Z0.dinx::xor(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec128`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_014A: call Z0.Vec128`1<System.UInt32> Z0.dinx::xor(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec128`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0185: call Z0.Vec128`1<System.Int64> Z0.dinx::xor(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec128`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01C0: call Z0.Vec128`1<System.UInt64> Z0.dinx::xor(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec128`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01FB: call Z0.Vec128`1<System.Single> Z0.dinx::xor(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Single>&)
    IL_0209: ldobj Z0.Vec128`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0236: call Z0.Vec128`1<System.Double> Z0.dinx::xor(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Double>&)
    IL_0244: ldobj Z0.Vec128`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\xor.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\xor.cs"
    IL_0254: ldc.i4.s 43
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec128<ushort> xor<ushort>(byref Vec128<ushort> lhs, byref Vec128<ushort> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: call Z0.Vec128`1<System.SByte> Z0.dinx::xor(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec128`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0061: call Z0.Vec128`1<System.Byte> Z0.dinx::xor(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec128`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_009B: call Z0.Vec128`1<System.Int16> Z0.dinx::xor(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec128`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00D5: call Z0.Vec128`1<System.UInt16> Z0.dinx::xor(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec128`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_010F: call Z0.Vec128`1<System.Int32> Z0.dinx::xor(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec128`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_014A: call Z0.Vec128`1<System.UInt32> Z0.dinx::xor(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec128`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0185: call Z0.Vec128`1<System.Int64> Z0.dinx::xor(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec128`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01C0: call Z0.Vec128`1<System.UInt64> Z0.dinx::xor(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec128`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01FB: call Z0.Vec128`1<System.Single> Z0.dinx::xor(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Single>&)
    IL_0209: ldobj Z0.Vec128`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0236: call Z0.Vec128`1<System.Double> Z0.dinx::xor(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Double>&)
    IL_0244: ldobj Z0.Vec128`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\xor.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\xor.cs"
    IL_0254: ldc.i4.s 43
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec128<uint> xor<uint>(byref Vec128<uint> lhs, byref Vec128<uint> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: call Z0.Vec128`1<System.SByte> Z0.dinx::xor(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec128`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0061: call Z0.Vec128`1<System.Byte> Z0.dinx::xor(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec128`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_009B: call Z0.Vec128`1<System.Int16> Z0.dinx::xor(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec128`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00D5: call Z0.Vec128`1<System.UInt16> Z0.dinx::xor(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec128`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_010F: call Z0.Vec128`1<System.Int32> Z0.dinx::xor(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec128`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_014A: call Z0.Vec128`1<System.UInt32> Z0.dinx::xor(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec128`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0185: call Z0.Vec128`1<System.Int64> Z0.dinx::xor(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec128`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01C0: call Z0.Vec128`1<System.UInt64> Z0.dinx::xor(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec128`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01FB: call Z0.Vec128`1<System.Single> Z0.dinx::xor(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Single>&)
    IL_0209: ldobj Z0.Vec128`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0236: call Z0.Vec128`1<System.Double> Z0.dinx::xor(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Double>&)
    IL_0244: ldobj Z0.Vec128`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\xor.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\xor.cs"
    IL_0254: ldc.i4.s 43
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec128<ulong> xor<ulong>(byref Vec128<ulong> lhs, byref Vec128<ulong> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: call Z0.Vec128`1<System.SByte> Z0.dinx::xor(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec128`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0061: call Z0.Vec128`1<System.Byte> Z0.dinx::xor(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec128`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_009B: call Z0.Vec128`1<System.Int16> Z0.dinx::xor(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec128`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00D5: call Z0.Vec128`1<System.UInt16> Z0.dinx::xor(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec128`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_010F: call Z0.Vec128`1<System.Int32> Z0.dinx::xor(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec128`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_014A: call Z0.Vec128`1<System.UInt32> Z0.dinx::xor(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec128`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0185: call Z0.Vec128`1<System.Int64> Z0.dinx::xor(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec128`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01C0: call Z0.Vec128`1<System.UInt64> Z0.dinx::xor(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec128`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01FB: call Z0.Vec128`1<System.Single> Z0.dinx::xor(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Single>&)
    IL_0209: ldobj Z0.Vec128`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0236: call Z0.Vec128`1<System.Double> Z0.dinx::xor(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Double>&)
    IL_0244: ldobj Z0.Vec128`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\xor.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\xor.cs"
    IL_0254: ldc.i4.s 43
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec128<sbyte> xor<sbyte>(byref Vec128<sbyte> lhs, byref Vec128<sbyte> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: call Z0.Vec128`1<System.SByte> Z0.dinx::xor(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec128`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0061: call Z0.Vec128`1<System.Byte> Z0.dinx::xor(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec128`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_009B: call Z0.Vec128`1<System.Int16> Z0.dinx::xor(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec128`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00D5: call Z0.Vec128`1<System.UInt16> Z0.dinx::xor(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec128`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_010F: call Z0.Vec128`1<System.Int32> Z0.dinx::xor(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec128`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_014A: call Z0.Vec128`1<System.UInt32> Z0.dinx::xor(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec128`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0185: call Z0.Vec128`1<System.Int64> Z0.dinx::xor(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec128`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01C0: call Z0.Vec128`1<System.UInt64> Z0.dinx::xor(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec128`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01FB: call Z0.Vec128`1<System.Single> Z0.dinx::xor(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Single>&)
    IL_0209: ldobj Z0.Vec128`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0236: call Z0.Vec128`1<System.Double> Z0.dinx::xor(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Double>&)
    IL_0244: ldobj Z0.Vec128`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\xor.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\xor.cs"
    IL_0254: ldc.i4.s 43
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec128<short> xor<short>(byref Vec128<short> lhs, byref Vec128<short> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: call Z0.Vec128`1<System.SByte> Z0.dinx::xor(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec128`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0061: call Z0.Vec128`1<System.Byte> Z0.dinx::xor(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec128`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_009B: call Z0.Vec128`1<System.Int16> Z0.dinx::xor(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec128`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00D5: call Z0.Vec128`1<System.UInt16> Z0.dinx::xor(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec128`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_010F: call Z0.Vec128`1<System.Int32> Z0.dinx::xor(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec128`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_014A: call Z0.Vec128`1<System.UInt32> Z0.dinx::xor(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec128`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0185: call Z0.Vec128`1<System.Int64> Z0.dinx::xor(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec128`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01C0: call Z0.Vec128`1<System.UInt64> Z0.dinx::xor(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec128`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01FB: call Z0.Vec128`1<System.Single> Z0.dinx::xor(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Single>&)
    IL_0209: ldobj Z0.Vec128`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0236: call Z0.Vec128`1<System.Double> Z0.dinx::xor(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Double>&)
    IL_0244: ldobj Z0.Vec128`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\xor.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\xor.cs"
    IL_0254: ldc.i4.s 43
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec128<int> xor<int>(byref Vec128<int> lhs, byref Vec128<int> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: call Z0.Vec128`1<System.SByte> Z0.dinx::xor(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec128`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0061: call Z0.Vec128`1<System.Byte> Z0.dinx::xor(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec128`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_009B: call Z0.Vec128`1<System.Int16> Z0.dinx::xor(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec128`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00D5: call Z0.Vec128`1<System.UInt16> Z0.dinx::xor(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec128`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_010F: call Z0.Vec128`1<System.Int32> Z0.dinx::xor(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec128`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_014A: call Z0.Vec128`1<System.UInt32> Z0.dinx::xor(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec128`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0185: call Z0.Vec128`1<System.Int64> Z0.dinx::xor(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec128`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01C0: call Z0.Vec128`1<System.UInt64> Z0.dinx::xor(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec128`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01FB: call Z0.Vec128`1<System.Single> Z0.dinx::xor(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Single>&)
    IL_0209: ldobj Z0.Vec128`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0236: call Z0.Vec128`1<System.Double> Z0.dinx::xor(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Double>&)
    IL_0244: ldobj Z0.Vec128`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\xor.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\xor.cs"
    IL_0254: ldc.i4.s 43
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec128<long> xor<long>(byref Vec128<long> lhs, byref Vec128<long> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: call Z0.Vec128`1<System.SByte> Z0.dinx::xor(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec128`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0061: call Z0.Vec128`1<System.Byte> Z0.dinx::xor(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec128`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_009B: call Z0.Vec128`1<System.Int16> Z0.dinx::xor(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec128`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00D5: call Z0.Vec128`1<System.UInt16> Z0.dinx::xor(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec128`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_010F: call Z0.Vec128`1<System.Int32> Z0.dinx::xor(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec128`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_014A: call Z0.Vec128`1<System.UInt32> Z0.dinx::xor(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec128`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0185: call Z0.Vec128`1<System.Int64> Z0.dinx::xor(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec128`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01C0: call Z0.Vec128`1<System.UInt64> Z0.dinx::xor(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec128`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01FB: call Z0.Vec128`1<System.Single> Z0.dinx::xor(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Single>&)
    IL_0209: ldobj Z0.Vec128`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0236: call Z0.Vec128`1<System.Double> Z0.dinx::xor(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Double>&)
    IL_0244: ldobj Z0.Vec128`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\xor.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\xor.cs"
    IL_0254: ldc.i4.s 43
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec128<float> xor<float>(byref Vec128<float> lhs, byref Vec128<float> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: call Z0.Vec128`1<System.SByte> Z0.dinx::xor(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec128`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0061: call Z0.Vec128`1<System.Byte> Z0.dinx::xor(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec128`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_009B: call Z0.Vec128`1<System.Int16> Z0.dinx::xor(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec128`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00D5: call Z0.Vec128`1<System.UInt16> Z0.dinx::xor(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec128`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_010F: call Z0.Vec128`1<System.Int32> Z0.dinx::xor(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec128`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_014A: call Z0.Vec128`1<System.UInt32> Z0.dinx::xor(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec128`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0185: call Z0.Vec128`1<System.Int64> Z0.dinx::xor(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec128`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01C0: call Z0.Vec128`1<System.UInt64> Z0.dinx::xor(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec128`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01FB: call Z0.Vec128`1<System.Single> Z0.dinx::xor(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Single>&)
    IL_0209: ldobj Z0.Vec128`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0236: call Z0.Vec128`1<System.Double> Z0.dinx::xor(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Double>&)
    IL_0244: ldobj Z0.Vec128`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\xor.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\xor.cs"
    IL_0254: ldc.i4.s 43
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec128<double> xor<double>(byref Vec128<double> lhs, byref Vec128<double> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: call Z0.Vec128`1<System.SByte> Z0.dinx::xor(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec128`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0061: call Z0.Vec128`1<System.Byte> Z0.dinx::xor(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec128`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_009B: call Z0.Vec128`1<System.Int16> Z0.dinx::xor(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec128`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00D5: call Z0.Vec128`1<System.UInt16> Z0.dinx::xor(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec128`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_010F: call Z0.Vec128`1<System.Int32> Z0.dinx::xor(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec128`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_014A: call Z0.Vec128`1<System.UInt32> Z0.dinx::xor(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec128`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0185: call Z0.Vec128`1<System.Int64> Z0.dinx::xor(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec128`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01C0: call Z0.Vec128`1<System.UInt64> Z0.dinx::xor(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec128`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01FB: call Z0.Vec128`1<System.Single> Z0.dinx::xor(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Single>&)
    IL_0209: ldobj Z0.Vec128`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0236: call Z0.Vec128`1<System.Double> Z0.dinx::xor(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Double>&)
    IL_0244: ldobj Z0.Vec128`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\xor.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\xor.cs"
    IL_0254: ldc.i4.s 43
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec256<byte> xor<byte>(byref Vec256<byte> lhs, byref Vec256<byte> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: call Z0.Vec256`1<System.SByte> Z0.dinx::xor(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec256`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0061: call Z0.Vec256`1<System.Byte> Z0.dinx::xor(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec256`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_009B: call Z0.Vec256`1<System.Int16> Z0.dinx::xor(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec256`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00D5: call Z0.Vec256`1<System.UInt16> Z0.dinx::xor(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec256`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_010F: call Z0.Vec256`1<System.Int32> Z0.dinx::xor(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec256`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_014A: call Z0.Vec256`1<System.UInt32> Z0.dinx::xor(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec256`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0185: call Z0.Vec256`1<System.Int64> Z0.dinx::xor(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec256`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01C0: call Z0.Vec256`1<System.UInt64> Z0.dinx::xor(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec256`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01FB: call Z0.Vec256`1<System.Single> Z0.dinx::xor(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Single>&)
    IL_0209: ldobj Z0.Vec256`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0236: call Z0.Vec256`1<System.Double> Z0.dinx::xor(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Double>&)
    IL_0244: ldobj Z0.Vec256`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\xor.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\xor.cs"
    IL_0254: ldc.i4.s 71
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec256<ushort> xor<ushort>(byref Vec256<ushort> lhs, byref Vec256<ushort> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: call Z0.Vec256`1<System.SByte> Z0.dinx::xor(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec256`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0061: call Z0.Vec256`1<System.Byte> Z0.dinx::xor(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec256`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_009B: call Z0.Vec256`1<System.Int16> Z0.dinx::xor(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec256`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00D5: call Z0.Vec256`1<System.UInt16> Z0.dinx::xor(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec256`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_010F: call Z0.Vec256`1<System.Int32> Z0.dinx::xor(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec256`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_014A: call Z0.Vec256`1<System.UInt32> Z0.dinx::xor(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec256`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0185: call Z0.Vec256`1<System.Int64> Z0.dinx::xor(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec256`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01C0: call Z0.Vec256`1<System.UInt64> Z0.dinx::xor(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec256`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01FB: call Z0.Vec256`1<System.Single> Z0.dinx::xor(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Single>&)
    IL_0209: ldobj Z0.Vec256`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0236: call Z0.Vec256`1<System.Double> Z0.dinx::xor(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Double>&)
    IL_0244: ldobj Z0.Vec256`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\xor.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\xor.cs"
    IL_0254: ldc.i4.s 71
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec256<uint> xor<uint>(byref Vec256<uint> lhs, byref Vec256<uint> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: call Z0.Vec256`1<System.SByte> Z0.dinx::xor(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec256`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0061: call Z0.Vec256`1<System.Byte> Z0.dinx::xor(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec256`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_009B: call Z0.Vec256`1<System.Int16> Z0.dinx::xor(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec256`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00D5: call Z0.Vec256`1<System.UInt16> Z0.dinx::xor(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec256`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_010F: call Z0.Vec256`1<System.Int32> Z0.dinx::xor(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec256`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_014A: call Z0.Vec256`1<System.UInt32> Z0.dinx::xor(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec256`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0185: call Z0.Vec256`1<System.Int64> Z0.dinx::xor(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec256`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01C0: call Z0.Vec256`1<System.UInt64> Z0.dinx::xor(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec256`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01FB: call Z0.Vec256`1<System.Single> Z0.dinx::xor(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Single>&)
    IL_0209: ldobj Z0.Vec256`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0236: call Z0.Vec256`1<System.Double> Z0.dinx::xor(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Double>&)
    IL_0244: ldobj Z0.Vec256`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\xor.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\xor.cs"
    IL_0254: ldc.i4.s 71
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec256<ulong> xor<ulong>(byref Vec256<ulong> lhs, byref Vec256<ulong> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: call Z0.Vec256`1<System.SByte> Z0.dinx::xor(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec256`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0061: call Z0.Vec256`1<System.Byte> Z0.dinx::xor(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec256`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_009B: call Z0.Vec256`1<System.Int16> Z0.dinx::xor(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec256`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00D5: call Z0.Vec256`1<System.UInt16> Z0.dinx::xor(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec256`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_010F: call Z0.Vec256`1<System.Int32> Z0.dinx::xor(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec256`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_014A: call Z0.Vec256`1<System.UInt32> Z0.dinx::xor(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec256`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0185: call Z0.Vec256`1<System.Int64> Z0.dinx::xor(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec256`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01C0: call Z0.Vec256`1<System.UInt64> Z0.dinx::xor(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec256`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01FB: call Z0.Vec256`1<System.Single> Z0.dinx::xor(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Single>&)
    IL_0209: ldobj Z0.Vec256`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0236: call Z0.Vec256`1<System.Double> Z0.dinx::xor(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Double>&)
    IL_0244: ldobj Z0.Vec256`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\xor.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\xor.cs"
    IL_0254: ldc.i4.s 71
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec256<sbyte> xor<sbyte>(byref Vec256<sbyte> lhs, byref Vec256<sbyte> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: call Z0.Vec256`1<System.SByte> Z0.dinx::xor(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec256`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0061: call Z0.Vec256`1<System.Byte> Z0.dinx::xor(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec256`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_009B: call Z0.Vec256`1<System.Int16> Z0.dinx::xor(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec256`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00D5: call Z0.Vec256`1<System.UInt16> Z0.dinx::xor(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec256`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_010F: call Z0.Vec256`1<System.Int32> Z0.dinx::xor(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec256`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_014A: call Z0.Vec256`1<System.UInt32> Z0.dinx::xor(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec256`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0185: call Z0.Vec256`1<System.Int64> Z0.dinx::xor(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec256`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01C0: call Z0.Vec256`1<System.UInt64> Z0.dinx::xor(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec256`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01FB: call Z0.Vec256`1<System.Single> Z0.dinx::xor(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Single>&)
    IL_0209: ldobj Z0.Vec256`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0236: call Z0.Vec256`1<System.Double> Z0.dinx::xor(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Double>&)
    IL_0244: ldobj Z0.Vec256`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\xor.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\xor.cs"
    IL_0254: ldc.i4.s 71
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec256<short> xor<short>(byref Vec256<short> lhs, byref Vec256<short> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: call Z0.Vec256`1<System.SByte> Z0.dinx::xor(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec256`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0061: call Z0.Vec256`1<System.Byte> Z0.dinx::xor(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec256`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_009B: call Z0.Vec256`1<System.Int16> Z0.dinx::xor(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec256`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00D5: call Z0.Vec256`1<System.UInt16> Z0.dinx::xor(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec256`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_010F: call Z0.Vec256`1<System.Int32> Z0.dinx::xor(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec256`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_014A: call Z0.Vec256`1<System.UInt32> Z0.dinx::xor(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec256`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0185: call Z0.Vec256`1<System.Int64> Z0.dinx::xor(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec256`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01C0: call Z0.Vec256`1<System.UInt64> Z0.dinx::xor(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec256`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01FB: call Z0.Vec256`1<System.Single> Z0.dinx::xor(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Single>&)
    IL_0209: ldobj Z0.Vec256`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0236: call Z0.Vec256`1<System.Double> Z0.dinx::xor(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Double>&)
    IL_0244: ldobj Z0.Vec256`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\xor.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\xor.cs"
    IL_0254: ldc.i4.s 71
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec256<int> xor<int>(byref Vec256<int> lhs, byref Vec256<int> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: call Z0.Vec256`1<System.SByte> Z0.dinx::xor(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec256`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0061: call Z0.Vec256`1<System.Byte> Z0.dinx::xor(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec256`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_009B: call Z0.Vec256`1<System.Int16> Z0.dinx::xor(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec256`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00D5: call Z0.Vec256`1<System.UInt16> Z0.dinx::xor(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec256`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_010F: call Z0.Vec256`1<System.Int32> Z0.dinx::xor(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec256`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_014A: call Z0.Vec256`1<System.UInt32> Z0.dinx::xor(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec256`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0185: call Z0.Vec256`1<System.Int64> Z0.dinx::xor(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec256`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01C0: call Z0.Vec256`1<System.UInt64> Z0.dinx::xor(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec256`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01FB: call Z0.Vec256`1<System.Single> Z0.dinx::xor(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Single>&)
    IL_0209: ldobj Z0.Vec256`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0236: call Z0.Vec256`1<System.Double> Z0.dinx::xor(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Double>&)
    IL_0244: ldobj Z0.Vec256`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\xor.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\xor.cs"
    IL_0254: ldc.i4.s 71
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec256<long> xor<long>(byref Vec256<long> lhs, byref Vec256<long> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: call Z0.Vec256`1<System.SByte> Z0.dinx::xor(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec256`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0061: call Z0.Vec256`1<System.Byte> Z0.dinx::xor(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec256`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_009B: call Z0.Vec256`1<System.Int16> Z0.dinx::xor(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec256`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00D5: call Z0.Vec256`1<System.UInt16> Z0.dinx::xor(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec256`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_010F: call Z0.Vec256`1<System.Int32> Z0.dinx::xor(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec256`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_014A: call Z0.Vec256`1<System.UInt32> Z0.dinx::xor(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec256`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0185: call Z0.Vec256`1<System.Int64> Z0.dinx::xor(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec256`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01C0: call Z0.Vec256`1<System.UInt64> Z0.dinx::xor(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec256`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01FB: call Z0.Vec256`1<System.Single> Z0.dinx::xor(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Single>&)
    IL_0209: ldobj Z0.Vec256`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0236: call Z0.Vec256`1<System.Double> Z0.dinx::xor(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Double>&)
    IL_0244: ldobj Z0.Vec256`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\xor.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\xor.cs"
    IL_0254: ldc.i4.s 71
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec256<float> xor<float>(byref Vec256<float> lhs, byref Vec256<float> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: call Z0.Vec256`1<System.SByte> Z0.dinx::xor(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec256`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0061: call Z0.Vec256`1<System.Byte> Z0.dinx::xor(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec256`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_009B: call Z0.Vec256`1<System.Int16> Z0.dinx::xor(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec256`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00D5: call Z0.Vec256`1<System.UInt16> Z0.dinx::xor(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec256`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_010F: call Z0.Vec256`1<System.Int32> Z0.dinx::xor(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec256`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_014A: call Z0.Vec256`1<System.UInt32> Z0.dinx::xor(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec256`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0185: call Z0.Vec256`1<System.Int64> Z0.dinx::xor(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec256`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01C0: call Z0.Vec256`1<System.UInt64> Z0.dinx::xor(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec256`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01FB: call Z0.Vec256`1<System.Single> Z0.dinx::xor(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Single>&)
    IL_0209: ldobj Z0.Vec256`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0236: call Z0.Vec256`1<System.Double> Z0.dinx::xor(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Double>&)
    IL_0244: ldobj Z0.Vec256`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\xor.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\xor.cs"
    IL_0254: ldc.i4.s 71
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec256<double> xor<double>(byref Vec256<double> lhs, byref Vec256<double> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: call Z0.Vec256`1<System.SByte> Z0.dinx::xor(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec256`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0061: call Z0.Vec256`1<System.Byte> Z0.dinx::xor(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec256`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_009B: call Z0.Vec256`1<System.Int16> Z0.dinx::xor(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec256`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00D5: call Z0.Vec256`1<System.UInt16> Z0.dinx::xor(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec256`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_010F: call Z0.Vec256`1<System.Int32> Z0.dinx::xor(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec256`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_014A: call Z0.Vec256`1<System.UInt32> Z0.dinx::xor(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec256`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0185: call Z0.Vec256`1<System.Int64> Z0.dinx::xor(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec256`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01C0: call Z0.Vec256`1<System.UInt64> Z0.dinx::xor(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec256`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01FB: call Z0.Vec256`1<System.Single> Z0.dinx::xor(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Single>&)
    IL_0209: ldobj Z0.Vec256`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0236: call Z0.Vec256`1<System.Double> Z0.dinx::xor(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Double>&)
    IL_0244: ldobj Z0.Vec256`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\xor.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\xor.cs"
    IL_0254: ldc.i4.s 71
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
void xor<byte>(byref Vec128<byte> lhs, byref Vec128<byte> rhs, byref Byte dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\xor.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\xor.cs"
    IL_0208: ldc.i4.s 99
    IL_020A: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_020F: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0214: throw

}
void xor<ushort>(byref Vec128<ushort> lhs, byref Vec128<ushort> rhs, byref UInt16 dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\xor.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\xor.cs"
    IL_0208: ldc.i4.s 99
    IL_020A: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_020F: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0214: throw

}
void xor<uint>(byref Vec128<uint> lhs, byref Vec128<uint> rhs, byref UInt32 dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\xor.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\xor.cs"
    IL_0208: ldc.i4.s 99
    IL_020A: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_020F: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0214: throw

}
void xor<ulong>(byref Vec128<ulong> lhs, byref Vec128<ulong> rhs, byref UInt64 dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\xor.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\xor.cs"
    IL_0208: ldc.i4.s 99
    IL_020A: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_020F: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0214: throw

}
void xor<sbyte>(byref Vec128<sbyte> lhs, byref Vec128<sbyte> rhs, byref SByte dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\xor.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\xor.cs"
    IL_0208: ldc.i4.s 99
    IL_020A: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_020F: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0214: throw

}
void xor<short>(byref Vec128<short> lhs, byref Vec128<short> rhs, byref Int16 dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\xor.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\xor.cs"
    IL_0208: ldc.i4.s 99
    IL_020A: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_020F: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0214: throw

}
void xor<int>(byref Vec128<int> lhs, byref Vec128<int> rhs, byref Int32 dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\xor.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\xor.cs"
    IL_0208: ldc.i4.s 99
    IL_020A: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_020F: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0214: throw

}
void xor<long>(byref Vec128<long> lhs, byref Vec128<long> rhs, byref Int64 dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\xor.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\xor.cs"
    IL_0208: ldc.i4.s 99
    IL_020A: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_020F: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0214: throw

}
void xor<float>(byref Vec128<float> lhs, byref Vec128<float> rhs, byref Single dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\xor.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\xor.cs"
    IL_0208: ldc.i4.s 99
    IL_020A: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_020F: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0214: throw

}
void xor<double>(byref Vec128<double> lhs, byref Vec128<double> rhs, byref Double dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::xor(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\xor.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\xor.cs"
    IL_0208: ldc.i4.s 99
    IL_020A: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_020F: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0214: throw

}
void xor<byte>(byref Vec256<byte> lhs, byref Vec256<byte> rhs, byref Byte dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\xor.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\xor.cs"
    IL_0208: ldc.i4.s 127
    IL_020A: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_020F: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0214: throw

}
void xor<ushort>(byref Vec256<ushort> lhs, byref Vec256<ushort> rhs, byref UInt16 dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\xor.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\xor.cs"
    IL_0208: ldc.i4.s 127
    IL_020A: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_020F: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0214: throw

}
void xor<uint>(byref Vec256<uint> lhs, byref Vec256<uint> rhs, byref UInt32 dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\xor.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\xor.cs"
    IL_0208: ldc.i4.s 127
    IL_020A: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_020F: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0214: throw

}
void xor<ulong>(byref Vec256<ulong> lhs, byref Vec256<ulong> rhs, byref UInt64 dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\xor.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\xor.cs"
    IL_0208: ldc.i4.s 127
    IL_020A: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_020F: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0214: throw

}
void xor<sbyte>(byref Vec256<sbyte> lhs, byref Vec256<sbyte> rhs, byref SByte dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\xor.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\xor.cs"
    IL_0208: ldc.i4.s 127
    IL_020A: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_020F: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0214: throw

}
void xor<short>(byref Vec256<short> lhs, byref Vec256<short> rhs, byref Int16 dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\xor.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\xor.cs"
    IL_0208: ldc.i4.s 127
    IL_020A: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_020F: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0214: throw

}
void xor<int>(byref Vec256<int> lhs, byref Vec256<int> rhs, byref Int32 dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\xor.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\xor.cs"
    IL_0208: ldc.i4.s 127
    IL_020A: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_020F: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0214: throw

}
void xor<long>(byref Vec256<long> lhs, byref Vec256<long> rhs, byref Int64 dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\xor.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\xor.cs"
    IL_0208: ldc.i4.s 127
    IL_020A: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_020F: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0214: throw

}
void xor<float>(byref Vec256<float> lhs, byref Vec256<float> rhs, byref Single dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\xor.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\xor.cs"
    IL_0208: ldc.i4.s 127
    IL_020A: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_020F: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0214: throw

}
void xor<double>(byref Vec256<double> lhs, byref Vec256<double> rhs, byref Double dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::xor(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\xor.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\xor.cs"
    IL_0208: ldc.i4.s 127
    IL_020A: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_020F: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0214: throw

}
Vec128<byte> add<byte>(byref Vec128<byte> lhs, byref Vec128<byte> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: call Z0.Vec128`1<System.SByte> Z0.dinx::add(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec128`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0061: call Z0.Vec128`1<System.Byte> Z0.dinx::add(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec128`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_009B: call Z0.Vec128`1<System.Int16> Z0.dinx::add(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec128`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00D5: call Z0.Vec128`1<System.UInt16> Z0.dinx::add(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec128`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_010F: call Z0.Vec128`1<System.Int32> Z0.dinx::add(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec128`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_014A: call Z0.Vec128`1<System.UInt32> Z0.dinx::add(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec128`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0185: call Z0.Vec128`1<System.Int64> Z0.dinx::add(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec128`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01C0: call Z0.Vec128`1<System.UInt64> Z0.dinx::add(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec128`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01FB: call Z0.Vec128`1<System.Single> Z0.dinx::add(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Single>&)
    IL_0209: ldobj Z0.Vec128`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0236: call Z0.Vec128`1<System.Double> Z0.dinx::add(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Double>&)
    IL_0244: ldobj Z0.Vec128`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_0254: ldc.i4.s 44
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec128<ushort> add<ushort>(byref Vec128<ushort> lhs, byref Vec128<ushort> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: call Z0.Vec128`1<System.SByte> Z0.dinx::add(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec128`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0061: call Z0.Vec128`1<System.Byte> Z0.dinx::add(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec128`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_009B: call Z0.Vec128`1<System.Int16> Z0.dinx::add(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec128`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00D5: call Z0.Vec128`1<System.UInt16> Z0.dinx::add(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec128`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_010F: call Z0.Vec128`1<System.Int32> Z0.dinx::add(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec128`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_014A: call Z0.Vec128`1<System.UInt32> Z0.dinx::add(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec128`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0185: call Z0.Vec128`1<System.Int64> Z0.dinx::add(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec128`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01C0: call Z0.Vec128`1<System.UInt64> Z0.dinx::add(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec128`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01FB: call Z0.Vec128`1<System.Single> Z0.dinx::add(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Single>&)
    IL_0209: ldobj Z0.Vec128`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0236: call Z0.Vec128`1<System.Double> Z0.dinx::add(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Double>&)
    IL_0244: ldobj Z0.Vec128`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_0254: ldc.i4.s 44
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec128<uint> add<uint>(byref Vec128<uint> lhs, byref Vec128<uint> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: call Z0.Vec128`1<System.SByte> Z0.dinx::add(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec128`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0061: call Z0.Vec128`1<System.Byte> Z0.dinx::add(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec128`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_009B: call Z0.Vec128`1<System.Int16> Z0.dinx::add(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec128`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00D5: call Z0.Vec128`1<System.UInt16> Z0.dinx::add(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec128`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_010F: call Z0.Vec128`1<System.Int32> Z0.dinx::add(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec128`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_014A: call Z0.Vec128`1<System.UInt32> Z0.dinx::add(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec128`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0185: call Z0.Vec128`1<System.Int64> Z0.dinx::add(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec128`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01C0: call Z0.Vec128`1<System.UInt64> Z0.dinx::add(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec128`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01FB: call Z0.Vec128`1<System.Single> Z0.dinx::add(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Single>&)
    IL_0209: ldobj Z0.Vec128`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0236: call Z0.Vec128`1<System.Double> Z0.dinx::add(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Double>&)
    IL_0244: ldobj Z0.Vec128`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_0254: ldc.i4.s 44
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec128<ulong> add<ulong>(byref Vec128<ulong> lhs, byref Vec128<ulong> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: call Z0.Vec128`1<System.SByte> Z0.dinx::add(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec128`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0061: call Z0.Vec128`1<System.Byte> Z0.dinx::add(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec128`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_009B: call Z0.Vec128`1<System.Int16> Z0.dinx::add(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec128`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00D5: call Z0.Vec128`1<System.UInt16> Z0.dinx::add(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec128`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_010F: call Z0.Vec128`1<System.Int32> Z0.dinx::add(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec128`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_014A: call Z0.Vec128`1<System.UInt32> Z0.dinx::add(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec128`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0185: call Z0.Vec128`1<System.Int64> Z0.dinx::add(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec128`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01C0: call Z0.Vec128`1<System.UInt64> Z0.dinx::add(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec128`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01FB: call Z0.Vec128`1<System.Single> Z0.dinx::add(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Single>&)
    IL_0209: ldobj Z0.Vec128`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0236: call Z0.Vec128`1<System.Double> Z0.dinx::add(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Double>&)
    IL_0244: ldobj Z0.Vec128`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_0254: ldc.i4.s 44
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec128<sbyte> add<sbyte>(byref Vec128<sbyte> lhs, byref Vec128<sbyte> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: call Z0.Vec128`1<System.SByte> Z0.dinx::add(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec128`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0061: call Z0.Vec128`1<System.Byte> Z0.dinx::add(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec128`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_009B: call Z0.Vec128`1<System.Int16> Z0.dinx::add(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec128`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00D5: call Z0.Vec128`1<System.UInt16> Z0.dinx::add(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec128`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_010F: call Z0.Vec128`1<System.Int32> Z0.dinx::add(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec128`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_014A: call Z0.Vec128`1<System.UInt32> Z0.dinx::add(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec128`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0185: call Z0.Vec128`1<System.Int64> Z0.dinx::add(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec128`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01C0: call Z0.Vec128`1<System.UInt64> Z0.dinx::add(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec128`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01FB: call Z0.Vec128`1<System.Single> Z0.dinx::add(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Single>&)
    IL_0209: ldobj Z0.Vec128`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0236: call Z0.Vec128`1<System.Double> Z0.dinx::add(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Double>&)
    IL_0244: ldobj Z0.Vec128`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_0254: ldc.i4.s 44
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec128<short> add<short>(byref Vec128<short> lhs, byref Vec128<short> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: call Z0.Vec128`1<System.SByte> Z0.dinx::add(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec128`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0061: call Z0.Vec128`1<System.Byte> Z0.dinx::add(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec128`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_009B: call Z0.Vec128`1<System.Int16> Z0.dinx::add(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec128`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00D5: call Z0.Vec128`1<System.UInt16> Z0.dinx::add(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec128`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_010F: call Z0.Vec128`1<System.Int32> Z0.dinx::add(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec128`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_014A: call Z0.Vec128`1<System.UInt32> Z0.dinx::add(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec128`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0185: call Z0.Vec128`1<System.Int64> Z0.dinx::add(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec128`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01C0: call Z0.Vec128`1<System.UInt64> Z0.dinx::add(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec128`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01FB: call Z0.Vec128`1<System.Single> Z0.dinx::add(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Single>&)
    IL_0209: ldobj Z0.Vec128`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0236: call Z0.Vec128`1<System.Double> Z0.dinx::add(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Double>&)
    IL_0244: ldobj Z0.Vec128`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_0254: ldc.i4.s 44
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec128<int> add<int>(byref Vec128<int> lhs, byref Vec128<int> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: call Z0.Vec128`1<System.SByte> Z0.dinx::add(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec128`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0061: call Z0.Vec128`1<System.Byte> Z0.dinx::add(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec128`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_009B: call Z0.Vec128`1<System.Int16> Z0.dinx::add(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec128`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00D5: call Z0.Vec128`1<System.UInt16> Z0.dinx::add(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec128`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_010F: call Z0.Vec128`1<System.Int32> Z0.dinx::add(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec128`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_014A: call Z0.Vec128`1<System.UInt32> Z0.dinx::add(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec128`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0185: call Z0.Vec128`1<System.Int64> Z0.dinx::add(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec128`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01C0: call Z0.Vec128`1<System.UInt64> Z0.dinx::add(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec128`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01FB: call Z0.Vec128`1<System.Single> Z0.dinx::add(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Single>&)
    IL_0209: ldobj Z0.Vec128`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0236: call Z0.Vec128`1<System.Double> Z0.dinx::add(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Double>&)
    IL_0244: ldobj Z0.Vec128`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_0254: ldc.i4.s 44
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec128<long> add<long>(byref Vec128<long> lhs, byref Vec128<long> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: call Z0.Vec128`1<System.SByte> Z0.dinx::add(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec128`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0061: call Z0.Vec128`1<System.Byte> Z0.dinx::add(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec128`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_009B: call Z0.Vec128`1<System.Int16> Z0.dinx::add(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec128`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00D5: call Z0.Vec128`1<System.UInt16> Z0.dinx::add(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec128`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_010F: call Z0.Vec128`1<System.Int32> Z0.dinx::add(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec128`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_014A: call Z0.Vec128`1<System.UInt32> Z0.dinx::add(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec128`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0185: call Z0.Vec128`1<System.Int64> Z0.dinx::add(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec128`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01C0: call Z0.Vec128`1<System.UInt64> Z0.dinx::add(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec128`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01FB: call Z0.Vec128`1<System.Single> Z0.dinx::add(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Single>&)
    IL_0209: ldobj Z0.Vec128`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0236: call Z0.Vec128`1<System.Double> Z0.dinx::add(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Double>&)
    IL_0244: ldobj Z0.Vec128`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_0254: ldc.i4.s 44
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec128<float> add<float>(byref Vec128<float> lhs, byref Vec128<float> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: call Z0.Vec128`1<System.SByte> Z0.dinx::add(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec128`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0061: call Z0.Vec128`1<System.Byte> Z0.dinx::add(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec128`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_009B: call Z0.Vec128`1<System.Int16> Z0.dinx::add(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec128`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00D5: call Z0.Vec128`1<System.UInt16> Z0.dinx::add(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec128`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_010F: call Z0.Vec128`1<System.Int32> Z0.dinx::add(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec128`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_014A: call Z0.Vec128`1<System.UInt32> Z0.dinx::add(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec128`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0185: call Z0.Vec128`1<System.Int64> Z0.dinx::add(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec128`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01C0: call Z0.Vec128`1<System.UInt64> Z0.dinx::add(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec128`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01FB: call Z0.Vec128`1<System.Single> Z0.dinx::add(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Single>&)
    IL_0209: ldobj Z0.Vec128`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0236: call Z0.Vec128`1<System.Double> Z0.dinx::add(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Double>&)
    IL_0244: ldobj Z0.Vec128`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_0254: ldc.i4.s 44
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec128<double> add<double>(byref Vec128<double> lhs, byref Vec128<double> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: call Z0.Vec128`1<System.SByte> Z0.dinx::add(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec128`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0061: call Z0.Vec128`1<System.Byte> Z0.dinx::add(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec128`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_009B: call Z0.Vec128`1<System.Int16> Z0.dinx::add(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec128`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00D5: call Z0.Vec128`1<System.UInt16> Z0.dinx::add(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec128`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_010F: call Z0.Vec128`1<System.Int32> Z0.dinx::add(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec128`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_014A: call Z0.Vec128`1<System.UInt32> Z0.dinx::add(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec128`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0185: call Z0.Vec128`1<System.Int64> Z0.dinx::add(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec128`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01C0: call Z0.Vec128`1<System.UInt64> Z0.dinx::add(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec128`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01FB: call Z0.Vec128`1<System.Single> Z0.dinx::add(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Single>&)
    IL_0209: ldobj Z0.Vec128`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0236: call Z0.Vec128`1<System.Double> Z0.dinx::add(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Double>&)
    IL_0244: ldobj Z0.Vec128`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_0254: ldc.i4.s 44
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec256<byte> add<byte>(byref Vec256<byte> lhs, byref Vec256<byte> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: call Z0.Vec256`1<System.SByte> Z0.dinx::add(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec256`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0061: call Z0.Vec256`1<System.Byte> Z0.dinx::add(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec256`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_009B: call Z0.Vec256`1<System.Int16> Z0.dinx::add(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec256`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00D5: call Z0.Vec256`1<System.UInt16> Z0.dinx::add(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec256`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_010F: call Z0.Vec256`1<System.Int32> Z0.dinx::add(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec256`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_014A: call Z0.Vec256`1<System.UInt32> Z0.dinx::add(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec256`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0185: call Z0.Vec256`1<System.Int64> Z0.dinx::add(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec256`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01C0: call Z0.Vec256`1<System.UInt64> Z0.dinx::add(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec256`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01FB: call Z0.Vec256`1<System.Single> Z0.dinx::add(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Single>&)
    IL_0209: ldobj Z0.Vec256`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0236: call Z0.Vec256`1<System.Double> Z0.dinx::add(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Double>&)
    IL_0244: ldobj Z0.Vec256`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_0254: ldc.i4.s 72
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec256<ushort> add<ushort>(byref Vec256<ushort> lhs, byref Vec256<ushort> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: call Z0.Vec256`1<System.SByte> Z0.dinx::add(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec256`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0061: call Z0.Vec256`1<System.Byte> Z0.dinx::add(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec256`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_009B: call Z0.Vec256`1<System.Int16> Z0.dinx::add(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec256`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00D5: call Z0.Vec256`1<System.UInt16> Z0.dinx::add(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec256`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_010F: call Z0.Vec256`1<System.Int32> Z0.dinx::add(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec256`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_014A: call Z0.Vec256`1<System.UInt32> Z0.dinx::add(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec256`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0185: call Z0.Vec256`1<System.Int64> Z0.dinx::add(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec256`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01C0: call Z0.Vec256`1<System.UInt64> Z0.dinx::add(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec256`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01FB: call Z0.Vec256`1<System.Single> Z0.dinx::add(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Single>&)
    IL_0209: ldobj Z0.Vec256`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0236: call Z0.Vec256`1<System.Double> Z0.dinx::add(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Double>&)
    IL_0244: ldobj Z0.Vec256`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_0254: ldc.i4.s 72
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec256<uint> add<uint>(byref Vec256<uint> lhs, byref Vec256<uint> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: call Z0.Vec256`1<System.SByte> Z0.dinx::add(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec256`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0061: call Z0.Vec256`1<System.Byte> Z0.dinx::add(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec256`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_009B: call Z0.Vec256`1<System.Int16> Z0.dinx::add(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec256`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00D5: call Z0.Vec256`1<System.UInt16> Z0.dinx::add(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec256`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_010F: call Z0.Vec256`1<System.Int32> Z0.dinx::add(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec256`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_014A: call Z0.Vec256`1<System.UInt32> Z0.dinx::add(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec256`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0185: call Z0.Vec256`1<System.Int64> Z0.dinx::add(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec256`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01C0: call Z0.Vec256`1<System.UInt64> Z0.dinx::add(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec256`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01FB: call Z0.Vec256`1<System.Single> Z0.dinx::add(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Single>&)
    IL_0209: ldobj Z0.Vec256`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0236: call Z0.Vec256`1<System.Double> Z0.dinx::add(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Double>&)
    IL_0244: ldobj Z0.Vec256`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_0254: ldc.i4.s 72
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec256<ulong> add<ulong>(byref Vec256<ulong> lhs, byref Vec256<ulong> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: call Z0.Vec256`1<System.SByte> Z0.dinx::add(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec256`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0061: call Z0.Vec256`1<System.Byte> Z0.dinx::add(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec256`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_009B: call Z0.Vec256`1<System.Int16> Z0.dinx::add(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec256`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00D5: call Z0.Vec256`1<System.UInt16> Z0.dinx::add(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec256`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_010F: call Z0.Vec256`1<System.Int32> Z0.dinx::add(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec256`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_014A: call Z0.Vec256`1<System.UInt32> Z0.dinx::add(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec256`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0185: call Z0.Vec256`1<System.Int64> Z0.dinx::add(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec256`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01C0: call Z0.Vec256`1<System.UInt64> Z0.dinx::add(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec256`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01FB: call Z0.Vec256`1<System.Single> Z0.dinx::add(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Single>&)
    IL_0209: ldobj Z0.Vec256`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0236: call Z0.Vec256`1<System.Double> Z0.dinx::add(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Double>&)
    IL_0244: ldobj Z0.Vec256`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_0254: ldc.i4.s 72
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec256<sbyte> add<sbyte>(byref Vec256<sbyte> lhs, byref Vec256<sbyte> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: call Z0.Vec256`1<System.SByte> Z0.dinx::add(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec256`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0061: call Z0.Vec256`1<System.Byte> Z0.dinx::add(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec256`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_009B: call Z0.Vec256`1<System.Int16> Z0.dinx::add(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec256`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00D5: call Z0.Vec256`1<System.UInt16> Z0.dinx::add(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec256`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_010F: call Z0.Vec256`1<System.Int32> Z0.dinx::add(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec256`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_014A: call Z0.Vec256`1<System.UInt32> Z0.dinx::add(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec256`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0185: call Z0.Vec256`1<System.Int64> Z0.dinx::add(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec256`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01C0: call Z0.Vec256`1<System.UInt64> Z0.dinx::add(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec256`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01FB: call Z0.Vec256`1<System.Single> Z0.dinx::add(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Single>&)
    IL_0209: ldobj Z0.Vec256`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0236: call Z0.Vec256`1<System.Double> Z0.dinx::add(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Double>&)
    IL_0244: ldobj Z0.Vec256`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_0254: ldc.i4.s 72
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec256<short> add<short>(byref Vec256<short> lhs, byref Vec256<short> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: call Z0.Vec256`1<System.SByte> Z0.dinx::add(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec256`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0061: call Z0.Vec256`1<System.Byte> Z0.dinx::add(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec256`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_009B: call Z0.Vec256`1<System.Int16> Z0.dinx::add(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec256`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00D5: call Z0.Vec256`1<System.UInt16> Z0.dinx::add(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec256`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_010F: call Z0.Vec256`1<System.Int32> Z0.dinx::add(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec256`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_014A: call Z0.Vec256`1<System.UInt32> Z0.dinx::add(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec256`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0185: call Z0.Vec256`1<System.Int64> Z0.dinx::add(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec256`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01C0: call Z0.Vec256`1<System.UInt64> Z0.dinx::add(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec256`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01FB: call Z0.Vec256`1<System.Single> Z0.dinx::add(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Single>&)
    IL_0209: ldobj Z0.Vec256`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0236: call Z0.Vec256`1<System.Double> Z0.dinx::add(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Double>&)
    IL_0244: ldobj Z0.Vec256`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_0254: ldc.i4.s 72
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec256<int> add<int>(byref Vec256<int> lhs, byref Vec256<int> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: call Z0.Vec256`1<System.SByte> Z0.dinx::add(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec256`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0061: call Z0.Vec256`1<System.Byte> Z0.dinx::add(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec256`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_009B: call Z0.Vec256`1<System.Int16> Z0.dinx::add(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec256`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00D5: call Z0.Vec256`1<System.UInt16> Z0.dinx::add(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec256`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_010F: call Z0.Vec256`1<System.Int32> Z0.dinx::add(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec256`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_014A: call Z0.Vec256`1<System.UInt32> Z0.dinx::add(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec256`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0185: call Z0.Vec256`1<System.Int64> Z0.dinx::add(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec256`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01C0: call Z0.Vec256`1<System.UInt64> Z0.dinx::add(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec256`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01FB: call Z0.Vec256`1<System.Single> Z0.dinx::add(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Single>&)
    IL_0209: ldobj Z0.Vec256`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0236: call Z0.Vec256`1<System.Double> Z0.dinx::add(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Double>&)
    IL_0244: ldobj Z0.Vec256`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_0254: ldc.i4.s 72
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec256<long> add<long>(byref Vec256<long> lhs, byref Vec256<long> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: call Z0.Vec256`1<System.SByte> Z0.dinx::add(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec256`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0061: call Z0.Vec256`1<System.Byte> Z0.dinx::add(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec256`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_009B: call Z0.Vec256`1<System.Int16> Z0.dinx::add(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec256`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00D5: call Z0.Vec256`1<System.UInt16> Z0.dinx::add(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec256`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_010F: call Z0.Vec256`1<System.Int32> Z0.dinx::add(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec256`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_014A: call Z0.Vec256`1<System.UInt32> Z0.dinx::add(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec256`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0185: call Z0.Vec256`1<System.Int64> Z0.dinx::add(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec256`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01C0: call Z0.Vec256`1<System.UInt64> Z0.dinx::add(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec256`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01FB: call Z0.Vec256`1<System.Single> Z0.dinx::add(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Single>&)
    IL_0209: ldobj Z0.Vec256`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0236: call Z0.Vec256`1<System.Double> Z0.dinx::add(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Double>&)
    IL_0244: ldobj Z0.Vec256`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_0254: ldc.i4.s 72
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec256<float> add<float>(byref Vec256<float> lhs, byref Vec256<float> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: call Z0.Vec256`1<System.SByte> Z0.dinx::add(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec256`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0061: call Z0.Vec256`1<System.Byte> Z0.dinx::add(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec256`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_009B: call Z0.Vec256`1<System.Int16> Z0.dinx::add(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec256`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00D5: call Z0.Vec256`1<System.UInt16> Z0.dinx::add(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec256`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_010F: call Z0.Vec256`1<System.Int32> Z0.dinx::add(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec256`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_014A: call Z0.Vec256`1<System.UInt32> Z0.dinx::add(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec256`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0185: call Z0.Vec256`1<System.Int64> Z0.dinx::add(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec256`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01C0: call Z0.Vec256`1<System.UInt64> Z0.dinx::add(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec256`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01FB: call Z0.Vec256`1<System.Single> Z0.dinx::add(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Single>&)
    IL_0209: ldobj Z0.Vec256`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0236: call Z0.Vec256`1<System.Double> Z0.dinx::add(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Double>&)
    IL_0244: ldobj Z0.Vec256`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_0254: ldc.i4.s 72
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec256<double> add<double>(byref Vec256<double> lhs, byref Vec256<double> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: call Z0.Vec256`1<System.SByte> Z0.dinx::add(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec256`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0061: call Z0.Vec256`1<System.Byte> Z0.dinx::add(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec256`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_009B: call Z0.Vec256`1<System.Int16> Z0.dinx::add(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec256`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00D5: call Z0.Vec256`1<System.UInt16> Z0.dinx::add(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec256`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_010F: call Z0.Vec256`1<System.Int32> Z0.dinx::add(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec256`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_014A: call Z0.Vec256`1<System.UInt32> Z0.dinx::add(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec256`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0185: call Z0.Vec256`1<System.Int64> Z0.dinx::add(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec256`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01C0: call Z0.Vec256`1<System.UInt64> Z0.dinx::add(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec256`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01FB: call Z0.Vec256`1<System.Single> Z0.dinx::add(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Single>&)
    IL_0209: ldobj Z0.Vec256`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0236: call Z0.Vec256`1<System.Double> Z0.dinx::add(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Double>&)
    IL_0244: ldobj Z0.Vec256`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_0254: ldc.i4.s 72
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
void add<byte>(byref Vec128<byte> lhs, byref Vec128<byte> rhs, byref Byte dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::add(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::add(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::add(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::add(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::add(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::add(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::add(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::add(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::add(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::add(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_0208: ldc.i4.s 100
    IL_020A: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_020F: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0214: throw

}
void add<ushort>(byref Vec128<ushort> lhs, byref Vec128<ushort> rhs, byref UInt16 dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::add(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::add(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::add(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::add(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::add(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::add(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::add(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::add(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::add(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::add(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_0208: ldc.i4.s 100
    IL_020A: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_020F: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0214: throw

}
void add<uint>(byref Vec128<uint> lhs, byref Vec128<uint> rhs, byref UInt32 dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::add(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::add(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::add(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::add(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::add(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::add(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::add(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::add(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::add(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::add(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_0208: ldc.i4.s 100
    IL_020A: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_020F: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0214: throw

}
void add<ulong>(byref Vec128<ulong> lhs, byref Vec128<ulong> rhs, byref UInt64 dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::add(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::add(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::add(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::add(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::add(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::add(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::add(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::add(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::add(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::add(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_0208: ldc.i4.s 100
    IL_020A: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_020F: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0214: throw

}
void add<sbyte>(byref Vec128<sbyte> lhs, byref Vec128<sbyte> rhs, byref SByte dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::add(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::add(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::add(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::add(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::add(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::add(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::add(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::add(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::add(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::add(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_0208: ldc.i4.s 100
    IL_020A: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_020F: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0214: throw

}
void add<short>(byref Vec128<short> lhs, byref Vec128<short> rhs, byref Int16 dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::add(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::add(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::add(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::add(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::add(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::add(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::add(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::add(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::add(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::add(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_0208: ldc.i4.s 100
    IL_020A: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_020F: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0214: throw

}
void add<int>(byref Vec128<int> lhs, byref Vec128<int> rhs, byref Int32 dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::add(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::add(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::add(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::add(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::add(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::add(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::add(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::add(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::add(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::add(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_0208: ldc.i4.s 100
    IL_020A: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_020F: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0214: throw

}
void add<long>(byref Vec128<long> lhs, byref Vec128<long> rhs, byref Int64 dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::add(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::add(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::add(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::add(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::add(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::add(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::add(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::add(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::add(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::add(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_0208: ldc.i4.s 100
    IL_020A: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_020F: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0214: throw

}
void add<float>(byref Vec128<float> lhs, byref Vec128<float> rhs, byref Single dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::add(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::add(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::add(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::add(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::add(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::add(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::add(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::add(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::add(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::add(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_0208: ldc.i4.s 100
    IL_020A: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_020F: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0214: throw

}
void add<double>(byref Vec128<double> lhs, byref Vec128<double> rhs, byref Double dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::add(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::add(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::add(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::add(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::add(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::add(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::add(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::add(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::add(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::add(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_0208: ldc.i4.s 100
    IL_020A: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_020F: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0214: throw

}
byref Byte add<byte>(byref Vec256<byte> lhs, byref Vec256<byte> rhs, byref Byte dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0037
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::add(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&,System.SByte&)
    IL_0032: br IL_023A
    IL_0037: ldtoken T
    IL_003C: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0041: ldtoken System.Byte
    IL_0046: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004B: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0050: brfalse.s IL_006E
    IL_0052: ldarg.0
    IL_0053: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0058: ldarg.1
    IL_0059: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005E: ldarg.2
    IL_005F: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0064: call System.Void Z0.dinx::add(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&,System.Byte&)
    IL_0069: br IL_023A
    IL_006E: ldtoken T
    IL_0073: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0078: ldtoken System.Int16
    IL_007D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0082: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0087: brfalse.s IL_00A5
    IL_0089: ldarg.0
    IL_008A: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_008F: ldarg.1
    IL_0090: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0095: ldarg.2
    IL_0096: call System.Int16& Z0.As::int16<T>(T&)
    IL_009B: call System.Void Z0.dinx::add(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&,System.Int16&)
    IL_00A0: br IL_023A
    IL_00A5: ldtoken T
    IL_00AA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AF: ldtoken System.UInt16
    IL_00B4: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B9: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00BE: brfalse.s IL_00DC
    IL_00C0: ldarg.0
    IL_00C1: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00C6: ldarg.1
    IL_00C7: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00CC: ldarg.2
    IL_00CD: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00D2: call System.Void Z0.dinx::add(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&,System.UInt16&)
    IL_00D7: br IL_023A
    IL_00DC: ldtoken T
    IL_00E1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E6: ldtoken System.Int32
    IL_00EB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00F5: brfalse.s IL_0113
    IL_00F7: ldarg.0
    IL_00F8: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00FD: ldarg.1
    IL_00FE: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_0103: ldarg.2
    IL_0104: call System.Int32& Z0.As::int32<T>(T&)
    IL_0109: call System.Void Z0.dinx::add(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&,System.Int32&)
    IL_010E: br IL_023A
    IL_0113: ldtoken T
    IL_0118: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_011D: ldtoken System.UInt32
    IL_0122: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0127: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_012C: brfalse.s IL_014A
    IL_012E: ldarg.0
    IL_012F: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0134: ldarg.1
    IL_0135: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_013A: ldarg.2
    IL_013B: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_0140: call System.Void Z0.dinx::add(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&,System.UInt32&)
    IL_0145: br IL_023A
    IL_014A: ldtoken T
    IL_014F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0154: ldtoken System.Int64
    IL_0159: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_015E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0163: brfalse.s IL_0181
    IL_0165: ldarg.0
    IL_0166: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_016B: ldarg.1
    IL_016C: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0171: ldarg.2
    IL_0172: call System.Int64& Z0.As::int64<T>(T&)
    IL_0177: call System.Void Z0.dinx::add(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&,System.Int64&)
    IL_017C: br IL_023A
    IL_0181: ldtoken T
    IL_0186: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_018B: ldtoken System.UInt64
    IL_0190: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0195: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_019A: brfalse.s IL_01B8
    IL_019C: ldarg.0
    IL_019D: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01A2: ldarg.1
    IL_01A3: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01A8: ldarg.2
    IL_01A9: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_01AE: call System.Void Z0.dinx::add(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&,System.UInt64&)
    IL_01B3: br IL_023A
    IL_01B8: ldtoken T
    IL_01BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01C2: ldtoken System.Single
    IL_01C7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01CC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01D1: brfalse.s IL_01EC
    IL_01D3: ldarg.0
    IL_01D4: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01D9: ldarg.1
    IL_01DA: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01DF: ldarg.2
    IL_01E0: call System.Single& Z0.As::float32<T>(T&)
    IL_01E5: call System.Void Z0.dinx::add(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&,System.Single&)
    IL_01EA: br.s IL_023A
    IL_01EC: ldtoken T
    IL_01F1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01F6: ldtoken System.Double
    IL_01FB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0200: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0205: brfalse.s IL_0220
    IL_0207: ldarg.0
    IL_0208: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_020D: ldarg.1
    IL_020E: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0213: ldarg.2
    IL_0214: call System.Double& Z0.As::float64<T>(T&)
    IL_0219: call System.Void Z0.dinx::add(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&,System.Double&)
    IL_021E: br.s IL_023A
    IL_0220: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_0225: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_022A: ldc.i4 128
    IL_022F: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_0234: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0239: throw
    IL_023A: ldarg.2
    IL_023B: ret

}
byref UInt16 add<ushort>(byref Vec256<ushort> lhs, byref Vec256<ushort> rhs, byref UInt16 dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0037
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::add(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&,System.SByte&)
    IL_0032: br IL_023A
    IL_0037: ldtoken T
    IL_003C: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0041: ldtoken System.Byte
    IL_0046: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004B: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0050: brfalse.s IL_006E
    IL_0052: ldarg.0
    IL_0053: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0058: ldarg.1
    IL_0059: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005E: ldarg.2
    IL_005F: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0064: call System.Void Z0.dinx::add(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&,System.Byte&)
    IL_0069: br IL_023A
    IL_006E: ldtoken T
    IL_0073: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0078: ldtoken System.Int16
    IL_007D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0082: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0087: brfalse.s IL_00A5
    IL_0089: ldarg.0
    IL_008A: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_008F: ldarg.1
    IL_0090: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0095: ldarg.2
    IL_0096: call System.Int16& Z0.As::int16<T>(T&)
    IL_009B: call System.Void Z0.dinx::add(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&,System.Int16&)
    IL_00A0: br IL_023A
    IL_00A5: ldtoken T
    IL_00AA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AF: ldtoken System.UInt16
    IL_00B4: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B9: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00BE: brfalse.s IL_00DC
    IL_00C0: ldarg.0
    IL_00C1: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00C6: ldarg.1
    IL_00C7: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00CC: ldarg.2
    IL_00CD: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00D2: call System.Void Z0.dinx::add(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&,System.UInt16&)
    IL_00D7: br IL_023A
    IL_00DC: ldtoken T
    IL_00E1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E6: ldtoken System.Int32
    IL_00EB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00F5: brfalse.s IL_0113
    IL_00F7: ldarg.0
    IL_00F8: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00FD: ldarg.1
    IL_00FE: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_0103: ldarg.2
    IL_0104: call System.Int32& Z0.As::int32<T>(T&)
    IL_0109: call System.Void Z0.dinx::add(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&,System.Int32&)
    IL_010E: br IL_023A
    IL_0113: ldtoken T
    IL_0118: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_011D: ldtoken System.UInt32
    IL_0122: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0127: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_012C: brfalse.s IL_014A
    IL_012E: ldarg.0
    IL_012F: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0134: ldarg.1
    IL_0135: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_013A: ldarg.2
    IL_013B: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_0140: call System.Void Z0.dinx::add(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&,System.UInt32&)
    IL_0145: br IL_023A
    IL_014A: ldtoken T
    IL_014F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0154: ldtoken System.Int64
    IL_0159: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_015E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0163: brfalse.s IL_0181
    IL_0165: ldarg.0
    IL_0166: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_016B: ldarg.1
    IL_016C: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0171: ldarg.2
    IL_0172: call System.Int64& Z0.As::int64<T>(T&)
    IL_0177: call System.Void Z0.dinx::add(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&,System.Int64&)
    IL_017C: br IL_023A
    IL_0181: ldtoken T
    IL_0186: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_018B: ldtoken System.UInt64
    IL_0190: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0195: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_019A: brfalse.s IL_01B8
    IL_019C: ldarg.0
    IL_019D: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01A2: ldarg.1
    IL_01A3: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01A8: ldarg.2
    IL_01A9: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_01AE: call System.Void Z0.dinx::add(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&,System.UInt64&)
    IL_01B3: br IL_023A
    IL_01B8: ldtoken T
    IL_01BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01C2: ldtoken System.Single
    IL_01C7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01CC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01D1: brfalse.s IL_01EC
    IL_01D3: ldarg.0
    IL_01D4: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01D9: ldarg.1
    IL_01DA: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01DF: ldarg.2
    IL_01E0: call System.Single& Z0.As::float32<T>(T&)
    IL_01E5: call System.Void Z0.dinx::add(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&,System.Single&)
    IL_01EA: br.s IL_023A
    IL_01EC: ldtoken T
    IL_01F1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01F6: ldtoken System.Double
    IL_01FB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0200: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0205: brfalse.s IL_0220
    IL_0207: ldarg.0
    IL_0208: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_020D: ldarg.1
    IL_020E: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0213: ldarg.2
    IL_0214: call System.Double& Z0.As::float64<T>(T&)
    IL_0219: call System.Void Z0.dinx::add(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&,System.Double&)
    IL_021E: br.s IL_023A
    IL_0220: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_0225: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_022A: ldc.i4 128
    IL_022F: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_0234: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0239: throw
    IL_023A: ldarg.2
    IL_023B: ret

}
byref UInt32 add<uint>(byref Vec256<uint> lhs, byref Vec256<uint> rhs, byref UInt32 dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0037
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::add(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&,System.SByte&)
    IL_0032: br IL_023A
    IL_0037: ldtoken T
    IL_003C: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0041: ldtoken System.Byte
    IL_0046: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004B: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0050: brfalse.s IL_006E
    IL_0052: ldarg.0
    IL_0053: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0058: ldarg.1
    IL_0059: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005E: ldarg.2
    IL_005F: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0064: call System.Void Z0.dinx::add(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&,System.Byte&)
    IL_0069: br IL_023A
    IL_006E: ldtoken T
    IL_0073: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0078: ldtoken System.Int16
    IL_007D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0082: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0087: brfalse.s IL_00A5
    IL_0089: ldarg.0
    IL_008A: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_008F: ldarg.1
    IL_0090: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0095: ldarg.2
    IL_0096: call System.Int16& Z0.As::int16<T>(T&)
    IL_009B: call System.Void Z0.dinx::add(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&,System.Int16&)
    IL_00A0: br IL_023A
    IL_00A5: ldtoken T
    IL_00AA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AF: ldtoken System.UInt16
    IL_00B4: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B9: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00BE: brfalse.s IL_00DC
    IL_00C0: ldarg.0
    IL_00C1: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00C6: ldarg.1
    IL_00C7: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00CC: ldarg.2
    IL_00CD: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00D2: call System.Void Z0.dinx::add(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&,System.UInt16&)
    IL_00D7: br IL_023A
    IL_00DC: ldtoken T
    IL_00E1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E6: ldtoken System.Int32
    IL_00EB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00F5: brfalse.s IL_0113
    IL_00F7: ldarg.0
    IL_00F8: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00FD: ldarg.1
    IL_00FE: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_0103: ldarg.2
    IL_0104: call System.Int32& Z0.As::int32<T>(T&)
    IL_0109: call System.Void Z0.dinx::add(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&,System.Int32&)
    IL_010E: br IL_023A
    IL_0113: ldtoken T
    IL_0118: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_011D: ldtoken System.UInt32
    IL_0122: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0127: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_012C: brfalse.s IL_014A
    IL_012E: ldarg.0
    IL_012F: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0134: ldarg.1
    IL_0135: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_013A: ldarg.2
    IL_013B: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_0140: call System.Void Z0.dinx::add(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&,System.UInt32&)
    IL_0145: br IL_023A
    IL_014A: ldtoken T
    IL_014F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0154: ldtoken System.Int64
    IL_0159: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_015E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0163: brfalse.s IL_0181
    IL_0165: ldarg.0
    IL_0166: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_016B: ldarg.1
    IL_016C: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0171: ldarg.2
    IL_0172: call System.Int64& Z0.As::int64<T>(T&)
    IL_0177: call System.Void Z0.dinx::add(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&,System.Int64&)
    IL_017C: br IL_023A
    IL_0181: ldtoken T
    IL_0186: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_018B: ldtoken System.UInt64
    IL_0190: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0195: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_019A: brfalse.s IL_01B8
    IL_019C: ldarg.0
    IL_019D: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01A2: ldarg.1
    IL_01A3: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01A8: ldarg.2
    IL_01A9: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_01AE: call System.Void Z0.dinx::add(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&,System.UInt64&)
    IL_01B3: br IL_023A
    IL_01B8: ldtoken T
    IL_01BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01C2: ldtoken System.Single
    IL_01C7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01CC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01D1: brfalse.s IL_01EC
    IL_01D3: ldarg.0
    IL_01D4: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01D9: ldarg.1
    IL_01DA: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01DF: ldarg.2
    IL_01E0: call System.Single& Z0.As::float32<T>(T&)
    IL_01E5: call System.Void Z0.dinx::add(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&,System.Single&)
    IL_01EA: br.s IL_023A
    IL_01EC: ldtoken T
    IL_01F1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01F6: ldtoken System.Double
    IL_01FB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0200: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0205: brfalse.s IL_0220
    IL_0207: ldarg.0
    IL_0208: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_020D: ldarg.1
    IL_020E: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0213: ldarg.2
    IL_0214: call System.Double& Z0.As::float64<T>(T&)
    IL_0219: call System.Void Z0.dinx::add(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&,System.Double&)
    IL_021E: br.s IL_023A
    IL_0220: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_0225: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_022A: ldc.i4 128
    IL_022F: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_0234: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0239: throw
    IL_023A: ldarg.2
    IL_023B: ret

}
byref UInt64 add<ulong>(byref Vec256<ulong> lhs, byref Vec256<ulong> rhs, byref UInt64 dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0037
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::add(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&,System.SByte&)
    IL_0032: br IL_023A
    IL_0037: ldtoken T
    IL_003C: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0041: ldtoken System.Byte
    IL_0046: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004B: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0050: brfalse.s IL_006E
    IL_0052: ldarg.0
    IL_0053: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0058: ldarg.1
    IL_0059: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005E: ldarg.2
    IL_005F: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0064: call System.Void Z0.dinx::add(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&,System.Byte&)
    IL_0069: br IL_023A
    IL_006E: ldtoken T
    IL_0073: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0078: ldtoken System.Int16
    IL_007D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0082: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0087: brfalse.s IL_00A5
    IL_0089: ldarg.0
    IL_008A: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_008F: ldarg.1
    IL_0090: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0095: ldarg.2
    IL_0096: call System.Int16& Z0.As::int16<T>(T&)
    IL_009B: call System.Void Z0.dinx::add(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&,System.Int16&)
    IL_00A0: br IL_023A
    IL_00A5: ldtoken T
    IL_00AA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AF: ldtoken System.UInt16
    IL_00B4: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B9: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00BE: brfalse.s IL_00DC
    IL_00C0: ldarg.0
    IL_00C1: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00C6: ldarg.1
    IL_00C7: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00CC: ldarg.2
    IL_00CD: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00D2: call System.Void Z0.dinx::add(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&,System.UInt16&)
    IL_00D7: br IL_023A
    IL_00DC: ldtoken T
    IL_00E1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E6: ldtoken System.Int32
    IL_00EB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00F5: brfalse.s IL_0113
    IL_00F7: ldarg.0
    IL_00F8: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00FD: ldarg.1
    IL_00FE: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_0103: ldarg.2
    IL_0104: call System.Int32& Z0.As::int32<T>(T&)
    IL_0109: call System.Void Z0.dinx::add(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&,System.Int32&)
    IL_010E: br IL_023A
    IL_0113: ldtoken T
    IL_0118: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_011D: ldtoken System.UInt32
    IL_0122: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0127: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_012C: brfalse.s IL_014A
    IL_012E: ldarg.0
    IL_012F: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0134: ldarg.1
    IL_0135: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_013A: ldarg.2
    IL_013B: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_0140: call System.Void Z0.dinx::add(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&,System.UInt32&)
    IL_0145: br IL_023A
    IL_014A: ldtoken T
    IL_014F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0154: ldtoken System.Int64
    IL_0159: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_015E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0163: brfalse.s IL_0181
    IL_0165: ldarg.0
    IL_0166: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_016B: ldarg.1
    IL_016C: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0171: ldarg.2
    IL_0172: call System.Int64& Z0.As::int64<T>(T&)
    IL_0177: call System.Void Z0.dinx::add(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&,System.Int64&)
    IL_017C: br IL_023A
    IL_0181: ldtoken T
    IL_0186: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_018B: ldtoken System.UInt64
    IL_0190: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0195: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_019A: brfalse.s IL_01B8
    IL_019C: ldarg.0
    IL_019D: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01A2: ldarg.1
    IL_01A3: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01A8: ldarg.2
    IL_01A9: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_01AE: call System.Void Z0.dinx::add(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&,System.UInt64&)
    IL_01B3: br IL_023A
    IL_01B8: ldtoken T
    IL_01BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01C2: ldtoken System.Single
    IL_01C7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01CC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01D1: brfalse.s IL_01EC
    IL_01D3: ldarg.0
    IL_01D4: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01D9: ldarg.1
    IL_01DA: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01DF: ldarg.2
    IL_01E0: call System.Single& Z0.As::float32<T>(T&)
    IL_01E5: call System.Void Z0.dinx::add(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&,System.Single&)
    IL_01EA: br.s IL_023A
    IL_01EC: ldtoken T
    IL_01F1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01F6: ldtoken System.Double
    IL_01FB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0200: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0205: brfalse.s IL_0220
    IL_0207: ldarg.0
    IL_0208: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_020D: ldarg.1
    IL_020E: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0213: ldarg.2
    IL_0214: call System.Double& Z0.As::float64<T>(T&)
    IL_0219: call System.Void Z0.dinx::add(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&,System.Double&)
    IL_021E: br.s IL_023A
    IL_0220: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_0225: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_022A: ldc.i4 128
    IL_022F: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_0234: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0239: throw
    IL_023A: ldarg.2
    IL_023B: ret

}
byref SByte add<sbyte>(byref Vec256<sbyte> lhs, byref Vec256<sbyte> rhs, byref SByte dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0037
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::add(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&,System.SByte&)
    IL_0032: br IL_023A
    IL_0037: ldtoken T
    IL_003C: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0041: ldtoken System.Byte
    IL_0046: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004B: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0050: brfalse.s IL_006E
    IL_0052: ldarg.0
    IL_0053: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0058: ldarg.1
    IL_0059: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005E: ldarg.2
    IL_005F: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0064: call System.Void Z0.dinx::add(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&,System.Byte&)
    IL_0069: br IL_023A
    IL_006E: ldtoken T
    IL_0073: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0078: ldtoken System.Int16
    IL_007D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0082: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0087: brfalse.s IL_00A5
    IL_0089: ldarg.0
    IL_008A: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_008F: ldarg.1
    IL_0090: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0095: ldarg.2
    IL_0096: call System.Int16& Z0.As::int16<T>(T&)
    IL_009B: call System.Void Z0.dinx::add(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&,System.Int16&)
    IL_00A0: br IL_023A
    IL_00A5: ldtoken T
    IL_00AA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AF: ldtoken System.UInt16
    IL_00B4: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B9: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00BE: brfalse.s IL_00DC
    IL_00C0: ldarg.0
    IL_00C1: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00C6: ldarg.1
    IL_00C7: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00CC: ldarg.2
    IL_00CD: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00D2: call System.Void Z0.dinx::add(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&,System.UInt16&)
    IL_00D7: br IL_023A
    IL_00DC: ldtoken T
    IL_00E1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E6: ldtoken System.Int32
    IL_00EB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00F5: brfalse.s IL_0113
    IL_00F7: ldarg.0
    IL_00F8: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00FD: ldarg.1
    IL_00FE: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_0103: ldarg.2
    IL_0104: call System.Int32& Z0.As::int32<T>(T&)
    IL_0109: call System.Void Z0.dinx::add(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&,System.Int32&)
    IL_010E: br IL_023A
    IL_0113: ldtoken T
    IL_0118: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_011D: ldtoken System.UInt32
    IL_0122: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0127: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_012C: brfalse.s IL_014A
    IL_012E: ldarg.0
    IL_012F: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0134: ldarg.1
    IL_0135: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_013A: ldarg.2
    IL_013B: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_0140: call System.Void Z0.dinx::add(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&,System.UInt32&)
    IL_0145: br IL_023A
    IL_014A: ldtoken T
    IL_014F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0154: ldtoken System.Int64
    IL_0159: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_015E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0163: brfalse.s IL_0181
    IL_0165: ldarg.0
    IL_0166: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_016B: ldarg.1
    IL_016C: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0171: ldarg.2
    IL_0172: call System.Int64& Z0.As::int64<T>(T&)
    IL_0177: call System.Void Z0.dinx::add(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&,System.Int64&)
    IL_017C: br IL_023A
    IL_0181: ldtoken T
    IL_0186: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_018B: ldtoken System.UInt64
    IL_0190: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0195: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_019A: brfalse.s IL_01B8
    IL_019C: ldarg.0
    IL_019D: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01A2: ldarg.1
    IL_01A3: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01A8: ldarg.2
    IL_01A9: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_01AE: call System.Void Z0.dinx::add(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&,System.UInt64&)
    IL_01B3: br IL_023A
    IL_01B8: ldtoken T
    IL_01BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01C2: ldtoken System.Single
    IL_01C7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01CC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01D1: brfalse.s IL_01EC
    IL_01D3: ldarg.0
    IL_01D4: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01D9: ldarg.1
    IL_01DA: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01DF: ldarg.2
    IL_01E0: call System.Single& Z0.As::float32<T>(T&)
    IL_01E5: call System.Void Z0.dinx::add(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&,System.Single&)
    IL_01EA: br.s IL_023A
    IL_01EC: ldtoken T
    IL_01F1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01F6: ldtoken System.Double
    IL_01FB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0200: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0205: brfalse.s IL_0220
    IL_0207: ldarg.0
    IL_0208: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_020D: ldarg.1
    IL_020E: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0213: ldarg.2
    IL_0214: call System.Double& Z0.As::float64<T>(T&)
    IL_0219: call System.Void Z0.dinx::add(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&,System.Double&)
    IL_021E: br.s IL_023A
    IL_0220: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_0225: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_022A: ldc.i4 128
    IL_022F: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_0234: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0239: throw
    IL_023A: ldarg.2
    IL_023B: ret

}
byref Int16 add<short>(byref Vec256<short> lhs, byref Vec256<short> rhs, byref Int16 dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0037
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::add(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&,System.SByte&)
    IL_0032: br IL_023A
    IL_0037: ldtoken T
    IL_003C: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0041: ldtoken System.Byte
    IL_0046: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004B: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0050: brfalse.s IL_006E
    IL_0052: ldarg.0
    IL_0053: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0058: ldarg.1
    IL_0059: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005E: ldarg.2
    IL_005F: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0064: call System.Void Z0.dinx::add(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&,System.Byte&)
    IL_0069: br IL_023A
    IL_006E: ldtoken T
    IL_0073: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0078: ldtoken System.Int16
    IL_007D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0082: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0087: brfalse.s IL_00A5
    IL_0089: ldarg.0
    IL_008A: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_008F: ldarg.1
    IL_0090: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0095: ldarg.2
    IL_0096: call System.Int16& Z0.As::int16<T>(T&)
    IL_009B: call System.Void Z0.dinx::add(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&,System.Int16&)
    IL_00A0: br IL_023A
    IL_00A5: ldtoken T
    IL_00AA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AF: ldtoken System.UInt16
    IL_00B4: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B9: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00BE: brfalse.s IL_00DC
    IL_00C0: ldarg.0
    IL_00C1: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00C6: ldarg.1
    IL_00C7: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00CC: ldarg.2
    IL_00CD: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00D2: call System.Void Z0.dinx::add(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&,System.UInt16&)
    IL_00D7: br IL_023A
    IL_00DC: ldtoken T
    IL_00E1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E6: ldtoken System.Int32
    IL_00EB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00F5: brfalse.s IL_0113
    IL_00F7: ldarg.0
    IL_00F8: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00FD: ldarg.1
    IL_00FE: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_0103: ldarg.2
    IL_0104: call System.Int32& Z0.As::int32<T>(T&)
    IL_0109: call System.Void Z0.dinx::add(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&,System.Int32&)
    IL_010E: br IL_023A
    IL_0113: ldtoken T
    IL_0118: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_011D: ldtoken System.UInt32
    IL_0122: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0127: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_012C: brfalse.s IL_014A
    IL_012E: ldarg.0
    IL_012F: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0134: ldarg.1
    IL_0135: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_013A: ldarg.2
    IL_013B: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_0140: call System.Void Z0.dinx::add(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&,System.UInt32&)
    IL_0145: br IL_023A
    IL_014A: ldtoken T
    IL_014F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0154: ldtoken System.Int64
    IL_0159: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_015E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0163: brfalse.s IL_0181
    IL_0165: ldarg.0
    IL_0166: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_016B: ldarg.1
    IL_016C: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0171: ldarg.2
    IL_0172: call System.Int64& Z0.As::int64<T>(T&)
    IL_0177: call System.Void Z0.dinx::add(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&,System.Int64&)
    IL_017C: br IL_023A
    IL_0181: ldtoken T
    IL_0186: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_018B: ldtoken System.UInt64
    IL_0190: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0195: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_019A: brfalse.s IL_01B8
    IL_019C: ldarg.0
    IL_019D: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01A2: ldarg.1
    IL_01A3: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01A8: ldarg.2
    IL_01A9: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_01AE: call System.Void Z0.dinx::add(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&,System.UInt64&)
    IL_01B3: br IL_023A
    IL_01B8: ldtoken T
    IL_01BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01C2: ldtoken System.Single
    IL_01C7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01CC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01D1: brfalse.s IL_01EC
    IL_01D3: ldarg.0
    IL_01D4: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01D9: ldarg.1
    IL_01DA: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01DF: ldarg.2
    IL_01E0: call System.Single& Z0.As::float32<T>(T&)
    IL_01E5: call System.Void Z0.dinx::add(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&,System.Single&)
    IL_01EA: br.s IL_023A
    IL_01EC: ldtoken T
    IL_01F1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01F6: ldtoken System.Double
    IL_01FB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0200: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0205: brfalse.s IL_0220
    IL_0207: ldarg.0
    IL_0208: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_020D: ldarg.1
    IL_020E: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0213: ldarg.2
    IL_0214: call System.Double& Z0.As::float64<T>(T&)
    IL_0219: call System.Void Z0.dinx::add(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&,System.Double&)
    IL_021E: br.s IL_023A
    IL_0220: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_0225: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_022A: ldc.i4 128
    IL_022F: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_0234: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0239: throw
    IL_023A: ldarg.2
    IL_023B: ret

}
byref Int32 add<int>(byref Vec256<int> lhs, byref Vec256<int> rhs, byref Int32 dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0037
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::add(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&,System.SByte&)
    IL_0032: br IL_023A
    IL_0037: ldtoken T
    IL_003C: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0041: ldtoken System.Byte
    IL_0046: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004B: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0050: brfalse.s IL_006E
    IL_0052: ldarg.0
    IL_0053: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0058: ldarg.1
    IL_0059: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005E: ldarg.2
    IL_005F: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0064: call System.Void Z0.dinx::add(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&,System.Byte&)
    IL_0069: br IL_023A
    IL_006E: ldtoken T
    IL_0073: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0078: ldtoken System.Int16
    IL_007D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0082: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0087: brfalse.s IL_00A5
    IL_0089: ldarg.0
    IL_008A: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_008F: ldarg.1
    IL_0090: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0095: ldarg.2
    IL_0096: call System.Int16& Z0.As::int16<T>(T&)
    IL_009B: call System.Void Z0.dinx::add(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&,System.Int16&)
    IL_00A0: br IL_023A
    IL_00A5: ldtoken T
    IL_00AA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AF: ldtoken System.UInt16
    IL_00B4: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B9: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00BE: brfalse.s IL_00DC
    IL_00C0: ldarg.0
    IL_00C1: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00C6: ldarg.1
    IL_00C7: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00CC: ldarg.2
    IL_00CD: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00D2: call System.Void Z0.dinx::add(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&,System.UInt16&)
    IL_00D7: br IL_023A
    IL_00DC: ldtoken T
    IL_00E1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E6: ldtoken System.Int32
    IL_00EB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00F5: brfalse.s IL_0113
    IL_00F7: ldarg.0
    IL_00F8: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00FD: ldarg.1
    IL_00FE: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_0103: ldarg.2
    IL_0104: call System.Int32& Z0.As::int32<T>(T&)
    IL_0109: call System.Void Z0.dinx::add(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&,System.Int32&)
    IL_010E: br IL_023A
    IL_0113: ldtoken T
    IL_0118: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_011D: ldtoken System.UInt32
    IL_0122: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0127: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_012C: brfalse.s IL_014A
    IL_012E: ldarg.0
    IL_012F: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0134: ldarg.1
    IL_0135: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_013A: ldarg.2
    IL_013B: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_0140: call System.Void Z0.dinx::add(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&,System.UInt32&)
    IL_0145: br IL_023A
    IL_014A: ldtoken T
    IL_014F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0154: ldtoken System.Int64
    IL_0159: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_015E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0163: brfalse.s IL_0181
    IL_0165: ldarg.0
    IL_0166: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_016B: ldarg.1
    IL_016C: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0171: ldarg.2
    IL_0172: call System.Int64& Z0.As::int64<T>(T&)
    IL_0177: call System.Void Z0.dinx::add(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&,System.Int64&)
    IL_017C: br IL_023A
    IL_0181: ldtoken T
    IL_0186: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_018B: ldtoken System.UInt64
    IL_0190: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0195: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_019A: brfalse.s IL_01B8
    IL_019C: ldarg.0
    IL_019D: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01A2: ldarg.1
    IL_01A3: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01A8: ldarg.2
    IL_01A9: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_01AE: call System.Void Z0.dinx::add(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&,System.UInt64&)
    IL_01B3: br IL_023A
    IL_01B8: ldtoken T
    IL_01BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01C2: ldtoken System.Single
    IL_01C7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01CC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01D1: brfalse.s IL_01EC
    IL_01D3: ldarg.0
    IL_01D4: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01D9: ldarg.1
    IL_01DA: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01DF: ldarg.2
    IL_01E0: call System.Single& Z0.As::float32<T>(T&)
    IL_01E5: call System.Void Z0.dinx::add(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&,System.Single&)
    IL_01EA: br.s IL_023A
    IL_01EC: ldtoken T
    IL_01F1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01F6: ldtoken System.Double
    IL_01FB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0200: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0205: brfalse.s IL_0220
    IL_0207: ldarg.0
    IL_0208: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_020D: ldarg.1
    IL_020E: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0213: ldarg.2
    IL_0214: call System.Double& Z0.As::float64<T>(T&)
    IL_0219: call System.Void Z0.dinx::add(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&,System.Double&)
    IL_021E: br.s IL_023A
    IL_0220: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_0225: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_022A: ldc.i4 128
    IL_022F: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_0234: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0239: throw
    IL_023A: ldarg.2
    IL_023B: ret

}
byref Int64 add<long>(byref Vec256<long> lhs, byref Vec256<long> rhs, byref Int64 dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0037
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::add(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&,System.SByte&)
    IL_0032: br IL_023A
    IL_0037: ldtoken T
    IL_003C: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0041: ldtoken System.Byte
    IL_0046: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004B: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0050: brfalse.s IL_006E
    IL_0052: ldarg.0
    IL_0053: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0058: ldarg.1
    IL_0059: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005E: ldarg.2
    IL_005F: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0064: call System.Void Z0.dinx::add(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&,System.Byte&)
    IL_0069: br IL_023A
    IL_006E: ldtoken T
    IL_0073: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0078: ldtoken System.Int16
    IL_007D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0082: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0087: brfalse.s IL_00A5
    IL_0089: ldarg.0
    IL_008A: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_008F: ldarg.1
    IL_0090: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0095: ldarg.2
    IL_0096: call System.Int16& Z0.As::int16<T>(T&)
    IL_009B: call System.Void Z0.dinx::add(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&,System.Int16&)
    IL_00A0: br IL_023A
    IL_00A5: ldtoken T
    IL_00AA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AF: ldtoken System.UInt16
    IL_00B4: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B9: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00BE: brfalse.s IL_00DC
    IL_00C0: ldarg.0
    IL_00C1: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00C6: ldarg.1
    IL_00C7: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00CC: ldarg.2
    IL_00CD: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00D2: call System.Void Z0.dinx::add(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&,System.UInt16&)
    IL_00D7: br IL_023A
    IL_00DC: ldtoken T
    IL_00E1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E6: ldtoken System.Int32
    IL_00EB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00F5: brfalse.s IL_0113
    IL_00F7: ldarg.0
    IL_00F8: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00FD: ldarg.1
    IL_00FE: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_0103: ldarg.2
    IL_0104: call System.Int32& Z0.As::int32<T>(T&)
    IL_0109: call System.Void Z0.dinx::add(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&,System.Int32&)
    IL_010E: br IL_023A
    IL_0113: ldtoken T
    IL_0118: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_011D: ldtoken System.UInt32
    IL_0122: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0127: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_012C: brfalse.s IL_014A
    IL_012E: ldarg.0
    IL_012F: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0134: ldarg.1
    IL_0135: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_013A: ldarg.2
    IL_013B: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_0140: call System.Void Z0.dinx::add(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&,System.UInt32&)
    IL_0145: br IL_023A
    IL_014A: ldtoken T
    IL_014F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0154: ldtoken System.Int64
    IL_0159: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_015E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0163: brfalse.s IL_0181
    IL_0165: ldarg.0
    IL_0166: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_016B: ldarg.1
    IL_016C: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0171: ldarg.2
    IL_0172: call System.Int64& Z0.As::int64<T>(T&)
    IL_0177: call System.Void Z0.dinx::add(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&,System.Int64&)
    IL_017C: br IL_023A
    IL_0181: ldtoken T
    IL_0186: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_018B: ldtoken System.UInt64
    IL_0190: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0195: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_019A: brfalse.s IL_01B8
    IL_019C: ldarg.0
    IL_019D: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01A2: ldarg.1
    IL_01A3: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01A8: ldarg.2
    IL_01A9: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_01AE: call System.Void Z0.dinx::add(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&,System.UInt64&)
    IL_01B3: br IL_023A
    IL_01B8: ldtoken T
    IL_01BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01C2: ldtoken System.Single
    IL_01C7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01CC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01D1: brfalse.s IL_01EC
    IL_01D3: ldarg.0
    IL_01D4: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01D9: ldarg.1
    IL_01DA: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01DF: ldarg.2
    IL_01E0: call System.Single& Z0.As::float32<T>(T&)
    IL_01E5: call System.Void Z0.dinx::add(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&,System.Single&)
    IL_01EA: br.s IL_023A
    IL_01EC: ldtoken T
    IL_01F1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01F6: ldtoken System.Double
    IL_01FB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0200: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0205: brfalse.s IL_0220
    IL_0207: ldarg.0
    IL_0208: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_020D: ldarg.1
    IL_020E: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0213: ldarg.2
    IL_0214: call System.Double& Z0.As::float64<T>(T&)
    IL_0219: call System.Void Z0.dinx::add(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&,System.Double&)
    IL_021E: br.s IL_023A
    IL_0220: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_0225: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_022A: ldc.i4 128
    IL_022F: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_0234: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0239: throw
    IL_023A: ldarg.2
    IL_023B: ret

}
byref Single add<float>(byref Vec256<float> lhs, byref Vec256<float> rhs, byref Single dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0037
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::add(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&,System.SByte&)
    IL_0032: br IL_023A
    IL_0037: ldtoken T
    IL_003C: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0041: ldtoken System.Byte
    IL_0046: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004B: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0050: brfalse.s IL_006E
    IL_0052: ldarg.0
    IL_0053: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0058: ldarg.1
    IL_0059: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005E: ldarg.2
    IL_005F: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0064: call System.Void Z0.dinx::add(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&,System.Byte&)
    IL_0069: br IL_023A
    IL_006E: ldtoken T
    IL_0073: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0078: ldtoken System.Int16
    IL_007D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0082: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0087: brfalse.s IL_00A5
    IL_0089: ldarg.0
    IL_008A: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_008F: ldarg.1
    IL_0090: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0095: ldarg.2
    IL_0096: call System.Int16& Z0.As::int16<T>(T&)
    IL_009B: call System.Void Z0.dinx::add(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&,System.Int16&)
    IL_00A0: br IL_023A
    IL_00A5: ldtoken T
    IL_00AA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AF: ldtoken System.UInt16
    IL_00B4: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B9: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00BE: brfalse.s IL_00DC
    IL_00C0: ldarg.0
    IL_00C1: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00C6: ldarg.1
    IL_00C7: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00CC: ldarg.2
    IL_00CD: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00D2: call System.Void Z0.dinx::add(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&,System.UInt16&)
    IL_00D7: br IL_023A
    IL_00DC: ldtoken T
    IL_00E1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E6: ldtoken System.Int32
    IL_00EB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00F5: brfalse.s IL_0113
    IL_00F7: ldarg.0
    IL_00F8: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00FD: ldarg.1
    IL_00FE: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_0103: ldarg.2
    IL_0104: call System.Int32& Z0.As::int32<T>(T&)
    IL_0109: call System.Void Z0.dinx::add(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&,System.Int32&)
    IL_010E: br IL_023A
    IL_0113: ldtoken T
    IL_0118: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_011D: ldtoken System.UInt32
    IL_0122: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0127: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_012C: brfalse.s IL_014A
    IL_012E: ldarg.0
    IL_012F: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0134: ldarg.1
    IL_0135: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_013A: ldarg.2
    IL_013B: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_0140: call System.Void Z0.dinx::add(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&,System.UInt32&)
    IL_0145: br IL_023A
    IL_014A: ldtoken T
    IL_014F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0154: ldtoken System.Int64
    IL_0159: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_015E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0163: brfalse.s IL_0181
    IL_0165: ldarg.0
    IL_0166: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_016B: ldarg.1
    IL_016C: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0171: ldarg.2
    IL_0172: call System.Int64& Z0.As::int64<T>(T&)
    IL_0177: call System.Void Z0.dinx::add(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&,System.Int64&)
    IL_017C: br IL_023A
    IL_0181: ldtoken T
    IL_0186: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_018B: ldtoken System.UInt64
    IL_0190: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0195: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_019A: brfalse.s IL_01B8
    IL_019C: ldarg.0
    IL_019D: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01A2: ldarg.1
    IL_01A3: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01A8: ldarg.2
    IL_01A9: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_01AE: call System.Void Z0.dinx::add(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&,System.UInt64&)
    IL_01B3: br IL_023A
    IL_01B8: ldtoken T
    IL_01BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01C2: ldtoken System.Single
    IL_01C7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01CC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01D1: brfalse.s IL_01EC
    IL_01D3: ldarg.0
    IL_01D4: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01D9: ldarg.1
    IL_01DA: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01DF: ldarg.2
    IL_01E0: call System.Single& Z0.As::float32<T>(T&)
    IL_01E5: call System.Void Z0.dinx::add(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&,System.Single&)
    IL_01EA: br.s IL_023A
    IL_01EC: ldtoken T
    IL_01F1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01F6: ldtoken System.Double
    IL_01FB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0200: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0205: brfalse.s IL_0220
    IL_0207: ldarg.0
    IL_0208: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_020D: ldarg.1
    IL_020E: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0213: ldarg.2
    IL_0214: call System.Double& Z0.As::float64<T>(T&)
    IL_0219: call System.Void Z0.dinx::add(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&,System.Double&)
    IL_021E: br.s IL_023A
    IL_0220: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_0225: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_022A: ldc.i4 128
    IL_022F: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_0234: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0239: throw
    IL_023A: ldarg.2
    IL_023B: ret

}
byref Double add<double>(byref Vec256<double> lhs, byref Vec256<double> rhs, byref Double dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0037
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::add(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&,System.SByte&)
    IL_0032: br IL_023A
    IL_0037: ldtoken T
    IL_003C: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0041: ldtoken System.Byte
    IL_0046: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004B: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0050: brfalse.s IL_006E
    IL_0052: ldarg.0
    IL_0053: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0058: ldarg.1
    IL_0059: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005E: ldarg.2
    IL_005F: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0064: call System.Void Z0.dinx::add(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&,System.Byte&)
    IL_0069: br IL_023A
    IL_006E: ldtoken T
    IL_0073: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0078: ldtoken System.Int16
    IL_007D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0082: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0087: brfalse.s IL_00A5
    IL_0089: ldarg.0
    IL_008A: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_008F: ldarg.1
    IL_0090: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0095: ldarg.2
    IL_0096: call System.Int16& Z0.As::int16<T>(T&)
    IL_009B: call System.Void Z0.dinx::add(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&,System.Int16&)
    IL_00A0: br IL_023A
    IL_00A5: ldtoken T
    IL_00AA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AF: ldtoken System.UInt16
    IL_00B4: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B9: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00BE: brfalse.s IL_00DC
    IL_00C0: ldarg.0
    IL_00C1: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00C6: ldarg.1
    IL_00C7: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00CC: ldarg.2
    IL_00CD: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00D2: call System.Void Z0.dinx::add(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&,System.UInt16&)
    IL_00D7: br IL_023A
    IL_00DC: ldtoken T
    IL_00E1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E6: ldtoken System.Int32
    IL_00EB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00F5: brfalse.s IL_0113
    IL_00F7: ldarg.0
    IL_00F8: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00FD: ldarg.1
    IL_00FE: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_0103: ldarg.2
    IL_0104: call System.Int32& Z0.As::int32<T>(T&)
    IL_0109: call System.Void Z0.dinx::add(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&,System.Int32&)
    IL_010E: br IL_023A
    IL_0113: ldtoken T
    IL_0118: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_011D: ldtoken System.UInt32
    IL_0122: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0127: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_012C: brfalse.s IL_014A
    IL_012E: ldarg.0
    IL_012F: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0134: ldarg.1
    IL_0135: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_013A: ldarg.2
    IL_013B: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_0140: call System.Void Z0.dinx::add(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&,System.UInt32&)
    IL_0145: br IL_023A
    IL_014A: ldtoken T
    IL_014F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0154: ldtoken System.Int64
    IL_0159: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_015E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0163: brfalse.s IL_0181
    IL_0165: ldarg.0
    IL_0166: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_016B: ldarg.1
    IL_016C: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0171: ldarg.2
    IL_0172: call System.Int64& Z0.As::int64<T>(T&)
    IL_0177: call System.Void Z0.dinx::add(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&,System.Int64&)
    IL_017C: br IL_023A
    IL_0181: ldtoken T
    IL_0186: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_018B: ldtoken System.UInt64
    IL_0190: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0195: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_019A: brfalse.s IL_01B8
    IL_019C: ldarg.0
    IL_019D: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01A2: ldarg.1
    IL_01A3: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01A8: ldarg.2
    IL_01A9: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_01AE: call System.Void Z0.dinx::add(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&,System.UInt64&)
    IL_01B3: br IL_023A
    IL_01B8: ldtoken T
    IL_01BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01C2: ldtoken System.Single
    IL_01C7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01CC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01D1: brfalse.s IL_01EC
    IL_01D3: ldarg.0
    IL_01D4: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01D9: ldarg.1
    IL_01DA: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01DF: ldarg.2
    IL_01E0: call System.Single& Z0.As::float32<T>(T&)
    IL_01E5: call System.Void Z0.dinx::add(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&,System.Single&)
    IL_01EA: br.s IL_023A
    IL_01EC: ldtoken T
    IL_01F1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01F6: ldtoken System.Double
    IL_01FB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0200: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0205: brfalse.s IL_0220
    IL_0207: ldarg.0
    IL_0208: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_020D: ldarg.1
    IL_020E: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0213: ldarg.2
    IL_0214: call System.Double& Z0.As::float64<T>(T&)
    IL_0219: call System.Void Z0.dinx::add(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&,System.Double&)
    IL_021E: br.s IL_023A
    IL_0220: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_0225: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_022A: ldc.i4 128
    IL_022F: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_0234: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0239: throw
    IL_023A: ldarg.2
    IL_023B: ret

}
Num128<byte> add<byte>(byref Num128<byte> lhs, byref Num128<byte> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.Single
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003D
    IL_001B: ldarg.0
    IL_001C: call Z0.Num128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Num128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Num128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Num128`1<T>&)
    IL_0027: call Z0.Num128`1<System.Single> Z0.dinx::add(Z0.Num128`1<System.Single>&,Z0.Num128`1<System.Single>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call System.Runtime.Intrinsics.Vector128`1<T> Z0.Num128`1<System.Single>::As<T>()
    IL_0034: stloc.1
    IL_0035: ldloca.s V_1
    IL_0037: call Z0.Num128`1<T> Z0.Num128`1<T>::op_Implicit(System.Runtime.Intrinsics.Vector128`1<T>&)
    IL_003C: ret
    IL_003D: ldtoken T
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: ldtoken System.Double
    IL_004C: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0051: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0056: brfalse.s IL_007A
    IL_0058: ldarg.0
    IL_0059: call Z0.Num128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Num128`1<T>&)
    IL_005E: ldarg.1
    IL_005F: call Z0.Num128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Num128`1<T>&)
    IL_0064: call Z0.Num128`1<System.Double> Z0.dinx::add(Z0.Num128`1<System.Double>&,Z0.Num128`1<System.Double>&)
    IL_0069: stloc.2
    IL_006A: ldloca.s V_2
    IL_006C: call System.Runtime.Intrinsics.Vector128`1<T> Z0.Num128`1<System.Double>::As<T>()
    IL_0071: stloc.1
    IL_0072: ldloca.s V_1
    IL_0074: call Z0.Num128`1<T> Z0.Num128`1<T>::op_Implicit(System.Runtime.Intrinsics.Vector128`1<T>&)
    IL_0079: ret
    IL_007A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_007F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_0084: ldc.i4 141
    IL_0089: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_008E: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0093: throw

}
Num128<ushort> add<ushort>(byref Num128<ushort> lhs, byref Num128<ushort> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.Single
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003D
    IL_001B: ldarg.0
    IL_001C: call Z0.Num128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Num128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Num128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Num128`1<T>&)
    IL_0027: call Z0.Num128`1<System.Single> Z0.dinx::add(Z0.Num128`1<System.Single>&,Z0.Num128`1<System.Single>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call System.Runtime.Intrinsics.Vector128`1<T> Z0.Num128`1<System.Single>::As<T>()
    IL_0034: stloc.1
    IL_0035: ldloca.s V_1
    IL_0037: call Z0.Num128`1<T> Z0.Num128`1<T>::op_Implicit(System.Runtime.Intrinsics.Vector128`1<T>&)
    IL_003C: ret
    IL_003D: ldtoken T
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: ldtoken System.Double
    IL_004C: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0051: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0056: brfalse.s IL_007A
    IL_0058: ldarg.0
    IL_0059: call Z0.Num128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Num128`1<T>&)
    IL_005E: ldarg.1
    IL_005F: call Z0.Num128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Num128`1<T>&)
    IL_0064: call Z0.Num128`1<System.Double> Z0.dinx::add(Z0.Num128`1<System.Double>&,Z0.Num128`1<System.Double>&)
    IL_0069: stloc.2
    IL_006A: ldloca.s V_2
    IL_006C: call System.Runtime.Intrinsics.Vector128`1<T> Z0.Num128`1<System.Double>::As<T>()
    IL_0071: stloc.1
    IL_0072: ldloca.s V_1
    IL_0074: call Z0.Num128`1<T> Z0.Num128`1<T>::op_Implicit(System.Runtime.Intrinsics.Vector128`1<T>&)
    IL_0079: ret
    IL_007A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_007F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_0084: ldc.i4 141
    IL_0089: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_008E: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0093: throw

}
Num128<uint> add<uint>(byref Num128<uint> lhs, byref Num128<uint> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.Single
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003D
    IL_001B: ldarg.0
    IL_001C: call Z0.Num128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Num128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Num128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Num128`1<T>&)
    IL_0027: call Z0.Num128`1<System.Single> Z0.dinx::add(Z0.Num128`1<System.Single>&,Z0.Num128`1<System.Single>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call System.Runtime.Intrinsics.Vector128`1<T> Z0.Num128`1<System.Single>::As<T>()
    IL_0034: stloc.1
    IL_0035: ldloca.s V_1
    IL_0037: call Z0.Num128`1<T> Z0.Num128`1<T>::op_Implicit(System.Runtime.Intrinsics.Vector128`1<T>&)
    IL_003C: ret
    IL_003D: ldtoken T
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: ldtoken System.Double
    IL_004C: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0051: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0056: brfalse.s IL_007A
    IL_0058: ldarg.0
    IL_0059: call Z0.Num128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Num128`1<T>&)
    IL_005E: ldarg.1
    IL_005F: call Z0.Num128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Num128`1<T>&)
    IL_0064: call Z0.Num128`1<System.Double> Z0.dinx::add(Z0.Num128`1<System.Double>&,Z0.Num128`1<System.Double>&)
    IL_0069: stloc.2
    IL_006A: ldloca.s V_2
    IL_006C: call System.Runtime.Intrinsics.Vector128`1<T> Z0.Num128`1<System.Double>::As<T>()
    IL_0071: stloc.1
    IL_0072: ldloca.s V_1
    IL_0074: call Z0.Num128`1<T> Z0.Num128`1<T>::op_Implicit(System.Runtime.Intrinsics.Vector128`1<T>&)
    IL_0079: ret
    IL_007A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_007F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_0084: ldc.i4 141
    IL_0089: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_008E: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0093: throw

}
Num128<ulong> add<ulong>(byref Num128<ulong> lhs, byref Num128<ulong> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.Single
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003D
    IL_001B: ldarg.0
    IL_001C: call Z0.Num128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Num128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Num128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Num128`1<T>&)
    IL_0027: call Z0.Num128`1<System.Single> Z0.dinx::add(Z0.Num128`1<System.Single>&,Z0.Num128`1<System.Single>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call System.Runtime.Intrinsics.Vector128`1<T> Z0.Num128`1<System.Single>::As<T>()
    IL_0034: stloc.1
    IL_0035: ldloca.s V_1
    IL_0037: call Z0.Num128`1<T> Z0.Num128`1<T>::op_Implicit(System.Runtime.Intrinsics.Vector128`1<T>&)
    IL_003C: ret
    IL_003D: ldtoken T
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: ldtoken System.Double
    IL_004C: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0051: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0056: brfalse.s IL_007A
    IL_0058: ldarg.0
    IL_0059: call Z0.Num128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Num128`1<T>&)
    IL_005E: ldarg.1
    IL_005F: call Z0.Num128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Num128`1<T>&)
    IL_0064: call Z0.Num128`1<System.Double> Z0.dinx::add(Z0.Num128`1<System.Double>&,Z0.Num128`1<System.Double>&)
    IL_0069: stloc.2
    IL_006A: ldloca.s V_2
    IL_006C: call System.Runtime.Intrinsics.Vector128`1<T> Z0.Num128`1<System.Double>::As<T>()
    IL_0071: stloc.1
    IL_0072: ldloca.s V_1
    IL_0074: call Z0.Num128`1<T> Z0.Num128`1<T>::op_Implicit(System.Runtime.Intrinsics.Vector128`1<T>&)
    IL_0079: ret
    IL_007A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_007F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_0084: ldc.i4 141
    IL_0089: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_008E: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0093: throw

}
Num128<sbyte> add<sbyte>(byref Num128<sbyte> lhs, byref Num128<sbyte> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.Single
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003D
    IL_001B: ldarg.0
    IL_001C: call Z0.Num128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Num128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Num128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Num128`1<T>&)
    IL_0027: call Z0.Num128`1<System.Single> Z0.dinx::add(Z0.Num128`1<System.Single>&,Z0.Num128`1<System.Single>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call System.Runtime.Intrinsics.Vector128`1<T> Z0.Num128`1<System.Single>::As<T>()
    IL_0034: stloc.1
    IL_0035: ldloca.s V_1
    IL_0037: call Z0.Num128`1<T> Z0.Num128`1<T>::op_Implicit(System.Runtime.Intrinsics.Vector128`1<T>&)
    IL_003C: ret
    IL_003D: ldtoken T
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: ldtoken System.Double
    IL_004C: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0051: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0056: brfalse.s IL_007A
    IL_0058: ldarg.0
    IL_0059: call Z0.Num128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Num128`1<T>&)
    IL_005E: ldarg.1
    IL_005F: call Z0.Num128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Num128`1<T>&)
    IL_0064: call Z0.Num128`1<System.Double> Z0.dinx::add(Z0.Num128`1<System.Double>&,Z0.Num128`1<System.Double>&)
    IL_0069: stloc.2
    IL_006A: ldloca.s V_2
    IL_006C: call System.Runtime.Intrinsics.Vector128`1<T> Z0.Num128`1<System.Double>::As<T>()
    IL_0071: stloc.1
    IL_0072: ldloca.s V_1
    IL_0074: call Z0.Num128`1<T> Z0.Num128`1<T>::op_Implicit(System.Runtime.Intrinsics.Vector128`1<T>&)
    IL_0079: ret
    IL_007A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_007F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_0084: ldc.i4 141
    IL_0089: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_008E: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0093: throw

}
Num128<short> add<short>(byref Num128<short> lhs, byref Num128<short> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.Single
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003D
    IL_001B: ldarg.0
    IL_001C: call Z0.Num128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Num128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Num128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Num128`1<T>&)
    IL_0027: call Z0.Num128`1<System.Single> Z0.dinx::add(Z0.Num128`1<System.Single>&,Z0.Num128`1<System.Single>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call System.Runtime.Intrinsics.Vector128`1<T> Z0.Num128`1<System.Single>::As<T>()
    IL_0034: stloc.1
    IL_0035: ldloca.s V_1
    IL_0037: call Z0.Num128`1<T> Z0.Num128`1<T>::op_Implicit(System.Runtime.Intrinsics.Vector128`1<T>&)
    IL_003C: ret
    IL_003D: ldtoken T
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: ldtoken System.Double
    IL_004C: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0051: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0056: brfalse.s IL_007A
    IL_0058: ldarg.0
    IL_0059: call Z0.Num128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Num128`1<T>&)
    IL_005E: ldarg.1
    IL_005F: call Z0.Num128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Num128`1<T>&)
    IL_0064: call Z0.Num128`1<System.Double> Z0.dinx::add(Z0.Num128`1<System.Double>&,Z0.Num128`1<System.Double>&)
    IL_0069: stloc.2
    IL_006A: ldloca.s V_2
    IL_006C: call System.Runtime.Intrinsics.Vector128`1<T> Z0.Num128`1<System.Double>::As<T>()
    IL_0071: stloc.1
    IL_0072: ldloca.s V_1
    IL_0074: call Z0.Num128`1<T> Z0.Num128`1<T>::op_Implicit(System.Runtime.Intrinsics.Vector128`1<T>&)
    IL_0079: ret
    IL_007A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_007F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_0084: ldc.i4 141
    IL_0089: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_008E: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0093: throw

}
Num128<int> add<int>(byref Num128<int> lhs, byref Num128<int> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.Single
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003D
    IL_001B: ldarg.0
    IL_001C: call Z0.Num128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Num128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Num128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Num128`1<T>&)
    IL_0027: call Z0.Num128`1<System.Single> Z0.dinx::add(Z0.Num128`1<System.Single>&,Z0.Num128`1<System.Single>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call System.Runtime.Intrinsics.Vector128`1<T> Z0.Num128`1<System.Single>::As<T>()
    IL_0034: stloc.1
    IL_0035: ldloca.s V_1
    IL_0037: call Z0.Num128`1<T> Z0.Num128`1<T>::op_Implicit(System.Runtime.Intrinsics.Vector128`1<T>&)
    IL_003C: ret
    IL_003D: ldtoken T
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: ldtoken System.Double
    IL_004C: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0051: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0056: brfalse.s IL_007A
    IL_0058: ldarg.0
    IL_0059: call Z0.Num128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Num128`1<T>&)
    IL_005E: ldarg.1
    IL_005F: call Z0.Num128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Num128`1<T>&)
    IL_0064: call Z0.Num128`1<System.Double> Z0.dinx::add(Z0.Num128`1<System.Double>&,Z0.Num128`1<System.Double>&)
    IL_0069: stloc.2
    IL_006A: ldloca.s V_2
    IL_006C: call System.Runtime.Intrinsics.Vector128`1<T> Z0.Num128`1<System.Double>::As<T>()
    IL_0071: stloc.1
    IL_0072: ldloca.s V_1
    IL_0074: call Z0.Num128`1<T> Z0.Num128`1<T>::op_Implicit(System.Runtime.Intrinsics.Vector128`1<T>&)
    IL_0079: ret
    IL_007A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_007F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_0084: ldc.i4 141
    IL_0089: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_008E: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0093: throw

}
Num128<long> add<long>(byref Num128<long> lhs, byref Num128<long> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.Single
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003D
    IL_001B: ldarg.0
    IL_001C: call Z0.Num128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Num128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Num128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Num128`1<T>&)
    IL_0027: call Z0.Num128`1<System.Single> Z0.dinx::add(Z0.Num128`1<System.Single>&,Z0.Num128`1<System.Single>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call System.Runtime.Intrinsics.Vector128`1<T> Z0.Num128`1<System.Single>::As<T>()
    IL_0034: stloc.1
    IL_0035: ldloca.s V_1
    IL_0037: call Z0.Num128`1<T> Z0.Num128`1<T>::op_Implicit(System.Runtime.Intrinsics.Vector128`1<T>&)
    IL_003C: ret
    IL_003D: ldtoken T
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: ldtoken System.Double
    IL_004C: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0051: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0056: brfalse.s IL_007A
    IL_0058: ldarg.0
    IL_0059: call Z0.Num128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Num128`1<T>&)
    IL_005E: ldarg.1
    IL_005F: call Z0.Num128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Num128`1<T>&)
    IL_0064: call Z0.Num128`1<System.Double> Z0.dinx::add(Z0.Num128`1<System.Double>&,Z0.Num128`1<System.Double>&)
    IL_0069: stloc.2
    IL_006A: ldloca.s V_2
    IL_006C: call System.Runtime.Intrinsics.Vector128`1<T> Z0.Num128`1<System.Double>::As<T>()
    IL_0071: stloc.1
    IL_0072: ldloca.s V_1
    IL_0074: call Z0.Num128`1<T> Z0.Num128`1<T>::op_Implicit(System.Runtime.Intrinsics.Vector128`1<T>&)
    IL_0079: ret
    IL_007A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_007F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_0084: ldc.i4 141
    IL_0089: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_008E: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0093: throw

}
Num128<float> add<float>(byref Num128<float> lhs, byref Num128<float> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.Single
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003D
    IL_001B: ldarg.0
    IL_001C: call Z0.Num128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Num128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Num128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Num128`1<T>&)
    IL_0027: call Z0.Num128`1<System.Single> Z0.dinx::add(Z0.Num128`1<System.Single>&,Z0.Num128`1<System.Single>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call System.Runtime.Intrinsics.Vector128`1<T> Z0.Num128`1<System.Single>::As<T>()
    IL_0034: stloc.1
    IL_0035: ldloca.s V_1
    IL_0037: call Z0.Num128`1<T> Z0.Num128`1<T>::op_Implicit(System.Runtime.Intrinsics.Vector128`1<T>&)
    IL_003C: ret
    IL_003D: ldtoken T
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: ldtoken System.Double
    IL_004C: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0051: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0056: brfalse.s IL_007A
    IL_0058: ldarg.0
    IL_0059: call Z0.Num128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Num128`1<T>&)
    IL_005E: ldarg.1
    IL_005F: call Z0.Num128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Num128`1<T>&)
    IL_0064: call Z0.Num128`1<System.Double> Z0.dinx::add(Z0.Num128`1<System.Double>&,Z0.Num128`1<System.Double>&)
    IL_0069: stloc.2
    IL_006A: ldloca.s V_2
    IL_006C: call System.Runtime.Intrinsics.Vector128`1<T> Z0.Num128`1<System.Double>::As<T>()
    IL_0071: stloc.1
    IL_0072: ldloca.s V_1
    IL_0074: call Z0.Num128`1<T> Z0.Num128`1<T>::op_Implicit(System.Runtime.Intrinsics.Vector128`1<T>&)
    IL_0079: ret
    IL_007A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_007F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_0084: ldc.i4 141
    IL_0089: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_008E: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0093: throw

}
Num128<double> add<double>(byref Num128<double> lhs, byref Num128<double> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.Single
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003D
    IL_001B: ldarg.0
    IL_001C: call Z0.Num128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Num128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Num128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Num128`1<T>&)
    IL_0027: call Z0.Num128`1<System.Single> Z0.dinx::add(Z0.Num128`1<System.Single>&,Z0.Num128`1<System.Single>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call System.Runtime.Intrinsics.Vector128`1<T> Z0.Num128`1<System.Single>::As<T>()
    IL_0034: stloc.1
    IL_0035: ldloca.s V_1
    IL_0037: call Z0.Num128`1<T> Z0.Num128`1<T>::op_Implicit(System.Runtime.Intrinsics.Vector128`1<T>&)
    IL_003C: ret
    IL_003D: ldtoken T
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: ldtoken System.Double
    IL_004C: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0051: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0056: brfalse.s IL_007A
    IL_0058: ldarg.0
    IL_0059: call Z0.Num128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Num128`1<T>&)
    IL_005E: ldarg.1
    IL_005F: call Z0.Num128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Num128`1<T>&)
    IL_0064: call Z0.Num128`1<System.Double> Z0.dinx::add(Z0.Num128`1<System.Double>&,Z0.Num128`1<System.Double>&)
    IL_0069: stloc.2
    IL_006A: ldloca.s V_2
    IL_006C: call System.Runtime.Intrinsics.Vector128`1<T> Z0.Num128`1<System.Double>::As<T>()
    IL_0071: stloc.1
    IL_0072: ldloca.s V_1
    IL_0074: call Z0.Num128`1<T> Z0.Num128`1<T>::op_Implicit(System.Runtime.Intrinsics.Vector128`1<T>&)
    IL_0079: ret
    IL_007A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_007F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\add.cs"
    IL_0084: ldc.i4 141
    IL_0089: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_008E: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0093: throw

}
Vec128<byte> sub<byte>(byref Vec128<byte> lhs, byref Vec128<byte> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: call Z0.Vec128`1<System.SByte> Z0.dinx::sub(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec128`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0061: call Z0.Vec128`1<System.Byte> Z0.dinx::sub(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec128`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_009B: call Z0.Vec128`1<System.Int16> Z0.dinx::sub(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec128`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00D5: call Z0.Vec128`1<System.UInt16> Z0.dinx::sub(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec128`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_010F: call Z0.Vec128`1<System.Int32> Z0.dinx::sub(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec128`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_014A: call Z0.Vec128`1<System.UInt32> Z0.dinx::sub(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec128`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0185: call Z0.Vec128`1<System.Int64> Z0.dinx::sub(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec128`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01C0: call Z0.Vec128`1<System.UInt64> Z0.dinx::sub(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec128`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01FB: call Z0.Vec128`1<System.Single> Z0.dinx::sub(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Single>&)
    IL_0209: ldobj Z0.Vec128`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0236: call Z0.Vec128`1<System.Double> Z0.dinx::sub(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Double>&)
    IL_0244: ldobj Z0.Vec128`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_0254: ldc.i4.s 43
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec128<ushort> sub<ushort>(byref Vec128<ushort> lhs, byref Vec128<ushort> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: call Z0.Vec128`1<System.SByte> Z0.dinx::sub(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec128`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0061: call Z0.Vec128`1<System.Byte> Z0.dinx::sub(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec128`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_009B: call Z0.Vec128`1<System.Int16> Z0.dinx::sub(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec128`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00D5: call Z0.Vec128`1<System.UInt16> Z0.dinx::sub(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec128`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_010F: call Z0.Vec128`1<System.Int32> Z0.dinx::sub(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec128`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_014A: call Z0.Vec128`1<System.UInt32> Z0.dinx::sub(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec128`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0185: call Z0.Vec128`1<System.Int64> Z0.dinx::sub(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec128`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01C0: call Z0.Vec128`1<System.UInt64> Z0.dinx::sub(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec128`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01FB: call Z0.Vec128`1<System.Single> Z0.dinx::sub(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Single>&)
    IL_0209: ldobj Z0.Vec128`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0236: call Z0.Vec128`1<System.Double> Z0.dinx::sub(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Double>&)
    IL_0244: ldobj Z0.Vec128`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_0254: ldc.i4.s 43
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec128<uint> sub<uint>(byref Vec128<uint> lhs, byref Vec128<uint> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: call Z0.Vec128`1<System.SByte> Z0.dinx::sub(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec128`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0061: call Z0.Vec128`1<System.Byte> Z0.dinx::sub(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec128`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_009B: call Z0.Vec128`1<System.Int16> Z0.dinx::sub(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec128`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00D5: call Z0.Vec128`1<System.UInt16> Z0.dinx::sub(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec128`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_010F: call Z0.Vec128`1<System.Int32> Z0.dinx::sub(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec128`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_014A: call Z0.Vec128`1<System.UInt32> Z0.dinx::sub(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec128`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0185: call Z0.Vec128`1<System.Int64> Z0.dinx::sub(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec128`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01C0: call Z0.Vec128`1<System.UInt64> Z0.dinx::sub(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec128`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01FB: call Z0.Vec128`1<System.Single> Z0.dinx::sub(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Single>&)
    IL_0209: ldobj Z0.Vec128`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0236: call Z0.Vec128`1<System.Double> Z0.dinx::sub(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Double>&)
    IL_0244: ldobj Z0.Vec128`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_0254: ldc.i4.s 43
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec128<ulong> sub<ulong>(byref Vec128<ulong> lhs, byref Vec128<ulong> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: call Z0.Vec128`1<System.SByte> Z0.dinx::sub(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec128`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0061: call Z0.Vec128`1<System.Byte> Z0.dinx::sub(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec128`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_009B: call Z0.Vec128`1<System.Int16> Z0.dinx::sub(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec128`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00D5: call Z0.Vec128`1<System.UInt16> Z0.dinx::sub(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec128`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_010F: call Z0.Vec128`1<System.Int32> Z0.dinx::sub(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec128`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_014A: call Z0.Vec128`1<System.UInt32> Z0.dinx::sub(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec128`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0185: call Z0.Vec128`1<System.Int64> Z0.dinx::sub(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec128`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01C0: call Z0.Vec128`1<System.UInt64> Z0.dinx::sub(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec128`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01FB: call Z0.Vec128`1<System.Single> Z0.dinx::sub(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Single>&)
    IL_0209: ldobj Z0.Vec128`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0236: call Z0.Vec128`1<System.Double> Z0.dinx::sub(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Double>&)
    IL_0244: ldobj Z0.Vec128`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_0254: ldc.i4.s 43
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec128<sbyte> sub<sbyte>(byref Vec128<sbyte> lhs, byref Vec128<sbyte> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: call Z0.Vec128`1<System.SByte> Z0.dinx::sub(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec128`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0061: call Z0.Vec128`1<System.Byte> Z0.dinx::sub(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec128`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_009B: call Z0.Vec128`1<System.Int16> Z0.dinx::sub(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec128`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00D5: call Z0.Vec128`1<System.UInt16> Z0.dinx::sub(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec128`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_010F: call Z0.Vec128`1<System.Int32> Z0.dinx::sub(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec128`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_014A: call Z0.Vec128`1<System.UInt32> Z0.dinx::sub(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec128`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0185: call Z0.Vec128`1<System.Int64> Z0.dinx::sub(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec128`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01C0: call Z0.Vec128`1<System.UInt64> Z0.dinx::sub(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec128`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01FB: call Z0.Vec128`1<System.Single> Z0.dinx::sub(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Single>&)
    IL_0209: ldobj Z0.Vec128`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0236: call Z0.Vec128`1<System.Double> Z0.dinx::sub(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Double>&)
    IL_0244: ldobj Z0.Vec128`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_0254: ldc.i4.s 43
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec128<short> sub<short>(byref Vec128<short> lhs, byref Vec128<short> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: call Z0.Vec128`1<System.SByte> Z0.dinx::sub(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec128`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0061: call Z0.Vec128`1<System.Byte> Z0.dinx::sub(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec128`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_009B: call Z0.Vec128`1<System.Int16> Z0.dinx::sub(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec128`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00D5: call Z0.Vec128`1<System.UInt16> Z0.dinx::sub(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec128`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_010F: call Z0.Vec128`1<System.Int32> Z0.dinx::sub(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec128`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_014A: call Z0.Vec128`1<System.UInt32> Z0.dinx::sub(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec128`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0185: call Z0.Vec128`1<System.Int64> Z0.dinx::sub(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec128`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01C0: call Z0.Vec128`1<System.UInt64> Z0.dinx::sub(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec128`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01FB: call Z0.Vec128`1<System.Single> Z0.dinx::sub(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Single>&)
    IL_0209: ldobj Z0.Vec128`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0236: call Z0.Vec128`1<System.Double> Z0.dinx::sub(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Double>&)
    IL_0244: ldobj Z0.Vec128`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_0254: ldc.i4.s 43
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec128<int> sub<int>(byref Vec128<int> lhs, byref Vec128<int> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: call Z0.Vec128`1<System.SByte> Z0.dinx::sub(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec128`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0061: call Z0.Vec128`1<System.Byte> Z0.dinx::sub(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec128`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_009B: call Z0.Vec128`1<System.Int16> Z0.dinx::sub(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec128`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00D5: call Z0.Vec128`1<System.UInt16> Z0.dinx::sub(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec128`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_010F: call Z0.Vec128`1<System.Int32> Z0.dinx::sub(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec128`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_014A: call Z0.Vec128`1<System.UInt32> Z0.dinx::sub(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec128`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0185: call Z0.Vec128`1<System.Int64> Z0.dinx::sub(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec128`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01C0: call Z0.Vec128`1<System.UInt64> Z0.dinx::sub(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec128`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01FB: call Z0.Vec128`1<System.Single> Z0.dinx::sub(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Single>&)
    IL_0209: ldobj Z0.Vec128`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0236: call Z0.Vec128`1<System.Double> Z0.dinx::sub(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Double>&)
    IL_0244: ldobj Z0.Vec128`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_0254: ldc.i4.s 43
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec128<long> sub<long>(byref Vec128<long> lhs, byref Vec128<long> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: call Z0.Vec128`1<System.SByte> Z0.dinx::sub(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec128`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0061: call Z0.Vec128`1<System.Byte> Z0.dinx::sub(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec128`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_009B: call Z0.Vec128`1<System.Int16> Z0.dinx::sub(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec128`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00D5: call Z0.Vec128`1<System.UInt16> Z0.dinx::sub(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec128`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_010F: call Z0.Vec128`1<System.Int32> Z0.dinx::sub(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec128`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_014A: call Z0.Vec128`1<System.UInt32> Z0.dinx::sub(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec128`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0185: call Z0.Vec128`1<System.Int64> Z0.dinx::sub(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec128`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01C0: call Z0.Vec128`1<System.UInt64> Z0.dinx::sub(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec128`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01FB: call Z0.Vec128`1<System.Single> Z0.dinx::sub(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Single>&)
    IL_0209: ldobj Z0.Vec128`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0236: call Z0.Vec128`1<System.Double> Z0.dinx::sub(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Double>&)
    IL_0244: ldobj Z0.Vec128`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_0254: ldc.i4.s 43
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec128<float> sub<float>(byref Vec128<float> lhs, byref Vec128<float> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: call Z0.Vec128`1<System.SByte> Z0.dinx::sub(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec128`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0061: call Z0.Vec128`1<System.Byte> Z0.dinx::sub(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec128`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_009B: call Z0.Vec128`1<System.Int16> Z0.dinx::sub(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec128`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00D5: call Z0.Vec128`1<System.UInt16> Z0.dinx::sub(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec128`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_010F: call Z0.Vec128`1<System.Int32> Z0.dinx::sub(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec128`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_014A: call Z0.Vec128`1<System.UInt32> Z0.dinx::sub(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec128`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0185: call Z0.Vec128`1<System.Int64> Z0.dinx::sub(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec128`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01C0: call Z0.Vec128`1<System.UInt64> Z0.dinx::sub(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec128`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01FB: call Z0.Vec128`1<System.Single> Z0.dinx::sub(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Single>&)
    IL_0209: ldobj Z0.Vec128`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0236: call Z0.Vec128`1<System.Double> Z0.dinx::sub(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Double>&)
    IL_0244: ldobj Z0.Vec128`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_0254: ldc.i4.s 43
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec128<double> sub<double>(byref Vec128<double> lhs, byref Vec128<double> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: call Z0.Vec128`1<System.SByte> Z0.dinx::sub(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec128`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0061: call Z0.Vec128`1<System.Byte> Z0.dinx::sub(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec128`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_009B: call Z0.Vec128`1<System.Int16> Z0.dinx::sub(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec128`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00D5: call Z0.Vec128`1<System.UInt16> Z0.dinx::sub(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec128`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_010F: call Z0.Vec128`1<System.Int32> Z0.dinx::sub(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec128`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_014A: call Z0.Vec128`1<System.UInt32> Z0.dinx::sub(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec128`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0185: call Z0.Vec128`1<System.Int64> Z0.dinx::sub(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec128`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01C0: call Z0.Vec128`1<System.UInt64> Z0.dinx::sub(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec128`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01FB: call Z0.Vec128`1<System.Single> Z0.dinx::sub(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Single>&)
    IL_0209: ldobj Z0.Vec128`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0236: call Z0.Vec128`1<System.Double> Z0.dinx::sub(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Double>&)
    IL_0244: ldobj Z0.Vec128`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_0254: ldc.i4.s 43
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec256<byte> sub<byte>(byref Vec256<byte> lhs, byref Vec256<byte> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: call Z0.Vec256`1<System.SByte> Z0.dinx::sub(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec256`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0061: call Z0.Vec256`1<System.Byte> Z0.dinx::sub(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec256`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_009B: call Z0.Vec256`1<System.Int16> Z0.dinx::sub(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec256`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00D5: call Z0.Vec256`1<System.UInt16> Z0.dinx::sub(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec256`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_010F: call Z0.Vec256`1<System.Int32> Z0.dinx::sub(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec256`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_014A: call Z0.Vec256`1<System.UInt32> Z0.dinx::sub(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec256`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0185: call Z0.Vec256`1<System.Int64> Z0.dinx::sub(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec256`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01C0: call Z0.Vec256`1<System.UInt64> Z0.dinx::sub(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec256`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01FB: call Z0.Vec256`1<System.Single> Z0.dinx::sub(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Single>&)
    IL_0209: ldobj Z0.Vec256`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0236: call Z0.Vec256`1<System.Double> Z0.dinx::sub(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Double>&)
    IL_0244: ldobj Z0.Vec256`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_0254: ldc.i4.s 71
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec256<ushort> sub<ushort>(byref Vec256<ushort> lhs, byref Vec256<ushort> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: call Z0.Vec256`1<System.SByte> Z0.dinx::sub(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec256`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0061: call Z0.Vec256`1<System.Byte> Z0.dinx::sub(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec256`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_009B: call Z0.Vec256`1<System.Int16> Z0.dinx::sub(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec256`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00D5: call Z0.Vec256`1<System.UInt16> Z0.dinx::sub(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec256`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_010F: call Z0.Vec256`1<System.Int32> Z0.dinx::sub(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec256`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_014A: call Z0.Vec256`1<System.UInt32> Z0.dinx::sub(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec256`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0185: call Z0.Vec256`1<System.Int64> Z0.dinx::sub(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec256`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01C0: call Z0.Vec256`1<System.UInt64> Z0.dinx::sub(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec256`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01FB: call Z0.Vec256`1<System.Single> Z0.dinx::sub(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Single>&)
    IL_0209: ldobj Z0.Vec256`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0236: call Z0.Vec256`1<System.Double> Z0.dinx::sub(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Double>&)
    IL_0244: ldobj Z0.Vec256`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_0254: ldc.i4.s 71
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec256<uint> sub<uint>(byref Vec256<uint> lhs, byref Vec256<uint> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: call Z0.Vec256`1<System.SByte> Z0.dinx::sub(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec256`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0061: call Z0.Vec256`1<System.Byte> Z0.dinx::sub(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec256`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_009B: call Z0.Vec256`1<System.Int16> Z0.dinx::sub(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec256`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00D5: call Z0.Vec256`1<System.UInt16> Z0.dinx::sub(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec256`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_010F: call Z0.Vec256`1<System.Int32> Z0.dinx::sub(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec256`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_014A: call Z0.Vec256`1<System.UInt32> Z0.dinx::sub(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec256`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0185: call Z0.Vec256`1<System.Int64> Z0.dinx::sub(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec256`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01C0: call Z0.Vec256`1<System.UInt64> Z0.dinx::sub(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec256`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01FB: call Z0.Vec256`1<System.Single> Z0.dinx::sub(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Single>&)
    IL_0209: ldobj Z0.Vec256`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0236: call Z0.Vec256`1<System.Double> Z0.dinx::sub(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Double>&)
    IL_0244: ldobj Z0.Vec256`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_0254: ldc.i4.s 71
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec256<ulong> sub<ulong>(byref Vec256<ulong> lhs, byref Vec256<ulong> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: call Z0.Vec256`1<System.SByte> Z0.dinx::sub(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec256`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0061: call Z0.Vec256`1<System.Byte> Z0.dinx::sub(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec256`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_009B: call Z0.Vec256`1<System.Int16> Z0.dinx::sub(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec256`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00D5: call Z0.Vec256`1<System.UInt16> Z0.dinx::sub(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec256`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_010F: call Z0.Vec256`1<System.Int32> Z0.dinx::sub(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec256`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_014A: call Z0.Vec256`1<System.UInt32> Z0.dinx::sub(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec256`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0185: call Z0.Vec256`1<System.Int64> Z0.dinx::sub(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec256`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01C0: call Z0.Vec256`1<System.UInt64> Z0.dinx::sub(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec256`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01FB: call Z0.Vec256`1<System.Single> Z0.dinx::sub(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Single>&)
    IL_0209: ldobj Z0.Vec256`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0236: call Z0.Vec256`1<System.Double> Z0.dinx::sub(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Double>&)
    IL_0244: ldobj Z0.Vec256`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_0254: ldc.i4.s 71
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec256<sbyte> sub<sbyte>(byref Vec256<sbyte> lhs, byref Vec256<sbyte> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: call Z0.Vec256`1<System.SByte> Z0.dinx::sub(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec256`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0061: call Z0.Vec256`1<System.Byte> Z0.dinx::sub(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec256`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_009B: call Z0.Vec256`1<System.Int16> Z0.dinx::sub(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec256`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00D5: call Z0.Vec256`1<System.UInt16> Z0.dinx::sub(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec256`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_010F: call Z0.Vec256`1<System.Int32> Z0.dinx::sub(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec256`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_014A: call Z0.Vec256`1<System.UInt32> Z0.dinx::sub(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec256`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0185: call Z0.Vec256`1<System.Int64> Z0.dinx::sub(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec256`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01C0: call Z0.Vec256`1<System.UInt64> Z0.dinx::sub(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec256`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01FB: call Z0.Vec256`1<System.Single> Z0.dinx::sub(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Single>&)
    IL_0209: ldobj Z0.Vec256`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0236: call Z0.Vec256`1<System.Double> Z0.dinx::sub(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Double>&)
    IL_0244: ldobj Z0.Vec256`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_0254: ldc.i4.s 71
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec256<short> sub<short>(byref Vec256<short> lhs, byref Vec256<short> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: call Z0.Vec256`1<System.SByte> Z0.dinx::sub(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec256`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0061: call Z0.Vec256`1<System.Byte> Z0.dinx::sub(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec256`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_009B: call Z0.Vec256`1<System.Int16> Z0.dinx::sub(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec256`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00D5: call Z0.Vec256`1<System.UInt16> Z0.dinx::sub(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec256`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_010F: call Z0.Vec256`1<System.Int32> Z0.dinx::sub(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec256`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_014A: call Z0.Vec256`1<System.UInt32> Z0.dinx::sub(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec256`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0185: call Z0.Vec256`1<System.Int64> Z0.dinx::sub(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec256`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01C0: call Z0.Vec256`1<System.UInt64> Z0.dinx::sub(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec256`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01FB: call Z0.Vec256`1<System.Single> Z0.dinx::sub(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Single>&)
    IL_0209: ldobj Z0.Vec256`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0236: call Z0.Vec256`1<System.Double> Z0.dinx::sub(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Double>&)
    IL_0244: ldobj Z0.Vec256`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_0254: ldc.i4.s 71
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec256<int> sub<int>(byref Vec256<int> lhs, byref Vec256<int> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: call Z0.Vec256`1<System.SByte> Z0.dinx::sub(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec256`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0061: call Z0.Vec256`1<System.Byte> Z0.dinx::sub(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec256`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_009B: call Z0.Vec256`1<System.Int16> Z0.dinx::sub(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec256`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00D5: call Z0.Vec256`1<System.UInt16> Z0.dinx::sub(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec256`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_010F: call Z0.Vec256`1<System.Int32> Z0.dinx::sub(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec256`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_014A: call Z0.Vec256`1<System.UInt32> Z0.dinx::sub(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec256`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0185: call Z0.Vec256`1<System.Int64> Z0.dinx::sub(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec256`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01C0: call Z0.Vec256`1<System.UInt64> Z0.dinx::sub(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec256`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01FB: call Z0.Vec256`1<System.Single> Z0.dinx::sub(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Single>&)
    IL_0209: ldobj Z0.Vec256`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0236: call Z0.Vec256`1<System.Double> Z0.dinx::sub(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Double>&)
    IL_0244: ldobj Z0.Vec256`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_0254: ldc.i4.s 71
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec256<long> sub<long>(byref Vec256<long> lhs, byref Vec256<long> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: call Z0.Vec256`1<System.SByte> Z0.dinx::sub(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec256`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0061: call Z0.Vec256`1<System.Byte> Z0.dinx::sub(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec256`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_009B: call Z0.Vec256`1<System.Int16> Z0.dinx::sub(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec256`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00D5: call Z0.Vec256`1<System.UInt16> Z0.dinx::sub(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec256`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_010F: call Z0.Vec256`1<System.Int32> Z0.dinx::sub(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec256`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_014A: call Z0.Vec256`1<System.UInt32> Z0.dinx::sub(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec256`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0185: call Z0.Vec256`1<System.Int64> Z0.dinx::sub(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec256`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01C0: call Z0.Vec256`1<System.UInt64> Z0.dinx::sub(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec256`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01FB: call Z0.Vec256`1<System.Single> Z0.dinx::sub(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Single>&)
    IL_0209: ldobj Z0.Vec256`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0236: call Z0.Vec256`1<System.Double> Z0.dinx::sub(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Double>&)
    IL_0244: ldobj Z0.Vec256`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_0254: ldc.i4.s 71
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec256<float> sub<float>(byref Vec256<float> lhs, byref Vec256<float> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: call Z0.Vec256`1<System.SByte> Z0.dinx::sub(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec256`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0061: call Z0.Vec256`1<System.Byte> Z0.dinx::sub(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec256`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_009B: call Z0.Vec256`1<System.Int16> Z0.dinx::sub(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec256`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00D5: call Z0.Vec256`1<System.UInt16> Z0.dinx::sub(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec256`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_010F: call Z0.Vec256`1<System.Int32> Z0.dinx::sub(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec256`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_014A: call Z0.Vec256`1<System.UInt32> Z0.dinx::sub(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec256`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0185: call Z0.Vec256`1<System.Int64> Z0.dinx::sub(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec256`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01C0: call Z0.Vec256`1<System.UInt64> Z0.dinx::sub(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec256`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01FB: call Z0.Vec256`1<System.Single> Z0.dinx::sub(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Single>&)
    IL_0209: ldobj Z0.Vec256`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0236: call Z0.Vec256`1<System.Double> Z0.dinx::sub(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Double>&)
    IL_0244: ldobj Z0.Vec256`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_0254: ldc.i4.s 71
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec256<double> sub<double>(byref Vec256<double> lhs, byref Vec256<double> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: call Z0.Vec256`1<System.SByte> Z0.dinx::sub(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec256`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0061: call Z0.Vec256`1<System.Byte> Z0.dinx::sub(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec256`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_009B: call Z0.Vec256`1<System.Int16> Z0.dinx::sub(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec256`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00D5: call Z0.Vec256`1<System.UInt16> Z0.dinx::sub(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec256`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_010F: call Z0.Vec256`1<System.Int32> Z0.dinx::sub(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec256`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_014A: call Z0.Vec256`1<System.UInt32> Z0.dinx::sub(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec256`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0185: call Z0.Vec256`1<System.Int64> Z0.dinx::sub(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec256`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01C0: call Z0.Vec256`1<System.UInt64> Z0.dinx::sub(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec256`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01FB: call Z0.Vec256`1<System.Single> Z0.dinx::sub(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Single>&)
    IL_0209: ldobj Z0.Vec256`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0236: call Z0.Vec256`1<System.Double> Z0.dinx::sub(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Double>&)
    IL_0244: ldobj Z0.Vec256`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_0254: ldc.i4.s 71
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
void sub<byte>(byref Vec128<byte> lhs, byref Vec128<byte> rhs, byref Byte dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_0208: ldc.i4.s 99
    IL_020A: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_020F: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0214: throw

}
void sub<ushort>(byref Vec128<ushort> lhs, byref Vec128<ushort> rhs, byref UInt16 dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_0208: ldc.i4.s 99
    IL_020A: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_020F: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0214: throw

}
void sub<uint>(byref Vec128<uint> lhs, byref Vec128<uint> rhs, byref UInt32 dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_0208: ldc.i4.s 99
    IL_020A: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_020F: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0214: throw

}
void sub<ulong>(byref Vec128<ulong> lhs, byref Vec128<ulong> rhs, byref UInt64 dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_0208: ldc.i4.s 99
    IL_020A: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_020F: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0214: throw

}
void sub<sbyte>(byref Vec128<sbyte> lhs, byref Vec128<sbyte> rhs, byref SByte dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_0208: ldc.i4.s 99
    IL_020A: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_020F: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0214: throw

}
void sub<short>(byref Vec128<short> lhs, byref Vec128<short> rhs, byref Int16 dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_0208: ldc.i4.s 99
    IL_020A: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_020F: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0214: throw

}
void sub<int>(byref Vec128<int> lhs, byref Vec128<int> rhs, byref Int32 dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_0208: ldc.i4.s 99
    IL_020A: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_020F: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0214: throw

}
void sub<long>(byref Vec128<long> lhs, byref Vec128<long> rhs, byref Int64 dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_0208: ldc.i4.s 99
    IL_020A: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_020F: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0214: throw

}
void sub<float>(byref Vec128<float> lhs, byref Vec128<float> rhs, byref Single dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_0208: ldc.i4.s 99
    IL_020A: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_020F: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0214: throw

}
void sub<double>(byref Vec128<double> lhs, byref Vec128<double> rhs, byref Double dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::sub(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_0208: ldc.i4.s 99
    IL_020A: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_020F: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0214: throw

}
void sub<byte>(byref Vec256<byte> lhs, byref Vec256<byte> rhs, byref Byte dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_0208: ldc.i4.s 127
    IL_020A: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_020F: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0214: throw

}
void sub<ushort>(byref Vec256<ushort> lhs, byref Vec256<ushort> rhs, byref UInt16 dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_0208: ldc.i4.s 127
    IL_020A: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_020F: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0214: throw

}
void sub<uint>(byref Vec256<uint> lhs, byref Vec256<uint> rhs, byref UInt32 dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_0208: ldc.i4.s 127
    IL_020A: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_020F: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0214: throw

}
void sub<ulong>(byref Vec256<ulong> lhs, byref Vec256<ulong> rhs, byref UInt64 dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_0208: ldc.i4.s 127
    IL_020A: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_020F: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0214: throw

}
void sub<sbyte>(byref Vec256<sbyte> lhs, byref Vec256<sbyte> rhs, byref SByte dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_0208: ldc.i4.s 127
    IL_020A: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_020F: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0214: throw

}
void sub<short>(byref Vec256<short> lhs, byref Vec256<short> rhs, byref Int16 dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_0208: ldc.i4.s 127
    IL_020A: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_020F: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0214: throw

}
void sub<int>(byref Vec256<int> lhs, byref Vec256<int> rhs, byref Int32 dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_0208: ldc.i4.s 127
    IL_020A: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_020F: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0214: throw

}
void sub<long>(byref Vec256<long> lhs, byref Vec256<long> rhs, byref Int64 dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_0208: ldc.i4.s 127
    IL_020A: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_020F: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0214: throw

}
void sub<float>(byref Vec256<float> lhs, byref Vec256<float> rhs, byref Single dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_0208: ldc.i4.s 127
    IL_020A: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_020F: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0214: throw

}
void sub<double>(byref Vec256<double> lhs, byref Vec256<double> rhs, byref Double dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::sub(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_0208: ldc.i4.s 127
    IL_020A: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_020F: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0214: throw

}
Num128<byte> sub<byte>(byref Num128<byte> lhs, byref Num128<byte> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.Single
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003D
    IL_001B: ldarg.0
    IL_001C: call Z0.Num128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Num128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Num128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Num128`1<T>&)
    IL_0027: call Z0.Num128`1<System.Single> Z0.dinx::sub(Z0.Num128`1<System.Single>&,Z0.Num128`1<System.Single>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call System.Runtime.Intrinsics.Vector128`1<T> Z0.Num128`1<System.Single>::As<T>()
    IL_0034: stloc.1
    IL_0035: ldloca.s V_1
    IL_0037: call Z0.Num128`1<T> Z0.Num128`1<T>::op_Implicit(System.Runtime.Intrinsics.Vector128`1<T>&)
    IL_003C: ret
    IL_003D: ldtoken T
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: ldtoken System.Double
    IL_004C: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0051: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0056: brfalse.s IL_007A
    IL_0058: ldarg.0
    IL_0059: call Z0.Num128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Num128`1<T>&)
    IL_005E: ldarg.1
    IL_005F: call Z0.Num128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Num128`1<T>&)
    IL_0064: call Z0.Num128`1<System.Double> Z0.dinx::sub(Z0.Num128`1<System.Double>&,Z0.Num128`1<System.Double>&)
    IL_0069: stloc.2
    IL_006A: ldloca.s V_2
    IL_006C: call System.Runtime.Intrinsics.Vector128`1<T> Z0.Num128`1<System.Double>::As<T>()
    IL_0071: stloc.1
    IL_0072: ldloca.s V_1
    IL_0074: call Z0.Num128`1<T> Z0.Num128`1<T>::op_Implicit(System.Runtime.Intrinsics.Vector128`1<T>&)
    IL_0079: ret
    IL_007A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_007F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_0084: ldc.i4 138
    IL_0089: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_008E: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0093: throw

}
Num128<ushort> sub<ushort>(byref Num128<ushort> lhs, byref Num128<ushort> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.Single
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003D
    IL_001B: ldarg.0
    IL_001C: call Z0.Num128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Num128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Num128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Num128`1<T>&)
    IL_0027: call Z0.Num128`1<System.Single> Z0.dinx::sub(Z0.Num128`1<System.Single>&,Z0.Num128`1<System.Single>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call System.Runtime.Intrinsics.Vector128`1<T> Z0.Num128`1<System.Single>::As<T>()
    IL_0034: stloc.1
    IL_0035: ldloca.s V_1
    IL_0037: call Z0.Num128`1<T> Z0.Num128`1<T>::op_Implicit(System.Runtime.Intrinsics.Vector128`1<T>&)
    IL_003C: ret
    IL_003D: ldtoken T
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: ldtoken System.Double
    IL_004C: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0051: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0056: brfalse.s IL_007A
    IL_0058: ldarg.0
    IL_0059: call Z0.Num128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Num128`1<T>&)
    IL_005E: ldarg.1
    IL_005F: call Z0.Num128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Num128`1<T>&)
    IL_0064: call Z0.Num128`1<System.Double> Z0.dinx::sub(Z0.Num128`1<System.Double>&,Z0.Num128`1<System.Double>&)
    IL_0069: stloc.2
    IL_006A: ldloca.s V_2
    IL_006C: call System.Runtime.Intrinsics.Vector128`1<T> Z0.Num128`1<System.Double>::As<T>()
    IL_0071: stloc.1
    IL_0072: ldloca.s V_1
    IL_0074: call Z0.Num128`1<T> Z0.Num128`1<T>::op_Implicit(System.Runtime.Intrinsics.Vector128`1<T>&)
    IL_0079: ret
    IL_007A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_007F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_0084: ldc.i4 138
    IL_0089: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_008E: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0093: throw

}
Num128<uint> sub<uint>(byref Num128<uint> lhs, byref Num128<uint> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.Single
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003D
    IL_001B: ldarg.0
    IL_001C: call Z0.Num128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Num128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Num128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Num128`1<T>&)
    IL_0027: call Z0.Num128`1<System.Single> Z0.dinx::sub(Z0.Num128`1<System.Single>&,Z0.Num128`1<System.Single>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call System.Runtime.Intrinsics.Vector128`1<T> Z0.Num128`1<System.Single>::As<T>()
    IL_0034: stloc.1
    IL_0035: ldloca.s V_1
    IL_0037: call Z0.Num128`1<T> Z0.Num128`1<T>::op_Implicit(System.Runtime.Intrinsics.Vector128`1<T>&)
    IL_003C: ret
    IL_003D: ldtoken T
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: ldtoken System.Double
    IL_004C: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0051: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0056: brfalse.s IL_007A
    IL_0058: ldarg.0
    IL_0059: call Z0.Num128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Num128`1<T>&)
    IL_005E: ldarg.1
    IL_005F: call Z0.Num128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Num128`1<T>&)
    IL_0064: call Z0.Num128`1<System.Double> Z0.dinx::sub(Z0.Num128`1<System.Double>&,Z0.Num128`1<System.Double>&)
    IL_0069: stloc.2
    IL_006A: ldloca.s V_2
    IL_006C: call System.Runtime.Intrinsics.Vector128`1<T> Z0.Num128`1<System.Double>::As<T>()
    IL_0071: stloc.1
    IL_0072: ldloca.s V_1
    IL_0074: call Z0.Num128`1<T> Z0.Num128`1<T>::op_Implicit(System.Runtime.Intrinsics.Vector128`1<T>&)
    IL_0079: ret
    IL_007A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_007F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_0084: ldc.i4 138
    IL_0089: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_008E: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0093: throw

}
Num128<ulong> sub<ulong>(byref Num128<ulong> lhs, byref Num128<ulong> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.Single
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003D
    IL_001B: ldarg.0
    IL_001C: call Z0.Num128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Num128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Num128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Num128`1<T>&)
    IL_0027: call Z0.Num128`1<System.Single> Z0.dinx::sub(Z0.Num128`1<System.Single>&,Z0.Num128`1<System.Single>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call System.Runtime.Intrinsics.Vector128`1<T> Z0.Num128`1<System.Single>::As<T>()
    IL_0034: stloc.1
    IL_0035: ldloca.s V_1
    IL_0037: call Z0.Num128`1<T> Z0.Num128`1<T>::op_Implicit(System.Runtime.Intrinsics.Vector128`1<T>&)
    IL_003C: ret
    IL_003D: ldtoken T
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: ldtoken System.Double
    IL_004C: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0051: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0056: brfalse.s IL_007A
    IL_0058: ldarg.0
    IL_0059: call Z0.Num128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Num128`1<T>&)
    IL_005E: ldarg.1
    IL_005F: call Z0.Num128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Num128`1<T>&)
    IL_0064: call Z0.Num128`1<System.Double> Z0.dinx::sub(Z0.Num128`1<System.Double>&,Z0.Num128`1<System.Double>&)
    IL_0069: stloc.2
    IL_006A: ldloca.s V_2
    IL_006C: call System.Runtime.Intrinsics.Vector128`1<T> Z0.Num128`1<System.Double>::As<T>()
    IL_0071: stloc.1
    IL_0072: ldloca.s V_1
    IL_0074: call Z0.Num128`1<T> Z0.Num128`1<T>::op_Implicit(System.Runtime.Intrinsics.Vector128`1<T>&)
    IL_0079: ret
    IL_007A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_007F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_0084: ldc.i4 138
    IL_0089: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_008E: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0093: throw

}
Num128<sbyte> sub<sbyte>(byref Num128<sbyte> lhs, byref Num128<sbyte> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.Single
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003D
    IL_001B: ldarg.0
    IL_001C: call Z0.Num128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Num128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Num128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Num128`1<T>&)
    IL_0027: call Z0.Num128`1<System.Single> Z0.dinx::sub(Z0.Num128`1<System.Single>&,Z0.Num128`1<System.Single>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call System.Runtime.Intrinsics.Vector128`1<T> Z0.Num128`1<System.Single>::As<T>()
    IL_0034: stloc.1
    IL_0035: ldloca.s V_1
    IL_0037: call Z0.Num128`1<T> Z0.Num128`1<T>::op_Implicit(System.Runtime.Intrinsics.Vector128`1<T>&)
    IL_003C: ret
    IL_003D: ldtoken T
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: ldtoken System.Double
    IL_004C: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0051: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0056: brfalse.s IL_007A
    IL_0058: ldarg.0
    IL_0059: call Z0.Num128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Num128`1<T>&)
    IL_005E: ldarg.1
    IL_005F: call Z0.Num128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Num128`1<T>&)
    IL_0064: call Z0.Num128`1<System.Double> Z0.dinx::sub(Z0.Num128`1<System.Double>&,Z0.Num128`1<System.Double>&)
    IL_0069: stloc.2
    IL_006A: ldloca.s V_2
    IL_006C: call System.Runtime.Intrinsics.Vector128`1<T> Z0.Num128`1<System.Double>::As<T>()
    IL_0071: stloc.1
    IL_0072: ldloca.s V_1
    IL_0074: call Z0.Num128`1<T> Z0.Num128`1<T>::op_Implicit(System.Runtime.Intrinsics.Vector128`1<T>&)
    IL_0079: ret
    IL_007A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_007F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_0084: ldc.i4 138
    IL_0089: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_008E: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0093: throw

}
Num128<short> sub<short>(byref Num128<short> lhs, byref Num128<short> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.Single
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003D
    IL_001B: ldarg.0
    IL_001C: call Z0.Num128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Num128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Num128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Num128`1<T>&)
    IL_0027: call Z0.Num128`1<System.Single> Z0.dinx::sub(Z0.Num128`1<System.Single>&,Z0.Num128`1<System.Single>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call System.Runtime.Intrinsics.Vector128`1<T> Z0.Num128`1<System.Single>::As<T>()
    IL_0034: stloc.1
    IL_0035: ldloca.s V_1
    IL_0037: call Z0.Num128`1<T> Z0.Num128`1<T>::op_Implicit(System.Runtime.Intrinsics.Vector128`1<T>&)
    IL_003C: ret
    IL_003D: ldtoken T
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: ldtoken System.Double
    IL_004C: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0051: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0056: brfalse.s IL_007A
    IL_0058: ldarg.0
    IL_0059: call Z0.Num128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Num128`1<T>&)
    IL_005E: ldarg.1
    IL_005F: call Z0.Num128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Num128`1<T>&)
    IL_0064: call Z0.Num128`1<System.Double> Z0.dinx::sub(Z0.Num128`1<System.Double>&,Z0.Num128`1<System.Double>&)
    IL_0069: stloc.2
    IL_006A: ldloca.s V_2
    IL_006C: call System.Runtime.Intrinsics.Vector128`1<T> Z0.Num128`1<System.Double>::As<T>()
    IL_0071: stloc.1
    IL_0072: ldloca.s V_1
    IL_0074: call Z0.Num128`1<T> Z0.Num128`1<T>::op_Implicit(System.Runtime.Intrinsics.Vector128`1<T>&)
    IL_0079: ret
    IL_007A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_007F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_0084: ldc.i4 138
    IL_0089: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_008E: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0093: throw

}
Num128<int> sub<int>(byref Num128<int> lhs, byref Num128<int> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.Single
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003D
    IL_001B: ldarg.0
    IL_001C: call Z0.Num128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Num128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Num128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Num128`1<T>&)
    IL_0027: call Z0.Num128`1<System.Single> Z0.dinx::sub(Z0.Num128`1<System.Single>&,Z0.Num128`1<System.Single>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call System.Runtime.Intrinsics.Vector128`1<T> Z0.Num128`1<System.Single>::As<T>()
    IL_0034: stloc.1
    IL_0035: ldloca.s V_1
    IL_0037: call Z0.Num128`1<T> Z0.Num128`1<T>::op_Implicit(System.Runtime.Intrinsics.Vector128`1<T>&)
    IL_003C: ret
    IL_003D: ldtoken T
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: ldtoken System.Double
    IL_004C: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0051: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0056: brfalse.s IL_007A
    IL_0058: ldarg.0
    IL_0059: call Z0.Num128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Num128`1<T>&)
    IL_005E: ldarg.1
    IL_005F: call Z0.Num128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Num128`1<T>&)
    IL_0064: call Z0.Num128`1<System.Double> Z0.dinx::sub(Z0.Num128`1<System.Double>&,Z0.Num128`1<System.Double>&)
    IL_0069: stloc.2
    IL_006A: ldloca.s V_2
    IL_006C: call System.Runtime.Intrinsics.Vector128`1<T> Z0.Num128`1<System.Double>::As<T>()
    IL_0071: stloc.1
    IL_0072: ldloca.s V_1
    IL_0074: call Z0.Num128`1<T> Z0.Num128`1<T>::op_Implicit(System.Runtime.Intrinsics.Vector128`1<T>&)
    IL_0079: ret
    IL_007A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_007F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_0084: ldc.i4 138
    IL_0089: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_008E: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0093: throw

}
Num128<long> sub<long>(byref Num128<long> lhs, byref Num128<long> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.Single
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003D
    IL_001B: ldarg.0
    IL_001C: call Z0.Num128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Num128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Num128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Num128`1<T>&)
    IL_0027: call Z0.Num128`1<System.Single> Z0.dinx::sub(Z0.Num128`1<System.Single>&,Z0.Num128`1<System.Single>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call System.Runtime.Intrinsics.Vector128`1<T> Z0.Num128`1<System.Single>::As<T>()
    IL_0034: stloc.1
    IL_0035: ldloca.s V_1
    IL_0037: call Z0.Num128`1<T> Z0.Num128`1<T>::op_Implicit(System.Runtime.Intrinsics.Vector128`1<T>&)
    IL_003C: ret
    IL_003D: ldtoken T
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: ldtoken System.Double
    IL_004C: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0051: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0056: brfalse.s IL_007A
    IL_0058: ldarg.0
    IL_0059: call Z0.Num128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Num128`1<T>&)
    IL_005E: ldarg.1
    IL_005F: call Z0.Num128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Num128`1<T>&)
    IL_0064: call Z0.Num128`1<System.Double> Z0.dinx::sub(Z0.Num128`1<System.Double>&,Z0.Num128`1<System.Double>&)
    IL_0069: stloc.2
    IL_006A: ldloca.s V_2
    IL_006C: call System.Runtime.Intrinsics.Vector128`1<T> Z0.Num128`1<System.Double>::As<T>()
    IL_0071: stloc.1
    IL_0072: ldloca.s V_1
    IL_0074: call Z0.Num128`1<T> Z0.Num128`1<T>::op_Implicit(System.Runtime.Intrinsics.Vector128`1<T>&)
    IL_0079: ret
    IL_007A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_007F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_0084: ldc.i4 138
    IL_0089: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_008E: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0093: throw

}
Num128<float> sub<float>(byref Num128<float> lhs, byref Num128<float> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.Single
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003D
    IL_001B: ldarg.0
    IL_001C: call Z0.Num128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Num128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Num128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Num128`1<T>&)
    IL_0027: call Z0.Num128`1<System.Single> Z0.dinx::sub(Z0.Num128`1<System.Single>&,Z0.Num128`1<System.Single>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call System.Runtime.Intrinsics.Vector128`1<T> Z0.Num128`1<System.Single>::As<T>()
    IL_0034: stloc.1
    IL_0035: ldloca.s V_1
    IL_0037: call Z0.Num128`1<T> Z0.Num128`1<T>::op_Implicit(System.Runtime.Intrinsics.Vector128`1<T>&)
    IL_003C: ret
    IL_003D: ldtoken T
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: ldtoken System.Double
    IL_004C: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0051: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0056: brfalse.s IL_007A
    IL_0058: ldarg.0
    IL_0059: call Z0.Num128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Num128`1<T>&)
    IL_005E: ldarg.1
    IL_005F: call Z0.Num128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Num128`1<T>&)
    IL_0064: call Z0.Num128`1<System.Double> Z0.dinx::sub(Z0.Num128`1<System.Double>&,Z0.Num128`1<System.Double>&)
    IL_0069: stloc.2
    IL_006A: ldloca.s V_2
    IL_006C: call System.Runtime.Intrinsics.Vector128`1<T> Z0.Num128`1<System.Double>::As<T>()
    IL_0071: stloc.1
    IL_0072: ldloca.s V_1
    IL_0074: call Z0.Num128`1<T> Z0.Num128`1<T>::op_Implicit(System.Runtime.Intrinsics.Vector128`1<T>&)
    IL_0079: ret
    IL_007A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_007F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_0084: ldc.i4 138
    IL_0089: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_008E: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0093: throw

}
Num128<double> sub<double>(byref Num128<double> lhs, byref Num128<double> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.Single
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003D
    IL_001B: ldarg.0
    IL_001C: call Z0.Num128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Num128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Num128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Num128`1<T>&)
    IL_0027: call Z0.Num128`1<System.Single> Z0.dinx::sub(Z0.Num128`1<System.Single>&,Z0.Num128`1<System.Single>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call System.Runtime.Intrinsics.Vector128`1<T> Z0.Num128`1<System.Single>::As<T>()
    IL_0034: stloc.1
    IL_0035: ldloca.s V_1
    IL_0037: call Z0.Num128`1<T> Z0.Num128`1<T>::op_Implicit(System.Runtime.Intrinsics.Vector128`1<T>&)
    IL_003C: ret
    IL_003D: ldtoken T
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: ldtoken System.Double
    IL_004C: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0051: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0056: brfalse.s IL_007A
    IL_0058: ldarg.0
    IL_0059: call Z0.Num128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Num128`1<T>&)
    IL_005E: ldarg.1
    IL_005F: call Z0.Num128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Num128`1<T>&)
    IL_0064: call Z0.Num128`1<System.Double> Z0.dinx::sub(Z0.Num128`1<System.Double>&,Z0.Num128`1<System.Double>&)
    IL_0069: stloc.2
    IL_006A: ldloca.s V_2
    IL_006C: call System.Runtime.Intrinsics.Vector128`1<T> Z0.Num128`1<System.Double>::As<T>()
    IL_0071: stloc.1
    IL_0072: ldloca.s V_1
    IL_0074: call Z0.Num128`1<T> Z0.Num128`1<T>::op_Implicit(System.Runtime.Intrinsics.Vector128`1<T>&)
    IL_0079: ret
    IL_007A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_007F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\arithmetic\\sub.cs"
    IL_0084: ldc.i4 138
    IL_0089: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_008E: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0093: throw

}
Vec128<byte> and<byte>(byref Vec128<byte> lhs, byref Vec128<byte> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: call Z0.Vec128`1<System.SByte> Z0.dinx::and(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec128`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0061: call Z0.Vec128`1<System.Byte> Z0.dinx::and(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec128`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_009B: call Z0.Vec128`1<System.Int16> Z0.dinx::and(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec128`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00D5: call Z0.Vec128`1<System.UInt16> Z0.dinx::and(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec128`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_010F: call Z0.Vec128`1<System.Int32> Z0.dinx::and(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec128`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_014A: call Z0.Vec128`1<System.UInt32> Z0.dinx::and(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec128`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0185: call Z0.Vec128`1<System.Int64> Z0.dinx::and(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec128`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01C0: call Z0.Vec128`1<System.UInt64> Z0.dinx::and(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec128`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01FB: call Z0.Vec128`1<System.Single> Z0.dinx::and(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Single>&)
    IL_0209: ldobj Z0.Vec128`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0236: call Z0.Vec128`1<System.Double> Z0.dinx::and(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Double>&)
    IL_0244: ldobj Z0.Vec128`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\and.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\and.cs"
    IL_0254: ldc.i4.s 49
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec128<ushort> and<ushort>(byref Vec128<ushort> lhs, byref Vec128<ushort> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: call Z0.Vec128`1<System.SByte> Z0.dinx::and(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec128`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0061: call Z0.Vec128`1<System.Byte> Z0.dinx::and(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec128`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_009B: call Z0.Vec128`1<System.Int16> Z0.dinx::and(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec128`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00D5: call Z0.Vec128`1<System.UInt16> Z0.dinx::and(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec128`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_010F: call Z0.Vec128`1<System.Int32> Z0.dinx::and(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec128`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_014A: call Z0.Vec128`1<System.UInt32> Z0.dinx::and(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec128`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0185: call Z0.Vec128`1<System.Int64> Z0.dinx::and(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec128`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01C0: call Z0.Vec128`1<System.UInt64> Z0.dinx::and(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec128`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01FB: call Z0.Vec128`1<System.Single> Z0.dinx::and(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Single>&)
    IL_0209: ldobj Z0.Vec128`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0236: call Z0.Vec128`1<System.Double> Z0.dinx::and(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Double>&)
    IL_0244: ldobj Z0.Vec128`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\and.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\and.cs"
    IL_0254: ldc.i4.s 49
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec128<uint> and<uint>(byref Vec128<uint> lhs, byref Vec128<uint> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: call Z0.Vec128`1<System.SByte> Z0.dinx::and(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec128`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0061: call Z0.Vec128`1<System.Byte> Z0.dinx::and(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec128`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_009B: call Z0.Vec128`1<System.Int16> Z0.dinx::and(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec128`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00D5: call Z0.Vec128`1<System.UInt16> Z0.dinx::and(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec128`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_010F: call Z0.Vec128`1<System.Int32> Z0.dinx::and(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec128`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_014A: call Z0.Vec128`1<System.UInt32> Z0.dinx::and(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec128`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0185: call Z0.Vec128`1<System.Int64> Z0.dinx::and(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec128`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01C0: call Z0.Vec128`1<System.UInt64> Z0.dinx::and(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec128`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01FB: call Z0.Vec128`1<System.Single> Z0.dinx::and(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Single>&)
    IL_0209: ldobj Z0.Vec128`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0236: call Z0.Vec128`1<System.Double> Z0.dinx::and(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Double>&)
    IL_0244: ldobj Z0.Vec128`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\and.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\and.cs"
    IL_0254: ldc.i4.s 49
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec128<ulong> and<ulong>(byref Vec128<ulong> lhs, byref Vec128<ulong> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: call Z0.Vec128`1<System.SByte> Z0.dinx::and(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec128`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0061: call Z0.Vec128`1<System.Byte> Z0.dinx::and(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec128`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_009B: call Z0.Vec128`1<System.Int16> Z0.dinx::and(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec128`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00D5: call Z0.Vec128`1<System.UInt16> Z0.dinx::and(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec128`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_010F: call Z0.Vec128`1<System.Int32> Z0.dinx::and(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec128`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_014A: call Z0.Vec128`1<System.UInt32> Z0.dinx::and(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec128`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0185: call Z0.Vec128`1<System.Int64> Z0.dinx::and(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec128`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01C0: call Z0.Vec128`1<System.UInt64> Z0.dinx::and(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec128`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01FB: call Z0.Vec128`1<System.Single> Z0.dinx::and(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Single>&)
    IL_0209: ldobj Z0.Vec128`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0236: call Z0.Vec128`1<System.Double> Z0.dinx::and(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Double>&)
    IL_0244: ldobj Z0.Vec128`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\and.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\and.cs"
    IL_0254: ldc.i4.s 49
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec128<sbyte> and<sbyte>(byref Vec128<sbyte> lhs, byref Vec128<sbyte> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: call Z0.Vec128`1<System.SByte> Z0.dinx::and(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec128`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0061: call Z0.Vec128`1<System.Byte> Z0.dinx::and(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec128`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_009B: call Z0.Vec128`1<System.Int16> Z0.dinx::and(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec128`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00D5: call Z0.Vec128`1<System.UInt16> Z0.dinx::and(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec128`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_010F: call Z0.Vec128`1<System.Int32> Z0.dinx::and(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec128`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_014A: call Z0.Vec128`1<System.UInt32> Z0.dinx::and(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec128`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0185: call Z0.Vec128`1<System.Int64> Z0.dinx::and(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec128`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01C0: call Z0.Vec128`1<System.UInt64> Z0.dinx::and(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec128`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01FB: call Z0.Vec128`1<System.Single> Z0.dinx::and(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Single>&)
    IL_0209: ldobj Z0.Vec128`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0236: call Z0.Vec128`1<System.Double> Z0.dinx::and(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Double>&)
    IL_0244: ldobj Z0.Vec128`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\and.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\and.cs"
    IL_0254: ldc.i4.s 49
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec128<short> and<short>(byref Vec128<short> lhs, byref Vec128<short> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: call Z0.Vec128`1<System.SByte> Z0.dinx::and(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec128`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0061: call Z0.Vec128`1<System.Byte> Z0.dinx::and(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec128`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_009B: call Z0.Vec128`1<System.Int16> Z0.dinx::and(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec128`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00D5: call Z0.Vec128`1<System.UInt16> Z0.dinx::and(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec128`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_010F: call Z0.Vec128`1<System.Int32> Z0.dinx::and(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec128`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_014A: call Z0.Vec128`1<System.UInt32> Z0.dinx::and(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec128`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0185: call Z0.Vec128`1<System.Int64> Z0.dinx::and(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec128`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01C0: call Z0.Vec128`1<System.UInt64> Z0.dinx::and(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec128`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01FB: call Z0.Vec128`1<System.Single> Z0.dinx::and(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Single>&)
    IL_0209: ldobj Z0.Vec128`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0236: call Z0.Vec128`1<System.Double> Z0.dinx::and(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Double>&)
    IL_0244: ldobj Z0.Vec128`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\and.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\and.cs"
    IL_0254: ldc.i4.s 49
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec128<int> and<int>(byref Vec128<int> lhs, byref Vec128<int> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: call Z0.Vec128`1<System.SByte> Z0.dinx::and(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec128`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0061: call Z0.Vec128`1<System.Byte> Z0.dinx::and(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec128`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_009B: call Z0.Vec128`1<System.Int16> Z0.dinx::and(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec128`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00D5: call Z0.Vec128`1<System.UInt16> Z0.dinx::and(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec128`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_010F: call Z0.Vec128`1<System.Int32> Z0.dinx::and(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec128`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_014A: call Z0.Vec128`1<System.UInt32> Z0.dinx::and(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec128`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0185: call Z0.Vec128`1<System.Int64> Z0.dinx::and(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec128`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01C0: call Z0.Vec128`1<System.UInt64> Z0.dinx::and(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec128`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01FB: call Z0.Vec128`1<System.Single> Z0.dinx::and(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Single>&)
    IL_0209: ldobj Z0.Vec128`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0236: call Z0.Vec128`1<System.Double> Z0.dinx::and(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Double>&)
    IL_0244: ldobj Z0.Vec128`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\and.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\and.cs"
    IL_0254: ldc.i4.s 49
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec128<long> and<long>(byref Vec128<long> lhs, byref Vec128<long> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: call Z0.Vec128`1<System.SByte> Z0.dinx::and(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec128`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0061: call Z0.Vec128`1<System.Byte> Z0.dinx::and(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec128`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_009B: call Z0.Vec128`1<System.Int16> Z0.dinx::and(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec128`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00D5: call Z0.Vec128`1<System.UInt16> Z0.dinx::and(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec128`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_010F: call Z0.Vec128`1<System.Int32> Z0.dinx::and(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec128`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_014A: call Z0.Vec128`1<System.UInt32> Z0.dinx::and(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec128`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0185: call Z0.Vec128`1<System.Int64> Z0.dinx::and(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec128`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01C0: call Z0.Vec128`1<System.UInt64> Z0.dinx::and(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec128`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01FB: call Z0.Vec128`1<System.Single> Z0.dinx::and(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Single>&)
    IL_0209: ldobj Z0.Vec128`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0236: call Z0.Vec128`1<System.Double> Z0.dinx::and(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Double>&)
    IL_0244: ldobj Z0.Vec128`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\and.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\and.cs"
    IL_0254: ldc.i4.s 49
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec128<float> and<float>(byref Vec128<float> lhs, byref Vec128<float> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: call Z0.Vec128`1<System.SByte> Z0.dinx::and(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec128`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0061: call Z0.Vec128`1<System.Byte> Z0.dinx::and(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec128`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_009B: call Z0.Vec128`1<System.Int16> Z0.dinx::and(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec128`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00D5: call Z0.Vec128`1<System.UInt16> Z0.dinx::and(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec128`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_010F: call Z0.Vec128`1<System.Int32> Z0.dinx::and(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec128`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_014A: call Z0.Vec128`1<System.UInt32> Z0.dinx::and(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec128`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0185: call Z0.Vec128`1<System.Int64> Z0.dinx::and(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec128`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01C0: call Z0.Vec128`1<System.UInt64> Z0.dinx::and(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec128`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01FB: call Z0.Vec128`1<System.Single> Z0.dinx::and(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Single>&)
    IL_0209: ldobj Z0.Vec128`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0236: call Z0.Vec128`1<System.Double> Z0.dinx::and(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Double>&)
    IL_0244: ldobj Z0.Vec128`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\and.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\and.cs"
    IL_0254: ldc.i4.s 49
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec128<double> and<double>(byref Vec128<double> lhs, byref Vec128<double> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: call Z0.Vec128`1<System.SByte> Z0.dinx::and(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec128`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0061: call Z0.Vec128`1<System.Byte> Z0.dinx::and(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec128`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_009B: call Z0.Vec128`1<System.Int16> Z0.dinx::and(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec128`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00D5: call Z0.Vec128`1<System.UInt16> Z0.dinx::and(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec128`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_010F: call Z0.Vec128`1<System.Int32> Z0.dinx::and(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec128`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_014A: call Z0.Vec128`1<System.UInt32> Z0.dinx::and(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec128`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0185: call Z0.Vec128`1<System.Int64> Z0.dinx::and(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec128`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_01C0: call Z0.Vec128`1<System.UInt64> Z0.dinx::and(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec128`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01FB: call Z0.Vec128`1<System.Single> Z0.dinx::and(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Single>&)
    IL_0209: ldobj Z0.Vec128`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_0236: call Z0.Vec128`1<System.Double> Z0.dinx::and(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec128`1<T>& Z0.AsInX::generic<T>(Z0.Vec128`1<System.Double>&)
    IL_0244: ldobj Z0.Vec128`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\and.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\and.cs"
    IL_0254: ldc.i4.s 49
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec256<byte> and<byte>(byref Vec256<byte> lhs, byref Vec256<byte> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: call Z0.Vec256`1<System.SByte> Z0.dinx::and(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec256`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0061: call Z0.Vec256`1<System.Byte> Z0.dinx::and(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec256`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_009B: call Z0.Vec256`1<System.Int16> Z0.dinx::and(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec256`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00D5: call Z0.Vec256`1<System.UInt16> Z0.dinx::and(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec256`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_010F: call Z0.Vec256`1<System.Int32> Z0.dinx::and(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec256`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_014A: call Z0.Vec256`1<System.UInt32> Z0.dinx::and(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec256`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0185: call Z0.Vec256`1<System.Int64> Z0.dinx::and(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec256`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01C0: call Z0.Vec256`1<System.UInt64> Z0.dinx::and(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec256`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01FB: call Z0.Vec256`1<System.Single> Z0.dinx::and(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Single>&)
    IL_0209: ldobj Z0.Vec256`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0236: call Z0.Vec256`1<System.Double> Z0.dinx::and(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Double>&)
    IL_0244: ldobj Z0.Vec256`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\and.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\and.cs"
    IL_0254: ldc.i4.s 83
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec256<ushort> and<ushort>(byref Vec256<ushort> lhs, byref Vec256<ushort> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: call Z0.Vec256`1<System.SByte> Z0.dinx::and(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec256`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0061: call Z0.Vec256`1<System.Byte> Z0.dinx::and(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec256`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_009B: call Z0.Vec256`1<System.Int16> Z0.dinx::and(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec256`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00D5: call Z0.Vec256`1<System.UInt16> Z0.dinx::and(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec256`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_010F: call Z0.Vec256`1<System.Int32> Z0.dinx::and(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec256`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_014A: call Z0.Vec256`1<System.UInt32> Z0.dinx::and(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec256`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0185: call Z0.Vec256`1<System.Int64> Z0.dinx::and(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec256`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01C0: call Z0.Vec256`1<System.UInt64> Z0.dinx::and(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec256`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01FB: call Z0.Vec256`1<System.Single> Z0.dinx::and(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Single>&)
    IL_0209: ldobj Z0.Vec256`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0236: call Z0.Vec256`1<System.Double> Z0.dinx::and(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Double>&)
    IL_0244: ldobj Z0.Vec256`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\and.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\and.cs"
    IL_0254: ldc.i4.s 83
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec256<uint> and<uint>(byref Vec256<uint> lhs, byref Vec256<uint> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: call Z0.Vec256`1<System.SByte> Z0.dinx::and(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec256`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0061: call Z0.Vec256`1<System.Byte> Z0.dinx::and(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec256`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_009B: call Z0.Vec256`1<System.Int16> Z0.dinx::and(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec256`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00D5: call Z0.Vec256`1<System.UInt16> Z0.dinx::and(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec256`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_010F: call Z0.Vec256`1<System.Int32> Z0.dinx::and(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec256`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_014A: call Z0.Vec256`1<System.UInt32> Z0.dinx::and(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec256`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0185: call Z0.Vec256`1<System.Int64> Z0.dinx::and(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec256`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01C0: call Z0.Vec256`1<System.UInt64> Z0.dinx::and(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec256`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01FB: call Z0.Vec256`1<System.Single> Z0.dinx::and(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Single>&)
    IL_0209: ldobj Z0.Vec256`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0236: call Z0.Vec256`1<System.Double> Z0.dinx::and(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Double>&)
    IL_0244: ldobj Z0.Vec256`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\and.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\and.cs"
    IL_0254: ldc.i4.s 83
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec256<ulong> and<ulong>(byref Vec256<ulong> lhs, byref Vec256<ulong> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: call Z0.Vec256`1<System.SByte> Z0.dinx::and(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec256`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0061: call Z0.Vec256`1<System.Byte> Z0.dinx::and(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec256`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_009B: call Z0.Vec256`1<System.Int16> Z0.dinx::and(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec256`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00D5: call Z0.Vec256`1<System.UInt16> Z0.dinx::and(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec256`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_010F: call Z0.Vec256`1<System.Int32> Z0.dinx::and(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec256`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_014A: call Z0.Vec256`1<System.UInt32> Z0.dinx::and(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec256`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0185: call Z0.Vec256`1<System.Int64> Z0.dinx::and(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec256`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01C0: call Z0.Vec256`1<System.UInt64> Z0.dinx::and(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec256`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01FB: call Z0.Vec256`1<System.Single> Z0.dinx::and(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Single>&)
    IL_0209: ldobj Z0.Vec256`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0236: call Z0.Vec256`1<System.Double> Z0.dinx::and(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Double>&)
    IL_0244: ldobj Z0.Vec256`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\and.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\and.cs"
    IL_0254: ldc.i4.s 83
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec256<sbyte> and<sbyte>(byref Vec256<sbyte> lhs, byref Vec256<sbyte> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: call Z0.Vec256`1<System.SByte> Z0.dinx::and(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec256`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0061: call Z0.Vec256`1<System.Byte> Z0.dinx::and(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec256`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_009B: call Z0.Vec256`1<System.Int16> Z0.dinx::and(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec256`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00D5: call Z0.Vec256`1<System.UInt16> Z0.dinx::and(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec256`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_010F: call Z0.Vec256`1<System.Int32> Z0.dinx::and(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec256`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_014A: call Z0.Vec256`1<System.UInt32> Z0.dinx::and(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec256`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0185: call Z0.Vec256`1<System.Int64> Z0.dinx::and(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec256`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01C0: call Z0.Vec256`1<System.UInt64> Z0.dinx::and(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec256`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01FB: call Z0.Vec256`1<System.Single> Z0.dinx::and(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Single>&)
    IL_0209: ldobj Z0.Vec256`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0236: call Z0.Vec256`1<System.Double> Z0.dinx::and(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Double>&)
    IL_0244: ldobj Z0.Vec256`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\and.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\and.cs"
    IL_0254: ldc.i4.s 83
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec256<short> and<short>(byref Vec256<short> lhs, byref Vec256<short> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: call Z0.Vec256`1<System.SByte> Z0.dinx::and(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec256`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0061: call Z0.Vec256`1<System.Byte> Z0.dinx::and(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec256`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_009B: call Z0.Vec256`1<System.Int16> Z0.dinx::and(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec256`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00D5: call Z0.Vec256`1<System.UInt16> Z0.dinx::and(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec256`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_010F: call Z0.Vec256`1<System.Int32> Z0.dinx::and(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec256`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_014A: call Z0.Vec256`1<System.UInt32> Z0.dinx::and(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec256`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0185: call Z0.Vec256`1<System.Int64> Z0.dinx::and(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec256`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01C0: call Z0.Vec256`1<System.UInt64> Z0.dinx::and(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec256`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01FB: call Z0.Vec256`1<System.Single> Z0.dinx::and(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Single>&)
    IL_0209: ldobj Z0.Vec256`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0236: call Z0.Vec256`1<System.Double> Z0.dinx::and(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Double>&)
    IL_0244: ldobj Z0.Vec256`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\and.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\and.cs"
    IL_0254: ldc.i4.s 83
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec256<int> and<int>(byref Vec256<int> lhs, byref Vec256<int> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: call Z0.Vec256`1<System.SByte> Z0.dinx::and(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec256`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0061: call Z0.Vec256`1<System.Byte> Z0.dinx::and(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec256`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_009B: call Z0.Vec256`1<System.Int16> Z0.dinx::and(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec256`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00D5: call Z0.Vec256`1<System.UInt16> Z0.dinx::and(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec256`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_010F: call Z0.Vec256`1<System.Int32> Z0.dinx::and(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec256`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_014A: call Z0.Vec256`1<System.UInt32> Z0.dinx::and(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec256`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0185: call Z0.Vec256`1<System.Int64> Z0.dinx::and(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec256`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01C0: call Z0.Vec256`1<System.UInt64> Z0.dinx::and(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec256`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01FB: call Z0.Vec256`1<System.Single> Z0.dinx::and(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Single>&)
    IL_0209: ldobj Z0.Vec256`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0236: call Z0.Vec256`1<System.Double> Z0.dinx::and(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Double>&)
    IL_0244: ldobj Z0.Vec256`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\and.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\and.cs"
    IL_0254: ldc.i4.s 83
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec256<long> and<long>(byref Vec256<long> lhs, byref Vec256<long> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: call Z0.Vec256`1<System.SByte> Z0.dinx::and(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec256`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0061: call Z0.Vec256`1<System.Byte> Z0.dinx::and(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec256`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_009B: call Z0.Vec256`1<System.Int16> Z0.dinx::and(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec256`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00D5: call Z0.Vec256`1<System.UInt16> Z0.dinx::and(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec256`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_010F: call Z0.Vec256`1<System.Int32> Z0.dinx::and(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec256`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_014A: call Z0.Vec256`1<System.UInt32> Z0.dinx::and(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec256`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0185: call Z0.Vec256`1<System.Int64> Z0.dinx::and(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec256`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01C0: call Z0.Vec256`1<System.UInt64> Z0.dinx::and(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec256`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01FB: call Z0.Vec256`1<System.Single> Z0.dinx::and(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Single>&)
    IL_0209: ldobj Z0.Vec256`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0236: call Z0.Vec256`1<System.Double> Z0.dinx::and(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Double>&)
    IL_0244: ldobj Z0.Vec256`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\and.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\and.cs"
    IL_0254: ldc.i4.s 83
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec256<float> and<float>(byref Vec256<float> lhs, byref Vec256<float> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: call Z0.Vec256`1<System.SByte> Z0.dinx::and(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec256`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0061: call Z0.Vec256`1<System.Byte> Z0.dinx::and(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec256`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_009B: call Z0.Vec256`1<System.Int16> Z0.dinx::and(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec256`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00D5: call Z0.Vec256`1<System.UInt16> Z0.dinx::and(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec256`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_010F: call Z0.Vec256`1<System.Int32> Z0.dinx::and(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec256`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_014A: call Z0.Vec256`1<System.UInt32> Z0.dinx::and(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec256`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0185: call Z0.Vec256`1<System.Int64> Z0.dinx::and(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec256`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01C0: call Z0.Vec256`1<System.UInt64> Z0.dinx::and(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec256`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01FB: call Z0.Vec256`1<System.Single> Z0.dinx::and(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Single>&)
    IL_0209: ldobj Z0.Vec256`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0236: call Z0.Vec256`1<System.Double> Z0.dinx::and(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Double>&)
    IL_0244: ldobj Z0.Vec256`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\and.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\and.cs"
    IL_0254: ldc.i4.s 83
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
Vec256<double> and<double>(byref Vec256<double> lhs, byref Vec256<double> rhs)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_003A
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: call Z0.Vec256`1<System.SByte> Z0.dinx::and(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&)
    IL_002C: stloc.0
    IL_002D: ldloca.s V_0
    IL_002F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.SByte>&)
    IL_0034: ldobj Z0.Vec256`1<T>
    IL_0039: ret
    IL_003A: ldtoken T
    IL_003F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0044: ldtoken System.Byte
    IL_0049: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_004E: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0053: brfalse.s IL_0074
    IL_0055: ldarg.0
    IL_0056: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005B: ldarg.1
    IL_005C: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0061: call Z0.Vec256`1<System.Byte> Z0.dinx::and(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&)
    IL_0066: stloc.1
    IL_0067: ldloca.s V_1
    IL_0069: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Byte>&)
    IL_006E: ldobj Z0.Vec256`1<T>
    IL_0073: ret
    IL_0074: ldtoken T
    IL_0079: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007E: ldtoken System.Int16
    IL_0083: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0088: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_008D: brfalse.s IL_00AE
    IL_008F: ldarg.0
    IL_0090: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0095: ldarg.1
    IL_0096: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_009B: call Z0.Vec256`1<System.Int16> Z0.dinx::and(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&)
    IL_00A0: stloc.2
    IL_00A1: ldloca.s V_2
    IL_00A3: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int16>&)
    IL_00A8: ldobj Z0.Vec256`1<T>
    IL_00AD: ret
    IL_00AE: ldtoken T
    IL_00B3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00B8: ldtoken System.UInt16
    IL_00BD: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00C2: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00C7: brfalse.s IL_00E8
    IL_00C9: ldarg.0
    IL_00CA: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00CF: ldarg.1
    IL_00D0: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00D5: call Z0.Vec256`1<System.UInt16> Z0.dinx::and(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&)
    IL_00DA: stloc.3
    IL_00DB: ldloca.s V_3
    IL_00DD: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt16>&)
    IL_00E2: ldobj Z0.Vec256`1<T>
    IL_00E7: ret
    IL_00E8: ldtoken T
    IL_00ED: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00F2: ldtoken System.Int32
    IL_00F7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00FC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0101: brfalse.s IL_0123
    IL_0103: ldarg.0
    IL_0104: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_0109: ldarg.1
    IL_010A: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_010F: call Z0.Vec256`1<System.Int32> Z0.dinx::and(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&)
    IL_0114: stloc.s V_4
    IL_0116: ldloca.s V_4
    IL_0118: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int32>&)
    IL_011D: ldobj Z0.Vec256`1<T>
    IL_0122: ret
    IL_0123: ldtoken T
    IL_0128: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_012D: ldtoken System.UInt32
    IL_0132: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0137: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_013C: brfalse.s IL_015E
    IL_013E: ldarg.0
    IL_013F: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0144: ldarg.1
    IL_0145: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_014A: call Z0.Vec256`1<System.UInt32> Z0.dinx::and(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&)
    IL_014F: stloc.s V_5
    IL_0151: ldloca.s V_5
    IL_0153: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt32>&)
    IL_0158: ldobj Z0.Vec256`1<T>
    IL_015D: ret
    IL_015E: ldtoken T
    IL_0163: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0168: ldtoken System.Int64
    IL_016D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0172: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0177: brfalse.s IL_0199
    IL_0179: ldarg.0
    IL_017A: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_017F: ldarg.1
    IL_0180: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0185: call Z0.Vec256`1<System.Int64> Z0.dinx::and(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&)
    IL_018A: stloc.s V_6
    IL_018C: ldloca.s V_6
    IL_018E: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Int64>&)
    IL_0193: ldobj Z0.Vec256`1<T>
    IL_0198: ret
    IL_0199: ldtoken T
    IL_019E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A3: ldtoken System.UInt64
    IL_01A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B2: brfalse.s IL_01D4
    IL_01B4: ldarg.0
    IL_01B5: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01BA: ldarg.1
    IL_01BB: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_01C0: call Z0.Vec256`1<System.UInt64> Z0.dinx::and(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&)
    IL_01C5: stloc.s V_7
    IL_01C7: ldloca.s V_7
    IL_01C9: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.UInt64>&)
    IL_01CE: ldobj Z0.Vec256`1<T>
    IL_01D3: ret
    IL_01D4: ldtoken T
    IL_01D9: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DE: ldtoken System.Single
    IL_01E3: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01E8: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01ED: brfalse.s IL_020F
    IL_01EF: ldarg.0
    IL_01F0: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01F5: ldarg.1
    IL_01F6: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01FB: call Z0.Vec256`1<System.Single> Z0.dinx::and(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&)
    IL_0200: stloc.s V_8
    IL_0202: ldloca.s V_8
    IL_0204: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Single>&)
    IL_0209: ldobj Z0.Vec256`1<T>
    IL_020E: ret
    IL_020F: ldtoken T
    IL_0214: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0219: ldtoken System.Double
    IL_021E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0223: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0228: brfalse.s IL_024A
    IL_022A: ldarg.0
    IL_022B: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0230: ldarg.1
    IL_0231: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_0236: call Z0.Vec256`1<System.Double> Z0.dinx::and(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&)
    IL_023B: stloc.s V_9
    IL_023D: ldloca.s V_9
    IL_023F: call Z0.Vec256`1<T>& Z0.AsInX::generic<T>(Z0.Vec256`1<System.Double>&)
    IL_0244: ldobj Z0.Vec256`1<T>
    IL_0249: ret
    IL_024A: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\and.cs"
    IL_024F: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\and.cs"
    IL_0254: ldc.i4.s 83
    IL_0256: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_025B: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0260: throw

}
void and<byte>(byref Vec128<byte> lhs, byref Vec128<byte> rhs, byref Byte dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::and(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::and(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::and(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::and(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::and(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::and(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::and(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::and(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::and(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::and(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\and.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\and.cs"
    IL_0208: ldc.i4.s 118
    IL_020A: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_020F: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0214: throw

}
void and<ushort>(byref Vec128<ushort> lhs, byref Vec128<ushort> rhs, byref UInt16 dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::and(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::and(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::and(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::and(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::and(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::and(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::and(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::and(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::and(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::and(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\and.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\and.cs"
    IL_0208: ldc.i4.s 118
    IL_020A: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_020F: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0214: throw

}
void and<uint>(byref Vec128<uint> lhs, byref Vec128<uint> rhs, byref UInt32 dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::and(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::and(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::and(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::and(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::and(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::and(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::and(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::and(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::and(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::and(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\and.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\and.cs"
    IL_0208: ldc.i4.s 118
    IL_020A: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_020F: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0214: throw

}
void and<ulong>(byref Vec128<ulong> lhs, byref Vec128<ulong> rhs, byref UInt64 dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::and(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::and(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::and(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::and(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::and(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::and(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::and(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::and(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::and(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::and(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\and.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\and.cs"
    IL_0208: ldc.i4.s 118
    IL_020A: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_020F: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0214: throw

}
void and<sbyte>(byref Vec128<sbyte> lhs, byref Vec128<sbyte> rhs, byref SByte dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::and(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::and(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::and(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::and(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::and(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::and(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::and(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::and(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::and(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::and(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\and.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\and.cs"
    IL_0208: ldc.i4.s 118
    IL_020A: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_020F: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0214: throw

}
void and<short>(byref Vec128<short> lhs, byref Vec128<short> rhs, byref Int16 dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::and(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::and(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::and(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::and(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::and(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::and(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::and(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::and(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::and(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::and(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\and.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\and.cs"
    IL_0208: ldc.i4.s 118
    IL_020A: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_020F: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0214: throw

}
void and<int>(byref Vec128<int> lhs, byref Vec128<int> rhs, byref Int32 dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::and(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::and(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::and(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::and(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::and(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::and(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::and(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::and(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::and(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::and(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\and.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\and.cs"
    IL_0208: ldc.i4.s 118
    IL_020A: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_020F: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0214: throw

}
void and<long>(byref Vec128<long> lhs, byref Vec128<long> rhs, byref Int64 dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::and(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::and(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::and(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::and(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::and(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::and(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::and(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::and(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::and(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::and(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\and.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\and.cs"
    IL_0208: ldc.i4.s 118
    IL_020A: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_020F: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0214: throw

}
void and<float>(byref Vec128<float> lhs, byref Vec128<float> rhs, byref Single dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::and(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::and(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::and(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::and(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::and(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::and(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::and(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::and(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::and(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::and(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\and.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\and.cs"
    IL_0208: ldc.i4.s 118
    IL_020A: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_020F: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0214: throw

}
void and<double>(byref Vec128<double> lhs, byref Vec128<double> rhs, byref Double dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec128`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec128`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::and(Z0.Vec128`1<System.SByte>&,Z0.Vec128`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec128`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec128`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::and(Z0.Vec128`1<System.Byte>&,Z0.Vec128`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec128`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec128`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::and(Z0.Vec128`1<System.Int16>&,Z0.Vec128`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec128`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec128`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::and(Z0.Vec128`1<System.UInt16>&,Z0.Vec128`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec128`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec128`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::and(Z0.Vec128`1<System.Int32>&,Z0.Vec128`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec128`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec128`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::and(Z0.Vec128`1<System.UInt32>&,Z0.Vec128`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec128`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec128`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::and(Z0.Vec128`1<System.Int64>&,Z0.Vec128`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec128`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec128`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::and(Z0.Vec128`1<System.UInt64>&,Z0.Vec128`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec128`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec128`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::and(Z0.Vec128`1<System.Single>&,Z0.Vec128`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec128`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec128`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::and(Z0.Vec128`1<System.Double>&,Z0.Vec128`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\and.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\and.cs"
    IL_0208: ldc.i4.s 118
    IL_020A: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_020F: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0214: throw

}
void and<byte>(byref Vec256<byte> lhs, byref Vec256<byte> rhs, byref Byte dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::and(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::and(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::and(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::and(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::and(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::and(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::and(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::and(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::and(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::and(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\and.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\and.cs"
    IL_0208: ldc.i4 153
    IL_020D: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_0212: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0217: throw

}
void and<ushort>(byref Vec256<ushort> lhs, byref Vec256<ushort> rhs, byref UInt16 dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::and(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::and(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::and(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::and(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::and(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::and(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::and(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::and(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::and(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::and(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\and.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\and.cs"
    IL_0208: ldc.i4 153
    IL_020D: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_0212: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0217: throw

}
void and<uint>(byref Vec256<uint> lhs, byref Vec256<uint> rhs, byref UInt32 dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::and(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::and(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::and(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::and(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::and(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::and(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::and(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::and(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::and(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::and(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\and.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\and.cs"
    IL_0208: ldc.i4 153
    IL_020D: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_0212: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0217: throw

}
void and<ulong>(byref Vec256<ulong> lhs, byref Vec256<ulong> rhs, byref UInt64 dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::and(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::and(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::and(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::and(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::and(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::and(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::and(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::and(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::and(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::and(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\and.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\and.cs"
    IL_0208: ldc.i4 153
    IL_020D: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_0212: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0217: throw

}
void and<sbyte>(byref Vec256<sbyte> lhs, byref Vec256<sbyte> rhs, byref SByte dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::and(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::and(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::and(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::and(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::and(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::and(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::and(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::and(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::and(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::and(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\and.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\and.cs"
    IL_0208: ldc.i4 153
    IL_020D: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_0212: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0217: throw

}
void and<short>(byref Vec256<short> lhs, byref Vec256<short> rhs, byref Int16 dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::and(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::and(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::and(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::and(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::and(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::and(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::and(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::and(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::and(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::and(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\and.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\and.cs"
    IL_0208: ldc.i4 153
    IL_020D: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_0212: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0217: throw

}
void and<int>(byref Vec256<int> lhs, byref Vec256<int> rhs, byref Int32 dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::and(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::and(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::and(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::and(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::and(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::and(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::and(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::and(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::and(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::and(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\and.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\and.cs"
    IL_0208: ldc.i4 153
    IL_020D: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_0212: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0217: throw

}
void and<long>(byref Vec256<long> lhs, byref Vec256<long> rhs, byref Int64 dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::and(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::and(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::and(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::and(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::and(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::and(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::and(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::and(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::and(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::and(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\and.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\and.cs"
    IL_0208: ldc.i4 153
    IL_020D: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_0212: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0217: throw

}
void and<float>(byref Vec256<float> lhs, byref Vec256<float> rhs, byref Single dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::and(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::and(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::and(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::and(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::and(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::and(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::and(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::and(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::and(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::and(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\and.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\and.cs"
    IL_0208: ldc.i4 153
    IL_020D: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_0212: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0217: throw

}
void and<double>(byref Vec256<double> lhs, byref Vec256<double> rhs, byref Double dst)
{
    IL_0000: ldtoken T
    IL_0005: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_000A: ldtoken System.SByte
    IL_000F: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0014: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0019: brfalse.s IL_0033
    IL_001B: ldarg.0
    IL_001C: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0021: ldarg.1
    IL_0022: call Z0.Vec256`1<System.SByte>& Z0.AsInX::int8<T>(Z0.Vec256`1<T>&)
    IL_0027: ldarg.2
    IL_0028: call System.SByte& Z0.As::int8<T>(T&)
    IL_002D: call System.Void Z0.dinx::and(Z0.Vec256`1<System.SByte>&,Z0.Vec256`1<System.SByte>&,System.SByte&)
    IL_0032: ret
    IL_0033: ldtoken T
    IL_0038: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_003D: ldtoken System.Byte
    IL_0042: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0047: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_004C: brfalse.s IL_0066
    IL_004E: ldarg.0
    IL_004F: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_0054: ldarg.1
    IL_0055: call Z0.Vec256`1<System.Byte>& Z0.AsInX::uint8<T>(Z0.Vec256`1<T>&)
    IL_005A: ldarg.2
    IL_005B: call System.Byte& Z0.As::uint8<T>(T&)
    IL_0060: call System.Void Z0.dinx::and(Z0.Vec256`1<System.Byte>&,Z0.Vec256`1<System.Byte>&,System.Byte&)
    IL_0065: ret
    IL_0066: ldtoken T
    IL_006B: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0070: ldtoken System.Int16
    IL_0075: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_007A: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_007F: brfalse.s IL_0099
    IL_0081: ldarg.0
    IL_0082: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_0087: ldarg.1
    IL_0088: call Z0.Vec256`1<System.Int16>& Z0.AsInX::int16<T>(Z0.Vec256`1<T>&)
    IL_008D: ldarg.2
    IL_008E: call System.Int16& Z0.As::int16<T>(T&)
    IL_0093: call System.Void Z0.dinx::and(Z0.Vec256`1<System.Int16>&,Z0.Vec256`1<System.Int16>&,System.Int16&)
    IL_0098: ret
    IL_0099: ldtoken T
    IL_009E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00A3: ldtoken System.UInt16
    IL_00A8: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00AD: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00B2: brfalse.s IL_00CC
    IL_00B4: ldarg.0
    IL_00B5: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00BA: ldarg.1
    IL_00BB: call Z0.Vec256`1<System.UInt16>& Z0.AsInX::uint16<T>(Z0.Vec256`1<T>&)
    IL_00C0: ldarg.2
    IL_00C1: call System.UInt16& Z0.As::uint16<T>(T&)
    IL_00C6: call System.Void Z0.dinx::and(Z0.Vec256`1<System.UInt16>&,Z0.Vec256`1<System.UInt16>&,System.UInt16&)
    IL_00CB: ret
    IL_00CC: ldtoken T
    IL_00D1: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00D6: ldtoken System.Int32
    IL_00DB: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_00E0: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_00E5: brfalse.s IL_00FF
    IL_00E7: ldarg.0
    IL_00E8: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00ED: ldarg.1
    IL_00EE: call Z0.Vec256`1<System.Int32>& Z0.AsInX::int32<T>(Z0.Vec256`1<T>&)
    IL_00F3: ldarg.2
    IL_00F4: call System.Int32& Z0.As::int32<T>(T&)
    IL_00F9: call System.Void Z0.dinx::and(Z0.Vec256`1<System.Int32>&,Z0.Vec256`1<System.Int32>&,System.Int32&)
    IL_00FE: ret
    IL_00FF: ldtoken T
    IL_0104: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0109: ldtoken System.UInt32
    IL_010E: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0113: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_0118: brfalse.s IL_0132
    IL_011A: ldarg.0
    IL_011B: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0120: ldarg.1
    IL_0121: call Z0.Vec256`1<System.UInt32>& Z0.AsInX::uint32<T>(Z0.Vec256`1<T>&)
    IL_0126: ldarg.2
    IL_0127: call System.UInt32& Z0.As::uint32<T>(T&)
    IL_012C: call System.Void Z0.dinx::and(Z0.Vec256`1<System.UInt32>&,Z0.Vec256`1<System.UInt32>&,System.UInt32&)
    IL_0131: ret
    IL_0132: ldtoken T
    IL_0137: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_013C: ldtoken System.Int64
    IL_0141: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0146: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_014B: brfalse.s IL_0165
    IL_014D: ldarg.0
    IL_014E: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0153: ldarg.1
    IL_0154: call Z0.Vec256`1<System.Int64>& Z0.AsInX::int64<T>(Z0.Vec256`1<T>&)
    IL_0159: ldarg.2
    IL_015A: call System.Int64& Z0.As::int64<T>(T&)
    IL_015F: call System.Void Z0.dinx::and(Z0.Vec256`1<System.Int64>&,Z0.Vec256`1<System.Int64>&,System.Int64&)
    IL_0164: ret
    IL_0165: ldtoken T
    IL_016A: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_016F: ldtoken System.UInt64
    IL_0174: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_0179: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_017E: brfalse.s IL_0198
    IL_0180: ldarg.0
    IL_0181: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_0186: ldarg.1
    IL_0187: call Z0.Vec256`1<System.UInt64>& Z0.AsInX::uint64<T>(Z0.Vec256`1<T>&)
    IL_018C: ldarg.2
    IL_018D: call System.UInt64& Z0.As::uint64<T>(T&)
    IL_0192: call System.Void Z0.dinx::and(Z0.Vec256`1<System.UInt64>&,Z0.Vec256`1<System.UInt64>&,System.UInt64&)
    IL_0197: ret
    IL_0198: ldtoken T
    IL_019D: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01A2: ldtoken System.Single
    IL_01A7: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01AC: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01B1: brfalse.s IL_01CB
    IL_01B3: ldarg.0
    IL_01B4: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01B9: ldarg.1
    IL_01BA: call Z0.Vec256`1<System.Single>& Z0.AsInX::float32<T>(Z0.Vec256`1<T>&)
    IL_01BF: ldarg.2
    IL_01C0: call System.Single& Z0.As::float32<T>(T&)
    IL_01C5: call System.Void Z0.dinx::and(Z0.Vec256`1<System.Single>&,Z0.Vec256`1<System.Single>&,System.Single&)
    IL_01CA: ret
    IL_01CB: ldtoken T
    IL_01D0: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01D5: ldtoken System.Double
    IL_01DA: call System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
    IL_01DF: call System.Boolean System.Type::op_Equality(System.Type,System.Type)
    IL_01E4: brfalse.s IL_01FE
    IL_01E6: ldarg.0
    IL_01E7: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_01EC: ldarg.1
    IL_01ED: call Z0.Vec256`1<System.Double>& Z0.AsInX::float64<T>(Z0.Vec256`1<T>&)
    IL_01F2: ldarg.2
    IL_01F3: call System.Double& Z0.As::float64<T>(T&)
    IL_01F8: call System.Void Z0.dinx::and(Z0.Vec256`1<System.Double>&,Z0.Vec256`1<System.Double>&,System.Double&)
    IL_01FD: ret
    IL_01FE: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\and.cs"
    IL_0203: ldstr "J:\\dev\\projects\\z0\\inx\\generic\\bitwise\\and.cs"
    IL_0208: ldc.i4 153
    IL_020D: newobj System.Void System.Nullable`1<System.Int32>::.ctor(System.Int32)
    IL_0212: call Z0.AppException zfunc::unsupported<T>(System.String,System.String,System.Nullable`1<System.Int32>)
    IL_0217: throw

}
