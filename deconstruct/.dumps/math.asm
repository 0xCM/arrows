; 2019-09-20 23:12:22:683
; function: Span<long> xor(Span<long> lhs, ReadOnlySpan<long> rhs)
; location: [7FFC7C08E7D0h, 7FFC7C08E893h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0014h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0017h mov esi,131h                  ; MOV(Mov_r32_imm32) [ESI,131h:imm32]                  encoding(5 bytes) = be 31 01 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
0023h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0026h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0029h jne short 0065h               ; JNE(Jne_rel8_64) [65h:jmp64]                         encoding(2 bytes) = 75 3a
002bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
002eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0030h jle short 0051h               ; JLE(Jle_rel8_64) [51h:jmp64]                         encoding(2 bytes) = 7e 1f
0032h movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
0035h lea rbx,[r9+r11*8]            ; LEA(Lea_r64_m) [RBX,mem(Unknown,R9:br,DS:sr)]        encoding(4 bytes) = 4b 8d 1c d9
0039h cmp r10d,r8d                  ; CMP(Cmp_r32_rm32) [R10D,R8D]                         encoding(3 bytes) = 45 3b d0
003ch jae near ptr 00beh            ; JAE(Jae_rel32_64) [BEh:jmp64]                        encoding(6 bytes) = 0f 83 7c 00 00 00
0042h mov r11,[rax+r11*8]           ; MOV(Mov_r64_rm64) [R11,mem(64u,RAX:br,DS:sr)]        encoding(4 bytes) = 4e 8b 1c d8
0046h xor [rbx],r11                 ; XOR(Xor_rm64_r64) [mem(64u,RBX:br,DS:sr),R11]        encoding(3 bytes) = 4c 31 1b
0049h inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
004ch cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
004fh jl short 0032h                ; JL(Jl_rel8_64) [32h:jmp64]                           encoding(2 bytes) = 7c e1
0051h mov [rcx],r9                  ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R9]         encoding(3 bytes) = 4c 89 09
0054h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
0057h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
005ah add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
005eh pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
005fh pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0060h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0061h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0062h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0064h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0065h mov ecx,0EEFh                 ; MOV(Mov_r32_imm32) [ECX,eefh:imm32]                  encoding(5 bytes) = b9 ef 0e 00 00
006ah mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
0074h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC45650h:jmp64]                encoding(5 bytes) = e8 d7 55 c4 5f
0079h mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
007ch mov ecx,0EF7h                 ; MOV(Mov_r32_imm32) [ECX,ef7h:imm32]                  encoding(5 bytes) = b9 f7 0e 00 00
0081h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
008bh call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC45650h:jmp64]                encoding(5 bytes) = e8 c0 55 c4 5f
0090h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
0093h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
0098h mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
009bh mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
009fh mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00a2h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00a4h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00a6h mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00abh mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b0h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFF848h:jmp64]        encoding(5 bytes) = e8 93 f7 ff ff
00b5h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00b8h call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAFB0C0h:jmp64]                encoding(5 bytes) = e8 03 b0 af 5f
00bdh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00beh call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC44E70h:jmp64]                encoding(5 bytes) = e8 ad 4d c4 5f
00c3h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> xorBytes => new byte[196]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x00,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0xBE,0x31,0x01,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x3A,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x1F,0x4D,0x63,0xDA,0x4B,0x8D,0x1C,0xD9,0x45,0x3B,0xD0,0x0F,0x83,0x7C,0x00,0x00,0x00,0x4E,0x8B,0x1C,0xD8,0x4C,0x31,0x1B,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xE1,0x4C,0x89,0x09,0x89,0x51,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0xEF,0x0E,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xD7,0x55,0xC4,0x5F,0x4C,0x8B,0xF0,0xB9,0xF7,0x0E,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xC0,0x55,0xC4,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x93,0xF7,0xFF,0xFF,0x48,0x8B,0xC8,0xE8,0x03,0xB0,0xAF,0x5F,0xCC,0xE8,0xAD,0x4D,0xC4,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<ulong> xor(Span<ulong> lhs, ReadOnlySpan<ulong> rhs)
; location: [7FFC7C08E8B0h, 7FFC7C08E973h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0014h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0017h mov esi,139h                  ; MOV(Mov_r32_imm32) [ESI,139h:imm32]                  encoding(5 bytes) = be 39 01 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
0023h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0026h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0029h jne short 0065h               ; JNE(Jne_rel8_64) [65h:jmp64]                         encoding(2 bytes) = 75 3a
002bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
002eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0030h jle short 0051h               ; JLE(Jle_rel8_64) [51h:jmp64]                         encoding(2 bytes) = 7e 1f
0032h movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
0035h lea rbx,[r9+r11*8]            ; LEA(Lea_r64_m) [RBX,mem(Unknown,R9:br,DS:sr)]        encoding(4 bytes) = 4b 8d 1c d9
0039h cmp r10d,r8d                  ; CMP(Cmp_r32_rm32) [R10D,R8D]                         encoding(3 bytes) = 45 3b d0
003ch jae near ptr 00beh            ; JAE(Jae_rel32_64) [BEh:jmp64]                        encoding(6 bytes) = 0f 83 7c 00 00 00
0042h mov r11,[rax+r11*8]           ; MOV(Mov_r64_rm64) [R11,mem(64u,RAX:br,DS:sr)]        encoding(4 bytes) = 4e 8b 1c d8
0046h xor [rbx],r11                 ; XOR(Xor_rm64_r64) [mem(64u,RBX:br,DS:sr),R11]        encoding(3 bytes) = 4c 31 1b
0049h inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
004ch cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
004fh jl short 0032h                ; JL(Jl_rel8_64) [32h:jmp64]                           encoding(2 bytes) = 7c e1
0051h mov [rcx],r9                  ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R9]         encoding(3 bytes) = 4c 89 09
0054h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
0057h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
005ah add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
005eh pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
005fh pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0060h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0061h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0062h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0064h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0065h mov ecx,0EEFh                 ; MOV(Mov_r32_imm32) [ECX,eefh:imm32]                  encoding(5 bytes) = b9 ef 0e 00 00
006ah mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
0074h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC45570h:jmp64]                encoding(5 bytes) = e8 f7 54 c4 5f
0079h mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
007ch mov ecx,0EF7h                 ; MOV(Mov_r32_imm32) [ECX,ef7h:imm32]                  encoding(5 bytes) = b9 f7 0e 00 00
0081h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
008bh call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC45570h:jmp64]                encoding(5 bytes) = e8 e0 54 c4 5f
0090h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
0093h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
0098h mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
009bh mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
009fh mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00a2h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00a4h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00a6h mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00abh mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b0h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFF768h:jmp64]        encoding(5 bytes) = e8 b3 f6 ff ff
00b5h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00b8h call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAFAFE0h:jmp64]                encoding(5 bytes) = e8 23 af af 5f
00bdh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00beh call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC44D90h:jmp64]                encoding(5 bytes) = e8 cd 4c c4 5f
00c3h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> xorBytes => new byte[196]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x00,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0xBE,0x39,0x01,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x3A,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x1F,0x4D,0x63,0xDA,0x4B,0x8D,0x1C,0xD9,0x45,0x3B,0xD0,0x0F,0x83,0x7C,0x00,0x00,0x00,0x4E,0x8B,0x1C,0xD8,0x4C,0x31,0x1B,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xE1,0x4C,0x89,0x09,0x89,0x51,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0xEF,0x0E,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xF7,0x54,0xC4,0x5F,0x4C,0x8B,0xF0,0xB9,0xF7,0x0E,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xE0,0x54,0xC4,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0xB3,0xF6,0xFF,0xFF,0x48,0x8B,0xC8,0xE8,0x23,0xAF,0xAF,0x5F,0xCC,0xE8,0xCD,0x4C,0xC4,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<byte> xor(ReadOnlySpan<byte> lhs, ReadOnlySpan<byte> rhs, Span<byte> dst)
; location: [7FFC7C08F2A0h, 7FFC7C08F379h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000dh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
0011h mov r10,[r8]                  ; MOV(Mov_r64_rm64) [R10,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 4d 8b 10
0014h mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0018h mov r11,[rdx]                 ; MOV(Mov_r64_rm64) [R11,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 1a
001bh mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
001eh mov esi,14Ah                  ; MOV(Mov_r32_imm32) [ESI,14ah:imm32]                  encoding(5 bytes) = be 4a 01 00 00
0023h mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0028h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
002ah mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
002dh cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0030h jne short 007bh               ; JNE(Jne_rel8_64) [7Bh:jmp64]                         encoding(2 bytes) = 75 49
0032h xor ebx,ebx                   ; XOR(Xor_r32_rm32) [EBX,EBX]                          encoding(2 bytes) = 33 db
0034h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0036h jle short 0066h               ; JLE(Jle_rel8_64) [66h:jmp64]                         encoding(2 bytes) = 7e 2e
0038h cmp ebx,r9d                   ; CMP(Cmp_r32_rm32) [EBX,R9D]                          encoding(3 bytes) = 41 3b d9
003bh jae near ptr 00d4h            ; JAE(Jae_rel32_64) [D4h:jmp64]                        encoding(6 bytes) = 0f 83 93 00 00 00
0041h movsxd rbp,ebx                ; MOVSXD(Movsxd_r64_rm32) [RBP,EBX]                    encoding(3 bytes) = 48 63 eb
0044h lea rdi,[rax+rbp]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 28
0048h movzx esi,byte ptr [r11+rbp]  ; MOVZX(Movzx_r32_rm8) [ESI,mem(8u,R11:br,DS:sr)]      encoding(5 bytes) = 41 0f b6 34 2b
004dh cmp ebx,r8d                   ; CMP(Cmp_r32_rm32) [EBX,R8D]                          encoding(3 bytes) = 41 3b d8
0050h jae near ptr 00d4h            ; JAE(Jae_rel32_64) [D4h:jmp64]                        encoding(6 bytes) = 0f 83 7e 00 00 00
0056h movzx ebp,byte ptr [r10+rbp]  ; MOVZX(Movzx_r32_rm8) [EBP,mem(8u,R10:br,DS:sr)]      encoding(5 bytes) = 41 0f b6 2c 2a
005bh xor esi,ebp                   ; XOR(Xor_r32_rm32) [ESI,EBP]                          encoding(2 bytes) = 33 f5
005dh mov [rdi],sil                 ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),SIL]           encoding(3 bytes) = 40 88 37
0060h inc ebx                       ; INC(Inc_rm32) [EBX]                                  encoding(2 bytes) = ff c3
0062h cmp ebx,edx                   ; CMP(Cmp_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 3b da
0064h jl short 0038h                ; JL(Jl_rel8_64) [38h:jmp64]                           encoding(2 bytes) = 7c d2
0066h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0069h mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
006dh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0070h add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0074h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0075h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0076h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0077h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0078h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
007ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
007bh mov ecx,0EEFh                 ; MOV(Mov_r32_imm32) [ECX,eefh:imm32]                  encoding(5 bytes) = b9 ef 0e 00 00
0080h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
008ah call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC44B80h:jmp64]                encoding(5 bytes) = e8 f1 4a c4 5f
008fh mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0092h mov ecx,0EF7h                 ; MOV(Mov_r32_imm32) [ECX,ef7h:imm32]                  encoding(5 bytes) = b9 f7 0e 00 00
0097h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
00a1h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC44B80h:jmp64]                encoding(5 bytes) = e8 da 4a c4 5f
00a6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00a9h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
00aeh mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00b1h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00b5h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00b8h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00bah mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00bch mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00c1h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00c6h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFED78h:jmp64]        encoding(5 bytes) = e8 ad ec ff ff
00cbh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00ceh call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAFA5F0h:jmp64]                encoding(5 bytes) = e8 1d a5 af 5f
00d3h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00d4h call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC443A0h:jmp64]                encoding(5 bytes) = e8 c7 42 c4 5f
00d9h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> xorBytes => new byte[218]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4D,0x8B,0x10,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x1A,0x8B,0x52,0x08,0xBE,0x4A,0x01,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x49,0x33,0xDB,0x85,0xD2,0x7E,0x2E,0x41,0x3B,0xD9,0x0F,0x83,0x93,0x00,0x00,0x00,0x48,0x63,0xEB,0x48,0x8D,0x3C,0x28,0x41,0x0F,0xB6,0x34,0x2B,0x41,0x3B,0xD8,0x0F,0x83,0x7E,0x00,0x00,0x00,0x41,0x0F,0xB6,0x2C,0x2A,0x33,0xF5,0x40,0x88,0x37,0xFF,0xC3,0x3B,0xDA,0x7C,0xD2,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0xEF,0x0E,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xF1,0x4A,0xC4,0x5F,0x4C,0x8B,0xF0,0xB9,0xF7,0x0E,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xDA,0x4A,0xC4,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0xAD,0xEC,0xFF,0xFF,0x48,0x8B,0xC8,0xE8,0x1D,0xA5,0xAF,0x5F,0xCC,0xE8,0xC7,0x42,0xC4,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<short> xor(ReadOnlySpan<short> lhs, ReadOnlySpan<short> rhs, Span<short> dst)
; location: [7FFC7C08F3A0h, 7FFC7C08F479h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000dh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
0011h mov r10,[r8]                  ; MOV(Mov_r64_rm64) [R10,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 4d 8b 10
0014h mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0018h mov r11,[rdx]                 ; MOV(Mov_r64_rm64) [R11,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 1a
001bh mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
001eh mov esi,152h                  ; MOV(Mov_r32_imm32) [ESI,152h:imm32]                  encoding(5 bytes) = be 52 01 00 00
0023h mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0028h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
002ah mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
002dh cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0030h jne short 007bh               ; JNE(Jne_rel8_64) [7Bh:jmp64]                         encoding(2 bytes) = 75 49
0032h xor ebx,ebx                   ; XOR(Xor_r32_rm32) [EBX,EBX]                          encoding(2 bytes) = 33 db
0034h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0036h jle short 0066h               ; JLE(Jle_rel8_64) [66h:jmp64]                         encoding(2 bytes) = 7e 2e
0038h cmp ebx,r9d                   ; CMP(Cmp_r32_rm32) [EBX,R9D]                          encoding(3 bytes) = 41 3b d9
003bh jae near ptr 00d4h            ; JAE(Jae_rel32_64) [D4h:jmp64]                        encoding(6 bytes) = 0f 83 93 00 00 00
0041h movsxd rbp,ebx                ; MOVSXD(Movsxd_r64_rm32) [RBP,EBX]                    encoding(3 bytes) = 48 63 eb
0044h lea rdi,[rax+rbp*2]           ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 68
0048h movsx rsi,word ptr [r11+rbp*2]; MOVSX(Movsx_r64_rm16) [RSI,mem(16i,R11:br,DS:sr)]    encoding(5 bytes) = 49 0f bf 34 6b
004dh cmp ebx,r8d                   ; CMP(Cmp_r32_rm32) [EBX,R8D]                          encoding(3 bytes) = 41 3b d8
0050h jae near ptr 00d4h            ; JAE(Jae_rel32_64) [D4h:jmp64]                        encoding(6 bytes) = 0f 83 7e 00 00 00
0056h movsx rbp,word ptr [r10+rbp*2]; MOVSX(Movsx_r64_rm16) [RBP,mem(16i,R10:br,DS:sr)]    encoding(5 bytes) = 49 0f bf 2c 6a
005bh xor esi,ebp                   ; XOR(Xor_r32_rm32) [ESI,EBP]                          encoding(2 bytes) = 33 f5
005dh mov [rdi],si                  ; MOV(Mov_rm16_r16) [mem(16u,RDI:br,DS:sr),SI]         encoding(3 bytes) = 66 89 37
0060h inc ebx                       ; INC(Inc_rm32) [EBX]                                  encoding(2 bytes) = ff c3
0062h cmp ebx,edx                   ; CMP(Cmp_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 3b da
0064h jl short 0038h                ; JL(Jl_rel8_64) [38h:jmp64]                           encoding(2 bytes) = 7c d2
0066h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0069h mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
006dh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0070h add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0074h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0075h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0076h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0077h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0078h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
007ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
007bh mov ecx,0EEFh                 ; MOV(Mov_r32_imm32) [ECX,eefh:imm32]                  encoding(5 bytes) = b9 ef 0e 00 00
0080h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
008ah call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC44A80h:jmp64]                encoding(5 bytes) = e8 f1 49 c4 5f
008fh mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0092h mov ecx,0EF7h                 ; MOV(Mov_r32_imm32) [ECX,ef7h:imm32]                  encoding(5 bytes) = b9 f7 0e 00 00
0097h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
00a1h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC44A80h:jmp64]                encoding(5 bytes) = e8 da 49 c4 5f
00a6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00a9h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
00aeh mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00b1h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00b5h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00b8h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00bah mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00bch mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00c1h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00c6h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFEC78h:jmp64]        encoding(5 bytes) = e8 ad eb ff ff
00cbh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00ceh call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAFA4F0h:jmp64]                encoding(5 bytes) = e8 1d a4 af 5f
00d3h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00d4h call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC442A0h:jmp64]                encoding(5 bytes) = e8 c7 41 c4 5f
00d9h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> xorBytes => new byte[218]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4D,0x8B,0x10,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x1A,0x8B,0x52,0x08,0xBE,0x52,0x01,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x49,0x33,0xDB,0x85,0xD2,0x7E,0x2E,0x41,0x3B,0xD9,0x0F,0x83,0x93,0x00,0x00,0x00,0x48,0x63,0xEB,0x48,0x8D,0x3C,0x68,0x49,0x0F,0xBF,0x34,0x6B,0x41,0x3B,0xD8,0x0F,0x83,0x7E,0x00,0x00,0x00,0x49,0x0F,0xBF,0x2C,0x6A,0x33,0xF5,0x66,0x89,0x37,0xFF,0xC3,0x3B,0xDA,0x7C,0xD2,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0xEF,0x0E,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xF1,0x49,0xC4,0x5F,0x4C,0x8B,0xF0,0xB9,0xF7,0x0E,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xDA,0x49,0xC4,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0xAD,0xEB,0xFF,0xFF,0x48,0x8B,0xC8,0xE8,0x1D,0xA4,0xAF,0x5F,0xCC,0xE8,0xC7,0x41,0xC4,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<uint> xor(ReadOnlySpan<uint> lhs, ReadOnlySpan<uint> rhs, Span<uint> dst)
; location: [7FFC7C08FEA0h, 7FFC7C08FF76h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000dh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
0011h mov r10,[r8]                  ; MOV(Mov_r64_rm64) [R10,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 4d 8b 10
0014h mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0018h mov r11,[rdx]                 ; MOV(Mov_r64_rm64) [R11,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 1a
001bh mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
001eh mov esi,16Ah                  ; MOV(Mov_r32_imm32) [ESI,16ah:imm32]                  encoding(5 bytes) = be 6a 01 00 00
0023h mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0028h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
002ah mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
002dh cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0030h jne short 0078h               ; JNE(Jne_rel8_64) [78h:jmp64]                         encoding(2 bytes) = 75 46
0032h xor ebx,ebx                   ; XOR(Xor_r32_rm32) [EBX,EBX]                          encoding(2 bytes) = 33 db
0034h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0036h jle short 0063h               ; JLE(Jle_rel8_64) [63h:jmp64]                         encoding(2 bytes) = 7e 2b
0038h cmp ebx,r9d                   ; CMP(Cmp_r32_rm32) [EBX,R9D]                          encoding(3 bytes) = 41 3b d9
003bh jae near ptr 00d1h            ; JAE(Jae_rel32_64) [D1h:jmp64]                        encoding(6 bytes) = 0f 83 90 00 00 00
0041h movsxd rbp,ebx                ; MOVSXD(Movsxd_r64_rm32) [RBP,EBX]                    encoding(3 bytes) = 48 63 eb
0044h lea rdi,[rax+rbp*4]           ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c a8
0048h mov esi,[r11+rbp*4]           ; MOV(Mov_r32_rm32) [ESI,mem(32u,R11:br,DS:sr)]        encoding(4 bytes) = 41 8b 34 ab
004ch cmp ebx,r8d                   ; CMP(Cmp_r32_rm32) [EBX,R8D]                          encoding(3 bytes) = 41 3b d8
004fh jae near ptr 00d1h            ; JAE(Jae_rel32_64) [D1h:jmp64]                        encoding(6 bytes) = 0f 83 7c 00 00 00
0055h mov ebp,[r10+rbp*4]           ; MOV(Mov_r32_rm32) [EBP,mem(32u,R10:br,DS:sr)]        encoding(4 bytes) = 41 8b 2c aa
0059h xor esi,ebp                   ; XOR(Xor_r32_rm32) [ESI,EBP]                          encoding(2 bytes) = 33 f5
005bh mov [rdi],esi                 ; MOV(Mov_rm32_r32) [mem(32u,RDI:br,DS:sr),ESI]        encoding(2 bytes) = 89 37
005dh inc ebx                       ; INC(Inc_rm32) [EBX]                                  encoding(2 bytes) = ff c3
005fh cmp ebx,edx                   ; CMP(Cmp_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 3b da
0061h jl short 0038h                ; JL(Jl_rel8_64) [38h:jmp64]                           encoding(2 bytes) = 7c d5
0063h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0066h mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
006ah mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
006dh add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0071h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0072h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0073h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0074h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0075h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0077h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0078h mov ecx,0EEFh                 ; MOV(Mov_r32_imm32) [ECX,eefh:imm32]                  encoding(5 bytes) = b9 ef 0e 00 00
007dh mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
0087h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC43F80h:jmp64]                encoding(5 bytes) = e8 f4 3e c4 5f
008ch mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
008fh mov ecx,0EF7h                 ; MOV(Mov_r32_imm32) [ECX,ef7h:imm32]                  encoding(5 bytes) = b9 f7 0e 00 00
0094h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
009eh call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC43F80h:jmp64]                encoding(5 bytes) = e8 dd 3e c4 5f
00a3h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00a6h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
00abh mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00aeh mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00b2h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00b5h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00b7h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00b9h mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00beh mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00c3h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFE178h:jmp64]        encoding(5 bytes) = e8 b0 e0 ff ff
00c8h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00cbh call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAF99F0h:jmp64]                encoding(5 bytes) = e8 20 99 af 5f
00d0h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00d1h call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC437A0h:jmp64]                encoding(5 bytes) = e8 ca 36 c4 5f
00d6h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> xorBytes => new byte[215]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4D,0x8B,0x10,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x1A,0x8B,0x52,0x08,0xBE,0x6A,0x01,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x46,0x33,0xDB,0x85,0xD2,0x7E,0x2B,0x41,0x3B,0xD9,0x0F,0x83,0x90,0x00,0x00,0x00,0x48,0x63,0xEB,0x48,0x8D,0x3C,0xA8,0x41,0x8B,0x34,0xAB,0x41,0x3B,0xD8,0x0F,0x83,0x7C,0x00,0x00,0x00,0x41,0x8B,0x2C,0xAA,0x33,0xF5,0x89,0x37,0xFF,0xC3,0x3B,0xDA,0x7C,0xD5,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0xEF,0x0E,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xF4,0x3E,0xC4,0x5F,0x4C,0x8B,0xF0,0xB9,0xF7,0x0E,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xDD,0x3E,0xC4,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0xB0,0xE0,0xFF,0xFF,0x48,0x8B,0xC8,0xE8,0x20,0x99,0xAF,0x5F,0xCC,0xE8,0xCA,0x36,0xC4,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<long> xor(ReadOnlySpan<long> lhs, ReadOnlySpan<long> rhs, Span<long> dst)
; location: [7FFC7C08FFA0h, 7FFC7C090078h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000dh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
0011h mov r10,[r8]                  ; MOV(Mov_r64_rm64) [R10,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 4d 8b 10
0014h mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0018h mov r11,[rdx]                 ; MOV(Mov_r64_rm64) [R11,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 1a
001bh mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
001eh mov esi,172h                  ; MOV(Mov_r32_imm32) [ESI,172h:imm32]                  encoding(5 bytes) = be 72 01 00 00
0023h mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0028h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
002ah mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
002dh cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0030h jne short 007ah               ; JNE(Jne_rel8_64) [7Ah:jmp64]                         encoding(2 bytes) = 75 48
0032h xor ebx,ebx                   ; XOR(Xor_r32_rm32) [EBX,EBX]                          encoding(2 bytes) = 33 db
0034h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0036h jle short 0065h               ; JLE(Jle_rel8_64) [65h:jmp64]                         encoding(2 bytes) = 7e 2d
0038h cmp ebx,r9d                   ; CMP(Cmp_r32_rm32) [EBX,R9D]                          encoding(3 bytes) = 41 3b d9
003bh jae near ptr 00d3h            ; JAE(Jae_rel32_64) [D3h:jmp64]                        encoding(6 bytes) = 0f 83 92 00 00 00
0041h movsxd rbp,ebx                ; MOVSXD(Movsxd_r64_rm32) [RBP,EBX]                    encoding(3 bytes) = 48 63 eb
0044h lea rdi,[rax+rbp*8]           ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c e8
0048h mov rsi,[r11+rbp*8]           ; MOV(Mov_r64_rm64) [RSI,mem(64u,R11:br,DS:sr)]        encoding(4 bytes) = 49 8b 34 eb
004ch cmp ebx,r8d                   ; CMP(Cmp_r32_rm32) [EBX,R8D]                          encoding(3 bytes) = 41 3b d8
004fh jae near ptr 00d3h            ; JAE(Jae_rel32_64) [D3h:jmp64]                        encoding(6 bytes) = 0f 83 7e 00 00 00
0055h mov rbp,[r10+rbp*8]           ; MOV(Mov_r64_rm64) [RBP,mem(64u,R10:br,DS:sr)]        encoding(4 bytes) = 49 8b 2c ea
0059h xor rsi,rbp                   ; XOR(Xor_r64_rm64) [RSI,RBP]                          encoding(3 bytes) = 48 33 f5
005ch mov [rdi],rsi                 ; MOV(Mov_rm64_r64) [mem(64u,RDI:br,DS:sr),RSI]        encoding(3 bytes) = 48 89 37
005fh inc ebx                       ; INC(Inc_rm32) [EBX]                                  encoding(2 bytes) = ff c3
0061h cmp ebx,edx                   ; CMP(Cmp_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 3b da
0063h jl short 0038h                ; JL(Jl_rel8_64) [38h:jmp64]                           encoding(2 bytes) = 7c d3
0065h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0068h mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
006ch mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
006fh add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0073h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0074h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0075h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0076h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0077h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0079h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
007ah mov ecx,0EEFh                 ; MOV(Mov_r32_imm32) [ECX,eefh:imm32]                  encoding(5 bytes) = b9 ef 0e 00 00
007fh mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
0089h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC43E80h:jmp64]                encoding(5 bytes) = e8 f2 3d c4 5f
008eh mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0091h mov ecx,0EF7h                 ; MOV(Mov_r32_imm32) [ECX,ef7h:imm32]                  encoding(5 bytes) = b9 f7 0e 00 00
0096h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
00a0h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC43E80h:jmp64]                encoding(5 bytes) = e8 db 3d c4 5f
00a5h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00a8h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
00adh mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00b0h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00b4h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00b7h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00b9h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00bbh mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00c0h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00c5h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFE078h:jmp64]        encoding(5 bytes) = e8 ae df ff ff
00cah mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00cdh call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAF98F0h:jmp64]                encoding(5 bytes) = e8 1e 98 af 5f
00d2h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00d3h call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC436A0h:jmp64]                encoding(5 bytes) = e8 c8 35 c4 5f
00d8h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> xorBytes => new byte[217]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4D,0x8B,0x10,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x1A,0x8B,0x52,0x08,0xBE,0x72,0x01,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x48,0x33,0xDB,0x85,0xD2,0x7E,0x2D,0x41,0x3B,0xD9,0x0F,0x83,0x92,0x00,0x00,0x00,0x48,0x63,0xEB,0x48,0x8D,0x3C,0xE8,0x49,0x8B,0x34,0xEB,0x41,0x3B,0xD8,0x0F,0x83,0x7E,0x00,0x00,0x00,0x49,0x8B,0x2C,0xEA,0x48,0x33,0xF5,0x48,0x89,0x37,0xFF,0xC3,0x3B,0xDA,0x7C,0xD3,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0xEF,0x0E,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xF2,0x3D,0xC4,0x5F,0x4C,0x8B,0xF0,0xB9,0xF7,0x0E,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xDB,0x3D,0xC4,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0xAE,0xDF,0xFF,0xFF,0x48,0x8B,0xC8,0xE8,0x1E,0x98,0xAF,0x5F,0xCC,0xE8,0xC8,0x35,0xC4,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref long square(ref long src)
; location: [7FFC7C0901A0h, 7FFC7C0901B2h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,[rcx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 01
0008h imul rax,rax                  ; IMUL(Imul_r64_rm64) [RAX,RAX]                        encoding(4 bytes) = 48 0f af c0
000ch mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
000fh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0012h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> squareBytes => new byte[19]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x01,0x48,0x0F,0xAF,0xC0,0x48,0x89,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref ulong square(ref ulong src)
; location: [7FFC7C0901D0h, 7FFC7C0901E2h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,[rcx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 01
0008h imul rax,rax                  ; IMUL(Imul_r64_rm64) [RAX,RAX]                        encoding(4 bytes) = 48 0f af c0
000ch mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
000fh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0012h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> squareBytes => new byte[19]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x01,0x48,0x0F,0xAF,0xC0,0x48,0x89,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref float square(ref float src)
; location: [7FFC7C090200h, 7FFC7C090214h]
0000h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0003h xchg ax,ax                    ; NOP(Nopw)                                            encoding(2 bytes) = 66 90
0005h vmovss xmm0,dword ptr [rcx]   ; VMOVSS(VEX_Vmovss_xmm_m32) [XMM0,mem(Float32,RCX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 10 01
0009h vmulss xmm0,xmm0,xmm0         ; VMULSS(VEX_Vmulss_xmm_xmm_xmmm32) [XMM0,XMM0,XMM0]   encoding(VEX, 4 bytes) = c5 fa 59 c0
000dh vmovss dword ptr [rcx],xmm0   ; VMOVSS(VEX_Vmovss_m32_xmm) [mem(Float32,RCX:br,DS:sr),XMM0] encoding(VEX, 4 bytes) = c5 fa 11 01
0011h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0014h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> squareBytes => new byte[21]{0xC5,0xF8,0x77,0x66,0x90,0xC5,0xFA,0x10,0x01,0xC5,0xFA,0x59,0xC0,0xC5,0xFA,0x11,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref double square(ref double src)
; location: [7FFC7C090230h, 7FFC7C090244h]
0000h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0003h xchg ax,ax                    ; NOP(Nopw)                                            encoding(2 bytes) = 66 90
0005h vmovsd xmm0,qword ptr [rcx]   ; VMOVSD(VEX_Vmovsd_xmm_m64) [XMM0,mem(Float64,RCX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fb 10 01
0009h vmulsd xmm0,xmm0,xmm0         ; VMULSD(VEX_Vmulsd_xmm_xmm_xmmm64) [XMM0,XMM0,XMM0]   encoding(VEX, 4 bytes) = c5 fb 59 c0
000dh vmovsd qword ptr [rcx],xmm0   ; VMOVSD(VEX_Vmovsd_m64_xmm) [mem(Float64,RCX:br,DS:sr),XMM0] encoding(VEX, 4 bytes) = c5 fb 11 01
0011h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0014h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> squareBytes => new byte[21]{0xC5,0xF8,0x77,0x66,0x90,0xC5,0xFB,0x10,0x01,0xC5,0xFB,0x59,0xC0,0xC5,0xFB,0x11,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref sbyte square(sbyte src, out sbyte dst)
; location: [7FFC7C090260h, 7FFC7C09028Bh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov [rsp+8],ecx               ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),ECX]        encoding(4 bytes) = 89 4c 24 08
0009h movsx rax,byte ptr [rsp+8]    ; MOVSX(Movsx_r64_rm8) [RAX,mem(8i,RSP:br,SS:sr)]      encoding(6 bytes) = 48 0f be 44 24 08
000fh movsx rcx,byte ptr [rsp+8]    ; MOVSX(Movsx_r64_rm8) [RCX,mem(8i,RSP:br,SS:sr)]      encoding(6 bytes) = 48 0f be 4c 24 08
0015h imul eax,ecx                  ; IMUL(Imul_r32_rm32) [EAX,ECX]                        encoding(3 bytes) = 0f af c1
0018h movsx rax,al                  ; MOVSX(Movsx_r64_rm8) [RAX,AL]                        encoding(4 bytes) = 48 0f be c0
001ch mov [rsp+8],al                ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),AL]            encoding(4 bytes) = 88 44 24 08
0020h movsx rax,byte ptr [rsp+8]    ; MOVSX(Movsx_r64_rm8) [RAX,mem(8i,RSP:br,SS:sr)]      encoding(6 bytes) = 48 0f be 44 24 08
0026h mov [rdx],al                  ; MOV(Mov_rm8_r8) [mem(8u,RDX:br,DS:sr),AL]            encoding(2 bytes) = 88 02
0028h mov rax,rdx                   ; MOV(Mov_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 8b c2
002bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> squareBytes => new byte[44]{0x0F,0x1F,0x44,0x00,0x00,0x89,0x4C,0x24,0x08,0x48,0x0F,0xBE,0x44,0x24,0x08,0x48,0x0F,0xBE,0x4C,0x24,0x08,0x0F,0xAF,0xC1,0x48,0x0F,0xBE,0xC0,0x88,0x44,0x24,0x08,0x48,0x0F,0xBE,0x44,0x24,0x08,0x88,0x02,0x48,0x8B,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref byte square(byte src, out byte dst)
; location: [7FFC7C0902A0h, 7FFC7C0902C7h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov [rsp+8],ecx               ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),ECX]        encoding(4 bytes) = 89 4c 24 08
0009h movzx eax,byte ptr [rsp+8]    ; MOVZX(Movzx_r32_rm8) [EAX,mem(8u,RSP:br,SS:sr)]      encoding(5 bytes) = 0f b6 44 24 08
000eh movzx ecx,byte ptr [rsp+8]    ; MOVZX(Movzx_r32_rm8) [ECX,mem(8u,RSP:br,SS:sr)]      encoding(5 bytes) = 0f b6 4c 24 08
0013h imul eax,ecx                  ; IMUL(Imul_r32_rm32) [EAX,ECX]                        encoding(3 bytes) = 0f af c1
0016h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0019h mov [rsp+8],al                ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),AL]            encoding(4 bytes) = 88 44 24 08
001dh movzx eax,byte ptr [rsp+8]    ; MOVZX(Movzx_r32_rm8) [EAX,mem(8u,RSP:br,SS:sr)]      encoding(5 bytes) = 0f b6 44 24 08
0022h mov [rdx],al                  ; MOV(Mov_rm8_r8) [mem(8u,RDX:br,DS:sr),AL]            encoding(2 bytes) = 88 02
0024h mov rax,rdx                   ; MOV(Mov_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 8b c2
0027h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> squareBytes => new byte[40]{0x0F,0x1F,0x44,0x00,0x00,0x89,0x4C,0x24,0x08,0x0F,0xB6,0x44,0x24,0x08,0x0F,0xB6,0x4C,0x24,0x08,0x0F,0xAF,0xC1,0x0F,0xB6,0xC0,0x88,0x44,0x24,0x08,0x0F,0xB6,0x44,0x24,0x08,0x88,0x02,0x48,0x8B,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref short square(short src, out short dst)
; location: [7FFC7C0902E0h, 7FFC7C09030Dh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov [rsp+8],ecx               ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),ECX]        encoding(4 bytes) = 89 4c 24 08
0009h movsx rax,word ptr [rsp+8]    ; MOVSX(Movsx_r64_rm16) [RAX,mem(16i,RSP:br,SS:sr)]    encoding(6 bytes) = 48 0f bf 44 24 08
000fh movsx rcx,word ptr [rsp+8]    ; MOVSX(Movsx_r64_rm16) [RCX,mem(16i,RSP:br,SS:sr)]    encoding(6 bytes) = 48 0f bf 4c 24 08
0015h imul eax,ecx                  ; IMUL(Imul_r32_rm32) [EAX,ECX]                        encoding(3 bytes) = 0f af c1
0018h movsx rax,ax                  ; MOVSX(Movsx_r64_rm16) [RAX,AX]                       encoding(4 bytes) = 48 0f bf c0
001ch mov [rsp+8],ax                ; MOV(Mov_rm16_r16) [mem(16u,RSP:br,SS:sr),AX]         encoding(5 bytes) = 66 89 44 24 08
0021h movsx rax,word ptr [rsp+8]    ; MOVSX(Movsx_r64_rm16) [RAX,mem(16i,RSP:br,SS:sr)]    encoding(6 bytes) = 48 0f bf 44 24 08
0027h mov [rdx],ax                  ; MOV(Mov_rm16_r16) [mem(16u,RDX:br,DS:sr),AX]         encoding(3 bytes) = 66 89 02
002ah mov rax,rdx                   ; MOV(Mov_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 8b c2
002dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> squareBytes => new byte[46]{0x0F,0x1F,0x44,0x00,0x00,0x89,0x4C,0x24,0x08,0x48,0x0F,0xBF,0x44,0x24,0x08,0x48,0x0F,0xBF,0x4C,0x24,0x08,0x0F,0xAF,0xC1,0x48,0x0F,0xBF,0xC0,0x66,0x89,0x44,0x24,0x08,0x48,0x0F,0xBF,0x44,0x24,0x08,0x66,0x89,0x02,0x48,0x8B,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref float square(float src, out float dst)
; location: [7FFC7C0903E0h, 7FFC7C0903F0h]
0000h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0003h xchg ax,ax                    ; NOP(Nopw)                                            encoding(2 bytes) = 66 90
0005h vmulss xmm0,xmm0,xmm0         ; VMULSS(VEX_Vmulss_xmm_xmm_xmmm32) [XMM0,XMM0,XMM0]   encoding(VEX, 4 bytes) = c5 fa 59 c0
0009h vmovss dword ptr [rdx],xmm0   ; VMOVSS(VEX_Vmovss_m32_xmm) [mem(Float32,RDX:br,DS:sr),XMM0] encoding(VEX, 4 bytes) = c5 fa 11 02
000dh mov rax,rdx                   ; MOV(Mov_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 8b c2
0010h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> squareBytes => new byte[17]{0xC5,0xF8,0x77,0x66,0x90,0xC5,0xFA,0x59,0xC0,0xC5,0xFA,0x11,0x02,0x48,0x8B,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: sbyte sub(sbyte lhs, sbyte rhs)
; location: [7FFC7C090440h, 7FFC7C090453h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cl                  ; MOVSX(Movsx_r64_rm8) [RAX,CL]                        encoding(4 bytes) = 48 0f be c1
0009h movsx rdx,dl                  ; MOVSX(Movsx_r64_rm8) [RDX,DL]                        encoding(4 bytes) = 48 0f be d2
000dh sub eax,edx                   ; SUB(Sub_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 2b c2
000fh movsx rax,al                  ; MOVSX(Movsx_r64_rm8) [RAX,AL]                        encoding(4 bytes) = 48 0f be c0
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> subBytes => new byte[20]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBE,0xC1,0x48,0x0F,0xBE,0xD2,0x2B,0xC2,0x48,0x0F,0xBE,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: byte sub(byte lhs, byte rhs)
; location: [7FFC7C090470h, 7FFC7C090480h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0008h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
000bh sub eax,edx                   ; SUB(Sub_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 2b c2
000dh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0010h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> subBytes => new byte[17]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC1,0x0F,0xB6,0xD2,0x2B,0xC2,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: int sub(int lhs, int rhs)
; location: [7FFC7C090500h, 7FFC7C090509h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov eax,ecx                   ; MOV(Mov_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 8b c1
0007h sub eax,edx                   ; SUB(Sub_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 2b c2
0009h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> subBytes => new byte[10]{0x0F,0x1F,0x44,0x00,0x00,0x8B,0xC1,0x2B,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: uint sub(uint lhs, uint rhs)
; location: [7FFC7C090520h, 7FFC7C090529h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov eax,ecx                   ; MOV(Mov_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 8b c1
0007h sub eax,edx                   ; SUB(Sub_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 2b c2
0009h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> subBytes => new byte[10]{0x0F,0x1F,0x44,0x00,0x00,0x8B,0xC1,0x2B,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: float sub(float lhs, float rhs)
; location: [7FFC7C090580h, 7FFC7C090589h]
0000h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0003h xchg ax,ax                    ; NOP(Nopw)                                            encoding(2 bytes) = 66 90
0005h vsubss xmm0,xmm0,xmm1         ; VSUBSS(VEX_Vsubss_xmm_xmm_xmmm32) [XMM0,XMM0,XMM1]   encoding(VEX, 4 bytes) = c5 fa 5c c1
0009h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> subBytes => new byte[10]{0xC5,0xF8,0x77,0x66,0x90,0xC5,0xFA,0x5C,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: double sub(double lhs, double rhs)
; location: [7FFC7C0905A0h, 7FFC7C0905A9h]
0000h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0003h xchg ax,ax                    ; NOP(Nopw)                                            encoding(2 bytes) = 66 90
0005h vsubsd xmm0,xmm0,xmm1         ; VSUBSD(VEX_Vsubsd_xmm_xmm_xmmm64) [XMM0,XMM0,XMM1]   encoding(VEX, 4 bytes) = c5 fb 5c c1
0009h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> subBytes => new byte[10]{0xC5,0xF8,0x77,0x66,0x90,0xC5,0xFB,0x5C,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref byte sub(ref byte lhs, byte rhs)
; location: [7FFC7C0905E0h, 7FFC7C0905EDh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,dl                  ; MOVZX(Movzx_r32_rm8) [EAX,DL]                        encoding(3 bytes) = 0f b6 c2
0008h sub [rcx],al                  ; SUB(Sub_rm8_r8) [mem(8u,RCX:br,DS:sr),AL]            encoding(2 bytes) = 28 01
000ah mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> subBytes => new byte[14]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC2,0x28,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref ushort sub(ref ushort lhs, ushort rhs)
; location: [7FFC7C090620h, 7FFC7C09062Eh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,dx                  ; MOVZX(Movzx_r32_rm16) [EAX,DX]                       encoding(3 bytes) = 0f b7 c2
0008h sub [rcx],ax                  ; SUB(Sub_rm16_r16) [mem(16u,RCX:br,DS:sr),AX]         encoding(3 bytes) = 66 29 01
000bh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> subBytes => new byte[15]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB7,0xC2,0x66,0x29,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref int sub(ref int lhs, int rhs)
; location: [7FFC7C090640h, 7FFC7C09064Ah]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h sub [rcx],edx                 ; SUB(Sub_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(2 bytes) = 29 11
0007h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> subBytes => new byte[11]{0x0F,0x1F,0x44,0x00,0x00,0x29,0x11,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref uint sub(ref uint lhs, uint rhs)
; location: [7FFC7C090660h, 7FFC7C09066Ah]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h sub [rcx],edx                 ; SUB(Sub_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(2 bytes) = 29 11
0007h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> subBytes => new byte[11]{0x0F,0x1F,0x44,0x00,0x00,0x29,0x11,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref ulong sub(ref ulong lhs, ulong rhs)
; location: [7FFC7C0906A0h, 7FFC7C0906ABh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h sub [rcx],rdx                 ; SUB(Sub_rm64_r64) [mem(64u,RCX:br,DS:sr),RDX]        encoding(3 bytes) = 48 29 11
0008h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> subBytes => new byte[12]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x29,0x11,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref float sub(ref float lhs, float rhs)
; location: [7FFC7C0906C0h, 7FFC7C0906D4h]
0000h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0003h xchg ax,ax                    ; NOP(Nopw)                                            encoding(2 bytes) = 66 90
0005h vmovss xmm0,dword ptr [rcx]   ; VMOVSS(VEX_Vmovss_xmm_m32) [XMM0,mem(Float32,RCX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 10 01
0009h vsubss xmm0,xmm0,xmm1         ; VSUBSS(VEX_Vsubss_xmm_xmm_xmmm32) [XMM0,XMM0,XMM1]   encoding(VEX, 4 bytes) = c5 fa 5c c1
000dh vmovss dword ptr [rcx],xmm0   ; VMOVSS(VEX_Vmovss_m32_xmm) [mem(Float32,RCX:br,DS:sr),XMM0] encoding(VEX, 4 bytes) = c5 fa 11 01
0011h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0014h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> subBytes => new byte[21]{0xC5,0xF8,0x77,0x66,0x90,0xC5,0xFA,0x10,0x01,0xC5,0xFA,0x5C,0xC1,0xC5,0xFA,0x11,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref double sub(ref double lhs, double rhs)
; location: [7FFC7C0906F0h, 7FFC7C090704h]
0000h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0003h xchg ax,ax                    ; NOP(Nopw)                                            encoding(2 bytes) = 66 90
0005h vmovsd xmm0,qword ptr [rcx]   ; VMOVSD(VEX_Vmovsd_xmm_m64) [XMM0,mem(Float64,RCX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fb 10 01
0009h vsubsd xmm0,xmm0,xmm1         ; VSUBSD(VEX_Vsubsd_xmm_xmm_xmmm64) [XMM0,XMM0,XMM1]   encoding(VEX, 4 bytes) = c5 fb 5c c1
000dh vmovsd qword ptr [rcx],xmm0   ; VMOVSD(VEX_Vmovsd_m64_xmm) [mem(Float64,RCX:br,DS:sr),XMM0] encoding(VEX, 4 bytes) = c5 fb 11 01
0011h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0014h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> subBytes => new byte[21]{0xC5,0xF8,0x77,0x66,0x90,0xC5,0xFB,0x10,0x01,0xC5,0xFB,0x5C,0xC1,0xC5,0xFB,0x11,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<byte> sub(ReadOnlySpan<byte> lhs, ReadOnlySpan<byte> rhs, Span<byte> dst)
; location: [7FFC7C090820h, 7FFC7C0908F9h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000dh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
0011h mov r10,[r8]                  ; MOV(Mov_r64_rm64) [R10,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 4d 8b 10
0014h mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0018h mov r11,[rdx]                 ; MOV(Mov_r64_rm64) [R11,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 1a
001bh mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
001eh mov esi,8Ch                   ; MOV(Mov_r32_imm32) [ESI,8ch:imm32]                   encoding(5 bytes) = be 8c 00 00 00
0023h mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0028h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
002ah mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
002dh cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0030h jne short 007bh               ; JNE(Jne_rel8_64) [7Bh:jmp64]                         encoding(2 bytes) = 75 49
0032h xor ebx,ebx                   ; XOR(Xor_r32_rm32) [EBX,EBX]                          encoding(2 bytes) = 33 db
0034h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0036h jle short 0066h               ; JLE(Jle_rel8_64) [66h:jmp64]                         encoding(2 bytes) = 7e 2e
0038h cmp ebx,r9d                   ; CMP(Cmp_r32_rm32) [EBX,R9D]                          encoding(3 bytes) = 41 3b d9
003bh jae near ptr 00d4h            ; JAE(Jae_rel32_64) [D4h:jmp64]                        encoding(6 bytes) = 0f 83 93 00 00 00
0041h movsxd rbp,ebx                ; MOVSXD(Movsxd_r64_rm32) [RBP,EBX]                    encoding(3 bytes) = 48 63 eb
0044h lea rdi,[rax+rbp]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 28
0048h movzx esi,byte ptr [r11+rbp]  ; MOVZX(Movzx_r32_rm8) [ESI,mem(8u,R11:br,DS:sr)]      encoding(5 bytes) = 41 0f b6 34 2b
004dh cmp ebx,r8d                   ; CMP(Cmp_r32_rm32) [EBX,R8D]                          encoding(3 bytes) = 41 3b d8
0050h jae near ptr 00d4h            ; JAE(Jae_rel32_64) [D4h:jmp64]                        encoding(6 bytes) = 0f 83 7e 00 00 00
0056h movzx ebp,byte ptr [r10+rbp]  ; MOVZX(Movzx_r32_rm8) [EBP,mem(8u,R10:br,DS:sr)]      encoding(5 bytes) = 41 0f b6 2c 2a
005bh sub esi,ebp                   ; SUB(Sub_r32_rm32) [ESI,EBP]                          encoding(2 bytes) = 2b f5
005dh mov [rdi],sil                 ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),SIL]           encoding(3 bytes) = 40 88 37
0060h inc ebx                       ; INC(Inc_rm32) [EBX]                                  encoding(2 bytes) = ff c3
0062h cmp ebx,edx                   ; CMP(Cmp_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 3b da
0064h jl short 0038h                ; JL(Jl_rel8_64) [38h:jmp64]                           encoding(2 bytes) = 7c d2
0066h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0069h mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
006dh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0070h add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0074h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0075h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0076h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0077h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0078h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
007ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
007bh mov ecx,0E91h                 ; MOV(Mov_r32_imm32) [ECX,e91h:imm32]                  encoding(5 bytes) = b9 91 0e 00 00
0080h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
008ah call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC43600h:jmp64]                encoding(5 bytes) = e8 71 35 c4 5f
008fh mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0092h mov ecx,0E99h                 ; MOV(Mov_r32_imm32) [ECX,e99h:imm32]                  encoding(5 bytes) = b9 99 0e 00 00
0097h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
00a1h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC43600h:jmp64]                encoding(5 bytes) = e8 5a 35 c4 5f
00a6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00a9h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
00aeh mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00b1h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00b5h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00b8h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00bah mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00bch mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00c1h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00c6h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFD7F8h:jmp64]        encoding(5 bytes) = e8 2d d7 ff ff
00cbh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00ceh call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAF9070h:jmp64]                encoding(5 bytes) = e8 9d 8f af 5f
00d3h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00d4h call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC42E20h:jmp64]                encoding(5 bytes) = e8 47 2d c4 5f
00d9h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> subBytes => new byte[218]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4D,0x8B,0x10,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x1A,0x8B,0x52,0x08,0xBE,0x8C,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x49,0x33,0xDB,0x85,0xD2,0x7E,0x2E,0x41,0x3B,0xD9,0x0F,0x83,0x93,0x00,0x00,0x00,0x48,0x63,0xEB,0x48,0x8D,0x3C,0x28,0x41,0x0F,0xB6,0x34,0x2B,0x41,0x3B,0xD8,0x0F,0x83,0x7E,0x00,0x00,0x00,0x41,0x0F,0xB6,0x2C,0x2A,0x2B,0xF5,0x40,0x88,0x37,0xFF,0xC3,0x3B,0xDA,0x7C,0xD2,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x91,0x0E,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x71,0x35,0xC4,0x5F,0x4C,0x8B,0xF0,0xB9,0x99,0x0E,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x5A,0x35,0xC4,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x2D,0xD7,0xFF,0xFF,0x48,0x8B,0xC8,0xE8,0x9D,0x8F,0xAF,0x5F,0xCC,0xE8,0x47,0x2D,0xC4,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<short> sub(ReadOnlySpan<short> lhs, ReadOnlySpan<short> rhs, Span<short> dst)
; location: [7FFC7C090920h, 7FFC7C0909F9h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000dh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
0011h mov r10,[r8]                  ; MOV(Mov_r64_rm64) [R10,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 4d 8b 10
0014h mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0018h mov r11,[rdx]                 ; MOV(Mov_r64_rm64) [R11,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 1a
001bh mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
001eh mov esi,94h                   ; MOV(Mov_r32_imm32) [ESI,94h:imm32]                   encoding(5 bytes) = be 94 00 00 00
0023h mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0028h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
002ah mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
002dh cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0030h jne short 007bh               ; JNE(Jne_rel8_64) [7Bh:jmp64]                         encoding(2 bytes) = 75 49
0032h xor ebx,ebx                   ; XOR(Xor_r32_rm32) [EBX,EBX]                          encoding(2 bytes) = 33 db
0034h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0036h jle short 0066h               ; JLE(Jle_rel8_64) [66h:jmp64]                         encoding(2 bytes) = 7e 2e
0038h cmp ebx,r9d                   ; CMP(Cmp_r32_rm32) [EBX,R9D]                          encoding(3 bytes) = 41 3b d9
003bh jae near ptr 00d4h            ; JAE(Jae_rel32_64) [D4h:jmp64]                        encoding(6 bytes) = 0f 83 93 00 00 00
0041h movsxd rbp,ebx                ; MOVSXD(Movsxd_r64_rm32) [RBP,EBX]                    encoding(3 bytes) = 48 63 eb
0044h lea rdi,[rax+rbp*2]           ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 68
0048h movsx rsi,word ptr [r11+rbp*2]; MOVSX(Movsx_r64_rm16) [RSI,mem(16i,R11:br,DS:sr)]    encoding(5 bytes) = 49 0f bf 34 6b
004dh cmp ebx,r8d                   ; CMP(Cmp_r32_rm32) [EBX,R8D]                          encoding(3 bytes) = 41 3b d8
0050h jae near ptr 00d4h            ; JAE(Jae_rel32_64) [D4h:jmp64]                        encoding(6 bytes) = 0f 83 7e 00 00 00
0056h movsx rbp,word ptr [r10+rbp*2]; MOVSX(Movsx_r64_rm16) [RBP,mem(16i,R10:br,DS:sr)]    encoding(5 bytes) = 49 0f bf 2c 6a
005bh sub esi,ebp                   ; SUB(Sub_r32_rm32) [ESI,EBP]                          encoding(2 bytes) = 2b f5
005dh mov [rdi],si                  ; MOV(Mov_rm16_r16) [mem(16u,RDI:br,DS:sr),SI]         encoding(3 bytes) = 66 89 37
0060h inc ebx                       ; INC(Inc_rm32) [EBX]                                  encoding(2 bytes) = ff c3
0062h cmp ebx,edx                   ; CMP(Cmp_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 3b da
0064h jl short 0038h                ; JL(Jl_rel8_64) [38h:jmp64]                           encoding(2 bytes) = 7c d2
0066h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0069h mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
006dh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0070h add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0074h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0075h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0076h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0077h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0078h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
007ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
007bh mov ecx,0E91h                 ; MOV(Mov_r32_imm32) [ECX,e91h:imm32]                  encoding(5 bytes) = b9 91 0e 00 00
0080h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
008ah call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC43500h:jmp64]                encoding(5 bytes) = e8 71 34 c4 5f
008fh mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0092h mov ecx,0E99h                 ; MOV(Mov_r32_imm32) [ECX,e99h:imm32]                  encoding(5 bytes) = b9 99 0e 00 00
0097h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
00a1h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC43500h:jmp64]                encoding(5 bytes) = e8 5a 34 c4 5f
00a6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00a9h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
00aeh mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00b1h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00b5h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00b8h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00bah mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00bch mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00c1h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00c6h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFD6F8h:jmp64]        encoding(5 bytes) = e8 2d d6 ff ff
00cbh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00ceh call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAF8F70h:jmp64]                encoding(5 bytes) = e8 9d 8e af 5f
00d3h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00d4h call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC42D20h:jmp64]                encoding(5 bytes) = e8 47 2c c4 5f
00d9h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> subBytes => new byte[218]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4D,0x8B,0x10,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x1A,0x8B,0x52,0x08,0xBE,0x94,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x49,0x33,0xDB,0x85,0xD2,0x7E,0x2E,0x41,0x3B,0xD9,0x0F,0x83,0x93,0x00,0x00,0x00,0x48,0x63,0xEB,0x48,0x8D,0x3C,0x68,0x49,0x0F,0xBF,0x34,0x6B,0x41,0x3B,0xD8,0x0F,0x83,0x7E,0x00,0x00,0x00,0x49,0x0F,0xBF,0x2C,0x6A,0x2B,0xF5,0x66,0x89,0x37,0xFF,0xC3,0x3B,0xDA,0x7C,0xD2,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x91,0x0E,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x71,0x34,0xC4,0x5F,0x4C,0x8B,0xF0,0xB9,0x99,0x0E,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x5A,0x34,0xC4,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x2D,0xD6,0xFF,0xFF,0x48,0x8B,0xC8,0xE8,0x9D,0x8E,0xAF,0x5F,0xCC,0xE8,0x47,0x2C,0xC4,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<ushort> sub(ReadOnlySpan<ushort> lhs, ReadOnlySpan<ushort> rhs, Span<ushort> dst)
; location: [7FFC7C090A20h, 7FFC7C090AF9h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000dh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
0011h mov r10,[r8]                  ; MOV(Mov_r64_rm64) [R10,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 4d 8b 10
0014h mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0018h mov r11,[rdx]                 ; MOV(Mov_r64_rm64) [R11,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 1a
001bh mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
001eh mov esi,9Ch                   ; MOV(Mov_r32_imm32) [ESI,9ch:imm32]                   encoding(5 bytes) = be 9c 00 00 00
0023h mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0028h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
002ah mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
002dh cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0030h jne short 007bh               ; JNE(Jne_rel8_64) [7Bh:jmp64]                         encoding(2 bytes) = 75 49
0032h xor ebx,ebx                   ; XOR(Xor_r32_rm32) [EBX,EBX]                          encoding(2 bytes) = 33 db
0034h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0036h jle short 0066h               ; JLE(Jle_rel8_64) [66h:jmp64]                         encoding(2 bytes) = 7e 2e
0038h cmp ebx,r9d                   ; CMP(Cmp_r32_rm32) [EBX,R9D]                          encoding(3 bytes) = 41 3b d9
003bh jae near ptr 00d4h            ; JAE(Jae_rel32_64) [D4h:jmp64]                        encoding(6 bytes) = 0f 83 93 00 00 00
0041h movsxd rbp,ebx                ; MOVSXD(Movsxd_r64_rm32) [RBP,EBX]                    encoding(3 bytes) = 48 63 eb
0044h lea rdi,[rax+rbp*2]           ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 68
0048h movzx esi,word ptr [r11+rbp*2]; MOVZX(Movzx_r32_rm16) [ESI,mem(16u,R11:br,DS:sr)]    encoding(5 bytes) = 41 0f b7 34 6b
004dh cmp ebx,r8d                   ; CMP(Cmp_r32_rm32) [EBX,R8D]                          encoding(3 bytes) = 41 3b d8
0050h jae near ptr 00d4h            ; JAE(Jae_rel32_64) [D4h:jmp64]                        encoding(6 bytes) = 0f 83 7e 00 00 00
0056h movzx ebp,word ptr [r10+rbp*2]; MOVZX(Movzx_r32_rm16) [EBP,mem(16u,R10:br,DS:sr)]    encoding(5 bytes) = 41 0f b7 2c 6a
005bh sub esi,ebp                   ; SUB(Sub_r32_rm32) [ESI,EBP]                          encoding(2 bytes) = 2b f5
005dh mov [rdi],si                  ; MOV(Mov_rm16_r16) [mem(16u,RDI:br,DS:sr),SI]         encoding(3 bytes) = 66 89 37
0060h inc ebx                       ; INC(Inc_rm32) [EBX]                                  encoding(2 bytes) = ff c3
0062h cmp ebx,edx                   ; CMP(Cmp_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 3b da
0064h jl short 0038h                ; JL(Jl_rel8_64) [38h:jmp64]                           encoding(2 bytes) = 7c d2
0066h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0069h mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
006dh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0070h add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0074h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0075h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0076h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0077h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0078h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
007ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
007bh mov ecx,0E91h                 ; MOV(Mov_r32_imm32) [ECX,e91h:imm32]                  encoding(5 bytes) = b9 91 0e 00 00
0080h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
008ah call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC43400h:jmp64]                encoding(5 bytes) = e8 71 33 c4 5f
008fh mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0092h mov ecx,0E99h                 ; MOV(Mov_r32_imm32) [ECX,e99h:imm32]                  encoding(5 bytes) = b9 99 0e 00 00
0097h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
00a1h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC43400h:jmp64]                encoding(5 bytes) = e8 5a 33 c4 5f
00a6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00a9h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
00aeh mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00b1h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00b5h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00b8h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00bah mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00bch mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00c1h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00c6h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFD5F8h:jmp64]        encoding(5 bytes) = e8 2d d5 ff ff
00cbh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00ceh call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAF8E70h:jmp64]                encoding(5 bytes) = e8 9d 8d af 5f
00d3h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00d4h call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC42C20h:jmp64]                encoding(5 bytes) = e8 47 2b c4 5f
00d9h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> subBytes => new byte[218]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4D,0x8B,0x10,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x1A,0x8B,0x52,0x08,0xBE,0x9C,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x49,0x33,0xDB,0x85,0xD2,0x7E,0x2E,0x41,0x3B,0xD9,0x0F,0x83,0x93,0x00,0x00,0x00,0x48,0x63,0xEB,0x48,0x8D,0x3C,0x68,0x41,0x0F,0xB7,0x34,0x6B,0x41,0x3B,0xD8,0x0F,0x83,0x7E,0x00,0x00,0x00,0x41,0x0F,0xB7,0x2C,0x6A,0x2B,0xF5,0x66,0x89,0x37,0xFF,0xC3,0x3B,0xDA,0x7C,0xD2,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x91,0x0E,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x71,0x33,0xC4,0x5F,0x4C,0x8B,0xF0,0xB9,0x99,0x0E,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x5A,0x33,0xC4,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x2D,0xD5,0xFF,0xFF,0x48,0x8B,0xC8,0xE8,0x9D,0x8D,0xAF,0x5F,0xCC,0xE8,0x47,0x2B,0xC4,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<long> sub(ReadOnlySpan<long> lhs, ReadOnlySpan<long> rhs, Span<long> dst)
; location: [7FFC7C090D20h, 7FFC7C090DF8h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000dh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
0011h mov r10,[r8]                  ; MOV(Mov_r64_rm64) [R10,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 4d 8b 10
0014h mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0018h mov r11,[rdx]                 ; MOV(Mov_r64_rm64) [R11,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 1a
001bh mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
001eh mov esi,0B4h                  ; MOV(Mov_r32_imm32) [ESI,b4h:imm32]                   encoding(5 bytes) = be b4 00 00 00
0023h mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0028h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
002ah mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
002dh cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0030h jne short 007ah               ; JNE(Jne_rel8_64) [7Ah:jmp64]                         encoding(2 bytes) = 75 48
0032h xor ebx,ebx                   ; XOR(Xor_r32_rm32) [EBX,EBX]                          encoding(2 bytes) = 33 db
0034h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0036h jle short 0065h               ; JLE(Jle_rel8_64) [65h:jmp64]                         encoding(2 bytes) = 7e 2d
0038h cmp ebx,r9d                   ; CMP(Cmp_r32_rm32) [EBX,R9D]                          encoding(3 bytes) = 41 3b d9
003bh jae near ptr 00d3h            ; JAE(Jae_rel32_64) [D3h:jmp64]                        encoding(6 bytes) = 0f 83 92 00 00 00
0041h movsxd rbp,ebx                ; MOVSXD(Movsxd_r64_rm32) [RBP,EBX]                    encoding(3 bytes) = 48 63 eb
0044h lea rdi,[rax+rbp*8]           ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c e8
0048h mov rsi,[r11+rbp*8]           ; MOV(Mov_r64_rm64) [RSI,mem(64u,R11:br,DS:sr)]        encoding(4 bytes) = 49 8b 34 eb
004ch cmp ebx,r8d                   ; CMP(Cmp_r32_rm32) [EBX,R8D]                          encoding(3 bytes) = 41 3b d8
004fh jae near ptr 00d3h            ; JAE(Jae_rel32_64) [D3h:jmp64]                        encoding(6 bytes) = 0f 83 7e 00 00 00
0055h mov rbp,[r10+rbp*8]           ; MOV(Mov_r64_rm64) [RBP,mem(64u,R10:br,DS:sr)]        encoding(4 bytes) = 49 8b 2c ea
0059h sub rsi,rbp                   ; SUB(Sub_r64_rm64) [RSI,RBP]                          encoding(3 bytes) = 48 2b f5
005ch mov [rdi],rsi                 ; MOV(Mov_rm64_r64) [mem(64u,RDI:br,DS:sr),RSI]        encoding(3 bytes) = 48 89 37
005fh inc ebx                       ; INC(Inc_rm32) [EBX]                                  encoding(2 bytes) = ff c3
0061h cmp ebx,edx                   ; CMP(Cmp_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 3b da
0063h jl short 0038h                ; JL(Jl_rel8_64) [38h:jmp64]                           encoding(2 bytes) = 7c d3
0065h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0068h mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
006ch mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
006fh add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0073h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0074h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0075h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0076h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0077h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0079h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
007ah mov ecx,0E91h                 ; MOV(Mov_r32_imm32) [ECX,e91h:imm32]                  encoding(5 bytes) = b9 91 0e 00 00
007fh mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
0089h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC43100h:jmp64]                encoding(5 bytes) = e8 72 30 c4 5f
008eh mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0091h mov ecx,0E99h                 ; MOV(Mov_r32_imm32) [ECX,e99h:imm32]                  encoding(5 bytes) = b9 99 0e 00 00
0096h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
00a0h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC43100h:jmp64]                encoding(5 bytes) = e8 5b 30 c4 5f
00a5h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00a8h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
00adh mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00b0h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00b4h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00b7h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00b9h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00bbh mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00c0h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00c5h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFD2F8h:jmp64]        encoding(5 bytes) = e8 2e d2 ff ff
00cah mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00cdh call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAF8B70h:jmp64]                encoding(5 bytes) = e8 9e 8a af 5f
00d2h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00d3h call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC42920h:jmp64]                encoding(5 bytes) = e8 48 28 c4 5f
00d8h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> subBytes => new byte[217]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4D,0x8B,0x10,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x1A,0x8B,0x52,0x08,0xBE,0xB4,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x48,0x33,0xDB,0x85,0xD2,0x7E,0x2D,0x41,0x3B,0xD9,0x0F,0x83,0x92,0x00,0x00,0x00,0x48,0x63,0xEB,0x48,0x8D,0x3C,0xE8,0x49,0x8B,0x34,0xEB,0x41,0x3B,0xD8,0x0F,0x83,0x7E,0x00,0x00,0x00,0x49,0x8B,0x2C,0xEA,0x48,0x2B,0xF5,0x48,0x89,0x37,0xFF,0xC3,0x3B,0xDA,0x7C,0xD3,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x91,0x0E,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x72,0x30,0xC4,0x5F,0x4C,0x8B,0xF0,0xB9,0x99,0x0E,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x5B,0x30,0xC4,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x2E,0xD2,0xFF,0xFF,0x48,0x8B,0xC8,0xE8,0x9E,0x8A,0xAF,0x5F,0xCC,0xE8,0x48,0x28,0xC4,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<ulong> sub(ReadOnlySpan<ulong> lhs, ReadOnlySpan<ulong> rhs, Span<ulong> dst)
; location: [7FFC7C090E20h, 7FFC7C090EF8h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000dh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
0011h mov r10,[r8]                  ; MOV(Mov_r64_rm64) [R10,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 4d 8b 10
0014h mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0018h mov r11,[rdx]                 ; MOV(Mov_r64_rm64) [R11,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 1a
001bh mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
001eh mov esi,0BCh                  ; MOV(Mov_r32_imm32) [ESI,bch:imm32]                   encoding(5 bytes) = be bc 00 00 00
0023h mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0028h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
002ah mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
002dh cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0030h jne short 007ah               ; JNE(Jne_rel8_64) [7Ah:jmp64]                         encoding(2 bytes) = 75 48
0032h xor ebx,ebx                   ; XOR(Xor_r32_rm32) [EBX,EBX]                          encoding(2 bytes) = 33 db
0034h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0036h jle short 0065h               ; JLE(Jle_rel8_64) [65h:jmp64]                         encoding(2 bytes) = 7e 2d
0038h cmp ebx,r9d                   ; CMP(Cmp_r32_rm32) [EBX,R9D]                          encoding(3 bytes) = 41 3b d9
003bh jae near ptr 00d3h            ; JAE(Jae_rel32_64) [D3h:jmp64]                        encoding(6 bytes) = 0f 83 92 00 00 00
0041h movsxd rbp,ebx                ; MOVSXD(Movsxd_r64_rm32) [RBP,EBX]                    encoding(3 bytes) = 48 63 eb
0044h lea rdi,[rax+rbp*8]           ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c e8
0048h mov rsi,[r11+rbp*8]           ; MOV(Mov_r64_rm64) [RSI,mem(64u,R11:br,DS:sr)]        encoding(4 bytes) = 49 8b 34 eb
004ch cmp ebx,r8d                   ; CMP(Cmp_r32_rm32) [EBX,R8D]                          encoding(3 bytes) = 41 3b d8
004fh jae near ptr 00d3h            ; JAE(Jae_rel32_64) [D3h:jmp64]                        encoding(6 bytes) = 0f 83 7e 00 00 00
0055h mov rbp,[r10+rbp*8]           ; MOV(Mov_r64_rm64) [RBP,mem(64u,R10:br,DS:sr)]        encoding(4 bytes) = 49 8b 2c ea
0059h sub rsi,rbp                   ; SUB(Sub_r64_rm64) [RSI,RBP]                          encoding(3 bytes) = 48 2b f5
005ch mov [rdi],rsi                 ; MOV(Mov_rm64_r64) [mem(64u,RDI:br,DS:sr),RSI]        encoding(3 bytes) = 48 89 37
005fh inc ebx                       ; INC(Inc_rm32) [EBX]                                  encoding(2 bytes) = ff c3
0061h cmp ebx,edx                   ; CMP(Cmp_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 3b da
0063h jl short 0038h                ; JL(Jl_rel8_64) [38h:jmp64]                           encoding(2 bytes) = 7c d3
0065h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0068h mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
006ch mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
006fh add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0073h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0074h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0075h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0076h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0077h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0079h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
007ah mov ecx,0E91h                 ; MOV(Mov_r32_imm32) [ECX,e91h:imm32]                  encoding(5 bytes) = b9 91 0e 00 00
007fh mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
0089h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC43000h:jmp64]                encoding(5 bytes) = e8 72 2f c4 5f
008eh mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0091h mov ecx,0E99h                 ; MOV(Mov_r32_imm32) [ECX,e99h:imm32]                  encoding(5 bytes) = b9 99 0e 00 00
0096h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
00a0h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC43000h:jmp64]                encoding(5 bytes) = e8 5b 2f c4 5f
00a5h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00a8h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
00adh mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00b0h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00b4h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00b7h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00b9h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00bbh mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00c0h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00c5h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFD1F8h:jmp64]        encoding(5 bytes) = e8 2e d1 ff ff
00cah mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00cdh call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAF8A70h:jmp64]                encoding(5 bytes) = e8 9e 89 af 5f
00d2h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00d3h call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC42820h:jmp64]                encoding(5 bytes) = e8 48 27 c4 5f
00d8h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> subBytes => new byte[217]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4D,0x8B,0x10,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x1A,0x8B,0x52,0x08,0xBE,0xBC,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x48,0x33,0xDB,0x85,0xD2,0x7E,0x2D,0x41,0x3B,0xD9,0x0F,0x83,0x92,0x00,0x00,0x00,0x48,0x63,0xEB,0x48,0x8D,0x3C,0xE8,0x49,0x8B,0x34,0xEB,0x41,0x3B,0xD8,0x0F,0x83,0x7E,0x00,0x00,0x00,0x49,0x8B,0x2C,0xEA,0x48,0x2B,0xF5,0x48,0x89,0x37,0xFF,0xC3,0x3B,0xDA,0x7C,0xD3,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x91,0x0E,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x72,0x2F,0xC4,0x5F,0x4C,0x8B,0xF0,0xB9,0x99,0x0E,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x5B,0x2F,0xC4,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x2E,0xD1,0xFF,0xFF,0x48,0x8B,0xC8,0xE8,0x9E,0x89,0xAF,0x5F,0xCC,0xE8,0x48,0x27,0xC4,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<float> sub(ReadOnlySpan<float> lhs, ReadOnlySpan<float> rhs, Span<float> dst)
; location: [7FFC7C090F20h, 7FFC7C091001h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
000dh mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
0010h mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
0014h mov r10,[r8]                  ; MOV(Mov_r64_rm64) [R10,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 4d 8b 10
0017h mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
001bh mov r11,[rdx]                 ; MOV(Mov_r64_rm64) [R11,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 1a
001eh mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0021h mov esi,0C4h                  ; MOV(Mov_r32_imm32) [ESI,c4h:imm32]                   encoding(5 bytes) = be c4 00 00 00
0026h mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
002bh mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
002dh mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0030h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0033h jne short 0083h               ; JNE(Jne_rel8_64) [83h:jmp64]                         encoding(2 bytes) = 75 4e
0035h xor ebx,ebx                   ; XOR(Xor_r32_rm32) [EBX,EBX]                          encoding(2 bytes) = 33 db
0037h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0039h jle short 006eh               ; JLE(Jle_rel8_64) [6Eh:jmp64]                         encoding(2 bytes) = 7e 33
003bh cmp ebx,r9d                   ; CMP(Cmp_r32_rm32) [EBX,R9D]                          encoding(3 bytes) = 41 3b d9
003eh jae near ptr 00dch            ; JAE(Jae_rel32_64) [DCh:jmp64]                        encoding(6 bytes) = 0f 83 98 00 00 00
0044h movsxd rbp,ebx                ; MOVSXD(Movsxd_r64_rm32) [RBP,EBX]                    encoding(3 bytes) = 48 63 eb
0047h lea rdi,[rax+rbp*4]           ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c a8
004bh vmovss xmm0,dword ptr [r11+rbp*4]; VMOVSS(VEX_Vmovss_xmm_m32) [XMM0,mem(Float32,R11:br,DS:sr)] encoding(VEX, 6 bytes) = c4 c1 7a 10 04 ab
0051h cmp ebx,r8d                   ; CMP(Cmp_r32_rm32) [EBX,R8D]                          encoding(3 bytes) = 41 3b d8
0054h jae near ptr 00dch            ; JAE(Jae_rel32_64) [DCh:jmp64]                        encoding(6 bytes) = 0f 83 82 00 00 00
005ah vmovss xmm1,dword ptr [r10+rbp*4]; VMOVSS(VEX_Vmovss_xmm_m32) [XMM1,mem(Float32,R10:br,DS:sr)] encoding(VEX, 6 bytes) = c4 c1 7a 10 0c aa
0060h vsubss xmm0,xmm0,xmm1         ; VSUBSS(VEX_Vsubss_xmm_xmm_xmmm32) [XMM0,XMM0,XMM1]   encoding(VEX, 4 bytes) = c5 fa 5c c1
0064h vmovss dword ptr [rdi],xmm0   ; VMOVSS(VEX_Vmovss_m32_xmm) [mem(Float32,RDI:br,DS:sr),XMM0] encoding(VEX, 4 bytes) = c5 fa 11 07
0068h inc ebx                       ; INC(Inc_rm32) [EBX]                                  encoding(2 bytes) = ff c3
006ah cmp ebx,edx                   ; CMP(Cmp_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 3b da
006ch jl short 003bh                ; JL(Jl_rel8_64) [3Bh:jmp64]                           encoding(2 bytes) = 7c cd
006eh mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0071h mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0075h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0078h add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
007ch pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
007dh pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
007eh pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
007fh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0080h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0082h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0083h mov ecx,0E91h                 ; MOV(Mov_r32_imm32) [ECX,e91h:imm32]                  encoding(5 bytes) = b9 91 0e 00 00
0088h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
0092h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC42F00h:jmp64]                encoding(5 bytes) = e8 69 2e c4 5f
0097h mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
009ah mov ecx,0E99h                 ; MOV(Mov_r32_imm32) [ECX,e99h:imm32]                  encoding(5 bytes) = b9 99 0e 00 00
009fh mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
00a9h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC42F00h:jmp64]                encoding(5 bytes) = e8 52 2e c4 5f
00aeh mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00b1h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
00b6h mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00b9h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00bdh mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00c0h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00c2h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00c4h mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00c9h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00ceh call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFD0F8h:jmp64]        encoding(5 bytes) = e8 25 d0 ff ff
00d3h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00d6h call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAF8970h:jmp64]                encoding(5 bytes) = e8 95 88 af 5f
00dbh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00dch call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC42720h:jmp64]                encoding(5 bytes) = e8 3f 26 c4 5f
00e1h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> subBytes => new byte[226]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0xC5,0xF8,0x77,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4D,0x8B,0x10,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x1A,0x8B,0x52,0x08,0xBE,0xC4,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x4E,0x33,0xDB,0x85,0xD2,0x7E,0x33,0x41,0x3B,0xD9,0x0F,0x83,0x98,0x00,0x00,0x00,0x48,0x63,0xEB,0x48,0x8D,0x3C,0xA8,0xC4,0xC1,0x7A,0x10,0x04,0xAB,0x41,0x3B,0xD8,0x0F,0x83,0x82,0x00,0x00,0x00,0xC4,0xC1,0x7A,0x10,0x0C,0xAA,0xC5,0xFA,0x5C,0xC1,0xC5,0xFA,0x11,0x07,0xFF,0xC3,0x3B,0xDA,0x7C,0xCD,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x91,0x0E,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x69,0x2E,0xC4,0x5F,0x4C,0x8B,0xF0,0xB9,0x99,0x0E,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x52,0x2E,0xC4,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x25,0xD0,0xFF,0xFF,0x48,0x8B,0xC8,0xE8,0x95,0x88,0xAF,0x5F,0xCC,0xE8,0x3F,0x26,0xC4,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<double> sub(ReadOnlySpan<double> lhs, ReadOnlySpan<double> rhs, Span<double> dst)
; location: [7FFC7C091430h, 7FFC7C091511h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
000dh mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
0010h mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
0014h mov r10,[r8]                  ; MOV(Mov_r64_rm64) [R10,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 4d 8b 10
0017h mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
001bh mov r11,[rdx]                 ; MOV(Mov_r64_rm64) [R11,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 1a
001eh mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0021h mov esi,0CCh                  ; MOV(Mov_r32_imm32) [ESI,cch:imm32]                   encoding(5 bytes) = be cc 00 00 00
0026h mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
002bh mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
002dh mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0030h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0033h jne short 0083h               ; JNE(Jne_rel8_64) [83h:jmp64]                         encoding(2 bytes) = 75 4e
0035h xor ebx,ebx                   ; XOR(Xor_r32_rm32) [EBX,EBX]                          encoding(2 bytes) = 33 db
0037h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0039h jle short 006eh               ; JLE(Jle_rel8_64) [6Eh:jmp64]                         encoding(2 bytes) = 7e 33
003bh cmp ebx,r9d                   ; CMP(Cmp_r32_rm32) [EBX,R9D]                          encoding(3 bytes) = 41 3b d9
003eh jae near ptr 00dch            ; JAE(Jae_rel32_64) [DCh:jmp64]                        encoding(6 bytes) = 0f 83 98 00 00 00
0044h movsxd rbp,ebx                ; MOVSXD(Movsxd_r64_rm32) [RBP,EBX]                    encoding(3 bytes) = 48 63 eb
0047h lea rdi,[rax+rbp*8]           ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c e8
004bh vmovsd xmm0,qword ptr [r11+rbp*8]; VMOVSD(VEX_Vmovsd_xmm_m64) [XMM0,mem(Float64,R11:br,DS:sr)] encoding(VEX, 6 bytes) = c4 c1 7b 10 04 eb
0051h cmp ebx,r8d                   ; CMP(Cmp_r32_rm32) [EBX,R8D]                          encoding(3 bytes) = 41 3b d8
0054h jae near ptr 00dch            ; JAE(Jae_rel32_64) [DCh:jmp64]                        encoding(6 bytes) = 0f 83 82 00 00 00
005ah vmovsd xmm1,qword ptr [r10+rbp*8]; VMOVSD(VEX_Vmovsd_xmm_m64) [XMM1,mem(Float64,R10:br,DS:sr)] encoding(VEX, 6 bytes) = c4 c1 7b 10 0c ea
0060h vsubsd xmm0,xmm0,xmm1         ; VSUBSD(VEX_Vsubsd_xmm_xmm_xmmm64) [XMM0,XMM0,XMM1]   encoding(VEX, 4 bytes) = c5 fb 5c c1
0064h vmovsd qword ptr [rdi],xmm0   ; VMOVSD(VEX_Vmovsd_m64_xmm) [mem(Float64,RDI:br,DS:sr),XMM0] encoding(VEX, 4 bytes) = c5 fb 11 07
0068h inc ebx                       ; INC(Inc_rm32) [EBX]                                  encoding(2 bytes) = ff c3
006ah cmp ebx,edx                   ; CMP(Cmp_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 3b da
006ch jl short 003bh                ; JL(Jl_rel8_64) [3Bh:jmp64]                           encoding(2 bytes) = 7c cd
006eh mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0071h mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0075h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0078h add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
007ch pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
007dh pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
007eh pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
007fh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0080h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0082h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0083h mov ecx,0E91h                 ; MOV(Mov_r32_imm32) [ECX,e91h:imm32]                  encoding(5 bytes) = b9 91 0e 00 00
0088h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
0092h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC429F0h:jmp64]                encoding(5 bytes) = e8 59 29 c4 5f
0097h mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
009ah mov ecx,0E99h                 ; MOV(Mov_r32_imm32) [ECX,e99h:imm32]                  encoding(5 bytes) = b9 99 0e 00 00
009fh mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
00a9h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC429F0h:jmp64]                encoding(5 bytes) = e8 42 29 c4 5f
00aeh mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00b1h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
00b6h mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00b9h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00bdh mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00c0h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00c2h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00c4h mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00c9h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00ceh call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFCBE8h:jmp64]        encoding(5 bytes) = e8 15 cb ff ff
00d3h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00d6h call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAF8460h:jmp64]                encoding(5 bytes) = e8 85 83 af 5f
00dbh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00dch call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC42210h:jmp64]                encoding(5 bytes) = e8 2f 21 c4 5f
00e1h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> subBytes => new byte[226]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0xC5,0xF8,0x77,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4D,0x8B,0x10,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x1A,0x8B,0x52,0x08,0xBE,0xCC,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x4E,0x33,0xDB,0x85,0xD2,0x7E,0x33,0x41,0x3B,0xD9,0x0F,0x83,0x98,0x00,0x00,0x00,0x48,0x63,0xEB,0x48,0x8D,0x3C,0xE8,0xC4,0xC1,0x7B,0x10,0x04,0xEB,0x41,0x3B,0xD8,0x0F,0x83,0x82,0x00,0x00,0x00,0xC4,0xC1,0x7B,0x10,0x0C,0xEA,0xC5,0xFB,0x5C,0xC1,0xC5,0xFB,0x11,0x07,0xFF,0xC3,0x3B,0xDA,0x7C,0xCD,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x91,0x0E,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x59,0x29,0xC4,0x5F,0x4C,0x8B,0xF0,0xB9,0x99,0x0E,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x42,0x29,0xC4,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x15,0xCB,0xFF,0xFF,0x48,0x8B,0xC8,0xE8,0x85,0x83,0xAF,0x5F,0xCC,0xE8,0x2F,0x21,0xC4,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<sbyte> sub(Span<sbyte> lhs, ReadOnlySpan<sbyte> rhs)
; location: [7FFC7C091530h, 7FFC7C0915F4h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0014h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0017h mov esi,0D4h                  ; MOV(Mov_r32_imm32) [ESI,d4h:imm32]                   encoding(5 bytes) = be d4 00 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
0023h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0026h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0029h jne short 0066h               ; JNE(Jne_rel8_64) [66h:jmp64]                         encoding(2 bytes) = 75 3b
002bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
002eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0030h jle short 0052h               ; JLE(Jle_rel8_64) [52h:jmp64]                         encoding(2 bytes) = 7e 20
0032h movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
0035h lea rbx,[r9+r11]              ; LEA(Lea_r64_m) [RBX,mem(Unknown,R9:br,DS:sr)]        encoding(4 bytes) = 4b 8d 1c 19
0039h cmp r10d,r8d                  ; CMP(Cmp_r32_rm32) [R10D,R8D]                         encoding(3 bytes) = 45 3b d0
003ch jae near ptr 00bfh            ; JAE(Jae_rel32_64) [BFh:jmp64]                        encoding(6 bytes) = 0f 83 7d 00 00 00
0042h movsx r11,byte ptr [rax+r11]  ; MOVSX(Movsx_r64_rm8) [R11,mem(8i,RAX:br,DS:sr)]      encoding(5 bytes) = 4e 0f be 1c 18
0047h sub [rbx],r11b                ; SUB(Sub_rm8_r8) [mem(8u,RBX:br,DS:sr),R11L]          encoding(3 bytes) = 44 28 1b
004ah inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
004dh cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
0050h jl short 0032h                ; JL(Jl_rel8_64) [32h:jmp64]                           encoding(2 bytes) = 7c e0
0052h mov [rcx],r9                  ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R9]         encoding(3 bytes) = 4c 89 09
0055h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
0058h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
005bh add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
005fh pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0060h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0061h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0062h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0063h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0065h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0066h mov ecx,0E91h                 ; MOV(Mov_r32_imm32) [ECX,e91h:imm32]                  encoding(5 bytes) = b9 91 0e 00 00
006bh mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
0075h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC428F0h:jmp64]                encoding(5 bytes) = e8 76 28 c4 5f
007ah mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
007dh mov ecx,0E99h                 ; MOV(Mov_r32_imm32) [ECX,e99h:imm32]                  encoding(5 bytes) = b9 99 0e 00 00
0082h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
008ch call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC428F0h:jmp64]                encoding(5 bytes) = e8 5f 28 c4 5f
0091h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
0094h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
0099h mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
009ch mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00a0h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00a3h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00a5h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00a7h mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00ach mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b1h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFCAE8h:jmp64]        encoding(5 bytes) = e8 32 ca ff ff
00b6h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00b9h call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAF8360h:jmp64]                encoding(5 bytes) = e8 a2 82 af 5f
00beh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00bfh call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC42110h:jmp64]                encoding(5 bytes) = e8 4c 20 c4 5f
00c4h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> subBytes => new byte[197]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x00,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0xBE,0xD4,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x3B,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x20,0x4D,0x63,0xDA,0x4B,0x8D,0x1C,0x19,0x45,0x3B,0xD0,0x0F,0x83,0x7D,0x00,0x00,0x00,0x4E,0x0F,0xBE,0x1C,0x18,0x44,0x28,0x1B,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xE0,0x4C,0x89,0x09,0x89,0x51,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x91,0x0E,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x76,0x28,0xC4,0x5F,0x4C,0x8B,0xF0,0xB9,0x99,0x0E,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x5F,0x28,0xC4,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x32,0xCA,0xFF,0xFF,0x48,0x8B,0xC8,0xE8,0xA2,0x82,0xAF,0x5F,0xCC,0xE8,0x4C,0x20,0xC4,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<byte> sub(Span<byte> lhs, ReadOnlySpan<byte> rhs)
; location: [7FFC7C091620h, 7FFC7C0916E4h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0014h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0017h mov esi,0DCh                  ; MOV(Mov_r32_imm32) [ESI,dch:imm32]                   encoding(5 bytes) = be dc 00 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
0023h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0026h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0029h jne short 0066h               ; JNE(Jne_rel8_64) [66h:jmp64]                         encoding(2 bytes) = 75 3b
002bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
002eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0030h jle short 0052h               ; JLE(Jle_rel8_64) [52h:jmp64]                         encoding(2 bytes) = 7e 20
0032h movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
0035h lea rbx,[r9+r11]              ; LEA(Lea_r64_m) [RBX,mem(Unknown,R9:br,DS:sr)]        encoding(4 bytes) = 4b 8d 1c 19
0039h cmp r10d,r8d                  ; CMP(Cmp_r32_rm32) [R10D,R8D]                         encoding(3 bytes) = 45 3b d0
003ch jae near ptr 00bfh            ; JAE(Jae_rel32_64) [BFh:jmp64]                        encoding(6 bytes) = 0f 83 7d 00 00 00
0042h movzx r11d,byte ptr [rax+r11] ; MOVZX(Movzx_r32_rm8) [R11D,mem(8u,RAX:br,DS:sr)]     encoding(5 bytes) = 46 0f b6 1c 18
0047h sub [rbx],r11b                ; SUB(Sub_rm8_r8) [mem(8u,RBX:br,DS:sr),R11L]          encoding(3 bytes) = 44 28 1b
004ah inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
004dh cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
0050h jl short 0032h                ; JL(Jl_rel8_64) [32h:jmp64]                           encoding(2 bytes) = 7c e0
0052h mov [rcx],r9                  ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R9]         encoding(3 bytes) = 4c 89 09
0055h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
0058h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
005bh add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
005fh pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0060h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0061h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0062h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0063h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0065h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0066h mov ecx,0E91h                 ; MOV(Mov_r32_imm32) [ECX,e91h:imm32]                  encoding(5 bytes) = b9 91 0e 00 00
006bh mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
0075h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC42800h:jmp64]                encoding(5 bytes) = e8 86 27 c4 5f
007ah mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
007dh mov ecx,0E99h                 ; MOV(Mov_r32_imm32) [ECX,e99h:imm32]                  encoding(5 bytes) = b9 99 0e 00 00
0082h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
008ch call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC42800h:jmp64]                encoding(5 bytes) = e8 6f 27 c4 5f
0091h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
0094h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
0099h mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
009ch mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00a0h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00a3h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00a5h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00a7h mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00ach mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b1h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFC9F8h:jmp64]        encoding(5 bytes) = e8 42 c9 ff ff
00b6h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00b9h call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAF8270h:jmp64]                encoding(5 bytes) = e8 b2 81 af 5f
00beh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00bfh call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC42020h:jmp64]                encoding(5 bytes) = e8 5c 1f c4 5f
00c4h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> subBytes => new byte[197]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x00,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0xBE,0xDC,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x3B,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x20,0x4D,0x63,0xDA,0x4B,0x8D,0x1C,0x19,0x45,0x3B,0xD0,0x0F,0x83,0x7D,0x00,0x00,0x00,0x46,0x0F,0xB6,0x1C,0x18,0x44,0x28,0x1B,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xE0,0x4C,0x89,0x09,0x89,0x51,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x91,0x0E,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x86,0x27,0xC4,0x5F,0x4C,0x8B,0xF0,0xB9,0x99,0x0E,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x6F,0x27,0xC4,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x42,0xC9,0xFF,0xFF,0x48,0x8B,0xC8,0xE8,0xB2,0x81,0xAF,0x5F,0xCC,0xE8,0x5C,0x1F,0xC4,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<short> sub(Span<short> lhs, ReadOnlySpan<short> rhs)
; location: [7FFC7C091710h, 7FFC7C0917D5h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0014h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0017h mov esi,0E4h                  ; MOV(Mov_r32_imm32) [ESI,e4h:imm32]                   encoding(5 bytes) = be e4 00 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
0023h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0026h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0029h jne short 0067h               ; JNE(Jne_rel8_64) [67h:jmp64]                         encoding(2 bytes) = 75 3c
002bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
002eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0030h jle short 0053h               ; JLE(Jle_rel8_64) [53h:jmp64]                         encoding(2 bytes) = 7e 21
0032h movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
0035h lea rbx,[r9+r11*2]            ; LEA(Lea_r64_m) [RBX,mem(Unknown,R9:br,DS:sr)]        encoding(4 bytes) = 4b 8d 1c 59
0039h cmp r10d,r8d                  ; CMP(Cmp_r32_rm32) [R10D,R8D]                         encoding(3 bytes) = 45 3b d0
003ch jae near ptr 00c0h            ; JAE(Jae_rel32_64) [C0h:jmp64]                        encoding(6 bytes) = 0f 83 7e 00 00 00
0042h movsx r11,word ptr [rax+r11*2]; MOVSX(Movsx_r64_rm16) [R11,mem(16i,RAX:br,DS:sr)]    encoding(5 bytes) = 4e 0f bf 1c 58
0047h sub [rbx],r11w                ; SUB(Sub_rm16_r16) [mem(16u,RBX:br,DS:sr),R11W]       encoding(4 bytes) = 66 44 29 1b
004bh inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
004eh cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
0051h jl short 0032h                ; JL(Jl_rel8_64) [32h:jmp64]                           encoding(2 bytes) = 7c df
0053h mov [rcx],r9                  ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R9]         encoding(3 bytes) = 4c 89 09
0056h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
0059h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
005ch add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0060h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0061h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0062h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0063h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0064h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0066h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0067h mov ecx,0E91h                 ; MOV(Mov_r32_imm32) [ECX,e91h:imm32]                  encoding(5 bytes) = b9 91 0e 00 00
006ch mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
0076h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC42710h:jmp64]                encoding(5 bytes) = e8 95 26 c4 5f
007bh mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
007eh mov ecx,0E99h                 ; MOV(Mov_r32_imm32) [ECX,e99h:imm32]                  encoding(5 bytes) = b9 99 0e 00 00
0083h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
008dh call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC42710h:jmp64]                encoding(5 bytes) = e8 7e 26 c4 5f
0092h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
0095h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
009ah mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
009dh mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00a1h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00a4h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00a6h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00a8h mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00adh mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b2h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFC908h:jmp64]        encoding(5 bytes) = e8 51 c8 ff ff
00b7h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00bah call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAF8180h:jmp64]                encoding(5 bytes) = e8 c1 80 af 5f
00bfh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00c0h call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC41F30h:jmp64]                encoding(5 bytes) = e8 6b 1e c4 5f
00c5h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> subBytes => new byte[198]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x00,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0xBE,0xE4,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x3C,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x21,0x4D,0x63,0xDA,0x4B,0x8D,0x1C,0x59,0x45,0x3B,0xD0,0x0F,0x83,0x7E,0x00,0x00,0x00,0x4E,0x0F,0xBF,0x1C,0x58,0x66,0x44,0x29,0x1B,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xDF,0x4C,0x89,0x09,0x89,0x51,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x91,0x0E,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x95,0x26,0xC4,0x5F,0x4C,0x8B,0xF0,0xB9,0x99,0x0E,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x7E,0x26,0xC4,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x51,0xC8,0xFF,0xFF,0x48,0x8B,0xC8,0xE8,0xC1,0x80,0xAF,0x5F,0xCC,0xE8,0x6B,0x1E,0xC4,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<ushort> sub(Span<ushort> lhs, ReadOnlySpan<ushort> rhs)
; location: [7FFC7C091800h, 7FFC7C0918C5h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0014h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0017h mov esi,0ECh                  ; MOV(Mov_r32_imm32) [ESI,ech:imm32]                   encoding(5 bytes) = be ec 00 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
0023h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0026h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0029h jne short 0067h               ; JNE(Jne_rel8_64) [67h:jmp64]                         encoding(2 bytes) = 75 3c
002bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
002eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0030h jle short 0053h               ; JLE(Jle_rel8_64) [53h:jmp64]                         encoding(2 bytes) = 7e 21
0032h movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
0035h lea rbx,[r9+r11*2]            ; LEA(Lea_r64_m) [RBX,mem(Unknown,R9:br,DS:sr)]        encoding(4 bytes) = 4b 8d 1c 59
0039h cmp r10d,r8d                  ; CMP(Cmp_r32_rm32) [R10D,R8D]                         encoding(3 bytes) = 45 3b d0
003ch jae near ptr 00c0h            ; JAE(Jae_rel32_64) [C0h:jmp64]                        encoding(6 bytes) = 0f 83 7e 00 00 00
0042h movzx r11d,word ptr [rax+r11*2]; MOVZX(Movzx_r32_rm16) [R11D,mem(16u,RAX:br,DS:sr)]  encoding(5 bytes) = 46 0f b7 1c 58
0047h sub [rbx],r11w                ; SUB(Sub_rm16_r16) [mem(16u,RBX:br,DS:sr),R11W]       encoding(4 bytes) = 66 44 29 1b
004bh inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
004eh cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
0051h jl short 0032h                ; JL(Jl_rel8_64) [32h:jmp64]                           encoding(2 bytes) = 7c df
0053h mov [rcx],r9                  ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R9]         encoding(3 bytes) = 4c 89 09
0056h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
0059h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
005ch add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0060h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0061h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0062h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0063h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0064h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0066h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0067h mov ecx,0E91h                 ; MOV(Mov_r32_imm32) [ECX,e91h:imm32]                  encoding(5 bytes) = b9 91 0e 00 00
006ch mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
0076h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC42620h:jmp64]                encoding(5 bytes) = e8 a5 25 c4 5f
007bh mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
007eh mov ecx,0E99h                 ; MOV(Mov_r32_imm32) [ECX,e99h:imm32]                  encoding(5 bytes) = b9 99 0e 00 00
0083h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
008dh call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC42620h:jmp64]                encoding(5 bytes) = e8 8e 25 c4 5f
0092h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
0095h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
009ah mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
009dh mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00a1h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00a4h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00a6h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00a8h mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00adh mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b2h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFC818h:jmp64]        encoding(5 bytes) = e8 61 c7 ff ff
00b7h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00bah call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAF8090h:jmp64]                encoding(5 bytes) = e8 d1 7f af 5f
00bfh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00c0h call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC41E40h:jmp64]                encoding(5 bytes) = e8 7b 1d c4 5f
00c5h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> subBytes => new byte[198]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x00,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0xBE,0xEC,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x3C,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x21,0x4D,0x63,0xDA,0x4B,0x8D,0x1C,0x59,0x45,0x3B,0xD0,0x0F,0x83,0x7E,0x00,0x00,0x00,0x46,0x0F,0xB7,0x1C,0x58,0x66,0x44,0x29,0x1B,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xDF,0x4C,0x89,0x09,0x89,0x51,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x91,0x0E,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xA5,0x25,0xC4,0x5F,0x4C,0x8B,0xF0,0xB9,0x99,0x0E,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x8E,0x25,0xC4,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x61,0xC7,0xFF,0xFF,0x48,0x8B,0xC8,0xE8,0xD1,0x7F,0xAF,0x5F,0xCC,0xE8,0x7B,0x1D,0xC4,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<uint> sub(Span<uint> lhs, ReadOnlySpan<uint> rhs)
; location: [7FFC7C0919D0h, 7FFC7C091A93h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0014h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0017h mov esi,0FCh                  ; MOV(Mov_r32_imm32) [ESI,fch:imm32]                   encoding(5 bytes) = be fc 00 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
0023h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0026h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0029h jne short 0065h               ; JNE(Jne_rel8_64) [65h:jmp64]                         encoding(2 bytes) = 75 3a
002bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
002eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0030h jle short 0051h               ; JLE(Jle_rel8_64) [51h:jmp64]                         encoding(2 bytes) = 7e 1f
0032h movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
0035h lea rbx,[r9+r11*4]            ; LEA(Lea_r64_m) [RBX,mem(Unknown,R9:br,DS:sr)]        encoding(4 bytes) = 4b 8d 1c 99
0039h cmp r10d,r8d                  ; CMP(Cmp_r32_rm32) [R10D,R8D]                         encoding(3 bytes) = 45 3b d0
003ch jae near ptr 00beh            ; JAE(Jae_rel32_64) [BEh:jmp64]                        encoding(6 bytes) = 0f 83 7c 00 00 00
0042h mov r11d,[rax+r11*4]          ; MOV(Mov_r32_rm32) [R11D,mem(32u,RAX:br,DS:sr)]       encoding(4 bytes) = 46 8b 1c 98
0046h sub [rbx],r11d                ; SUB(Sub_rm32_r32) [mem(32u,RBX:br,DS:sr),R11D]       encoding(3 bytes) = 44 29 1b
0049h inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
004ch cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
004fh jl short 0032h                ; JL(Jl_rel8_64) [32h:jmp64]                           encoding(2 bytes) = 7c e1
0051h mov [rcx],r9                  ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R9]         encoding(3 bytes) = 4c 89 09
0054h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
0057h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
005ah add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
005eh pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
005fh pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0060h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0061h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0062h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0064h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0065h mov ecx,0E91h                 ; MOV(Mov_r32_imm32) [ECX,e91h:imm32]                  encoding(5 bytes) = b9 91 0e 00 00
006ah mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
0074h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC42450h:jmp64]                encoding(5 bytes) = e8 d7 23 c4 5f
0079h mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
007ch mov ecx,0E99h                 ; MOV(Mov_r32_imm32) [ECX,e99h:imm32]                  encoding(5 bytes) = b9 99 0e 00 00
0081h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
008bh call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC42450h:jmp64]                encoding(5 bytes) = e8 c0 23 c4 5f
0090h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
0093h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
0098h mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
009bh mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
009fh mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00a2h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00a4h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00a6h mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00abh mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b0h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFC648h:jmp64]        encoding(5 bytes) = e8 93 c5 ff ff
00b5h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00b8h call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAF7EC0h:jmp64]                encoding(5 bytes) = e8 03 7e af 5f
00bdh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00beh call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC41C70h:jmp64]                encoding(5 bytes) = e8 ad 1b c4 5f
00c3h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> subBytes => new byte[196]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x00,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0xBE,0xFC,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x3A,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x1F,0x4D,0x63,0xDA,0x4B,0x8D,0x1C,0x99,0x45,0x3B,0xD0,0x0F,0x83,0x7C,0x00,0x00,0x00,0x46,0x8B,0x1C,0x98,0x44,0x29,0x1B,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xE1,0x4C,0x89,0x09,0x89,0x51,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x91,0x0E,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xD7,0x23,0xC4,0x5F,0x4C,0x8B,0xF0,0xB9,0x99,0x0E,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xC0,0x23,0xC4,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x93,0xC5,0xFF,0xFF,0x48,0x8B,0xC8,0xE8,0x03,0x7E,0xAF,0x5F,0xCC,0xE8,0xAD,0x1B,0xC4,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<long> sub(Span<long> lhs, ReadOnlySpan<long> rhs)
; location: [7FFC7C091AB0h, 7FFC7C091B73h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0014h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0017h mov esi,104h                  ; MOV(Mov_r32_imm32) [ESI,104h:imm32]                  encoding(5 bytes) = be 04 01 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
0023h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0026h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0029h jne short 0065h               ; JNE(Jne_rel8_64) [65h:jmp64]                         encoding(2 bytes) = 75 3a
002bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
002eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0030h jle short 0051h               ; JLE(Jle_rel8_64) [51h:jmp64]                         encoding(2 bytes) = 7e 1f
0032h movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
0035h lea rbx,[r9+r11*8]            ; LEA(Lea_r64_m) [RBX,mem(Unknown,R9:br,DS:sr)]        encoding(4 bytes) = 4b 8d 1c d9
0039h cmp r10d,r8d                  ; CMP(Cmp_r32_rm32) [R10D,R8D]                         encoding(3 bytes) = 45 3b d0
003ch jae near ptr 00beh            ; JAE(Jae_rel32_64) [BEh:jmp64]                        encoding(6 bytes) = 0f 83 7c 00 00 00
0042h mov r11,[rax+r11*8]           ; MOV(Mov_r64_rm64) [R11,mem(64u,RAX:br,DS:sr)]        encoding(4 bytes) = 4e 8b 1c d8
0046h sub [rbx],r11                 ; SUB(Sub_rm64_r64) [mem(64u,RBX:br,DS:sr),R11]        encoding(3 bytes) = 4c 29 1b
0049h inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
004ch cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
004fh jl short 0032h                ; JL(Jl_rel8_64) [32h:jmp64]                           encoding(2 bytes) = 7c e1
0051h mov [rcx],r9                  ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R9]         encoding(3 bytes) = 4c 89 09
0054h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
0057h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
005ah add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
005eh pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
005fh pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0060h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0061h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0062h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0064h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0065h mov ecx,0E91h                 ; MOV(Mov_r32_imm32) [ECX,e91h:imm32]                  encoding(5 bytes) = b9 91 0e 00 00
006ah mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
0074h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC42370h:jmp64]                encoding(5 bytes) = e8 f7 22 c4 5f
0079h mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
007ch mov ecx,0E99h                 ; MOV(Mov_r32_imm32) [ECX,e99h:imm32]                  encoding(5 bytes) = b9 99 0e 00 00
0081h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
008bh call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC42370h:jmp64]                encoding(5 bytes) = e8 e0 22 c4 5f
0090h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
0093h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
0098h mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
009bh mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
009fh mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00a2h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00a4h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00a6h mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00abh mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b0h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFC568h:jmp64]        encoding(5 bytes) = e8 b3 c4 ff ff
00b5h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00b8h call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAF7DE0h:jmp64]                encoding(5 bytes) = e8 23 7d af 5f
00bdh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00beh call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC41B90h:jmp64]                encoding(5 bytes) = e8 cd 1a c4 5f
00c3h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> subBytes => new byte[196]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x00,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0xBE,0x04,0x01,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x3A,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x1F,0x4D,0x63,0xDA,0x4B,0x8D,0x1C,0xD9,0x45,0x3B,0xD0,0x0F,0x83,0x7C,0x00,0x00,0x00,0x4E,0x8B,0x1C,0xD8,0x4C,0x29,0x1B,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xE1,0x4C,0x89,0x09,0x89,0x51,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x91,0x0E,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xF7,0x22,0xC4,0x5F,0x4C,0x8B,0xF0,0xB9,0x99,0x0E,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xE0,0x22,0xC4,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0xB3,0xC4,0xFF,0xFF,0x48,0x8B,0xC8,0xE8,0x23,0x7D,0xAF,0x5F,0xCC,0xE8,0xCD,0x1A,0xC4,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<double> sub(Span<double> lhs, ReadOnlySpan<double> rhs)
; location: [7FFC7C091D60h, 7FFC7C091E2Dh]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
000dh mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
0010h mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0014h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0017h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
001ah mov esi,11Ch                  ; MOV(Mov_r32_imm32) [ESI,11ch:imm32]                  encoding(5 bytes) = be 1c 01 00 00
001fh mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0024h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
0026h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0029h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
002ch jne short 006fh               ; JNE(Jne_rel8_64) [6Fh:jmp64]                         encoding(2 bytes) = 75 41
002eh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
0031h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0033h jle short 005bh               ; JLE(Jle_rel8_64) [5Bh:jmp64]                         encoding(2 bytes) = 7e 26
0035h movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
0038h lea rbx,[r9+r11*8]            ; LEA(Lea_r64_m) [RBX,mem(Unknown,R9:br,DS:sr)]        encoding(4 bytes) = 4b 8d 1c d9
003ch vmovsd xmm0,qword ptr [rbx]   ; VMOVSD(VEX_Vmovsd_xmm_m64) [XMM0,mem(Float64,RBX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fb 10 03
0040h cmp r10d,r8d                  ; CMP(Cmp_r32_rm32) [R10D,R8D]                         encoding(3 bytes) = 45 3b d0
0043h jae near ptr 00c8h            ; JAE(Jae_rel32_64) [C8h:jmp64]                        encoding(6 bytes) = 0f 83 7f 00 00 00
0049h vsubsd xmm0,xmm0,qword ptr [rax+r11*8]; VSUBSD(VEX_Vsubsd_xmm_xmm_xmmm64) [XMM0,XMM0,mem(Float64,RAX:br,DS:sr)] encoding(VEX, 6 bytes) = c4 a1 7b 5c 04 d8
004fh vmovsd qword ptr [rbx],xmm0   ; VMOVSD(VEX_Vmovsd_m64_xmm) [mem(Float64,RBX:br,DS:sr),XMM0] encoding(VEX, 4 bytes) = c5 fb 11 03
0053h inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
0056h cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
0059h jl short 0035h                ; JL(Jl_rel8_64) [35h:jmp64]                           encoding(2 bytes) = 7c da
005bh mov [rcx],r9                  ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R9]         encoding(3 bytes) = 4c 89 09
005eh mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
0061h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0064h add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0068h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0069h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
006ah pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
006bh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
006ch pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
006eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
006fh mov ecx,0E91h                 ; MOV(Mov_r32_imm32) [ECX,e91h:imm32]                  encoding(5 bytes) = b9 91 0e 00 00
0074h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
007eh call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC420C0h:jmp64]                encoding(5 bytes) = e8 3d 20 c4 5f
0083h mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0086h mov ecx,0E99h                 ; MOV(Mov_r32_imm32) [ECX,e99h:imm32]                  encoding(5 bytes) = b9 99 0e 00 00
008bh mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
0095h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC420C0h:jmp64]                encoding(5 bytes) = e8 26 20 c4 5f
009ah mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
009dh lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
00a2h mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00a5h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00a9h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00ach mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00aeh mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00b0h mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00b5h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00bah call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFC2B8h:jmp64]        encoding(5 bytes) = e8 f9 c1 ff ff
00bfh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00c2h call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAF7B30h:jmp64]                encoding(5 bytes) = e8 69 7a af 5f
00c7h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00c8h call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC418E0h:jmp64]                encoding(5 bytes) = e8 13 18 c4 5f
00cdh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> subBytes => new byte[206]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0xC5,0xF8,0x77,0x49,0x8B,0x00,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0xBE,0x1C,0x01,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x41,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x26,0x4D,0x63,0xDA,0x4B,0x8D,0x1C,0xD9,0xC5,0xFB,0x10,0x03,0x45,0x3B,0xD0,0x0F,0x83,0x7F,0x00,0x00,0x00,0xC4,0xA1,0x7B,0x5C,0x04,0xD8,0xC5,0xFB,0x11,0x03,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xDA,0x4C,0x89,0x09,0x89,0x51,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x91,0x0E,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x3D,0x20,0xC4,0x5F,0x4C,0x8B,0xF0,0xB9,0x99,0x0E,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x26,0x20,0xC4,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0xF9,0xC1,0xFF,0xFF,0x48,0x8B,0xC8,0xE8,0x69,0x7A,0xAF,0x5F,0xCC,0xE8,0x13,0x18,0xC4,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: sbyte sum(ReadOnlySpan<sbyte> src)
; location: [7FFC7C091E50h, 7FFC7C091E92h]
0000h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0004h nop                           ; NOP(Nopd)                                            encoding(1 byte ) = 90
0005h mov rax,[rcx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 01
0008h mov edx,[rcx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 51 08
000bh xor ecx,ecx                   ; XOR(Xor_r32_rm32) [ECX,ECX]                          encoding(2 bytes) = 33 c9
000dh xor r8d,r8d                   ; XOR(Xor_r32_rm32) [R8D,R8D]                          encoding(3 bytes) = 45 33 c0
0010h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0012h jle short 0036h               ; JLE(Jle_rel8_64) [36h:jmp64]                         encoding(2 bytes) = 7e 22
0014h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0017h movsx r9,byte ptr [rax+r9]    ; MOVSX(Movsx_r64_rm8) [R9,mem(8i,RAX:br,DS:sr)]       encoding(5 bytes) = 4e 0f be 0c 08
001ch add ecx,r9d                   ; ADD(Add_r32_rm32) [ECX,R9D]                          encoding(3 bytes) = 41 03 c9
001fh jo short 003dh                ; JO(Jo_rel8_64) [3Dh:jmp64]                           encoding(2 bytes) = 70 1c
0021h cmp ecx,7Fh                   ; CMP(Cmp_rm32_imm8) [ECX,7fh:imm32]                   encoding(3 bytes) = 83 f9 7f
0024h jg short 003dh                ; JG(Jg_rel8_64) [3Dh:jmp64]                           encoding(2 bytes) = 7f 17
0026h cmp ecx,0FFFFFF80h            ; CMP(Cmp_rm32_imm8) [ECX,ffffffffffffff80h:imm32]     encoding(3 bytes) = 83 f9 80
0029h jl short 003dh                ; JL(Jl_rel8_64) [3Dh:jmp64]                           encoding(2 bytes) = 7c 12
002bh add r8d,1                     ; ADD(Add_rm32_imm8) [R8D,1h:imm32]                    encoding(4 bytes) = 41 83 c0 01
002fh jo short 003dh                ; JO(Jo_rel8_64) [3Dh:jmp64]                           encoding(2 bytes) = 70 0c
0031h cmp r8d,edx                   ; CMP(Cmp_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 3b c2
0034h jl short 0014h                ; JL(Jl_rel8_64) [14h:jmp64]                           encoding(2 bytes) = 7c de
0036h mov eax,ecx                   ; MOV(Mov_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 8b c1
0038h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
003ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
003dh call 7FFCDBCD3490h            ; CALL(Call_rel32_64) [5FC41640h:jmp64]                encoding(5 bytes) = e8 fe 15 c4 5f
0042h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> sumBytes => new byte[67]{0x48,0x83,0xEC,0x28,0x90,0x48,0x8B,0x01,0x8B,0x51,0x08,0x33,0xC9,0x45,0x33,0xC0,0x85,0xD2,0x7E,0x22,0x4D,0x63,0xC8,0x4E,0x0F,0xBE,0x0C,0x08,0x41,0x03,0xC9,0x70,0x1C,0x83,0xF9,0x7F,0x7F,0x17,0x83,0xF9,0x80,0x7C,0x12,0x41,0x83,0xC0,0x01,0x70,0x0C,0x44,0x3B,0xC2,0x7C,0xDE,0x8B,0xC1,0x48,0x83,0xC4,0x28,0xC3,0xE8,0xFE,0x15,0xC4,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: byte sum(ReadOnlySpan<byte> src)
; location: [7FFC7C091EB0h, 7FFC7C091EF0h]
0000h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0004h nop                           ; NOP(Nopd)                                            encoding(1 byte ) = 90
0005h mov rax,[rcx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 01
0008h mov edx,[rcx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 51 08
000bh xor ecx,ecx                   ; XOR(Xor_r32_rm32) [ECX,ECX]                          encoding(2 bytes) = 33 c9
000dh xor r8d,r8d                   ; XOR(Xor_r32_rm32) [R8D,R8D]                          encoding(3 bytes) = 45 33 c0
0010h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0012h jle short 0034h               ; JLE(Jle_rel8_64) [34h:jmp64]                         encoding(2 bytes) = 7e 20
0014h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0017h movzx r9d,byte ptr [rax+r9]   ; MOVZX(Movzx_r32_rm8) [R9D,mem(8u,RAX:br,DS:sr)]      encoding(5 bytes) = 46 0f b6 0c 08
001ch add ecx,r9d                   ; ADD(Add_r32_rm32) [ECX,R9D]                          encoding(3 bytes) = 41 03 c9
001fh jo short 003bh                ; JO(Jo_rel8_64) [3Bh:jmp64]                           encoding(2 bytes) = 70 1a
0021h cmp ecx,0FFh                  ; CMP(Cmp_rm32_imm32) [ECX,ffh:imm32]                  encoding(6 bytes) = 81 f9 ff 00 00 00
0027h ja short 003bh                ; JA(Ja_rel8_64) [3Bh:jmp64]                           encoding(2 bytes) = 77 12
0029h add r8d,1                     ; ADD(Add_rm32_imm8) [R8D,1h:imm32]                    encoding(4 bytes) = 41 83 c0 01
002dh jo short 003bh                ; JO(Jo_rel8_64) [3Bh:jmp64]                           encoding(2 bytes) = 70 0c
002fh cmp r8d,edx                   ; CMP(Cmp_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 3b c2
0032h jl short 0014h                ; JL(Jl_rel8_64) [14h:jmp64]                           encoding(2 bytes) = 7c e0
0034h mov eax,ecx                   ; MOV(Mov_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 8b c1
0036h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
003ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
003bh call 7FFCDBCD3490h            ; CALL(Call_rel32_64) [5FC415E0h:jmp64]                encoding(5 bytes) = e8 a0 15 c4 5f
0040h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> sumBytes => new byte[65]{0x48,0x83,0xEC,0x28,0x90,0x48,0x8B,0x01,0x8B,0x51,0x08,0x33,0xC9,0x45,0x33,0xC0,0x85,0xD2,0x7E,0x20,0x4D,0x63,0xC8,0x46,0x0F,0xB6,0x0C,0x08,0x41,0x03,0xC9,0x70,0x1A,0x81,0xF9,0xFF,0x00,0x00,0x00,0x77,0x12,0x41,0x83,0xC0,0x01,0x70,0x0C,0x44,0x3B,0xC2,0x7C,0xE0,0x8B,0xC1,0x48,0x83,0xC4,0x28,0xC3,0xE8,0xA0,0x15,0xC4,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: short sum(ReadOnlySpan<short> src)
; location: [7FFC7C091F10h, 7FFC7C091F58h]
0000h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0004h nop                           ; NOP(Nopd)                                            encoding(1 byte ) = 90
0005h mov rax,[rcx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 01
0008h mov edx,[rcx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 51 08
000bh xor ecx,ecx                   ; XOR(Xor_r32_rm32) [ECX,ECX]                          encoding(2 bytes) = 33 c9
000dh xor r8d,r8d                   ; XOR(Xor_r32_rm32) [R8D,R8D]                          encoding(3 bytes) = 45 33 c0
0010h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0012h jle short 003ch               ; JLE(Jle_rel8_64) [3Ch:jmp64]                         encoding(2 bytes) = 7e 28
0014h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0017h movsx r9,word ptr [rax+r9*2]  ; MOVSX(Movsx_r64_rm16) [R9,mem(16i,RAX:br,DS:sr)]     encoding(5 bytes) = 4e 0f bf 0c 48
001ch add ecx,r9d                   ; ADD(Add_r32_rm32) [ECX,R9D]                          encoding(3 bytes) = 41 03 c9
001fh jo short 0043h                ; JO(Jo_rel8_64) [43h:jmp64]                           encoding(2 bytes) = 70 22
0021h cmp ecx,7FFFh                 ; CMP(Cmp_rm32_imm32) [ECX,7fffh:imm32]                encoding(6 bytes) = 81 f9 ff 7f 00 00
0027h jg short 0043h                ; JG(Jg_rel8_64) [43h:jmp64]                           encoding(2 bytes) = 7f 1a
0029h cmp ecx,0FFFF8000h            ; CMP(Cmp_rm32_imm32) [ECX,ffff8000h:imm32]            encoding(6 bytes) = 81 f9 00 80 ff ff
002fh jl short 0043h                ; JL(Jl_rel8_64) [43h:jmp64]                           encoding(2 bytes) = 7c 12
0031h add r8d,1                     ; ADD(Add_rm32_imm8) [R8D,1h:imm32]                    encoding(4 bytes) = 41 83 c0 01
0035h jo short 0043h                ; JO(Jo_rel8_64) [43h:jmp64]                           encoding(2 bytes) = 70 0c
0037h cmp r8d,edx                   ; CMP(Cmp_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 3b c2
003ah jl short 0014h                ; JL(Jl_rel8_64) [14h:jmp64]                           encoding(2 bytes) = 7c d8
003ch mov eax,ecx                   ; MOV(Mov_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 8b c1
003eh add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
0042h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0043h call 7FFCDBCD3490h            ; CALL(Call_rel32_64) [5FC41580h:jmp64]                encoding(5 bytes) = e8 38 15 c4 5f
0048h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> sumBytes => new byte[73]{0x48,0x83,0xEC,0x28,0x90,0x48,0x8B,0x01,0x8B,0x51,0x08,0x33,0xC9,0x45,0x33,0xC0,0x85,0xD2,0x7E,0x28,0x4D,0x63,0xC8,0x4E,0x0F,0xBF,0x0C,0x48,0x41,0x03,0xC9,0x70,0x22,0x81,0xF9,0xFF,0x7F,0x00,0x00,0x7F,0x1A,0x81,0xF9,0x00,0x80,0xFF,0xFF,0x7C,0x12,0x41,0x83,0xC0,0x01,0x70,0x0C,0x44,0x3B,0xC2,0x7C,0xD8,0x8B,0xC1,0x48,0x83,0xC4,0x28,0xC3,0xE8,0x38,0x15,0xC4,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ushort sum(ReadOnlySpan<ushort> src)
; location: [7FFC7C091F70h, 7FFC7C091FB0h]
0000h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0004h nop                           ; NOP(Nopd)                                            encoding(1 byte ) = 90
0005h mov rax,[rcx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 01
0008h mov edx,[rcx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 51 08
000bh xor ecx,ecx                   ; XOR(Xor_r32_rm32) [ECX,ECX]                          encoding(2 bytes) = 33 c9
000dh xor r8d,r8d                   ; XOR(Xor_r32_rm32) [R8D,R8D]                          encoding(3 bytes) = 45 33 c0
0010h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0012h jle short 0034h               ; JLE(Jle_rel8_64) [34h:jmp64]                         encoding(2 bytes) = 7e 20
0014h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0017h movzx r9d,word ptr [rax+r9*2] ; MOVZX(Movzx_r32_rm16) [R9D,mem(16u,RAX:br,DS:sr)]    encoding(5 bytes) = 46 0f b7 0c 48
001ch add ecx,r9d                   ; ADD(Add_r32_rm32) [ECX,R9D]                          encoding(3 bytes) = 41 03 c9
001fh jo short 003bh                ; JO(Jo_rel8_64) [3Bh:jmp64]                           encoding(2 bytes) = 70 1a
0021h cmp ecx,0FFFFh                ; CMP(Cmp_rm32_imm32) [ECX,ffffh:imm32]                encoding(6 bytes) = 81 f9 ff ff 00 00
0027h ja short 003bh                ; JA(Ja_rel8_64) [3Bh:jmp64]                           encoding(2 bytes) = 77 12
0029h add r8d,1                     ; ADD(Add_rm32_imm8) [R8D,1h:imm32]                    encoding(4 bytes) = 41 83 c0 01
002dh jo short 003bh                ; JO(Jo_rel8_64) [3Bh:jmp64]                           encoding(2 bytes) = 70 0c
002fh cmp r8d,edx                   ; CMP(Cmp_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 3b c2
0032h jl short 0014h                ; JL(Jl_rel8_64) [14h:jmp64]                           encoding(2 bytes) = 7c e0
0034h mov eax,ecx                   ; MOV(Mov_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 8b c1
0036h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
003ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
003bh call 7FFCDBCD3490h            ; CALL(Call_rel32_64) [5FC41520h:jmp64]                encoding(5 bytes) = e8 e0 14 c4 5f
0040h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> sumBytes => new byte[65]{0x48,0x83,0xEC,0x28,0x90,0x48,0x8B,0x01,0x8B,0x51,0x08,0x33,0xC9,0x45,0x33,0xC0,0x85,0xD2,0x7E,0x20,0x4D,0x63,0xC8,0x46,0x0F,0xB7,0x0C,0x48,0x41,0x03,0xC9,0x70,0x1A,0x81,0xF9,0xFF,0xFF,0x00,0x00,0x77,0x12,0x41,0x83,0xC0,0x01,0x70,0x0C,0x44,0x3B,0xC2,0x7C,0xE0,0x8B,0xC1,0x48,0x83,0xC4,0x28,0xC3,0xE8,0xE0,0x14,0xC4,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: int sum(ReadOnlySpan<int> src)
; location: [7FFC7C091FD0h, 7FFC7C092004h]
0000h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0004h nop                           ; NOP(Nopd)                                            encoding(1 byte ) = 90
0005h mov rax,[rcx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 01
0008h mov edx,[rcx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 51 08
000bh xor ecx,ecx                   ; XOR(Xor_r32_rm32) [ECX,ECX]                          encoding(2 bytes) = 33 c9
000dh xor r8d,r8d                   ; XOR(Xor_r32_rm32) [R8D,R8D]                          encoding(3 bytes) = 45 33 c0
0010h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0012h jle short 0028h               ; JLE(Jle_rel8_64) [28h:jmp64]                         encoding(2 bytes) = 7e 14
0014h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0017h add ecx,[rax+r9*4]            ; ADD(Add_r32_rm32) [ECX,mem(32u,RAX:br,DS:sr)]        encoding(4 bytes) = 42 03 0c 88
001bh jo short 002fh                ; JO(Jo_rel8_64) [2Fh:jmp64]                           encoding(2 bytes) = 70 12
001dh add r8d,1                     ; ADD(Add_rm32_imm8) [R8D,1h:imm32]                    encoding(4 bytes) = 41 83 c0 01
0021h jo short 002fh                ; JO(Jo_rel8_64) [2Fh:jmp64]                           encoding(2 bytes) = 70 0c
0023h cmp r8d,edx                   ; CMP(Cmp_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 3b c2
0026h jl short 0014h                ; JL(Jl_rel8_64) [14h:jmp64]                           encoding(2 bytes) = 7c ec
0028h mov eax,ecx                   ; MOV(Mov_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 8b c1
002ah add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
002eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
002fh call 7FFCDBCD3490h            ; CALL(Call_rel32_64) [5FC414C0h:jmp64]                encoding(5 bytes) = e8 8c 14 c4 5f
0034h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> sumBytes => new byte[53]{0x48,0x83,0xEC,0x28,0x90,0x48,0x8B,0x01,0x8B,0x51,0x08,0x33,0xC9,0x45,0x33,0xC0,0x85,0xD2,0x7E,0x14,0x4D,0x63,0xC8,0x42,0x03,0x0C,0x88,0x70,0x12,0x41,0x83,0xC0,0x01,0x70,0x0C,0x44,0x3B,0xC2,0x7C,0xEC,0x8B,0xC1,0x48,0x83,0xC4,0x28,0xC3,0xE8,0x8C,0x14,0xC4,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: uint sum(ReadOnlySpan<uint> src)
; location: [7FFC7C092020h, 7FFC7C092054h]
0000h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0004h nop                           ; NOP(Nopd)                                            encoding(1 byte ) = 90
0005h mov rax,[rcx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 01
0008h mov edx,[rcx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 51 08
000bh xor ecx,ecx                   ; XOR(Xor_r32_rm32) [ECX,ECX]                          encoding(2 bytes) = 33 c9
000dh xor r8d,r8d                   ; XOR(Xor_r32_rm32) [R8D,R8D]                          encoding(3 bytes) = 45 33 c0
0010h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0012h jle short 0028h               ; JLE(Jle_rel8_64) [28h:jmp64]                         encoding(2 bytes) = 7e 14
0014h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0017h add ecx,[rax+r9*4]            ; ADD(Add_r32_rm32) [ECX,mem(32u,RAX:br,DS:sr)]        encoding(4 bytes) = 42 03 0c 88
001bh jb short 002fh                ; JB(Jb_rel8_64) [2Fh:jmp64]                           encoding(2 bytes) = 72 12
001dh add r8d,1                     ; ADD(Add_rm32_imm8) [R8D,1h:imm32]                    encoding(4 bytes) = 41 83 c0 01
0021h jo short 002fh                ; JO(Jo_rel8_64) [2Fh:jmp64]                           encoding(2 bytes) = 70 0c
0023h cmp r8d,edx                   ; CMP(Cmp_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 3b c2
0026h jl short 0014h                ; JL(Jl_rel8_64) [14h:jmp64]                           encoding(2 bytes) = 7c ec
0028h mov eax,ecx                   ; MOV(Mov_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 8b c1
002ah add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
002eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
002fh call 7FFCDBCD3490h            ; CALL(Call_rel32_64) [5FC41470h:jmp64]                encoding(5 bytes) = e8 3c 14 c4 5f
0034h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> sumBytes => new byte[53]{0x48,0x83,0xEC,0x28,0x90,0x48,0x8B,0x01,0x8B,0x51,0x08,0x33,0xC9,0x45,0x33,0xC0,0x85,0xD2,0x7E,0x14,0x4D,0x63,0xC8,0x42,0x03,0x0C,0x88,0x72,0x12,0x41,0x83,0xC0,0x01,0x70,0x0C,0x44,0x3B,0xC2,0x7C,0xEC,0x8B,0xC1,0x48,0x83,0xC4,0x28,0xC3,0xE8,0x3C,0x14,0xC4,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ulong sum(ReadOnlySpan<ulong> src)
; location: [7FFC7C0920C0h, 7FFC7C0920F5h]
0000h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0004h nop                           ; NOP(Nopd)                                            encoding(1 byte ) = 90
0005h mov rax,[rcx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 01
0008h mov edx,[rcx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 51 08
000bh xor ecx,ecx                   ; XOR(Xor_r32_rm32) [ECX,ECX]                          encoding(2 bytes) = 33 c9
000dh xor r8d,r8d                   ; XOR(Xor_r32_rm32) [R8D,R8D]                          encoding(3 bytes) = 45 33 c0
0010h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0012h jle short 0028h               ; JLE(Jle_rel8_64) [28h:jmp64]                         encoding(2 bytes) = 7e 14
0014h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0017h add rcx,[rax+r9*8]            ; ADD(Add_r64_rm64) [RCX,mem(64u,RAX:br,DS:sr)]        encoding(4 bytes) = 4a 03 0c c8
001bh jb short 0030h                ; JB(Jb_rel8_64) [30h:jmp64]                           encoding(2 bytes) = 72 13
001dh add r8d,1                     ; ADD(Add_rm32_imm8) [R8D,1h:imm32]                    encoding(4 bytes) = 41 83 c0 01
0021h jo short 0030h                ; JO(Jo_rel8_64) [30h:jmp64]                           encoding(2 bytes) = 70 0d
0023h cmp r8d,edx                   ; CMP(Cmp_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 3b c2
0026h jl short 0014h                ; JL(Jl_rel8_64) [14h:jmp64]                           encoding(2 bytes) = 7c ec
0028h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
002bh add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
002fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0030h call 7FFCDBCD3490h            ; CALL(Call_rel32_64) [5FC413D0h:jmp64]                encoding(5 bytes) = e8 9b 13 c4 5f
0035h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> sumBytes => new byte[54]{0x48,0x83,0xEC,0x28,0x90,0x48,0x8B,0x01,0x8B,0x51,0x08,0x33,0xC9,0x45,0x33,0xC0,0x85,0xD2,0x7E,0x14,0x4D,0x63,0xC8,0x4A,0x03,0x0C,0xC8,0x72,0x13,0x41,0x83,0xC0,0x01,0x70,0x0D,0x44,0x3B,0xC2,0x7C,0xEC,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x28,0xC3,0xE8,0x9B,0x13,0xC4,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: float sum(ReadOnlySpan<float> src)
; location: [7FFC7C092110h, 7FFC7C092143h]
0000h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0004h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0007h mov rax,[rcx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 01
000ah mov edx,[rcx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 51 08
000dh vxorps xmm0,xmm0,xmm0         ; VXORPS(VEX_Vxorps_xmm_xmm_xmmm128) [XMM0,XMM0,XMM0]  encoding(VEX, 4 bytes) = c5 f8 57 c0
0011h xor ecx,ecx                   ; XOR(Xor_r32_rm32) [ECX,ECX]                          encoding(2 bytes) = 33 c9
0013h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0015h jle short 0029h               ; JLE(Jle_rel8_64) [29h:jmp64]                         encoding(2 bytes) = 7e 12
0017h movsxd r8,ecx                 ; MOVSXD(Movsxd_r64_rm32) [R8,ECX]                     encoding(3 bytes) = 4c 63 c1
001ah vaddss xmm0,xmm0,dword ptr [rax+r8*4]; VADDSS(VEX_Vaddss_xmm_xmm_xmmm32) [XMM0,XMM0,mem(Float32,RAX:br,DS:sr)] encoding(VEX, 6 bytes) = c4 a1 7a 58 04 80
0020h add ecx,1                     ; ADD(Add_rm32_imm8) [ECX,1h:imm32]                    encoding(3 bytes) = 83 c1 01
0023h jo short 002eh                ; JO(Jo_rel8_64) [2Eh:jmp64]                           encoding(2 bytes) = 70 09
0025h cmp ecx,edx                   ; CMP(Cmp_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 3b ca
0027h jl short 0017h                ; JL(Jl_rel8_64) [17h:jmp64]                           encoding(2 bytes) = 7c ee
0029h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
002dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
002eh call 7FFCDBCD3490h            ; CALL(Call_rel32_64) [5FC41380h:jmp64]                encoding(5 bytes) = e8 4d 13 c4 5f
0033h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> sumBytes => new byte[52]{0x48,0x83,0xEC,0x28,0xC5,0xF8,0x77,0x48,0x8B,0x01,0x8B,0x51,0x08,0xC5,0xF8,0x57,0xC0,0x33,0xC9,0x85,0xD2,0x7E,0x12,0x4C,0x63,0xC1,0xC4,0xA1,0x7A,0x58,0x04,0x80,0x83,0xC1,0x01,0x70,0x09,0x3B,0xCA,0x7C,0xEE,0x48,0x83,0xC4,0x28,0xC3,0xE8,0x4D,0x13,0xC4,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: double sum(ReadOnlySpan<double> src)
; location: [7FFC7C092160h, 7FFC7C092193h]
0000h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0004h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0007h mov rax,[rcx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 01
000ah mov edx,[rcx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 51 08
000dh vxorps xmm0,xmm0,xmm0         ; VXORPS(VEX_Vxorps_xmm_xmm_xmmm128) [XMM0,XMM0,XMM0]  encoding(VEX, 4 bytes) = c5 f8 57 c0
0011h xor ecx,ecx                   ; XOR(Xor_r32_rm32) [ECX,ECX]                          encoding(2 bytes) = 33 c9
0013h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0015h jle short 0029h               ; JLE(Jle_rel8_64) [29h:jmp64]                         encoding(2 bytes) = 7e 12
0017h movsxd r8,ecx                 ; MOVSXD(Movsxd_r64_rm32) [R8,ECX]                     encoding(3 bytes) = 4c 63 c1
001ah vaddsd xmm0,xmm0,qword ptr [rax+r8*8]; VADDSD(VEX_Vaddsd_xmm_xmm_xmmm64) [XMM0,XMM0,mem(Float64,RAX:br,DS:sr)] encoding(VEX, 6 bytes) = c4 a1 7b 58 04 c0
0020h add ecx,1                     ; ADD(Add_rm32_imm8) [ECX,1h:imm32]                    encoding(3 bytes) = 83 c1 01
0023h jo short 002eh                ; JO(Jo_rel8_64) [2Eh:jmp64]                           encoding(2 bytes) = 70 09
0025h cmp ecx,edx                   ; CMP(Cmp_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 3b ca
0027h jl short 0017h                ; JL(Jl_rel8_64) [17h:jmp64]                           encoding(2 bytes) = 7c ee
0029h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
002dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
002eh call 7FFCDBCD3490h            ; CALL(Call_rel32_64) [5FC41330h:jmp64]                encoding(5 bytes) = e8 fd 12 c4 5f
0033h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> sumBytes => new byte[52]{0x48,0x83,0xEC,0x28,0xC5,0xF8,0x77,0x48,0x8B,0x01,0x8B,0x51,0x08,0xC5,0xF8,0x57,0xC0,0x33,0xC9,0x85,0xD2,0x7E,0x12,0x4C,0x63,0xC1,0xC4,0xA1,0x7B,0x58,0x04,0xC0,0x83,0xC1,0x01,0x70,0x09,0x3B,0xCA,0x7C,0xEE,0x48,0x83,0xC4,0x28,0xC3,0xE8,0xFD,0x12,0xC4,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool within(byte lhs, byte rhs, byte epsilon)
; location: [7FFC7C0921B0h, 7FFC7C0921DCh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx ecx,cl                  ; MOVZX(Movzx_r32_rm8) [ECX,CL]                        encoding(3 bytes) = 0f b6 c9
0008h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
000bh cmp ecx,edx                   ; CMP(Cmp_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 3b ca
000dh jg short 001eh                ; JG(Jg_rel8_64) [1Eh:jmp64]                           encoding(2 bytes) = 7f 0f
000fh sub edx,ecx                   ; SUB(Sub_r32_rm32) [EDX,ECX]                          encoding(2 bytes) = 2b d1
0011h movzx eax,r8b                 ; MOVZX(Movzx_r32_rm8) [EAX,R8L]                       encoding(4 bytes) = 41 0f b6 c0
0015h cmp edx,eax                   ; CMP(Cmp_r32_rm32) [EDX,EAX]                          encoding(2 bytes) = 3b d0
0017h setle al                      ; SETLE(Setle_rm8) [AL]                                encoding(3 bytes) = 0f 9e c0
001ah movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
001dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
001eh sub ecx,edx                   ; SUB(Sub_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 2b ca
0020h movzx eax,r8b                 ; MOVZX(Movzx_r32_rm8) [EAX,R8L]                       encoding(4 bytes) = 41 0f b6 c0
0024h cmp ecx,eax                   ; CMP(Cmp_r32_rm32) [ECX,EAX]                          encoding(2 bytes) = 3b c8
0026h setle al                      ; SETLE(Setle_rm8) [AL]                                encoding(3 bytes) = 0f 9e c0
0029h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
002ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> withinBytes => new byte[45]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC9,0x0F,0xB6,0xD2,0x3B,0xCA,0x7F,0x0F,0x2B,0xD1,0x41,0x0F,0xB6,0xC0,0x3B,0xD0,0x0F,0x9E,0xC0,0x0F,0xB6,0xC0,0xC3,0x2B,0xCA,0x41,0x0F,0xB6,0xC0,0x3B,0xC8,0x0F,0x9E,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool within(sbyte lhs, sbyte rhs, sbyte epsilon)
; location: [7FFC7C0921F0h, 7FFC7C09221Eh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rcx,cl                  ; MOVSX(Movsx_r64_rm8) [RCX,CL]                        encoding(4 bytes) = 48 0f be c9
0009h movsx rdx,dl                  ; MOVSX(Movsx_r64_rm8) [RDX,DL]                        encoding(4 bytes) = 48 0f be d2
000dh cmp ecx,edx                   ; CMP(Cmp_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 3b ca
000fh jg short 0020h                ; JG(Jg_rel8_64) [20h:jmp64]                           encoding(2 bytes) = 7f 0f
0011h sub edx,ecx                   ; SUB(Sub_r32_rm32) [EDX,ECX]                          encoding(2 bytes) = 2b d1
0013h movsx rax,r8b                 ; MOVSX(Movsx_r64_rm8) [RAX,R8L]                       encoding(4 bytes) = 49 0f be c0
0017h cmp edx,eax                   ; CMP(Cmp_r32_rm32) [EDX,EAX]                          encoding(2 bytes) = 3b d0
0019h setle al                      ; SETLE(Setle_rm8) [AL]                                encoding(3 bytes) = 0f 9e c0
001ch movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
001fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0020h sub ecx,edx                   ; SUB(Sub_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 2b ca
0022h movsx rax,r8b                 ; MOVSX(Movsx_r64_rm8) [RAX,R8L]                       encoding(4 bytes) = 49 0f be c0
0026h cmp ecx,eax                   ; CMP(Cmp_r32_rm32) [ECX,EAX]                          encoding(2 bytes) = 3b c8
0028h setle al                      ; SETLE(Setle_rm8) [AL]                                encoding(3 bytes) = 0f 9e c0
002bh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
002eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> withinBytes => new byte[47]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBE,0xC9,0x48,0x0F,0xBE,0xD2,0x3B,0xCA,0x7F,0x0F,0x2B,0xD1,0x49,0x0F,0xBE,0xC0,0x3B,0xD0,0x0F,0x9E,0xC0,0x0F,0xB6,0xC0,0xC3,0x2B,0xCA,0x49,0x0F,0xBE,0xC0,0x3B,0xC8,0x0F,0x9E,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool within(short lhs, short rhs, short epsilon)
; location: [7FFC7C092230h, 7FFC7C09225Eh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rcx,cx                  ; MOVSX(Movsx_r64_rm16) [RCX,CX]                       encoding(4 bytes) = 48 0f bf c9
0009h movsx rdx,dx                  ; MOVSX(Movsx_r64_rm16) [RDX,DX]                       encoding(4 bytes) = 48 0f bf d2
000dh cmp ecx,edx                   ; CMP(Cmp_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 3b ca
000fh jg short 0020h                ; JG(Jg_rel8_64) [20h:jmp64]                           encoding(2 bytes) = 7f 0f
0011h sub edx,ecx                   ; SUB(Sub_r32_rm32) [EDX,ECX]                          encoding(2 bytes) = 2b d1
0013h movsx rax,r8w                 ; MOVSX(Movsx_r64_rm16) [RAX,R8W]                      encoding(4 bytes) = 49 0f bf c0
0017h cmp edx,eax                   ; CMP(Cmp_r32_rm32) [EDX,EAX]                          encoding(2 bytes) = 3b d0
0019h setle al                      ; SETLE(Setle_rm8) [AL]                                encoding(3 bytes) = 0f 9e c0
001ch movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
001fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0020h sub ecx,edx                   ; SUB(Sub_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 2b ca
0022h movsx rax,r8w                 ; MOVSX(Movsx_r64_rm16) [RAX,R8W]                      encoding(4 bytes) = 49 0f bf c0
0026h cmp ecx,eax                   ; CMP(Cmp_r32_rm32) [ECX,EAX]                          encoding(2 bytes) = 3b c8
0028h setle al                      ; SETLE(Setle_rm8) [AL]                                encoding(3 bytes) = 0f 9e c0
002bh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
002eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> withinBytes => new byte[47]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBF,0xC9,0x48,0x0F,0xBF,0xD2,0x3B,0xCA,0x7F,0x0F,0x2B,0xD1,0x49,0x0F,0xBF,0xC0,0x3B,0xD0,0x0F,0x9E,0xC0,0x0F,0xB6,0xC0,0xC3,0x2B,0xCA,0x49,0x0F,0xBF,0xC0,0x3B,0xC8,0x0F,0x9E,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool within(int lhs, int rhs, int epsilon)
; location: [7FFC7C0922B0h, 7FFC7C0922D0h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h cmp ecx,edx                   ; CMP(Cmp_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 3b ca
0007h jg short 0015h                ; JG(Jg_rel8_64) [15h:jmp64]                           encoding(2 bytes) = 7f 0c
0009h sub edx,ecx                   ; SUB(Sub_r32_rm32) [EDX,ECX]                          encoding(2 bytes) = 2b d1
000bh cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
000eh setle al                      ; SETLE(Setle_rm8) [AL]                                encoding(3 bytes) = 0f 9e c0
0011h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0014h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0015h sub ecx,edx                   ; SUB(Sub_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 2b ca
0017h cmp ecx,r8d                   ; CMP(Cmp_r32_rm32) [ECX,R8D]                          encoding(3 bytes) = 41 3b c8
001ah setle al                      ; SETLE(Setle_rm8) [AL]                                encoding(3 bytes) = 0f 9e c0
001dh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0020h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> withinBytes => new byte[33]{0x0F,0x1F,0x44,0x00,0x00,0x3B,0xCA,0x7F,0x0C,0x2B,0xD1,0x41,0x3B,0xD0,0x0F,0x9E,0xC0,0x0F,0xB6,0xC0,0xC3,0x2B,0xCA,0x41,0x3B,0xC8,0x0F,0x9E,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool within(uint lhs, uint rhs, uint epsilon)
; location: [7FFC7C0922F0h, 7FFC7C092310h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h cmp ecx,edx                   ; CMP(Cmp_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 3b ca
0007h ja short 0015h                ; JA(Ja_rel8_64) [15h:jmp64]                           encoding(2 bytes) = 77 0c
0009h sub edx,ecx                   ; SUB(Sub_r32_rm32) [EDX,ECX]                          encoding(2 bytes) = 2b d1
000bh cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
000eh setbe al                      ; SETBE(Setbe_rm8) [AL]                                encoding(3 bytes) = 0f 96 c0
0011h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0014h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0015h sub ecx,edx                   ; SUB(Sub_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 2b ca
0017h cmp ecx,r8d                   ; CMP(Cmp_r32_rm32) [ECX,R8D]                          encoding(3 bytes) = 41 3b c8
001ah setbe al                      ; SETBE(Setbe_rm8) [AL]                                encoding(3 bytes) = 0f 96 c0
001dh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0020h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> withinBytes => new byte[33]{0x0F,0x1F,0x44,0x00,0x00,0x3B,0xCA,0x77,0x0C,0x2B,0xD1,0x41,0x3B,0xD0,0x0F,0x96,0xC0,0x0F,0xB6,0xC0,0xC3,0x2B,0xCA,0x41,0x3B,0xC8,0x0F,0x96,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool within(float lhs, float rhs, float epsilon)
; location: [7FFC7C0923B0h, 7FFC7C0923D8h]
0000h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0003h xchg ax,ax                    ; NOP(Nopw)                                            encoding(2 bytes) = 66 90
0005h vucomiss xmm0,xmm1            ; VUCOMISS(VEX_Vucomiss_xmm_xmmm32) [XMM0,XMM1]        encoding(VEX, 4 bytes) = c5 f8 2e c1
0009h ja short 001ah                ; JA(Ja_rel8_64) [1Ah:jmp64]                           encoding(2 bytes) = 77 0f
000bh vsubss xmm1,xmm1,xmm0         ; VSUBSS(VEX_Vsubss_xmm_xmm_xmmm32) [XMM1,XMM1,XMM0]   encoding(VEX, 4 bytes) = c5 f2 5c c8
000fh vucomiss xmm2,xmm1            ; VUCOMISS(VEX_Vucomiss_xmm_xmmm32) [XMM2,XMM1]        encoding(VEX, 4 bytes) = c5 f8 2e d1
0013h setae al                      ; SETAE(Setae_rm8) [AL]                                encoding(3 bytes) = 0f 93 c0
0016h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0019h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
001ah vsubss xmm0,xmm0,xmm1         ; VSUBSS(VEX_Vsubss_xmm_xmm_xmmm32) [XMM0,XMM0,XMM1]   encoding(VEX, 4 bytes) = c5 fa 5c c1
001eh vucomiss xmm2,xmm0            ; VUCOMISS(VEX_Vucomiss_xmm_xmmm32) [XMM2,XMM0]        encoding(VEX, 4 bytes) = c5 f8 2e d0
0022h setae al                      ; SETAE(Setae_rm8) [AL]                                encoding(3 bytes) = 0f 93 c0
0025h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0028h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> withinBytes => new byte[41]{0xC5,0xF8,0x77,0x66,0x90,0xC5,0xF8,0x2E,0xC1,0x77,0x0F,0xC5,0xF2,0x5C,0xC8,0xC5,0xF8,0x2E,0xD1,0x0F,0x93,0xC0,0x0F,0xB6,0xC0,0xC3,0xC5,0xFA,0x5C,0xC1,0xC5,0xF8,0x2E,0xD0,0x0F,0x93,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ushort xor(ushort lhs, ushort rhs)
; location: [7FFC7C0926C0h, 7FFC7C0926D0h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cx                  ; MOVZX(Movzx_r32_rm16) [EAX,CX]                       encoding(3 bytes) = 0f b7 c1
0008h movzx edx,dx                  ; MOVZX(Movzx_r32_rm16) [EDX,DX]                       encoding(3 bytes) = 0f b7 d2
000bh xor eax,edx                   ; XOR(Xor_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 33 c2
000dh movzx eax,ax                  ; MOVZX(Movzx_r32_rm16) [EAX,AX]                       encoding(3 bytes) = 0f b7 c0
0010h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> xorBytes => new byte[17]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB7,0xC1,0x0F,0xB7,0xD2,0x33,0xC2,0x0F,0xB7,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: float xor(float lhs, float rhs)
; location: [7FFC7C092B60h, 7FFC7C092B89h]
0000h sub rsp,18h                   ; SUB(Sub_rm64_imm8) [RSP,18h:imm64]                   encoding(4 bytes) = 48 83 ec 18
0004h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0007h vmovss dword ptr [rsp+14h],xmm0; VMOVSS(VEX_Vmovss_m32_xmm) [mem(Float32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 11 44 24 14
000dh mov eax,[rsp+14h]             ; MOV(Mov_r32_rm32) [EAX,mem(32u,RSP:br,SS:sr)]        encoding(4 bytes) = 8b 44 24 14
0011h vmovss dword ptr [rsp+10h],xmm1; VMOVSS(VEX_Vmovss_m32_xmm) [mem(Float32,RSP:br,SS:sr),XMM1] encoding(VEX, 6 bytes) = c5 fa 11 4c 24 10
0017h xor eax,[rsp+10h]             ; XOR(Xor_r32_rm32) [EAX,mem(32u,RSP:br,SS:sr)]        encoding(4 bytes) = 33 44 24 10
001bh mov [rsp+0Ch],eax             ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),EAX]        encoding(4 bytes) = 89 44 24 0c
001fh vmovss xmm0,dword ptr [rsp+0Ch]; VMOVSS(VEX_Vmovss_xmm_m32) [XMM0,mem(Float32,RSP:br,SS:sr)] encoding(VEX, 6 bytes) = c5 fa 10 44 24 0c
0025h add rsp,18h                   ; ADD(Add_rm64_imm8) [RSP,18h:imm64]                   encoding(4 bytes) = 48 83 c4 18
0029h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> xorBytes => new byte[42]{0x48,0x83,0xEC,0x18,0xC5,0xF8,0x77,0xC5,0xFA,0x11,0x44,0x24,0x14,0x8B,0x44,0x24,0x14,0xC5,0xFA,0x11,0x4C,0x24,0x10,0x33,0x44,0x24,0x10,0x89,0x44,0x24,0x0C,0xC5,0xFA,0x10,0x44,0x24,0x0C,0x48,0x83,0xC4,0x18,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: double xor(double lhs, double rhs)
; location: [7FFC7C092BB0h, 7FFC7C092BDAh]
0000h sub rsp,18h                   ; SUB(Sub_rm64_imm8) [RSP,18h:imm64]                   encoding(4 bytes) = 48 83 ec 18
0004h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0007h vmovsd qword ptr [rsp+10h],xmm0; VMOVSD(VEX_Vmovsd_m64_xmm) [mem(Float64,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fb 11 44 24 10
000dh mov rax,[rsp+10h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 10
0012h vmovsd qword ptr [rsp+8],xmm1 ; VMOVSD(VEX_Vmovsd_m64_xmm) [mem(Float64,RSP:br,SS:sr),XMM1] encoding(VEX, 6 bytes) = c5 fb 11 4c 24 08
0018h xor rax,[rsp+8]               ; XOR(Xor_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 33 44 24 08
001dh mov [rsp],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(4 bytes) = 48 89 04 24
0021h vmovsd xmm0,qword ptr [rsp]   ; VMOVSD(VEX_Vmovsd_xmm_m64) [XMM0,mem(Float64,RSP:br,SS:sr)] encoding(VEX, 5 bytes) = c5 fb 10 04 24
0026h add rsp,18h                   ; ADD(Add_rm64_imm8) [RSP,18h:imm64]                   encoding(4 bytes) = 48 83 c4 18
002ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> xorBytes => new byte[43]{0x48,0x83,0xEC,0x18,0xC5,0xF8,0x77,0xC5,0xFB,0x11,0x44,0x24,0x10,0x48,0x8B,0x44,0x24,0x10,0xC5,0xFB,0x11,0x4C,0x24,0x08,0x48,0x33,0x44,0x24,0x08,0x48,0x89,0x04,0x24,0xC5,0xFB,0x10,0x04,0x24,0x48,0x83,0xC4,0x18,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref int xor(ref int lhs, int rhs)
; location: [7FFC7C092C80h, 7FFC7C092C8Ah]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h xor [rcx],edx                 ; XOR(Xor_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(2 bytes) = 31 11
0007h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> xorBytes => new byte[11]{0x0F,0x1F,0x44,0x00,0x00,0x31,0x11,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref long xor(ref long lhs, long rhs)
; location: [7FFC7C092CC0h, 7FFC7C092CCBh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h xor [rcx],rdx                 ; XOR(Xor_rm64_r64) [mem(64u,RCX:br,DS:sr),RDX]        encoding(3 bytes) = 48 31 11
0008h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> xorBytes => new byte[12]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x31,0x11,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref ulong xor(ref ulong lhs, ulong rhs)
; location: [7FFC7C092CE0h, 7FFC7C092CEBh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h xor [rcx],rdx                 ; XOR(Xor_rm64_r64) [mem(64u,RCX:br,DS:sr),RDX]        encoding(3 bytes) = 48 31 11
0008h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> xorBytes => new byte[12]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x31,0x11,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref float xor(ref float lhs, float rhs)
; location: [7FFC7C092D00h, 7FFC7C092D34h]
0000h sub rsp,18h                   ; SUB(Sub_rm64_imm8) [RSP,18h:imm64]                   encoding(4 bytes) = 48 83 ec 18
0004h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0007h vmovss xmm0,dword ptr [rcx]   ; VMOVSS(VEX_Vmovss_xmm_m32) [XMM0,mem(Float32,RCX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 10 01
000bh vmovss dword ptr [rsp+14h],xmm0; VMOVSS(VEX_Vmovss_m32_xmm) [mem(Float32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 11 44 24 14
0011h mov eax,[rsp+14h]             ; MOV(Mov_r32_rm32) [EAX,mem(32u,RSP:br,SS:sr)]        encoding(4 bytes) = 8b 44 24 14
0015h vmovss dword ptr [rsp+10h],xmm1; VMOVSS(VEX_Vmovss_m32_xmm) [mem(Float32,RSP:br,SS:sr),XMM1] encoding(VEX, 6 bytes) = c5 fa 11 4c 24 10
001bh xor eax,[rsp+10h]             ; XOR(Xor_r32_rm32) [EAX,mem(32u,RSP:br,SS:sr)]        encoding(4 bytes) = 33 44 24 10
001fh mov [rsp+0Ch],eax             ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),EAX]        encoding(4 bytes) = 89 44 24 0c
0023h vmovss xmm0,dword ptr [rsp+0Ch]; VMOVSS(VEX_Vmovss_xmm_m32) [XMM0,mem(Float32,RSP:br,SS:sr)] encoding(VEX, 6 bytes) = c5 fa 10 44 24 0c
0029h vmovss dword ptr [rcx],xmm0   ; VMOVSS(VEX_Vmovss_m32_xmm) [mem(Float32,RCX:br,DS:sr),XMM0] encoding(VEX, 4 bytes) = c5 fa 11 01
002dh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0030h add rsp,18h                   ; ADD(Add_rm64_imm8) [RSP,18h:imm64]                   encoding(4 bytes) = 48 83 c4 18
0034h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> xorBytes => new byte[53]{0x48,0x83,0xEC,0x18,0xC5,0xF8,0x77,0xC5,0xFA,0x10,0x01,0xC5,0xFA,0x11,0x44,0x24,0x14,0x8B,0x44,0x24,0x14,0xC5,0xFA,0x11,0x4C,0x24,0x10,0x33,0x44,0x24,0x10,0x89,0x44,0x24,0x0C,0xC5,0xFA,0x10,0x44,0x24,0x0C,0xC5,0xFA,0x11,0x01,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x18,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref byte xor(in byte lhs, in byte rhs, ref byte dst)
; location: [7FFC7C092DD0h, 7FFC7C092DE3h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,byte ptr [rcx]      ; MOVZX(Movzx_r32_rm8) [EAX,mem(8u,RCX:br,DS:sr)]      encoding(3 bytes) = 0f b6 01
0008h movzx edx,byte ptr [rdx]      ; MOVZX(Movzx_r32_rm8) [EDX,mem(8u,RDX:br,DS:sr)]      encoding(3 bytes) = 0f b6 12
000bh xor eax,edx                   ; XOR(Xor_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 33 c2
000dh mov [r8],al                   ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),AL]             encoding(3 bytes) = 41 88 00
0010h mov rax,r8                    ; MOV(Mov_r64_rm64) [RAX,R8]                           encoding(3 bytes) = 49 8b c0
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> xorBytes => new byte[20]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0x01,0x0F,0xB6,0x12,0x33,0xC2,0x41,0x88,0x00,0x49,0x8B,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref int xor(in int lhs, in int rhs, ref int dst)
; location: [7FFC7C092E60h, 7FFC7C092E6Fh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov eax,[rcx]                 ; MOV(Mov_r32_rm32) [EAX,mem(32u,RCX:br,DS:sr)]        encoding(2 bytes) = 8b 01
0007h xor eax,[rdx]                 ; XOR(Xor_r32_rm32) [EAX,mem(32u,RDX:br,DS:sr)]        encoding(2 bytes) = 33 02
0009h mov [r8],eax                  ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EAX]         encoding(3 bytes) = 41 89 00
000ch mov rax,r8                    ; MOV(Mov_r64_rm64) [RAX,R8]                           encoding(3 bytes) = 49 8b c0
000fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> xorBytes => new byte[16]{0x0F,0x1F,0x44,0x00,0x00,0x8B,0x01,0x33,0x02,0x41,0x89,0x00,0x49,0x8B,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref uint xor(in uint lhs, in uint rhs, ref uint dst)
; location: [7FFC7C092E80h, 7FFC7C092E8Fh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov eax,[rcx]                 ; MOV(Mov_r32_rm32) [EAX,mem(32u,RCX:br,DS:sr)]        encoding(2 bytes) = 8b 01
0007h xor eax,[rdx]                 ; XOR(Xor_r32_rm32) [EAX,mem(32u,RDX:br,DS:sr)]        encoding(2 bytes) = 33 02
0009h mov [r8],eax                  ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EAX]         encoding(3 bytes) = 41 89 00
000ch mov rax,r8                    ; MOV(Mov_r64_rm64) [RAX,R8]                           encoding(3 bytes) = 49 8b c0
000fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> xorBytes => new byte[16]{0x0F,0x1F,0x44,0x00,0x00,0x8B,0x01,0x33,0x02,0x41,0x89,0x00,0x49,0x8B,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref ulong xor(in ulong lhs, in ulong rhs, ref ulong dst)
; location: [7FFC7C092ED0h, 7FFC7C092EE1h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,[rcx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 01
0008h xor rax,[rdx]                 ; XOR(Xor_r64_rm64) [RAX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 33 02
000bh mov [r8],rax                  ; MOV(Mov_rm64_r64) [mem(64u,R8:br,DS:sr),RAX]         encoding(3 bytes) = 49 89 00
000eh mov rax,r8                    ; MOV(Mov_r64_rm64) [RAX,R8]                           encoding(3 bytes) = 49 8b c0
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> xorBytes => new byte[18]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x01,0x48,0x33,0x02,0x49,0x89,0x00,0x49,0x8B,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref double xor(in double lhs, in double rhs, ref double dst)
; location: [7FFC7C092F60h, 7FFC7C092F9Ah]
0000h sub rsp,18h                   ; SUB(Sub_rm64_imm8) [RSP,18h:imm64]                   encoding(4 bytes) = 48 83 ec 18
0004h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0007h vmovsd xmm0,qword ptr [rcx]   ; VMOVSD(VEX_Vmovsd_xmm_m64) [XMM0,mem(Float64,RCX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fb 10 01
000bh vmovsd qword ptr [rsp+10h],xmm0; VMOVSD(VEX_Vmovsd_m64_xmm) [mem(Float64,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fb 11 44 24 10
0011h mov rax,[rsp+10h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 10
0016h vmovsd xmm0,qword ptr [rdx]   ; VMOVSD(VEX_Vmovsd_xmm_m64) [XMM0,mem(Float64,RDX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fb 10 02
001ah vmovsd qword ptr [rsp+8],xmm0 ; VMOVSD(VEX_Vmovsd_m64_xmm) [mem(Float64,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fb 11 44 24 08
0020h xor rax,[rsp+8]               ; XOR(Xor_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 33 44 24 08
0025h mov [rsp],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(4 bytes) = 48 89 04 24
0029h vmovsd xmm0,qword ptr [rsp]   ; VMOVSD(VEX_Vmovsd_xmm_m64) [XMM0,mem(Float64,RSP:br,SS:sr)] encoding(VEX, 5 bytes) = c5 fb 10 04 24
002eh vmovsd qword ptr [r8],xmm0    ; VMOVSD(VEX_Vmovsd_m64_xmm) [mem(Float64,R8:br,DS:sr),XMM0] encoding(VEX, 5 bytes) = c4 c1 7b 11 00
0033h mov rax,r8                    ; MOV(Mov_r64_rm64) [RAX,R8]                           encoding(3 bytes) = 49 8b c0
0036h add rsp,18h                   ; ADD(Add_rm64_imm8) [RSP,18h:imm64]                   encoding(4 bytes) = 48 83 c4 18
003ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> xorBytes => new byte[59]{0x48,0x83,0xEC,0x18,0xC5,0xF8,0x77,0xC5,0xFB,0x10,0x01,0xC5,0xFB,0x11,0x44,0x24,0x10,0x48,0x8B,0x44,0x24,0x10,0xC5,0xFB,0x10,0x02,0xC5,0xFB,0x11,0x44,0x24,0x08,0x48,0x33,0x44,0x24,0x08,0x48,0x89,0x04,0x24,0xC5,0xFB,0x10,0x04,0x24,0xC4,0xC1,0x7B,0x11,0x00,0x49,0x8B,0xC0,0x48,0x83,0xC4,0x18,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<sbyte> xor(Span<sbyte> lhs, sbyte rhs)
; location: [7FFC7C092FC0h, 7FFC7C092FF0h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0008h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
000bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
000eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0010h jle short 0027h               ; JLE(Jle_rel8_64) [27h:jmp64]                         encoding(2 bytes) = 7e 15
0012h movsx rax,r8b                 ; MOVSX(Movsx_r64_rm8) [RAX,R8L]                       encoding(4 bytes) = 49 0f be c0
0016h movsxd r8,r10d                ; MOVSXD(Movsxd_r64_rm32) [R8,R10D]                    encoding(3 bytes) = 4d 63 c2
0019h add r8,r9                     ; ADD(Add_r64_rm64) [R8,R9]                            encoding(3 bytes) = 4d 03 c1
001ch xor [r8],al                   ; XOR(Xor_rm8_r8) [mem(8u,R8:br,DS:sr),AL]             encoding(3 bytes) = 41 30 00
001fh inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
0022h cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
0025h jl short 0016h                ; JL(Jl_rel8_64) [16h:jmp64]                           encoding(2 bytes) = 7c ef
0027h mov [rcx],r9                  ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R9]         encoding(3 bytes) = 4c 89 09
002ah mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
002dh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0030h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> xorBytes => new byte[49]{0x0F,0x1F,0x44,0x00,0x00,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x15,0x49,0x0F,0xBE,0xC0,0x4D,0x63,0xC2,0x4D,0x03,0xC1,0x41,0x30,0x00,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xEF,0x4C,0x89,0x09,0x89,0x51,0x08,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<byte> xor(Span<byte> lhs, byte rhs)
; location: [7FFC7C093010h, 7FFC7C093040h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0008h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
000bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
000eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0010h jle short 0027h               ; JLE(Jle_rel8_64) [27h:jmp64]                         encoding(2 bytes) = 7e 15
0012h movzx eax,r8b                 ; MOVZX(Movzx_r32_rm8) [EAX,R8L]                       encoding(4 bytes) = 41 0f b6 c0
0016h movsxd r8,r10d                ; MOVSXD(Movsxd_r64_rm32) [R8,R10D]                    encoding(3 bytes) = 4d 63 c2
0019h add r8,r9                     ; ADD(Add_r64_rm64) [R8,R9]                            encoding(3 bytes) = 4d 03 c1
001ch xor [r8],al                   ; XOR(Xor_rm8_r8) [mem(8u,R8:br,DS:sr),AL]             encoding(3 bytes) = 41 30 00
001fh inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
0022h cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
0025h jl short 0016h                ; JL(Jl_rel8_64) [16h:jmp64]                           encoding(2 bytes) = 7c ef
0027h mov [rcx],r9                  ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R9]         encoding(3 bytes) = 4c 89 09
002ah mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
002dh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0030h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> xorBytes => new byte[49]{0x0F,0x1F,0x44,0x00,0x00,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x15,0x41,0x0F,0xB6,0xC0,0x4D,0x63,0xC2,0x4D,0x03,0xC1,0x41,0x30,0x00,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xEF,0x4C,0x89,0x09,0x89,0x51,0x08,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<ushort> xor(Span<ushort> lhs, ushort rhs)
; location: [7FFC7C0930B0h, 7FFC7C0930E2h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0008h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
000bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
000eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0010h jle short 0029h               ; JLE(Jle_rel8_64) [29h:jmp64]                         encoding(2 bytes) = 7e 17
0012h movzx eax,r8w                 ; MOVZX(Movzx_r32_rm16) [EAX,R8W]                      encoding(4 bytes) = 41 0f b7 c0
0016h movsxd r8,r10d                ; MOVSXD(Movsxd_r64_rm32) [R8,R10D]                    encoding(3 bytes) = 4d 63 c2
0019h lea r8,[r9+r8*2]              ; LEA(Lea_r64_m) [R8,mem(Unknown,R9:br,DS:sr)]         encoding(4 bytes) = 4f 8d 04 41
001dh xor [r8],ax                   ; XOR(Xor_rm16_r16) [mem(16u,R8:br,DS:sr),AX]          encoding(4 bytes) = 66 41 31 00
0021h inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
0024h cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
0027h jl short 0016h                ; JL(Jl_rel8_64) [16h:jmp64]                           encoding(2 bytes) = 7c ed
0029h mov [rcx],r9                  ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R9]         encoding(3 bytes) = 4c 89 09
002ch mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
002fh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0032h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> xorBytes => new byte[51]{0x0F,0x1F,0x44,0x00,0x00,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x17,0x41,0x0F,0xB7,0xC0,0x4D,0x63,0xC2,0x4F,0x8D,0x04,0x41,0x66,0x41,0x31,0x00,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xED,0x4C,0x89,0x09,0x89,0x51,0x08,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<int> xor(Span<int> lhs, int rhs)
; location: [7FFC7C093100h, 7FFC7C09312Dh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,[rdx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 02
0008h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
000bh xor r9d,r9d                   ; XOR(Xor_r32_rm32) [R9D,R9D]                          encoding(3 bytes) = 45 33 c9
000eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0010h jle short 0024h               ; JLE(Jle_rel8_64) [24h:jmp64]                         encoding(2 bytes) = 7e 12
0012h movsxd r10,r9d                ; MOVSXD(Movsxd_r64_rm32) [R10,R9D]                    encoding(3 bytes) = 4d 63 d1
0015h lea r10,[rax+r10*4]           ; LEA(Lea_r64_m) [R10,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 4e 8d 14 90
0019h xor [r10],r8d                 ; XOR(Xor_rm32_r32) [mem(32u,R10:br,DS:sr),R8D]        encoding(3 bytes) = 45 31 02
001ch inc r9d                       ; INC(Inc_rm32) [R9D]                                  encoding(3 bytes) = 41 ff c1
001fh cmp r9d,edx                   ; CMP(Cmp_r32_rm32) [R9D,EDX]                          encoding(3 bytes) = 44 3b ca
0022h jl short 0012h                ; JL(Jl_rel8_64) [12h:jmp64]                           encoding(2 bytes) = 7c ee
0024h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0027h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
002ah mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
002dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> xorBytes => new byte[46]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x02,0x8B,0x52,0x08,0x45,0x33,0xC9,0x85,0xD2,0x7E,0x12,0x4D,0x63,0xD1,0x4E,0x8D,0x14,0x90,0x45,0x31,0x02,0x41,0xFF,0xC1,0x44,0x3B,0xCA,0x7C,0xEE,0x48,0x89,0x01,0x89,0x51,0x08,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<uint> xor(Span<uint> lhs, uint rhs)
; location: [7FFC7C093140h, 7FFC7C09316Dh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,[rdx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 02
0008h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
000bh xor r9d,r9d                   ; XOR(Xor_r32_rm32) [R9D,R9D]                          encoding(3 bytes) = 45 33 c9
000eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0010h jle short 0024h               ; JLE(Jle_rel8_64) [24h:jmp64]                         encoding(2 bytes) = 7e 12
0012h movsxd r10,r9d                ; MOVSXD(Movsxd_r64_rm32) [R10,R9D]                    encoding(3 bytes) = 4d 63 d1
0015h lea r10,[rax+r10*4]           ; LEA(Lea_r64_m) [R10,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 4e 8d 14 90
0019h xor [r10],r8d                 ; XOR(Xor_rm32_r32) [mem(32u,R10:br,DS:sr),R8D]        encoding(3 bytes) = 45 31 02
001ch inc r9d                       ; INC(Inc_rm32) [R9D]                                  encoding(3 bytes) = 41 ff c1
001fh cmp r9d,edx                   ; CMP(Cmp_r32_rm32) [R9D,EDX]                          encoding(3 bytes) = 44 3b ca
0022h jl short 0012h                ; JL(Jl_rel8_64) [12h:jmp64]                           encoding(2 bytes) = 7c ee
0024h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0027h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
002ah mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
002dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> xorBytes => new byte[46]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x02,0x8B,0x52,0x08,0x45,0x33,0xC9,0x85,0xD2,0x7E,0x12,0x4D,0x63,0xD1,0x4E,0x8D,0x14,0x90,0x45,0x31,0x02,0x41,0xFF,0xC1,0x44,0x3B,0xCA,0x7C,0xEE,0x48,0x89,0x01,0x89,0x51,0x08,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<sbyte> xor(Span<sbyte> lhs, ReadOnlySpan<sbyte> rhs)
; location: [7FFC7C093200h, 7FFC7C0932C4h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0014h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0017h mov esi,101h                  ; MOV(Mov_r32_imm32) [ESI,101h:imm32]                  encoding(5 bytes) = be 01 01 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
0023h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0026h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0029h jne short 0066h               ; JNE(Jne_rel8_64) [66h:jmp64]                         encoding(2 bytes) = 75 3b
002bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
002eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0030h jle short 0052h               ; JLE(Jle_rel8_64) [52h:jmp64]                         encoding(2 bytes) = 7e 20
0032h movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
0035h lea rbx,[r9+r11]              ; LEA(Lea_r64_m) [RBX,mem(Unknown,R9:br,DS:sr)]        encoding(4 bytes) = 4b 8d 1c 19
0039h cmp r10d,r8d                  ; CMP(Cmp_r32_rm32) [R10D,R8D]                         encoding(3 bytes) = 45 3b d0
003ch jae near ptr 00bfh            ; JAE(Jae_rel32_64) [BFh:jmp64]                        encoding(6 bytes) = 0f 83 7d 00 00 00
0042h movsx r11,byte ptr [rax+r11]  ; MOVSX(Movsx_r64_rm8) [R11,mem(8i,RAX:br,DS:sr)]      encoding(5 bytes) = 4e 0f be 1c 18
0047h xor [rbx],r11b                ; XOR(Xor_rm8_r8) [mem(8u,RBX:br,DS:sr),R11L]          encoding(3 bytes) = 44 30 1b
004ah inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
004dh cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
0050h jl short 0032h                ; JL(Jl_rel8_64) [32h:jmp64]                           encoding(2 bytes) = 7c e0
0052h mov [rcx],r9                  ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R9]         encoding(3 bytes) = 4c 89 09
0055h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
0058h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
005bh add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
005fh pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0060h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0061h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0062h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0063h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0065h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0066h mov ecx,0EEFh                 ; MOV(Mov_r32_imm32) [ECX,eefh:imm32]                  encoding(5 bytes) = b9 ef 0e 00 00
006bh mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
0075h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC40C20h:jmp64]                encoding(5 bytes) = e8 a6 0b c4 5f
007ah mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
007dh mov ecx,0EF7h                 ; MOV(Mov_r32_imm32) [ECX,ef7h:imm32]                  encoding(5 bytes) = b9 f7 0e 00 00
0082h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
008ch call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC40C20h:jmp64]                encoding(5 bytes) = e8 8f 0b c4 5f
0091h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
0094h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
0099h mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
009ch mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00a0h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00a3h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00a5h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00a7h mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00ach mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b1h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFAE18h:jmp64]        encoding(5 bytes) = e8 62 ad ff ff
00b6h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00b9h call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAF6690h:jmp64]                encoding(5 bytes) = e8 d2 65 af 5f
00beh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00bfh call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC40440h:jmp64]                encoding(5 bytes) = e8 7c 03 c4 5f
00c4h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> xorBytes => new byte[197]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x00,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0xBE,0x01,0x01,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x3B,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x20,0x4D,0x63,0xDA,0x4B,0x8D,0x1C,0x19,0x45,0x3B,0xD0,0x0F,0x83,0x7D,0x00,0x00,0x00,0x4E,0x0F,0xBE,0x1C,0x18,0x44,0x30,0x1B,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xE0,0x4C,0x89,0x09,0x89,0x51,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0xEF,0x0E,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xA6,0x0B,0xC4,0x5F,0x4C,0x8B,0xF0,0xB9,0xF7,0x0E,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x8F,0x0B,0xC4,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x62,0xAD,0xFF,0xFF,0x48,0x8B,0xC8,0xE8,0xD2,0x65,0xAF,0x5F,0xCC,0xE8,0x7C,0x03,0xC4,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<byte> xor(Span<byte> lhs, ReadOnlySpan<byte> rhs)
; location: [7FFC7C0932F0h, 7FFC7C0933B4h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0014h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0017h mov esi,109h                  ; MOV(Mov_r32_imm32) [ESI,109h:imm32]                  encoding(5 bytes) = be 09 01 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
0023h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0026h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0029h jne short 0066h               ; JNE(Jne_rel8_64) [66h:jmp64]                         encoding(2 bytes) = 75 3b
002bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
002eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0030h jle short 0052h               ; JLE(Jle_rel8_64) [52h:jmp64]                         encoding(2 bytes) = 7e 20
0032h movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
0035h lea rbx,[r9+r11]              ; LEA(Lea_r64_m) [RBX,mem(Unknown,R9:br,DS:sr)]        encoding(4 bytes) = 4b 8d 1c 19
0039h cmp r10d,r8d                  ; CMP(Cmp_r32_rm32) [R10D,R8D]                         encoding(3 bytes) = 45 3b d0
003ch jae near ptr 00bfh            ; JAE(Jae_rel32_64) [BFh:jmp64]                        encoding(6 bytes) = 0f 83 7d 00 00 00
0042h movzx r11d,byte ptr [rax+r11] ; MOVZX(Movzx_r32_rm8) [R11D,mem(8u,RAX:br,DS:sr)]     encoding(5 bytes) = 46 0f b6 1c 18
0047h xor [rbx],r11b                ; XOR(Xor_rm8_r8) [mem(8u,RBX:br,DS:sr),R11L]          encoding(3 bytes) = 44 30 1b
004ah inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
004dh cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
0050h jl short 0032h                ; JL(Jl_rel8_64) [32h:jmp64]                           encoding(2 bytes) = 7c e0
0052h mov [rcx],r9                  ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R9]         encoding(3 bytes) = 4c 89 09
0055h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
0058h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
005bh add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
005fh pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0060h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0061h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0062h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0063h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0065h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0066h mov ecx,0EEFh                 ; MOV(Mov_r32_imm32) [ECX,eefh:imm32]                  encoding(5 bytes) = b9 ef 0e 00 00
006bh mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
0075h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC40B30h:jmp64]                encoding(5 bytes) = e8 b6 0a c4 5f
007ah mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
007dh mov ecx,0EF7h                 ; MOV(Mov_r32_imm32) [ECX,ef7h:imm32]                  encoding(5 bytes) = b9 f7 0e 00 00
0082h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
008ch call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC40B30h:jmp64]                encoding(5 bytes) = e8 9f 0a c4 5f
0091h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
0094h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
0099h mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
009ch mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00a0h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00a3h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00a5h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00a7h mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00ach mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b1h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFAD28h:jmp64]        encoding(5 bytes) = e8 72 ac ff ff
00b6h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00b9h call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAF65A0h:jmp64]                encoding(5 bytes) = e8 e2 64 af 5f
00beh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00bfh call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC40350h:jmp64]                encoding(5 bytes) = e8 8c 02 c4 5f
00c4h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> xorBytes => new byte[197]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x00,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0xBE,0x09,0x01,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x3B,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x20,0x4D,0x63,0xDA,0x4B,0x8D,0x1C,0x19,0x45,0x3B,0xD0,0x0F,0x83,0x7D,0x00,0x00,0x00,0x46,0x0F,0xB6,0x1C,0x18,0x44,0x30,0x1B,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xE0,0x4C,0x89,0x09,0x89,0x51,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0xEF,0x0E,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xB6,0x0A,0xC4,0x5F,0x4C,0x8B,0xF0,0xB9,0xF7,0x0E,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x9F,0x0A,0xC4,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x72,0xAC,0xFF,0xFF,0x48,0x8B,0xC8,0xE8,0xE2,0x64,0xAF,0x5F,0xCC,0xE8,0x8C,0x02,0xC4,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<short> xor(Span<short> lhs, ReadOnlySpan<short> rhs)
; location: [7FFC7C0933E0h, 7FFC7C0934A5h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0014h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0017h mov esi,111h                  ; MOV(Mov_r32_imm32) [ESI,111h:imm32]                  encoding(5 bytes) = be 11 01 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
0023h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0026h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0029h jne short 0067h               ; JNE(Jne_rel8_64) [67h:jmp64]                         encoding(2 bytes) = 75 3c
002bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
002eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0030h jle short 0053h               ; JLE(Jle_rel8_64) [53h:jmp64]                         encoding(2 bytes) = 7e 21
0032h movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
0035h lea rbx,[r9+r11*2]            ; LEA(Lea_r64_m) [RBX,mem(Unknown,R9:br,DS:sr)]        encoding(4 bytes) = 4b 8d 1c 59
0039h cmp r10d,r8d                  ; CMP(Cmp_r32_rm32) [R10D,R8D]                         encoding(3 bytes) = 45 3b d0
003ch jae near ptr 00c0h            ; JAE(Jae_rel32_64) [C0h:jmp64]                        encoding(6 bytes) = 0f 83 7e 00 00 00
0042h movsx r11,word ptr [rax+r11*2]; MOVSX(Movsx_r64_rm16) [R11,mem(16i,RAX:br,DS:sr)]    encoding(5 bytes) = 4e 0f bf 1c 58
0047h xor [rbx],r11w                ; XOR(Xor_rm16_r16) [mem(16u,RBX:br,DS:sr),R11W]       encoding(4 bytes) = 66 44 31 1b
004bh inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
004eh cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
0051h jl short 0032h                ; JL(Jl_rel8_64) [32h:jmp64]                           encoding(2 bytes) = 7c df
0053h mov [rcx],r9                  ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R9]         encoding(3 bytes) = 4c 89 09
0056h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
0059h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
005ch add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0060h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0061h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0062h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0063h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0064h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0066h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0067h mov ecx,0EEFh                 ; MOV(Mov_r32_imm32) [ECX,eefh:imm32]                  encoding(5 bytes) = b9 ef 0e 00 00
006ch mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
0076h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC40A40h:jmp64]                encoding(5 bytes) = e8 c5 09 c4 5f
007bh mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
007eh mov ecx,0EF7h                 ; MOV(Mov_r32_imm32) [ECX,ef7h:imm32]                  encoding(5 bytes) = b9 f7 0e 00 00
0083h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
008dh call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC40A40h:jmp64]                encoding(5 bytes) = e8 ae 09 c4 5f
0092h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
0095h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
009ah mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
009dh mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00a1h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00a4h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00a6h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00a8h mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00adh mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b2h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFAC38h:jmp64]        encoding(5 bytes) = e8 81 ab ff ff
00b7h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00bah call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAF64B0h:jmp64]                encoding(5 bytes) = e8 f1 63 af 5f
00bfh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00c0h call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC40260h:jmp64]                encoding(5 bytes) = e8 9b 01 c4 5f
00c5h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> xorBytes => new byte[198]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x00,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0xBE,0x11,0x01,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x3C,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x21,0x4D,0x63,0xDA,0x4B,0x8D,0x1C,0x59,0x45,0x3B,0xD0,0x0F,0x83,0x7E,0x00,0x00,0x00,0x4E,0x0F,0xBF,0x1C,0x58,0x66,0x44,0x31,0x1B,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xDF,0x4C,0x89,0x09,0x89,0x51,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0xEF,0x0E,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xC5,0x09,0xC4,0x5F,0x4C,0x8B,0xF0,0xB9,0xF7,0x0E,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xAE,0x09,0xC4,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x81,0xAB,0xFF,0xFF,0x48,0x8B,0xC8,0xE8,0xF1,0x63,0xAF,0x5F,0xCC,0xE8,0x9B,0x01,0xC4,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<ushort> xor(Span<ushort> lhs, ReadOnlySpan<ushort> rhs)
; location: [7FFC7C0934D0h, 7FFC7C093595h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0014h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0017h mov esi,119h                  ; MOV(Mov_r32_imm32) [ESI,119h:imm32]                  encoding(5 bytes) = be 19 01 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
0023h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0026h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0029h jne short 0067h               ; JNE(Jne_rel8_64) [67h:jmp64]                         encoding(2 bytes) = 75 3c
002bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
002eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0030h jle short 0053h               ; JLE(Jle_rel8_64) [53h:jmp64]                         encoding(2 bytes) = 7e 21
0032h movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
0035h lea rbx,[r9+r11*2]            ; LEA(Lea_r64_m) [RBX,mem(Unknown,R9:br,DS:sr)]        encoding(4 bytes) = 4b 8d 1c 59
0039h cmp r10d,r8d                  ; CMP(Cmp_r32_rm32) [R10D,R8D]                         encoding(3 bytes) = 45 3b d0
003ch jae near ptr 00c0h            ; JAE(Jae_rel32_64) [C0h:jmp64]                        encoding(6 bytes) = 0f 83 7e 00 00 00
0042h movzx r11d,word ptr [rax+r11*2]; MOVZX(Movzx_r32_rm16) [R11D,mem(16u,RAX:br,DS:sr)]  encoding(5 bytes) = 46 0f b7 1c 58
0047h xor [rbx],r11w                ; XOR(Xor_rm16_r16) [mem(16u,RBX:br,DS:sr),R11W]       encoding(4 bytes) = 66 44 31 1b
004bh inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
004eh cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
0051h jl short 0032h                ; JL(Jl_rel8_64) [32h:jmp64]                           encoding(2 bytes) = 7c df
0053h mov [rcx],r9                  ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R9]         encoding(3 bytes) = 4c 89 09
0056h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
0059h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
005ch add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0060h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0061h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0062h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0063h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0064h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0066h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0067h mov ecx,0EEFh                 ; MOV(Mov_r32_imm32) [ECX,eefh:imm32]                  encoding(5 bytes) = b9 ef 0e 00 00
006ch mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
0076h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC40950h:jmp64]                encoding(5 bytes) = e8 d5 08 c4 5f
007bh mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
007eh mov ecx,0EF7h                 ; MOV(Mov_r32_imm32) [ECX,ef7h:imm32]                  encoding(5 bytes) = b9 f7 0e 00 00
0083h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
008dh call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC40950h:jmp64]                encoding(5 bytes) = e8 be 08 c4 5f
0092h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
0095h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
009ah mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
009dh mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00a1h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00a4h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00a6h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00a8h mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00adh mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b2h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFAB48h:jmp64]        encoding(5 bytes) = e8 91 aa ff ff
00b7h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00bah call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAF63C0h:jmp64]                encoding(5 bytes) = e8 01 63 af 5f
00bfh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00c0h call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC40170h:jmp64]                encoding(5 bytes) = e8 ab 00 c4 5f
00c5h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> xorBytes => new byte[198]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x00,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0xBE,0x19,0x01,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x3C,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x21,0x4D,0x63,0xDA,0x4B,0x8D,0x1C,0x59,0x45,0x3B,0xD0,0x0F,0x83,0x7E,0x00,0x00,0x00,0x46,0x0F,0xB7,0x1C,0x58,0x66,0x44,0x31,0x1B,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xDF,0x4C,0x89,0x09,0x89,0x51,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0xEF,0x0E,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xD5,0x08,0xC4,0x5F,0x4C,0x8B,0xF0,0xB9,0xF7,0x0E,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xBE,0x08,0xC4,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x91,0xAA,0xFF,0xFF,0x48,0x8B,0xC8,0xE8,0x01,0x63,0xAF,0x5F,0xCC,0xE8,0xAB,0x00,0xC4,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<uint> xor(Span<uint> lhs, ReadOnlySpan<uint> rhs)
; location: [7FFC7C0936A0h, 7FFC7C093763h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0014h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0017h mov esi,129h                  ; MOV(Mov_r32_imm32) [ESI,129h:imm32]                  encoding(5 bytes) = be 29 01 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
0023h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0026h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0029h jne short 0065h               ; JNE(Jne_rel8_64) [65h:jmp64]                         encoding(2 bytes) = 75 3a
002bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
002eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0030h jle short 0051h               ; JLE(Jle_rel8_64) [51h:jmp64]                         encoding(2 bytes) = 7e 1f
0032h movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
0035h lea rbx,[r9+r11*4]            ; LEA(Lea_r64_m) [RBX,mem(Unknown,R9:br,DS:sr)]        encoding(4 bytes) = 4b 8d 1c 99
0039h cmp r10d,r8d                  ; CMP(Cmp_r32_rm32) [R10D,R8D]                         encoding(3 bytes) = 45 3b d0
003ch jae near ptr 00beh            ; JAE(Jae_rel32_64) [BEh:jmp64]                        encoding(6 bytes) = 0f 83 7c 00 00 00
0042h mov r11d,[rax+r11*4]          ; MOV(Mov_r32_rm32) [R11D,mem(32u,RAX:br,DS:sr)]       encoding(4 bytes) = 46 8b 1c 98
0046h xor [rbx],r11d                ; XOR(Xor_rm32_r32) [mem(32u,RBX:br,DS:sr),R11D]       encoding(3 bytes) = 44 31 1b
0049h inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
004ch cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
004fh jl short 0032h                ; JL(Jl_rel8_64) [32h:jmp64]                           encoding(2 bytes) = 7c e1
0051h mov [rcx],r9                  ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R9]         encoding(3 bytes) = 4c 89 09
0054h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
0057h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
005ah add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
005eh pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
005fh pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0060h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0061h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0062h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0064h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0065h mov ecx,0EEFh                 ; MOV(Mov_r32_imm32) [ECX,eefh:imm32]                  encoding(5 bytes) = b9 ef 0e 00 00
006ah mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
0074h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC40780h:jmp64]                encoding(5 bytes) = e8 07 07 c4 5f
0079h mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
007ch mov ecx,0EF7h                 ; MOV(Mov_r32_imm32) [ECX,ef7h:imm32]                  encoding(5 bytes) = b9 f7 0e 00 00
0081h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
008bh call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC40780h:jmp64]                encoding(5 bytes) = e8 f0 06 c4 5f
0090h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
0093h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
0098h mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
009bh mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
009fh mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00a2h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00a4h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00a6h mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00abh mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b0h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFA978h:jmp64]        encoding(5 bytes) = e8 c3 a8 ff ff
00b5h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00b8h call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAF61F0h:jmp64]                encoding(5 bytes) = e8 33 61 af 5f
00bdh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00beh call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC3FFA0h:jmp64]                encoding(5 bytes) = e8 dd fe c3 5f
00c3h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> xorBytes => new byte[196]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x00,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0xBE,0x29,0x01,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x3A,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x1F,0x4D,0x63,0xDA,0x4B,0x8D,0x1C,0x99,0x45,0x3B,0xD0,0x0F,0x83,0x7C,0x00,0x00,0x00,0x46,0x8B,0x1C,0x98,0x44,0x31,0x1B,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xE1,0x4C,0x89,0x09,0x89,0x51,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0xEF,0x0E,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x07,0x07,0xC4,0x5F,0x4C,0x8B,0xF0,0xB9,0xF7,0x0E,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xF0,0x06,0xC4,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0xC3,0xA8,0xFF,0xFF,0x48,0x8B,0xC8,0xE8,0x33,0x61,0xAF,0x5F,0xCC,0xE8,0xDD,0xFE,0xC3,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool neq(in ushort lhs, in ushort rhs)
; location: [7FFC7C0937B0h, 7FFC7C0937C1h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,word ptr [rcx]      ; MOVZX(Movzx_r32_rm16) [EAX,mem(16u,RCX:br,DS:sr)]    encoding(3 bytes) = 0f b7 01
0008h cmp ax,[rdx]                  ; CMP(Cmp_r16_rm16) [AX,mem(16u,RDX:br,DS:sr)]         encoding(3 bytes) = 66 3b 02
000bh setne al                      ; SETNE(Setne_rm8) [AL]                                encoding(3 bytes) = 0f 95 c0
000eh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> neqBytes => new byte[18]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB7,0x01,0x66,0x3B,0x02,0x0F,0x95,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool neq(in int lhs, in int rhs)
; location: [7FFC7C0937E0h, 7FFC7C0937EFh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov eax,[rcx]                 ; MOV(Mov_r32_rm32) [EAX,mem(32u,RCX:br,DS:sr)]        encoding(2 bytes) = 8b 01
0007h cmp eax,[rdx]                 ; CMP(Cmp_r32_rm32) [EAX,mem(32u,RDX:br,DS:sr)]        encoding(2 bytes) = 3b 02
0009h setne al                      ; SETNE(Setne_rm8) [AL]                                encoding(3 bytes) = 0f 95 c0
000ch movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> neqBytes => new byte[16]{0x0F,0x1F,0x44,0x00,0x00,0x8B,0x01,0x3B,0x02,0x0F,0x95,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool neq(in uint lhs, in uint rhs)
; location: [7FFC7C093800h, 7FFC7C09380Fh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov eax,[rcx]                 ; MOV(Mov_r32_rm32) [EAX,mem(32u,RCX:br,DS:sr)]        encoding(2 bytes) = 8b 01
0007h cmp eax,[rdx]                 ; CMP(Cmp_r32_rm32) [EAX,mem(32u,RDX:br,DS:sr)]        encoding(2 bytes) = 3b 02
0009h setne al                      ; SETNE(Setne_rm8) [AL]                                encoding(3 bytes) = 0f 95 c0
000ch movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> neqBytes => new byte[16]{0x0F,0x1F,0x44,0x00,0x00,0x8B,0x01,0x3B,0x02,0x0F,0x95,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool neq(in long lhs, in long rhs)
; location: [7FFC7C093820h, 7FFC7C093831h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,[rcx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 01
0008h cmp rax,[rdx]                 ; CMP(Cmp_r64_rm64) [RAX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 3b 02
000bh setne al                      ; SETNE(Setne_rm8) [AL]                                encoding(3 bytes) = 0f 95 c0
000eh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> neqBytes => new byte[18]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x01,0x48,0x3B,0x02,0x0F,0x95,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool neq(in ulong lhs, in ulong rhs)
; location: [7FFC7C093850h, 7FFC7C093861h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,[rcx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 01
0008h cmp rax,[rdx]                 ; CMP(Cmp_r64_rm64) [RAX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 3b 02
000bh setne al                      ; SETNE(Setne_rm8) [AL]                                encoding(3 bytes) = 0f 95 c0
000eh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> neqBytes => new byte[18]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x01,0x48,0x3B,0x02,0x0F,0x95,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> neq(ReadOnlySpan<short> lhs, ReadOnlySpan<short> rhs, Span<bool> dst)
; location: [7FFC7C093E10h, 7FFC7C093E75h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0003h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0004h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0008h mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000bh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000fh mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0012h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0015h xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
0018h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
001ah jle short 004dh               ; JLE(Jle_rel8_64) [4Dh:jmp64]                         encoding(2 bytes) = 7e 31
001ch cmp r11d,r9d                  ; CMP(Cmp_r32_rm32) [R11D,R9D]                         encoding(3 bytes) = 45 3b d9
001fh jae short 0060h               ; JAE(Jae_rel8_64) [60h:jmp64]                         encoding(2 bytes) = 73 3f
0021h movsxd rsi,r11d               ; MOVSXD(Movsxd_r64_rm32) [RSI,R11D]                   encoding(3 bytes) = 49 63 f3
0024h lea rdi,[rax+rsi]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 30
0028h movsx rbx,word ptr [r10+rsi*2]; MOVSX(Movsx_r64_rm16) [RBX,mem(16i,R10:br,DS:sr)]    encoding(5 bytes) = 49 0f bf 1c 72
002dh cmp r11d,[r8+8]               ; CMP(Cmp_r32_rm32) [R11D,mem(32u,R8:br,DS:sr)]        encoding(4 bytes) = 45 3b 58 08
0031h jae short 0060h               ; JAE(Jae_rel8_64) [60h:jmp64]                         encoding(2 bytes) = 73 2d
0033h mov rbp,[r8]                  ; MOV(Mov_r64_rm64) [RBP,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 28
0036h movsx rsi,word ptr [rbp+rsi*2]; MOVSX(Movsx_r64_rm16) [RSI,mem(16i,RBP:br,SS:sr)]    encoding(6 bytes) = 48 0f bf 74 75 00
003ch cmp ebx,esi                   ; CMP(Cmp_r32_rm32) [EBX,ESI]                          encoding(2 bytes) = 3b de
003eh setne sil                     ; SETNE(Setne_rm8) [SIL]                               encoding(4 bytes) = 40 0f 95 c6
0042h mov [rdi],sil                 ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),SIL]           encoding(3 bytes) = 40 88 37
0045h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
0048h cmp r11d,edx                  ; CMP(Cmp_r32_rm32) [R11D,EDX]                         encoding(3 bytes) = 44 3b da
004bh jl short 001ch                ; JL(Jl_rel8_64) [1Ch:jmp64]                           encoding(2 bytes) = 7c cf
004dh mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0050h mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0054h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0057h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
005bh pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
005ch pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
005dh pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
005eh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
005fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0060h call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC3F830h:jmp64]                encoding(5 bytes) = e8 cb f7 c3 5f
0065h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> neqBytes => new byte[102]{0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x12,0x8B,0x52,0x08,0x45,0x33,0xDB,0x85,0xD2,0x7E,0x31,0x45,0x3B,0xD9,0x73,0x3F,0x49,0x63,0xF3,0x48,0x8D,0x3C,0x30,0x49,0x0F,0xBF,0x1C,0x72,0x45,0x3B,0x58,0x08,0x73,0x2D,0x49,0x8B,0x28,0x48,0x0F,0xBF,0x74,0x75,0x00,0x3B,0xDE,0x40,0x0F,0x95,0xC6,0x40,0x88,0x37,0x41,0xFF,0xC3,0x44,0x3B,0xDA,0x7C,0xCF,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0xC3,0xE8,0xCB,0xF7,0xC3,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> neq(ReadOnlySpan<uint> lhs, ReadOnlySpan<uint> rhs, Span<bool> dst)
; location: [7FFC7C093FB0h, 7FFC7C094012h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0003h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0004h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0008h mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000bh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000fh mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0012h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0015h xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
0018h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
001ah jle short 004ah               ; JLE(Jle_rel8_64) [4Ah:jmp64]                         encoding(2 bytes) = 7e 2e
001ch cmp r11d,r9d                  ; CMP(Cmp_r32_rm32) [R11D,R9D]                         encoding(3 bytes) = 45 3b d9
001fh jae short 005dh               ; JAE(Jae_rel8_64) [5Dh:jmp64]                         encoding(2 bytes) = 73 3c
0021h movsxd rsi,r11d               ; MOVSXD(Movsxd_r64_rm32) [RSI,R11D]                   encoding(3 bytes) = 49 63 f3
0024h lea rdi,[rax+rsi]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 30
0028h mov ebx,[r10+rsi*4]           ; MOV(Mov_r32_rm32) [EBX,mem(32u,R10:br,DS:sr)]        encoding(4 bytes) = 41 8b 1c b2
002ch cmp r11d,[r8+8]               ; CMP(Cmp_r32_rm32) [R11D,mem(32u,R8:br,DS:sr)]        encoding(4 bytes) = 45 3b 58 08
0030h jae short 005dh               ; JAE(Jae_rel8_64) [5Dh:jmp64]                         encoding(2 bytes) = 73 2b
0032h mov rbp,[r8]                  ; MOV(Mov_r64_rm64) [RBP,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 28
0035h mov esi,[rbp+rsi*4]           ; MOV(Mov_r32_rm32) [ESI,mem(32u,RBP:br,SS:sr)]        encoding(4 bytes) = 8b 74 b5 00
0039h cmp ebx,esi                   ; CMP(Cmp_r32_rm32) [EBX,ESI]                          encoding(2 bytes) = 3b de
003bh setne sil                     ; SETNE(Setne_rm8) [SIL]                               encoding(4 bytes) = 40 0f 95 c6
003fh mov [rdi],sil                 ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),SIL]           encoding(3 bytes) = 40 88 37
0042h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
0045h cmp r11d,edx                  ; CMP(Cmp_r32_rm32) [R11D,EDX]                         encoding(3 bytes) = 44 3b da
0048h jl short 001ch                ; JL(Jl_rel8_64) [1Ch:jmp64]                           encoding(2 bytes) = 7c d2
004ah mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
004dh mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0051h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0054h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
0058h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0059h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
005ah pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
005bh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
005ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
005dh call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC3F690h:jmp64]                encoding(5 bytes) = e8 2e f6 c3 5f
0062h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> neqBytes => new byte[99]{0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x12,0x8B,0x52,0x08,0x45,0x33,0xDB,0x85,0xD2,0x7E,0x2E,0x45,0x3B,0xD9,0x73,0x3C,0x49,0x63,0xF3,0x48,0x8D,0x3C,0x30,0x41,0x8B,0x1C,0xB2,0x45,0x3B,0x58,0x08,0x73,0x2B,0x49,0x8B,0x28,0x8B,0x74,0xB5,0x00,0x3B,0xDE,0x40,0x0F,0x95,0xC6,0x40,0x88,0x37,0x41,0xFF,0xC3,0x44,0x3B,0xDA,0x7C,0xD2,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0xC3,0xE8,0x2E,0xF6,0xC3,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> neq(ReadOnlySpan<ulong> lhs, ReadOnlySpan<ulong> rhs, Span<bool> dst)
; location: [7FFC7C0940C0h, 7FFC7C094124h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0003h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0004h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0008h mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000bh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000fh mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0012h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0015h xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
0018h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
001ah jle short 004ch               ; JLE(Jle_rel8_64) [4Ch:jmp64]                         encoding(2 bytes) = 7e 30
001ch cmp r11d,r9d                  ; CMP(Cmp_r32_rm32) [R11D,R9D]                         encoding(3 bytes) = 45 3b d9
001fh jae short 005fh               ; JAE(Jae_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 73 3e
0021h movsxd rsi,r11d               ; MOVSXD(Movsxd_r64_rm32) [RSI,R11D]                   encoding(3 bytes) = 49 63 f3
0024h lea rdi,[rax+rsi]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 30
0028h mov rbx,[r10+rsi*8]           ; MOV(Mov_r64_rm64) [RBX,mem(64u,R10:br,DS:sr)]        encoding(4 bytes) = 49 8b 1c f2
002ch cmp r11d,[r8+8]               ; CMP(Cmp_r32_rm32) [R11D,mem(32u,R8:br,DS:sr)]        encoding(4 bytes) = 45 3b 58 08
0030h jae short 005fh               ; JAE(Jae_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 73 2d
0032h mov rbp,[r8]                  ; MOV(Mov_r64_rm64) [RBP,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 28
0035h mov rsi,[rbp+rsi*8]           ; MOV(Mov_r64_rm64) [RSI,mem(64u,RBP:br,SS:sr)]        encoding(5 bytes) = 48 8b 74 f5 00
003ah cmp rbx,rsi                   ; CMP(Cmp_r64_rm64) [RBX,RSI]                          encoding(3 bytes) = 48 3b de
003dh setne sil                     ; SETNE(Setne_rm8) [SIL]                               encoding(4 bytes) = 40 0f 95 c6
0041h mov [rdi],sil                 ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),SIL]           encoding(3 bytes) = 40 88 37
0044h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
0047h cmp r11d,edx                  ; CMP(Cmp_r32_rm32) [R11D,EDX]                         encoding(3 bytes) = 44 3b da
004ah jl short 001ch                ; JL(Jl_rel8_64) [1Ch:jmp64]                           encoding(2 bytes) = 7c d0
004ch mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
004fh mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0053h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0056h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
005ah pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
005bh pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
005ch pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
005dh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
005eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
005fh call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC3F580h:jmp64]                encoding(5 bytes) = e8 1c f5 c3 5f
0064h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> neqBytes => new byte[101]{0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x12,0x8B,0x52,0x08,0x45,0x33,0xDB,0x85,0xD2,0x7E,0x30,0x45,0x3B,0xD9,0x73,0x3E,0x49,0x63,0xF3,0x48,0x8D,0x3C,0x30,0x49,0x8B,0x1C,0xF2,0x45,0x3B,0x58,0x08,0x73,0x2D,0x49,0x8B,0x28,0x48,0x8B,0x74,0xF5,0x00,0x48,0x3B,0xDE,0x40,0x0F,0x95,0xC6,0x40,0x88,0x37,0x41,0xFF,0xC3,0x44,0x3B,0xDA,0x7C,0xD0,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0xC3,0xE8,0x1C,0xF5,0xC3,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> neq(ReadOnlySpan<double> lhs, ReadOnlySpan<double> rhs, Span<bool> dst)
; location: [7FFC7C0941E0h, 7FFC7C09424Eh]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0003h sub rsp,20h                   ; SUB(Sub_rm64_imm8) [RSP,20h:imm64]                   encoding(4 bytes) = 48 83 ec 20
0007h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
000ah mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000dh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
0011h mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0014h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0017h xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
001ah test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
001ch jle short 0057h               ; JLE(Jle_rel8_64) [57h:jmp64]                         encoding(2 bytes) = 7e 39
001eh cmp r11d,r9d                  ; CMP(Cmp_r32_rm32) [R11D,R9D]                         encoding(3 bytes) = 45 3b d9
0021h jae short 0069h               ; JAE(Jae_rel8_64) [69h:jmp64]                         encoding(2 bytes) = 73 46
0023h movsxd rsi,r11d               ; MOVSXD(Movsxd_r64_rm32) [RSI,R11D]                   encoding(3 bytes) = 49 63 f3
0026h lea rdi,[rax+rsi]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 30
002ah vmovsd xmm0,qword ptr [r10+rsi*8]; VMOVSD(VEX_Vmovsd_xmm_m64) [XMM0,mem(Float64,R10:br,DS:sr)] encoding(VEX, 6 bytes) = c4 c1 7b 10 04 f2
0030h cmp r11d,[r8+8]               ; CMP(Cmp_r32_rm32) [R11D,mem(32u,R8:br,DS:sr)]        encoding(4 bytes) = 45 3b 58 08
0034h jae short 0069h               ; JAE(Jae_rel8_64) [69h:jmp64]                         encoding(2 bytes) = 73 33
0036h mov rbx,[r8]                  ; MOV(Mov_r64_rm64) [RBX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 18
0039h vmovsd xmm1,qword ptr [rbx+rsi*8]; VMOVSD(VEX_Vmovsd_xmm_m64) [XMM1,mem(Float64,RBX:br,DS:sr)] encoding(VEX, 5 bytes) = c5 fb 10 0c f3
003eh vucomisd xmm0,xmm1            ; VUCOMISD(VEX_Vucomisd_xmm_xmmm64) [XMM0,XMM1]        encoding(VEX, 4 bytes) = c5 f9 2e c1
0042h setp sil                      ; SETP(Setp_rm8) [SIL]                                 encoding(4 bytes) = 40 0f 9a c6
0046h jp short 004ch                ; JP(Jp_rel8_64) [4Ch:jmp64]                           encoding(2 bytes) = 7a 04
0048h setne sil                     ; SETNE(Setne_rm8) [SIL]                               encoding(4 bytes) = 40 0f 95 c6
004ch mov [rdi],sil                 ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),SIL]           encoding(3 bytes) = 40 88 37
004fh inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
0052h cmp r11d,edx                  ; CMP(Cmp_r32_rm32) [R11D,EDX]                         encoding(3 bytes) = 44 3b da
0055h jl short 001eh                ; JL(Jl_rel8_64) [1Eh:jmp64]                           encoding(2 bytes) = 7c c7
0057h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
005ah mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
005eh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0061h add rsp,20h                   ; ADD(Add_rm64_imm8) [RSP,20h:imm64]                   encoding(4 bytes) = 48 83 c4 20
0065h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0066h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0067h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0068h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0069h call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC3F460h:jmp64]                encoding(5 bytes) = e8 f2 f3 c3 5f
006eh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> neqBytes => new byte[111]{0x57,0x56,0x53,0x48,0x83,0xEC,0x20,0xC5,0xF8,0x77,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x12,0x8B,0x52,0x08,0x45,0x33,0xDB,0x85,0xD2,0x7E,0x39,0x45,0x3B,0xD9,0x73,0x46,0x49,0x63,0xF3,0x48,0x8D,0x3C,0x30,0xC4,0xC1,0x7B,0x10,0x04,0xF2,0x45,0x3B,0x58,0x08,0x73,0x33,0x49,0x8B,0x18,0xC5,0xFB,0x10,0x0C,0xF3,0xC5,0xF9,0x2E,0xC1,0x40,0x0F,0x9A,0xC6,0x7A,0x04,0x40,0x0F,0x95,0xC6,0x40,0x88,0x37,0x41,0xFF,0xC3,0x44,0x3B,0xDA,0x7C,0xC7,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x20,0x5B,0x5E,0x5F,0xC3,0xE8,0xF2,0xF3,0xC3,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> neq(ReadOnlySpan<byte> lhs, ReadOnlySpan<byte> rhs)
; location: [7FFC7C0943A0h, 7FFC7C0944A5h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push r12                      ; PUSH(Push_r64) [R12]                                 encoding(2 bytes) = 41 54
0006h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0007h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0008h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0009h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
000ah sub rsp,60h                   ; SUB(Sub_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 ec 60
000eh vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0011h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0014h lea rdi,[rsp+28h]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 7c 24 28
0019h mov ecx,0Ch                   ; MOV(Mov_r32_imm32) [ECX,ch:imm32]                    encoding(5 bytes) = b9 0c 00 00 00
001eh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0020h rep stosd                     ; STOSD(Stosd_m32_EAX) [mem(32u),EAX]                  encoding(2 bytes) = f3 ab
0022h mov rcx,rsi                   ; MOV(Mov_r64_rm64) [RCX,RSI]                          encoding(3 bytes) = 48 8b ce
0025h mov rbx,rcx                   ; MOV(Mov_r64_rm64) [RBX,RCX]                          encoding(3 bytes) = 48 8b d9
0028h mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
002bh mov rdi,r8                    ; MOV(Mov_r64_rm64) [RDI,R8]                           encoding(3 bytes) = 49 8b f8
002eh mov ebp,0AFh                  ; MOV(Mov_r32_imm32) [EBP,afh:imm32]                   encoding(5 bytes) = bd af 00 00 00
0033h mov r14d,1                    ; MOV(Mov_r32_imm32) [R14D,1h:imm32]                   encoding(6 bytes) = 41 be 01 00 00 00
0039h mov r15d,[rsi+8]              ; MOV(Mov_r32_rm32) [R15D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 8b 7e 08
003dh mov r12d,[rdi+8]              ; MOV(Mov_r32_rm32) [R12D,mem(32u,RDI:br,DS:sr)]       encoding(4 bytes) = 44 8b 67 08
0041h cmp r15d,r12d                 ; CMP(Cmp_r32_rm32) [R15D,R12D]                        encoding(3 bytes) = 45 3b fc
0044h jne short 00abh               ; JNE(Jne_rel8_64) [ABh:jmp64]                         encoding(2 bytes) = 75 65
0046h movsxd rdx,r15d               ; MOVSXD(Movsxd_r64_rm32) [RDX,R15D]                   encoding(3 bytes) = 49 63 d7
0049h mov rcx,7FFC7C245DC8h         ; MOV(Mov_r64_imm64) [RCX,7ffc7c245dc8h:imm64]         encoding(10 bytes) = 48 b9 c8 5d 24 7c fc 7f 00 00
0053h call 7FFCDBBA24A0h            ; CALL(Call_rel32_64) [5FB0E100h:jmp64]                encoding(5 bytes) = e8 a8 e0 b0 5f
0058h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
005ch mov edx,[rax+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 50 08
005fh mov r8,rbx                    ; MOV(Mov_r64_rm64) [R8,RBX]                           encoding(3 bytes) = 4c 8b c3
0062h vmovdqu xmm0,xmmword ptr [rsi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 06
0066h vmovdqu xmmword ptr [rsp+48h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 48
006ch vmovdqu xmm0,xmmword ptr [rdi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RDI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 07
0070h vmovdqu xmmword ptr [rsp+38h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 38
0076h lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
007bh mov [r9],rcx                  ; MOV(Mov_rm64_r64) [mem(64u,R9:br,DS:sr),RCX]         encoding(3 bytes) = 49 89 09
007eh mov [r9+8],edx                ; MOV(Mov_rm32_r32) [mem(32u,R9:br,DS:sr),EDX]         encoding(4 bytes) = 41 89 51 08
0082h mov rcx,r8                    ; MOV(Mov_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 8b c8
0085h lea rdx,[rsp+48h]             ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 54 24 48
008ah lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
008fh lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
0094h call 7FFC7C093D80h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFF9E0h:jmp64]        encoding(5 bytes) = e8 47 f9 ff ff
0099h mov rax,rbx                   ; MOV(Mov_r64_rm64) [RAX,RBX]                          encoding(3 bytes) = 48 8b c3
009ch add rsp,60h                   ; ADD(Add_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 c4 60
00a0h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
00a1h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
00a2h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
00a3h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
00a4h pop r12                       ; POP(Pop_r64) [R12]                                   encoding(2 bytes) = 41 5c
00a6h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
00a8h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
00aah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
00abh mov ecx,0E33h                 ; MOV(Mov_r32_imm32) [ECX,e33h:imm32]                  encoding(5 bytes) = b9 33 0e 00 00
00b0h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
00bah call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC3FA80h:jmp64]                encoding(5 bytes) = e8 c1 f9 c3 5f
00bfh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
00c2h mov ecx,0E3Bh                 ; MOV(Mov_r32_imm32) [ECX,e3bh:imm32]                  encoding(5 bytes) = b9 3b 0e 00 00
00c7h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
00d1h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC3FA80h:jmp64]                encoding(5 bytes) = e8 aa f9 c3 5f
00d6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00d9h lea r8,[rsp+58h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 58
00deh mov [r8],r14b                 ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),R14L]           encoding(3 bytes) = 45 88 30
00e1h mov [r8+4],ebp                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBP]         encoding(4 bytes) = 41 89 68 04
00e5h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00e8h mov ecx,r15d                  ; MOV(Mov_r32_rm32) [ECX,R15D]                         encoding(3 bytes) = 41 8b cf
00ebh mov edx,r12d                  ; MOV(Mov_r32_rm32) [EDX,R12D]                         encoding(3 bytes) = 41 8b d4
00eeh mov rax,[rsp+58h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 58
00f3h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00f8h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFF9C78h:jmp64]        encoding(5 bytes) = e8 7b 9b ff ff
00fdh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
0100h call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAF54F0h:jmp64]                encoding(5 bytes) = e8 eb 53 af 5f
0105h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> neqBytes => new byte[262]{0x41,0x57,0x41,0x56,0x41,0x54,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x60,0xC5,0xF8,0x77,0x48,0x8B,0xF1,0x48,0x8D,0x7C,0x24,0x28,0xB9,0x0C,0x00,0x00,0x00,0x33,0xC0,0xF3,0xAB,0x48,0x8B,0xCE,0x48,0x8B,0xD9,0x48,0x8B,0xF2,0x49,0x8B,0xF8,0xBD,0xAF,0x00,0x00,0x00,0x41,0xBE,0x01,0x00,0x00,0x00,0x44,0x8B,0x7E,0x08,0x44,0x8B,0x67,0x08,0x45,0x3B,0xFC,0x75,0x65,0x49,0x63,0xD7,0x48,0xB9,0xC8,0x5D,0x24,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xA8,0xE0,0xB0,0x5F,0x48,0x8D,0x48,0x10,0x8B,0x50,0x08,0x4C,0x8B,0xC3,0xC5,0xFA,0x6F,0x06,0xC5,0xFA,0x7F,0x44,0x24,0x48,0xC5,0xFA,0x6F,0x07,0xC5,0xFA,0x7F,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0x49,0x89,0x09,0x41,0x89,0x51,0x08,0x49,0x8B,0xC8,0x48,0x8D,0x54,0x24,0x48,0x4C,0x8D,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0xE8,0x47,0xF9,0xFF,0xFF,0x48,0x8B,0xC3,0x48,0x83,0xC4,0x60,0x5B,0x5D,0x5E,0x5F,0x41,0x5C,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0x33,0x0E,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xC1,0xF9,0xC3,0x5F,0x48,0x8B,0xF0,0xB9,0x3B,0x0E,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xAA,0xF9,0xC3,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x58,0x45,0x88,0x30,0x41,0x89,0x68,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCF,0x41,0x8B,0xD4,0x48,0x8B,0x44,0x24,0x58,0x48,0x89,0x44,0x24,0x20,0xE8,0x7B,0x9B,0xFF,0xFF,0x48,0x8B,0xC8,0xE8,0xEB,0x53,0xAF,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> neq(ReadOnlySpan<short> lhs, ReadOnlySpan<short> rhs)
; location: [7FFC7C0944D0h, 7FFC7C0945D5h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push r12                      ; PUSH(Push_r64) [R12]                                 encoding(2 bytes) = 41 54
0006h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0007h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0008h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0009h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
000ah sub rsp,60h                   ; SUB(Sub_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 ec 60
000eh vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0011h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0014h lea rdi,[rsp+28h]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 7c 24 28
0019h mov ecx,0Ch                   ; MOV(Mov_r32_imm32) [ECX,ch:imm32]                    encoding(5 bytes) = b9 0c 00 00 00
001eh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0020h rep stosd                     ; STOSD(Stosd_m32_EAX) [mem(32u),EAX]                  encoding(2 bytes) = f3 ab
0022h mov rcx,rsi                   ; MOV(Mov_r64_rm64) [RCX,RSI]                          encoding(3 bytes) = 48 8b ce
0025h mov rbx,rcx                   ; MOV(Mov_r64_rm64) [RBX,RCX]                          encoding(3 bytes) = 48 8b d9
0028h mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
002bh mov rdi,r8                    ; MOV(Mov_r64_rm64) [RDI,R8]                           encoding(3 bytes) = 49 8b f8
002eh mov ebp,0B3h                  ; MOV(Mov_r32_imm32) [EBP,b3h:imm32]                   encoding(5 bytes) = bd b3 00 00 00
0033h mov r14d,1                    ; MOV(Mov_r32_imm32) [R14D,1h:imm32]                   encoding(6 bytes) = 41 be 01 00 00 00
0039h mov r15d,[rsi+8]              ; MOV(Mov_r32_rm32) [R15D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 8b 7e 08
003dh mov r12d,[rdi+8]              ; MOV(Mov_r32_rm32) [R12D,mem(32u,RDI:br,DS:sr)]       encoding(4 bytes) = 44 8b 67 08
0041h cmp r15d,r12d                 ; CMP(Cmp_r32_rm32) [R15D,R12D]                        encoding(3 bytes) = 45 3b fc
0044h jne short 00abh               ; JNE(Jne_rel8_64) [ABh:jmp64]                         encoding(2 bytes) = 75 65
0046h movsxd rdx,r15d               ; MOVSXD(Movsxd_r64_rm32) [RDX,R15D]                   encoding(3 bytes) = 49 63 d7
0049h mov rcx,7FFC7C245DC8h         ; MOV(Mov_r64_imm64) [RCX,7ffc7c245dc8h:imm64]         encoding(10 bytes) = 48 b9 c8 5d 24 7c fc 7f 00 00
0053h call 7FFCDBBA24A0h            ; CALL(Call_rel32_64) [5FB0DFD0h:jmp64]                encoding(5 bytes) = e8 78 df b0 5f
0058h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
005ch mov edx,[rax+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 50 08
005fh mov r8,rbx                    ; MOV(Mov_r64_rm64) [R8,RBX]                           encoding(3 bytes) = 4c 8b c3
0062h vmovdqu xmm0,xmmword ptr [rsi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 06
0066h vmovdqu xmmword ptr [rsp+48h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 48
006ch vmovdqu xmm0,xmmword ptr [rdi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RDI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 07
0070h vmovdqu xmmword ptr [rsp+38h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 38
0076h lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
007bh mov [r9],rcx                  ; MOV(Mov_rm64_r64) [mem(64u,R9:br,DS:sr),RCX]         encoding(3 bytes) = 49 89 09
007eh mov [r9+8],edx                ; MOV(Mov_rm32_r32) [mem(32u,R9:br,DS:sr),EDX]         encoding(4 bytes) = 41 89 51 08
0082h mov rcx,r8                    ; MOV(Mov_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 8b c8
0085h lea rdx,[rsp+48h]             ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 54 24 48
008ah lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
008fh lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
0094h call 7FFC7C093E10h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFF940h:jmp64]        encoding(5 bytes) = e8 a7 f8 ff ff
0099h mov rax,rbx                   ; MOV(Mov_r64_rm64) [RAX,RBX]                          encoding(3 bytes) = 48 8b c3
009ch add rsp,60h                   ; ADD(Add_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 c4 60
00a0h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
00a1h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
00a2h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
00a3h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
00a4h pop r12                       ; POP(Pop_r64) [R12]                                   encoding(2 bytes) = 41 5c
00a6h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
00a8h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
00aah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
00abh mov ecx,0E33h                 ; MOV(Mov_r32_imm32) [ECX,e33h:imm32]                  encoding(5 bytes) = b9 33 0e 00 00
00b0h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
00bah call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC3F950h:jmp64]                encoding(5 bytes) = e8 91 f8 c3 5f
00bfh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
00c2h mov ecx,0E3Bh                 ; MOV(Mov_r32_imm32) [ECX,e3bh:imm32]                  encoding(5 bytes) = b9 3b 0e 00 00
00c7h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
00d1h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC3F950h:jmp64]                encoding(5 bytes) = e8 7a f8 c3 5f
00d6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00d9h lea r8,[rsp+58h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 58
00deh mov [r8],r14b                 ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),R14L]           encoding(3 bytes) = 45 88 30
00e1h mov [r8+4],ebp                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBP]         encoding(4 bytes) = 41 89 68 04
00e5h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00e8h mov ecx,r15d                  ; MOV(Mov_r32_rm32) [ECX,R15D]                         encoding(3 bytes) = 41 8b cf
00ebh mov edx,r12d                  ; MOV(Mov_r32_rm32) [EDX,R12D]                         encoding(3 bytes) = 41 8b d4
00eeh mov rax,[rsp+58h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 58
00f3h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00f8h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFF9B48h:jmp64]        encoding(5 bytes) = e8 4b 9a ff ff
00fdh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
0100h call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAF53C0h:jmp64]                encoding(5 bytes) = e8 bb 52 af 5f
0105h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> neqBytes => new byte[262]{0x41,0x57,0x41,0x56,0x41,0x54,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x60,0xC5,0xF8,0x77,0x48,0x8B,0xF1,0x48,0x8D,0x7C,0x24,0x28,0xB9,0x0C,0x00,0x00,0x00,0x33,0xC0,0xF3,0xAB,0x48,0x8B,0xCE,0x48,0x8B,0xD9,0x48,0x8B,0xF2,0x49,0x8B,0xF8,0xBD,0xB3,0x00,0x00,0x00,0x41,0xBE,0x01,0x00,0x00,0x00,0x44,0x8B,0x7E,0x08,0x44,0x8B,0x67,0x08,0x45,0x3B,0xFC,0x75,0x65,0x49,0x63,0xD7,0x48,0xB9,0xC8,0x5D,0x24,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x78,0xDF,0xB0,0x5F,0x48,0x8D,0x48,0x10,0x8B,0x50,0x08,0x4C,0x8B,0xC3,0xC5,0xFA,0x6F,0x06,0xC5,0xFA,0x7F,0x44,0x24,0x48,0xC5,0xFA,0x6F,0x07,0xC5,0xFA,0x7F,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0x49,0x89,0x09,0x41,0x89,0x51,0x08,0x49,0x8B,0xC8,0x48,0x8D,0x54,0x24,0x48,0x4C,0x8D,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0xE8,0xA7,0xF8,0xFF,0xFF,0x48,0x8B,0xC3,0x48,0x83,0xC4,0x60,0x5B,0x5D,0x5E,0x5F,0x41,0x5C,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0x33,0x0E,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x91,0xF8,0xC3,0x5F,0x48,0x8B,0xF0,0xB9,0x3B,0x0E,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x7A,0xF8,0xC3,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x58,0x45,0x88,0x30,0x41,0x89,0x68,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCF,0x41,0x8B,0xD4,0x48,0x8B,0x44,0x24,0x58,0x48,0x89,0x44,0x24,0x20,0xE8,0x4B,0x9A,0xFF,0xFF,0x48,0x8B,0xC8,0xE8,0xBB,0x52,0xAF,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> neq(ReadOnlySpan<ushort> lhs, ReadOnlySpan<ushort> rhs)
; location: [7FFC7C094600h, 7FFC7C094705h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push r12                      ; PUSH(Push_r64) [R12]                                 encoding(2 bytes) = 41 54
0006h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0007h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0008h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0009h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
000ah sub rsp,60h                   ; SUB(Sub_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 ec 60
000eh vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0011h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0014h lea rdi,[rsp+28h]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 7c 24 28
0019h mov ecx,0Ch                   ; MOV(Mov_r32_imm32) [ECX,ch:imm32]                    encoding(5 bytes) = b9 0c 00 00 00
001eh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0020h rep stosd                     ; STOSD(Stosd_m32_EAX) [mem(32u),EAX]                  encoding(2 bytes) = f3 ab
0022h mov rcx,rsi                   ; MOV(Mov_r64_rm64) [RCX,RSI]                          encoding(3 bytes) = 48 8b ce
0025h mov rbx,rcx                   ; MOV(Mov_r64_rm64) [RBX,RCX]                          encoding(3 bytes) = 48 8b d9
0028h mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
002bh mov rdi,r8                    ; MOV(Mov_r64_rm64) [RDI,R8]                           encoding(3 bytes) = 49 8b f8
002eh mov ebp,0B7h                  ; MOV(Mov_r32_imm32) [EBP,b7h:imm32]                   encoding(5 bytes) = bd b7 00 00 00
0033h mov r14d,1                    ; MOV(Mov_r32_imm32) [R14D,1h:imm32]                   encoding(6 bytes) = 41 be 01 00 00 00
0039h mov r15d,[rsi+8]              ; MOV(Mov_r32_rm32) [R15D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 8b 7e 08
003dh mov r12d,[rdi+8]              ; MOV(Mov_r32_rm32) [R12D,mem(32u,RDI:br,DS:sr)]       encoding(4 bytes) = 44 8b 67 08
0041h cmp r15d,r12d                 ; CMP(Cmp_r32_rm32) [R15D,R12D]                        encoding(3 bytes) = 45 3b fc
0044h jne short 00abh               ; JNE(Jne_rel8_64) [ABh:jmp64]                         encoding(2 bytes) = 75 65
0046h movsxd rdx,r15d               ; MOVSXD(Movsxd_r64_rm32) [RDX,R15D]                   encoding(3 bytes) = 49 63 d7
0049h mov rcx,7FFC7C245DC8h         ; MOV(Mov_r64_imm64) [RCX,7ffc7c245dc8h:imm64]         encoding(10 bytes) = 48 b9 c8 5d 24 7c fc 7f 00 00
0053h call 7FFCDBBA24A0h            ; CALL(Call_rel32_64) [5FB0DEA0h:jmp64]                encoding(5 bytes) = e8 48 de b0 5f
0058h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
005ch mov edx,[rax+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 50 08
005fh mov r8,rbx                    ; MOV(Mov_r64_rm64) [R8,RBX]                           encoding(3 bytes) = 4c 8b c3
0062h vmovdqu xmm0,xmmword ptr [rsi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 06
0066h vmovdqu xmmword ptr [rsp+48h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 48
006ch vmovdqu xmm0,xmmword ptr [rdi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RDI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 07
0070h vmovdqu xmmword ptr [rsp+38h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 38
0076h lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
007bh mov [r9],rcx                  ; MOV(Mov_rm64_r64) [mem(64u,R9:br,DS:sr),RCX]         encoding(3 bytes) = 49 89 09
007eh mov [r9+8],edx                ; MOV(Mov_rm32_r32) [mem(32u,R9:br,DS:sr),EDX]         encoding(4 bytes) = 41 89 51 08
0082h mov rcx,r8                    ; MOV(Mov_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 8b c8
0085h lea rdx,[rsp+48h]             ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 54 24 48
008ah lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
008fh lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
0094h call 7FFC7C093EA0h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFF8A0h:jmp64]        encoding(5 bytes) = e8 07 f8 ff ff
0099h mov rax,rbx                   ; MOV(Mov_r64_rm64) [RAX,RBX]                          encoding(3 bytes) = 48 8b c3
009ch add rsp,60h                   ; ADD(Add_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 c4 60
00a0h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
00a1h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
00a2h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
00a3h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
00a4h pop r12                       ; POP(Pop_r64) [R12]                                   encoding(2 bytes) = 41 5c
00a6h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
00a8h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
00aah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
00abh mov ecx,0E33h                 ; MOV(Mov_r32_imm32) [ECX,e33h:imm32]                  encoding(5 bytes) = b9 33 0e 00 00
00b0h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
00bah call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC3F820h:jmp64]                encoding(5 bytes) = e8 61 f7 c3 5f
00bfh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
00c2h mov ecx,0E3Bh                 ; MOV(Mov_r32_imm32) [ECX,e3bh:imm32]                  encoding(5 bytes) = b9 3b 0e 00 00
00c7h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
00d1h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC3F820h:jmp64]                encoding(5 bytes) = e8 4a f7 c3 5f
00d6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00d9h lea r8,[rsp+58h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 58
00deh mov [r8],r14b                 ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),R14L]           encoding(3 bytes) = 45 88 30
00e1h mov [r8+4],ebp                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBP]         encoding(4 bytes) = 41 89 68 04
00e5h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00e8h mov ecx,r15d                  ; MOV(Mov_r32_rm32) [ECX,R15D]                         encoding(3 bytes) = 41 8b cf
00ebh mov edx,r12d                  ; MOV(Mov_r32_rm32) [EDX,R12D]                         encoding(3 bytes) = 41 8b d4
00eeh mov rax,[rsp+58h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 58
00f3h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00f8h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFF9A18h:jmp64]        encoding(5 bytes) = e8 1b 99 ff ff
00fdh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
0100h call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAF5290h:jmp64]                encoding(5 bytes) = e8 8b 51 af 5f
0105h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> neqBytes => new byte[262]{0x41,0x57,0x41,0x56,0x41,0x54,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x60,0xC5,0xF8,0x77,0x48,0x8B,0xF1,0x48,0x8D,0x7C,0x24,0x28,0xB9,0x0C,0x00,0x00,0x00,0x33,0xC0,0xF3,0xAB,0x48,0x8B,0xCE,0x48,0x8B,0xD9,0x48,0x8B,0xF2,0x49,0x8B,0xF8,0xBD,0xB7,0x00,0x00,0x00,0x41,0xBE,0x01,0x00,0x00,0x00,0x44,0x8B,0x7E,0x08,0x44,0x8B,0x67,0x08,0x45,0x3B,0xFC,0x75,0x65,0x49,0x63,0xD7,0x48,0xB9,0xC8,0x5D,0x24,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x48,0xDE,0xB0,0x5F,0x48,0x8D,0x48,0x10,0x8B,0x50,0x08,0x4C,0x8B,0xC3,0xC5,0xFA,0x6F,0x06,0xC5,0xFA,0x7F,0x44,0x24,0x48,0xC5,0xFA,0x6F,0x07,0xC5,0xFA,0x7F,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0x49,0x89,0x09,0x41,0x89,0x51,0x08,0x49,0x8B,0xC8,0x48,0x8D,0x54,0x24,0x48,0x4C,0x8D,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0xE8,0x07,0xF8,0xFF,0xFF,0x48,0x8B,0xC3,0x48,0x83,0xC4,0x60,0x5B,0x5D,0x5E,0x5F,0x41,0x5C,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0x33,0x0E,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x61,0xF7,0xC3,0x5F,0x48,0x8B,0xF0,0xB9,0x3B,0x0E,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x4A,0xF7,0xC3,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x58,0x45,0x88,0x30,0x41,0x89,0x68,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCF,0x41,0x8B,0xD4,0x48,0x8B,0x44,0x24,0x58,0x48,0x89,0x44,0x24,0x20,0xE8,0x1B,0x99,0xFF,0xFF,0x48,0x8B,0xC8,0xE8,0x8B,0x51,0xAF,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> neq(ReadOnlySpan<float> lhs, ReadOnlySpan<float> rhs)
; location: [7FFC7C094BF0h, 7FFC7C094CF5h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push r12                      ; PUSH(Push_r64) [R12]                                 encoding(2 bytes) = 41 54
0006h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0007h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0008h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0009h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
000ah sub rsp,60h                   ; SUB(Sub_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 ec 60
000eh vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0011h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0014h lea rdi,[rsp+28h]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 7c 24 28
0019h mov ecx,0Ch                   ; MOV(Mov_r32_imm32) [ECX,ch:imm32]                    encoding(5 bytes) = b9 0c 00 00 00
001eh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0020h rep stosd                     ; STOSD(Stosd_m32_EAX) [mem(32u),EAX]                  encoding(2 bytes) = f3 ab
0022h mov rcx,rsi                   ; MOV(Mov_r64_rm64) [RCX,RSI]                          encoding(3 bytes) = 48 8b ce
0025h mov rbx,rcx                   ; MOV(Mov_r64_rm64) [RBX,RCX]                          encoding(3 bytes) = 48 8b d9
0028h mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
002bh mov rdi,r8                    ; MOV(Mov_r64_rm64) [RDI,R8]                           encoding(3 bytes) = 49 8b f8
002eh mov ebp,0CBh                  ; MOV(Mov_r32_imm32) [EBP,cbh:imm32]                   encoding(5 bytes) = bd cb 00 00 00
0033h mov r14d,1                    ; MOV(Mov_r32_imm32) [R14D,1h:imm32]                   encoding(6 bytes) = 41 be 01 00 00 00
0039h mov r15d,[rsi+8]              ; MOV(Mov_r32_rm32) [R15D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 8b 7e 08
003dh mov r12d,[rdi+8]              ; MOV(Mov_r32_rm32) [R12D,mem(32u,RDI:br,DS:sr)]       encoding(4 bytes) = 44 8b 67 08
0041h cmp r15d,r12d                 ; CMP(Cmp_r32_rm32) [R15D,R12D]                        encoding(3 bytes) = 45 3b fc
0044h jne short 00abh               ; JNE(Jne_rel8_64) [ABh:jmp64]                         encoding(2 bytes) = 75 65
0046h movsxd rdx,r15d               ; MOVSXD(Movsxd_r64_rm32) [RDX,R15D]                   encoding(3 bytes) = 49 63 d7
0049h mov rcx,7FFC7C245DC8h         ; MOV(Mov_r64_imm64) [RCX,7ffc7c245dc8h:imm64]         encoding(10 bytes) = 48 b9 c8 5d 24 7c fc 7f 00 00
0053h call 7FFCDBBA24A0h            ; CALL(Call_rel32_64) [5FB0D8B0h:jmp64]                encoding(5 bytes) = e8 58 d8 b0 5f
0058h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
005ch mov edx,[rax+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 50 08
005fh mov r8,rbx                    ; MOV(Mov_r64_rm64) [R8,RBX]                           encoding(3 bytes) = 4c 8b c3
0062h vmovdqu xmm0,xmmword ptr [rsi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 06
0066h vmovdqu xmmword ptr [rsp+48h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 48
006ch vmovdqu xmm0,xmmword ptr [rdi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RDI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 07
0070h vmovdqu xmmword ptr [rsp+38h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 38
0076h lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
007bh mov [r9],rcx                  ; MOV(Mov_rm64_r64) [mem(64u,R9:br,DS:sr),RCX]         encoding(3 bytes) = 49 89 09
007eh mov [r9+8],edx                ; MOV(Mov_rm32_r32) [mem(32u,R9:br,DS:sr),EDX]         encoding(4 bytes) = 41 89 51 08
0082h mov rcx,r8                    ; MOV(Mov_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 8b c8
0085h lea rdx,[rsp+48h]             ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 54 24 48
008ah lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
008fh lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
0094h call 7FFC7C094150h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFF560h:jmp64]        encoding(5 bytes) = e8 c7 f4 ff ff
0099h mov rax,rbx                   ; MOV(Mov_r64_rm64) [RAX,RBX]                          encoding(3 bytes) = 48 8b c3
009ch add rsp,60h                   ; ADD(Add_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 c4 60
00a0h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
00a1h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
00a2h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
00a3h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
00a4h pop r12                       ; POP(Pop_r64) [R12]                                   encoding(2 bytes) = 41 5c
00a6h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
00a8h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
00aah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
00abh mov ecx,0E33h                 ; MOV(Mov_r32_imm32) [ECX,e33h:imm32]                  encoding(5 bytes) = b9 33 0e 00 00
00b0h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
00bah call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC3F230h:jmp64]                encoding(5 bytes) = e8 71 f1 c3 5f
00bfh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
00c2h mov ecx,0E3Bh                 ; MOV(Mov_r32_imm32) [ECX,e3bh:imm32]                  encoding(5 bytes) = b9 3b 0e 00 00
00c7h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
00d1h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC3F230h:jmp64]                encoding(5 bytes) = e8 5a f1 c3 5f
00d6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00d9h lea r8,[rsp+58h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 58
00deh mov [r8],r14b                 ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),R14L]           encoding(3 bytes) = 45 88 30
00e1h mov [r8+4],ebp                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBP]         encoding(4 bytes) = 41 89 68 04
00e5h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00e8h mov ecx,r15d                  ; MOV(Mov_r32_rm32) [ECX,R15D]                         encoding(3 bytes) = 41 8b cf
00ebh mov edx,r12d                  ; MOV(Mov_r32_rm32) [EDX,R12D]                         encoding(3 bytes) = 41 8b d4
00eeh mov rax,[rsp+58h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 58
00f3h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00f8h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFF9428h:jmp64]        encoding(5 bytes) = e8 2b 93 ff ff
00fdh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
0100h call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAF4CA0h:jmp64]                encoding(5 bytes) = e8 9b 4b af 5f
0105h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> neqBytes => new byte[262]{0x41,0x57,0x41,0x56,0x41,0x54,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x60,0xC5,0xF8,0x77,0x48,0x8B,0xF1,0x48,0x8D,0x7C,0x24,0x28,0xB9,0x0C,0x00,0x00,0x00,0x33,0xC0,0xF3,0xAB,0x48,0x8B,0xCE,0x48,0x8B,0xD9,0x48,0x8B,0xF2,0x49,0x8B,0xF8,0xBD,0xCB,0x00,0x00,0x00,0x41,0xBE,0x01,0x00,0x00,0x00,0x44,0x8B,0x7E,0x08,0x44,0x8B,0x67,0x08,0x45,0x3B,0xFC,0x75,0x65,0x49,0x63,0xD7,0x48,0xB9,0xC8,0x5D,0x24,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x58,0xD8,0xB0,0x5F,0x48,0x8D,0x48,0x10,0x8B,0x50,0x08,0x4C,0x8B,0xC3,0xC5,0xFA,0x6F,0x06,0xC5,0xFA,0x7F,0x44,0x24,0x48,0xC5,0xFA,0x6F,0x07,0xC5,0xFA,0x7F,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0x49,0x89,0x09,0x41,0x89,0x51,0x08,0x49,0x8B,0xC8,0x48,0x8D,0x54,0x24,0x48,0x4C,0x8D,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0xE8,0xC7,0xF4,0xFF,0xFF,0x48,0x8B,0xC3,0x48,0x83,0xC4,0x60,0x5B,0x5D,0x5E,0x5F,0x41,0x5C,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0x33,0x0E,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x71,0xF1,0xC3,0x5F,0x48,0x8B,0xF0,0xB9,0x3B,0x0E,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x5A,0xF1,0xC3,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x58,0x45,0x88,0x30,0x41,0x89,0x68,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCF,0x41,0x8B,0xD4,0x48,0x8B,0x44,0x24,0x58,0x48,0x89,0x44,0x24,0x20,0xE8,0x2B,0x93,0xFF,0xFF,0x48,0x8B,0xC8,0xE8,0x9B,0x4B,0xAF,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> neq(ReadOnlySpan<double> lhs, ReadOnlySpan<double> rhs)
; location: [7FFC7C094D20h, 7FFC7C094E25h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push r12                      ; PUSH(Push_r64) [R12]                                 encoding(2 bytes) = 41 54
0006h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0007h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0008h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0009h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
000ah sub rsp,60h                   ; SUB(Sub_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 ec 60
000eh vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0011h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0014h lea rdi,[rsp+28h]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 7c 24 28
0019h mov ecx,0Ch                   ; MOV(Mov_r32_imm32) [ECX,ch:imm32]                    encoding(5 bytes) = b9 0c 00 00 00
001eh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0020h rep stosd                     ; STOSD(Stosd_m32_EAX) [mem(32u),EAX]                  encoding(2 bytes) = f3 ab
0022h mov rcx,rsi                   ; MOV(Mov_r64_rm64) [RCX,RSI]                          encoding(3 bytes) = 48 8b ce
0025h mov rbx,rcx                   ; MOV(Mov_r64_rm64) [RBX,RCX]                          encoding(3 bytes) = 48 8b d9
0028h mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
002bh mov rdi,r8                    ; MOV(Mov_r64_rm64) [RDI,R8]                           encoding(3 bytes) = 49 8b f8
002eh mov ebp,0CFh                  ; MOV(Mov_r32_imm32) [EBP,cfh:imm32]                   encoding(5 bytes) = bd cf 00 00 00
0033h mov r14d,1                    ; MOV(Mov_r32_imm32) [R14D,1h:imm32]                   encoding(6 bytes) = 41 be 01 00 00 00
0039h mov r15d,[rsi+8]              ; MOV(Mov_r32_rm32) [R15D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 8b 7e 08
003dh mov r12d,[rdi+8]              ; MOV(Mov_r32_rm32) [R12D,mem(32u,RDI:br,DS:sr)]       encoding(4 bytes) = 44 8b 67 08
0041h cmp r15d,r12d                 ; CMP(Cmp_r32_rm32) [R15D,R12D]                        encoding(3 bytes) = 45 3b fc
0044h jne short 00abh               ; JNE(Jne_rel8_64) [ABh:jmp64]                         encoding(2 bytes) = 75 65
0046h movsxd rdx,r15d               ; MOVSXD(Movsxd_r64_rm32) [RDX,R15D]                   encoding(3 bytes) = 49 63 d7
0049h mov rcx,7FFC7C245DC8h         ; MOV(Mov_r64_imm64) [RCX,7ffc7c245dc8h:imm64]         encoding(10 bytes) = 48 b9 c8 5d 24 7c fc 7f 00 00
0053h call 7FFCDBBA24A0h            ; CALL(Call_rel32_64) [5FB0D780h:jmp64]                encoding(5 bytes) = e8 28 d7 b0 5f
0058h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
005ch mov edx,[rax+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 50 08
005fh mov r8,rbx                    ; MOV(Mov_r64_rm64) [R8,RBX]                           encoding(3 bytes) = 4c 8b c3
0062h vmovdqu xmm0,xmmword ptr [rsi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 06
0066h vmovdqu xmmword ptr [rsp+48h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 48
006ch vmovdqu xmm0,xmmword ptr [rdi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RDI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 07
0070h vmovdqu xmmword ptr [rsp+38h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 38
0076h lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
007bh mov [r9],rcx                  ; MOV(Mov_rm64_r64) [mem(64u,R9:br,DS:sr),RCX]         encoding(3 bytes) = 49 89 09
007eh mov [r9+8],edx                ; MOV(Mov_rm32_r32) [mem(32u,R9:br,DS:sr),EDX]         encoding(4 bytes) = 41 89 51 08
0082h mov rcx,r8                    ; MOV(Mov_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 8b c8
0085h lea rdx,[rsp+48h]             ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 54 24 48
008ah lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
008fh lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
0094h call 7FFC7C0941E0h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFF4C0h:jmp64]        encoding(5 bytes) = e8 27 f4 ff ff
0099h mov rax,rbx                   ; MOV(Mov_r64_rm64) [RAX,RBX]                          encoding(3 bytes) = 48 8b c3
009ch add rsp,60h                   ; ADD(Add_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 c4 60
00a0h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
00a1h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
00a2h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
00a3h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
00a4h pop r12                       ; POP(Pop_r64) [R12]                                   encoding(2 bytes) = 41 5c
00a6h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
00a8h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
00aah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
00abh mov ecx,0E33h                 ; MOV(Mov_r32_imm32) [ECX,e33h:imm32]                  encoding(5 bytes) = b9 33 0e 00 00
00b0h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
00bah call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC3F100h:jmp64]                encoding(5 bytes) = e8 41 f0 c3 5f
00bfh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
00c2h mov ecx,0E3Bh                 ; MOV(Mov_r32_imm32) [ECX,e3bh:imm32]                  encoding(5 bytes) = b9 3b 0e 00 00
00c7h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
00d1h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC3F100h:jmp64]                encoding(5 bytes) = e8 2a f0 c3 5f
00d6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00d9h lea r8,[rsp+58h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 58
00deh mov [r8],r14b                 ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),R14L]           encoding(3 bytes) = 45 88 30
00e1h mov [r8+4],ebp                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBP]         encoding(4 bytes) = 41 89 68 04
00e5h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00e8h mov ecx,r15d                  ; MOV(Mov_r32_rm32) [ECX,R15D]                         encoding(3 bytes) = 41 8b cf
00ebh mov edx,r12d                  ; MOV(Mov_r32_rm32) [EDX,R12D]                         encoding(3 bytes) = 41 8b d4
00eeh mov rax,[rsp+58h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 58
00f3h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00f8h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFF92F8h:jmp64]        encoding(5 bytes) = e8 fb 91 ff ff
00fdh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
0100h call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAF4B70h:jmp64]                encoding(5 bytes) = e8 6b 4a af 5f
0105h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> neqBytes => new byte[262]{0x41,0x57,0x41,0x56,0x41,0x54,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x60,0xC5,0xF8,0x77,0x48,0x8B,0xF1,0x48,0x8D,0x7C,0x24,0x28,0xB9,0x0C,0x00,0x00,0x00,0x33,0xC0,0xF3,0xAB,0x48,0x8B,0xCE,0x48,0x8B,0xD9,0x48,0x8B,0xF2,0x49,0x8B,0xF8,0xBD,0xCF,0x00,0x00,0x00,0x41,0xBE,0x01,0x00,0x00,0x00,0x44,0x8B,0x7E,0x08,0x44,0x8B,0x67,0x08,0x45,0x3B,0xFC,0x75,0x65,0x49,0x63,0xD7,0x48,0xB9,0xC8,0x5D,0x24,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x28,0xD7,0xB0,0x5F,0x48,0x8D,0x48,0x10,0x8B,0x50,0x08,0x4C,0x8B,0xC3,0xC5,0xFA,0x6F,0x06,0xC5,0xFA,0x7F,0x44,0x24,0x48,0xC5,0xFA,0x6F,0x07,0xC5,0xFA,0x7F,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0x49,0x89,0x09,0x41,0x89,0x51,0x08,0x49,0x8B,0xC8,0x48,0x8D,0x54,0x24,0x48,0x4C,0x8D,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0xE8,0x27,0xF4,0xFF,0xFF,0x48,0x8B,0xC3,0x48,0x83,0xC4,0x60,0x5B,0x5D,0x5E,0x5F,0x41,0x5C,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0x33,0x0E,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x41,0xF0,0xC3,0x5F,0x48,0x8B,0xF0,0xB9,0x3B,0x0E,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x2A,0xF0,0xC3,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x58,0x45,0x88,0x30,0x41,0x89,0x68,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCF,0x41,0x8B,0xD4,0x48,0x8B,0x44,0x24,0x58,0x48,0x89,0x44,0x24,0x20,0xE8,0xFB,0x91,0xFF,0xFF,0x48,0x8B,0xC8,0xE8,0x6B,0x4A,0xAF,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool nonneg(sbyte src)
; location: [7FFC7C094E50h, 7FFC7C094E61h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cl                  ; MOVSX(Movsx_r64_rm8) [RAX,CL]                        encoding(4 bytes) = 48 0f be c1
0009h test eax,eax                  ; TEST(Test_rm32_r32) [EAX,EAX]                        encoding(2 bytes) = 85 c0
000bh setge al                      ; SETGE(Setge_rm8) [AL]                                encoding(3 bytes) = 0f 9d c0
000eh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> nonnegBytes => new byte[18]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBE,0xC1,0x85,0xC0,0x0F,0x9D,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool nonneg(short src)
; location: [7FFC7C094E80h, 7FFC7C094E91h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cx                  ; MOVSX(Movsx_r64_rm16) [RAX,CX]                       encoding(4 bytes) = 48 0f bf c1
0009h test eax,eax                  ; TEST(Test_rm32_r32) [EAX,EAX]                        encoding(2 bytes) = 85 c0
000bh setge al                      ; SETGE(Setge_rm8) [AL]                                encoding(3 bytes) = 0f 9d c0
000eh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> nonnegBytes => new byte[18]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBF,0xC1,0x85,0xC0,0x0F,0x9D,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool nonneg(int src)
; location: [7FFC7C094EB0h, 7FFC7C094EBDh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
0007h setge al                      ; SETGE(Setge_rm8) [AL]                                encoding(3 bytes) = 0f 9d c0
000ah movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> nonnegBytes => new byte[14]{0x0F,0x1F,0x44,0x00,0x00,0x85,0xC9,0x0F,0x9D,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool nonneg(double src)
; location: [7FFC7C094F20h, 7FFC7C094F33h]
0000h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0003h xchg ax,ax                    ; NOP(Nopw)                                            encoding(2 bytes) = 66 90
0005h vxorps xmm1,xmm1,xmm1         ; VXORPS(VEX_Vxorps_xmm_xmm_xmmm128) [XMM1,XMM1,XMM1]  encoding(VEX, 4 bytes) = c5 f0 57 c9
0009h vucomisd xmm0,xmm1            ; VUCOMISD(VEX_Vucomisd_xmm_xmmm64) [XMM0,XMM1]        encoding(VEX, 4 bytes) = c5 f9 2e c1
000dh setae al                      ; SETAE(Setae_rm8) [AL]                                encoding(3 bytes) = 0f 93 c0
0010h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> nonnegBytes => new byte[20]{0xC5,0xF8,0x77,0x66,0x90,0xC5,0xF0,0x57,0xC9,0xC5,0xF9,0x2E,0xC1,0x0F,0x93,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool nonzero(byte src)
; location: [7FFC7C094F80h, 7FFC7C094F8Dh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h test cl,cl                    ; TEST(Test_rm8_r8) [CL,CL]                            encoding(2 bytes) = 84 c9
0007h setne al                      ; SETNE(Setne_rm8) [AL]                                encoding(3 bytes) = 0f 95 c0
000ah movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> nonzeroBytes => new byte[14]{0x0F,0x1F,0x44,0x00,0x00,0x84,0xC9,0x0F,0x95,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool nonzero(short src)
; location: [7FFC7C094FA0h, 7FFC7C094FB1h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cx                  ; MOVSX(Movsx_r64_rm16) [RAX,CX]                       encoding(4 bytes) = 48 0f bf c1
0009h test eax,eax                  ; TEST(Test_rm32_r32) [EAX,EAX]                        encoding(2 bytes) = 85 c0
000bh setne al                      ; SETNE(Setne_rm8) [AL]                                encoding(3 bytes) = 0f 95 c0
000eh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> nonzeroBytes => new byte[18]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBF,0xC1,0x85,0xC0,0x0F,0x95,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool nonzero(ushort src)
; location: [7FFC7C094FD0h, 7FFC7C094FE0h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cx                  ; MOVZX(Movzx_r32_rm16) [EAX,CX]                       encoding(3 bytes) = 0f b7 c1
0008h test eax,eax                  ; TEST(Test_rm32_r32) [EAX,EAX]                        encoding(2 bytes) = 85 c0
000ah setne al                      ; SETNE(Setne_rm8) [AL]                                encoding(3 bytes) = 0f 95 c0
000dh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0010h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> nonzeroBytes => new byte[17]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB7,0xC1,0x85,0xC0,0x0F,0x95,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool nonzero(float src)
; location: [7FFC7C095080h, 7FFC7C095098h]
0000h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0003h xchg ax,ax                    ; NOP(Nopw)                                            encoding(2 bytes) = 66 90
0005h vxorps xmm1,xmm1,xmm1         ; VXORPS(VEX_Vxorps_xmm_xmm_xmmm128) [XMM1,XMM1,XMM1]  encoding(VEX, 4 bytes) = c5 f0 57 c9
0009h vucomiss xmm0,xmm1            ; VUCOMISS(VEX_Vucomiss_xmm_xmmm32) [XMM0,XMM1]        encoding(VEX, 4 bytes) = c5 f8 2e c1
000dh setp al                       ; SETP(Setp_rm8) [AL]                                  encoding(3 bytes) = 0f 9a c0
0010h jp short 0015h                ; JP(Jp_rel8_64) [15h:jmp64]                           encoding(2 bytes) = 7a 03
0012h setne al                      ; SETNE(Setne_rm8) [AL]                                encoding(3 bytes) = 0f 95 c0
0015h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0018h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> nonzeroBytes => new byte[25]{0xC5,0xF8,0x77,0x66,0x90,0xC5,0xF0,0x57,0xC9,0xC5,0xF8,0x2E,0xC1,0x0F,0x9A,0xC0,0x7A,0x03,0x0F,0x95,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool nonzero(double src)
; location: [7FFC7C0950B0h, 7FFC7C0950C8h]
0000h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0003h xchg ax,ax                    ; NOP(Nopw)                                            encoding(2 bytes) = 66 90
0005h vxorps xmm1,xmm1,xmm1         ; VXORPS(VEX_Vxorps_xmm_xmm_xmmm128) [XMM1,XMM1,XMM1]  encoding(VEX, 4 bytes) = c5 f0 57 c9
0009h vucomisd xmm0,xmm1            ; VUCOMISD(VEX_Vucomisd_xmm_xmmm64) [XMM0,XMM1]        encoding(VEX, 4 bytes) = c5 f9 2e c1
000dh setp al                       ; SETP(Setp_rm8) [AL]                                  encoding(3 bytes) = 0f 9a c0
0010h jp short 0015h                ; JP(Jp_rel8_64) [15h:jmp64]                           encoding(2 bytes) = 7a 03
0012h setne al                      ; SETNE(Setne_rm8) [AL]                                encoding(3 bytes) = 0f 95 c0
0015h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0018h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> nonzeroBytes => new byte[25]{0xC5,0xF8,0x77,0x66,0x90,0xC5,0xF0,0x57,0xC9,0xC5,0xF9,0x2E,0xC1,0x0F,0x9A,0xC0,0x7A,0x03,0x0F,0x95,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: sbyte or(sbyte lhs, sbyte rhs)
; location: [7FFC7C0950E0h, 7FFC7C0950F3h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cl                  ; MOVSX(Movsx_r64_rm8) [RAX,CL]                        encoding(4 bytes) = 48 0f be c1
0009h movsx rdx,dl                  ; MOVSX(Movsx_r64_rm8) [RDX,DL]                        encoding(4 bytes) = 48 0f be d2
000dh or eax,edx                    ; OR(Or_r32_rm32) [EAX,EDX]                            encoding(2 bytes) = 0b c2
000fh movsx rax,al                  ; MOVSX(Movsx_r64_rm8) [RAX,AL]                        encoding(4 bytes) = 48 0f be c0
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> orBytes => new byte[20]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBE,0xC1,0x48,0x0F,0xBE,0xD2,0x0B,0xC2,0x48,0x0F,0xBE,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: byte or(byte lhs, byte rhs)
; location: [7FFC7C095110h, 7FFC7C095120h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0008h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
000bh or eax,edx                    ; OR(Or_r32_rm32) [EAX,EDX]                            encoding(2 bytes) = 0b c2
000dh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0010h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> orBytes => new byte[17]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC1,0x0F,0xB6,0xD2,0x0B,0xC2,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: short or(short lhs, short rhs)
; location: [7FFC7C095140h, 7FFC7C095153h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cx                  ; MOVSX(Movsx_r64_rm16) [RAX,CX]                       encoding(4 bytes) = 48 0f bf c1
0009h movsx rdx,dx                  ; MOVSX(Movsx_r64_rm16) [RDX,DX]                       encoding(4 bytes) = 48 0f bf d2
000dh or eax,edx                    ; OR(Or_r32_rm32) [EAX,EDX]                            encoding(2 bytes) = 0b c2
000fh movsx rax,ax                  ; MOVSX(Movsx_r64_rm16) [RAX,AX]                       encoding(4 bytes) = 48 0f bf c0
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> orBytes => new byte[20]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBF,0xC1,0x48,0x0F,0xBF,0xD2,0x0B,0xC2,0x48,0x0F,0xBF,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ushort or(ushort lhs, ushort rhs)
; location: [7FFC7C095170h, 7FFC7C095180h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cx                  ; MOVZX(Movzx_r32_rm16) [EAX,CX]                       encoding(3 bytes) = 0f b7 c1
0008h movzx edx,dx                  ; MOVZX(Movzx_r32_rm16) [EDX,DX]                       encoding(3 bytes) = 0f b7 d2
000bh or eax,edx                    ; OR(Or_r32_rm32) [EAX,EDX]                            encoding(2 bytes) = 0b c2
000dh movzx eax,ax                  ; MOVZX(Movzx_r32_rm16) [EAX,AX]                       encoding(3 bytes) = 0f b7 c0
0010h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> orBytes => new byte[17]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB7,0xC1,0x0F,0xB7,0xD2,0x0B,0xC2,0x0F,0xB7,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: int or(int lhs, int rhs)
; location: [7FFC7C0951A0h, 7FFC7C0951A9h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov eax,ecx                   ; MOV(Mov_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 8b c1
0007h or eax,edx                    ; OR(Or_r32_rm32) [EAX,EDX]                            encoding(2 bytes) = 0b c2
0009h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> orBytes => new byte[10]{0x0F,0x1F,0x44,0x00,0x00,0x8B,0xC1,0x0B,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: uint or(uint lhs, uint rhs)
; location: [7FFC7C0951C0h, 7FFC7C0951C9h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov eax,ecx                   ; MOV(Mov_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 8b c1
0007h or eax,edx                    ; OR(Or_r32_rm32) [EAX,EDX]                            encoding(2 bytes) = 0b c2
0009h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> orBytes => new byte[10]{0x0F,0x1F,0x44,0x00,0x00,0x8B,0xC1,0x0B,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: long or(long lhs, long rhs)
; location: [7FFC7C0951E0h, 7FFC7C0951EBh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0008h or rax,rdx                    ; OR(Or_r64_rm64) [RAX,RDX]                            encoding(3 bytes) = 48 0b c2
000bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> orBytes => new byte[12]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0xC1,0x48,0x0B,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ulong or(ulong lhs, ulong rhs)
; location: [7FFC7C095200h, 7FFC7C09520Bh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0008h or rax,rdx                    ; OR(Or_r64_rm64) [RAX,RDX]                            encoding(3 bytes) = 48 0b c2
000bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> orBytes => new byte[12]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0xC1,0x48,0x0B,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: float or(float lhs, float rhs)
; location: [7FFC7C095220h, 7FFC7C095249h]
0000h sub rsp,18h                   ; SUB(Sub_rm64_imm8) [RSP,18h:imm64]                   encoding(4 bytes) = 48 83 ec 18
0004h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0007h vmovss dword ptr [rsp+14h],xmm0; VMOVSS(VEX_Vmovss_m32_xmm) [mem(Float32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 11 44 24 14
000dh mov eax,[rsp+14h]             ; MOV(Mov_r32_rm32) [EAX,mem(32u,RSP:br,SS:sr)]        encoding(4 bytes) = 8b 44 24 14
0011h vmovss dword ptr [rsp+10h],xmm1; VMOVSS(VEX_Vmovss_m32_xmm) [mem(Float32,RSP:br,SS:sr),XMM1] encoding(VEX, 6 bytes) = c5 fa 11 4c 24 10
0017h or eax,[rsp+10h]              ; OR(Or_r32_rm32) [EAX,mem(32u,RSP:br,SS:sr)]          encoding(4 bytes) = 0b 44 24 10
001bh mov [rsp+0Ch],eax             ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),EAX]        encoding(4 bytes) = 89 44 24 0c
001fh vmovss xmm0,dword ptr [rsp+0Ch]; VMOVSS(VEX_Vmovss_xmm_m32) [XMM0,mem(Float32,RSP:br,SS:sr)] encoding(VEX, 6 bytes) = c5 fa 10 44 24 0c
0025h add rsp,18h                   ; ADD(Add_rm64_imm8) [RSP,18h:imm64]                   encoding(4 bytes) = 48 83 c4 18
0029h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> orBytes => new byte[42]{0x48,0x83,0xEC,0x18,0xC5,0xF8,0x77,0xC5,0xFA,0x11,0x44,0x24,0x14,0x8B,0x44,0x24,0x14,0xC5,0xFA,0x11,0x4C,0x24,0x10,0x0B,0x44,0x24,0x10,0x89,0x44,0x24,0x0C,0xC5,0xFA,0x10,0x44,0x24,0x0C,0x48,0x83,0xC4,0x18,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: double or(double lhs, double rhs)
; location: [7FFC7C095270h, 7FFC7C09529Ah]
0000h sub rsp,18h                   ; SUB(Sub_rm64_imm8) [RSP,18h:imm64]                   encoding(4 bytes) = 48 83 ec 18
0004h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0007h vmovsd qword ptr [rsp+10h],xmm0; VMOVSD(VEX_Vmovsd_m64_xmm) [mem(Float64,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fb 11 44 24 10
000dh mov rax,[rsp+10h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 10
0012h vmovsd qword ptr [rsp+8],xmm1 ; VMOVSD(VEX_Vmovsd_m64_xmm) [mem(Float64,RSP:br,SS:sr),XMM1] encoding(VEX, 6 bytes) = c5 fb 11 4c 24 08
0018h or rax,[rsp+8]                ; OR(Or_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]          encoding(5 bytes) = 48 0b 44 24 08
001dh mov [rsp],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(4 bytes) = 48 89 04 24
0021h vmovsd xmm0,qword ptr [rsp]   ; VMOVSD(VEX_Vmovsd_xmm_m64) [XMM0,mem(Float64,RSP:br,SS:sr)] encoding(VEX, 5 bytes) = c5 fb 10 04 24
0026h add rsp,18h                   ; ADD(Add_rm64_imm8) [RSP,18h:imm64]                   encoding(4 bytes) = 48 83 c4 18
002ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> orBytes => new byte[43]{0x48,0x83,0xEC,0x18,0xC5,0xF8,0x77,0xC5,0xFB,0x11,0x44,0x24,0x10,0x48,0x8B,0x44,0x24,0x10,0xC5,0xFB,0x11,0x4C,0x24,0x08,0x48,0x0B,0x44,0x24,0x08,0x48,0x89,0x04,0x24,0xC5,0xFB,0x10,0x04,0x24,0x48,0x83,0xC4,0x18,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref sbyte or(ref sbyte lhs, sbyte rhs)
; location: [7FFC7C0952C0h, 7FFC7C0952CEh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,dl                  ; MOVSX(Movsx_r64_rm8) [RAX,DL]                        encoding(4 bytes) = 48 0f be c2
0009h or [rcx],al                   ; OR(Or_rm8_r8) [mem(8u,RCX:br,DS:sr),AL]              encoding(2 bytes) = 08 01
000bh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> orBytes => new byte[15]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBE,0xC2,0x08,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref byte or(ref byte lhs, byte rhs)
; location: [7FFC7C0952E0h, 7FFC7C0952EDh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,dl                  ; MOVZX(Movzx_r32_rm8) [EAX,DL]                        encoding(3 bytes) = 0f b6 c2
0008h or [rcx],al                   ; OR(Or_rm8_r8) [mem(8u,RCX:br,DS:sr),AL]              encoding(2 bytes) = 08 01
000ah mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> orBytes => new byte[14]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC2,0x08,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref short or(ref short lhs, short rhs)
; location: [7FFC7C095300h, 7FFC7C09530Fh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,dx                  ; MOVSX(Movsx_r64_rm16) [RAX,DX]                       encoding(4 bytes) = 48 0f bf c2
0009h or [rcx],ax                   ; OR(Or_rm16_r16) [mem(16u,RCX:br,DS:sr),AX]           encoding(3 bytes) = 66 09 01
000ch mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> orBytes => new byte[16]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBF,0xC2,0x66,0x09,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref ushort or(ref ushort lhs, ushort rhs)
; location: [7FFC7C095320h, 7FFC7C09532Eh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,dx                  ; MOVZX(Movzx_r32_rm16) [EAX,DX]                       encoding(3 bytes) = 0f b7 c2
0008h or [rcx],ax                   ; OR(Or_rm16_r16) [mem(16u,RCX:br,DS:sr),AX]           encoding(3 bytes) = 66 09 01
000bh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> orBytes => new byte[15]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB7,0xC2,0x66,0x09,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref uint or(ref uint lhs, uint rhs)
; location: [7FFC7C095360h, 7FFC7C09536Ah]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h or [rcx],edx                  ; OR(Or_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]          encoding(2 bytes) = 09 11
0007h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> orBytes => new byte[11]{0x0F,0x1F,0x44,0x00,0x00,0x09,0x11,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref long or(ref long lhs, long rhs)
; location: [7FFC7C095380h, 7FFC7C09538Bh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h or [rcx],rdx                  ; OR(Or_rm64_r64) [mem(64u,RCX:br,DS:sr),RDX]          encoding(3 bytes) = 48 09 11
0008h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> orBytes => new byte[12]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x09,0x11,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref ulong or(ref ulong lhs, ulong rhs)
; location: [7FFC7C0953A0h, 7FFC7C0953ABh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h or [rcx],rdx                  ; OR(Or_rm64_r64) [mem(64u,RCX:br,DS:sr),RDX]          encoding(3 bytes) = 48 09 11
0008h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> orBytes => new byte[12]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x09,0x11,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref float or(ref float lhs, float rhs)
; location: [7FFC7C0953C0h, 7FFC7C0953F4h]
0000h sub rsp,18h                   ; SUB(Sub_rm64_imm8) [RSP,18h:imm64]                   encoding(4 bytes) = 48 83 ec 18
0004h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0007h vmovss xmm0,dword ptr [rcx]   ; VMOVSS(VEX_Vmovss_xmm_m32) [XMM0,mem(Float32,RCX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 10 01
000bh vmovss dword ptr [rsp+14h],xmm0; VMOVSS(VEX_Vmovss_m32_xmm) [mem(Float32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 11 44 24 14
0011h mov eax,[rsp+14h]             ; MOV(Mov_r32_rm32) [EAX,mem(32u,RSP:br,SS:sr)]        encoding(4 bytes) = 8b 44 24 14
0015h vmovss dword ptr [rsp+10h],xmm1; VMOVSS(VEX_Vmovss_m32_xmm) [mem(Float32,RSP:br,SS:sr),XMM1] encoding(VEX, 6 bytes) = c5 fa 11 4c 24 10
001bh or eax,[rsp+10h]              ; OR(Or_r32_rm32) [EAX,mem(32u,RSP:br,SS:sr)]          encoding(4 bytes) = 0b 44 24 10
001fh mov [rsp+0Ch],eax             ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),EAX]        encoding(4 bytes) = 89 44 24 0c
0023h vmovss xmm0,dword ptr [rsp+0Ch]; VMOVSS(VEX_Vmovss_xmm_m32) [XMM0,mem(Float32,RSP:br,SS:sr)] encoding(VEX, 6 bytes) = c5 fa 10 44 24 0c
0029h vmovss dword ptr [rcx],xmm0   ; VMOVSS(VEX_Vmovss_m32_xmm) [mem(Float32,RCX:br,DS:sr),XMM0] encoding(VEX, 4 bytes) = c5 fa 11 01
002dh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0030h add rsp,18h                   ; ADD(Add_rm64_imm8) [RSP,18h:imm64]                   encoding(4 bytes) = 48 83 c4 18
0034h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> orBytes => new byte[53]{0x48,0x83,0xEC,0x18,0xC5,0xF8,0x77,0xC5,0xFA,0x10,0x01,0xC5,0xFA,0x11,0x44,0x24,0x14,0x8B,0x44,0x24,0x14,0xC5,0xFA,0x11,0x4C,0x24,0x10,0x0B,0x44,0x24,0x10,0x89,0x44,0x24,0x0C,0xC5,0xFA,0x10,0x44,0x24,0x0C,0xC5,0xFA,0x11,0x01,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x18,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref double or(ref double lhs, double rhs)
; location: [7FFC7C095410h, 7FFC7C095445h]
0000h sub rsp,18h                   ; SUB(Sub_rm64_imm8) [RSP,18h:imm64]                   encoding(4 bytes) = 48 83 ec 18
0004h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0007h vmovsd xmm0,qword ptr [rcx]   ; VMOVSD(VEX_Vmovsd_xmm_m64) [XMM0,mem(Float64,RCX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fb 10 01
000bh vmovsd qword ptr [rsp+10h],xmm0; VMOVSD(VEX_Vmovsd_m64_xmm) [mem(Float64,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fb 11 44 24 10
0011h mov rax,[rsp+10h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 10
0016h vmovsd qword ptr [rsp+8],xmm1 ; VMOVSD(VEX_Vmovsd_m64_xmm) [mem(Float64,RSP:br,SS:sr),XMM1] encoding(VEX, 6 bytes) = c5 fb 11 4c 24 08
001ch or rax,[rsp+8]                ; OR(Or_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]          encoding(5 bytes) = 48 0b 44 24 08
0021h mov [rsp],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(4 bytes) = 48 89 04 24
0025h vmovsd xmm0,qword ptr [rsp]   ; VMOVSD(VEX_Vmovsd_xmm_m64) [XMM0,mem(Float64,RSP:br,SS:sr)] encoding(VEX, 5 bytes) = c5 fb 10 04 24
002ah vmovsd qword ptr [rcx],xmm0   ; VMOVSD(VEX_Vmovsd_m64_xmm) [mem(Float64,RCX:br,DS:sr),XMM0] encoding(VEX, 4 bytes) = c5 fb 11 01
002eh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0031h add rsp,18h                   ; ADD(Add_rm64_imm8) [RSP,18h:imm64]                   encoding(4 bytes) = 48 83 c4 18
0035h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> orBytes => new byte[54]{0x48,0x83,0xEC,0x18,0xC5,0xF8,0x77,0xC5,0xFB,0x10,0x01,0xC5,0xFB,0x11,0x44,0x24,0x10,0x48,0x8B,0x44,0x24,0x10,0xC5,0xFB,0x11,0x4C,0x24,0x08,0x48,0x0B,0x44,0x24,0x08,0x48,0x89,0x04,0x24,0xC5,0xFB,0x10,0x04,0x24,0xC5,0xFB,0x11,0x01,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x18,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref sbyte or(in sbyte lhs, in sbyte rhs, ref sbyte dst)
; location: [7FFC7C095460h, 7FFC7C095475h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,byte ptr [rcx]      ; MOVSX(Movsx_r64_rm8) [RAX,mem(8i,RCX:br,DS:sr)]      encoding(4 bytes) = 48 0f be 01
0009h movsx rdx,byte ptr [rdx]      ; MOVSX(Movsx_r64_rm8) [RDX,mem(8i,RDX:br,DS:sr)]      encoding(4 bytes) = 48 0f be 12
000dh or eax,edx                    ; OR(Or_r32_rm32) [EAX,EDX]                            encoding(2 bytes) = 0b c2
000fh mov [r8],al                   ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),AL]             encoding(3 bytes) = 41 88 00
0012h mov rax,r8                    ; MOV(Mov_r64_rm64) [RAX,R8]                           encoding(3 bytes) = 49 8b c0
0015h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> orBytes => new byte[22]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBE,0x01,0x48,0x0F,0xBE,0x12,0x0B,0xC2,0x41,0x88,0x00,0x49,0x8B,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref byte or(in byte lhs, in byte rhs, ref byte dst)
; location: [7FFC7C095490h, 7FFC7C0954A3h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,byte ptr [rcx]      ; MOVZX(Movzx_r32_rm8) [EAX,mem(8u,RCX:br,DS:sr)]      encoding(3 bytes) = 0f b6 01
0008h movzx edx,byte ptr [rdx]      ; MOVZX(Movzx_r32_rm8) [EDX,mem(8u,RDX:br,DS:sr)]      encoding(3 bytes) = 0f b6 12
000bh or eax,edx                    ; OR(Or_r32_rm32) [EAX,EDX]                            encoding(2 bytes) = 0b c2
000dh mov [r8],al                   ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),AL]             encoding(3 bytes) = 41 88 00
0010h mov rax,r8                    ; MOV(Mov_r64_rm64) [RAX,R8]                           encoding(3 bytes) = 49 8b c0
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> orBytes => new byte[20]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0x01,0x0F,0xB6,0x12,0x0B,0xC2,0x41,0x88,0x00,0x49,0x8B,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref short or(in short lhs, in short rhs, ref short dst)
; location: [7FFC7C0954C0h, 7FFC7C0954D6h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,word ptr [rcx]      ; MOVSX(Movsx_r64_rm16) [RAX,mem(16i,RCX:br,DS:sr)]    encoding(4 bytes) = 48 0f bf 01
0009h movsx rdx,word ptr [rdx]      ; MOVSX(Movsx_r64_rm16) [RDX,mem(16i,RDX:br,DS:sr)]    encoding(4 bytes) = 48 0f bf 12
000dh or eax,edx                    ; OR(Or_r32_rm32) [EAX,EDX]                            encoding(2 bytes) = 0b c2
000fh mov [r8],ax                   ; MOV(Mov_rm16_r16) [mem(16u,R8:br,DS:sr),AX]          encoding(4 bytes) = 66 41 89 00
0013h mov rax,r8                    ; MOV(Mov_r64_rm64) [RAX,R8]                           encoding(3 bytes) = 49 8b c0
0016h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> orBytes => new byte[23]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBF,0x01,0x48,0x0F,0xBF,0x12,0x0B,0xC2,0x66,0x41,0x89,0x00,0x49,0x8B,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref ushort or(in ushort lhs, in ushort rhs, ref ushort dst)
; location: [7FFC7C0954F0h, 7FFC7C095504h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,word ptr [rcx]      ; MOVZX(Movzx_r32_rm16) [EAX,mem(16u,RCX:br,DS:sr)]    encoding(3 bytes) = 0f b7 01
0008h movzx edx,word ptr [rdx]      ; MOVZX(Movzx_r32_rm16) [EDX,mem(16u,RDX:br,DS:sr)]    encoding(3 bytes) = 0f b7 12
000bh or eax,edx                    ; OR(Or_r32_rm32) [EAX,EDX]                            encoding(2 bytes) = 0b c2
000dh mov [r8],ax                   ; MOV(Mov_rm16_r16) [mem(16u,R8:br,DS:sr),AX]          encoding(4 bytes) = 66 41 89 00
0011h mov rax,r8                    ; MOV(Mov_r64_rm64) [RAX,R8]                           encoding(3 bytes) = 49 8b c0
0014h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> orBytes => new byte[21]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB7,0x01,0x0F,0xB7,0x12,0x0B,0xC2,0x66,0x41,0x89,0x00,0x49,0x8B,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref int or(in int lhs, in int rhs, ref int dst)
; location: [7FFC7C095520h, 7FFC7C09552Fh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov eax,[rcx]                 ; MOV(Mov_r32_rm32) [EAX,mem(32u,RCX:br,DS:sr)]        encoding(2 bytes) = 8b 01
0007h or eax,[rdx]                  ; OR(Or_r32_rm32) [EAX,mem(32u,RDX:br,DS:sr)]          encoding(2 bytes) = 0b 02
0009h mov [r8],eax                  ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EAX]         encoding(3 bytes) = 41 89 00
000ch mov rax,r8                    ; MOV(Mov_r64_rm64) [RAX,R8]                           encoding(3 bytes) = 49 8b c0
000fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> orBytes => new byte[16]{0x0F,0x1F,0x44,0x00,0x00,0x8B,0x01,0x0B,0x02,0x41,0x89,0x00,0x49,0x8B,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref long or(in long lhs, in long rhs, ref long dst)
; location: [7FFC7C095560h, 7FFC7C095571h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,[rcx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 01
0008h or rax,[rdx]                  ; OR(Or_r64_rm64) [RAX,mem(64u,RDX:br,DS:sr)]          encoding(3 bytes) = 48 0b 02
000bh mov [r8],rax                  ; MOV(Mov_rm64_r64) [mem(64u,R8:br,DS:sr),RAX]         encoding(3 bytes) = 49 89 00
000eh mov rax,r8                    ; MOV(Mov_r64_rm64) [RAX,R8]                           encoding(3 bytes) = 49 8b c0
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> orBytes => new byte[18]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x01,0x48,0x0B,0x02,0x49,0x89,0x00,0x49,0x8B,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: float parse(string src, out float dst)
; location: [7FFC7C096550h, 7FFC7C0965CDh]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0003h sub rsp,40h                   ; SUB(Sub_rm64_imm8) [RSP,40h:imm64]                   encoding(4 bytes) = 48 83 ec 40
0007h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
000ah xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
000ch mov [rsp+3Ch],eax             ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),EAX]        encoding(4 bytes) = 89 44 24 3c
0010h mov [rsp+28h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 28
0015h mov [rsp+30h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 30
001ah mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
001dh test rcx,rcx                  ; TEST(Test_rm64_r64) [RCX,RCX]                        encoding(3 bytes) = 48 85 c9
0020h je short 0066h                ; JE(Je_rel8_64) [66h:jmp64]                           encoding(2 bytes) = 74 44
0022h lea rdi,[rcx+0Ch]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RCX:br,DS:sr)]       encoding(4 bytes) = 48 8d 79 0c
0026h mov ebx,[rcx+8]               ; MOV(Mov_r32_rm32) [EBX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 59 08
0029h call 7FFC7C095758h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFF208h:jmp64]        encoding(5 bytes) = e8 da f1 ff ff
002eh mov r8,rax                    ; MOV(Mov_r64_rm64) [R8,RAX]                           encoding(3 bytes) = 4c 8b c0
0031h lea rcx,[rsp+28h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 4c 24 28
0036h mov [rcx],rdi                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RDI]        encoding(3 bytes) = 48 89 39
0039h mov [rcx+8],ebx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EBX]        encoding(3 bytes) = 89 59 08
003ch lea rcx,[rsp+28h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 4c 24 28
0041h lea r9,[rsp+3Ch]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 3c
0046h mov edx,0E7h                  ; MOV(Mov_r32_imm32) [EDX,e7h:imm32]                   encoding(5 bytes) = ba e7 00 00 00
004bh call 7FFC7C096050h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFFB00h:jmp64]        encoding(5 bytes) = e8 b0 fa ff ff
0050h test eax,eax                  ; TEST(Test_rm32_r32) [EAX,EAX]                        encoding(2 bytes) = 85 c0
0052h je short 0071h                ; JE(Je_rel8_64) [71h:jmp64]                           encoding(2 bytes) = 74 1d
0054h vmovss xmm0,dword ptr [rsp+3Ch]; VMOVSS(VEX_Vmovss_xmm_m32) [XMM0,mem(Float32,RSP:br,SS:sr)] encoding(VEX, 6 bytes) = c5 fa 10 44 24 3c
005ah vmovss dword ptr [rsi],xmm0   ; VMOVSS(VEX_Vmovss_m32_xmm) [mem(Float32,RSI:br,DS:sr),XMM0] encoding(VEX, 4 bytes) = c5 fa 11 06
005eh add rsp,40h                   ; ADD(Add_rm64_imm8) [RSP,40h:imm64]                   encoding(4 bytes) = 48 83 c4 40
0062h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0063h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0064h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0065h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0066h mov ecx,11h                   ; MOV(Mov_r32_imm32) [ECX,11h:imm32]                   encoding(5 bytes) = b9 11 00 00 00
006bh call 7FFC7C095990h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFF440h:jmp64]        encoding(5 bytes) = e8 d0 f3 ff ff
0070h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
0071h mov ecx,1                     ; MOV(Mov_r32_imm32) [ECX,1h:imm32]                    encoding(5 bytes) = b9 01 00 00 00
0076h xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
0078h call 7FFC7C096088h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFFB38h:jmp64]        encoding(5 bytes) = e8 bb fa ff ff
007dh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> parseBytes => new byte[126]{0x57,0x56,0x53,0x48,0x83,0xEC,0x40,0xC5,0xF8,0x77,0x33,0xC0,0x89,0x44,0x24,0x3C,0x48,0x89,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x30,0x48,0x8B,0xF2,0x48,0x85,0xC9,0x74,0x44,0x48,0x8D,0x79,0x0C,0x8B,0x59,0x08,0xE8,0xDA,0xF1,0xFF,0xFF,0x4C,0x8B,0xC0,0x48,0x8D,0x4C,0x24,0x28,0x48,0x89,0x39,0x89,0x59,0x08,0x48,0x8D,0x4C,0x24,0x28,0x4C,0x8D,0x4C,0x24,0x3C,0xBA,0xE7,0x00,0x00,0x00,0xE8,0xB0,0xFA,0xFF,0xFF,0x85,0xC0,0x74,0x1D,0xC5,0xFA,0x10,0x44,0x24,0x3C,0xC5,0xFA,0x11,0x06,0x48,0x83,0xC4,0x40,0x5B,0x5E,0x5F,0xC3,0xB9,0x11,0x00,0x00,0x00,0xE8,0xD0,0xF3,0xFF,0xFF,0xCC,0xB9,0x01,0x00,0x00,0x00,0x33,0xD2,0xE8,0xBB,0xFA,0xFF,0xFF,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref long sal(ref long src, int offset)
; location: [7FFC7C097520h, 7FFC7C09752Dh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0008h mov ecx,edx                   ; MOV(Mov_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 8b ca
000ah shl qword ptr [rax],cl        ; SHL(Shl_rm64_CL) [mem(64u,RAX:br,DS:sr),CL]          encoding(3 bytes) = 48 d3 20
000dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> salBytes => new byte[14]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0xC1,0x8B,0xCA,0x48,0xD3,0x20,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref ulong sal(ref ulong src, int offset)
; location: [7FFC7C097540h, 7FFC7C09754Dh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0008h mov ecx,edx                   ; MOV(Mov_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 8b ca
000ah shl qword ptr [rax],cl        ; SHL(Shl_rm64_CL) [mem(64u,RAX:br,DS:sr),CL]          encoding(3 bytes) = 48 d3 20
000dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> salBytes => new byte[14]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0xC1,0x8B,0xCA,0x48,0xD3,0x20,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref int sar(ref int src, int offset)
; location: [7FFC7C097620h, 7FFC7C09762Ch]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0008h mov ecx,edx                   ; MOV(Mov_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 8b ca
000ah sar dword ptr [rax],cl        ; SAR(Sar_rm32_CL) [mem(32i,RAX:br,DS:sr),CL]          encoding(2 bytes) = d3 38
000ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> sarBytes => new byte[13]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0xC1,0x8B,0xCA,0xD3,0x38,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref long sar(ref long src, int offset)
; location: [7FFC7C097660h, 7FFC7C09766Dh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0008h mov ecx,edx                   ; MOV(Mov_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 8b ca
000ah sar qword ptr [rax],cl        ; SAR(Sar_rm64_CL) [mem(64i,RAX:br,DS:sr),CL]          encoding(3 bytes) = 48 d3 38
000dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> sarBytes => new byte[14]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0xC1,0x8B,0xCA,0x48,0xD3,0x38,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref ulong sar(ref ulong src, int offset)
; location: [7FFC7C097680h, 7FFC7C09768Dh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0008h mov ecx,edx                   ; MOV(Mov_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 8b ca
000ah shr qword ptr [rax],cl        ; SHR(Shr_rm64_CL) [mem(64u,RAX:br,DS:sr),CL]          encoding(3 bytes) = 48 d3 28
000dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> sarBytes => new byte[14]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0xC1,0x8B,0xCA,0x48,0xD3,0x28,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<sbyte> scale(ReadOnlySpan<sbyte> src, sbyte factor, Span<sbyte> dst)
; location: [7FFC7C0976A0h, 7FFC7C0976F3h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0006h mov r10,[r9]                  ; MOV(Mov_r64_rm64) [R10,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 4d 8b 11
0009h mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000dh xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
0010h test r9d,r9d                  ; TEST(Test_rm32_r32) [R9D,R9D]                        encoding(3 bytes) = 45 85 c9
0013h jle short 003dh               ; JLE(Jle_rel8_64) [3Dh:jmp64]                         encoding(2 bytes) = 7e 28
0015h movsx rax,r8b                 ; MOVSX(Movsx_r64_rm8) [RAX,R8L]                       encoding(4 bytes) = 49 0f be c0
0019h movsxd r8,r11d                ; MOVSXD(Movsxd_r64_rm32) [R8,R11D]                    encoding(3 bytes) = 4d 63 c3
001ch lea rsi,[r10+r8]              ; LEA(Lea_r64_m) [RSI,mem(Unknown,R10:br,DS:sr)]       encoding(4 bytes) = 4b 8d 34 02
0020h cmp r11d,[rdx+8]              ; CMP(Cmp_r32_rm32) [R11D,mem(32u,RDX:br,DS:sr)]       encoding(4 bytes) = 44 3b 5a 08
0024h jae short 004eh               ; JAE(Jae_rel8_64) [4Eh:jmp64]                         encoding(2 bytes) = 73 28
0026h mov rdi,[rdx]                 ; MOV(Mov_r64_rm64) [RDI,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 3a
0029h movsx r8,byte ptr [rdi+r8]    ; MOVSX(Movsx_r64_rm8) [R8,mem(8i,RDI:br,DS:sr)]       encoding(5 bytes) = 4e 0f be 04 07
002eh imul r8d,eax                  ; IMUL(Imul_r32_rm32) [R8D,EAX]                        encoding(4 bytes) = 44 0f af c0
0032h mov [rsi],r8b                 ; MOV(Mov_rm8_r8) [mem(8u,RSI:br,DS:sr),R8L]           encoding(3 bytes) = 44 88 06
0035h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
0038h cmp r11d,r9d                  ; CMP(Cmp_r32_rm32) [R11D,R9D]                         encoding(3 bytes) = 45 3b d9
003bh jl short 0019h                ; JL(Jl_rel8_64) [19h:jmp64]                           encoding(2 bytes) = 7c dc
003dh mov [rcx],r10                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R10]        encoding(3 bytes) = 4c 89 11
0040h mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0044h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0047h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
004bh pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
004ch pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
004dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
004eh call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC3BFA0h:jmp64]                encoding(5 bytes) = e8 4d bf c3 5f
0053h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> scaleBytes => new byte[84]{0x57,0x56,0x48,0x83,0xEC,0x28,0x4D,0x8B,0x11,0x45,0x8B,0x49,0x08,0x45,0x33,0xDB,0x45,0x85,0xC9,0x7E,0x28,0x49,0x0F,0xBE,0xC0,0x4D,0x63,0xC3,0x4B,0x8D,0x34,0x02,0x44,0x3B,0x5A,0x08,0x73,0x28,0x48,0x8B,0x3A,0x4E,0x0F,0xBE,0x04,0x07,0x44,0x0F,0xAF,0xC0,0x44,0x88,0x06,0x41,0xFF,0xC3,0x45,0x3B,0xD9,0x7C,0xDC,0x4C,0x89,0x11,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x28,0x5E,0x5F,0xC3,0xE8,0x4D,0xBF,0xC3,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<int> scale(ReadOnlySpan<int> src, int factor, Span<int> dst)
; location: [7FFC7C097860h, 7FFC7C0978AEh]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0006h mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
0009h mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000dh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
0010h test r9d,r9d                  ; TEST(Test_rm32_r32) [R9D,R9D]                        encoding(3 bytes) = 45 85 c9
0013h jle short 0038h               ; JLE(Jle_rel8_64) [38h:jmp64]                         encoding(2 bytes) = 7e 23
0015h movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
0018h lea rsi,[rax+r11*4]           ; LEA(Lea_r64_m) [RSI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 4a 8d 34 98
001ch cmp r10d,[rdx+8]              ; CMP(Cmp_r32_rm32) [R10D,mem(32u,RDX:br,DS:sr)]       encoding(4 bytes) = 44 3b 52 08
0020h jae short 0049h               ; JAE(Jae_rel8_64) [49h:jmp64]                         encoding(2 bytes) = 73 27
0022h mov rdi,[rdx]                 ; MOV(Mov_r64_rm64) [RDI,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 3a
0025h mov r11d,[rdi+r11*4]          ; MOV(Mov_r32_rm32) [R11D,mem(32u,RDI:br,DS:sr)]       encoding(4 bytes) = 46 8b 1c 9f
0029h imul r11d,r8d                 ; IMUL(Imul_r32_rm32) [R11D,R8D]                       encoding(4 bytes) = 45 0f af d8
002dh mov [rsi],r11d                ; MOV(Mov_rm32_r32) [mem(32u,RSI:br,DS:sr),R11D]       encoding(3 bytes) = 44 89 1e
0030h inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
0033h cmp r10d,r9d                  ; CMP(Cmp_r32_rm32) [R10D,R9D]                         encoding(3 bytes) = 45 3b d1
0036h jl short 0015h                ; JL(Jl_rel8_64) [15h:jmp64]                           encoding(2 bytes) = 7c dd
0038h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
003bh mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
003fh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0042h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
0046h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0047h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0048h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0049h call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC3BDE0h:jmp64]                encoding(5 bytes) = e8 92 bd c3 5f
004eh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> scaleBytes => new byte[79]{0x57,0x56,0x48,0x83,0xEC,0x28,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x45,0x33,0xD2,0x45,0x85,0xC9,0x7E,0x23,0x4D,0x63,0xDA,0x4A,0x8D,0x34,0x98,0x44,0x3B,0x52,0x08,0x73,0x27,0x48,0x8B,0x3A,0x46,0x8B,0x1C,0x9F,0x45,0x0F,0xAF,0xD8,0x44,0x89,0x1E,0x41,0xFF,0xC2,0x45,0x3B,0xD1,0x7C,0xDD,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x28,0x5E,0x5F,0xC3,0xE8,0x92,0xBD,0xC3,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<float> scale(ReadOnlySpan<float> src, float factor, Span<float> dst)
; location: [7FFC7C097A20h, 7FFC7C097A73h]
0000h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0001h sub rsp,20h                   ; SUB(Sub_rm64_imm8) [RSP,20h:imm64]                   encoding(4 bytes) = 48 83 ec 20
0005h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0008h mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000bh mov r8d,[r9+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 41 08
000fh xor r9d,r9d                   ; XOR(Xor_r32_rm32) [R9D,R9D]                          encoding(3 bytes) = 45 33 c9
0012h test r8d,r8d                  ; TEST(Test_rm32_r32) [R8D,R8D]                        encoding(3 bytes) = 45 85 c0
0015h jle short 003eh               ; JLE(Jle_rel8_64) [3Eh:jmp64]                         encoding(2 bytes) = 7e 27
0017h movsxd r10,r9d                ; MOVSXD(Movsxd_r64_rm32) [R10,R9D]                    encoding(3 bytes) = 4d 63 d1
001ah lea r11,[rax+r10*4]           ; LEA(Lea_r64_m) [R11,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 4e 8d 1c 90
001eh cmp r9d,[rdx+8]               ; CMP(Cmp_r32_rm32) [R9D,mem(32u,RDX:br,DS:sr)]        encoding(4 bytes) = 44 3b 4a 08
0022h jae short 004eh               ; JAE(Jae_rel8_64) [4Eh:jmp64]                         encoding(2 bytes) = 73 2a
0024h mov rsi,[rdx]                 ; MOV(Mov_r64_rm64) [RSI,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 32
0027h vmovss xmm0,dword ptr [rsi+r10*4]; VMOVSS(VEX_Vmovss_xmm_m32) [XMM0,mem(Float32,RSI:br,DS:sr)] encoding(VEX, 6 bytes) = c4 a1 7a 10 04 96
002dh vmulss xmm0,xmm0,xmm2         ; VMULSS(VEX_Vmulss_xmm_xmm_xmmm32) [XMM0,XMM0,XMM2]   encoding(VEX, 4 bytes) = c5 fa 59 c2
0031h vmovss dword ptr [r11],xmm0   ; VMOVSS(VEX_Vmovss_m32_xmm) [mem(Float32,R11:br,DS:sr),XMM0] encoding(VEX, 5 bytes) = c4 c1 7a 11 03
0036h inc r9d                       ; INC(Inc_rm32) [R9D]                                  encoding(3 bytes) = 41 ff c1
0039h cmp r9d,r8d                   ; CMP(Cmp_r32_rm32) [R9D,R8D]                          encoding(3 bytes) = 45 3b c8
003ch jl short 0017h                ; JL(Jl_rel8_64) [17h:jmp64]                           encoding(2 bytes) = 7c d9
003eh mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0041h mov [rcx+8],r8d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R8D]        encoding(4 bytes) = 44 89 41 08
0045h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0048h add rsp,20h                   ; ADD(Add_rm64_imm8) [RSP,20h:imm64]                   encoding(4 bytes) = 48 83 c4 20
004ch pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
004dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
004eh call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC3BC20h:jmp64]                encoding(5 bytes) = e8 cd bb c3 5f
0053h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> scaleBytes => new byte[84]{0x56,0x48,0x83,0xEC,0x20,0xC5,0xF8,0x77,0x49,0x8B,0x01,0x45,0x8B,0x41,0x08,0x45,0x33,0xC9,0x45,0x85,0xC0,0x7E,0x27,0x4D,0x63,0xD1,0x4E,0x8D,0x1C,0x90,0x44,0x3B,0x4A,0x08,0x73,0x2A,0x48,0x8B,0x32,0xC4,0xA1,0x7A,0x10,0x04,0x96,0xC5,0xFA,0x59,0xC2,0xC4,0xC1,0x7A,0x11,0x03,0x41,0xFF,0xC1,0x45,0x3B,0xC8,0x7C,0xD9,0x48,0x89,0x01,0x44,0x89,0x41,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x20,0x5E,0xC3,0xE8,0xCD,0xBB,0xC3,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: sbyte square(sbyte src)
; location: [7FFC7C097B00h, 7FFC7C097B10h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cl                  ; MOVSX(Movsx_r64_rm8) [RAX,CL]                        encoding(4 bytes) = 48 0f be c1
0009h imul eax,eax                  ; IMUL(Imul_r32_rm32) [EAX,EAX]                        encoding(3 bytes) = 0f af c0
000ch movsx rax,al                  ; MOVSX(Movsx_r64_rm8) [RAX,AL]                        encoding(4 bytes) = 48 0f be c0
0010h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> squareBytes => new byte[17]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBE,0xC1,0x0F,0xAF,0xC0,0x48,0x0F,0xBE,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: short square(short src)
; location: [7FFC7C097B50h, 7FFC7C097B60h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cx                  ; MOVSX(Movsx_r64_rm16) [RAX,CX]                       encoding(4 bytes) = 48 0f bf c1
0009h imul eax,eax                  ; IMUL(Imul_r32_rm32) [EAX,EAX]                        encoding(3 bytes) = 0f af c0
000ch movsx rax,ax                  ; MOVSX(Movsx_r64_rm16) [RAX,AX]                       encoding(4 bytes) = 48 0f bf c0
0010h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> squareBytes => new byte[17]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBF,0xC1,0x0F,0xAF,0xC0,0x48,0x0F,0xBF,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ushort square(ushort src)
; location: [7FFC7C097B80h, 7FFC7C097B8Eh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cx                  ; MOVZX(Movzx_r32_rm16) [EAX,CX]                       encoding(3 bytes) = 0f b7 c1
0008h imul eax,eax                  ; IMUL(Imul_r32_rm32) [EAX,EAX]                        encoding(3 bytes) = 0f af c0
000bh movzx eax,ax                  ; MOVZX(Movzx_r32_rm16) [EAX,AX]                       encoding(3 bytes) = 0f b7 c0
000eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> squareBytes => new byte[15]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB7,0xC1,0x0F,0xAF,0xC0,0x0F,0xB7,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: float square(float src)
; location: [7FFC7C097C30h, 7FFC7C097C39h]
0000h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0003h xchg ax,ax                    ; NOP(Nopw)                                            encoding(2 bytes) = 66 90
0005h vmulss xmm0,xmm0,xmm0         ; VMULSS(VEX_Vmulss_xmm_xmm_xmmm32) [XMM0,XMM0,XMM0]   encoding(VEX, 4 bytes) = c5 fa 59 c0
0009h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> squareBytes => new byte[10]{0xC5,0xF8,0x77,0x66,0x90,0xC5,0xFA,0x59,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: double square(double src)
; location: [7FFC7C097C50h, 7FFC7C097C59h]
0000h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0003h xchg ax,ax                    ; NOP(Nopw)                                            encoding(2 bytes) = 66 90
0005h vmulsd xmm0,xmm0,xmm0         ; VMULSD(VEX_Vmulsd_xmm_xmm_xmmm64) [XMM0,XMM0,XMM0]   encoding(VEX, 4 bytes) = c5 fb 59 c0
0009h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> squareBytes => new byte[10]{0xC5,0xF8,0x77,0x66,0x90,0xC5,0xFB,0x59,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref sbyte square(ref sbyte src)
; location: [7FFC7C097C70h, 7FFC7C097C81h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,byte ptr [rcx]      ; MOVSX(Movsx_r64_rm8) [RAX,mem(8i,RCX:br,DS:sr)]      encoding(4 bytes) = 48 0f be 01
0009h imul eax,eax                  ; IMUL(Imul_r32_rm32) [EAX,EAX]                        encoding(3 bytes) = 0f af c0
000ch mov [rcx],al                  ; MOV(Mov_rm8_r8) [mem(8u,RCX:br,DS:sr),AL]            encoding(2 bytes) = 88 01
000eh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> squareBytes => new byte[18]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBE,0x01,0x0F,0xAF,0xC0,0x88,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref byte square(ref byte src)
; location: [7FFC7C097CA0h, 7FFC7C097CB0h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,byte ptr [rcx]      ; MOVZX(Movzx_r32_rm8) [EAX,mem(8u,RCX:br,DS:sr)]      encoding(3 bytes) = 0f b6 01
0008h imul eax,eax                  ; IMUL(Imul_r32_rm32) [EAX,EAX]                        encoding(3 bytes) = 0f af c0
000bh mov [rcx],al                  ; MOV(Mov_rm8_r8) [mem(8u,RCX:br,DS:sr),AL]            encoding(2 bytes) = 88 01
000dh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0010h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> squareBytes => new byte[17]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0x01,0x0F,0xAF,0xC0,0x88,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref short square(ref short src)
; location: [7FFC7C097CD0h, 7FFC7C097CE2h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,word ptr [rcx]      ; MOVSX(Movsx_r64_rm16) [RAX,mem(16i,RCX:br,DS:sr)]    encoding(4 bytes) = 48 0f bf 01
0009h imul eax,eax                  ; IMUL(Imul_r32_rm32) [EAX,EAX]                        encoding(3 bytes) = 0f af c0
000ch mov [rcx],ax                  ; MOV(Mov_rm16_r16) [mem(16u,RCX:br,DS:sr),AX]         encoding(3 bytes) = 66 89 01
000fh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0012h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> squareBytes => new byte[19]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBF,0x01,0x0F,0xAF,0xC0,0x66,0x89,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref ushort square(ref ushort src)
; location: [7FFC7C097D00h, 7FFC7C097D11h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,word ptr [rcx]      ; MOVZX(Movzx_r32_rm16) [EAX,mem(16u,RCX:br,DS:sr)]    encoding(3 bytes) = 0f b7 01
0008h imul eax,eax                  ; IMUL(Imul_r32_rm32) [EAX,EAX]                        encoding(3 bytes) = 0f af c0
000bh mov [rcx],ax                  ; MOV(Mov_rm16_r16) [mem(16u,RCX:br,DS:sr),AX]         encoding(3 bytes) = 66 89 01
000eh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> squareBytes => new byte[18]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB7,0x01,0x0F,0xAF,0xC0,0x66,0x89,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref int square(ref int src)
; location: [7FFC7C097D30h, 7FFC7C097D3Fh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov eax,[rcx]                 ; MOV(Mov_r32_rm32) [EAX,mem(32u,RCX:br,DS:sr)]        encoding(2 bytes) = 8b 01
0007h imul eax,eax                  ; IMUL(Imul_r32_rm32) [EAX,EAX]                        encoding(3 bytes) = 0f af c0
000ah mov [rcx],eax                 ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EAX]        encoding(2 bytes) = 89 01
000ch mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> squareBytes => new byte[16]{0x0F,0x1F,0x44,0x00,0x00,0x8B,0x01,0x0F,0xAF,0xC0,0x89,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref uint square(ref uint src)
; location: [7FFC7C097D50h, 7FFC7C097D5Fh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov eax,[rcx]                 ; MOV(Mov_r32_rm32) [EAX,mem(32u,RCX:br,DS:sr)]        encoding(2 bytes) = 8b 01
0007h imul eax,eax                  ; IMUL(Imul_r32_rm32) [EAX,EAX]                        encoding(3 bytes) = 0f af c0
000ah mov [rcx],eax                 ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EAX]        encoding(2 bytes) = 89 01
000ch mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> squareBytes => new byte[16]{0x0F,0x1F,0x44,0x00,0x00,0x8B,0x01,0x0F,0xAF,0xC0,0x89,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: int min(ReadOnlySpan<int> src)
; location: [7FFC7C097D70h, 7FFC7C097DA6h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rdx,[rcx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 11
0008h mov ecx,[rcx+8]               ; MOV(Mov_r32_rm32) [ECX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 49 08
000bh test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
000dh ja short 0012h                ; JA(Ja_rel8_64) [12h:jmp64]                           encoding(2 bytes) = 77 03
000fh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0012h mov eax,[rdx]                 ; MOV(Mov_r32_rm32) [EAX,mem(32u,RDX:br,DS:sr)]        encoding(2 bytes) = 8b 02
0014h mov r8d,1                     ; MOV(Mov_r32_imm32) [R8D,1h:imm32]                    encoding(6 bytes) = 41 b8 01 00 00 00
001ah cmp ecx,1                     ; CMP(Cmp_rm32_imm8) [ECX,1h:imm32]                    encoding(3 bytes) = 83 f9 01
001dh jle short 0036h               ; JLE(Jle_rel8_64) [36h:jmp64]                         encoding(2 bytes) = 7e 17
001fh movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0022h mov r9d,[rdx+r9*4]            ; MOV(Mov_r32_rm32) [R9D,mem(32u,RDX:br,DS:sr)]        encoding(4 bytes) = 46 8b 0c 8a
0026h cmp r9d,eax                   ; CMP(Cmp_r32_rm32) [R9D,EAX]                          encoding(3 bytes) = 44 3b c8
0029h jge short 002eh               ; JGE(Jge_rel8_64) [2Eh:jmp64]                         encoding(2 bytes) = 7d 03
002bh mov eax,r9d                   ; MOV(Mov_r32_rm32) [EAX,R9D]                          encoding(3 bytes) = 41 8b c1
002eh inc r8d                       ; INC(Inc_rm32) [R8D]                                  encoding(3 bytes) = 41 ff c0
0031h cmp r8d,ecx                   ; CMP(Cmp_r32_rm32) [R8D,ECX]                          encoding(3 bytes) = 44 3b c1
0034h jl short 001fh                ; JL(Jl_rel8_64) [1Fh:jmp64]                           encoding(2 bytes) = 7c e9
0036h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> minBytes => new byte[55]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x11,0x8B,0x49,0x08,0x85,0xC9,0x77,0x03,0x33,0xC0,0xC3,0x8B,0x02,0x41,0xB8,0x01,0x00,0x00,0x00,0x83,0xF9,0x01,0x7E,0x17,0x4D,0x63,0xC8,0x46,0x8B,0x0C,0x8A,0x44,0x3B,0xC8,0x7D,0x03,0x41,0x8B,0xC1,0x41,0xFF,0xC0,0x44,0x3B,0xC1,0x7C,0xE9,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: uint min(ReadOnlySpan<uint> src)
; location: [7FFC7C097DC0h, 7FFC7C097DF6h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rdx,[rcx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 11
0008h mov ecx,[rcx+8]               ; MOV(Mov_r32_rm32) [ECX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 49 08
000bh test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
000dh ja short 0012h                ; JA(Ja_rel8_64) [12h:jmp64]                           encoding(2 bytes) = 77 03
000fh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0012h mov eax,[rdx]                 ; MOV(Mov_r32_rm32) [EAX,mem(32u,RDX:br,DS:sr)]        encoding(2 bytes) = 8b 02
0014h mov r8d,1                     ; MOV(Mov_r32_imm32) [R8D,1h:imm32]                    encoding(6 bytes) = 41 b8 01 00 00 00
001ah cmp ecx,1                     ; CMP(Cmp_rm32_imm8) [ECX,1h:imm32]                    encoding(3 bytes) = 83 f9 01
001dh jle short 0036h               ; JLE(Jle_rel8_64) [36h:jmp64]                         encoding(2 bytes) = 7e 17
001fh movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0022h mov r9d,[rdx+r9*4]            ; MOV(Mov_r32_rm32) [R9D,mem(32u,RDX:br,DS:sr)]        encoding(4 bytes) = 46 8b 0c 8a
0026h cmp r9d,eax                   ; CMP(Cmp_r32_rm32) [R9D,EAX]                          encoding(3 bytes) = 44 3b c8
0029h jae short 002eh               ; JAE(Jae_rel8_64) [2Eh:jmp64]                         encoding(2 bytes) = 73 03
002bh mov eax,r9d                   ; MOV(Mov_r32_rm32) [EAX,R9D]                          encoding(3 bytes) = 41 8b c1
002eh inc r8d                       ; INC(Inc_rm32) [R8D]                                  encoding(3 bytes) = 41 ff c0
0031h cmp r8d,ecx                   ; CMP(Cmp_r32_rm32) [R8D,ECX]                          encoding(3 bytes) = 44 3b c1
0034h jl short 001fh                ; JL(Jl_rel8_64) [1Fh:jmp64]                           encoding(2 bytes) = 7c e9
0036h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> minBytes => new byte[55]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x11,0x8B,0x49,0x08,0x85,0xC9,0x77,0x03,0x33,0xC0,0xC3,0x8B,0x02,0x41,0xB8,0x01,0x00,0x00,0x00,0x83,0xF9,0x01,0x7E,0x17,0x4D,0x63,0xC8,0x46,0x8B,0x0C,0x8A,0x44,0x3B,0xC8,0x73,0x03,0x41,0x8B,0xC1,0x41,0xFF,0xC0,0x44,0x3B,0xC1,0x7C,0xE9,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: long min(ReadOnlySpan<long> src)
; location: [7FFC7C097E10h, 7FFC7C097E47h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rdx,[rcx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 11
0008h mov ecx,[rcx+8]               ; MOV(Mov_r32_rm32) [ECX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 49 08
000bh test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
000dh ja short 0012h                ; JA(Ja_rel8_64) [12h:jmp64]                           encoding(2 bytes) = 77 03
000fh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0012h mov rax,[rdx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 02
0015h mov r8d,1                     ; MOV(Mov_r32_imm32) [R8D,1h:imm32]                    encoding(6 bytes) = 41 b8 01 00 00 00
001bh cmp ecx,1                     ; CMP(Cmp_rm32_imm8) [ECX,1h:imm32]                    encoding(3 bytes) = 83 f9 01
001eh jle short 0037h               ; JLE(Jle_rel8_64) [37h:jmp64]                         encoding(2 bytes) = 7e 17
0020h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0023h mov r9,[rdx+r9*8]             ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(4 bytes) = 4e 8b 0c ca
0027h cmp r9,rax                    ; CMP(Cmp_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 3b c8
002ah jge short 002fh               ; JGE(Jge_rel8_64) [2Fh:jmp64]                         encoding(2 bytes) = 7d 03
002ch mov rax,r9                    ; MOV(Mov_r64_rm64) [RAX,R9]                           encoding(3 bytes) = 49 8b c1
002fh inc r8d                       ; INC(Inc_rm32) [R8D]                                  encoding(3 bytes) = 41 ff c0
0032h cmp r8d,ecx                   ; CMP(Cmp_r32_rm32) [R8D,ECX]                          encoding(3 bytes) = 44 3b c1
0035h jl short 0020h                ; JL(Jl_rel8_64) [20h:jmp64]                           encoding(2 bytes) = 7c e9
0037h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> minBytes => new byte[56]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x11,0x8B,0x49,0x08,0x85,0xC9,0x77,0x03,0x33,0xC0,0xC3,0x48,0x8B,0x02,0x41,0xB8,0x01,0x00,0x00,0x00,0x83,0xF9,0x01,0x7E,0x17,0x4D,0x63,0xC8,0x4E,0x8B,0x0C,0xCA,0x4C,0x3B,0xC8,0x7D,0x03,0x49,0x8B,0xC1,0x41,0xFF,0xC0,0x44,0x3B,0xC1,0x7C,0xE9,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ulong min(ReadOnlySpan<ulong> src)
; location: [7FFC7C097E60h, 7FFC7C097E97h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rdx,[rcx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 11
0008h mov ecx,[rcx+8]               ; MOV(Mov_r32_rm32) [ECX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 49 08
000bh test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
000dh ja short 0012h                ; JA(Ja_rel8_64) [12h:jmp64]                           encoding(2 bytes) = 77 03
000fh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0012h mov rax,[rdx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 02
0015h mov r8d,1                     ; MOV(Mov_r32_imm32) [R8D,1h:imm32]                    encoding(6 bytes) = 41 b8 01 00 00 00
001bh cmp ecx,1                     ; CMP(Cmp_rm32_imm8) [ECX,1h:imm32]                    encoding(3 bytes) = 83 f9 01
001eh jle short 0037h               ; JLE(Jle_rel8_64) [37h:jmp64]                         encoding(2 bytes) = 7e 17
0020h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0023h mov r9,[rdx+r9*8]             ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(4 bytes) = 4e 8b 0c ca
0027h cmp r9,rax                    ; CMP(Cmp_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 3b c8
002ah jae short 002fh               ; JAE(Jae_rel8_64) [2Fh:jmp64]                         encoding(2 bytes) = 73 03
002ch mov rax,r9                    ; MOV(Mov_r64_rm64) [RAX,R9]                           encoding(3 bytes) = 49 8b c1
002fh inc r8d                       ; INC(Inc_rm32) [R8D]                                  encoding(3 bytes) = 41 ff c0
0032h cmp r8d,ecx                   ; CMP(Cmp_r32_rm32) [R8D,ECX]                          encoding(3 bytes) = 44 3b c1
0035h jl short 0020h                ; JL(Jl_rel8_64) [20h:jmp64]                           encoding(2 bytes) = 7c e9
0037h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> minBytes => new byte[56]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x11,0x8B,0x49,0x08,0x85,0xC9,0x77,0x03,0x33,0xC0,0xC3,0x48,0x8B,0x02,0x41,0xB8,0x01,0x00,0x00,0x00,0x83,0xF9,0x01,0x7E,0x17,0x4D,0x63,0xC8,0x4E,0x8B,0x0C,0xCA,0x4C,0x3B,0xC8,0x73,0x03,0x49,0x8B,0xC1,0x41,0xFF,0xC0,0x44,0x3B,0xC1,0x7C,0xE9,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: float min(float lhs, float rhs)
; location: [7FFC7C097EB0h, 7FFC7C097EC0h]
0000h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0003h xchg ax,ax                    ; NOP(Nopw)                                            encoding(2 bytes) = 66 90
0005h vucomiss xmm1,xmm0            ; VUCOMISS(VEX_Vucomiss_xmm_xmmm32) [XMM1,XMM0]        encoding(VEX, 4 bytes) = c5 f8 2e c8
0009h ja short 0010h                ; JA(Ja_rel8_64) [10h:jmp64]                           encoding(2 bytes) = 77 05
000bh vmovaps xmm0,xmm1             ; VMOVAPS(VEX_Vmovaps_xmm_xmmm128) [XMM0,XMM1]         encoding(VEX, 4 bytes) = c5 f8 28 c1
000fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0010h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> minBytes => new byte[17]{0xC5,0xF8,0x77,0x66,0x90,0xC5,0xF8,0x2E,0xC8,0x77,0x05,0xC5,0xF8,0x28,0xC1,0xC3,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: double min(double lhs, double rhs)
; location: [7FFC7C097EE0h, 7FFC7C097EF0h]
0000h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0003h xchg ax,ax                    ; NOP(Nopw)                                            encoding(2 bytes) = 66 90
0005h vucomisd xmm1,xmm0            ; VUCOMISD(VEX_Vucomisd_xmm_xmmm64) [XMM1,XMM0]        encoding(VEX, 4 bytes) = c5 f9 2e c8
0009h ja short 0010h                ; JA(Ja_rel8_64) [10h:jmp64]                           encoding(2 bytes) = 77 05
000bh vmovaps xmm0,xmm1             ; VMOVAPS(VEX_Vmovaps_xmm_xmmm128) [XMM0,XMM1]         encoding(VEX, 4 bytes) = c5 f8 28 c1
000fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0010h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> minBytes => new byte[17]{0xC5,0xF8,0x77,0x66,0x90,0xC5,0xF9,0x2E,0xC8,0x77,0x05,0xC5,0xF8,0x28,0xC1,0xC3,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: float min(ReadOnlySpan<float> src)
; location: [7FFC7C097F10h, 7FFC7C097F4Bh]
0000h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0003h xchg ax,ax                    ; NOP(Nopw)                                            encoding(2 bytes) = 66 90
0005h mov rax,[rcx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 01
0008h mov edx,[rcx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 51 08
000bh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
000dh ja short 0014h                ; JA(Ja_rel8_64) [14h:jmp64]                           encoding(2 bytes) = 77 05
000fh vxorps xmm0,xmm0,xmm0         ; VXORPS(VEX_Vxorps_xmm_xmm_xmmm128) [XMM0,XMM0,XMM0]  encoding(VEX, 4 bytes) = c5 f8 57 c0
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0014h vmovss xmm0,dword ptr [rax]   ; VMOVSS(VEX_Vmovss_xmm_m32) [XMM0,mem(Float32,RAX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 10 00
0018h mov ecx,1                     ; MOV(Mov_r32_imm32) [ECX,1h:imm32]                    encoding(5 bytes) = b9 01 00 00 00
001dh cmp edx,1                     ; CMP(Cmp_rm32_imm8) [EDX,1h:imm32]                    encoding(3 bytes) = 83 fa 01
0020h jle short 003bh               ; JLE(Jle_rel8_64) [3Bh:jmp64]                         encoding(2 bytes) = 7e 19
0022h movsxd r8,ecx                 ; MOVSXD(Movsxd_r64_rm32) [R8,ECX]                     encoding(3 bytes) = 4c 63 c1
0025h vmovss xmm1,dword ptr [rax+r8*4]; VMOVSS(VEX_Vmovss_xmm_m32) [XMM1,mem(Float32,RAX:br,DS:sr)] encoding(VEX, 6 bytes) = c4 a1 7a 10 0c 80
002bh vucomiss xmm0,xmm1            ; VUCOMISS(VEX_Vucomiss_xmm_xmmm32) [XMM0,XMM1]        encoding(VEX, 4 bytes) = c5 f8 2e c1
002fh jbe short 0035h               ; JBE(Jbe_rel8_64) [35h:jmp64]                         encoding(2 bytes) = 76 04
0031h vmovaps xmm0,xmm1             ; VMOVAPS(VEX_Vmovaps_xmm_xmmm128) [XMM0,XMM1]         encoding(VEX, 4 bytes) = c5 f8 28 c1
0035h inc ecx                       ; INC(Inc_rm32) [ECX]                                  encoding(2 bytes) = ff c1
0037h cmp ecx,edx                   ; CMP(Cmp_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 3b ca
0039h jl short 0022h                ; JL(Jl_rel8_64) [22h:jmp64]                           encoding(2 bytes) = 7c e7
003bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> minBytes => new byte[60]{0xC5,0xF8,0x77,0x66,0x90,0x48,0x8B,0x01,0x8B,0x51,0x08,0x85,0xD2,0x77,0x05,0xC5,0xF8,0x57,0xC0,0xC3,0xC5,0xFA,0x10,0x00,0xB9,0x01,0x00,0x00,0x00,0x83,0xFA,0x01,0x7E,0x19,0x4C,0x63,0xC1,0xC4,0xA1,0x7A,0x10,0x0C,0x80,0xC5,0xF8,0x2E,0xC1,0x76,0x04,0xC5,0xF8,0x28,0xC1,0xFF,0xC1,0x3B,0xCA,0x7C,0xE7,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: sbyte mod(sbyte lhs, sbyte rhs)
; location: [7FFC7C097FB0h, 7FFC7C097FC4h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cl                  ; MOVSX(Movsx_r64_rm8) [RAX,CL]                        encoding(4 bytes) = 48 0f be c1
0009h movsx rcx,dl                  ; MOVSX(Movsx_r64_rm8) [RCX,DL]                        encoding(4 bytes) = 48 0f be ca
000dh cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
000eh idiv ecx                      ; IDIV(Idiv_rm32) [ECX]                                encoding(2 bytes) = f7 f9
0010h movsx rax,dl                  ; MOVSX(Movsx_r64_rm8) [RAX,DL]                        encoding(4 bytes) = 48 0f be c2
0014h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> modBytes => new byte[21]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBE,0xC1,0x48,0x0F,0xBE,0xCA,0x99,0xF7,0xF9,0x48,0x0F,0xBE,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: short mod(short lhs, short rhs)
; location: [7FFC7C098010h, 7FFC7C098024h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cx                  ; MOVSX(Movsx_r64_rm16) [RAX,CX]                       encoding(4 bytes) = 48 0f bf c1
0009h movsx rcx,dx                  ; MOVSX(Movsx_r64_rm16) [RCX,DX]                       encoding(4 bytes) = 48 0f bf ca
000dh cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
000eh idiv ecx                      ; IDIV(Idiv_rm32) [ECX]                                encoding(2 bytes) = f7 f9
0010h movsx rax,dx                  ; MOVSX(Movsx_r64_rm16) [RAX,DX]                       encoding(4 bytes) = 48 0f bf c2
0014h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> modBytes => new byte[21]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBF,0xC1,0x48,0x0F,0xBF,0xCA,0x99,0xF7,0xF9,0x48,0x0F,0xBF,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: int mod(int lhs, int rhs)
; location: [7FFC7C098070h, 7FFC7C098080h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov r8d,edx                   ; MOV(Mov_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 8b c2
0008h mov eax,ecx                   ; MOV(Mov_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 8b c1
000ah cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
000bh idiv r8d                      ; IDIV(Idiv_rm32) [R8D]                                encoding(3 bytes) = 41 f7 f8
000eh mov eax,edx                   ; MOV(Mov_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 8b c2
0010h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> modBytes => new byte[17]{0x0F,0x1F,0x44,0x00,0x00,0x44,0x8B,0xC2,0x8B,0xC1,0x99,0x41,0xF7,0xF8,0x8B,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: long mod(long lhs, long rhs)
; location: [7FFC7C0980D0h, 7FFC7C0980E3h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov r8,rdx                    ; MOV(Mov_r64_rm64) [R8,RDX]                           encoding(3 bytes) = 4c 8b c2
0008h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000bh cqo                           ; CQO(Cqo)                                             encoding(2 bytes) = 48 99
000dh idiv r8                       ; IDIV(Idiv_rm64) [R8]                                 encoding(3 bytes) = 49 f7 f8
0010h mov rax,rdx                   ; MOV(Mov_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 8b c2
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> modBytes => new byte[20]{0x0F,0x1F,0x44,0x00,0x00,0x4C,0x8B,0xC2,0x48,0x8B,0xC1,0x48,0x99,0x49,0xF7,0xF8,0x48,0x8B,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref sbyte mod(ref sbyte lhs, in sbyte rhs)
; location: [7FFC7C098130h, 7FFC7C098146h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,byte ptr [rcx]      ; MOVSX(Movsx_r64_rm8) [RAX,mem(8i,RCX:br,DS:sr)]      encoding(4 bytes) = 48 0f be 01
0009h movsx r8,byte ptr [rdx]       ; MOVSX(Movsx_r64_rm8) [R8,mem(8i,RDX:br,DS:sr)]       encoding(4 bytes) = 4c 0f be 02
000dh cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
000eh idiv r8d                      ; IDIV(Idiv_rm32) [R8D]                                encoding(3 bytes) = 41 f7 f8
0011h mov [rcx],dl                  ; MOV(Mov_rm8_r8) [mem(8u,RCX:br,DS:sr),DL]            encoding(2 bytes) = 88 11
0013h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0016h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> modBytes => new byte[23]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBE,0x01,0x4C,0x0F,0xBE,0x02,0x99,0x41,0xF7,0xF8,0x88,0x11,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref byte mod(ref byte lhs, in byte rhs)
; location: [7FFC7C098160h, 7FFC7C098175h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,byte ptr [rcx]      ; MOVZX(Movzx_r32_rm8) [EAX,mem(8u,RCX:br,DS:sr)]      encoding(3 bytes) = 0f b6 01
0008h movzx r8d,byte ptr [rdx]      ; MOVZX(Movzx_r32_rm8) [R8D,mem(8u,RDX:br,DS:sr)]      encoding(4 bytes) = 44 0f b6 02
000ch cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
000dh idiv r8d                      ; IDIV(Idiv_rm32) [R8D]                                encoding(3 bytes) = 41 f7 f8
0010h mov [rcx],dl                  ; MOV(Mov_rm8_r8) [mem(8u,RCX:br,DS:sr),DL]            encoding(2 bytes) = 88 11
0012h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0015h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> modBytes => new byte[22]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0x01,0x44,0x0F,0xB6,0x02,0x99,0x41,0xF7,0xF8,0x88,0x11,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref ushort mod(ref ushort lhs, in ushort rhs)
; location: [7FFC7C0981C0h, 7FFC7C0981D6h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,word ptr [rcx]      ; MOVZX(Movzx_r32_rm16) [EAX,mem(16u,RCX:br,DS:sr)]    encoding(3 bytes) = 0f b7 01
0008h movzx r8d,word ptr [rdx]      ; MOVZX(Movzx_r32_rm16) [R8D,mem(16u,RDX:br,DS:sr)]    encoding(4 bytes) = 44 0f b7 02
000ch cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
000dh idiv r8d                      ; IDIV(Idiv_rm32) [R8D]                                encoding(3 bytes) = 41 f7 f8
0010h mov [rcx],dx                  ; MOV(Mov_rm16_r16) [mem(16u,RCX:br,DS:sr),DX]         encoding(3 bytes) = 66 89 11
0013h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0016h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> modBytes => new byte[23]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB7,0x01,0x44,0x0F,0xB7,0x02,0x99,0x41,0xF7,0xF8,0x66,0x89,0x11,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref int mod(ref int lhs, in int rhs)
; location: [7FFC7C0981F0h, 7FFC7C098203h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov r8,rdx                    ; MOV(Mov_r64_rm64) [R8,RDX]                           encoding(3 bytes) = 4c 8b c2
0008h mov eax,[rcx]                 ; MOV(Mov_r32_rm32) [EAX,mem(32u,RCX:br,DS:sr)]        encoding(2 bytes) = 8b 01
000ah cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
000bh idiv dword ptr [r8]           ; IDIV(Idiv_rm32) [mem(32i,R8:br,DS:sr)]               encoding(3 bytes) = 41 f7 38
000eh mov [rcx],edx                 ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(2 bytes) = 89 11
0010h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> modBytes => new byte[20]{0x0F,0x1F,0x44,0x00,0x00,0x4C,0x8B,0xC2,0x8B,0x01,0x99,0x41,0xF7,0x38,0x89,0x11,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref long mod(ref long lhs, in long rhs)
; location: [7FFC7C098250h, 7FFC7C098266h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov r8,rdx                    ; MOV(Mov_r64_rm64) [R8,RDX]                           encoding(3 bytes) = 4c 8b c2
0008h mov rax,[rcx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 01
000bh cqo                           ; CQO(Cqo)                                             encoding(2 bytes) = 48 99
000dh idiv qword ptr [r8]           ; IDIV(Idiv_rm64) [mem(64i,R8:br,DS:sr)]               encoding(3 bytes) = 49 f7 38
0010h mov [rcx],rdx                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RDX]        encoding(3 bytes) = 48 89 11
0013h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0016h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> modBytes => new byte[23]{0x0F,0x1F,0x44,0x00,0x00,0x4C,0x8B,0xC2,0x48,0x8B,0x01,0x48,0x99,0x49,0xF7,0x38,0x48,0x89,0x11,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref ulong mod(ref ulong lhs, in ulong rhs)
; location: [7FFC7C098280h, 7FFC7C098296h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov r8,rdx                    ; MOV(Mov_r64_rm64) [R8,RDX]                           encoding(3 bytes) = 4c 8b c2
0008h mov rax,[rcx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 01
000bh xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
000dh div qword ptr [r8]            ; DIV(Div_rm64) [mem(64u,R8:br,DS:sr)]                 encoding(3 bytes) = 49 f7 30
0010h mov [rcx],rdx                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RDX]        encoding(3 bytes) = 48 89 11
0013h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0016h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> modBytes => new byte[23]{0x0F,0x1F,0x44,0x00,0x00,0x4C,0x8B,0xC2,0x48,0x8B,0x01,0x33,0xD2,0x49,0xF7,0x30,0x48,0x89,0x11,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: void mod(ReadOnlySpan<short> lhs, ReadOnlySpan<short> rhs, Span<short> dst)
; location: [7FFC7C0984D0h, 7FFC7C09859Ah]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
000dh mov r10d,[rdx+8]              ; MOV(Mov_r32_rm32) [R10D,mem(32u,RDX:br,DS:sr)]       encoding(4 bytes) = 44 8b 52 08
0011h mov r11,[rcx]                 ; MOV(Mov_r64_rm64) [R11,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 19
0014h mov ecx,[rcx+8]               ; MOV(Mov_r32_rm32) [ECX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 49 08
0017h mov esi,7Ah                   ; MOV(Mov_r32_imm32) [ESI,7ah:imm32]                   encoding(5 bytes) = be 7a 00 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,ecx                   ; MOV(Mov_r32_rm32) [EBX,ECX]                          encoding(2 bytes) = 8b d9
0023h mov ebp,r10d                  ; MOV(Mov_r32_rm32) [EBP,R10D]                         encoding(3 bytes) = 41 8b ea
0026h cmp ecx,r10d                  ; CMP(Cmp_r32_rm32) [ECX,R10D]                         encoding(3 bytes) = 41 3b ca
0029h jne short 006ch               ; JNE(Jne_rel8_64) [6Ch:jmp64]                         encoding(2 bytes) = 75 41
002bh xor ebx,ebx                   ; XOR(Xor_r32_rm32) [EBX,EBX]                          encoding(2 bytes) = 33 db
002dh test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
002fh jle short 0061h               ; JLE(Jle_rel8_64) [61h:jmp64]                         encoding(2 bytes) = 7e 30
0031h cmp ebx,[r8+8]                ; CMP(Cmp_r32_rm32) [EBX,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 41 3b 58 08
0035h jae near ptr 00c5h            ; JAE(Jae_rel32_64) [C5h:jmp64]                        encoding(6 bytes) = 0f 83 8a 00 00 00
003bh mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
003eh movsxd rdx,ebx                ; MOVSXD(Movsxd_r64_rm32) [RDX,EBX]                    encoding(3 bytes) = 48 63 d3
0041h lea rbp,[rax+rdx*2]           ; LEA(Lea_r64_m) [RBP,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 2c 50
0045h movsx rax,word ptr [r11+rdx*2]; MOVSX(Movsx_r64_rm16) [RAX,mem(16i,R11:br,DS:sr)]    encoding(5 bytes) = 49 0f bf 04 53
004ah cmp ebx,r10d                  ; CMP(Cmp_r32_rm32) [EBX,R10D]                         encoding(3 bytes) = 41 3b da
004dh jae short 00c5h               ; JAE(Jae_rel8_64) [C5h:jmp64]                         encoding(2 bytes) = 73 76
004fh movsx rdi,word ptr [r9+rdx*2] ; MOVSX(Movsx_r64_rm16) [RDI,mem(16i,R9:br,DS:sr)]     encoding(5 bytes) = 49 0f bf 3c 51
0054h cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
0055h idiv edi                      ; IDIV(Idiv_rm32) [EDI]                                encoding(2 bytes) = f7 ff
0057h mov [rbp],dx                  ; MOV(Mov_rm16_r16) [mem(16u,RBP:br,SS:sr),DX]         encoding(4 bytes) = 66 89 55 00
005bh inc ebx                       ; INC(Inc_rm32) [EBX]                                  encoding(2 bytes) = ff c3
005dh cmp ebx,ecx                   ; CMP(Cmp_r32_rm32) [EBX,ECX]                          encoding(2 bytes) = 3b d9
005fh jl short 0031h                ; JL(Jl_rel8_64) [31h:jmp64]                           encoding(2 bytes) = 7c d0
0061h add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0065h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0066h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0067h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0068h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0069h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
006bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
006ch mov ecx,35Dh                  ; MOV(Mov_r32_imm32) [ECX,35dh:imm32]                  encoding(5 bytes) = b9 5d 03 00 00
0071h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
007bh call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC3B950h:jmp64]                encoding(5 bytes) = e8 d0 b8 c3 5f
0080h mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0083h mov ecx,0D7Bh                 ; MOV(Mov_r32_imm32) [ECX,d7bh:imm32]                  encoding(5 bytes) = b9 7b 0d 00 00
0088h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
0092h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC3B950h:jmp64]                encoding(5 bytes) = e8 b9 b8 c3 5f
0097h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
009ah lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
009fh mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00a2h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00a6h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00a9h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00abh mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00adh mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00b2h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b7h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFF5B48h:jmp64]        encoding(5 bytes) = e8 8c 5a ff ff
00bch mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00bfh call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAF13C0h:jmp64]                encoding(5 bytes) = e8 fc 12 af 5f
00c4h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00c5h call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC3B170h:jmp64]                encoding(5 bytes) = e8 a6 b0 c3 5f
00cah int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> modBytes => new byte[203]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x4C,0x8B,0x0A,0x44,0x8B,0x52,0x08,0x4C,0x8B,0x19,0x8B,0x49,0x08,0xBE,0x7A,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xD9,0x41,0x8B,0xEA,0x41,0x3B,0xCA,0x75,0x41,0x33,0xDB,0x85,0xC9,0x7E,0x30,0x41,0x3B,0x58,0x08,0x0F,0x83,0x8A,0x00,0x00,0x00,0x49,0x8B,0x00,0x48,0x63,0xD3,0x48,0x8D,0x2C,0x50,0x49,0x0F,0xBF,0x04,0x53,0x41,0x3B,0xDA,0x73,0x76,0x49,0x0F,0xBF,0x3C,0x51,0x99,0xF7,0xFF,0x66,0x89,0x55,0x00,0xFF,0xC3,0x3B,0xD9,0x7C,0xD0,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x5D,0x03,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xD0,0xB8,0xC3,0x5F,0x4C,0x8B,0xF0,0xB9,0x7B,0x0D,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xB9,0xB8,0xC3,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x8C,0x5A,0xFF,0xFF,0x48,0x8B,0xC8,0xE8,0xFC,0x12,0xAF,0x5F,0xCC,0xE8,0xA6,0xB0,0xC3,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: void mod(ReadOnlySpan<ushort> lhs, ReadOnlySpan<ushort> rhs, Span<ushort> dst)
; location: [7FFC7C0985C0h, 7FFC7C09868Ah]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
000dh mov r10d,[rdx+8]              ; MOV(Mov_r32_rm32) [R10D,mem(32u,RDX:br,DS:sr)]       encoding(4 bytes) = 44 8b 52 08
0011h mov r11,[rcx]                 ; MOV(Mov_r64_rm64) [R11,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 19
0014h mov ecx,[rcx+8]               ; MOV(Mov_r32_rm32) [ECX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 49 08
0017h mov esi,81h                   ; MOV(Mov_r32_imm32) [ESI,81h:imm32]                   encoding(5 bytes) = be 81 00 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,ecx                   ; MOV(Mov_r32_rm32) [EBX,ECX]                          encoding(2 bytes) = 8b d9
0023h mov ebp,r10d                  ; MOV(Mov_r32_rm32) [EBP,R10D]                         encoding(3 bytes) = 41 8b ea
0026h cmp ecx,r10d                  ; CMP(Cmp_r32_rm32) [ECX,R10D]                         encoding(3 bytes) = 41 3b ca
0029h jne short 006ch               ; JNE(Jne_rel8_64) [6Ch:jmp64]                         encoding(2 bytes) = 75 41
002bh xor ebx,ebx                   ; XOR(Xor_r32_rm32) [EBX,EBX]                          encoding(2 bytes) = 33 db
002dh test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
002fh jle short 0061h               ; JLE(Jle_rel8_64) [61h:jmp64]                         encoding(2 bytes) = 7e 30
0031h cmp ebx,[r8+8]                ; CMP(Cmp_r32_rm32) [EBX,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 41 3b 58 08
0035h jae near ptr 00c5h            ; JAE(Jae_rel32_64) [C5h:jmp64]                        encoding(6 bytes) = 0f 83 8a 00 00 00
003bh mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
003eh movsxd rdx,ebx                ; MOVSXD(Movsxd_r64_rm32) [RDX,EBX]                    encoding(3 bytes) = 48 63 d3
0041h lea rbp,[rax+rdx*2]           ; LEA(Lea_r64_m) [RBP,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 2c 50
0045h movzx eax,word ptr [r11+rdx*2]; MOVZX(Movzx_r32_rm16) [EAX,mem(16u,R11:br,DS:sr)]    encoding(5 bytes) = 41 0f b7 04 53
004ah cmp ebx,r10d                  ; CMP(Cmp_r32_rm32) [EBX,R10D]                         encoding(3 bytes) = 41 3b da
004dh jae short 00c5h               ; JAE(Jae_rel8_64) [C5h:jmp64]                         encoding(2 bytes) = 73 76
004fh movzx edi,word ptr [r9+rdx*2] ; MOVZX(Movzx_r32_rm16) [EDI,mem(16u,R9:br,DS:sr)]     encoding(5 bytes) = 41 0f b7 3c 51
0054h cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
0055h idiv edi                      ; IDIV(Idiv_rm32) [EDI]                                encoding(2 bytes) = f7 ff
0057h mov [rbp],dx                  ; MOV(Mov_rm16_r16) [mem(16u,RBP:br,SS:sr),DX]         encoding(4 bytes) = 66 89 55 00
005bh inc ebx                       ; INC(Inc_rm32) [EBX]                                  encoding(2 bytes) = ff c3
005dh cmp ebx,ecx                   ; CMP(Cmp_r32_rm32) [EBX,ECX]                          encoding(2 bytes) = 3b d9
005fh jl short 0031h                ; JL(Jl_rel8_64) [31h:jmp64]                           encoding(2 bytes) = 7c d0
0061h add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0065h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0066h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0067h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0068h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0069h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
006bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
006ch mov ecx,35Dh                  ; MOV(Mov_r32_imm32) [ECX,35dh:imm32]                  encoding(5 bytes) = b9 5d 03 00 00
0071h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
007bh call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC3B860h:jmp64]                encoding(5 bytes) = e8 e0 b7 c3 5f
0080h mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0083h mov ecx,0D7Bh                 ; MOV(Mov_r32_imm32) [ECX,d7bh:imm32]                  encoding(5 bytes) = b9 7b 0d 00 00
0088h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
0092h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC3B860h:jmp64]                encoding(5 bytes) = e8 c9 b7 c3 5f
0097h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
009ah lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
009fh mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00a2h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00a6h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00a9h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00abh mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00adh mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00b2h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b7h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFF5A58h:jmp64]        encoding(5 bytes) = e8 9c 59 ff ff
00bch mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00bfh call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAF12D0h:jmp64]                encoding(5 bytes) = e8 0c 12 af 5f
00c4h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00c5h call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC3B080h:jmp64]                encoding(5 bytes) = e8 b6 af c3 5f
00cah int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> modBytes => new byte[203]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x4C,0x8B,0x0A,0x44,0x8B,0x52,0x08,0x4C,0x8B,0x19,0x8B,0x49,0x08,0xBE,0x81,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xD9,0x41,0x8B,0xEA,0x41,0x3B,0xCA,0x75,0x41,0x33,0xDB,0x85,0xC9,0x7E,0x30,0x41,0x3B,0x58,0x08,0x0F,0x83,0x8A,0x00,0x00,0x00,0x49,0x8B,0x00,0x48,0x63,0xD3,0x48,0x8D,0x2C,0x50,0x41,0x0F,0xB7,0x04,0x53,0x41,0x3B,0xDA,0x73,0x76,0x41,0x0F,0xB7,0x3C,0x51,0x99,0xF7,0xFF,0x66,0x89,0x55,0x00,0xFF,0xC3,0x3B,0xD9,0x7C,0xD0,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x5D,0x03,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xE0,0xB7,0xC3,0x5F,0x4C,0x8B,0xF0,0xB9,0x7B,0x0D,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xC9,0xB7,0xC3,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x9C,0x59,0xFF,0xFF,0x48,0x8B,0xC8,0xE8,0x0C,0x12,0xAF,0x5F,0xCC,0xE8,0xB6,0xAF,0xC3,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: void mod(ReadOnlySpan<int> lhs, ReadOnlySpan<int> rhs, Span<int> dst)
; location: [7FFC7C0986B0h, 7FFC7C098777h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
000dh mov r10d,[rdx+8]              ; MOV(Mov_r32_rm32) [R10D,mem(32u,RDX:br,DS:sr)]       encoding(4 bytes) = 44 8b 52 08
0011h mov r11,[rcx]                 ; MOV(Mov_r64_rm64) [R11,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 19
0014h mov ecx,[rcx+8]               ; MOV(Mov_r32_rm32) [ECX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 49 08
0017h mov esi,88h                   ; MOV(Mov_r32_imm32) [ESI,88h:imm32]                   encoding(5 bytes) = be 88 00 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,ecx                   ; MOV(Mov_r32_rm32) [EBX,ECX]                          encoding(2 bytes) = 8b d9
0023h mov ebp,r10d                  ; MOV(Mov_r32_rm32) [EBP,R10D]                         encoding(3 bytes) = 41 8b ea
0026h cmp ecx,r10d                  ; CMP(Cmp_r32_rm32) [ECX,R10D]                         encoding(3 bytes) = 41 3b ca
0029h jne short 0069h               ; JNE(Jne_rel8_64) [69h:jmp64]                         encoding(2 bytes) = 75 3e
002bh xor ebx,ebx                   ; XOR(Xor_r32_rm32) [EBX,EBX]                          encoding(2 bytes) = 33 db
002dh test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
002fh jle short 005eh               ; JLE(Jle_rel8_64) [5Eh:jmp64]                         encoding(2 bytes) = 7e 2d
0031h cmp ebx,[r8+8]                ; CMP(Cmp_r32_rm32) [EBX,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 41 3b 58 08
0035h jae near ptr 00c2h            ; JAE(Jae_rel32_64) [C2h:jmp64]                        encoding(6 bytes) = 0f 83 87 00 00 00
003bh mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
003eh movsxd rdx,ebx                ; MOVSXD(Movsxd_r64_rm32) [RDX,EBX]                    encoding(3 bytes) = 48 63 d3
0041h lea rbp,[rax+rdx*4]           ; LEA(Lea_r64_m) [RBP,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 2c 90
0045h mov eax,[r11+rdx*4]           ; MOV(Mov_r32_rm32) [EAX,mem(32u,R11:br,DS:sr)]        encoding(4 bytes) = 41 8b 04 93
0049h cmp ebx,r10d                  ; CMP(Cmp_r32_rm32) [EBX,R10D]                         encoding(3 bytes) = 41 3b da
004ch jae short 00c2h               ; JAE(Jae_rel8_64) [C2h:jmp64]                         encoding(2 bytes) = 73 74
004eh mov edi,[r9+rdx*4]            ; MOV(Mov_r32_rm32) [EDI,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 41 8b 3c 91
0052h cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
0053h idiv edi                      ; IDIV(Idiv_rm32) [EDI]                                encoding(2 bytes) = f7 ff
0055h mov [rbp],edx                 ; MOV(Mov_rm32_r32) [mem(32u,RBP:br,SS:sr),EDX]        encoding(3 bytes) = 89 55 00
0058h inc ebx                       ; INC(Inc_rm32) [EBX]                                  encoding(2 bytes) = ff c3
005ah cmp ebx,ecx                   ; CMP(Cmp_r32_rm32) [EBX,ECX]                          encoding(2 bytes) = 3b d9
005ch jl short 0031h                ; JL(Jl_rel8_64) [31h:jmp64]                           encoding(2 bytes) = 7c d3
005eh add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0062h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0063h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0064h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0065h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0066h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0068h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0069h mov ecx,35Dh                  ; MOV(Mov_r32_imm32) [ECX,35dh:imm32]                  encoding(5 bytes) = b9 5d 03 00 00
006eh mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
0078h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC3B770h:jmp64]                encoding(5 bytes) = e8 f3 b6 c3 5f
007dh mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0080h mov ecx,0D7Bh                 ; MOV(Mov_r32_imm32) [ECX,d7bh:imm32]                  encoding(5 bytes) = b9 7b 0d 00 00
0085h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
008fh call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC3B770h:jmp64]                encoding(5 bytes) = e8 dc b6 c3 5f
0094h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
0097h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
009ch mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
009fh mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00a3h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00a6h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00a8h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00aah mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00afh mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b4h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFF5968h:jmp64]        encoding(5 bytes) = e8 af 58 ff ff
00b9h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00bch call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAF11E0h:jmp64]                encoding(5 bytes) = e8 1f 11 af 5f
00c1h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00c2h call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC3AF90h:jmp64]                encoding(5 bytes) = e8 c9 ae c3 5f
00c7h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> modBytes => new byte[200]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x4C,0x8B,0x0A,0x44,0x8B,0x52,0x08,0x4C,0x8B,0x19,0x8B,0x49,0x08,0xBE,0x88,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xD9,0x41,0x8B,0xEA,0x41,0x3B,0xCA,0x75,0x3E,0x33,0xDB,0x85,0xC9,0x7E,0x2D,0x41,0x3B,0x58,0x08,0x0F,0x83,0x87,0x00,0x00,0x00,0x49,0x8B,0x00,0x48,0x63,0xD3,0x48,0x8D,0x2C,0x90,0x41,0x8B,0x04,0x93,0x41,0x3B,0xDA,0x73,0x74,0x41,0x8B,0x3C,0x91,0x99,0xF7,0xFF,0x89,0x55,0x00,0xFF,0xC3,0x3B,0xD9,0x7C,0xD3,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x5D,0x03,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xF3,0xB6,0xC3,0x5F,0x4C,0x8B,0xF0,0xB9,0x7B,0x0D,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xDC,0xB6,0xC3,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0xAF,0x58,0xFF,0xFF,0x48,0x8B,0xC8,0xE8,0x1F,0x11,0xAF,0x5F,0xCC,0xE8,0xC9,0xAE,0xC3,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: void mod(ReadOnlySpan<ulong> lhs, ReadOnlySpan<ulong> rhs, Span<ulong> dst)
; location: [7FFC7C098980h, 7FFC7C098A4Ah]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
000dh mov r10d,[rdx+8]              ; MOV(Mov_r32_rm32) [R10D,mem(32u,RDX:br,DS:sr)]       encoding(4 bytes) = 44 8b 52 08
0011h mov r11,[rcx]                 ; MOV(Mov_r64_rm64) [R11,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 19
0014h mov ecx,[rcx+8]               ; MOV(Mov_r32_rm32) [ECX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 49 08
0017h mov esi,9Dh                   ; MOV(Mov_r32_imm32) [ESI,9dh:imm32]                   encoding(5 bytes) = be 9d 00 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,ecx                   ; MOV(Mov_r32_rm32) [EBX,ECX]                          encoding(2 bytes) = 8b d9
0023h mov ebp,r10d                  ; MOV(Mov_r32_rm32) [EBP,R10D]                         encoding(3 bytes) = 41 8b ea
0026h cmp ecx,r10d                  ; CMP(Cmp_r32_rm32) [ECX,R10D]                         encoding(3 bytes) = 41 3b ca
0029h jne short 006ch               ; JNE(Jne_rel8_64) [6Ch:jmp64]                         encoding(2 bytes) = 75 41
002bh xor ebx,ebx                   ; XOR(Xor_r32_rm32) [EBX,EBX]                          encoding(2 bytes) = 33 db
002dh test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
002fh jle short 0061h               ; JLE(Jle_rel8_64) [61h:jmp64]                         encoding(2 bytes) = 7e 30
0031h cmp ebx,[r8+8]                ; CMP(Cmp_r32_rm32) [EBX,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 41 3b 58 08
0035h jae near ptr 00c5h            ; JAE(Jae_rel32_64) [C5h:jmp64]                        encoding(6 bytes) = 0f 83 8a 00 00 00
003bh mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
003eh movsxd rdx,ebx                ; MOVSXD(Movsxd_r64_rm32) [RDX,EBX]                    encoding(3 bytes) = 48 63 d3
0041h lea rbp,[rax+rdx*8]           ; LEA(Lea_r64_m) [RBP,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 2c d0
0045h mov rax,[r11+rdx*8]           ; MOV(Mov_r64_rm64) [RAX,mem(64u,R11:br,DS:sr)]        encoding(4 bytes) = 49 8b 04 d3
0049h cmp ebx,r10d                  ; CMP(Cmp_r32_rm32) [EBX,R10D]                         encoding(3 bytes) = 41 3b da
004ch jae short 00c5h               ; JAE(Jae_rel8_64) [C5h:jmp64]                         encoding(2 bytes) = 73 77
004eh mov rdi,[r9+rdx*8]            ; MOV(Mov_r64_rm64) [RDI,mem(64u,R9:br,DS:sr)]         encoding(4 bytes) = 49 8b 3c d1
0052h xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
0054h div rdi                       ; DIV(Div_rm64) [RDI]                                  encoding(3 bytes) = 48 f7 f7
0057h mov [rbp],rdx                 ; MOV(Mov_rm64_r64) [mem(64u,RBP:br,SS:sr),RDX]        encoding(4 bytes) = 48 89 55 00
005bh inc ebx                       ; INC(Inc_rm32) [EBX]                                  encoding(2 bytes) = ff c3
005dh cmp ebx,ecx                   ; CMP(Cmp_r32_rm32) [EBX,ECX]                          encoding(2 bytes) = 3b d9
005fh jl short 0031h                ; JL(Jl_rel8_64) [31h:jmp64]                           encoding(2 bytes) = 7c d0
0061h add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0065h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0066h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0067h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0068h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0069h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
006bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
006ch mov ecx,35Dh                  ; MOV(Mov_r32_imm32) [ECX,35dh:imm32]                  encoding(5 bytes) = b9 5d 03 00 00
0071h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
007bh call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC3B4A0h:jmp64]                encoding(5 bytes) = e8 20 b4 c3 5f
0080h mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0083h mov ecx,0D7Bh                 ; MOV(Mov_r32_imm32) [ECX,d7bh:imm32]                  encoding(5 bytes) = b9 7b 0d 00 00
0088h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
0092h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC3B4A0h:jmp64]                encoding(5 bytes) = e8 09 b4 c3 5f
0097h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
009ah lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
009fh mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00a2h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00a6h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00a9h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00abh mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00adh mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00b2h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b7h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFF5698h:jmp64]        encoding(5 bytes) = e8 dc 55 ff ff
00bch mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00bfh call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAF0F10h:jmp64]                encoding(5 bytes) = e8 4c 0e af 5f
00c4h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00c5h call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC3ACC0h:jmp64]                encoding(5 bytes) = e8 f6 ab c3 5f
00cah int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> modBytes => new byte[203]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x4C,0x8B,0x0A,0x44,0x8B,0x52,0x08,0x4C,0x8B,0x19,0x8B,0x49,0x08,0xBE,0x9D,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xD9,0x41,0x8B,0xEA,0x41,0x3B,0xCA,0x75,0x41,0x33,0xDB,0x85,0xC9,0x7E,0x30,0x41,0x3B,0x58,0x08,0x0F,0x83,0x8A,0x00,0x00,0x00,0x49,0x8B,0x00,0x48,0x63,0xD3,0x48,0x8D,0x2C,0xD0,0x49,0x8B,0x04,0xD3,0x41,0x3B,0xDA,0x73,0x77,0x49,0x8B,0x3C,0xD1,0x33,0xD2,0x48,0xF7,0xF7,0x48,0x89,0x55,0x00,0xFF,0xC3,0x3B,0xD9,0x7C,0xD0,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x5D,0x03,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x20,0xB4,0xC3,0x5F,0x4C,0x8B,0xF0,0xB9,0x7B,0x0D,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x09,0xB4,0xC3,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0xDC,0x55,0xFF,0xFF,0x48,0x8B,0xC8,0xE8,0x4C,0x0E,0xAF,0x5F,0xCC,0xE8,0xF6,0xAB,0xC3,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<byte> mod(Span<byte> lhs, ReadOnlySpan<byte> rhs)
; location: [7FFC7C098B70h, 7FFC7C098C47h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,40h                   ; SUB(Sub_rm64_imm8) [RSP,40h:imm64]                   encoding(4 bytes) = 48 83 ec 40
000ah mov r9,[r8]                   ; MOV(Mov_r64_rm64) [R9,mem(64u,R8:br,DS:sr)]          encoding(3 bytes) = 4d 8b 08
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0014h mov r11d,[rdx+8]              ; MOV(Mov_r32_rm32) [R11D,mem(32u,RDX:br,DS:sr)]       encoding(4 bytes) = 44 8b 5a 08
0018h mov esi,0ACh                  ; MOV(Mov_r32_imm32) [ESI,ach:imm32]                   encoding(5 bytes) = be ac 00 00 00
001dh mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0022h mov ebx,r11d                  ; MOV(Mov_r32_rm32) [EBX,R11D]                         encoding(3 bytes) = 41 8b db
0025h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0028h cmp r11d,r8d                  ; CMP(Cmp_r32_rm32) [R11D,R8D]                         encoding(3 bytes) = 45 3b d8
002bh jne short 0079h               ; JNE(Jne_rel8_64) [79h:jmp64]                         encoding(2 bytes) = 75 4c
002dh xor ebx,ebx                   ; XOR(Xor_r32_rm32) [EBX,EBX]                          encoding(2 bytes) = 33 db
002fh test r11d,r11d                ; TEST(Test_rm32_r32) [R11D,R11D]                      encoding(3 bytes) = 45 85 db
0032h jle short 0064h               ; JLE(Jle_rel8_64) [64h:jmp64]                         encoding(2 bytes) = 7e 30
0034h movsxd rax,ebx                ; MOVSXD(Movsxd_r64_rm32) [RAX,EBX]                    encoding(3 bytes) = 48 63 c3
0037h mov [rsp+30h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 30
003ch lea rbp,[r10+rax]             ; LEA(Lea_r64_m) [RBP,mem(Unknown,R10:br,DS:sr)]       encoding(4 bytes) = 49 8d 2c 02
0040h movzx eax,byte ptr [rbp]      ; MOVZX(Movzx_r32_rm8) [EAX,mem(8u,RBP:br,SS:sr)]      encoding(4 bytes) = 0f b6 45 00
0044h cmp ebx,r8d                   ; CMP(Cmp_r32_rm32) [EBX,R8D]                          encoding(3 bytes) = 41 3b d8
0047h jae near ptr 00d2h            ; JAE(Jae_rel32_64) [D2h:jmp64]                        encoding(6 bytes) = 0f 83 85 00 00 00
004dh mov rdx,[rsp+30h]             ; MOV(Mov_r64_rm64) [RDX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 54 24 30
0052h movzx edi,byte ptr [r9+rdx]   ; MOVZX(Movzx_r32_rm8) [EDI,mem(8u,R9:br,DS:sr)]       encoding(5 bytes) = 41 0f b6 3c 11
0057h cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
0058h idiv edi                      ; IDIV(Idiv_rm32) [EDI]                                encoding(2 bytes) = f7 ff
005ah mov [rbp],dl                  ; MOV(Mov_rm8_r8) [mem(8u,RBP:br,SS:sr),DL]            encoding(3 bytes) = 88 55 00
005dh inc ebx                       ; INC(Inc_rm32) [EBX]                                  encoding(2 bytes) = ff c3
005fh cmp ebx,r11d                  ; CMP(Cmp_r32_rm32) [EBX,R11D]                         encoding(3 bytes) = 41 3b db
0062h jl short 0034h                ; JL(Jl_rel8_64) [34h:jmp64]                           encoding(2 bytes) = 7c d0
0064h mov [rcx],r10                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R10]        encoding(3 bytes) = 4c 89 11
0067h mov [rcx+8],r11d              ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R11D]       encoding(4 bytes) = 44 89 59 08
006bh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
006eh add rsp,40h                   ; ADD(Add_rm64_imm8) [RSP,40h:imm64]                   encoding(4 bytes) = 48 83 c4 40
0072h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0073h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0074h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0075h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0076h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0078h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0079h mov ecx,35Dh                  ; MOV(Mov_r32_imm32) [ECX,35dh:imm32]                  encoding(5 bytes) = b9 5d 03 00 00
007eh mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
0088h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC3B2B0h:jmp64]                encoding(5 bytes) = e8 23 b2 c3 5f
008dh mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0090h mov ecx,0D7Bh                 ; MOV(Mov_r32_imm32) [ECX,d7bh:imm32]                  encoding(5 bytes) = b9 7b 0d 00 00
0095h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
009fh call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC3B2B0h:jmp64]                encoding(5 bytes) = e8 0c b2 c3 5f
00a4h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00a7h lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
00ach mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00afh mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00b3h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00b6h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00b8h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00bah mov rax,[rsp+38h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 38
00bfh mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00c4h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFF54A8h:jmp64]        encoding(5 bytes) = e8 df 53 ff ff
00c9h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00cch call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAF0D20h:jmp64]                encoding(5 bytes) = e8 4f 0c af 5f
00d1h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00d2h call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC3AAD0h:jmp64]                encoding(5 bytes) = e8 f9 a9 c3 5f
00d7h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> modBytes => new byte[216]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x40,0x4D,0x8B,0x08,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x12,0x44,0x8B,0x5A,0x08,0xBE,0xAC,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x41,0x8B,0xDB,0x41,0x8B,0xE8,0x45,0x3B,0xD8,0x75,0x4C,0x33,0xDB,0x45,0x85,0xDB,0x7E,0x30,0x48,0x63,0xC3,0x48,0x89,0x44,0x24,0x30,0x49,0x8D,0x2C,0x02,0x0F,0xB6,0x45,0x00,0x41,0x3B,0xD8,0x0F,0x83,0x85,0x00,0x00,0x00,0x48,0x8B,0x54,0x24,0x30,0x41,0x0F,0xB6,0x3C,0x11,0x99,0xF7,0xFF,0x88,0x55,0x00,0xFF,0xC3,0x41,0x3B,0xDB,0x7C,0xD0,0x4C,0x89,0x11,0x44,0x89,0x59,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x40,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x5D,0x03,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x23,0xB2,0xC3,0x5F,0x4C,0x8B,0xF0,0xB9,0x7B,0x0D,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x0C,0xB2,0xC3,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x38,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x38,0x48,0x89,0x44,0x24,0x20,0xE8,0xDF,0x53,0xFF,0xFF,0x48,0x8B,0xC8,0xE8,0x4F,0x0C,0xAF,0x5F,0xCC,0xE8,0xF9,0xA9,0xC3,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<ushort> mod(Span<ushort> lhs, ReadOnlySpan<ushort> rhs)
; location: [7FFC7C098D70h, 7FFC7C098E48h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,40h                   ; SUB(Sub_rm64_imm8) [RSP,40h:imm64]                   encoding(4 bytes) = 48 83 ec 40
000ah mov r9,[r8]                   ; MOV(Mov_r64_rm64) [R9,mem(64u,R8:br,DS:sr)]          encoding(3 bytes) = 4d 8b 08
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0014h mov r11d,[rdx+8]              ; MOV(Mov_r32_rm32) [R11D,mem(32u,RDX:br,DS:sr)]       encoding(4 bytes) = 44 8b 5a 08
0018h mov esi,0BCh                  ; MOV(Mov_r32_imm32) [ESI,bch:imm32]                   encoding(5 bytes) = be bc 00 00 00
001dh mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0022h mov ebx,r11d                  ; MOV(Mov_r32_rm32) [EBX,R11D]                         encoding(3 bytes) = 41 8b db
0025h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0028h cmp r11d,r8d                  ; CMP(Cmp_r32_rm32) [R11D,R8D]                         encoding(3 bytes) = 45 3b d8
002bh jne short 007ah               ; JNE(Jne_rel8_64) [7Ah:jmp64]                         encoding(2 bytes) = 75 4d
002dh xor ebx,ebx                   ; XOR(Xor_r32_rm32) [EBX,EBX]                          encoding(2 bytes) = 33 db
002fh test r11d,r11d                ; TEST(Test_rm32_r32) [R11D,R11D]                      encoding(3 bytes) = 45 85 db
0032h jle short 0065h               ; JLE(Jle_rel8_64) [65h:jmp64]                         encoding(2 bytes) = 7e 31
0034h movsxd rax,ebx                ; MOVSXD(Movsxd_r64_rm32) [RAX,EBX]                    encoding(3 bytes) = 48 63 c3
0037h mov [rsp+30h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 30
003ch lea rbp,[r10+rax*2]           ; LEA(Lea_r64_m) [RBP,mem(Unknown,R10:br,DS:sr)]       encoding(4 bytes) = 49 8d 2c 42
0040h movzx eax,word ptr [rbp]      ; MOVZX(Movzx_r32_rm16) [EAX,mem(16u,RBP:br,SS:sr)]    encoding(4 bytes) = 0f b7 45 00
0044h cmp ebx,r8d                   ; CMP(Cmp_r32_rm32) [EBX,R8D]                          encoding(3 bytes) = 41 3b d8
0047h jae near ptr 00d3h            ; JAE(Jae_rel32_64) [D3h:jmp64]                        encoding(6 bytes) = 0f 83 86 00 00 00
004dh mov rdx,[rsp+30h]             ; MOV(Mov_r64_rm64) [RDX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 54 24 30
0052h movzx edi,word ptr [r9+rdx*2] ; MOVZX(Movzx_r32_rm16) [EDI,mem(16u,R9:br,DS:sr)]     encoding(5 bytes) = 41 0f b7 3c 51
0057h cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
0058h idiv edi                      ; IDIV(Idiv_rm32) [EDI]                                encoding(2 bytes) = f7 ff
005ah mov [rbp],dx                  ; MOV(Mov_rm16_r16) [mem(16u,RBP:br,SS:sr),DX]         encoding(4 bytes) = 66 89 55 00
005eh inc ebx                       ; INC(Inc_rm32) [EBX]                                  encoding(2 bytes) = ff c3
0060h cmp ebx,r11d                  ; CMP(Cmp_r32_rm32) [EBX,R11D]                         encoding(3 bytes) = 41 3b db
0063h jl short 0034h                ; JL(Jl_rel8_64) [34h:jmp64]                           encoding(2 bytes) = 7c cf
0065h mov [rcx],r10                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R10]        encoding(3 bytes) = 4c 89 11
0068h mov [rcx+8],r11d              ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R11D]       encoding(4 bytes) = 44 89 59 08
006ch mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
006fh add rsp,40h                   ; ADD(Add_rm64_imm8) [RSP,40h:imm64]                   encoding(4 bytes) = 48 83 c4 40
0073h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0074h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0075h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0076h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0077h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0079h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
007ah mov ecx,35Dh                  ; MOV(Mov_r32_imm32) [ECX,35dh:imm32]                  encoding(5 bytes) = b9 5d 03 00 00
007fh mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
0089h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC3B0B0h:jmp64]                encoding(5 bytes) = e8 22 b0 c3 5f
008eh mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0091h mov ecx,0D7Bh                 ; MOV(Mov_r32_imm32) [ECX,d7bh:imm32]                  encoding(5 bytes) = b9 7b 0d 00 00
0096h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
00a0h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC3B0B0h:jmp64]                encoding(5 bytes) = e8 0b b0 c3 5f
00a5h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00a8h lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
00adh mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00b0h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00b4h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00b7h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00b9h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00bbh mov rax,[rsp+38h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 38
00c0h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00c5h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFF52A8h:jmp64]        encoding(5 bytes) = e8 de 51 ff ff
00cah mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00cdh call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAF0B20h:jmp64]                encoding(5 bytes) = e8 4e 0a af 5f
00d2h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00d3h call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC3A8D0h:jmp64]                encoding(5 bytes) = e8 f8 a7 c3 5f
00d8h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> modBytes => new byte[217]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x40,0x4D,0x8B,0x08,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x12,0x44,0x8B,0x5A,0x08,0xBE,0xBC,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x41,0x8B,0xDB,0x41,0x8B,0xE8,0x45,0x3B,0xD8,0x75,0x4D,0x33,0xDB,0x45,0x85,0xDB,0x7E,0x31,0x48,0x63,0xC3,0x48,0x89,0x44,0x24,0x30,0x49,0x8D,0x2C,0x42,0x0F,0xB7,0x45,0x00,0x41,0x3B,0xD8,0x0F,0x83,0x86,0x00,0x00,0x00,0x48,0x8B,0x54,0x24,0x30,0x41,0x0F,0xB7,0x3C,0x51,0x99,0xF7,0xFF,0x66,0x89,0x55,0x00,0xFF,0xC3,0x41,0x3B,0xDB,0x7C,0xCF,0x4C,0x89,0x11,0x44,0x89,0x59,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x40,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x5D,0x03,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x22,0xB0,0xC3,0x5F,0x4C,0x8B,0xF0,0xB9,0x7B,0x0D,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x0B,0xB0,0xC3,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x38,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x38,0x48,0x89,0x44,0x24,0x20,0xE8,0xDE,0x51,0xFF,0xFF,0x48,0x8B,0xC8,0xE8,0x4E,0x0A,0xAF,0x5F,0xCC,0xE8,0xF8,0xA7,0xC3,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<int> mod(Span<int> lhs, ReadOnlySpan<int> rhs)
; location: [7FFC7C098E70h, 7FFC7C098F37h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov r9,[r8]                   ; MOV(Mov_r64_rm64) [R9,mem(64u,R8:br,DS:sr)]          encoding(3 bytes) = 4d 8b 08
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0014h mov r11d,[rdx+8]              ; MOV(Mov_r32_rm32) [R11D,mem(32u,RDX:br,DS:sr)]       encoding(4 bytes) = 44 8b 5a 08
0018h mov esi,0C4h                  ; MOV(Mov_r32_imm32) [ESI,c4h:imm32]                   encoding(5 bytes) = be c4 00 00 00
001dh mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0022h mov ebx,r11d                  ; MOV(Mov_r32_rm32) [EBX,R11D]                         encoding(3 bytes) = 41 8b db
0025h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0028h cmp r11d,r8d                  ; CMP(Cmp_r32_rm32) [R11D,R8D]                         encoding(3 bytes) = 45 3b d8
002bh jne short 0069h               ; JNE(Jne_rel8_64) [69h:jmp64]                         encoding(2 bytes) = 75 3c
002dh xor ebx,ebx                   ; XOR(Xor_r32_rm32) [EBX,EBX]                          encoding(2 bytes) = 33 db
002fh test r11d,r11d                ; TEST(Test_rm32_r32) [R11D,R11D]                      encoding(3 bytes) = 45 85 db
0032h jle short 0054h               ; JLE(Jle_rel8_64) [54h:jmp64]                         encoding(2 bytes) = 7e 20
0034h movsxd rbp,ebx                ; MOVSXD(Movsxd_r64_rm32) [RBP,EBX]                    encoding(3 bytes) = 48 63 eb
0037h lea rdi,[r10+rbp*4]           ; LEA(Lea_r64_m) [RDI,mem(Unknown,R10:br,DS:sr)]       encoding(4 bytes) = 49 8d 3c aa
003bh mov eax,[rdi]                 ; MOV(Mov_r32_rm32) [EAX,mem(32u,RDI:br,DS:sr)]        encoding(2 bytes) = 8b 07
003dh cmp ebx,r8d                   ; CMP(Cmp_r32_rm32) [EBX,R8D]                          encoding(3 bytes) = 41 3b d8
0040h jae near ptr 00c2h            ; JAE(Jae_rel32_64) [C2h:jmp64]                        encoding(6 bytes) = 0f 83 7c 00 00 00
0046h cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
0047h idiv dword ptr [r9+rbp*4]     ; IDIV(Idiv_rm32) [mem(32i,R9:br,DS:sr)]               encoding(4 bytes) = 41 f7 3c a9
004bh mov [rdi],edx                 ; MOV(Mov_rm32_r32) [mem(32u,RDI:br,DS:sr),EDX]        encoding(2 bytes) = 89 17
004dh inc ebx                       ; INC(Inc_rm32) [EBX]                                  encoding(2 bytes) = ff c3
004fh cmp ebx,r11d                  ; CMP(Cmp_r32_rm32) [EBX,R11D]                         encoding(3 bytes) = 41 3b db
0052h jl short 0034h                ; JL(Jl_rel8_64) [34h:jmp64]                           encoding(2 bytes) = 7c e0
0054h mov [rcx],r10                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R10]        encoding(3 bytes) = 4c 89 11
0057h mov [rcx+8],r11d              ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R11D]       encoding(4 bytes) = 44 89 59 08
005bh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
005eh add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0062h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0063h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0064h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0065h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0066h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0068h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0069h mov ecx,35Dh                  ; MOV(Mov_r32_imm32) [ECX,35dh:imm32]                  encoding(5 bytes) = b9 5d 03 00 00
006eh mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
0078h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC3AFB0h:jmp64]                encoding(5 bytes) = e8 33 af c3 5f
007dh mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0080h mov ecx,0D7Bh                 ; MOV(Mov_r32_imm32) [ECX,d7bh:imm32]                  encoding(5 bytes) = b9 7b 0d 00 00
0085h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
008fh call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC3AFB0h:jmp64]                encoding(5 bytes) = e8 1c af c3 5f
0094h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
0097h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
009ch mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
009fh mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00a3h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00a6h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00a8h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00aah mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00afh mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b4h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFF51A8h:jmp64]        encoding(5 bytes) = e8 ef 50 ff ff
00b9h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00bch call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAF0A20h:jmp64]                encoding(5 bytes) = e8 5f 09 af 5f
00c1h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00c2h call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC3A7D0h:jmp64]                encoding(5 bytes) = e8 09 a7 c3 5f
00c7h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> modBytes => new byte[200]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x4D,0x8B,0x08,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x12,0x44,0x8B,0x5A,0x08,0xBE,0xC4,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x41,0x8B,0xDB,0x41,0x8B,0xE8,0x45,0x3B,0xD8,0x75,0x3C,0x33,0xDB,0x45,0x85,0xDB,0x7E,0x20,0x48,0x63,0xEB,0x49,0x8D,0x3C,0xAA,0x8B,0x07,0x41,0x3B,0xD8,0x0F,0x83,0x7C,0x00,0x00,0x00,0x99,0x41,0xF7,0x3C,0xA9,0x89,0x17,0xFF,0xC3,0x41,0x3B,0xDB,0x7C,0xE0,0x4C,0x89,0x11,0x44,0x89,0x59,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x5D,0x03,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x33,0xAF,0xC3,0x5F,0x4C,0x8B,0xF0,0xB9,0x7B,0x0D,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x1C,0xAF,0xC3,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0xEF,0x50,0xFF,0xFF,0x48,0x8B,0xC8,0xE8,0x5F,0x09,0xAF,0x5F,0xCC,0xE8,0x09,0xA7,0xC3,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<uint> mod(Span<uint> lhs, ReadOnlySpan<uint> rhs)
; location: [7FFC7C098F60h, 7FFC7C099028h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov r9,[r8]                   ; MOV(Mov_r64_rm64) [R9,mem(64u,R8:br,DS:sr)]          encoding(3 bytes) = 4d 8b 08
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0014h mov r11d,[rdx+8]              ; MOV(Mov_r32_rm32) [R11D,mem(32u,RDX:br,DS:sr)]       encoding(4 bytes) = 44 8b 5a 08
0018h mov esi,0CCh                  ; MOV(Mov_r32_imm32) [ESI,cch:imm32]                   encoding(5 bytes) = be cc 00 00 00
001dh mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0022h mov ebx,r11d                  ; MOV(Mov_r32_rm32) [EBX,R11D]                         encoding(3 bytes) = 41 8b db
0025h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0028h cmp r11d,r8d                  ; CMP(Cmp_r32_rm32) [R11D,R8D]                         encoding(3 bytes) = 45 3b d8
002bh jne short 006ah               ; JNE(Jne_rel8_64) [6Ah:jmp64]                         encoding(2 bytes) = 75 3d
002dh xor ebx,ebx                   ; XOR(Xor_r32_rm32) [EBX,EBX]                          encoding(2 bytes) = 33 db
002fh test r11d,r11d                ; TEST(Test_rm32_r32) [R11D,R11D]                      encoding(3 bytes) = 45 85 db
0032h jle short 0055h               ; JLE(Jle_rel8_64) [55h:jmp64]                         encoding(2 bytes) = 7e 21
0034h movsxd rbp,ebx                ; MOVSXD(Movsxd_r64_rm32) [RBP,EBX]                    encoding(3 bytes) = 48 63 eb
0037h lea rdi,[r10+rbp*4]           ; LEA(Lea_r64_m) [RDI,mem(Unknown,R10:br,DS:sr)]       encoding(4 bytes) = 49 8d 3c aa
003bh mov eax,[rdi]                 ; MOV(Mov_r32_rm32) [EAX,mem(32u,RDI:br,DS:sr)]        encoding(2 bytes) = 8b 07
003dh cmp ebx,r8d                   ; CMP(Cmp_r32_rm32) [EBX,R8D]                          encoding(3 bytes) = 41 3b d8
0040h jae near ptr 00c3h            ; JAE(Jae_rel32_64) [C3h:jmp64]                        encoding(6 bytes) = 0f 83 7d 00 00 00
0046h xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
0048h div dword ptr [r9+rbp*4]      ; DIV(Div_rm32) [mem(32u,R9:br,DS:sr)]                 encoding(4 bytes) = 41 f7 34 a9
004ch mov [rdi],edx                 ; MOV(Mov_rm32_r32) [mem(32u,RDI:br,DS:sr),EDX]        encoding(2 bytes) = 89 17
004eh inc ebx                       ; INC(Inc_rm32) [EBX]                                  encoding(2 bytes) = ff c3
0050h cmp ebx,r11d                  ; CMP(Cmp_r32_rm32) [EBX,R11D]                         encoding(3 bytes) = 41 3b db
0053h jl short 0034h                ; JL(Jl_rel8_64) [34h:jmp64]                           encoding(2 bytes) = 7c df
0055h mov [rcx],r10                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R10]        encoding(3 bytes) = 4c 89 11
0058h mov [rcx+8],r11d              ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R11D]       encoding(4 bytes) = 44 89 59 08
005ch mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
005fh add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0063h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0064h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0065h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0066h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0067h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0069h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
006ah mov ecx,35Dh                  ; MOV(Mov_r32_imm32) [ECX,35dh:imm32]                  encoding(5 bytes) = b9 5d 03 00 00
006fh mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
0079h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC3AEC0h:jmp64]                encoding(5 bytes) = e8 42 ae c3 5f
007eh mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0081h mov ecx,0D7Bh                 ; MOV(Mov_r32_imm32) [ECX,d7bh:imm32]                  encoding(5 bytes) = b9 7b 0d 00 00
0086h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
0090h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC3AEC0h:jmp64]                encoding(5 bytes) = e8 2b ae c3 5f
0095h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
0098h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
009dh mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00a0h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00a4h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00a7h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00a9h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00abh mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00b0h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b5h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFF50B8h:jmp64]        encoding(5 bytes) = e8 fe 4f ff ff
00bah mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00bdh call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAF0930h:jmp64]                encoding(5 bytes) = e8 6e 08 af 5f
00c2h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00c3h call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC3A6E0h:jmp64]                encoding(5 bytes) = e8 18 a6 c3 5f
00c8h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> modBytes => new byte[201]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x4D,0x8B,0x08,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x12,0x44,0x8B,0x5A,0x08,0xBE,0xCC,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x41,0x8B,0xDB,0x41,0x8B,0xE8,0x45,0x3B,0xD8,0x75,0x3D,0x33,0xDB,0x45,0x85,0xDB,0x7E,0x21,0x48,0x63,0xEB,0x49,0x8D,0x3C,0xAA,0x8B,0x07,0x41,0x3B,0xD8,0x0F,0x83,0x7D,0x00,0x00,0x00,0x33,0xD2,0x41,0xF7,0x34,0xA9,0x89,0x17,0xFF,0xC3,0x41,0x3B,0xDB,0x7C,0xDF,0x4C,0x89,0x11,0x44,0x89,0x59,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x5D,0x03,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x42,0xAE,0xC3,0x5F,0x4C,0x8B,0xF0,0xB9,0x7B,0x0D,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x2B,0xAE,0xC3,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0xFE,0x4F,0xFF,0xFF,0x48,0x8B,0xC8,0xE8,0x6E,0x08,0xAF,0x5F,0xCC,0xE8,0x18,0xA6,0xC3,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<ushort> mod(Span<ushort> lhs, ushort rhs)
; location: [7FFC7C099330h, 7FFC7C09936Ch]
0000h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0001h nop dword ptr [rax]           ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(4 bytes) = 0f 1f 40 00
0005h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0008h mov r10d,[rdx+8]              ; MOV(Mov_r32_rm32) [R10D,mem(32u,RDX:br,DS:sr)]       encoding(4 bytes) = 44 8b 52 08
000ch xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
000fh test r10d,r10d                ; TEST(Test_rm32_r32) [R10D,R10D]                      encoding(3 bytes) = 45 85 d2
0012h jle short 0031h               ; JLE(Jle_rel8_64) [31h:jmp64]                         encoding(2 bytes) = 7e 1d
0014h movzx r8d,r8w                 ; MOVZX(Movzx_r32_rm16) [R8D,R8W]                      encoding(4 bytes) = 45 0f b7 c0
0018h movsxd rax,r11d               ; MOVSXD(Movsxd_r64_rm32) [RAX,R11D]                   encoding(3 bytes) = 49 63 c3
001bh lea rsi,[r9+rax*2]            ; LEA(Lea_r64_m) [RSI,mem(Unknown,R9:br,DS:sr)]        encoding(4 bytes) = 49 8d 34 41
001fh movzx eax,word ptr [rsi]      ; MOVZX(Movzx_r32_rm16) [EAX,mem(16u,RSI:br,DS:sr)]    encoding(3 bytes) = 0f b7 06
0022h cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
0023h idiv r8d                      ; IDIV(Idiv_rm32) [R8D]                                encoding(3 bytes) = 41 f7 f8
0026h mov [rsi],dx                  ; MOV(Mov_rm16_r16) [mem(16u,RSI:br,DS:sr),DX]         encoding(3 bytes) = 66 89 16
0029h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
002ch cmp r11d,r10d                 ; CMP(Cmp_r32_rm32) [R11D,R10D]                        encoding(3 bytes) = 45 3b da
002fh jl short 0018h                ; JL(Jl_rel8_64) [18h:jmp64]                           encoding(2 bytes) = 7c e7
0031h mov [rcx],r9                  ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R9]         encoding(3 bytes) = 4c 89 09
0034h mov [rcx+8],r10d              ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R10D]       encoding(4 bytes) = 44 89 51 08
0038h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
003bh pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
003ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> modBytes => new byte[61]{0x56,0x0F,0x1F,0x40,0x00,0x4C,0x8B,0x0A,0x44,0x8B,0x52,0x08,0x45,0x33,0xDB,0x45,0x85,0xD2,0x7E,0x1D,0x45,0x0F,0xB7,0xC0,0x49,0x63,0xC3,0x49,0x8D,0x34,0x41,0x0F,0xB7,0x06,0x99,0x41,0xF7,0xF8,0x66,0x89,0x16,0x41,0xFF,0xC3,0x45,0x3B,0xDA,0x7C,0xE7,0x4C,0x89,0x09,0x44,0x89,0x51,0x08,0x48,0x8B,0xC1,0x5E,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<int> mod(Span<int> lhs, int rhs)
; location: [7FFC7C099390h, 7FFC7C0993C6h]
0000h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0001h nop dword ptr [rax]           ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(4 bytes) = 0f 1f 40 00
0005h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0008h mov r10d,[rdx+8]              ; MOV(Mov_r32_rm32) [R10D,mem(32u,RDX:br,DS:sr)]       encoding(4 bytes) = 44 8b 52 08
000ch xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
000fh test r10d,r10d                ; TEST(Test_rm32_r32) [R10D,R10D]                      encoding(3 bytes) = 45 85 d2
0012h jle short 002bh               ; JLE(Jle_rel8_64) [2Bh:jmp64]                         encoding(2 bytes) = 7e 17
0014h movsxd rax,r11d               ; MOVSXD(Movsxd_r64_rm32) [RAX,R11D]                   encoding(3 bytes) = 49 63 c3
0017h lea rsi,[r9+rax*4]            ; LEA(Lea_r64_m) [RSI,mem(Unknown,R9:br,DS:sr)]        encoding(4 bytes) = 49 8d 34 81
001bh mov eax,[rsi]                 ; MOV(Mov_r32_rm32) [EAX,mem(32u,RSI:br,DS:sr)]        encoding(2 bytes) = 8b 06
001dh cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
001eh idiv r8d                      ; IDIV(Idiv_rm32) [R8D]                                encoding(3 bytes) = 41 f7 f8
0021h mov [rsi],edx                 ; MOV(Mov_rm32_r32) [mem(32u,RSI:br,DS:sr),EDX]        encoding(2 bytes) = 89 16
0023h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
0026h cmp r11d,r10d                 ; CMP(Cmp_r32_rm32) [R11D,R10D]                        encoding(3 bytes) = 45 3b da
0029h jl short 0014h                ; JL(Jl_rel8_64) [14h:jmp64]                           encoding(2 bytes) = 7c e9
002bh mov [rcx],r9                  ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R9]         encoding(3 bytes) = 4c 89 09
002eh mov [rcx+8],r10d              ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R10D]       encoding(4 bytes) = 44 89 51 08
0032h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0035h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0036h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> modBytes => new byte[55]{0x56,0x0F,0x1F,0x40,0x00,0x4C,0x8B,0x0A,0x44,0x8B,0x52,0x08,0x45,0x33,0xDB,0x45,0x85,0xD2,0x7E,0x17,0x49,0x63,0xC3,0x49,0x8D,0x34,0x81,0x8B,0x06,0x99,0x41,0xF7,0xF8,0x89,0x16,0x41,0xFF,0xC3,0x45,0x3B,0xDA,0x7C,0xE9,0x4C,0x89,0x09,0x44,0x89,0x51,0x08,0x48,0x8B,0xC1,0x5E,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<uint> mod(Span<uint> lhs, uint rhs)
; location: [7FFC7C0993E0h, 7FFC7C099417h]
0000h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0001h nop dword ptr [rax]           ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(4 bytes) = 0f 1f 40 00
0005h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0008h mov r10d,[rdx+8]              ; MOV(Mov_r32_rm32) [R10D,mem(32u,RDX:br,DS:sr)]       encoding(4 bytes) = 44 8b 52 08
000ch xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
000fh test r10d,r10d                ; TEST(Test_rm32_r32) [R10D,R10D]                      encoding(3 bytes) = 45 85 d2
0012h jle short 002ch               ; JLE(Jle_rel8_64) [2Ch:jmp64]                         encoding(2 bytes) = 7e 18
0014h movsxd rax,r11d               ; MOVSXD(Movsxd_r64_rm32) [RAX,R11D]                   encoding(3 bytes) = 49 63 c3
0017h lea rsi,[r9+rax*4]            ; LEA(Lea_r64_m) [RSI,mem(Unknown,R9:br,DS:sr)]        encoding(4 bytes) = 49 8d 34 81
001bh mov eax,[rsi]                 ; MOV(Mov_r32_rm32) [EAX,mem(32u,RSI:br,DS:sr)]        encoding(2 bytes) = 8b 06
001dh xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
001fh div r8d                       ; DIV(Div_rm32) [R8D]                                  encoding(3 bytes) = 41 f7 f0
0022h mov [rsi],edx                 ; MOV(Mov_rm32_r32) [mem(32u,RSI:br,DS:sr),EDX]        encoding(2 bytes) = 89 16
0024h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
0027h cmp r11d,r10d                 ; CMP(Cmp_r32_rm32) [R11D,R10D]                        encoding(3 bytes) = 45 3b da
002ah jl short 0014h                ; JL(Jl_rel8_64) [14h:jmp64]                           encoding(2 bytes) = 7c e8
002ch mov [rcx],r9                  ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R9]         encoding(3 bytes) = 4c 89 09
002fh mov [rcx+8],r10d              ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R10D]       encoding(4 bytes) = 44 89 51 08
0033h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0036h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0037h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> modBytes => new byte[56]{0x56,0x0F,0x1F,0x40,0x00,0x4C,0x8B,0x0A,0x44,0x8B,0x52,0x08,0x45,0x33,0xDB,0x45,0x85,0xD2,0x7E,0x18,0x49,0x63,0xC3,0x49,0x8D,0x34,0x81,0x8B,0x06,0x33,0xD2,0x41,0xF7,0xF0,0x89,0x16,0x41,0xFF,0xC3,0x45,0x3B,0xDA,0x7C,0xE8,0x4C,0x89,0x09,0x44,0x89,0x51,0x08,0x48,0x8B,0xC1,0x5E,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<ulong> mod(Span<ulong> lhs, ulong rhs)
; location: [7FFC7C099480h, 7FFC7C0994B9h]
0000h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0001h nop dword ptr [rax]           ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(4 bytes) = 0f 1f 40 00
0005h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0008h mov r10d,[rdx+8]              ; MOV(Mov_r32_rm32) [R10D,mem(32u,RDX:br,DS:sr)]       encoding(4 bytes) = 44 8b 52 08
000ch xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
000fh test r10d,r10d                ; TEST(Test_rm32_r32) [R10D,R10D]                      encoding(3 bytes) = 45 85 d2
0012h jle short 002eh               ; JLE(Jle_rel8_64) [2Eh:jmp64]                         encoding(2 bytes) = 7e 1a
0014h movsxd rax,r11d               ; MOVSXD(Movsxd_r64_rm32) [RAX,R11D]                   encoding(3 bytes) = 49 63 c3
0017h lea rsi,[r9+rax*8]            ; LEA(Lea_r64_m) [RSI,mem(Unknown,R9:br,DS:sr)]        encoding(4 bytes) = 49 8d 34 c1
001bh mov rax,[rsi]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSI:br,DS:sr)]        encoding(3 bytes) = 48 8b 06
001eh xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
0020h div r8                        ; DIV(Div_rm64) [R8]                                   encoding(3 bytes) = 49 f7 f0
0023h mov [rsi],rdx                 ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RDX]        encoding(3 bytes) = 48 89 16
0026h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
0029h cmp r11d,r10d                 ; CMP(Cmp_r32_rm32) [R11D,R10D]                        encoding(3 bytes) = 45 3b da
002ch jl short 0014h                ; JL(Jl_rel8_64) [14h:jmp64]                           encoding(2 bytes) = 7c e6
002eh mov [rcx],r9                  ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R9]         encoding(3 bytes) = 4c 89 09
0031h mov [rcx+8],r10d              ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R10D]       encoding(4 bytes) = 44 89 51 08
0035h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0038h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0039h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> modBytes => new byte[58]{0x56,0x0F,0x1F,0x40,0x00,0x4C,0x8B,0x0A,0x44,0x8B,0x52,0x08,0x45,0x33,0xDB,0x45,0x85,0xD2,0x7E,0x1A,0x49,0x63,0xC3,0x49,0x8D,0x34,0xC1,0x48,0x8B,0x06,0x33,0xD2,0x49,0xF7,0xF0,0x48,0x89,0x16,0x41,0xFF,0xC3,0x45,0x3B,0xDA,0x7C,0xE6,0x4C,0x89,0x09,0x44,0x89,0x51,0x08,0x48,0x8B,0xC1,0x5E,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<sbyte> mod(ReadOnlySpan<sbyte> lhs, sbyte rhs, Span<sbyte> dst)
; location: [7FFC7C0994D0h, 7FFC7C099522h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0003h sub rsp,20h                   ; SUB(Sub_rm64_imm8) [RSP,20h:imm64]                   encoding(4 bytes) = 48 83 ec 20
0007h mov r10,[r9]                  ; MOV(Mov_r64_rm64) [R10,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 4d 8b 11
000ah mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000eh mov r11,[rdx]                 ; MOV(Mov_r64_rm64) [R11,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 1a
0011h mov esi,[rdx+8]               ; MOV(Mov_r32_rm32) [ESI,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 72 08
0014h xor edi,edi                   ; XOR(Xor_r32_rm32) [EDI,EDI]                          encoding(2 bytes) = 33 ff
0016h test esi,esi                  ; TEST(Test_rm32_r32) [ESI,ESI]                        encoding(2 bytes) = 85 f6
0018h jle short 003bh               ; JLE(Jle_rel8_64) [3Bh:jmp64]                         encoding(2 bytes) = 7e 21
001ah movsx r8,r8b                  ; MOVSX(Movsx_r64_rm8) [R8,R8L]                        encoding(4 bytes) = 4d 0f be c0
001eh cmp edi,r9d                   ; CMP(Cmp_r32_rm32) [EDI,R9D]                          encoding(3 bytes) = 41 3b f9
0021h jae short 004dh               ; JAE(Jae_rel8_64) [4Dh:jmp64]                         encoding(2 bytes) = 73 2a
0023h movsxd rax,edi                ; MOVSXD(Movsxd_r64_rm32) [RAX,EDI]                    encoding(3 bytes) = 48 63 c7
0026h lea rbx,[r10+rax]             ; LEA(Lea_r64_m) [RBX,mem(Unknown,R10:br,DS:sr)]       encoding(4 bytes) = 49 8d 1c 02
002ah movsx rax,byte ptr [r11+rax]  ; MOVSX(Movsx_r64_rm8) [RAX,mem(8i,R11:br,DS:sr)]      encoding(5 bytes) = 49 0f be 04 03
002fh cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
0030h idiv r8d                      ; IDIV(Idiv_rm32) [R8D]                                encoding(3 bytes) = 41 f7 f8
0033h mov [rbx],dl                  ; MOV(Mov_rm8_r8) [mem(8u,RBX:br,DS:sr),DL]            encoding(2 bytes) = 88 13
0035h inc edi                       ; INC(Inc_rm32) [EDI]                                  encoding(2 bytes) = ff c7
0037h cmp edi,esi                   ; CMP(Cmp_r32_rm32) [EDI,ESI]                          encoding(2 bytes) = 3b fe
0039h jl short 001eh                ; JL(Jl_rel8_64) [1Eh:jmp64]                           encoding(2 bytes) = 7c e3
003bh mov [rcx],r10                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R10]        encoding(3 bytes) = 4c 89 11
003eh mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0042h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0045h add rsp,20h                   ; ADD(Add_rm64_imm8) [RSP,20h:imm64]                   encoding(4 bytes) = 48 83 c4 20
0049h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
004ah pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
004bh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
004ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
004dh call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC3A170h:jmp64]                encoding(5 bytes) = e8 1e a1 c3 5f
0052h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> modBytes => new byte[83]{0x57,0x56,0x53,0x48,0x83,0xEC,0x20,0x4D,0x8B,0x11,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x1A,0x8B,0x72,0x08,0x33,0xFF,0x85,0xF6,0x7E,0x21,0x4D,0x0F,0xBE,0xC0,0x41,0x3B,0xF9,0x73,0x2A,0x48,0x63,0xC7,0x49,0x8D,0x1C,0x02,0x49,0x0F,0xBE,0x04,0x03,0x99,0x41,0xF7,0xF8,0x88,0x13,0xFF,0xC7,0x3B,0xFE,0x7C,0xE3,0x4C,0x89,0x11,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x20,0x5B,0x5E,0x5F,0xC3,0xE8,0x1E,0xA1,0xC3,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<byte> mod(ReadOnlySpan<byte> lhs, byte rhs, Span<byte> dst)
; location: [7FFC7C099540h, 7FFC7C099592h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0003h sub rsp,20h                   ; SUB(Sub_rm64_imm8) [RSP,20h:imm64]                   encoding(4 bytes) = 48 83 ec 20
0007h mov r10,[r9]                  ; MOV(Mov_r64_rm64) [R10,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 4d 8b 11
000ah mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000eh mov r11,[rdx]                 ; MOV(Mov_r64_rm64) [R11,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 1a
0011h mov esi,[rdx+8]               ; MOV(Mov_r32_rm32) [ESI,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 72 08
0014h xor edi,edi                   ; XOR(Xor_r32_rm32) [EDI,EDI]                          encoding(2 bytes) = 33 ff
0016h test esi,esi                  ; TEST(Test_rm32_r32) [ESI,ESI]                        encoding(2 bytes) = 85 f6
0018h jle short 003bh               ; JLE(Jle_rel8_64) [3Bh:jmp64]                         encoding(2 bytes) = 7e 21
001ah movzx r8d,r8b                 ; MOVZX(Movzx_r32_rm8) [R8D,R8L]                       encoding(4 bytes) = 45 0f b6 c0
001eh cmp edi,r9d                   ; CMP(Cmp_r32_rm32) [EDI,R9D]                          encoding(3 bytes) = 41 3b f9
0021h jae short 004dh               ; JAE(Jae_rel8_64) [4Dh:jmp64]                         encoding(2 bytes) = 73 2a
0023h movsxd rax,edi                ; MOVSXD(Movsxd_r64_rm32) [RAX,EDI]                    encoding(3 bytes) = 48 63 c7
0026h lea rbx,[r10+rax]             ; LEA(Lea_r64_m) [RBX,mem(Unknown,R10:br,DS:sr)]       encoding(4 bytes) = 49 8d 1c 02
002ah movzx eax,byte ptr [r11+rax]  ; MOVZX(Movzx_r32_rm8) [EAX,mem(8u,R11:br,DS:sr)]      encoding(5 bytes) = 41 0f b6 04 03
002fh cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
0030h idiv r8d                      ; IDIV(Idiv_rm32) [R8D]                                encoding(3 bytes) = 41 f7 f8
0033h mov [rbx],dl                  ; MOV(Mov_rm8_r8) [mem(8u,RBX:br,DS:sr),DL]            encoding(2 bytes) = 88 13
0035h inc edi                       ; INC(Inc_rm32) [EDI]                                  encoding(2 bytes) = ff c7
0037h cmp edi,esi                   ; CMP(Cmp_r32_rm32) [EDI,ESI]                          encoding(2 bytes) = 3b fe
0039h jl short 001eh                ; JL(Jl_rel8_64) [1Eh:jmp64]                           encoding(2 bytes) = 7c e3
003bh mov [rcx],r10                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R10]        encoding(3 bytes) = 4c 89 11
003eh mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0042h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0045h add rsp,20h                   ; ADD(Add_rm64_imm8) [RSP,20h:imm64]                   encoding(4 bytes) = 48 83 c4 20
0049h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
004ah pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
004bh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
004ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
004dh call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC3A100h:jmp64]                encoding(5 bytes) = e8 ae a0 c3 5f
0052h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> modBytes => new byte[83]{0x57,0x56,0x53,0x48,0x83,0xEC,0x20,0x4D,0x8B,0x11,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x1A,0x8B,0x72,0x08,0x33,0xFF,0x85,0xF6,0x7E,0x21,0x45,0x0F,0xB6,0xC0,0x41,0x3B,0xF9,0x73,0x2A,0x48,0x63,0xC7,0x49,0x8D,0x1C,0x02,0x41,0x0F,0xB6,0x04,0x03,0x99,0x41,0xF7,0xF8,0x88,0x13,0xFF,0xC7,0x3B,0xFE,0x7C,0xE3,0x4C,0x89,0x11,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x20,0x5B,0x5E,0x5F,0xC3,0xE8,0xAE,0xA0,0xC3,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<short> mod(ReadOnlySpan<short> lhs, short rhs, Span<short> dst)
; location: [7FFC7C0995B0h, 7FFC7C099603h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0003h sub rsp,20h                   ; SUB(Sub_rm64_imm8) [RSP,20h:imm64]                   encoding(4 bytes) = 48 83 ec 20
0007h mov r10,[r9]                  ; MOV(Mov_r64_rm64) [R10,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 4d 8b 11
000ah mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000eh mov r11,[rdx]                 ; MOV(Mov_r64_rm64) [R11,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 1a
0011h mov esi,[rdx+8]               ; MOV(Mov_r32_rm32) [ESI,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 72 08
0014h xor edi,edi                   ; XOR(Xor_r32_rm32) [EDI,EDI]                          encoding(2 bytes) = 33 ff
0016h test esi,esi                  ; TEST(Test_rm32_r32) [ESI,ESI]                        encoding(2 bytes) = 85 f6
0018h jle short 003ch               ; JLE(Jle_rel8_64) [3Ch:jmp64]                         encoding(2 bytes) = 7e 22
001ah movsx r8,r8w                  ; MOVSX(Movsx_r64_rm16) [R8,R8W]                       encoding(4 bytes) = 4d 0f bf c0
001eh cmp edi,r9d                   ; CMP(Cmp_r32_rm32) [EDI,R9D]                          encoding(3 bytes) = 41 3b f9
0021h jae short 004eh               ; JAE(Jae_rel8_64) [4Eh:jmp64]                         encoding(2 bytes) = 73 2b
0023h movsxd rax,edi                ; MOVSXD(Movsxd_r64_rm32) [RAX,EDI]                    encoding(3 bytes) = 48 63 c7
0026h lea rbx,[r10+rax*2]           ; LEA(Lea_r64_m) [RBX,mem(Unknown,R10:br,DS:sr)]       encoding(4 bytes) = 49 8d 1c 42
002ah movsx rax,word ptr [r11+rax*2]; MOVSX(Movsx_r64_rm16) [RAX,mem(16i,R11:br,DS:sr)]    encoding(5 bytes) = 49 0f bf 04 43
002fh cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
0030h idiv r8d                      ; IDIV(Idiv_rm32) [R8D]                                encoding(3 bytes) = 41 f7 f8
0033h mov [rbx],dx                  ; MOV(Mov_rm16_r16) [mem(16u,RBX:br,DS:sr),DX]         encoding(3 bytes) = 66 89 13
0036h inc edi                       ; INC(Inc_rm32) [EDI]                                  encoding(2 bytes) = ff c7
0038h cmp edi,esi                   ; CMP(Cmp_r32_rm32) [EDI,ESI]                          encoding(2 bytes) = 3b fe
003ah jl short 001eh                ; JL(Jl_rel8_64) [1Eh:jmp64]                           encoding(2 bytes) = 7c e2
003ch mov [rcx],r10                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R10]        encoding(3 bytes) = 4c 89 11
003fh mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0043h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0046h add rsp,20h                   ; ADD(Add_rm64_imm8) [RSP,20h:imm64]                   encoding(4 bytes) = 48 83 c4 20
004ah pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
004bh pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
004ch pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
004dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
004eh call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC3A090h:jmp64]                encoding(5 bytes) = e8 3d a0 c3 5f
0053h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> modBytes => new byte[84]{0x57,0x56,0x53,0x48,0x83,0xEC,0x20,0x4D,0x8B,0x11,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x1A,0x8B,0x72,0x08,0x33,0xFF,0x85,0xF6,0x7E,0x22,0x4D,0x0F,0xBF,0xC0,0x41,0x3B,0xF9,0x73,0x2B,0x48,0x63,0xC7,0x49,0x8D,0x1C,0x42,0x49,0x0F,0xBF,0x04,0x43,0x99,0x41,0xF7,0xF8,0x66,0x89,0x13,0xFF,0xC7,0x3B,0xFE,0x7C,0xE2,0x4C,0x89,0x11,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x20,0x5B,0x5E,0x5F,0xC3,0xE8,0x3D,0xA0,0xC3,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<ushort> mod(ReadOnlySpan<ushort> lhs, ushort rhs, Span<ushort> dst)
; location: [7FFC7C099620h, 7FFC7C099673h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0003h sub rsp,20h                   ; SUB(Sub_rm64_imm8) [RSP,20h:imm64]                   encoding(4 bytes) = 48 83 ec 20
0007h mov r10,[r9]                  ; MOV(Mov_r64_rm64) [R10,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 4d 8b 11
000ah mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000eh mov r11,[rdx]                 ; MOV(Mov_r64_rm64) [R11,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 1a
0011h mov esi,[rdx+8]               ; MOV(Mov_r32_rm32) [ESI,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 72 08
0014h xor edi,edi                   ; XOR(Xor_r32_rm32) [EDI,EDI]                          encoding(2 bytes) = 33 ff
0016h test esi,esi                  ; TEST(Test_rm32_r32) [ESI,ESI]                        encoding(2 bytes) = 85 f6
0018h jle short 003ch               ; JLE(Jle_rel8_64) [3Ch:jmp64]                         encoding(2 bytes) = 7e 22
001ah movzx r8d,r8w                 ; MOVZX(Movzx_r32_rm16) [R8D,R8W]                      encoding(4 bytes) = 45 0f b7 c0
001eh cmp edi,r9d                   ; CMP(Cmp_r32_rm32) [EDI,R9D]                          encoding(3 bytes) = 41 3b f9
0021h jae short 004eh               ; JAE(Jae_rel8_64) [4Eh:jmp64]                         encoding(2 bytes) = 73 2b
0023h movsxd rax,edi                ; MOVSXD(Movsxd_r64_rm32) [RAX,EDI]                    encoding(3 bytes) = 48 63 c7
0026h lea rbx,[r10+rax*2]           ; LEA(Lea_r64_m) [RBX,mem(Unknown,R10:br,DS:sr)]       encoding(4 bytes) = 49 8d 1c 42
002ah movzx eax,word ptr [r11+rax*2]; MOVZX(Movzx_r32_rm16) [EAX,mem(16u,R11:br,DS:sr)]    encoding(5 bytes) = 41 0f b7 04 43
002fh cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
0030h idiv r8d                      ; IDIV(Idiv_rm32) [R8D]                                encoding(3 bytes) = 41 f7 f8
0033h mov [rbx],dx                  ; MOV(Mov_rm16_r16) [mem(16u,RBX:br,DS:sr),DX]         encoding(3 bytes) = 66 89 13
0036h inc edi                       ; INC(Inc_rm32) [EDI]                                  encoding(2 bytes) = ff c7
0038h cmp edi,esi                   ; CMP(Cmp_r32_rm32) [EDI,ESI]                          encoding(2 bytes) = 3b fe
003ah jl short 001eh                ; JL(Jl_rel8_64) [1Eh:jmp64]                           encoding(2 bytes) = 7c e2
003ch mov [rcx],r10                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R10]        encoding(3 bytes) = 4c 89 11
003fh mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0043h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0046h add rsp,20h                   ; ADD(Add_rm64_imm8) [RSP,20h:imm64]                   encoding(4 bytes) = 48 83 c4 20
004ah pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
004bh pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
004ch pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
004dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
004eh call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC3A020h:jmp64]                encoding(5 bytes) = e8 cd 9f c3 5f
0053h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> modBytes => new byte[84]{0x57,0x56,0x53,0x48,0x83,0xEC,0x20,0x4D,0x8B,0x11,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x1A,0x8B,0x72,0x08,0x33,0xFF,0x85,0xF6,0x7E,0x22,0x45,0x0F,0xB7,0xC0,0x41,0x3B,0xF9,0x73,0x2B,0x48,0x63,0xC7,0x49,0x8D,0x1C,0x42,0x41,0x0F,0xB7,0x04,0x43,0x99,0x41,0xF7,0xF8,0x66,0x89,0x13,0xFF,0xC7,0x3B,0xFE,0x7C,0xE2,0x4C,0x89,0x11,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x20,0x5B,0x5E,0x5F,0xC3,0xE8,0xCD,0x9F,0xC3,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<uint> mod(ReadOnlySpan<uint> lhs, uint rhs, Span<uint> dst)
; location: [7FFC7C099700h, 7FFC7C09974Eh]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0003h sub rsp,20h                   ; SUB(Sub_rm64_imm8) [RSP,20h:imm64]                   encoding(4 bytes) = 48 83 ec 20
0007h mov r10,[r9]                  ; MOV(Mov_r64_rm64) [R10,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 4d 8b 11
000ah mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000eh mov r11,[rdx]                 ; MOV(Mov_r64_rm64) [R11,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 1a
0011h mov esi,[rdx+8]               ; MOV(Mov_r32_rm32) [ESI,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 72 08
0014h xor edi,edi                   ; XOR(Xor_r32_rm32) [EDI,EDI]                          encoding(2 bytes) = 33 ff
0016h test esi,esi                  ; TEST(Test_rm32_r32) [ESI,ESI]                        encoding(2 bytes) = 85 f6
0018h jle short 0037h               ; JLE(Jle_rel8_64) [37h:jmp64]                         encoding(2 bytes) = 7e 1d
001ah cmp edi,r9d                   ; CMP(Cmp_r32_rm32) [EDI,R9D]                          encoding(3 bytes) = 41 3b f9
001dh jae short 0049h               ; JAE(Jae_rel8_64) [49h:jmp64]                         encoding(2 bytes) = 73 2a
001fh movsxd rax,edi                ; MOVSXD(Movsxd_r64_rm32) [RAX,EDI]                    encoding(3 bytes) = 48 63 c7
0022h lea rbx,[r10+rax*4]           ; LEA(Lea_r64_m) [RBX,mem(Unknown,R10:br,DS:sr)]       encoding(4 bytes) = 49 8d 1c 82
0026h mov eax,[r11+rax*4]           ; MOV(Mov_r32_rm32) [EAX,mem(32u,R11:br,DS:sr)]        encoding(4 bytes) = 41 8b 04 83
002ah xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
002ch div r8d                       ; DIV(Div_rm32) [R8D]                                  encoding(3 bytes) = 41 f7 f0
002fh mov [rbx],edx                 ; MOV(Mov_rm32_r32) [mem(32u,RBX:br,DS:sr),EDX]        encoding(2 bytes) = 89 13
0031h inc edi                       ; INC(Inc_rm32) [EDI]                                  encoding(2 bytes) = ff c7
0033h cmp edi,esi                   ; CMP(Cmp_r32_rm32) [EDI,ESI]                          encoding(2 bytes) = 3b fe
0035h jl short 001ah                ; JL(Jl_rel8_64) [1Ah:jmp64]                           encoding(2 bytes) = 7c e3
0037h mov [rcx],r10                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R10]        encoding(3 bytes) = 4c 89 11
003ah mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
003eh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0041h add rsp,20h                   ; ADD(Add_rm64_imm8) [RSP,20h:imm64]                   encoding(4 bytes) = 48 83 c4 20
0045h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0046h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0047h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0048h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0049h call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC39F40h:jmp64]                encoding(5 bytes) = e8 f2 9e c3 5f
004eh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> modBytes => new byte[79]{0x57,0x56,0x53,0x48,0x83,0xEC,0x20,0x4D,0x8B,0x11,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x1A,0x8B,0x72,0x08,0x33,0xFF,0x85,0xF6,0x7E,0x1D,0x41,0x3B,0xF9,0x73,0x2A,0x48,0x63,0xC7,0x49,0x8D,0x1C,0x82,0x41,0x8B,0x04,0x83,0x33,0xD2,0x41,0xF7,0xF0,0x89,0x13,0xFF,0xC7,0x3B,0xFE,0x7C,0xE3,0x4C,0x89,0x11,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x20,0x5B,0x5E,0x5F,0xC3,0xE8,0xF2,0x9E,0xC3,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<long> mod(ReadOnlySpan<long> lhs, long rhs, Span<long> dst)
; location: [7FFC7C099770h, 7FFC7C0997BFh]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0003h sub rsp,20h                   ; SUB(Sub_rm64_imm8) [RSP,20h:imm64]                   encoding(4 bytes) = 48 83 ec 20
0007h mov r10,[r9]                  ; MOV(Mov_r64_rm64) [R10,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 4d 8b 11
000ah mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000eh mov r11,[rdx]                 ; MOV(Mov_r64_rm64) [R11,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 1a
0011h mov esi,[rdx+8]               ; MOV(Mov_r32_rm32) [ESI,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 72 08
0014h xor edi,edi                   ; XOR(Xor_r32_rm32) [EDI,EDI]                          encoding(2 bytes) = 33 ff
0016h test esi,esi                  ; TEST(Test_rm32_r32) [ESI,ESI]                        encoding(2 bytes) = 85 f6
0018h jle short 0038h               ; JLE(Jle_rel8_64) [38h:jmp64]                         encoding(2 bytes) = 7e 1e
001ah cmp edi,r9d                   ; CMP(Cmp_r32_rm32) [EDI,R9D]                          encoding(3 bytes) = 41 3b f9
001dh jae short 004ah               ; JAE(Jae_rel8_64) [4Ah:jmp64]                         encoding(2 bytes) = 73 2b
001fh movsxd rax,edi                ; MOVSXD(Movsxd_r64_rm32) [RAX,EDI]                    encoding(3 bytes) = 48 63 c7
0022h lea rbx,[r10+rax*8]           ; LEA(Lea_r64_m) [RBX,mem(Unknown,R10:br,DS:sr)]       encoding(4 bytes) = 49 8d 1c c2
0026h mov rax,[r11+rax*8]           ; MOV(Mov_r64_rm64) [RAX,mem(64u,R11:br,DS:sr)]        encoding(4 bytes) = 49 8b 04 c3
002ah cqo                           ; CQO(Cqo)                                             encoding(2 bytes) = 48 99
002ch idiv r8                       ; IDIV(Idiv_rm64) [R8]                                 encoding(3 bytes) = 49 f7 f8
002fh mov [rbx],rdx                 ; MOV(Mov_rm64_r64) [mem(64u,RBX:br,DS:sr),RDX]        encoding(3 bytes) = 48 89 13
0032h inc edi                       ; INC(Inc_rm32) [EDI]                                  encoding(2 bytes) = ff c7
0034h cmp edi,esi                   ; CMP(Cmp_r32_rm32) [EDI,ESI]                          encoding(2 bytes) = 3b fe
0036h jl short 001ah                ; JL(Jl_rel8_64) [1Ah:jmp64]                           encoding(2 bytes) = 7c e2
0038h mov [rcx],r10                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R10]        encoding(3 bytes) = 4c 89 11
003bh mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
003fh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0042h add rsp,20h                   ; ADD(Add_rm64_imm8) [RSP,20h:imm64]                   encoding(4 bytes) = 48 83 c4 20
0046h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0047h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0048h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0049h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
004ah call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC39ED0h:jmp64]                encoding(5 bytes) = e8 81 9e c3 5f
004fh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> modBytes => new byte[80]{0x57,0x56,0x53,0x48,0x83,0xEC,0x20,0x4D,0x8B,0x11,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x1A,0x8B,0x72,0x08,0x33,0xFF,0x85,0xF6,0x7E,0x1E,0x41,0x3B,0xF9,0x73,0x2B,0x48,0x63,0xC7,0x49,0x8D,0x1C,0xC2,0x49,0x8B,0x04,0xC3,0x48,0x99,0x49,0xF7,0xF8,0x48,0x89,0x13,0xFF,0xC7,0x3B,0xFE,0x7C,0xE2,0x4C,0x89,0x11,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x20,0x5B,0x5E,0x5F,0xC3,0xE8,0x81,0x9E,0xC3,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<ulong> mod(ReadOnlySpan<ulong> lhs, ulong rhs, Span<ulong> dst)
; location: [7FFC7C0997E0h, 7FFC7C09982Fh]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0003h sub rsp,20h                   ; SUB(Sub_rm64_imm8) [RSP,20h:imm64]                   encoding(4 bytes) = 48 83 ec 20
0007h mov r10,[r9]                  ; MOV(Mov_r64_rm64) [R10,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 4d 8b 11
000ah mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000eh mov r11,[rdx]                 ; MOV(Mov_r64_rm64) [R11,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 1a
0011h mov esi,[rdx+8]               ; MOV(Mov_r32_rm32) [ESI,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 72 08
0014h xor edi,edi                   ; XOR(Xor_r32_rm32) [EDI,EDI]                          encoding(2 bytes) = 33 ff
0016h test esi,esi                  ; TEST(Test_rm32_r32) [ESI,ESI]                        encoding(2 bytes) = 85 f6
0018h jle short 0038h               ; JLE(Jle_rel8_64) [38h:jmp64]                         encoding(2 bytes) = 7e 1e
001ah cmp edi,r9d                   ; CMP(Cmp_r32_rm32) [EDI,R9D]                          encoding(3 bytes) = 41 3b f9
001dh jae short 004ah               ; JAE(Jae_rel8_64) [4Ah:jmp64]                         encoding(2 bytes) = 73 2b
001fh movsxd rax,edi                ; MOVSXD(Movsxd_r64_rm32) [RAX,EDI]                    encoding(3 bytes) = 48 63 c7
0022h lea rbx,[r10+rax*8]           ; LEA(Lea_r64_m) [RBX,mem(Unknown,R10:br,DS:sr)]       encoding(4 bytes) = 49 8d 1c c2
0026h mov rax,[r11+rax*8]           ; MOV(Mov_r64_rm64) [RAX,mem(64u,R11:br,DS:sr)]        encoding(4 bytes) = 49 8b 04 c3
002ah xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
002ch div r8                        ; DIV(Div_rm64) [R8]                                   encoding(3 bytes) = 49 f7 f0
002fh mov [rbx],rdx                 ; MOV(Mov_rm64_r64) [mem(64u,RBX:br,DS:sr),RDX]        encoding(3 bytes) = 48 89 13
0032h inc edi                       ; INC(Inc_rm32) [EDI]                                  encoding(2 bytes) = ff c7
0034h cmp edi,esi                   ; CMP(Cmp_r32_rm32) [EDI,ESI]                          encoding(2 bytes) = 3b fe
0036h jl short 001ah                ; JL(Jl_rel8_64) [1Ah:jmp64]                           encoding(2 bytes) = 7c e2
0038h mov [rcx],r10                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R10]        encoding(3 bytes) = 4c 89 11
003bh mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
003fh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0042h add rsp,20h                   ; ADD(Add_rm64_imm8) [RSP,20h:imm64]                   encoding(4 bytes) = 48 83 c4 20
0046h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0047h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0048h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0049h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
004ah call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC39E60h:jmp64]                encoding(5 bytes) = e8 11 9e c3 5f
004fh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> modBytes => new byte[80]{0x57,0x56,0x53,0x48,0x83,0xEC,0x20,0x4D,0x8B,0x11,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x1A,0x8B,0x72,0x08,0x33,0xFF,0x85,0xF6,0x7E,0x1E,0x41,0x3B,0xF9,0x73,0x2B,0x48,0x63,0xC7,0x49,0x8D,0x1C,0xC2,0x49,0x8B,0x04,0xC3,0x33,0xD2,0x49,0xF7,0xF0,0x48,0x89,0x13,0xFF,0xC7,0x3B,0xFE,0x7C,0xE2,0x4C,0x89,0x11,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x20,0x5B,0x5E,0x5F,0xC3,0xE8,0x11,0x9E,0xC3,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: sbyte mul(sbyte lhs, sbyte rhs)
; location: [7FFC7C099850h, 7FFC7C099864h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cl                  ; MOVSX(Movsx_r64_rm8) [RAX,CL]                        encoding(4 bytes) = 48 0f be c1
0009h movsx rdx,dl                  ; MOVSX(Movsx_r64_rm8) [RDX,DL]                        encoding(4 bytes) = 48 0f be d2
000dh imul eax,edx                  ; IMUL(Imul_r32_rm32) [EAX,EDX]                        encoding(3 bytes) = 0f af c2
0010h movsx rax,al                  ; MOVSX(Movsx_r64_rm8) [RAX,AL]                        encoding(4 bytes) = 48 0f be c0
0014h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> mulBytes => new byte[21]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBE,0xC1,0x48,0x0F,0xBE,0xD2,0x0F,0xAF,0xC2,0x48,0x0F,0xBE,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: byte mul(byte lhs, byte rhs)
; location: [7FFC7C099880h, 7FFC7C099891h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0008h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
000bh imul eax,edx                  ; IMUL(Imul_r32_rm32) [EAX,EDX]                        encoding(3 bytes) = 0f af c2
000eh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> mulBytes => new byte[18]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC1,0x0F,0xB6,0xD2,0x0F,0xAF,0xC2,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: short mul(short lhs, short rhs)
; location: [7FFC7C0998B0h, 7FFC7C0998C4h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cx                  ; MOVSX(Movsx_r64_rm16) [RAX,CX]                       encoding(4 bytes) = 48 0f bf c1
0009h movsx rdx,dx                  ; MOVSX(Movsx_r64_rm16) [RDX,DX]                       encoding(4 bytes) = 48 0f bf d2
000dh imul eax,edx                  ; IMUL(Imul_r32_rm32) [EAX,EDX]                        encoding(3 bytes) = 0f af c2
0010h movsx rax,ax                  ; MOVSX(Movsx_r64_rm16) [RAX,AX]                       encoding(4 bytes) = 48 0f bf c0
0014h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> mulBytes => new byte[21]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBF,0xC1,0x48,0x0F,0xBF,0xD2,0x0F,0xAF,0xC2,0x48,0x0F,0xBF,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ushort mul(ushort lhs, ushort rhs)
; location: [7FFC7C0998E0h, 7FFC7C0998F1h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cx                  ; MOVZX(Movzx_r32_rm16) [EAX,CX]                       encoding(3 bytes) = 0f b7 c1
0008h movzx edx,dx                  ; MOVZX(Movzx_r32_rm16) [EDX,DX]                       encoding(3 bytes) = 0f b7 d2
000bh imul eax,edx                  ; IMUL(Imul_r32_rm32) [EAX,EDX]                        encoding(3 bytes) = 0f af c2
000eh movzx eax,ax                  ; MOVZX(Movzx_r32_rm16) [EAX,AX]                       encoding(3 bytes) = 0f b7 c0
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> mulBytes => new byte[18]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB7,0xC1,0x0F,0xB7,0xD2,0x0F,0xAF,0xC2,0x0F,0xB7,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: int mul(int lhs, int rhs)
; location: [7FFC7C099910h, 7FFC7C09991Ah]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov eax,ecx                   ; MOV(Mov_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 8b c1
0007h imul eax,edx                  ; IMUL(Imul_r32_rm32) [EAX,EDX]                        encoding(3 bytes) = 0f af c2
000ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> mulBytes => new byte[11]{0x0F,0x1F,0x44,0x00,0x00,0x8B,0xC1,0x0F,0xAF,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: long mul(long lhs, long rhs)
; location: [7FFC7C099950h, 7FFC7C09995Ch]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0008h imul rax,rdx                  ; IMUL(Imul_r64_rm64) [RAX,RDX]                        encoding(4 bytes) = 48 0f af c2
000ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> mulBytes => new byte[13]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0xC1,0x48,0x0F,0xAF,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ulong mul(ulong lhs, ulong rhs)
; location: [7FFC7C099970h, 7FFC7C09997Ch]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0008h imul rax,rdx                  ; IMUL(Imul_r64_rm64) [RAX,RDX]                        encoding(4 bytes) = 48 0f af c2
000ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> mulBytes => new byte[13]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0xC1,0x48,0x0F,0xAF,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: float mul(float lhs, float rhs)
; location: [7FFC7C099990h, 7FFC7C099999h]
0000h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0003h xchg ax,ax                    ; NOP(Nopw)                                            encoding(2 bytes) = 66 90
0005h vmulss xmm0,xmm0,xmm1         ; VMULSS(VEX_Vmulss_xmm_xmm_xmmm32) [XMM0,XMM0,XMM1]   encoding(VEX, 4 bytes) = c5 fa 59 c1
0009h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> mulBytes => new byte[10]{0xC5,0xF8,0x77,0x66,0x90,0xC5,0xFA,0x59,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: double mul(double lhs, double rhs)
; location: [7FFC7C0999B0h, 7FFC7C0999B9h]
0000h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0003h xchg ax,ax                    ; NOP(Nopw)                                            encoding(2 bytes) = 66 90
0005h vmulsd xmm0,xmm0,xmm1         ; VMULSD(VEX_Vmulsd_xmm_xmm_xmmm64) [XMM0,XMM0,XMM1]   encoding(VEX, 4 bytes) = c5 fb 59 c1
0009h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> mulBytes => new byte[10]{0xC5,0xF8,0x77,0x66,0x90,0xC5,0xFB,0x59,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref sbyte mul(ref sbyte lhs, sbyte rhs)
; location: [7FFC7C0999D0h, 7FFC7C0999E5h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,byte ptr [rcx]      ; MOVSX(Movsx_r64_rm8) [RAX,mem(8i,RCX:br,DS:sr)]      encoding(4 bytes) = 48 0f be 01
0009h movsx rdx,dl                  ; MOVSX(Movsx_r64_rm8) [RDX,DL]                        encoding(4 bytes) = 48 0f be d2
000dh imul eax,edx                  ; IMUL(Imul_r32_rm32) [EAX,EDX]                        encoding(3 bytes) = 0f af c2
0010h mov [rcx],al                  ; MOV(Mov_rm8_r8) [mem(8u,RCX:br,DS:sr),AL]            encoding(2 bytes) = 88 01
0012h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0015h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> mulBytes => new byte[22]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBE,0x01,0x48,0x0F,0xBE,0xD2,0x0F,0xAF,0xC2,0x88,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref byte mul(ref byte lhs, byte rhs)
; location: [7FFC7C099A00h, 7FFC7C099A13h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,byte ptr [rcx]      ; MOVZX(Movzx_r32_rm8) [EAX,mem(8u,RCX:br,DS:sr)]      encoding(3 bytes) = 0f b6 01
0008h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
000bh imul eax,edx                  ; IMUL(Imul_r32_rm32) [EAX,EDX]                        encoding(3 bytes) = 0f af c2
000eh mov [rcx],al                  ; MOV(Mov_rm8_r8) [mem(8u,RCX:br,DS:sr),AL]            encoding(2 bytes) = 88 01
0010h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> mulBytes => new byte[20]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0x01,0x0F,0xB6,0xD2,0x0F,0xAF,0xC2,0x88,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref short mul(ref short lhs, short rhs)
; location: [7FFC7C099A30h, 7FFC7C099A46h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,word ptr [rcx]      ; MOVSX(Movsx_r64_rm16) [RAX,mem(16i,RCX:br,DS:sr)]    encoding(4 bytes) = 48 0f bf 01
0009h movsx rdx,dx                  ; MOVSX(Movsx_r64_rm16) [RDX,DX]                       encoding(4 bytes) = 48 0f bf d2
000dh imul eax,edx                  ; IMUL(Imul_r32_rm32) [EAX,EDX]                        encoding(3 bytes) = 0f af c2
0010h mov [rcx],ax                  ; MOV(Mov_rm16_r16) [mem(16u,RCX:br,DS:sr),AX]         encoding(3 bytes) = 66 89 01
0013h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0016h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> mulBytes => new byte[23]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBF,0x01,0x48,0x0F,0xBF,0xD2,0x0F,0xAF,0xC2,0x66,0x89,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref int mul(ref int lhs, int rhs)
; location: [7FFC7C099A90h, 7FFC7C099A9Dh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h imul edx,[rcx]                ; IMUL(Imul_r32_rm32) [EDX,mem(32i,RCX:br,DS:sr)]      encoding(3 bytes) = 0f af 11
0008h mov [rcx],edx                 ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(2 bytes) = 89 11
000ah mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> mulBytes => new byte[14]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xAF,0x11,0x89,0x11,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref long mul(ref long lhs, long rhs)
; location: [7FFC7C099AD0h, 7FFC7C099ADFh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h imul rdx,[rcx]                ; IMUL(Imul_r64_rm64) [RDX,mem(64i,RCX:br,DS:sr)]      encoding(4 bytes) = 48 0f af 11
0009h mov [rcx],rdx                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RDX]        encoding(3 bytes) = 48 89 11
000ch mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> mulBytes => new byte[16]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xAF,0x11,0x48,0x89,0x11,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<uint> Mul(ReadOnlySpan<uint> lhs, ReadOnlySpan<uint> rhs, Span<uint> dst)
; location: [7FFC7C09A070h, 7FFC7C09A147h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000dh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
0011h mov r10,[r8]                  ; MOV(Mov_r64_rm64) [R10,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 4d 8b 10
0014h mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0018h mov r11,[rdx]                 ; MOV(Mov_r64_rm64) [R11,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 1a
001bh mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
001eh mov esi,3Ch                   ; MOV(Mov_r32_imm32) [ESI,3ch:imm32]                   encoding(5 bytes) = be 3c 00 00 00
0023h mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0028h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
002ah mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
002dh cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0030h jne short 0079h               ; JNE(Jne_rel8_64) [79h:jmp64]                         encoding(2 bytes) = 75 47
0032h xor ebx,ebx                   ; XOR(Xor_r32_rm32) [EBX,EBX]                          encoding(2 bytes) = 33 db
0034h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0036h jle short 0064h               ; JLE(Jle_rel8_64) [64h:jmp64]                         encoding(2 bytes) = 7e 2c
0038h cmp ebx,r9d                   ; CMP(Cmp_r32_rm32) [EBX,R9D]                          encoding(3 bytes) = 41 3b d9
003bh jae near ptr 00d2h            ; JAE(Jae_rel32_64) [D2h:jmp64]                        encoding(6 bytes) = 0f 83 91 00 00 00
0041h movsxd rbp,ebx                ; MOVSXD(Movsxd_r64_rm32) [RBP,EBX]                    encoding(3 bytes) = 48 63 eb
0044h lea rdi,[rax+rbp*4]           ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c a8
0048h mov esi,[r11+rbp*4]           ; MOV(Mov_r32_rm32) [ESI,mem(32u,R11:br,DS:sr)]        encoding(4 bytes) = 41 8b 34 ab
004ch cmp ebx,r8d                   ; CMP(Cmp_r32_rm32) [EBX,R8D]                          encoding(3 bytes) = 41 3b d8
004fh jae near ptr 00d2h            ; JAE(Jae_rel32_64) [D2h:jmp64]                        encoding(6 bytes) = 0f 83 7d 00 00 00
0055h mov ebp,[r10+rbp*4]           ; MOV(Mov_r32_rm32) [EBP,mem(32u,R10:br,DS:sr)]        encoding(4 bytes) = 41 8b 2c aa
0059h imul esi,ebp                  ; IMUL(Imul_r32_rm32) [ESI,EBP]                        encoding(3 bytes) = 0f af f5
005ch mov [rdi],esi                 ; MOV(Mov_rm32_r32) [mem(32u,RDI:br,DS:sr),ESI]        encoding(2 bytes) = 89 37
005eh inc ebx                       ; INC(Inc_rm32) [EBX]                                  encoding(2 bytes) = ff c3
0060h cmp ebx,edx                   ; CMP(Cmp_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 3b da
0062h jl short 0038h                ; JL(Jl_rel8_64) [38h:jmp64]                           encoding(2 bytes) = 7c d4
0064h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0067h mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
006bh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
006eh add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0072h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0073h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0074h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0075h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0076h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0078h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0079h mov ecx,0DD1h                 ; MOV(Mov_r32_imm32) [ECX,dd1h:imm32]                  encoding(5 bytes) = b9 d1 0d 00 00
007eh mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
0088h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC39DB0h:jmp64]                encoding(5 bytes) = e8 23 9d c3 5f
008dh mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0090h mov ecx,0DD9h                 ; MOV(Mov_r32_imm32) [ECX,dd9h:imm32]                  encoding(5 bytes) = b9 d9 0d 00 00
0095h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
009fh call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC39DB0h:jmp64]                encoding(5 bytes) = e8 0c 9d c3 5f
00a4h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00a7h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
00ach mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00afh mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00b3h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00b6h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00b8h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00bah mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00bfh mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00c4h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFF3FA8h:jmp64]        encoding(5 bytes) = e8 df 3e ff ff
00c9h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00cch call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAEF820h:jmp64]                encoding(5 bytes) = e8 4f f7 ae 5f
00d1h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00d2h call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC395D0h:jmp64]                encoding(5 bytes) = e8 f9 94 c3 5f
00d7h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> MulBytes => new byte[216]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4D,0x8B,0x10,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x1A,0x8B,0x52,0x08,0xBE,0x3C,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x47,0x33,0xDB,0x85,0xD2,0x7E,0x2C,0x41,0x3B,0xD9,0x0F,0x83,0x91,0x00,0x00,0x00,0x48,0x63,0xEB,0x48,0x8D,0x3C,0xA8,0x41,0x8B,0x34,0xAB,0x41,0x3B,0xD8,0x0F,0x83,0x7D,0x00,0x00,0x00,0x41,0x8B,0x2C,0xAA,0x0F,0xAF,0xF5,0x89,0x37,0xFF,0xC3,0x3B,0xDA,0x7C,0xD4,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0xD1,0x0D,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x23,0x9D,0xC3,0x5F,0x4C,0x8B,0xF0,0xB9,0xD9,0x0D,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x0C,0x9D,0xC3,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0xDF,0x3E,0xFF,0xFF,0x48,0x8B,0xC8,0xE8,0x4F,0xF7,0xAE,0x5F,0xCC,0xE8,0xF9,0x94,0xC3,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<long> Mul(ReadOnlySpan<long> lhs, ReadOnlySpan<long> rhs, Span<long> dst)
; location: [7FFC7C09A170h, 7FFC7C09A249h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000dh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
0011h mov r10,[r8]                  ; MOV(Mov_r64_rm64) [R10,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 4d 8b 10
0014h mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0018h mov r11,[rdx]                 ; MOV(Mov_r64_rm64) [R11,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 1a
001bh mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
001eh mov esi,44h                   ; MOV(Mov_r32_imm32) [ESI,44h:imm32]                   encoding(5 bytes) = be 44 00 00 00
0023h mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0028h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
002ah mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
002dh cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0030h jne short 007bh               ; JNE(Jne_rel8_64) [7Bh:jmp64]                         encoding(2 bytes) = 75 49
0032h xor ebx,ebx                   ; XOR(Xor_r32_rm32) [EBX,EBX]                          encoding(2 bytes) = 33 db
0034h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0036h jle short 0066h               ; JLE(Jle_rel8_64) [66h:jmp64]                         encoding(2 bytes) = 7e 2e
0038h cmp ebx,r9d                   ; CMP(Cmp_r32_rm32) [EBX,R9D]                          encoding(3 bytes) = 41 3b d9
003bh jae near ptr 00d4h            ; JAE(Jae_rel32_64) [D4h:jmp64]                        encoding(6 bytes) = 0f 83 93 00 00 00
0041h movsxd rbp,ebx                ; MOVSXD(Movsxd_r64_rm32) [RBP,EBX]                    encoding(3 bytes) = 48 63 eb
0044h lea rdi,[rax+rbp*8]           ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c e8
0048h mov rsi,[r11+rbp*8]           ; MOV(Mov_r64_rm64) [RSI,mem(64u,R11:br,DS:sr)]        encoding(4 bytes) = 49 8b 34 eb
004ch cmp ebx,r8d                   ; CMP(Cmp_r32_rm32) [EBX,R8D]                          encoding(3 bytes) = 41 3b d8
004fh jae near ptr 00d4h            ; JAE(Jae_rel32_64) [D4h:jmp64]                        encoding(6 bytes) = 0f 83 7f 00 00 00
0055h mov rbp,[r10+rbp*8]           ; MOV(Mov_r64_rm64) [RBP,mem(64u,R10:br,DS:sr)]        encoding(4 bytes) = 49 8b 2c ea
0059h imul rsi,rbp                  ; IMUL(Imul_r64_rm64) [RSI,RBP]                        encoding(4 bytes) = 48 0f af f5
005dh mov [rdi],rsi                 ; MOV(Mov_rm64_r64) [mem(64u,RDI:br,DS:sr),RSI]        encoding(3 bytes) = 48 89 37
0060h inc ebx                       ; INC(Inc_rm32) [EBX]                                  encoding(2 bytes) = ff c3
0062h cmp ebx,edx                   ; CMP(Cmp_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 3b da
0064h jl short 0038h                ; JL(Jl_rel8_64) [38h:jmp64]                           encoding(2 bytes) = 7c d2
0066h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0069h mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
006dh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0070h add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0074h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0075h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0076h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0077h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0078h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
007ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
007bh mov ecx,0DD1h                 ; MOV(Mov_r32_imm32) [ECX,dd1h:imm32]                  encoding(5 bytes) = b9 d1 0d 00 00
0080h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
008ah call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC39CB0h:jmp64]                encoding(5 bytes) = e8 21 9c c3 5f
008fh mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0092h mov ecx,0DD9h                 ; MOV(Mov_r32_imm32) [ECX,dd9h:imm32]                  encoding(5 bytes) = b9 d9 0d 00 00
0097h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
00a1h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC39CB0h:jmp64]                encoding(5 bytes) = e8 0a 9c c3 5f
00a6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00a9h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
00aeh mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00b1h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00b5h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00b8h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00bah mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00bch mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00c1h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00c6h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFF3EA8h:jmp64]        encoding(5 bytes) = e8 dd 3d ff ff
00cbh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00ceh call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAEF720h:jmp64]                encoding(5 bytes) = e8 4d f6 ae 5f
00d3h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00d4h call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC394D0h:jmp64]                encoding(5 bytes) = e8 f7 93 c3 5f
00d9h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> MulBytes => new byte[218]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4D,0x8B,0x10,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x1A,0x8B,0x52,0x08,0xBE,0x44,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x49,0x33,0xDB,0x85,0xD2,0x7E,0x2E,0x41,0x3B,0xD9,0x0F,0x83,0x93,0x00,0x00,0x00,0x48,0x63,0xEB,0x48,0x8D,0x3C,0xE8,0x49,0x8B,0x34,0xEB,0x41,0x3B,0xD8,0x0F,0x83,0x7F,0x00,0x00,0x00,0x49,0x8B,0x2C,0xEA,0x48,0x0F,0xAF,0xF5,0x48,0x89,0x37,0xFF,0xC3,0x3B,0xDA,0x7C,0xD2,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0xD1,0x0D,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x21,0x9C,0xC3,0x5F,0x4C,0x8B,0xF0,0xB9,0xD9,0x0D,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x0A,0x9C,0xC3,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0xDD,0x3D,0xFF,0xFF,0x48,0x8B,0xC8,0xE8,0x4D,0xF6,0xAE,0x5F,0xCC,0xE8,0xF7,0x93,0xC3,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<ulong> Mul(Span<ulong> lhs, ReadOnlySpan<ulong> rhs)
; location: [7FFC7C09AC00h, 7FFC7C09ACC7h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0014h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0017h mov esi,9Ch                   ; MOV(Mov_r32_imm32) [ESI,9ch:imm32]                   encoding(5 bytes) = be 9c 00 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
0023h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0026h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0029h jne short 0069h               ; JNE(Jne_rel8_64) [69h:jmp64]                         encoding(2 bytes) = 75 3e
002bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
002eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0030h jle short 0055h               ; JLE(Jle_rel8_64) [55h:jmp64]                         encoding(2 bytes) = 7e 23
0032h movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
0035h lea rbx,[r9+r11*8]            ; LEA(Lea_r64_m) [RBX,mem(Unknown,R9:br,DS:sr)]        encoding(4 bytes) = 4b 8d 1c d9
0039h mov rbp,[rbx]                 ; MOV(Mov_r64_rm64) [RBP,mem(64u,RBX:br,DS:sr)]        encoding(3 bytes) = 48 8b 2b
003ch cmp r10d,r8d                  ; CMP(Cmp_r32_rm32) [R10D,R8D]                         encoding(3 bytes) = 45 3b d0
003fh jae near ptr 00c2h            ; JAE(Jae_rel32_64) [C2h:jmp64]                        encoding(6 bytes) = 0f 83 7d 00 00 00
0045h imul rbp,[rax+r11*8]          ; IMUL(Imul_r64_rm64) [RBP,mem(64i,RAX:br,DS:sr)]      encoding(5 bytes) = 4a 0f af 2c d8
004ah mov [rbx],rbp                 ; MOV(Mov_rm64_r64) [mem(64u,RBX:br,DS:sr),RBP]        encoding(3 bytes) = 48 89 2b
004dh inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
0050h cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
0053h jl short 0032h                ; JL(Jl_rel8_64) [32h:jmp64]                           encoding(2 bytes) = 7c dd
0055h mov [rcx],r9                  ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R9]         encoding(3 bytes) = 4c 89 09
0058h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
005bh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
005eh add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0062h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0063h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0064h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0065h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0066h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0068h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0069h mov ecx,0DD1h                 ; MOV(Mov_r32_imm32) [ECX,dd1h:imm32]                  encoding(5 bytes) = b9 d1 0d 00 00
006eh mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
0078h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC39220h:jmp64]                encoding(5 bytes) = e8 a3 91 c3 5f
007dh mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0080h mov ecx,0DD9h                 ; MOV(Mov_r32_imm32) [ECX,dd9h:imm32]                  encoding(5 bytes) = b9 d9 0d 00 00
0085h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
008fh call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC39220h:jmp64]                encoding(5 bytes) = e8 8c 91 c3 5f
0094h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
0097h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
009ch mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
009fh mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00a3h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00a6h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00a8h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00aah mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00afh mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b4h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFF3418h:jmp64]        encoding(5 bytes) = e8 5f 33 ff ff
00b9h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00bch call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAEEC90h:jmp64]                encoding(5 bytes) = e8 cf eb ae 5f
00c1h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00c2h call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC38A40h:jmp64]                encoding(5 bytes) = e8 79 89 c3 5f
00c7h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> MulBytes => new byte[200]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x00,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0xBE,0x9C,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x3E,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x23,0x4D,0x63,0xDA,0x4B,0x8D,0x1C,0xD9,0x48,0x8B,0x2B,0x45,0x3B,0xD0,0x0F,0x83,0x7D,0x00,0x00,0x00,0x4A,0x0F,0xAF,0x2C,0xD8,0x48,0x89,0x2B,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xDD,0x4C,0x89,0x09,0x89,0x51,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0xD1,0x0D,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xA3,0x91,0xC3,0x5F,0x4C,0x8B,0xF0,0xB9,0xD9,0x0D,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x8C,0x91,0xC3,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x5F,0x33,0xFF,0xFF,0x48,0x8B,0xC8,0xE8,0xCF,0xEB,0xAE,0x5F,0xCC,0xE8,0x79,0x89,0xC3,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref byte negate(ref byte src)
; location: [7FFC7C09B050h, 7FFC7C09B061h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,byte ptr [rcx]      ; MOVZX(Movzx_r32_rm8) [EAX,mem(8u,RCX:br,DS:sr)]      encoding(3 bytes) = 0f b6 01
0008h not eax                       ; NOT(Not_rm32) [EAX]                                  encoding(2 bytes) = f7 d0
000ah inc eax                       ; INC(Inc_rm32) [EAX]                                  encoding(2 bytes) = ff c0
000ch mov [rcx],al                  ; MOV(Mov_rm8_r8) [mem(8u,RCX:br,DS:sr),AL]            encoding(2 bytes) = 88 01
000eh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> negateBytes => new byte[18]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0x01,0xF7,0xD0,0xFF,0xC0,0x88,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref int negate(ref int src)
; location: [7FFC7C09B0D0h, 7FFC7C09B0DAh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h neg dword ptr [rcx]           ; NEG(Neg_rm32) [mem(32i,RCX:br,DS:sr)]                encoding(2 bytes) = f7 19
0007h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> negateBytes => new byte[11]{0x0F,0x1F,0x44,0x00,0x00,0xF7,0x19,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref uint negate(ref uint src)
; location: [7FFC7C09B0F0h, 7FFC7C09B100h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov eax,[rcx]                 ; MOV(Mov_r32_rm32) [EAX,mem(32u,RCX:br,DS:sr)]        encoding(2 bytes) = 8b 01
0007h not eax                       ; NOT(Not_rm32) [EAX]                                  encoding(2 bytes) = f7 d0
0009h inc eax                       ; INC(Inc_rm32) [EAX]                                  encoding(2 bytes) = ff c0
000bh mov [rcx],eax                 ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EAX]        encoding(2 bytes) = 89 01
000dh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0010h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> negateBytes => new byte[17]{0x0F,0x1F,0x44,0x00,0x00,0x8B,0x01,0xF7,0xD0,0xFF,0xC0,0x89,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref long negate(ref long src)
; location: [7FFC7C09B120h, 7FFC7C09B12Bh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h neg qword ptr [rcx]           ; NEG(Neg_rm64) [mem(64i,RCX:br,DS:sr)]                encoding(3 bytes) = 48 f7 19
0008h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> negateBytes => new byte[12]{0x0F,0x1F,0x44,0x00,0x00,0x48,0xF7,0x19,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref float negate(ref float src)
; location: [7FFC7C09B170h, 7FFC7C09B18Ch]
0000h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0003h xchg ax,ax                    ; NOP(Nopw)                                            encoding(2 bytes) = 66 90
0005h vmovss xmm0,dword ptr [rcx]   ; VMOVSS(VEX_Vmovss_xmm_m32) [XMM0,mem(Float32,RCX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 10 01
0009h vmovss xmm1,dword ptr [7FFC7C09B198h]; VMOVSS(VEX_Vmovss_xmm_m32) [XMM1,mem(Float32,RIP:br,DS:sr)] encoding(VEX, 8 bytes) = c5 fa 10 0d 17 00 00 00
0011h vxorps xmm0,xmm0,xmm1         ; VXORPS(VEX_Vxorps_xmm_xmm_xmmm128) [XMM0,XMM0,XMM1]  encoding(VEX, 4 bytes) = c5 f8 57 c1
0015h vmovss dword ptr [rcx],xmm0   ; VMOVSS(VEX_Vmovss_m32_xmm) [mem(Float32,RCX:br,DS:sr),XMM0] encoding(VEX, 4 bytes) = c5 fa 11 01
0019h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
001ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> negateBytes => new byte[29]{0xC5,0xF8,0x77,0x66,0x90,0xC5,0xFA,0x10,0x01,0xC5,0xFA,0x10,0x0D,0x17,0x00,0x00,0x00,0xC5,0xF8,0x57,0xC1,0xC5,0xFA,0x11,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref double negate(ref double src)
; location: [7FFC7C09B1B0h, 7FFC7C09B1CCh]
0000h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0003h xchg ax,ax                    ; NOP(Nopw)                                            encoding(2 bytes) = 66 90
0005h vmovsd xmm0,qword ptr [rcx]   ; VMOVSD(VEX_Vmovsd_xmm_m64) [XMM0,mem(Float64,RCX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fb 10 01
0009h vmovsd xmm1,qword ptr [7FFC7C09B1D8h]; VMOVSD(VEX_Vmovsd_xmm_m64) [XMM1,mem(Float64,RIP:br,DS:sr)] encoding(VEX, 8 bytes) = c5 fb 10 0d 17 00 00 00
0011h vxorps xmm0,xmm0,xmm1         ; VXORPS(VEX_Vxorps_xmm_xmm_xmmm128) [XMM0,XMM0,XMM1]  encoding(VEX, 4 bytes) = c5 f8 57 c1
0015h vmovsd qword ptr [rcx],xmm0   ; VMOVSD(VEX_Vmovsd_m64_xmm) [mem(Float64,RCX:br,DS:sr),XMM0] encoding(VEX, 4 bytes) = c5 fb 11 01
0019h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
001ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> negateBytes => new byte[29]{0xC5,0xF8,0x77,0x66,0x90,0xC5,0xFB,0x10,0x01,0xC5,0xFB,0x10,0x0D,0x17,0x00,0x00,0x00,0xC5,0xF8,0x57,0xC1,0xC5,0xFB,0x11,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool neq(byte lhs, byte rhs)
; location: [7FFC7C09B220h, 7FFC7C09B233h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0008h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
000bh cmp eax,edx                   ; CMP(Cmp_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 3b c2
000dh setne al                      ; SETNE(Setne_rm8) [AL]                                encoding(3 bytes) = 0f 95 c0
0010h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> neqBytes => new byte[20]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC1,0x0F,0xB6,0xD2,0x3B,0xC2,0x0F,0x95,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool neq(short lhs, short rhs)
; location: [7FFC7C09B250h, 7FFC7C09B265h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cx                  ; MOVSX(Movsx_r64_rm16) [RAX,CX]                       encoding(4 bytes) = 48 0f bf c1
0009h movsx rdx,dx                  ; MOVSX(Movsx_r64_rm16) [RDX,DX]                       encoding(4 bytes) = 48 0f bf d2
000dh cmp eax,edx                   ; CMP(Cmp_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 3b c2
000fh setne al                      ; SETNE(Setne_rm8) [AL]                                encoding(3 bytes) = 0f 95 c0
0012h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0015h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> neqBytes => new byte[22]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBF,0xC1,0x48,0x0F,0xBF,0xD2,0x3B,0xC2,0x0F,0x95,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool neq(ushort lhs, ushort rhs)
; location: [7FFC7C09B280h, 7FFC7C09B293h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cx                  ; MOVZX(Movzx_r32_rm16) [EAX,CX]                       encoding(3 bytes) = 0f b7 c1
0008h movzx edx,dx                  ; MOVZX(Movzx_r32_rm16) [EDX,DX]                       encoding(3 bytes) = 0f b7 d2
000bh cmp eax,edx                   ; CMP(Cmp_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 3b c2
000dh setne al                      ; SETNE(Setne_rm8) [AL]                                encoding(3 bytes) = 0f 95 c0
0010h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> neqBytes => new byte[20]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB7,0xC1,0x0F,0xB7,0xD2,0x3B,0xC2,0x0F,0x95,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool neq(int lhs, int rhs)
; location: [7FFC7C09B2B0h, 7FFC7C09B2BDh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h cmp ecx,edx                   ; CMP(Cmp_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 3b ca
0007h setne al                      ; SETNE(Setne_rm8) [AL]                                encoding(3 bytes) = 0f 95 c0
000ah movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> neqBytes => new byte[14]{0x0F,0x1F,0x44,0x00,0x00,0x3B,0xCA,0x0F,0x95,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool neq(uint lhs, uint rhs)
; location: [7FFC7C09B2D0h, 7FFC7C09B2DDh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h cmp ecx,edx                   ; CMP(Cmp_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 3b ca
0007h setne al                      ; SETNE(Setne_rm8) [AL]                                encoding(3 bytes) = 0f 95 c0
000ah movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> neqBytes => new byte[14]{0x0F,0x1F,0x44,0x00,0x00,0x3B,0xCA,0x0F,0x95,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool neq(long lhs, long rhs)
; location: [7FFC7C09B2F0h, 7FFC7C09B2FEh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h cmp rcx,rdx                   ; CMP(Cmp_r64_rm64) [RCX,RDX]                          encoding(3 bytes) = 48 3b ca
0008h setne al                      ; SETNE(Setne_rm8) [AL]                                encoding(3 bytes) = 0f 95 c0
000bh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> neqBytes => new byte[15]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x3B,0xCA,0x0F,0x95,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool neq(float lhs, float rhs)
; location: [7FFC7C09B330h, 7FFC7C09B344h]
0000h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0003h xchg ax,ax                    ; NOP(Nopw)                                            encoding(2 bytes) = 66 90
0005h vucomiss xmm0,xmm1            ; VUCOMISS(VEX_Vucomiss_xmm_xmmm32) [XMM0,XMM1]        encoding(VEX, 4 bytes) = c5 f8 2e c1
0009h setp al                       ; SETP(Setp_rm8) [AL]                                  encoding(3 bytes) = 0f 9a c0
000ch jp short 0011h                ; JP(Jp_rel8_64) [11h:jmp64]                           encoding(2 bytes) = 7a 03
000eh setne al                      ; SETNE(Setne_rm8) [AL]                                encoding(3 bytes) = 0f 95 c0
0011h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0014h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> neqBytes => new byte[21]{0xC5,0xF8,0x77,0x66,0x90,0xC5,0xF8,0x2E,0xC1,0x0F,0x9A,0xC0,0x7A,0x03,0x0F,0x95,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool neq(in byte lhs, in byte rhs)
; location: [7FFC7C09B3C0h, 7FFC7C09B3D0h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,byte ptr [rcx]      ; MOVZX(Movzx_r32_rm8) [EAX,mem(8u,RCX:br,DS:sr)]      encoding(3 bytes) = 0f b6 01
0008h cmp al,[rdx]                  ; CMP(Cmp_r8_rm8) [AL,mem(8u,RDX:br,DS:sr)]            encoding(2 bytes) = 3a 02
000ah setne al                      ; SETNE(Setne_rm8) [AL]                                encoding(3 bytes) = 0f 95 c0
000dh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0010h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> neqBytes => new byte[17]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0x01,0x3A,0x02,0x0F,0x95,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: int ipow(int b, uint exp)
; location: [7FFC7C09B3F0h, 7FFC7C09B417h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0007h jne short 000fh               ; JNE(Jne_rel8_64) [Fh:jmp64]                          encoding(2 bytes) = 75 06
0009h mov eax,1                     ; MOV(Mov_r32_imm32) [EAX,1h:imm32]                    encoding(5 bytes) = b8 01 00 00 00
000eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
000fh mov eax,1                     ; MOV(Mov_r32_imm32) [EAX,1h:imm32]                    encoding(5 bytes) = b8 01 00 00 00
0014h test dl,1                     ; TEST(Test_rm8_imm8) [DL,1h:imm8]                     encoding(3 bytes) = f6 c2 01
0017h je short 001ch                ; JE(Je_rel8_64) [1Ch:jmp64]                           encoding(2 bytes) = 74 03
0019h imul eax,ecx                  ; IMUL(Imul_r32_rm32) [EAX,ECX]                        encoding(3 bytes) = 0f af c1
001ch shr edx,1                     ; SHR(Shr_rm32_1) [EDX,1h:imm8]                        encoding(2 bytes) = d1 ea
001eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0020h je short 0027h                ; JE(Je_rel8_64) [27h:jmp64]                           encoding(2 bytes) = 74 05
0022h imul ecx,ecx                  ; IMUL(Imul_r32_rm32) [ECX,ECX]                        encoding(3 bytes) = 0f af c9
0025h jmp short 0014h               ; JMP(Jmp_rel8_64) [14h:jmp64]                         encoding(2 bytes) = eb ed
0027h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> ipowBytes => new byte[40]{0x0F,0x1F,0x44,0x00,0x00,0x85,0xD2,0x75,0x06,0xB8,0x01,0x00,0x00,0x00,0xC3,0xB8,0x01,0x00,0x00,0x00,0xF6,0xC2,0x01,0x74,0x03,0x0F,0xAF,0xC1,0xD1,0xEA,0x85,0xD2,0x74,0x05,0x0F,0xAF,0xC9,0xEB,0xED,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: long ipow(long b, uint exp)
; location: [7FFC7C09B470h, 7FFC7C09B499h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0007h jne short 000fh               ; JNE(Jne_rel8_64) [Fh:jmp64]                          encoding(2 bytes) = 75 06
0009h mov eax,1                     ; MOV(Mov_r32_imm32) [EAX,1h:imm32]                    encoding(5 bytes) = b8 01 00 00 00
000eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
000fh mov eax,1                     ; MOV(Mov_r32_imm32) [EAX,1h:imm32]                    encoding(5 bytes) = b8 01 00 00 00
0014h test dl,1                     ; TEST(Test_rm8_imm8) [DL,1h:imm8]                     encoding(3 bytes) = f6 c2 01
0017h je short 001dh                ; JE(Je_rel8_64) [1Dh:jmp64]                           encoding(2 bytes) = 74 04
0019h imul rax,rcx                  ; IMUL(Imul_r64_rm64) [RAX,RCX]                        encoding(4 bytes) = 48 0f af c1
001dh shr edx,1                     ; SHR(Shr_rm32_1) [EDX,1h:imm8]                        encoding(2 bytes) = d1 ea
001fh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0021h je short 0029h                ; JE(Je_rel8_64) [29h:jmp64]                           encoding(2 bytes) = 74 06
0023h imul rcx,rcx                  ; IMUL(Imul_r64_rm64) [RCX,RCX]                        encoding(4 bytes) = 48 0f af c9
0027h jmp short 0014h               ; JMP(Jmp_rel8_64) [14h:jmp64]                         encoding(2 bytes) = eb eb
0029h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> ipowBytes => new byte[42]{0x0F,0x1F,0x44,0x00,0x00,0x85,0xD2,0x75,0x06,0xB8,0x01,0x00,0x00,0x00,0xC3,0xB8,0x01,0x00,0x00,0x00,0xF6,0xC2,0x01,0x74,0x04,0x48,0x0F,0xAF,0xC1,0xD1,0xEA,0x85,0xD2,0x74,0x06,0x48,0x0F,0xAF,0xC9,0xEB,0xEB,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref sbyte ipow(ref sbyte src, uint exp)
; location: [7FFC7C09B4F0h, 7FFC7C09B50Bh]
0000h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0001h sub rsp,20h                   ; SUB(Sub_rm64_imm8) [RSP,20h:imm64]                   encoding(4 bytes) = 48 83 ec 20
0005h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0008h movsx rcx,byte ptr [rsi]      ; MOVSX(Movsx_r64_rm8) [RCX,mem(8i,RSI:br,DS:sr)]      encoding(4 bytes) = 48 0f be 0e
000ch call 7FFC7C085C68h            ; CALL(Call_rel32_64) [FFFFFFFFFFFEA778h:jmp64]        encoding(5 bytes) = e8 67 a7 fe ff
0011h mov [rsi],al                  ; MOV(Mov_rm8_r8) [mem(8u,RSI:br,DS:sr),AL]            encoding(2 bytes) = 88 06
0013h mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
0016h add rsp,20h                   ; ADD(Add_rm64_imm8) [RSP,20h:imm64]                   encoding(4 bytes) = 48 83 c4 20
001ah pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
001bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> ipowBytes => new byte[28]{0x56,0x48,0x83,0xEC,0x20,0x48,0x8B,0xF1,0x48,0x0F,0xBE,0x0E,0xE8,0x67,0xA7,0xFE,0xFF,0x88,0x06,0x48,0x8B,0xC6,0x48,0x83,0xC4,0x20,0x5E,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref byte ipow(ref byte src, uint exp)
; location: [7FFC7C09B520h, 7FFC7C09B53Ah]
0000h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0001h sub rsp,20h                   ; SUB(Sub_rm64_imm8) [RSP,20h:imm64]                   encoding(4 bytes) = 48 83 ec 20
0005h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0008h movzx ecx,byte ptr [rsi]      ; MOVZX(Movzx_r32_rm8) [ECX,mem(8u,RSI:br,DS:sr)]      encoding(3 bytes) = 0f b6 0e
000bh call 7FFC7C085C70h            ; CALL(Call_rel32_64) [FFFFFFFFFFFEA750h:jmp64]        encoding(5 bytes) = e8 40 a7 fe ff
0010h mov [rsi],al                  ; MOV(Mov_rm8_r8) [mem(8u,RSI:br,DS:sr),AL]            encoding(2 bytes) = 88 06
0012h mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
0015h add rsp,20h                   ; ADD(Add_rm64_imm8) [RSP,20h:imm64]                   encoding(4 bytes) = 48 83 c4 20
0019h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
001ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> ipowBytes => new byte[27]{0x56,0x48,0x83,0xEC,0x20,0x48,0x8B,0xF1,0x0F,0xB6,0x0E,0xE8,0x40,0xA7,0xFE,0xFF,0x88,0x06,0x48,0x8B,0xC6,0x48,0x83,0xC4,0x20,0x5E,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<sbyte> ipow(Span<sbyte> b, ReadOnlySpan<uint> exp)
; location: [7FFC7C09B680h, 7FFC7C09B6E2h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0005h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0006h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0007h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0008h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
000ch mov rdi,rcx                   ; MOV(Mov_r64_rm64) [RDI,RCX]                          encoding(3 bytes) = 48 8b f9
000fh mov rsi,r8                    ; MOV(Mov_r64_rm64) [RSI,R8]                           encoding(3 bytes) = 49 8b f0
0012h mov rbx,[rdx]                 ; MOV(Mov_r64_rm64) [RBX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 1a
0015h mov ebp,[rdx+8]               ; MOV(Mov_r32_rm32) [EBP,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 6a 08
0018h xor r14d,r14d                 ; XOR(Xor_r32_rm32) [R14D,R14D]                        encoding(3 bytes) = 45 33 f6
001bh test ebp,ebp                  ; TEST(Test_rm32_r32) [EBP,EBP]                        encoding(2 bytes) = 85 ed
001dh jle short 0047h               ; JLE(Jle_rel8_64) [47h:jmp64]                         encoding(2 bytes) = 7e 28
001fh movsxd rcx,r14d               ; MOVSXD(Movsxd_r64_rm32) [RCX,R14D]                   encoding(3 bytes) = 49 63 ce
0022h lea r15,[rbx+rcx]             ; LEA(Lea_r64_m) [R15,mem(Unknown,RBX:br,DS:sr)]       encoding(4 bytes) = 4c 8d 3c 0b
0026h cmp r14d,[rsi+8]              ; CMP(Cmp_r32_rm32) [R14D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 3b 76 08
002ah jae short 005dh               ; JAE(Jae_rel8_64) [5Dh:jmp64]                         encoding(2 bytes) = 73 31
002ch mov rdx,[rsi]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RSI:br,DS:sr)]        encoding(3 bytes) = 48 8b 16
002fh mov edx,[rdx+rcx*4]           ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 14 8a
0032h movsx rcx,byte ptr [rbx+rcx]  ; MOVSX(Movsx_r64_rm8) [RCX,mem(8i,RBX:br,DS:sr)]      encoding(5 bytes) = 48 0f be 0c 0b
0037h call 7FFC7C085C68h            ; CALL(Call_rel32_64) [FFFFFFFFFFFEA5E8h:jmp64]        encoding(5 bytes) = e8 ac a5 fe ff
003ch mov [r15],al                  ; MOV(Mov_rm8_r8) [mem(8u,R15:br,DS:sr),AL]            encoding(3 bytes) = 41 88 07
003fh inc r14d                      ; INC(Inc_rm32) [R14D]                                 encoding(3 bytes) = 41 ff c6
0042h cmp r14d,ebp                  ; CMP(Cmp_r32_rm32) [R14D,EBP]                         encoding(3 bytes) = 44 3b f5
0045h jl short 001fh                ; JL(Jl_rel8_64) [1Fh:jmp64]                           encoding(2 bytes) = 7c d8
0047h mov [rdi],rbx                 ; MOV(Mov_rm64_r64) [mem(64u,RDI:br,DS:sr),RBX]        encoding(3 bytes) = 48 89 1f
004ah mov [rdi+8],ebp               ; MOV(Mov_rm32_r32) [mem(32u,RDI:br,DS:sr),EBP]        encoding(3 bytes) = 89 6f 08
004dh mov rax,rdi                   ; MOV(Mov_r64_rm64) [RAX,RDI]                          encoding(3 bytes) = 48 8b c7
0050h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
0054h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0055h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0056h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0057h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0058h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
005ah pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
005ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
005dh call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC37FC0h:jmp64]                encoding(5 bytes) = e8 5e 7f c3 5f
0062h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> ipowBytes => new byte[99]{0x41,0x57,0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x48,0x8B,0xF9,0x49,0x8B,0xF0,0x48,0x8B,0x1A,0x8B,0x6A,0x08,0x45,0x33,0xF6,0x85,0xED,0x7E,0x28,0x49,0x63,0xCE,0x4C,0x8D,0x3C,0x0B,0x44,0x3B,0x76,0x08,0x73,0x31,0x48,0x8B,0x16,0x8B,0x14,0x8A,0x48,0x0F,0xBE,0x0C,0x0B,0xE8,0xAC,0xA5,0xFE,0xFF,0x41,0x88,0x07,0x41,0xFF,0xC6,0x44,0x3B,0xF5,0x7C,0xD8,0x48,0x89,0x1F,0x89,0x6F,0x08,0x48,0x8B,0xC7,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0x41,0x5F,0xC3,0xE8,0x5E,0x7F,0xC3,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<byte> ipow(Span<byte> b, ReadOnlySpan<uint> exp)
; location: [7FFC7C09B710h, 7FFC7C09B771h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0005h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0006h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0007h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0008h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
000ch mov rdi,rcx                   ; MOV(Mov_r64_rm64) [RDI,RCX]                          encoding(3 bytes) = 48 8b f9
000fh mov rsi,r8                    ; MOV(Mov_r64_rm64) [RSI,R8]                           encoding(3 bytes) = 49 8b f0
0012h mov rbx,[rdx]                 ; MOV(Mov_r64_rm64) [RBX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 1a
0015h mov ebp,[rdx+8]               ; MOV(Mov_r32_rm32) [EBP,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 6a 08
0018h xor r14d,r14d                 ; XOR(Xor_r32_rm32) [R14D,R14D]                        encoding(3 bytes) = 45 33 f6
001bh test ebp,ebp                  ; TEST(Test_rm32_r32) [EBP,EBP]                        encoding(2 bytes) = 85 ed
001dh jle short 0046h               ; JLE(Jle_rel8_64) [46h:jmp64]                         encoding(2 bytes) = 7e 27
001fh movsxd rcx,r14d               ; MOVSXD(Movsxd_r64_rm32) [RCX,R14D]                   encoding(3 bytes) = 49 63 ce
0022h lea r15,[rbx+rcx]             ; LEA(Lea_r64_m) [R15,mem(Unknown,RBX:br,DS:sr)]       encoding(4 bytes) = 4c 8d 3c 0b
0026h cmp r14d,[rsi+8]              ; CMP(Cmp_r32_rm32) [R14D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 3b 76 08
002ah jae short 005ch               ; JAE(Jae_rel8_64) [5Ch:jmp64]                         encoding(2 bytes) = 73 30
002ch mov rdx,[rsi]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RSI:br,DS:sr)]        encoding(3 bytes) = 48 8b 16
002fh mov edx,[rdx+rcx*4]           ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 14 8a
0032h movzx ecx,byte ptr [rbx+rcx]  ; MOVZX(Movzx_r32_rm8) [ECX,mem(8u,RBX:br,DS:sr)]      encoding(4 bytes) = 0f b6 0c 0b
0036h call 7FFC7C085C70h            ; CALL(Call_rel32_64) [FFFFFFFFFFFEA560h:jmp64]        encoding(5 bytes) = e8 25 a5 fe ff
003bh mov [r15],al                  ; MOV(Mov_rm8_r8) [mem(8u,R15:br,DS:sr),AL]            encoding(3 bytes) = 41 88 07
003eh inc r14d                      ; INC(Inc_rm32) [R14D]                                 encoding(3 bytes) = 41 ff c6
0041h cmp r14d,ebp                  ; CMP(Cmp_r32_rm32) [R14D,EBP]                         encoding(3 bytes) = 44 3b f5
0044h jl short 001fh                ; JL(Jl_rel8_64) [1Fh:jmp64]                           encoding(2 bytes) = 7c d9
0046h mov [rdi],rbx                 ; MOV(Mov_rm64_r64) [mem(64u,RDI:br,DS:sr),RBX]        encoding(3 bytes) = 48 89 1f
0049h mov [rdi+8],ebp               ; MOV(Mov_rm32_r32) [mem(32u,RDI:br,DS:sr),EBP]        encoding(3 bytes) = 89 6f 08
004ch mov rax,rdi                   ; MOV(Mov_r64_rm64) [RAX,RDI]                          encoding(3 bytes) = 48 8b c7
004fh add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
0053h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0054h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0055h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0056h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0057h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0059h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
005bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
005ch call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC37F30h:jmp64]                encoding(5 bytes) = e8 cf 7e c3 5f
0061h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> ipowBytes => new byte[98]{0x41,0x57,0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x48,0x8B,0xF9,0x49,0x8B,0xF0,0x48,0x8B,0x1A,0x8B,0x6A,0x08,0x45,0x33,0xF6,0x85,0xED,0x7E,0x27,0x49,0x63,0xCE,0x4C,0x8D,0x3C,0x0B,0x44,0x3B,0x76,0x08,0x73,0x30,0x48,0x8B,0x16,0x8B,0x14,0x8A,0x0F,0xB6,0x0C,0x0B,0xE8,0x25,0xA5,0xFE,0xFF,0x41,0x88,0x07,0x41,0xFF,0xC6,0x44,0x3B,0xF5,0x7C,0xD9,0x48,0x89,0x1F,0x89,0x6F,0x08,0x48,0x8B,0xC7,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0x41,0x5F,0xC3,0xE8,0xCF,0x7E,0xC3,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<short> ipow(Span<short> b, ReadOnlySpan<uint> exp)
; location: [7FFC7C09B7A0h, 7FFC7C09B803h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0005h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0006h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0007h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0008h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
000ch mov rdi,rcx                   ; MOV(Mov_r64_rm64) [RDI,RCX]                          encoding(3 bytes) = 48 8b f9
000fh mov rsi,r8                    ; MOV(Mov_r64_rm64) [RSI,R8]                           encoding(3 bytes) = 49 8b f0
0012h mov rbx,[rdx]                 ; MOV(Mov_r64_rm64) [RBX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 1a
0015h mov ebp,[rdx+8]               ; MOV(Mov_r32_rm32) [EBP,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 6a 08
0018h xor r14d,r14d                 ; XOR(Xor_r32_rm32) [R14D,R14D]                        encoding(3 bytes) = 45 33 f6
001bh test ebp,ebp                  ; TEST(Test_rm32_r32) [EBP,EBP]                        encoding(2 bytes) = 85 ed
001dh jle short 0048h               ; JLE(Jle_rel8_64) [48h:jmp64]                         encoding(2 bytes) = 7e 29
001fh movsxd rcx,r14d               ; MOVSXD(Movsxd_r64_rm32) [RCX,R14D]                   encoding(3 bytes) = 49 63 ce
0022h lea r15,[rbx+rcx*2]           ; LEA(Lea_r64_m) [R15,mem(Unknown,RBX:br,DS:sr)]       encoding(4 bytes) = 4c 8d 3c 4b
0026h cmp r14d,[rsi+8]              ; CMP(Cmp_r32_rm32) [R14D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 3b 76 08
002ah jae short 005eh               ; JAE(Jae_rel8_64) [5Eh:jmp64]                         encoding(2 bytes) = 73 32
002ch mov rdx,[rsi]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RSI:br,DS:sr)]        encoding(3 bytes) = 48 8b 16
002fh mov edx,[rdx+rcx*4]           ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 14 8a
0032h movsx rcx,word ptr [rbx+rcx*2]; MOVSX(Movsx_r64_rm16) [RCX,mem(16i,RBX:br,DS:sr)]    encoding(5 bytes) = 48 0f bf 0c 4b
0037h call 7FFC7C085C78h            ; CALL(Call_rel32_64) [FFFFFFFFFFFEA4D8h:jmp64]        encoding(5 bytes) = e8 9c a4 fe ff
003ch mov [r15],ax                  ; MOV(Mov_rm16_r16) [mem(16u,R15:br,DS:sr),AX]         encoding(4 bytes) = 66 41 89 07
0040h inc r14d                      ; INC(Inc_rm32) [R14D]                                 encoding(3 bytes) = 41 ff c6
0043h cmp r14d,ebp                  ; CMP(Cmp_r32_rm32) [R14D,EBP]                         encoding(3 bytes) = 44 3b f5
0046h jl short 001fh                ; JL(Jl_rel8_64) [1Fh:jmp64]                           encoding(2 bytes) = 7c d7
0048h mov [rdi],rbx                 ; MOV(Mov_rm64_r64) [mem(64u,RDI:br,DS:sr),RBX]        encoding(3 bytes) = 48 89 1f
004bh mov [rdi+8],ebp               ; MOV(Mov_rm32_r32) [mem(32u,RDI:br,DS:sr),EBP]        encoding(3 bytes) = 89 6f 08
004eh mov rax,rdi                   ; MOV(Mov_r64_rm64) [RAX,RDI]                          encoding(3 bytes) = 48 8b c7
0051h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
0055h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0056h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0057h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0058h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0059h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
005bh pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
005dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
005eh call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC37EA0h:jmp64]                encoding(5 bytes) = e8 3d 7e c3 5f
0063h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> ipowBytes => new byte[100]{0x41,0x57,0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x48,0x8B,0xF9,0x49,0x8B,0xF0,0x48,0x8B,0x1A,0x8B,0x6A,0x08,0x45,0x33,0xF6,0x85,0xED,0x7E,0x29,0x49,0x63,0xCE,0x4C,0x8D,0x3C,0x4B,0x44,0x3B,0x76,0x08,0x73,0x32,0x48,0x8B,0x16,0x8B,0x14,0x8A,0x48,0x0F,0xBF,0x0C,0x4B,0xE8,0x9C,0xA4,0xFE,0xFF,0x66,0x41,0x89,0x07,0x41,0xFF,0xC6,0x44,0x3B,0xF5,0x7C,0xD7,0x48,0x89,0x1F,0x89,0x6F,0x08,0x48,0x8B,0xC7,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0x41,0x5F,0xC3,0xE8,0x3D,0x7E,0xC3,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<int> ipow(Span<int> b, ReadOnlySpan<uint> exp)
; location: [7FFC7C09B8C0h, 7FFC7C09B920h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0005h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0006h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0007h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0008h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
000ch mov rdi,rcx                   ; MOV(Mov_r64_rm64) [RDI,RCX]                          encoding(3 bytes) = 48 8b f9
000fh mov rsi,r8                    ; MOV(Mov_r64_rm64) [RSI,R8]                           encoding(3 bytes) = 49 8b f0
0012h mov rbx,[rdx]                 ; MOV(Mov_r64_rm64) [RBX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 1a
0015h mov ebp,[rdx+8]               ; MOV(Mov_r32_rm32) [EBP,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 6a 08
0018h xor r14d,r14d                 ; XOR(Xor_r32_rm32) [R14D,R14D]                        encoding(3 bytes) = 45 33 f6
001bh test ebp,ebp                  ; TEST(Test_rm32_r32) [EBP,EBP]                        encoding(2 bytes) = 85 ed
001dh jle short 0045h               ; JLE(Jle_rel8_64) [45h:jmp64]                         encoding(2 bytes) = 7e 26
001fh movsxd rcx,r14d               ; MOVSXD(Movsxd_r64_rm32) [RCX,R14D]                   encoding(3 bytes) = 49 63 ce
0022h lea r15,[rbx+rcx*4]           ; LEA(Lea_r64_m) [R15,mem(Unknown,RBX:br,DS:sr)]       encoding(4 bytes) = 4c 8d 3c 8b
0026h cmp r14d,[rsi+8]              ; CMP(Cmp_r32_rm32) [R14D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 3b 76 08
002ah jae short 005bh               ; JAE(Jae_rel8_64) [5Bh:jmp64]                         encoding(2 bytes) = 73 2f
002ch mov rdx,[rsi]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RSI:br,DS:sr)]        encoding(3 bytes) = 48 8b 16
002fh mov edx,[rdx+rcx*4]           ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 14 8a
0032h mov ecx,[rbx+rcx*4]           ; MOV(Mov_r32_rm32) [ECX,mem(32u,RBX:br,DS:sr)]        encoding(3 bytes) = 8b 0c 8b
0035h call 7FFC7C09B3F0h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFFB30h:jmp64]        encoding(5 bytes) = e8 f6 fa ff ff
003ah mov [r15],eax                 ; MOV(Mov_rm32_r32) [mem(32u,R15:br,DS:sr),EAX]        encoding(3 bytes) = 41 89 07
003dh inc r14d                      ; INC(Inc_rm32) [R14D]                                 encoding(3 bytes) = 41 ff c6
0040h cmp r14d,ebp                  ; CMP(Cmp_r32_rm32) [R14D,EBP]                         encoding(3 bytes) = 44 3b f5
0043h jl short 001fh                ; JL(Jl_rel8_64) [1Fh:jmp64]                           encoding(2 bytes) = 7c da
0045h mov [rdi],rbx                 ; MOV(Mov_rm64_r64) [mem(64u,RDI:br,DS:sr),RBX]        encoding(3 bytes) = 48 89 1f
0048h mov [rdi+8],ebp               ; MOV(Mov_rm32_r32) [mem(32u,RDI:br,DS:sr),EBP]        encoding(3 bytes) = 89 6f 08
004bh mov rax,rdi                   ; MOV(Mov_r64_rm64) [RAX,RDI]                          encoding(3 bytes) = 48 8b c7
004eh add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
0052h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0053h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0054h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0055h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0056h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0058h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
005ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
005bh call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC37D80h:jmp64]                encoding(5 bytes) = e8 20 7d c3 5f
0060h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> ipowBytes => new byte[97]{0x41,0x57,0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x48,0x8B,0xF9,0x49,0x8B,0xF0,0x48,0x8B,0x1A,0x8B,0x6A,0x08,0x45,0x33,0xF6,0x85,0xED,0x7E,0x26,0x49,0x63,0xCE,0x4C,0x8D,0x3C,0x8B,0x44,0x3B,0x76,0x08,0x73,0x2F,0x48,0x8B,0x16,0x8B,0x14,0x8A,0x8B,0x0C,0x8B,0xE8,0xF6,0xFA,0xFF,0xFF,0x41,0x89,0x07,0x41,0xFF,0xC6,0x44,0x3B,0xF5,0x7C,0xDA,0x48,0x89,0x1F,0x89,0x6F,0x08,0x48,0x8B,0xC7,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0x41,0x5F,0xC3,0xE8,0x20,0x7D,0xC3,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<ulong> ipow(Span<ulong> b, ReadOnlySpan<uint> exp)
; location: [7FFC7C09BA70h, 7FFC7C09BAD1h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0005h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0006h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0007h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0008h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
000ch mov rdi,rcx                   ; MOV(Mov_r64_rm64) [RDI,RCX]                          encoding(3 bytes) = 48 8b f9
000fh mov rsi,r8                    ; MOV(Mov_r64_rm64) [RSI,R8]                           encoding(3 bytes) = 49 8b f0
0012h mov rbx,[rdx]                 ; MOV(Mov_r64_rm64) [RBX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 1a
0015h mov ebp,[rdx+8]               ; MOV(Mov_r32_rm32) [EBP,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 6a 08
0018h xor r14d,r14d                 ; XOR(Xor_r32_rm32) [R14D,R14D]                        encoding(3 bytes) = 45 33 f6
001bh test ebp,ebp                  ; TEST(Test_rm32_r32) [EBP,EBP]                        encoding(2 bytes) = 85 ed
001dh jle short 0046h               ; JLE(Jle_rel8_64) [46h:jmp64]                         encoding(2 bytes) = 7e 27
001fh movsxd rcx,r14d               ; MOVSXD(Movsxd_r64_rm32) [RCX,R14D]                   encoding(3 bytes) = 49 63 ce
0022h lea r15,[rbx+rcx*8]           ; LEA(Lea_r64_m) [R15,mem(Unknown,RBX:br,DS:sr)]       encoding(4 bytes) = 4c 8d 3c cb
0026h cmp r14d,[rsi+8]              ; CMP(Cmp_r32_rm32) [R14D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 3b 76 08
002ah jae short 005ch               ; JAE(Jae_rel8_64) [5Ch:jmp64]                         encoding(2 bytes) = 73 30
002ch mov rdx,[rsi]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RSI:br,DS:sr)]        encoding(3 bytes) = 48 8b 16
002fh mov edx,[rdx+rcx*4]           ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 14 8a
0032h mov rcx,[rbx+rcx*8]           ; MOV(Mov_r64_rm64) [RCX,mem(64u,RBX:br,DS:sr)]        encoding(4 bytes) = 48 8b 0c cb
0036h call 7FFC7C09B4B0h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFFA40h:jmp64]        encoding(5 bytes) = e8 05 fa ff ff
003bh mov [r15],rax                 ; MOV(Mov_rm64_r64) [mem(64u,R15:br,DS:sr),RAX]        encoding(3 bytes) = 49 89 07
003eh inc r14d                      ; INC(Inc_rm32) [R14D]                                 encoding(3 bytes) = 41 ff c6
0041h cmp r14d,ebp                  ; CMP(Cmp_r32_rm32) [R14D,EBP]                         encoding(3 bytes) = 44 3b f5
0044h jl short 001fh                ; JL(Jl_rel8_64) [1Fh:jmp64]                           encoding(2 bytes) = 7c d9
0046h mov [rdi],rbx                 ; MOV(Mov_rm64_r64) [mem(64u,RDI:br,DS:sr),RBX]        encoding(3 bytes) = 48 89 1f
0049h mov [rdi+8],ebp               ; MOV(Mov_rm32_r32) [mem(32u,RDI:br,DS:sr),EBP]        encoding(3 bytes) = 89 6f 08
004ch mov rax,rdi                   ; MOV(Mov_r64_rm64) [RAX,RDI]                          encoding(3 bytes) = 48 8b c7
004fh add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
0053h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0054h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0055h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0056h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0057h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0059h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
005bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
005ch call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC37BD0h:jmp64]                encoding(5 bytes) = e8 6f 7b c3 5f
0061h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> ipowBytes => new byte[98]{0x41,0x57,0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x48,0x8B,0xF9,0x49,0x8B,0xF0,0x48,0x8B,0x1A,0x8B,0x6A,0x08,0x45,0x33,0xF6,0x85,0xED,0x7E,0x27,0x49,0x63,0xCE,0x4C,0x8D,0x3C,0xCB,0x44,0x3B,0x76,0x08,0x73,0x30,0x48,0x8B,0x16,0x8B,0x14,0x8A,0x48,0x8B,0x0C,0xCB,0xE8,0x05,0xFA,0xFF,0xFF,0x49,0x89,0x07,0x41,0xFF,0xC6,0x44,0x3B,0xF5,0x7C,0xD9,0x48,0x89,0x1F,0x89,0x6F,0x08,0x48,0x8B,0xC7,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0x41,0x5F,0xC3,0xE8,0x6F,0x7B,0xC3,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<sbyte> ipow(Span<sbyte> b, uint exp)
; location: [7FFC7C09BB00h, 7FFC7C09BB52h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0005h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0006h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0007h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0008h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
000ch mov rdi,rcx                   ; MOV(Mov_r64_rm64) [RDI,RCX]                          encoding(3 bytes) = 48 8b f9
000fh mov esi,r8d                   ; MOV(Mov_r32_rm32) [ESI,R8D]                          encoding(3 bytes) = 41 8b f0
0012h mov rbx,[rdx]                 ; MOV(Mov_r64_rm64) [RBX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 1a
0015h mov ebp,[rdx+8]               ; MOV(Mov_r32_rm32) [EBP,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 6a 08
0018h xor r14d,r14d                 ; XOR(Xor_r32_rm32) [R14D,R14D]                        encoding(3 bytes) = 45 33 f6
001bh test ebp,ebp                  ; TEST(Test_rm32_r32) [EBP,EBP]                        encoding(2 bytes) = 85 ed
001dh jle short 003dh               ; JLE(Jle_rel8_64) [3Dh:jmp64]                         encoding(2 bytes) = 7e 1e
001fh movsxd rcx,r14d               ; MOVSXD(Movsxd_r64_rm32) [RCX,R14D]                   encoding(3 bytes) = 49 63 ce
0022h lea r15,[rbx+rcx]             ; LEA(Lea_r64_m) [R15,mem(Unknown,RBX:br,DS:sr)]       encoding(4 bytes) = 4c 8d 3c 0b
0026h movsx rcx,byte ptr [rbx+rcx]  ; MOVSX(Movsx_r64_rm8) [RCX,mem(8i,RBX:br,DS:sr)]      encoding(5 bytes) = 48 0f be 0c 0b
002bh mov edx,esi                   ; MOV(Mov_r32_rm32) [EDX,ESI]                          encoding(2 bytes) = 8b d6
002dh call 7FFC7C085C68h            ; CALL(Call_rel32_64) [FFFFFFFFFFFEA168h:jmp64]        encoding(5 bytes) = e8 36 a1 fe ff
0032h mov [r15],al                  ; MOV(Mov_rm8_r8) [mem(8u,R15:br,DS:sr),AL]            encoding(3 bytes) = 41 88 07
0035h inc r14d                      ; INC(Inc_rm32) [R14D]                                 encoding(3 bytes) = 41 ff c6
0038h cmp r14d,ebp                  ; CMP(Cmp_r32_rm32) [R14D,EBP]                         encoding(3 bytes) = 44 3b f5
003bh jl short 001fh                ; JL(Jl_rel8_64) [1Fh:jmp64]                           encoding(2 bytes) = 7c e2
003dh mov [rdi],rbx                 ; MOV(Mov_rm64_r64) [mem(64u,RDI:br,DS:sr),RBX]        encoding(3 bytes) = 48 89 1f
0040h mov [rdi+8],ebp               ; MOV(Mov_rm32_r32) [mem(32u,RDI:br,DS:sr),EBP]        encoding(3 bytes) = 89 6f 08
0043h mov rax,rdi                   ; MOV(Mov_r64_rm64) [RAX,RDI]                          encoding(3 bytes) = 48 8b c7
0046h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
004ah pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
004bh pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
004ch pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
004dh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
004eh pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0050h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
0052h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> ipowBytes => new byte[83]{0x41,0x57,0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x48,0x8B,0xF9,0x41,0x8B,0xF0,0x48,0x8B,0x1A,0x8B,0x6A,0x08,0x45,0x33,0xF6,0x85,0xED,0x7E,0x1E,0x49,0x63,0xCE,0x4C,0x8D,0x3C,0x0B,0x48,0x0F,0xBE,0x0C,0x0B,0x8B,0xD6,0xE8,0x36,0xA1,0xFE,0xFF,0x41,0x88,0x07,0x41,0xFF,0xC6,0x44,0x3B,0xF5,0x7C,0xE2,0x48,0x89,0x1F,0x89,0x6F,0x08,0x48,0x8B,0xC7,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0x41,0x5F,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<byte> ipow(Span<byte> b, uint exp)
; location: [7FFC7C09BB80h, 7FFC7C09BBD1h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0005h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0006h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0007h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0008h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
000ch mov rdi,rcx                   ; MOV(Mov_r64_rm64) [RDI,RCX]                          encoding(3 bytes) = 48 8b f9
000fh mov esi,r8d                   ; MOV(Mov_r32_rm32) [ESI,R8D]                          encoding(3 bytes) = 41 8b f0
0012h mov rbx,[rdx]                 ; MOV(Mov_r64_rm64) [RBX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 1a
0015h mov ebp,[rdx+8]               ; MOV(Mov_r32_rm32) [EBP,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 6a 08
0018h xor r14d,r14d                 ; XOR(Xor_r32_rm32) [R14D,R14D]                        encoding(3 bytes) = 45 33 f6
001bh test ebp,ebp                  ; TEST(Test_rm32_r32) [EBP,EBP]                        encoding(2 bytes) = 85 ed
001dh jle short 003ch               ; JLE(Jle_rel8_64) [3Ch:jmp64]                         encoding(2 bytes) = 7e 1d
001fh movsxd rcx,r14d               ; MOVSXD(Movsxd_r64_rm32) [RCX,R14D]                   encoding(3 bytes) = 49 63 ce
0022h lea r15,[rbx+rcx]             ; LEA(Lea_r64_m) [R15,mem(Unknown,RBX:br,DS:sr)]       encoding(4 bytes) = 4c 8d 3c 0b
0026h movzx ecx,byte ptr [rbx+rcx]  ; MOVZX(Movzx_r32_rm8) [ECX,mem(8u,RBX:br,DS:sr)]      encoding(4 bytes) = 0f b6 0c 0b
002ah mov edx,esi                   ; MOV(Mov_r32_rm32) [EDX,ESI]                          encoding(2 bytes) = 8b d6
002ch call 7FFC7C085C70h            ; CALL(Call_rel32_64) [FFFFFFFFFFFEA0F0h:jmp64]        encoding(5 bytes) = e8 bf a0 fe ff
0031h mov [r15],al                  ; MOV(Mov_rm8_r8) [mem(8u,R15:br,DS:sr),AL]            encoding(3 bytes) = 41 88 07
0034h inc r14d                      ; INC(Inc_rm32) [R14D]                                 encoding(3 bytes) = 41 ff c6
0037h cmp r14d,ebp                  ; CMP(Cmp_r32_rm32) [R14D,EBP]                         encoding(3 bytes) = 44 3b f5
003ah jl short 001fh                ; JL(Jl_rel8_64) [1Fh:jmp64]                           encoding(2 bytes) = 7c e3
003ch mov [rdi],rbx                 ; MOV(Mov_rm64_r64) [mem(64u,RDI:br,DS:sr),RBX]        encoding(3 bytes) = 48 89 1f
003fh mov [rdi+8],ebp               ; MOV(Mov_rm32_r32) [mem(32u,RDI:br,DS:sr),EBP]        encoding(3 bytes) = 89 6f 08
0042h mov rax,rdi                   ; MOV(Mov_r64_rm64) [RAX,RDI]                          encoding(3 bytes) = 48 8b c7
0045h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
0049h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
004ah pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
004bh pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
004ch pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
004dh pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
004fh pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
0051h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> ipowBytes => new byte[82]{0x41,0x57,0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x48,0x8B,0xF9,0x41,0x8B,0xF0,0x48,0x8B,0x1A,0x8B,0x6A,0x08,0x45,0x33,0xF6,0x85,0xED,0x7E,0x1D,0x49,0x63,0xCE,0x4C,0x8D,0x3C,0x0B,0x0F,0xB6,0x0C,0x0B,0x8B,0xD6,0xE8,0xBF,0xA0,0xFE,0xFF,0x41,0x88,0x07,0x41,0xFF,0xC6,0x44,0x3B,0xF5,0x7C,0xE3,0x48,0x89,0x1F,0x89,0x6F,0x08,0x48,0x8B,0xC7,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0x41,0x5F,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<short> ipow(Span<short> b, uint exp)
; location: [7FFC7C09BC00h, 7FFC7C09BC53h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0005h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0006h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0007h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0008h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
000ch mov rdi,rcx                   ; MOV(Mov_r64_rm64) [RDI,RCX]                          encoding(3 bytes) = 48 8b f9
000fh mov esi,r8d                   ; MOV(Mov_r32_rm32) [ESI,R8D]                          encoding(3 bytes) = 41 8b f0
0012h mov rbx,[rdx]                 ; MOV(Mov_r64_rm64) [RBX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 1a
0015h mov ebp,[rdx+8]               ; MOV(Mov_r32_rm32) [EBP,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 6a 08
0018h xor r14d,r14d                 ; XOR(Xor_r32_rm32) [R14D,R14D]                        encoding(3 bytes) = 45 33 f6
001bh test ebp,ebp                  ; TEST(Test_rm32_r32) [EBP,EBP]                        encoding(2 bytes) = 85 ed
001dh jle short 003eh               ; JLE(Jle_rel8_64) [3Eh:jmp64]                         encoding(2 bytes) = 7e 1f
001fh movsxd rcx,r14d               ; MOVSXD(Movsxd_r64_rm32) [RCX,R14D]                   encoding(3 bytes) = 49 63 ce
0022h lea r15,[rbx+rcx*2]           ; LEA(Lea_r64_m) [R15,mem(Unknown,RBX:br,DS:sr)]       encoding(4 bytes) = 4c 8d 3c 4b
0026h movsx rcx,word ptr [rbx+rcx*2]; MOVSX(Movsx_r64_rm16) [RCX,mem(16i,RBX:br,DS:sr)]    encoding(5 bytes) = 48 0f bf 0c 4b
002bh mov edx,esi                   ; MOV(Mov_r32_rm32) [EDX,ESI]                          encoding(2 bytes) = 8b d6
002dh call 7FFC7C085C78h            ; CALL(Call_rel32_64) [FFFFFFFFFFFEA078h:jmp64]        encoding(5 bytes) = e8 46 a0 fe ff
0032h mov [r15],ax                  ; MOV(Mov_rm16_r16) [mem(16u,R15:br,DS:sr),AX]         encoding(4 bytes) = 66 41 89 07
0036h inc r14d                      ; INC(Inc_rm32) [R14D]                                 encoding(3 bytes) = 41 ff c6
0039h cmp r14d,ebp                  ; CMP(Cmp_r32_rm32) [R14D,EBP]                         encoding(3 bytes) = 44 3b f5
003ch jl short 001fh                ; JL(Jl_rel8_64) [1Fh:jmp64]                           encoding(2 bytes) = 7c e1
003eh mov [rdi],rbx                 ; MOV(Mov_rm64_r64) [mem(64u,RDI:br,DS:sr),RBX]        encoding(3 bytes) = 48 89 1f
0041h mov [rdi+8],ebp               ; MOV(Mov_rm32_r32) [mem(32u,RDI:br,DS:sr),EBP]        encoding(3 bytes) = 89 6f 08
0044h mov rax,rdi                   ; MOV(Mov_r64_rm64) [RAX,RDI]                          encoding(3 bytes) = 48 8b c7
0047h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
004bh pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
004ch pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
004dh pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
004eh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
004fh pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0051h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
0053h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> ipowBytes => new byte[84]{0x41,0x57,0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x48,0x8B,0xF9,0x41,0x8B,0xF0,0x48,0x8B,0x1A,0x8B,0x6A,0x08,0x45,0x33,0xF6,0x85,0xED,0x7E,0x1F,0x49,0x63,0xCE,0x4C,0x8D,0x3C,0x4B,0x48,0x0F,0xBF,0x0C,0x4B,0x8B,0xD6,0xE8,0x46,0xA0,0xFE,0xFF,0x66,0x41,0x89,0x07,0x41,0xFF,0xC6,0x44,0x3B,0xF5,0x7C,0xE1,0x48,0x89,0x1F,0x89,0x6F,0x08,0x48,0x8B,0xC7,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0x41,0x5F,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<ushort> ipow(Span<ushort> b, uint exp)
; location: [7FFC7C09BC80h, 7FFC7C09BCD2h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0005h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0006h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0007h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0008h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
000ch mov rdi,rcx                   ; MOV(Mov_r64_rm64) [RDI,RCX]                          encoding(3 bytes) = 48 8b f9
000fh mov esi,r8d                   ; MOV(Mov_r32_rm32) [ESI,R8D]                          encoding(3 bytes) = 41 8b f0
0012h mov rbx,[rdx]                 ; MOV(Mov_r64_rm64) [RBX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 1a
0015h mov ebp,[rdx+8]               ; MOV(Mov_r32_rm32) [EBP,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 6a 08
0018h xor r14d,r14d                 ; XOR(Xor_r32_rm32) [R14D,R14D]                        encoding(3 bytes) = 45 33 f6
001bh test ebp,ebp                  ; TEST(Test_rm32_r32) [EBP,EBP]                        encoding(2 bytes) = 85 ed
001dh jle short 003dh               ; JLE(Jle_rel8_64) [3Dh:jmp64]                         encoding(2 bytes) = 7e 1e
001fh movsxd rcx,r14d               ; MOVSXD(Movsxd_r64_rm32) [RCX,R14D]                   encoding(3 bytes) = 49 63 ce
0022h lea r15,[rbx+rcx*2]           ; LEA(Lea_r64_m) [R15,mem(Unknown,RBX:br,DS:sr)]       encoding(4 bytes) = 4c 8d 3c 4b
0026h movzx ecx,word ptr [rbx+rcx*2]; MOVZX(Movzx_r32_rm16) [ECX,mem(16u,RBX:br,DS:sr)]    encoding(4 bytes) = 0f b7 0c 4b
002ah mov edx,esi                   ; MOV(Mov_r32_rm32) [EDX,ESI]                          encoding(2 bytes) = 8b d6
002ch call 7FFC7C085C80h            ; CALL(Call_rel32_64) [FFFFFFFFFFFEA000h:jmp64]        encoding(5 bytes) = e8 cf 9f fe ff
0031h mov [r15],ax                  ; MOV(Mov_rm16_r16) [mem(16u,R15:br,DS:sr),AX]         encoding(4 bytes) = 66 41 89 07
0035h inc r14d                      ; INC(Inc_rm32) [R14D]                                 encoding(3 bytes) = 41 ff c6
0038h cmp r14d,ebp                  ; CMP(Cmp_r32_rm32) [R14D,EBP]                         encoding(3 bytes) = 44 3b f5
003bh jl short 001fh                ; JL(Jl_rel8_64) [1Fh:jmp64]                           encoding(2 bytes) = 7c e2
003dh mov [rdi],rbx                 ; MOV(Mov_rm64_r64) [mem(64u,RDI:br,DS:sr),RBX]        encoding(3 bytes) = 48 89 1f
0040h mov [rdi+8],ebp               ; MOV(Mov_rm32_r32) [mem(32u,RDI:br,DS:sr),EBP]        encoding(3 bytes) = 89 6f 08
0043h mov rax,rdi                   ; MOV(Mov_r64_rm64) [RAX,RDI]                          encoding(3 bytes) = 48 8b c7
0046h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
004ah pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
004bh pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
004ch pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
004dh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
004eh pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0050h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
0052h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> ipowBytes => new byte[83]{0x41,0x57,0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x48,0x8B,0xF9,0x41,0x8B,0xF0,0x48,0x8B,0x1A,0x8B,0x6A,0x08,0x45,0x33,0xF6,0x85,0xED,0x7E,0x1E,0x49,0x63,0xCE,0x4C,0x8D,0x3C,0x4B,0x0F,0xB7,0x0C,0x4B,0x8B,0xD6,0xE8,0xCF,0x9F,0xFE,0xFF,0x66,0x41,0x89,0x07,0x41,0xFF,0xC6,0x44,0x3B,0xF5,0x7C,0xE2,0x48,0x89,0x1F,0x89,0x6F,0x08,0x48,0x8B,0xC7,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0x41,0x5F,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<int> ipow(Span<int> b, uint exp)
; location: [7FFC7C09BD00h, 7FFC7C09BD50h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0005h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0006h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0007h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0008h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
000ch mov rdi,rcx                   ; MOV(Mov_r64_rm64) [RDI,RCX]                          encoding(3 bytes) = 48 8b f9
000fh mov esi,r8d                   ; MOV(Mov_r32_rm32) [ESI,R8D]                          encoding(3 bytes) = 41 8b f0
0012h mov rbx,[rdx]                 ; MOV(Mov_r64_rm64) [RBX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 1a
0015h mov ebp,[rdx+8]               ; MOV(Mov_r32_rm32) [EBP,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 6a 08
0018h xor r14d,r14d                 ; XOR(Xor_r32_rm32) [R14D,R14D]                        encoding(3 bytes) = 45 33 f6
001bh test ebp,ebp                  ; TEST(Test_rm32_r32) [EBP,EBP]                        encoding(2 bytes) = 85 ed
001dh jle short 003bh               ; JLE(Jle_rel8_64) [3Bh:jmp64]                         encoding(2 bytes) = 7e 1c
001fh movsxd rcx,r14d               ; MOVSXD(Movsxd_r64_rm32) [RCX,R14D]                   encoding(3 bytes) = 49 63 ce
0022h lea r15,[rbx+rcx*4]           ; LEA(Lea_r64_m) [R15,mem(Unknown,RBX:br,DS:sr)]       encoding(4 bytes) = 4c 8d 3c 8b
0026h mov ecx,[rbx+rcx*4]           ; MOV(Mov_r32_rm32) [ECX,mem(32u,RBX:br,DS:sr)]        encoding(3 bytes) = 8b 0c 8b
0029h mov edx,esi                   ; MOV(Mov_r32_rm32) [EDX,ESI]                          encoding(2 bytes) = 8b d6
002bh call 7FFC7C09B3F0h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFF6F0h:jmp64]        encoding(5 bytes) = e8 c0 f6 ff ff
0030h mov [r15],eax                 ; MOV(Mov_rm32_r32) [mem(32u,R15:br,DS:sr),EAX]        encoding(3 bytes) = 41 89 07
0033h inc r14d                      ; INC(Inc_rm32) [R14D]                                 encoding(3 bytes) = 41 ff c6
0036h cmp r14d,ebp                  ; CMP(Cmp_r32_rm32) [R14D,EBP]                         encoding(3 bytes) = 44 3b f5
0039h jl short 001fh                ; JL(Jl_rel8_64) [1Fh:jmp64]                           encoding(2 bytes) = 7c e4
003bh mov [rdi],rbx                 ; MOV(Mov_rm64_r64) [mem(64u,RDI:br,DS:sr),RBX]        encoding(3 bytes) = 48 89 1f
003eh mov [rdi+8],ebp               ; MOV(Mov_rm32_r32) [mem(32u,RDI:br,DS:sr),EBP]        encoding(3 bytes) = 89 6f 08
0041h mov rax,rdi                   ; MOV(Mov_r64_rm64) [RAX,RDI]                          encoding(3 bytes) = 48 8b c7
0044h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
0048h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0049h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
004ah pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
004bh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
004ch pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
004eh pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
0050h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> ipowBytes => new byte[81]{0x41,0x57,0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x48,0x8B,0xF9,0x41,0x8B,0xF0,0x48,0x8B,0x1A,0x8B,0x6A,0x08,0x45,0x33,0xF6,0x85,0xED,0x7E,0x1C,0x49,0x63,0xCE,0x4C,0x8D,0x3C,0x8B,0x8B,0x0C,0x8B,0x8B,0xD6,0xE8,0xC0,0xF6,0xFF,0xFF,0x41,0x89,0x07,0x41,0xFF,0xC6,0x44,0x3B,0xF5,0x7C,0xE4,0x48,0x89,0x1F,0x89,0x6F,0x08,0x48,0x8B,0xC7,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0x41,0x5F,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<long> ipow(Span<long> b, uint exp)
; location: [7FFC7C09BE00h, 7FFC7C09BE51h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0005h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0006h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0007h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0008h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
000ch mov rdi,rcx                   ; MOV(Mov_r64_rm64) [RDI,RCX]                          encoding(3 bytes) = 48 8b f9
000fh mov esi,r8d                   ; MOV(Mov_r32_rm32) [ESI,R8D]                          encoding(3 bytes) = 41 8b f0
0012h mov rbx,[rdx]                 ; MOV(Mov_r64_rm64) [RBX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 1a
0015h mov ebp,[rdx+8]               ; MOV(Mov_r32_rm32) [EBP,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 6a 08
0018h xor r14d,r14d                 ; XOR(Xor_r32_rm32) [R14D,R14D]                        encoding(3 bytes) = 45 33 f6
001bh test ebp,ebp                  ; TEST(Test_rm32_r32) [EBP,EBP]                        encoding(2 bytes) = 85 ed
001dh jle short 003ch               ; JLE(Jle_rel8_64) [3Ch:jmp64]                         encoding(2 bytes) = 7e 1d
001fh movsxd rcx,r14d               ; MOVSXD(Movsxd_r64_rm32) [RCX,R14D]                   encoding(3 bytes) = 49 63 ce
0022h lea r15,[rbx+rcx*8]           ; LEA(Lea_r64_m) [R15,mem(Unknown,RBX:br,DS:sr)]       encoding(4 bytes) = 4c 8d 3c cb
0026h mov rcx,[rbx+rcx*8]           ; MOV(Mov_r64_rm64) [RCX,mem(64u,RBX:br,DS:sr)]        encoding(4 bytes) = 48 8b 0c cb
002ah mov edx,esi                   ; MOV(Mov_r32_rm32) [EDX,ESI]                          encoding(2 bytes) = 8b d6
002ch call 7FFC7C09B470h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFF670h:jmp64]        encoding(5 bytes) = e8 3f f6 ff ff
0031h mov [r15],rax                 ; MOV(Mov_rm64_r64) [mem(64u,R15:br,DS:sr),RAX]        encoding(3 bytes) = 49 89 07
0034h inc r14d                      ; INC(Inc_rm32) [R14D]                                 encoding(3 bytes) = 41 ff c6
0037h cmp r14d,ebp                  ; CMP(Cmp_r32_rm32) [R14D,EBP]                         encoding(3 bytes) = 44 3b f5
003ah jl short 001fh                ; JL(Jl_rel8_64) [1Fh:jmp64]                           encoding(2 bytes) = 7c e3
003ch mov [rdi],rbx                 ; MOV(Mov_rm64_r64) [mem(64u,RDI:br,DS:sr),RBX]        encoding(3 bytes) = 48 89 1f
003fh mov [rdi+8],ebp               ; MOV(Mov_rm32_r32) [mem(32u,RDI:br,DS:sr),EBP]        encoding(3 bytes) = 89 6f 08
0042h mov rax,rdi                   ; MOV(Mov_r64_rm64) [RAX,RDI]                          encoding(3 bytes) = 48 8b c7
0045h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
0049h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
004ah pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
004bh pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
004ch pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
004dh pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
004fh pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
0051h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> ipowBytes => new byte[82]{0x41,0x57,0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x48,0x8B,0xF9,0x41,0x8B,0xF0,0x48,0x8B,0x1A,0x8B,0x6A,0x08,0x45,0x33,0xF6,0x85,0xED,0x7E,0x1D,0x49,0x63,0xCE,0x4C,0x8D,0x3C,0xCB,0x48,0x8B,0x0C,0xCB,0x8B,0xD6,0xE8,0x3F,0xF6,0xFF,0xFF,0x49,0x89,0x07,0x41,0xFF,0xC6,0x44,0x3B,0xF5,0x7C,0xE3,0x48,0x89,0x1F,0x89,0x6F,0x08,0x48,0x8B,0xC7,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0x41,0x5F,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<ulong> ipow(Span<ulong> b, uint exp)
; location: [7FFC7C09BE80h, 7FFC7C09BED1h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0005h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0006h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0007h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0008h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
000ch mov rdi,rcx                   ; MOV(Mov_r64_rm64) [RDI,RCX]                          encoding(3 bytes) = 48 8b f9
000fh mov esi,r8d                   ; MOV(Mov_r32_rm32) [ESI,R8D]                          encoding(3 bytes) = 41 8b f0
0012h mov rbx,[rdx]                 ; MOV(Mov_r64_rm64) [RBX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 1a
0015h mov ebp,[rdx+8]               ; MOV(Mov_r32_rm32) [EBP,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 6a 08
0018h xor r14d,r14d                 ; XOR(Xor_r32_rm32) [R14D,R14D]                        encoding(3 bytes) = 45 33 f6
001bh test ebp,ebp                  ; TEST(Test_rm32_r32) [EBP,EBP]                        encoding(2 bytes) = 85 ed
001dh jle short 003ch               ; JLE(Jle_rel8_64) [3Ch:jmp64]                         encoding(2 bytes) = 7e 1d
001fh movsxd rcx,r14d               ; MOVSXD(Movsxd_r64_rm32) [RCX,R14D]                   encoding(3 bytes) = 49 63 ce
0022h lea r15,[rbx+rcx*8]           ; LEA(Lea_r64_m) [R15,mem(Unknown,RBX:br,DS:sr)]       encoding(4 bytes) = 4c 8d 3c cb
0026h mov rcx,[rbx+rcx*8]           ; MOV(Mov_r64_rm64) [RCX,mem(64u,RBX:br,DS:sr)]        encoding(4 bytes) = 48 8b 0c cb
002ah mov edx,esi                   ; MOV(Mov_r32_rm32) [EDX,ESI]                          encoding(2 bytes) = 8b d6
002ch call 7FFC7C09B4B0h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFF630h:jmp64]        encoding(5 bytes) = e8 ff f5 ff ff
0031h mov [r15],rax                 ; MOV(Mov_rm64_r64) [mem(64u,R15:br,DS:sr),RAX]        encoding(3 bytes) = 49 89 07
0034h inc r14d                      ; INC(Inc_rm32) [R14D]                                 encoding(3 bytes) = 41 ff c6
0037h cmp r14d,ebp                  ; CMP(Cmp_r32_rm32) [R14D,EBP]                         encoding(3 bytes) = 44 3b f5
003ah jl short 001fh                ; JL(Jl_rel8_64) [1Fh:jmp64]                           encoding(2 bytes) = 7c e3
003ch mov [rdi],rbx                 ; MOV(Mov_rm64_r64) [mem(64u,RDI:br,DS:sr),RBX]        encoding(3 bytes) = 48 89 1f
003fh mov [rdi+8],ebp               ; MOV(Mov_rm32_r32) [mem(32u,RDI:br,DS:sr),EBP]        encoding(3 bytes) = 89 6f 08
0042h mov rax,rdi                   ; MOV(Mov_r64_rm64) [RAX,RDI]                          encoding(3 bytes) = 48 8b c7
0045h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
0049h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
004ah pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
004bh pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
004ch pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
004dh pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
004fh pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
0051h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> ipowBytes => new byte[82]{0x41,0x57,0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x48,0x8B,0xF9,0x41,0x8B,0xF0,0x48,0x8B,0x1A,0x8B,0x6A,0x08,0x45,0x33,0xF6,0x85,0xED,0x7E,0x1D,0x49,0x63,0xCE,0x4C,0x8D,0x3C,0xCB,0x48,0x8B,0x0C,0xCB,0x8B,0xD6,0xE8,0xFF,0xF5,0xFF,0xFF,0x49,0x89,0x07,0x41,0xFF,0xC6,0x44,0x3B,0xF5,0x7C,0xE3,0x48,0x89,0x1F,0x89,0x6F,0x08,0x48,0x8B,0xC7,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0x41,0x5F,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool isPow2(byte src)
; location: [7FFC7C09BF30h, 7FFC7C09BF43h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0008h lea edx,[rax-1]               ; LEA(Lea_r32_m) [EDX,mem(Unknown,RAX:br,DS:sr)]       encoding(3 bytes) = 8d 50 ff
000bh test eax,edx                  ; TEST(Test_rm32_r32) [EDX,EAX]                        encoding(2 bytes) = 85 c2
000dh sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
0010h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> isPow2Bytes => new byte[20]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC1,0x8D,0x50,0xFF,0x85,0xC2,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool isPow2(short src)
; location: [7FFC7C09BF60h, 7FFC7C09BF74h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cx                  ; MOVSX(Movsx_r64_rm16) [RAX,CX]                       encoding(4 bytes) = 48 0f bf c1
0009h lea edx,[rax-1]               ; LEA(Lea_r32_m) [EDX,mem(Unknown,RAX:br,DS:sr)]       encoding(3 bytes) = 8d 50 ff
000ch test eax,edx                  ; TEST(Test_rm32_r32) [EDX,EAX]                        encoding(2 bytes) = 85 c2
000eh sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
0011h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0014h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> isPow2Bytes => new byte[21]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBF,0xC1,0x8D,0x50,0xFF,0x85,0xC2,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool isPow2(ushort src)
; location: [7FFC7C09BF90h, 7FFC7C09BFA3h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cx                  ; MOVZX(Movzx_r32_rm16) [EAX,CX]                       encoding(3 bytes) = 0f b7 c1
0008h lea edx,[rax-1]               ; LEA(Lea_r32_m) [EDX,mem(Unknown,RAX:br,DS:sr)]       encoding(3 bytes) = 8d 50 ff
000bh test eax,edx                  ; TEST(Test_rm32_r32) [EDX,EAX]                        encoding(2 bytes) = 85 c2
000dh sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
0010h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> isPow2Bytes => new byte[20]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB7,0xC1,0x8D,0x50,0xFF,0x85,0xC2,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool isPow2(int src)
; location: [7FFC7C09BFC0h, 7FFC7C09BFD0h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h lea eax,[rcx-1]               ; LEA(Lea_r32_m) [EAX,mem(Unknown,RCX:br,DS:sr)]       encoding(3 bytes) = 8d 41 ff
0008h test ecx,eax                  ; TEST(Test_rm32_r32) [EAX,ECX]                        encoding(2 bytes) = 85 c8
000ah sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
000dh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0010h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> isPow2Bytes => new byte[17]{0x0F,0x1F,0x44,0x00,0x00,0x8D,0x41,0xFF,0x85,0xC8,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool isPow2(uint src)
; location: [7FFC7C09BFF0h, 7FFC7C09C000h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h lea eax,[rcx-1]               ; LEA(Lea_r32_m) [EAX,mem(Unknown,RCX:br,DS:sr)]       encoding(3 bytes) = 8d 41 ff
0008h test ecx,eax                  ; TEST(Test_rm32_r32) [EAX,ECX]                        encoding(2 bytes) = 85 c8
000ah sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
000dh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0010h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> isPow2Bytes => new byte[17]{0x0F,0x1F,0x44,0x00,0x00,0x8D,0x41,0xFF,0x85,0xC8,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool isPow2(long src)
; location: [7FFC7C09C020h, 7FFC7C09C032h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h lea rax,[rcx-1]               ; LEA(Lea_r64_m) [RAX,mem(Unknown,RCX:br,DS:sr)]       encoding(4 bytes) = 48 8d 41 ff
0009h test rcx,rax                  ; TEST(Test_rm64_r64) [RAX,RCX]                        encoding(3 bytes) = 48 85 c8
000ch sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
000fh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0012h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> isPow2Bytes => new byte[19]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8D,0x41,0xFF,0x48,0x85,0xC8,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool isPow2(ulong src)
; location: [7FFC7C09C050h, 7FFC7C09C062h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h lea rax,[rcx-1]               ; LEA(Lea_r64_m) [RAX,mem(Unknown,RCX:br,DS:sr)]       encoding(4 bytes) = 48 8d 41 ff
0009h test rcx,rax                  ; TEST(Test_rm64_r64) [RAX,RCX]                        encoding(3 bytes) = 48 85 c8
000ch sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
000fh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0012h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> isPow2Bytes => new byte[19]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8D,0x41,0xFF,0x48,0x85,0xC8,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool lt(sbyte lhs, sbyte rhs)
; location: [7FFC7C09C080h, 7FFC7C09C095h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cl                  ; MOVSX(Movsx_r64_rm8) [RAX,CL]                        encoding(4 bytes) = 48 0f be c1
0009h movsx rdx,dl                  ; MOVSX(Movsx_r64_rm8) [RDX,DL]                        encoding(4 bytes) = 48 0f be d2
000dh cmp eax,edx                   ; CMP(Cmp_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 3b c2
000fh setl al                       ; SETL(Setl_rm8) [AL]                                  encoding(3 bytes) = 0f 9c c0
0012h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0015h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> ltBytes => new byte[22]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBE,0xC1,0x48,0x0F,0xBE,0xD2,0x3B,0xC2,0x0F,0x9C,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool lt(byte lhs, byte rhs)
; location: [7FFC7C09C0B0h, 7FFC7C09C0C3h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0008h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
000bh cmp eax,edx                   ; CMP(Cmp_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 3b c2
000dh setl al                       ; SETL(Setl_rm8) [AL]                                  encoding(3 bytes) = 0f 9c c0
0010h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> ltBytes => new byte[20]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC1,0x0F,0xB6,0xD2,0x3B,0xC2,0x0F,0x9C,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool lt(short lhs, short rhs)
; location: [7FFC7C09C0E0h, 7FFC7C09C0F5h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cx                  ; MOVSX(Movsx_r64_rm16) [RAX,CX]                       encoding(4 bytes) = 48 0f bf c1
0009h movsx rdx,dx                  ; MOVSX(Movsx_r64_rm16) [RDX,DX]                       encoding(4 bytes) = 48 0f bf d2
000dh cmp eax,edx                   ; CMP(Cmp_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 3b c2
000fh setl al                       ; SETL(Setl_rm8) [AL]                                  encoding(3 bytes) = 0f 9c c0
0012h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0015h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> ltBytes => new byte[22]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBF,0xC1,0x48,0x0F,0xBF,0xD2,0x3B,0xC2,0x0F,0x9C,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool lt(long lhs, long rhs)
; location: [7FFC7C09C180h, 7FFC7C09C18Eh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h cmp rcx,rdx                   ; CMP(Cmp_r64_rm64) [RCX,RDX]                          encoding(3 bytes) = 48 3b ca
0008h setl al                       ; SETL(Setl_rm8) [AL]                                  encoding(3 bytes) = 0f 9c c0
000bh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> ltBytes => new byte[15]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x3B,0xCA,0x0F,0x9C,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool lt(ulong lhs, ulong rhs)
; location: [7FFC7C09C1A0h, 7FFC7C09C1AEh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h cmp rcx,rdx                   ; CMP(Cmp_r64_rm64) [RCX,RDX]                          encoding(3 bytes) = 48 3b ca
0008h setb al                       ; SETB(Setb_rm8) [AL]                                  encoding(3 bytes) = 0f 92 c0
000bh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> ltBytes => new byte[15]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x3B,0xCA,0x0F,0x92,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool lt(float lhs, float rhs)
; location: [7FFC7C09C1C0h, 7FFC7C09C1CFh]
0000h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0003h xchg ax,ax                    ; NOP(Nopw)                                            encoding(2 bytes) = 66 90
0005h vucomiss xmm1,xmm0            ; VUCOMISS(VEX_Vucomiss_xmm_xmmm32) [XMM1,XMM0]        encoding(VEX, 4 bytes) = c5 f8 2e c8
0009h seta al                       ; SETA(Seta_rm8) [AL]                                  encoding(3 bytes) = 0f 97 c0
000ch movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> ltBytes => new byte[16]{0xC5,0xF8,0x77,0x66,0x90,0xC5,0xF8,0x2E,0xC8,0x0F,0x97,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool lt(double lhs, double rhs)
; location: [7FFC7C09C1F0h, 7FFC7C09C1FFh]
0000h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0003h xchg ax,ax                    ; NOP(Nopw)                                            encoding(2 bytes) = 66 90
0005h vucomisd xmm1,xmm0            ; VUCOMISD(VEX_Vucomisd_xmm_xmmm64) [XMM1,XMM0]        encoding(VEX, 4 bytes) = c5 f9 2e c8
0009h seta al                       ; SETA(Seta_rm8) [AL]                                  encoding(3 bytes) = 0f 97 c0
000ch movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> ltBytes => new byte[16]{0xC5,0xF8,0x77,0x66,0x90,0xC5,0xF9,0x2E,0xC8,0x0F,0x97,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> lt(ReadOnlySpan<sbyte> lhs, ReadOnlySpan<sbyte> rhs, Span<bool> dst)
; location: [7FFC7C09C220h, 7FFC7C09C284h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0003h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0004h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0008h mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000bh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000fh mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0012h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0015h xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
0018h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
001ah jle short 004ch               ; JLE(Jle_rel8_64) [4Ch:jmp64]                         encoding(2 bytes) = 7e 30
001ch cmp r11d,r9d                  ; CMP(Cmp_r32_rm32) [R11D,R9D]                         encoding(3 bytes) = 45 3b d9
001fh jae short 005fh               ; JAE(Jae_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 73 3e
0021h movsxd rsi,r11d               ; MOVSXD(Movsxd_r64_rm32) [RSI,R11D]                   encoding(3 bytes) = 49 63 f3
0024h lea rdi,[rax+rsi]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 30
0028h movsx rbx,byte ptr [r10+rsi]  ; MOVSX(Movsx_r64_rm8) [RBX,mem(8i,R10:br,DS:sr)]      encoding(5 bytes) = 49 0f be 1c 32
002dh cmp r11d,[r8+8]               ; CMP(Cmp_r32_rm32) [R11D,mem(32u,R8:br,DS:sr)]        encoding(4 bytes) = 45 3b 58 08
0031h jae short 005fh               ; JAE(Jae_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 73 2c
0033h mov rbp,[r8]                  ; MOV(Mov_r64_rm64) [RBP,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 28
0036h movsx rsi,byte ptr [rsi+rbp]  ; MOVSX(Movsx_r64_rm8) [RSI,mem(8i,RSI:br,DS:sr)]      encoding(5 bytes) = 48 0f be 34 2e
003bh cmp ebx,esi                   ; CMP(Cmp_r32_rm32) [EBX,ESI]                          encoding(2 bytes) = 3b de
003dh setl sil                      ; SETL(Setl_rm8) [SIL]                                 encoding(4 bytes) = 40 0f 9c c6
0041h mov [rdi],sil                 ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),SIL]           encoding(3 bytes) = 40 88 37
0044h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
0047h cmp r11d,edx                  ; CMP(Cmp_r32_rm32) [R11D,EDX]                         encoding(3 bytes) = 44 3b da
004ah jl short 001ch                ; JL(Jl_rel8_64) [1Ch:jmp64]                           encoding(2 bytes) = 7c d0
004ch mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
004fh mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0053h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0056h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
005ah pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
005bh pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
005ch pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
005dh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
005eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
005fh call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC37420h:jmp64]                encoding(5 bytes) = e8 bc 73 c3 5f
0064h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> ltBytes => new byte[101]{0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x12,0x8B,0x52,0x08,0x45,0x33,0xDB,0x85,0xD2,0x7E,0x30,0x45,0x3B,0xD9,0x73,0x3E,0x49,0x63,0xF3,0x48,0x8D,0x3C,0x30,0x49,0x0F,0xBE,0x1C,0x32,0x45,0x3B,0x58,0x08,0x73,0x2C,0x49,0x8B,0x28,0x48,0x0F,0xBE,0x34,0x2E,0x3B,0xDE,0x40,0x0F,0x9C,0xC6,0x40,0x88,0x37,0x41,0xFF,0xC3,0x44,0x3B,0xDA,0x7C,0xD0,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0xC3,0xE8,0xBC,0x73,0xC3,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> lt(ReadOnlySpan<byte> lhs, ReadOnlySpan<byte> rhs, Span<bool> dst)
; location: [7FFC7C09C2B0h, 7FFC7C09C314h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0003h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0004h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0008h mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000bh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000fh mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0012h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0015h xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
0018h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
001ah jle short 004ch               ; JLE(Jle_rel8_64) [4Ch:jmp64]                         encoding(2 bytes) = 7e 30
001ch cmp r11d,r9d                  ; CMP(Cmp_r32_rm32) [R11D,R9D]                         encoding(3 bytes) = 45 3b d9
001fh jae short 005fh               ; JAE(Jae_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 73 3e
0021h movsxd rsi,r11d               ; MOVSXD(Movsxd_r64_rm32) [RSI,R11D]                   encoding(3 bytes) = 49 63 f3
0024h lea rdi,[rax+rsi]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 30
0028h movzx ebx,byte ptr [r10+rsi]  ; MOVZX(Movzx_r32_rm8) [EBX,mem(8u,R10:br,DS:sr)]      encoding(5 bytes) = 41 0f b6 1c 32
002dh cmp r11d,[r8+8]               ; CMP(Cmp_r32_rm32) [R11D,mem(32u,R8:br,DS:sr)]        encoding(4 bytes) = 45 3b 58 08
0031h jae short 005fh               ; JAE(Jae_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 73 2c
0033h mov rbp,[r8]                  ; MOV(Mov_r64_rm64) [RBP,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 28
0036h movzx esi,byte ptr [rsi+rbp]  ; MOVZX(Movzx_r32_rm8) [ESI,mem(8u,RSI:br,DS:sr)]      encoding(5 bytes) = 40 0f b6 34 2e
003bh cmp ebx,esi                   ; CMP(Cmp_r32_rm32) [EBX,ESI]                          encoding(2 bytes) = 3b de
003dh setl sil                      ; SETL(Setl_rm8) [SIL]                                 encoding(4 bytes) = 40 0f 9c c6
0041h mov [rdi],sil                 ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),SIL]           encoding(3 bytes) = 40 88 37
0044h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
0047h cmp r11d,edx                  ; CMP(Cmp_r32_rm32) [R11D,EDX]                         encoding(3 bytes) = 44 3b da
004ah jl short 001ch                ; JL(Jl_rel8_64) [1Ch:jmp64]                           encoding(2 bytes) = 7c d0
004ch mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
004fh mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0053h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0056h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
005ah pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
005bh pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
005ch pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
005dh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
005eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
005fh call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC37390h:jmp64]                encoding(5 bytes) = e8 2c 73 c3 5f
0064h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> ltBytes => new byte[101]{0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x12,0x8B,0x52,0x08,0x45,0x33,0xDB,0x85,0xD2,0x7E,0x30,0x45,0x3B,0xD9,0x73,0x3E,0x49,0x63,0xF3,0x48,0x8D,0x3C,0x30,0x41,0x0F,0xB6,0x1C,0x32,0x45,0x3B,0x58,0x08,0x73,0x2C,0x49,0x8B,0x28,0x40,0x0F,0xB6,0x34,0x2E,0x3B,0xDE,0x40,0x0F,0x9C,0xC6,0x40,0x88,0x37,0x41,0xFF,0xC3,0x44,0x3B,0xDA,0x7C,0xD0,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0xC3,0xE8,0x2C,0x73,0xC3,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> lt(ReadOnlySpan<ushort> lhs, ReadOnlySpan<ushort> rhs, Span<bool> dst)
; location: [7FFC7C09C3D0h, 7FFC7C09C434h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0003h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0004h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0008h mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000bh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000fh mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0012h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0015h xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
0018h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
001ah jle short 004ch               ; JLE(Jle_rel8_64) [4Ch:jmp64]                         encoding(2 bytes) = 7e 30
001ch cmp r11d,r9d                  ; CMP(Cmp_r32_rm32) [R11D,R9D]                         encoding(3 bytes) = 45 3b d9
001fh jae short 005fh               ; JAE(Jae_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 73 3e
0021h movsxd rsi,r11d               ; MOVSXD(Movsxd_r64_rm32) [RSI,R11D]                   encoding(3 bytes) = 49 63 f3
0024h lea rdi,[rax+rsi]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 30
0028h movzx ebx,word ptr [r10+rsi*2]; MOVZX(Movzx_r32_rm16) [EBX,mem(16u,R10:br,DS:sr)]    encoding(5 bytes) = 41 0f b7 1c 72
002dh cmp r11d,[r8+8]               ; CMP(Cmp_r32_rm32) [R11D,mem(32u,R8:br,DS:sr)]        encoding(4 bytes) = 45 3b 58 08
0031h jae short 005fh               ; JAE(Jae_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 73 2c
0033h mov rbp,[r8]                  ; MOV(Mov_r64_rm64) [RBP,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 28
0036h movzx esi,word ptr [rbp+rsi*2]; MOVZX(Movzx_r32_rm16) [ESI,mem(16u,RBP:br,SS:sr)]    encoding(5 bytes) = 0f b7 74 75 00
003bh cmp ebx,esi                   ; CMP(Cmp_r32_rm32) [EBX,ESI]                          encoding(2 bytes) = 3b de
003dh setl sil                      ; SETL(Setl_rm8) [SIL]                                 encoding(4 bytes) = 40 0f 9c c6
0041h mov [rdi],sil                 ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),SIL]           encoding(3 bytes) = 40 88 37
0044h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
0047h cmp r11d,edx                  ; CMP(Cmp_r32_rm32) [R11D,EDX]                         encoding(3 bytes) = 44 3b da
004ah jl short 001ch                ; JL(Jl_rel8_64) [1Ch:jmp64]                           encoding(2 bytes) = 7c d0
004ch mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
004fh mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0053h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0056h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
005ah pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
005bh pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
005ch pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
005dh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
005eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
005fh call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC37270h:jmp64]                encoding(5 bytes) = e8 0c 72 c3 5f
0064h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> ltBytes => new byte[101]{0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x12,0x8B,0x52,0x08,0x45,0x33,0xDB,0x85,0xD2,0x7E,0x30,0x45,0x3B,0xD9,0x73,0x3E,0x49,0x63,0xF3,0x48,0x8D,0x3C,0x30,0x41,0x0F,0xB7,0x1C,0x72,0x45,0x3B,0x58,0x08,0x73,0x2C,0x49,0x8B,0x28,0x0F,0xB7,0x74,0x75,0x00,0x3B,0xDE,0x40,0x0F,0x9C,0xC6,0x40,0x88,0x37,0x41,0xFF,0xC3,0x44,0x3B,0xDA,0x7C,0xD0,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0xC3,0xE8,0x0C,0x72,0xC3,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> lt(ReadOnlySpan<uint> lhs, ReadOnlySpan<uint> rhs, Span<bool> dst)
; location: [7FFC7C09C4E0h, 7FFC7C09C542h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0003h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0004h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0008h mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000bh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000fh mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0012h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0015h xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
0018h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
001ah jle short 004ah               ; JLE(Jle_rel8_64) [4Ah:jmp64]                         encoding(2 bytes) = 7e 2e
001ch cmp r11d,r9d                  ; CMP(Cmp_r32_rm32) [R11D,R9D]                         encoding(3 bytes) = 45 3b d9
001fh jae short 005dh               ; JAE(Jae_rel8_64) [5Dh:jmp64]                         encoding(2 bytes) = 73 3c
0021h movsxd rsi,r11d               ; MOVSXD(Movsxd_r64_rm32) [RSI,R11D]                   encoding(3 bytes) = 49 63 f3
0024h lea rdi,[rax+rsi]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 30
0028h mov ebx,[r10+rsi*4]           ; MOV(Mov_r32_rm32) [EBX,mem(32u,R10:br,DS:sr)]        encoding(4 bytes) = 41 8b 1c b2
002ch cmp r11d,[r8+8]               ; CMP(Cmp_r32_rm32) [R11D,mem(32u,R8:br,DS:sr)]        encoding(4 bytes) = 45 3b 58 08
0030h jae short 005dh               ; JAE(Jae_rel8_64) [5Dh:jmp64]                         encoding(2 bytes) = 73 2b
0032h mov rbp,[r8]                  ; MOV(Mov_r64_rm64) [RBP,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 28
0035h mov esi,[rbp+rsi*4]           ; MOV(Mov_r32_rm32) [ESI,mem(32u,RBP:br,SS:sr)]        encoding(4 bytes) = 8b 74 b5 00
0039h cmp ebx,esi                   ; CMP(Cmp_r32_rm32) [EBX,ESI]                          encoding(2 bytes) = 3b de
003bh setb sil                      ; SETB(Setb_rm8) [SIL]                                 encoding(4 bytes) = 40 0f 92 c6
003fh mov [rdi],sil                 ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),SIL]           encoding(3 bytes) = 40 88 37
0042h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
0045h cmp r11d,edx                  ; CMP(Cmp_r32_rm32) [R11D,EDX]                         encoding(3 bytes) = 44 3b da
0048h jl short 001ch                ; JL(Jl_rel8_64) [1Ch:jmp64]                           encoding(2 bytes) = 7c d2
004ah mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
004dh mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0051h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0054h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
0058h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0059h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
005ah pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
005bh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
005ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
005dh call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC37160h:jmp64]                encoding(5 bytes) = e8 fe 70 c3 5f
0062h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> ltBytes => new byte[99]{0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x12,0x8B,0x52,0x08,0x45,0x33,0xDB,0x85,0xD2,0x7E,0x2E,0x45,0x3B,0xD9,0x73,0x3C,0x49,0x63,0xF3,0x48,0x8D,0x3C,0x30,0x41,0x8B,0x1C,0xB2,0x45,0x3B,0x58,0x08,0x73,0x2B,0x49,0x8B,0x28,0x8B,0x74,0xB5,0x00,0x3B,0xDE,0x40,0x0F,0x92,0xC6,0x40,0x88,0x37,0x41,0xFF,0xC3,0x44,0x3B,0xDA,0x7C,0xD2,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0xC3,0xE8,0xFE,0x70,0xC3,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> lt(ReadOnlySpan<long> lhs, ReadOnlySpan<long> rhs, Span<bool> dst)
; location: [7FFC7C09C560h, 7FFC7C09C5C4h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0003h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0004h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0008h mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000bh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000fh mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0012h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0015h xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
0018h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
001ah jle short 004ch               ; JLE(Jle_rel8_64) [4Ch:jmp64]                         encoding(2 bytes) = 7e 30
001ch cmp r11d,r9d                  ; CMP(Cmp_r32_rm32) [R11D,R9D]                         encoding(3 bytes) = 45 3b d9
001fh jae short 005fh               ; JAE(Jae_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 73 3e
0021h movsxd rsi,r11d               ; MOVSXD(Movsxd_r64_rm32) [RSI,R11D]                   encoding(3 bytes) = 49 63 f3
0024h lea rdi,[rax+rsi]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 30
0028h mov rbx,[r10+rsi*8]           ; MOV(Mov_r64_rm64) [RBX,mem(64u,R10:br,DS:sr)]        encoding(4 bytes) = 49 8b 1c f2
002ch cmp r11d,[r8+8]               ; CMP(Cmp_r32_rm32) [R11D,mem(32u,R8:br,DS:sr)]        encoding(4 bytes) = 45 3b 58 08
0030h jae short 005fh               ; JAE(Jae_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 73 2d
0032h mov rbp,[r8]                  ; MOV(Mov_r64_rm64) [RBP,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 28
0035h mov rsi,[rbp+rsi*8]           ; MOV(Mov_r64_rm64) [RSI,mem(64u,RBP:br,SS:sr)]        encoding(5 bytes) = 48 8b 74 f5 00
003ah cmp rbx,rsi                   ; CMP(Cmp_r64_rm64) [RBX,RSI]                          encoding(3 bytes) = 48 3b de
003dh setl sil                      ; SETL(Setl_rm8) [SIL]                                 encoding(4 bytes) = 40 0f 9c c6
0041h mov [rdi],sil                 ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),SIL]           encoding(3 bytes) = 40 88 37
0044h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
0047h cmp r11d,edx                  ; CMP(Cmp_r32_rm32) [R11D,EDX]                         encoding(3 bytes) = 44 3b da
004ah jl short 001ch                ; JL(Jl_rel8_64) [1Ch:jmp64]                           encoding(2 bytes) = 7c d0
004ch mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
004fh mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0053h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0056h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
005ah pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
005bh pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
005ch pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
005dh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
005eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
005fh call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC370E0h:jmp64]                encoding(5 bytes) = e8 7c 70 c3 5f
0064h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> ltBytes => new byte[101]{0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x12,0x8B,0x52,0x08,0x45,0x33,0xDB,0x85,0xD2,0x7E,0x30,0x45,0x3B,0xD9,0x73,0x3E,0x49,0x63,0xF3,0x48,0x8D,0x3C,0x30,0x49,0x8B,0x1C,0xF2,0x45,0x3B,0x58,0x08,0x73,0x2D,0x49,0x8B,0x28,0x48,0x8B,0x74,0xF5,0x00,0x48,0x3B,0xDE,0x40,0x0F,0x9C,0xC6,0x40,0x88,0x37,0x41,0xFF,0xC3,0x44,0x3B,0xDA,0x7C,0xD0,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0xC3,0xE8,0x7C,0x70,0xC3,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> lt(ReadOnlySpan<ulong> lhs, ReadOnlySpan<ulong> rhs, Span<bool> dst)
; location: [7FFC7C09C5F0h, 7FFC7C09C654h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0003h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0004h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0008h mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000bh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000fh mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0012h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0015h xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
0018h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
001ah jle short 004ch               ; JLE(Jle_rel8_64) [4Ch:jmp64]                         encoding(2 bytes) = 7e 30
001ch cmp r11d,r9d                  ; CMP(Cmp_r32_rm32) [R11D,R9D]                         encoding(3 bytes) = 45 3b d9
001fh jae short 005fh               ; JAE(Jae_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 73 3e
0021h movsxd rsi,r11d               ; MOVSXD(Movsxd_r64_rm32) [RSI,R11D]                   encoding(3 bytes) = 49 63 f3
0024h lea rdi,[rax+rsi]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 30
0028h mov rbx,[r10+rsi*8]           ; MOV(Mov_r64_rm64) [RBX,mem(64u,R10:br,DS:sr)]        encoding(4 bytes) = 49 8b 1c f2
002ch cmp r11d,[r8+8]               ; CMP(Cmp_r32_rm32) [R11D,mem(32u,R8:br,DS:sr)]        encoding(4 bytes) = 45 3b 58 08
0030h jae short 005fh               ; JAE(Jae_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 73 2d
0032h mov rbp,[r8]                  ; MOV(Mov_r64_rm64) [RBP,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 28
0035h mov rsi,[rbp+rsi*8]           ; MOV(Mov_r64_rm64) [RSI,mem(64u,RBP:br,SS:sr)]        encoding(5 bytes) = 48 8b 74 f5 00
003ah cmp rbx,rsi                   ; CMP(Cmp_r64_rm64) [RBX,RSI]                          encoding(3 bytes) = 48 3b de
003dh setb sil                      ; SETB(Setb_rm8) [SIL]                                 encoding(4 bytes) = 40 0f 92 c6
0041h mov [rdi],sil                 ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),SIL]           encoding(3 bytes) = 40 88 37
0044h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
0047h cmp r11d,edx                  ; CMP(Cmp_r32_rm32) [R11D,EDX]                         encoding(3 bytes) = 44 3b da
004ah jl short 001ch                ; JL(Jl_rel8_64) [1Ch:jmp64]                           encoding(2 bytes) = 7c d0
004ch mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
004fh mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0053h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0056h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
005ah pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
005bh pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
005ch pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
005dh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
005eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
005fh call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC37050h:jmp64]                encoding(5 bytes) = e8 ec 6f c3 5f
0064h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> ltBytes => new byte[101]{0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x12,0x8B,0x52,0x08,0x45,0x33,0xDB,0x85,0xD2,0x7E,0x30,0x45,0x3B,0xD9,0x73,0x3E,0x49,0x63,0xF3,0x48,0x8D,0x3C,0x30,0x49,0x8B,0x1C,0xF2,0x45,0x3B,0x58,0x08,0x73,0x2D,0x49,0x8B,0x28,0x48,0x8B,0x74,0xF5,0x00,0x48,0x3B,0xDE,0x40,0x0F,0x92,0xC6,0x40,0x88,0x37,0x41,0xFF,0xC3,0x44,0x3B,0xDA,0x7C,0xD0,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0xC3,0xE8,0xEC,0x6F,0xC3,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> lt(ReadOnlySpan<float> lhs, ReadOnlySpan<float> rhs, Span<bool> dst)
; location: [7FFC7C09C680h, 7FFC7C09C6E8h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0003h sub rsp,20h                   ; SUB(Sub_rm64_imm8) [RSP,20h:imm64]                   encoding(4 bytes) = 48 83 ec 20
0007h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
000ah mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000dh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
0011h mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0014h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0017h xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
001ah test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
001ch jle short 0051h               ; JLE(Jle_rel8_64) [51h:jmp64]                         encoding(2 bytes) = 7e 33
001eh cmp r11d,r9d                  ; CMP(Cmp_r32_rm32) [R11D,R9D]                         encoding(3 bytes) = 45 3b d9
0021h jae short 0063h               ; JAE(Jae_rel8_64) [63h:jmp64]                         encoding(2 bytes) = 73 40
0023h movsxd rsi,r11d               ; MOVSXD(Movsxd_r64_rm32) [RSI,R11D]                   encoding(3 bytes) = 49 63 f3
0026h lea rdi,[rax+rsi]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 30
002ah vmovss xmm0,dword ptr [r10+rsi*4]; VMOVSS(VEX_Vmovss_xmm_m32) [XMM0,mem(Float32,R10:br,DS:sr)] encoding(VEX, 6 bytes) = c4 c1 7a 10 04 b2
0030h cmp r11d,[r8+8]               ; CMP(Cmp_r32_rm32) [R11D,mem(32u,R8:br,DS:sr)]        encoding(4 bytes) = 45 3b 58 08
0034h jae short 0063h               ; JAE(Jae_rel8_64) [63h:jmp64]                         encoding(2 bytes) = 73 2d
0036h mov rbx,[r8]                  ; MOV(Mov_r64_rm64) [RBX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 18
0039h vmovss xmm1,dword ptr [rbx+rsi*4]; VMOVSS(VEX_Vmovss_xmm_m32) [XMM1,mem(Float32,RBX:br,DS:sr)] encoding(VEX, 5 bytes) = c5 fa 10 0c b3
003eh vucomiss xmm1,xmm0            ; VUCOMISS(VEX_Vucomiss_xmm_xmmm32) [XMM1,XMM0]        encoding(VEX, 4 bytes) = c5 f8 2e c8
0042h seta sil                      ; SETA(Seta_rm8) [SIL]                                 encoding(4 bytes) = 40 0f 97 c6
0046h mov [rdi],sil                 ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),SIL]           encoding(3 bytes) = 40 88 37
0049h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
004ch cmp r11d,edx                  ; CMP(Cmp_r32_rm32) [R11D,EDX]                         encoding(3 bytes) = 44 3b da
004fh jl short 001eh                ; JL(Jl_rel8_64) [1Eh:jmp64]                           encoding(2 bytes) = 7c cd
0051h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0054h mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0058h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
005bh add rsp,20h                   ; ADD(Add_rm64_imm8) [RSP,20h:imm64]                   encoding(4 bytes) = 48 83 c4 20
005fh pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0060h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0061h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0062h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0063h call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC36FC0h:jmp64]                encoding(5 bytes) = e8 58 6f c3 5f
0068h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> ltBytes => new byte[105]{0x57,0x56,0x53,0x48,0x83,0xEC,0x20,0xC5,0xF8,0x77,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x12,0x8B,0x52,0x08,0x45,0x33,0xDB,0x85,0xD2,0x7E,0x33,0x45,0x3B,0xD9,0x73,0x40,0x49,0x63,0xF3,0x48,0x8D,0x3C,0x30,0xC4,0xC1,0x7A,0x10,0x04,0xB2,0x45,0x3B,0x58,0x08,0x73,0x2D,0x49,0x8B,0x18,0xC5,0xFA,0x10,0x0C,0xB3,0xC5,0xF8,0x2E,0xC8,0x40,0x0F,0x97,0xC6,0x40,0x88,0x37,0x41,0xFF,0xC3,0x44,0x3B,0xDA,0x7C,0xCD,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x20,0x5B,0x5E,0x5F,0xC3,0xE8,0x58,0x6F,0xC3,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> lt(ReadOnlySpan<double> lhs, ReadOnlySpan<double> rhs, Span<bool> dst)
; location: [7FFC7C09C710h, 7FFC7C09C778h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0003h sub rsp,20h                   ; SUB(Sub_rm64_imm8) [RSP,20h:imm64]                   encoding(4 bytes) = 48 83 ec 20
0007h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
000ah mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000dh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
0011h mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0014h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0017h xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
001ah test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
001ch jle short 0051h               ; JLE(Jle_rel8_64) [51h:jmp64]                         encoding(2 bytes) = 7e 33
001eh cmp r11d,r9d                  ; CMP(Cmp_r32_rm32) [R11D,R9D]                         encoding(3 bytes) = 45 3b d9
0021h jae short 0063h               ; JAE(Jae_rel8_64) [63h:jmp64]                         encoding(2 bytes) = 73 40
0023h movsxd rsi,r11d               ; MOVSXD(Movsxd_r64_rm32) [RSI,R11D]                   encoding(3 bytes) = 49 63 f3
0026h lea rdi,[rax+rsi]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 30
002ah vmovsd xmm0,qword ptr [r10+rsi*8]; VMOVSD(VEX_Vmovsd_xmm_m64) [XMM0,mem(Float64,R10:br,DS:sr)] encoding(VEX, 6 bytes) = c4 c1 7b 10 04 f2
0030h cmp r11d,[r8+8]               ; CMP(Cmp_r32_rm32) [R11D,mem(32u,R8:br,DS:sr)]        encoding(4 bytes) = 45 3b 58 08
0034h jae short 0063h               ; JAE(Jae_rel8_64) [63h:jmp64]                         encoding(2 bytes) = 73 2d
0036h mov rbx,[r8]                  ; MOV(Mov_r64_rm64) [RBX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 18
0039h vmovsd xmm1,qword ptr [rbx+rsi*8]; VMOVSD(VEX_Vmovsd_xmm_m64) [XMM1,mem(Float64,RBX:br,DS:sr)] encoding(VEX, 5 bytes) = c5 fb 10 0c f3
003eh vucomisd xmm1,xmm0            ; VUCOMISD(VEX_Vucomisd_xmm_xmmm64) [XMM1,XMM0]        encoding(VEX, 4 bytes) = c5 f9 2e c8
0042h seta sil                      ; SETA(Seta_rm8) [SIL]                                 encoding(4 bytes) = 40 0f 97 c6
0046h mov [rdi],sil                 ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),SIL]           encoding(3 bytes) = 40 88 37
0049h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
004ch cmp r11d,edx                  ; CMP(Cmp_r32_rm32) [R11D,EDX]                         encoding(3 bytes) = 44 3b da
004fh jl short 001eh                ; JL(Jl_rel8_64) [1Eh:jmp64]                           encoding(2 bytes) = 7c cd
0051h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0054h mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0058h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
005bh add rsp,20h                   ; ADD(Add_rm64_imm8) [RSP,20h:imm64]                   encoding(4 bytes) = 48 83 c4 20
005fh pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0060h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0061h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0062h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0063h call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC36F30h:jmp64]                encoding(5 bytes) = e8 c8 6e c3 5f
0068h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> ltBytes => new byte[105]{0x57,0x56,0x53,0x48,0x83,0xEC,0x20,0xC5,0xF8,0x77,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x12,0x8B,0x52,0x08,0x45,0x33,0xDB,0x85,0xD2,0x7E,0x33,0x45,0x3B,0xD9,0x73,0x40,0x49,0x63,0xF3,0x48,0x8D,0x3C,0x30,0xC4,0xC1,0x7B,0x10,0x04,0xF2,0x45,0x3B,0x58,0x08,0x73,0x2D,0x49,0x8B,0x18,0xC5,0xFB,0x10,0x0C,0xF3,0xC5,0xF9,0x2E,0xC8,0x40,0x0F,0x97,0xC6,0x40,0x88,0x37,0x41,0xFF,0xC3,0x44,0x3B,0xDA,0x7C,0xCD,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x20,0x5B,0x5E,0x5F,0xC3,0xE8,0xC8,0x6E,0xC3,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> lt(ReadOnlySpan<short> lhs, ReadOnlySpan<short> rhs)
; location: [7FFC7C09CA00h, 7FFC7C09CB05h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push r12                      ; PUSH(Push_r64) [R12]                                 encoding(2 bytes) = 41 54
0006h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0007h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0008h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0009h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
000ah sub rsp,60h                   ; SUB(Sub_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 ec 60
000eh vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0011h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0014h lea rdi,[rsp+28h]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 7c 24 28
0019h mov ecx,0Ch                   ; MOV(Mov_r32_imm32) [ECX,ch:imm32]                    encoding(5 bytes) = b9 0c 00 00 00
001eh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0020h rep stosd                     ; STOSD(Stosd_m32_EAX) [mem(32u),EAX]                  encoding(2 bytes) = f3 ab
0022h mov rcx,rsi                   ; MOV(Mov_r64_rm64) [RCX,RSI]                          encoding(3 bytes) = 48 8b ce
0025h mov rbx,rcx                   ; MOV(Mov_r64_rm64) [RBX,RCX]                          encoding(3 bytes) = 48 8b d9
0028h mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
002bh mov rdi,r8                    ; MOV(Mov_r64_rm64) [RDI,R8]                           encoding(3 bytes) = 49 8b f8
002eh mov ebp,8Bh                   ; MOV(Mov_r32_imm32) [EBP,8bh:imm32]                   encoding(5 bytes) = bd 8b 00 00 00
0033h mov r14d,1                    ; MOV(Mov_r32_imm32) [R14D,1h:imm32]                   encoding(6 bytes) = 41 be 01 00 00 00
0039h mov r15d,[rsi+8]              ; MOV(Mov_r32_rm32) [R15D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 8b 7e 08
003dh mov r12d,[rdi+8]              ; MOV(Mov_r32_rm32) [R12D,mem(32u,RDI:br,DS:sr)]       encoding(4 bytes) = 44 8b 67 08
0041h cmp r15d,r12d                 ; CMP(Cmp_r32_rm32) [R15D,R12D]                        encoding(3 bytes) = 45 3b fc
0044h jne short 00abh               ; JNE(Jne_rel8_64) [ABh:jmp64]                         encoding(2 bytes) = 75 65
0046h movsxd rdx,r15d               ; MOVSXD(Movsxd_r64_rm32) [RDX,R15D]                   encoding(3 bytes) = 49 63 d7
0049h mov rcx,7FFC7C245DC8h         ; MOV(Mov_r64_imm64) [RCX,7ffc7c245dc8h:imm64]         encoding(10 bytes) = 48 b9 c8 5d 24 7c fc 7f 00 00
0053h call 7FFCDBBA24A0h            ; CALL(Call_rel32_64) [5FB05AA0h:jmp64]                encoding(5 bytes) = e8 48 5a b0 5f
0058h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
005ch mov edx,[rax+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 50 08
005fh mov r8,rbx                    ; MOV(Mov_r64_rm64) [R8,RBX]                           encoding(3 bytes) = 4c 8b c3
0062h vmovdqu xmm0,xmmword ptr [rsi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 06
0066h vmovdqu xmmword ptr [rsp+48h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 48
006ch vmovdqu xmm0,xmmword ptr [rdi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RDI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 07
0070h vmovdqu xmmword ptr [rsp+38h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 38
0076h lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
007bh mov [r9],rcx                  ; MOV(Mov_rm64_r64) [mem(64u,R9:br,DS:sr),RCX]         encoding(3 bytes) = 49 89 09
007eh mov [r9+8],edx                ; MOV(Mov_rm32_r32) [mem(32u,R9:br,DS:sr),EDX]         encoding(4 bytes) = 41 89 51 08
0082h mov rcx,r8                    ; MOV(Mov_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 8b c8
0085h lea rdx,[rsp+48h]             ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 54 24 48
008ah lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
008fh lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
0094h call 7FFC7C09C340h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFF940h:jmp64]        encoding(5 bytes) = e8 a7 f8 ff ff
0099h mov rax,rbx                   ; MOV(Mov_r64_rm64) [RAX,RBX]                          encoding(3 bytes) = 48 8b c3
009ch add rsp,60h                   ; ADD(Add_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 c4 60
00a0h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
00a1h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
00a2h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
00a3h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
00a4h pop r12                       ; POP(Pop_r64) [R12]                                   encoding(2 bytes) = 41 5c
00a6h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
00a8h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
00aah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
00abh mov ecx,0CBFh                 ; MOV(Mov_r32_imm32) [ECX,cbfh:imm32]                  encoding(5 bytes) = b9 bf 0c 00 00
00b0h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
00bah call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC37420h:jmp64]                encoding(5 bytes) = e8 61 73 c3 5f
00bfh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
00c2h mov ecx,0CC5h                 ; MOV(Mov_r32_imm32) [ECX,cc5h:imm32]                  encoding(5 bytes) = b9 c5 0c 00 00
00c7h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
00d1h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC37420h:jmp64]                encoding(5 bytes) = e8 4a 73 c3 5f
00d6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00d9h lea r8,[rsp+58h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 58
00deh mov [r8],r14b                 ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),R14L]           encoding(3 bytes) = 45 88 30
00e1h mov [r8+4],ebp                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBP]         encoding(4 bytes) = 41 89 68 04
00e5h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00e8h mov ecx,r15d                  ; MOV(Mov_r32_rm32) [ECX,R15D]                         encoding(3 bytes) = 41 8b cf
00ebh mov edx,r12d                  ; MOV(Mov_r32_rm32) [EDX,R12D]                         encoding(3 bytes) = 41 8b d4
00eeh mov rax,[rsp+58h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 58
00f3h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00f8h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFF1618h:jmp64]        encoding(5 bytes) = e8 1b 15 ff ff
00fdh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
0100h call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAECE90h:jmp64]                encoding(5 bytes) = e8 8b cd ae 5f
0105h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> ltBytes => new byte[262]{0x41,0x57,0x41,0x56,0x41,0x54,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x60,0xC5,0xF8,0x77,0x48,0x8B,0xF1,0x48,0x8D,0x7C,0x24,0x28,0xB9,0x0C,0x00,0x00,0x00,0x33,0xC0,0xF3,0xAB,0x48,0x8B,0xCE,0x48,0x8B,0xD9,0x48,0x8B,0xF2,0x49,0x8B,0xF8,0xBD,0x8B,0x00,0x00,0x00,0x41,0xBE,0x01,0x00,0x00,0x00,0x44,0x8B,0x7E,0x08,0x44,0x8B,0x67,0x08,0x45,0x3B,0xFC,0x75,0x65,0x49,0x63,0xD7,0x48,0xB9,0xC8,0x5D,0x24,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x48,0x5A,0xB0,0x5F,0x48,0x8D,0x48,0x10,0x8B,0x50,0x08,0x4C,0x8B,0xC3,0xC5,0xFA,0x6F,0x06,0xC5,0xFA,0x7F,0x44,0x24,0x48,0xC5,0xFA,0x6F,0x07,0xC5,0xFA,0x7F,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0x49,0x89,0x09,0x41,0x89,0x51,0x08,0x49,0x8B,0xC8,0x48,0x8D,0x54,0x24,0x48,0x4C,0x8D,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0xE8,0xA7,0xF8,0xFF,0xFF,0x48,0x8B,0xC3,0x48,0x83,0xC4,0x60,0x5B,0x5D,0x5E,0x5F,0x41,0x5C,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0xBF,0x0C,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x61,0x73,0xC3,0x5F,0x48,0x8B,0xF0,0xB9,0xC5,0x0C,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x4A,0x73,0xC3,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x58,0x45,0x88,0x30,0x41,0x89,0x68,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCF,0x41,0x8B,0xD4,0x48,0x8B,0x44,0x24,0x58,0x48,0x89,0x44,0x24,0x20,0xE8,0x1B,0x15,0xFF,0xFF,0x48,0x8B,0xC8,0xE8,0x8B,0xCD,0xAE,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> lt(ReadOnlySpan<ushort> lhs, ReadOnlySpan<ushort> rhs)
; location: [7FFC7C09CB30h, 7FFC7C09CC35h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push r12                      ; PUSH(Push_r64) [R12]                                 encoding(2 bytes) = 41 54
0006h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0007h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0008h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0009h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
000ah sub rsp,60h                   ; SUB(Sub_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 ec 60
000eh vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0011h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0014h lea rdi,[rsp+28h]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 7c 24 28
0019h mov ecx,0Ch                   ; MOV(Mov_r32_imm32) [ECX,ch:imm32]                    encoding(5 bytes) = b9 0c 00 00 00
001eh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0020h rep stosd                     ; STOSD(Stosd_m32_EAX) [mem(32u),EAX]                  encoding(2 bytes) = f3 ab
0022h mov rcx,rsi                   ; MOV(Mov_r64_rm64) [RCX,RSI]                          encoding(3 bytes) = 48 8b ce
0025h mov rbx,rcx                   ; MOV(Mov_r64_rm64) [RBX,RCX]                          encoding(3 bytes) = 48 8b d9
0028h mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
002bh mov rdi,r8                    ; MOV(Mov_r64_rm64) [RDI,R8]                           encoding(3 bytes) = 49 8b f8
002eh mov ebp,8Fh                   ; MOV(Mov_r32_imm32) [EBP,8fh:imm32]                   encoding(5 bytes) = bd 8f 00 00 00
0033h mov r14d,1                    ; MOV(Mov_r32_imm32) [R14D,1h:imm32]                   encoding(6 bytes) = 41 be 01 00 00 00
0039h mov r15d,[rsi+8]              ; MOV(Mov_r32_rm32) [R15D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 8b 7e 08
003dh mov r12d,[rdi+8]              ; MOV(Mov_r32_rm32) [R12D,mem(32u,RDI:br,DS:sr)]       encoding(4 bytes) = 44 8b 67 08
0041h cmp r15d,r12d                 ; CMP(Cmp_r32_rm32) [R15D,R12D]                        encoding(3 bytes) = 45 3b fc
0044h jne short 00abh               ; JNE(Jne_rel8_64) [ABh:jmp64]                         encoding(2 bytes) = 75 65
0046h movsxd rdx,r15d               ; MOVSXD(Movsxd_r64_rm32) [RDX,R15D]                   encoding(3 bytes) = 49 63 d7
0049h mov rcx,7FFC7C245DC8h         ; MOV(Mov_r64_imm64) [RCX,7ffc7c245dc8h:imm64]         encoding(10 bytes) = 48 b9 c8 5d 24 7c fc 7f 00 00
0053h call 7FFCDBBA24A0h            ; CALL(Call_rel32_64) [5FB05970h:jmp64]                encoding(5 bytes) = e8 18 59 b0 5f
0058h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
005ch mov edx,[rax+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 50 08
005fh mov r8,rbx                    ; MOV(Mov_r64_rm64) [R8,RBX]                           encoding(3 bytes) = 4c 8b c3
0062h vmovdqu xmm0,xmmword ptr [rsi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 06
0066h vmovdqu xmmword ptr [rsp+48h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 48
006ch vmovdqu xmm0,xmmword ptr [rdi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RDI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 07
0070h vmovdqu xmmword ptr [rsp+38h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 38
0076h lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
007bh mov [r9],rcx                  ; MOV(Mov_rm64_r64) [mem(64u,R9:br,DS:sr),RCX]         encoding(3 bytes) = 49 89 09
007eh mov [r9+8],edx                ; MOV(Mov_rm32_r32) [mem(32u,R9:br,DS:sr),EDX]         encoding(4 bytes) = 41 89 51 08
0082h mov rcx,r8                    ; MOV(Mov_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 8b c8
0085h lea rdx,[rsp+48h]             ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 54 24 48
008ah lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
008fh lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
0094h call 7FFC7C09C3D0h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFF8A0h:jmp64]        encoding(5 bytes) = e8 07 f8 ff ff
0099h mov rax,rbx                   ; MOV(Mov_r64_rm64) [RAX,RBX]                          encoding(3 bytes) = 48 8b c3
009ch add rsp,60h                   ; ADD(Add_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 c4 60
00a0h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
00a1h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
00a2h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
00a3h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
00a4h pop r12                       ; POP(Pop_r64) [R12]                                   encoding(2 bytes) = 41 5c
00a6h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
00a8h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
00aah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
00abh mov ecx,0CBFh                 ; MOV(Mov_r32_imm32) [ECX,cbfh:imm32]                  encoding(5 bytes) = b9 bf 0c 00 00
00b0h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
00bah call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC372F0h:jmp64]                encoding(5 bytes) = e8 31 72 c3 5f
00bfh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
00c2h mov ecx,0CC5h                 ; MOV(Mov_r32_imm32) [ECX,cc5h:imm32]                  encoding(5 bytes) = b9 c5 0c 00 00
00c7h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
00d1h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC372F0h:jmp64]                encoding(5 bytes) = e8 1a 72 c3 5f
00d6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00d9h lea r8,[rsp+58h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 58
00deh mov [r8],r14b                 ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),R14L]           encoding(3 bytes) = 45 88 30
00e1h mov [r8+4],ebp                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBP]         encoding(4 bytes) = 41 89 68 04
00e5h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00e8h mov ecx,r15d                  ; MOV(Mov_r32_rm32) [ECX,R15D]                         encoding(3 bytes) = 41 8b cf
00ebh mov edx,r12d                  ; MOV(Mov_r32_rm32) [EDX,R12D]                         encoding(3 bytes) = 41 8b d4
00eeh mov rax,[rsp+58h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 58
00f3h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00f8h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFF14E8h:jmp64]        encoding(5 bytes) = e8 eb 13 ff ff
00fdh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
0100h call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAECD60h:jmp64]                encoding(5 bytes) = e8 5b cc ae 5f
0105h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> ltBytes => new byte[262]{0x41,0x57,0x41,0x56,0x41,0x54,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x60,0xC5,0xF8,0x77,0x48,0x8B,0xF1,0x48,0x8D,0x7C,0x24,0x28,0xB9,0x0C,0x00,0x00,0x00,0x33,0xC0,0xF3,0xAB,0x48,0x8B,0xCE,0x48,0x8B,0xD9,0x48,0x8B,0xF2,0x49,0x8B,0xF8,0xBD,0x8F,0x00,0x00,0x00,0x41,0xBE,0x01,0x00,0x00,0x00,0x44,0x8B,0x7E,0x08,0x44,0x8B,0x67,0x08,0x45,0x3B,0xFC,0x75,0x65,0x49,0x63,0xD7,0x48,0xB9,0xC8,0x5D,0x24,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x18,0x59,0xB0,0x5F,0x48,0x8D,0x48,0x10,0x8B,0x50,0x08,0x4C,0x8B,0xC3,0xC5,0xFA,0x6F,0x06,0xC5,0xFA,0x7F,0x44,0x24,0x48,0xC5,0xFA,0x6F,0x07,0xC5,0xFA,0x7F,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0x49,0x89,0x09,0x41,0x89,0x51,0x08,0x49,0x8B,0xC8,0x48,0x8D,0x54,0x24,0x48,0x4C,0x8D,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0xE8,0x07,0xF8,0xFF,0xFF,0x48,0x8B,0xC3,0x48,0x83,0xC4,0x60,0x5B,0x5D,0x5E,0x5F,0x41,0x5C,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0xBF,0x0C,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x31,0x72,0xC3,0x5F,0x48,0x8B,0xF0,0xB9,0xC5,0x0C,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x1A,0x72,0xC3,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x58,0x45,0x88,0x30,0x41,0x89,0x68,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCF,0x41,0x8B,0xD4,0x48,0x8B,0x44,0x24,0x58,0x48,0x89,0x44,0x24,0x20,0xE8,0xEB,0x13,0xFF,0xFF,0x48,0x8B,0xC8,0xE8,0x5B,0xCC,0xAE,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> lt(ReadOnlySpan<int> lhs, ReadOnlySpan<int> rhs)
; location: [7FFC7C09CC60h, 7FFC7C09CD65h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push r12                      ; PUSH(Push_r64) [R12]                                 encoding(2 bytes) = 41 54
0006h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0007h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0008h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0009h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
000ah sub rsp,60h                   ; SUB(Sub_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 ec 60
000eh vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0011h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0014h lea rdi,[rsp+28h]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 7c 24 28
0019h mov ecx,0Ch                   ; MOV(Mov_r32_imm32) [ECX,ch:imm32]                    encoding(5 bytes) = b9 0c 00 00 00
001eh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0020h rep stosd                     ; STOSD(Stosd_m32_EAX) [mem(32u),EAX]                  encoding(2 bytes) = f3 ab
0022h mov rcx,rsi                   ; MOV(Mov_r64_rm64) [RCX,RSI]                          encoding(3 bytes) = 48 8b ce
0025h mov rbx,rcx                   ; MOV(Mov_r64_rm64) [RBX,RCX]                          encoding(3 bytes) = 48 8b d9
0028h mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
002bh mov rdi,r8                    ; MOV(Mov_r64_rm64) [RDI,R8]                           encoding(3 bytes) = 49 8b f8
002eh mov ebp,93h                   ; MOV(Mov_r32_imm32) [EBP,93h:imm32]                   encoding(5 bytes) = bd 93 00 00 00
0033h mov r14d,1                    ; MOV(Mov_r32_imm32) [R14D,1h:imm32]                   encoding(6 bytes) = 41 be 01 00 00 00
0039h mov r15d,[rsi+8]              ; MOV(Mov_r32_rm32) [R15D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 8b 7e 08
003dh mov r12d,[rdi+8]              ; MOV(Mov_r32_rm32) [R12D,mem(32u,RDI:br,DS:sr)]       encoding(4 bytes) = 44 8b 67 08
0041h cmp r15d,r12d                 ; CMP(Cmp_r32_rm32) [R15D,R12D]                        encoding(3 bytes) = 45 3b fc
0044h jne short 00abh               ; JNE(Jne_rel8_64) [ABh:jmp64]                         encoding(2 bytes) = 75 65
0046h movsxd rdx,r15d               ; MOVSXD(Movsxd_r64_rm32) [RDX,R15D]                   encoding(3 bytes) = 49 63 d7
0049h mov rcx,7FFC7C245DC8h         ; MOV(Mov_r64_imm64) [RCX,7ffc7c245dc8h:imm64]         encoding(10 bytes) = 48 b9 c8 5d 24 7c fc 7f 00 00
0053h call 7FFCDBBA24A0h            ; CALL(Call_rel32_64) [5FB05840h:jmp64]                encoding(5 bytes) = e8 e8 57 b0 5f
0058h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
005ch mov edx,[rax+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 50 08
005fh mov r8,rbx                    ; MOV(Mov_r64_rm64) [R8,RBX]                           encoding(3 bytes) = 4c 8b c3
0062h vmovdqu xmm0,xmmword ptr [rsi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 06
0066h vmovdqu xmmword ptr [rsp+48h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 48
006ch vmovdqu xmm0,xmmword ptr [rdi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RDI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 07
0070h vmovdqu xmmword ptr [rsp+38h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 38
0076h lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
007bh mov [r9],rcx                  ; MOV(Mov_rm64_r64) [mem(64u,R9:br,DS:sr),RCX]         encoding(3 bytes) = 49 89 09
007eh mov [r9+8],edx                ; MOV(Mov_rm32_r32) [mem(32u,R9:br,DS:sr),EDX]         encoding(4 bytes) = 41 89 51 08
0082h mov rcx,r8                    ; MOV(Mov_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 8b c8
0085h lea rdx,[rsp+48h]             ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 54 24 48
008ah lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
008fh lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
0094h call 7FFC7C09C460h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFF800h:jmp64]        encoding(5 bytes) = e8 67 f7 ff ff
0099h mov rax,rbx                   ; MOV(Mov_r64_rm64) [RAX,RBX]                          encoding(3 bytes) = 48 8b c3
009ch add rsp,60h                   ; ADD(Add_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 c4 60
00a0h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
00a1h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
00a2h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
00a3h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
00a4h pop r12                       ; POP(Pop_r64) [R12]                                   encoding(2 bytes) = 41 5c
00a6h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
00a8h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
00aah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
00abh mov ecx,0CBFh                 ; MOV(Mov_r32_imm32) [ECX,cbfh:imm32]                  encoding(5 bytes) = b9 bf 0c 00 00
00b0h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
00bah call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC371C0h:jmp64]                encoding(5 bytes) = e8 01 71 c3 5f
00bfh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
00c2h mov ecx,0CC5h                 ; MOV(Mov_r32_imm32) [ECX,cc5h:imm32]                  encoding(5 bytes) = b9 c5 0c 00 00
00c7h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
00d1h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC371C0h:jmp64]                encoding(5 bytes) = e8 ea 70 c3 5f
00d6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00d9h lea r8,[rsp+58h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 58
00deh mov [r8],r14b                 ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),R14L]           encoding(3 bytes) = 45 88 30
00e1h mov [r8+4],ebp                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBP]         encoding(4 bytes) = 41 89 68 04
00e5h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00e8h mov ecx,r15d                  ; MOV(Mov_r32_rm32) [ECX,R15D]                         encoding(3 bytes) = 41 8b cf
00ebh mov edx,r12d                  ; MOV(Mov_r32_rm32) [EDX,R12D]                         encoding(3 bytes) = 41 8b d4
00eeh mov rax,[rsp+58h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 58
00f3h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00f8h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFF13B8h:jmp64]        encoding(5 bytes) = e8 bb 12 ff ff
00fdh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
0100h call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAECC30h:jmp64]                encoding(5 bytes) = e8 2b cb ae 5f
0105h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> ltBytes => new byte[262]{0x41,0x57,0x41,0x56,0x41,0x54,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x60,0xC5,0xF8,0x77,0x48,0x8B,0xF1,0x48,0x8D,0x7C,0x24,0x28,0xB9,0x0C,0x00,0x00,0x00,0x33,0xC0,0xF3,0xAB,0x48,0x8B,0xCE,0x48,0x8B,0xD9,0x48,0x8B,0xF2,0x49,0x8B,0xF8,0xBD,0x93,0x00,0x00,0x00,0x41,0xBE,0x01,0x00,0x00,0x00,0x44,0x8B,0x7E,0x08,0x44,0x8B,0x67,0x08,0x45,0x3B,0xFC,0x75,0x65,0x49,0x63,0xD7,0x48,0xB9,0xC8,0x5D,0x24,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xE8,0x57,0xB0,0x5F,0x48,0x8D,0x48,0x10,0x8B,0x50,0x08,0x4C,0x8B,0xC3,0xC5,0xFA,0x6F,0x06,0xC5,0xFA,0x7F,0x44,0x24,0x48,0xC5,0xFA,0x6F,0x07,0xC5,0xFA,0x7F,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0x49,0x89,0x09,0x41,0x89,0x51,0x08,0x49,0x8B,0xC8,0x48,0x8D,0x54,0x24,0x48,0x4C,0x8D,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0xE8,0x67,0xF7,0xFF,0xFF,0x48,0x8B,0xC3,0x48,0x83,0xC4,0x60,0x5B,0x5D,0x5E,0x5F,0x41,0x5C,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0xBF,0x0C,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x01,0x71,0xC3,0x5F,0x48,0x8B,0xF0,0xB9,0xC5,0x0C,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xEA,0x70,0xC3,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x58,0x45,0x88,0x30,0x41,0x89,0x68,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCF,0x41,0x8B,0xD4,0x48,0x8B,0x44,0x24,0x58,0x48,0x89,0x44,0x24,0x20,0xE8,0xBB,0x12,0xFF,0xFF,0x48,0x8B,0xC8,0xE8,0x2B,0xCB,0xAE,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> lt(ReadOnlySpan<uint> lhs, ReadOnlySpan<uint> rhs)
; location: [7FFC7C09CD90h, 7FFC7C09CE95h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push r12                      ; PUSH(Push_r64) [R12]                                 encoding(2 bytes) = 41 54
0006h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0007h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0008h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0009h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
000ah sub rsp,60h                   ; SUB(Sub_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 ec 60
000eh vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0011h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0014h lea rdi,[rsp+28h]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 7c 24 28
0019h mov ecx,0Ch                   ; MOV(Mov_r32_imm32) [ECX,ch:imm32]                    encoding(5 bytes) = b9 0c 00 00 00
001eh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0020h rep stosd                     ; STOSD(Stosd_m32_EAX) [mem(32u),EAX]                  encoding(2 bytes) = f3 ab
0022h mov rcx,rsi                   ; MOV(Mov_r64_rm64) [RCX,RSI]                          encoding(3 bytes) = 48 8b ce
0025h mov rbx,rcx                   ; MOV(Mov_r64_rm64) [RBX,RCX]                          encoding(3 bytes) = 48 8b d9
0028h mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
002bh mov rdi,r8                    ; MOV(Mov_r64_rm64) [RDI,R8]                           encoding(3 bytes) = 49 8b f8
002eh mov ebp,97h                   ; MOV(Mov_r32_imm32) [EBP,97h:imm32]                   encoding(5 bytes) = bd 97 00 00 00
0033h mov r14d,1                    ; MOV(Mov_r32_imm32) [R14D,1h:imm32]                   encoding(6 bytes) = 41 be 01 00 00 00
0039h mov r15d,[rsi+8]              ; MOV(Mov_r32_rm32) [R15D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 8b 7e 08
003dh mov r12d,[rdi+8]              ; MOV(Mov_r32_rm32) [R12D,mem(32u,RDI:br,DS:sr)]       encoding(4 bytes) = 44 8b 67 08
0041h cmp r15d,r12d                 ; CMP(Cmp_r32_rm32) [R15D,R12D]                        encoding(3 bytes) = 45 3b fc
0044h jne short 00abh               ; JNE(Jne_rel8_64) [ABh:jmp64]                         encoding(2 bytes) = 75 65
0046h movsxd rdx,r15d               ; MOVSXD(Movsxd_r64_rm32) [RDX,R15D]                   encoding(3 bytes) = 49 63 d7
0049h mov rcx,7FFC7C245DC8h         ; MOV(Mov_r64_imm64) [RCX,7ffc7c245dc8h:imm64]         encoding(10 bytes) = 48 b9 c8 5d 24 7c fc 7f 00 00
0053h call 7FFCDBBA24A0h            ; CALL(Call_rel32_64) [5FB05710h:jmp64]                encoding(5 bytes) = e8 b8 56 b0 5f
0058h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
005ch mov edx,[rax+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 50 08
005fh mov r8,rbx                    ; MOV(Mov_r64_rm64) [R8,RBX]                           encoding(3 bytes) = 4c 8b c3
0062h vmovdqu xmm0,xmmword ptr [rsi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 06
0066h vmovdqu xmmword ptr [rsp+48h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 48
006ch vmovdqu xmm0,xmmword ptr [rdi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RDI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 07
0070h vmovdqu xmmword ptr [rsp+38h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 38
0076h lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
007bh mov [r9],rcx                  ; MOV(Mov_rm64_r64) [mem(64u,R9:br,DS:sr),RCX]         encoding(3 bytes) = 49 89 09
007eh mov [r9+8],edx                ; MOV(Mov_rm32_r32) [mem(32u,R9:br,DS:sr),EDX]         encoding(4 bytes) = 41 89 51 08
0082h mov rcx,r8                    ; MOV(Mov_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 8b c8
0085h lea rdx,[rsp+48h]             ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 54 24 48
008ah lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
008fh lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
0094h call 7FFC7C09C4E0h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFF750h:jmp64]        encoding(5 bytes) = e8 b7 f6 ff ff
0099h mov rax,rbx                   ; MOV(Mov_r64_rm64) [RAX,RBX]                          encoding(3 bytes) = 48 8b c3
009ch add rsp,60h                   ; ADD(Add_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 c4 60
00a0h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
00a1h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
00a2h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
00a3h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
00a4h pop r12                       ; POP(Pop_r64) [R12]                                   encoding(2 bytes) = 41 5c
00a6h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
00a8h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
00aah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
00abh mov ecx,0CBFh                 ; MOV(Mov_r32_imm32) [ECX,cbfh:imm32]                  encoding(5 bytes) = b9 bf 0c 00 00
00b0h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
00bah call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC37090h:jmp64]                encoding(5 bytes) = e8 d1 6f c3 5f
00bfh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
00c2h mov ecx,0CC5h                 ; MOV(Mov_r32_imm32) [ECX,cc5h:imm32]                  encoding(5 bytes) = b9 c5 0c 00 00
00c7h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
00d1h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC37090h:jmp64]                encoding(5 bytes) = e8 ba 6f c3 5f
00d6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00d9h lea r8,[rsp+58h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 58
00deh mov [r8],r14b                 ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),R14L]           encoding(3 bytes) = 45 88 30
00e1h mov [r8+4],ebp                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBP]         encoding(4 bytes) = 41 89 68 04
00e5h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00e8h mov ecx,r15d                  ; MOV(Mov_r32_rm32) [ECX,R15D]                         encoding(3 bytes) = 41 8b cf
00ebh mov edx,r12d                  ; MOV(Mov_r32_rm32) [EDX,R12D]                         encoding(3 bytes) = 41 8b d4
00eeh mov rax,[rsp+58h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 58
00f3h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00f8h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFF1288h:jmp64]        encoding(5 bytes) = e8 8b 11 ff ff
00fdh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
0100h call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAECB00h:jmp64]                encoding(5 bytes) = e8 fb c9 ae 5f
0105h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> ltBytes => new byte[262]{0x41,0x57,0x41,0x56,0x41,0x54,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x60,0xC5,0xF8,0x77,0x48,0x8B,0xF1,0x48,0x8D,0x7C,0x24,0x28,0xB9,0x0C,0x00,0x00,0x00,0x33,0xC0,0xF3,0xAB,0x48,0x8B,0xCE,0x48,0x8B,0xD9,0x48,0x8B,0xF2,0x49,0x8B,0xF8,0xBD,0x97,0x00,0x00,0x00,0x41,0xBE,0x01,0x00,0x00,0x00,0x44,0x8B,0x7E,0x08,0x44,0x8B,0x67,0x08,0x45,0x3B,0xFC,0x75,0x65,0x49,0x63,0xD7,0x48,0xB9,0xC8,0x5D,0x24,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xB8,0x56,0xB0,0x5F,0x48,0x8D,0x48,0x10,0x8B,0x50,0x08,0x4C,0x8B,0xC3,0xC5,0xFA,0x6F,0x06,0xC5,0xFA,0x7F,0x44,0x24,0x48,0xC5,0xFA,0x6F,0x07,0xC5,0xFA,0x7F,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0x49,0x89,0x09,0x41,0x89,0x51,0x08,0x49,0x8B,0xC8,0x48,0x8D,0x54,0x24,0x48,0x4C,0x8D,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0xE8,0xB7,0xF6,0xFF,0xFF,0x48,0x8B,0xC3,0x48,0x83,0xC4,0x60,0x5B,0x5D,0x5E,0x5F,0x41,0x5C,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0xBF,0x0C,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xD1,0x6F,0xC3,0x5F,0x48,0x8B,0xF0,0xB9,0xC5,0x0C,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xBA,0x6F,0xC3,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x58,0x45,0x88,0x30,0x41,0x89,0x68,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCF,0x41,0x8B,0xD4,0x48,0x8B,0x44,0x24,0x58,0x48,0x89,0x44,0x24,0x20,0xE8,0x8B,0x11,0xFF,0xFF,0x48,0x8B,0xC8,0xE8,0xFB,0xC9,0xAE,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> lt(ReadOnlySpan<long> lhs, ReadOnlySpan<long> rhs)
; location: [7FFC7C09CEC0h, 7FFC7C09CFC5h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push r12                      ; PUSH(Push_r64) [R12]                                 encoding(2 bytes) = 41 54
0006h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0007h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0008h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0009h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
000ah sub rsp,60h                   ; SUB(Sub_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 ec 60
000eh vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0011h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0014h lea rdi,[rsp+28h]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 7c 24 28
0019h mov ecx,0Ch                   ; MOV(Mov_r32_imm32) [ECX,ch:imm32]                    encoding(5 bytes) = b9 0c 00 00 00
001eh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0020h rep stosd                     ; STOSD(Stosd_m32_EAX) [mem(32u),EAX]                  encoding(2 bytes) = f3 ab
0022h mov rcx,rsi                   ; MOV(Mov_r64_rm64) [RCX,RSI]                          encoding(3 bytes) = 48 8b ce
0025h mov rbx,rcx                   ; MOV(Mov_r64_rm64) [RBX,RCX]                          encoding(3 bytes) = 48 8b d9
0028h mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
002bh mov rdi,r8                    ; MOV(Mov_r64_rm64) [RDI,R8]                           encoding(3 bytes) = 49 8b f8
002eh mov ebp,9Bh                   ; MOV(Mov_r32_imm32) [EBP,9bh:imm32]                   encoding(5 bytes) = bd 9b 00 00 00
0033h mov r14d,1                    ; MOV(Mov_r32_imm32) [R14D,1h:imm32]                   encoding(6 bytes) = 41 be 01 00 00 00
0039h mov r15d,[rsi+8]              ; MOV(Mov_r32_rm32) [R15D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 8b 7e 08
003dh mov r12d,[rdi+8]              ; MOV(Mov_r32_rm32) [R12D,mem(32u,RDI:br,DS:sr)]       encoding(4 bytes) = 44 8b 67 08
0041h cmp r15d,r12d                 ; CMP(Cmp_r32_rm32) [R15D,R12D]                        encoding(3 bytes) = 45 3b fc
0044h jne short 00abh               ; JNE(Jne_rel8_64) [ABh:jmp64]                         encoding(2 bytes) = 75 65
0046h movsxd rdx,r15d               ; MOVSXD(Movsxd_r64_rm32) [RDX,R15D]                   encoding(3 bytes) = 49 63 d7
0049h mov rcx,7FFC7C245DC8h         ; MOV(Mov_r64_imm64) [RCX,7ffc7c245dc8h:imm64]         encoding(10 bytes) = 48 b9 c8 5d 24 7c fc 7f 00 00
0053h call 7FFCDBBA24A0h            ; CALL(Call_rel32_64) [5FB055E0h:jmp64]                encoding(5 bytes) = e8 88 55 b0 5f
0058h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
005ch mov edx,[rax+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 50 08
005fh mov r8,rbx                    ; MOV(Mov_r64_rm64) [R8,RBX]                           encoding(3 bytes) = 4c 8b c3
0062h vmovdqu xmm0,xmmword ptr [rsi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 06
0066h vmovdqu xmmword ptr [rsp+48h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 48
006ch vmovdqu xmm0,xmmword ptr [rdi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RDI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 07
0070h vmovdqu xmmword ptr [rsp+38h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 38
0076h lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
007bh mov [r9],rcx                  ; MOV(Mov_rm64_r64) [mem(64u,R9:br,DS:sr),RCX]         encoding(3 bytes) = 49 89 09
007eh mov [r9+8],edx                ; MOV(Mov_rm32_r32) [mem(32u,R9:br,DS:sr),EDX]         encoding(4 bytes) = 41 89 51 08
0082h mov rcx,r8                    ; MOV(Mov_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 8b c8
0085h lea rdx,[rsp+48h]             ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 54 24 48
008ah lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
008fh lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
0094h call 7FFC7C09C560h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFF6A0h:jmp64]        encoding(5 bytes) = e8 07 f6 ff ff
0099h mov rax,rbx                   ; MOV(Mov_r64_rm64) [RAX,RBX]                          encoding(3 bytes) = 48 8b c3
009ch add rsp,60h                   ; ADD(Add_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 c4 60
00a0h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
00a1h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
00a2h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
00a3h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
00a4h pop r12                       ; POP(Pop_r64) [R12]                                   encoding(2 bytes) = 41 5c
00a6h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
00a8h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
00aah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
00abh mov ecx,0CBFh                 ; MOV(Mov_r32_imm32) [ECX,cbfh:imm32]                  encoding(5 bytes) = b9 bf 0c 00 00
00b0h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
00bah call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC36F60h:jmp64]                encoding(5 bytes) = e8 a1 6e c3 5f
00bfh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
00c2h mov ecx,0CC5h                 ; MOV(Mov_r32_imm32) [ECX,cc5h:imm32]                  encoding(5 bytes) = b9 c5 0c 00 00
00c7h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
00d1h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC36F60h:jmp64]                encoding(5 bytes) = e8 8a 6e c3 5f
00d6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00d9h lea r8,[rsp+58h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 58
00deh mov [r8],r14b                 ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),R14L]           encoding(3 bytes) = 45 88 30
00e1h mov [r8+4],ebp                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBP]         encoding(4 bytes) = 41 89 68 04
00e5h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00e8h mov ecx,r15d                  ; MOV(Mov_r32_rm32) [ECX,R15D]                         encoding(3 bytes) = 41 8b cf
00ebh mov edx,r12d                  ; MOV(Mov_r32_rm32) [EDX,R12D]                         encoding(3 bytes) = 41 8b d4
00eeh mov rax,[rsp+58h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 58
00f3h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00f8h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFF1158h:jmp64]        encoding(5 bytes) = e8 5b 10 ff ff
00fdh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
0100h call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAEC9D0h:jmp64]                encoding(5 bytes) = e8 cb c8 ae 5f
0105h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> ltBytes => new byte[262]{0x41,0x57,0x41,0x56,0x41,0x54,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x60,0xC5,0xF8,0x77,0x48,0x8B,0xF1,0x48,0x8D,0x7C,0x24,0x28,0xB9,0x0C,0x00,0x00,0x00,0x33,0xC0,0xF3,0xAB,0x48,0x8B,0xCE,0x48,0x8B,0xD9,0x48,0x8B,0xF2,0x49,0x8B,0xF8,0xBD,0x9B,0x00,0x00,0x00,0x41,0xBE,0x01,0x00,0x00,0x00,0x44,0x8B,0x7E,0x08,0x44,0x8B,0x67,0x08,0x45,0x3B,0xFC,0x75,0x65,0x49,0x63,0xD7,0x48,0xB9,0xC8,0x5D,0x24,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x88,0x55,0xB0,0x5F,0x48,0x8D,0x48,0x10,0x8B,0x50,0x08,0x4C,0x8B,0xC3,0xC5,0xFA,0x6F,0x06,0xC5,0xFA,0x7F,0x44,0x24,0x48,0xC5,0xFA,0x6F,0x07,0xC5,0xFA,0x7F,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0x49,0x89,0x09,0x41,0x89,0x51,0x08,0x49,0x8B,0xC8,0x48,0x8D,0x54,0x24,0x48,0x4C,0x8D,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0xE8,0x07,0xF6,0xFF,0xFF,0x48,0x8B,0xC3,0x48,0x83,0xC4,0x60,0x5B,0x5D,0x5E,0x5F,0x41,0x5C,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0xBF,0x0C,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xA1,0x6E,0xC3,0x5F,0x48,0x8B,0xF0,0xB9,0xC5,0x0C,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x8A,0x6E,0xC3,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x58,0x45,0x88,0x30,0x41,0x89,0x68,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCF,0x41,0x8B,0xD4,0x48,0x8B,0x44,0x24,0x58,0x48,0x89,0x44,0x24,0x20,0xE8,0x5B,0x10,0xFF,0xFF,0x48,0x8B,0xC8,0xE8,0xCB,0xC8,0xAE,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> lt(ReadOnlySpan<ulong> lhs, ReadOnlySpan<ulong> rhs)
; location: [7FFC7C09CFF0h, 7FFC7C09D0F5h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push r12                      ; PUSH(Push_r64) [R12]                                 encoding(2 bytes) = 41 54
0006h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0007h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0008h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0009h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
000ah sub rsp,60h                   ; SUB(Sub_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 ec 60
000eh vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0011h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0014h lea rdi,[rsp+28h]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 7c 24 28
0019h mov ecx,0Ch                   ; MOV(Mov_r32_imm32) [ECX,ch:imm32]                    encoding(5 bytes) = b9 0c 00 00 00
001eh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0020h rep stosd                     ; STOSD(Stosd_m32_EAX) [mem(32u),EAX]                  encoding(2 bytes) = f3 ab
0022h mov rcx,rsi                   ; MOV(Mov_r64_rm64) [RCX,RSI]                          encoding(3 bytes) = 48 8b ce
0025h mov rbx,rcx                   ; MOV(Mov_r64_rm64) [RBX,RCX]                          encoding(3 bytes) = 48 8b d9
0028h mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
002bh mov rdi,r8                    ; MOV(Mov_r64_rm64) [RDI,R8]                           encoding(3 bytes) = 49 8b f8
002eh mov ebp,9Fh                   ; MOV(Mov_r32_imm32) [EBP,9fh:imm32]                   encoding(5 bytes) = bd 9f 00 00 00
0033h mov r14d,1                    ; MOV(Mov_r32_imm32) [R14D,1h:imm32]                   encoding(6 bytes) = 41 be 01 00 00 00
0039h mov r15d,[rsi+8]              ; MOV(Mov_r32_rm32) [R15D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 8b 7e 08
003dh mov r12d,[rdi+8]              ; MOV(Mov_r32_rm32) [R12D,mem(32u,RDI:br,DS:sr)]       encoding(4 bytes) = 44 8b 67 08
0041h cmp r15d,r12d                 ; CMP(Cmp_r32_rm32) [R15D,R12D]                        encoding(3 bytes) = 45 3b fc
0044h jne short 00abh               ; JNE(Jne_rel8_64) [ABh:jmp64]                         encoding(2 bytes) = 75 65
0046h movsxd rdx,r15d               ; MOVSXD(Movsxd_r64_rm32) [RDX,R15D]                   encoding(3 bytes) = 49 63 d7
0049h mov rcx,7FFC7C245DC8h         ; MOV(Mov_r64_imm64) [RCX,7ffc7c245dc8h:imm64]         encoding(10 bytes) = 48 b9 c8 5d 24 7c fc 7f 00 00
0053h call 7FFCDBBA24A0h            ; CALL(Call_rel32_64) [5FB054B0h:jmp64]                encoding(5 bytes) = e8 58 54 b0 5f
0058h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
005ch mov edx,[rax+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 50 08
005fh mov r8,rbx                    ; MOV(Mov_r64_rm64) [R8,RBX]                           encoding(3 bytes) = 4c 8b c3
0062h vmovdqu xmm0,xmmword ptr [rsi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 06
0066h vmovdqu xmmword ptr [rsp+48h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 48
006ch vmovdqu xmm0,xmmword ptr [rdi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RDI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 07
0070h vmovdqu xmmword ptr [rsp+38h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 38
0076h lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
007bh mov [r9],rcx                  ; MOV(Mov_rm64_r64) [mem(64u,R9:br,DS:sr),RCX]         encoding(3 bytes) = 49 89 09
007eh mov [r9+8],edx                ; MOV(Mov_rm32_r32) [mem(32u,R9:br,DS:sr),EDX]         encoding(4 bytes) = 41 89 51 08
0082h mov rcx,r8                    ; MOV(Mov_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 8b c8
0085h lea rdx,[rsp+48h]             ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 54 24 48
008ah lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
008fh lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
0094h call 7FFC7C09C5F0h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFF600h:jmp64]        encoding(5 bytes) = e8 67 f5 ff ff
0099h mov rax,rbx                   ; MOV(Mov_r64_rm64) [RAX,RBX]                          encoding(3 bytes) = 48 8b c3
009ch add rsp,60h                   ; ADD(Add_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 c4 60
00a0h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
00a1h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
00a2h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
00a3h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
00a4h pop r12                       ; POP(Pop_r64) [R12]                                   encoding(2 bytes) = 41 5c
00a6h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
00a8h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
00aah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
00abh mov ecx,0CBFh                 ; MOV(Mov_r32_imm32) [ECX,cbfh:imm32]                  encoding(5 bytes) = b9 bf 0c 00 00
00b0h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
00bah call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC36E30h:jmp64]                encoding(5 bytes) = e8 71 6d c3 5f
00bfh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
00c2h mov ecx,0CC5h                 ; MOV(Mov_r32_imm32) [ECX,cc5h:imm32]                  encoding(5 bytes) = b9 c5 0c 00 00
00c7h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
00d1h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC36E30h:jmp64]                encoding(5 bytes) = e8 5a 6d c3 5f
00d6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00d9h lea r8,[rsp+58h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 58
00deh mov [r8],r14b                 ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),R14L]           encoding(3 bytes) = 45 88 30
00e1h mov [r8+4],ebp                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBP]         encoding(4 bytes) = 41 89 68 04
00e5h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00e8h mov ecx,r15d                  ; MOV(Mov_r32_rm32) [ECX,R15D]                         encoding(3 bytes) = 41 8b cf
00ebh mov edx,r12d                  ; MOV(Mov_r32_rm32) [EDX,R12D]                         encoding(3 bytes) = 41 8b d4
00eeh mov rax,[rsp+58h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 58
00f3h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00f8h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFF1028h:jmp64]        encoding(5 bytes) = e8 2b 0f ff ff
00fdh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
0100h call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAEC8A0h:jmp64]                encoding(5 bytes) = e8 9b c7 ae 5f
0105h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> ltBytes => new byte[262]{0x41,0x57,0x41,0x56,0x41,0x54,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x60,0xC5,0xF8,0x77,0x48,0x8B,0xF1,0x48,0x8D,0x7C,0x24,0x28,0xB9,0x0C,0x00,0x00,0x00,0x33,0xC0,0xF3,0xAB,0x48,0x8B,0xCE,0x48,0x8B,0xD9,0x48,0x8B,0xF2,0x49,0x8B,0xF8,0xBD,0x9F,0x00,0x00,0x00,0x41,0xBE,0x01,0x00,0x00,0x00,0x44,0x8B,0x7E,0x08,0x44,0x8B,0x67,0x08,0x45,0x3B,0xFC,0x75,0x65,0x49,0x63,0xD7,0x48,0xB9,0xC8,0x5D,0x24,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x58,0x54,0xB0,0x5F,0x48,0x8D,0x48,0x10,0x8B,0x50,0x08,0x4C,0x8B,0xC3,0xC5,0xFA,0x6F,0x06,0xC5,0xFA,0x7F,0x44,0x24,0x48,0xC5,0xFA,0x6F,0x07,0xC5,0xFA,0x7F,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0x49,0x89,0x09,0x41,0x89,0x51,0x08,0x49,0x8B,0xC8,0x48,0x8D,0x54,0x24,0x48,0x4C,0x8D,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0xE8,0x67,0xF5,0xFF,0xFF,0x48,0x8B,0xC3,0x48,0x83,0xC4,0x60,0x5B,0x5D,0x5E,0x5F,0x41,0x5C,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0xBF,0x0C,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x71,0x6D,0xC3,0x5F,0x48,0x8B,0xF0,0xB9,0xC5,0x0C,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x5A,0x6D,0xC3,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x58,0x45,0x88,0x30,0x41,0x89,0x68,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCF,0x41,0x8B,0xD4,0x48,0x8B,0x44,0x24,0x58,0x48,0x89,0x44,0x24,0x20,0xE8,0x2B,0x0F,0xFF,0xFF,0x48,0x8B,0xC8,0xE8,0x9B,0xC7,0xAE,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> lt(ReadOnlySpan<float> lhs, ReadOnlySpan<float> rhs)
; location: [7FFC7C09D120h, 7FFC7C09D225h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push r12                      ; PUSH(Push_r64) [R12]                                 encoding(2 bytes) = 41 54
0006h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0007h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0008h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0009h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
000ah sub rsp,60h                   ; SUB(Sub_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 ec 60
000eh vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0011h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0014h lea rdi,[rsp+28h]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 7c 24 28
0019h mov ecx,0Ch                   ; MOV(Mov_r32_imm32) [ECX,ch:imm32]                    encoding(5 bytes) = b9 0c 00 00 00
001eh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0020h rep stosd                     ; STOSD(Stosd_m32_EAX) [mem(32u),EAX]                  encoding(2 bytes) = f3 ab
0022h mov rcx,rsi                   ; MOV(Mov_r64_rm64) [RCX,RSI]                          encoding(3 bytes) = 48 8b ce
0025h mov rbx,rcx                   ; MOV(Mov_r64_rm64) [RBX,RCX]                          encoding(3 bytes) = 48 8b d9
0028h mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
002bh mov rdi,r8                    ; MOV(Mov_r64_rm64) [RDI,R8]                           encoding(3 bytes) = 49 8b f8
002eh mov ebp,0A3h                  ; MOV(Mov_r32_imm32) [EBP,a3h:imm32]                   encoding(5 bytes) = bd a3 00 00 00
0033h mov r14d,1                    ; MOV(Mov_r32_imm32) [R14D,1h:imm32]                   encoding(6 bytes) = 41 be 01 00 00 00
0039h mov r15d,[rsi+8]              ; MOV(Mov_r32_rm32) [R15D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 8b 7e 08
003dh mov r12d,[rdi+8]              ; MOV(Mov_r32_rm32) [R12D,mem(32u,RDI:br,DS:sr)]       encoding(4 bytes) = 44 8b 67 08
0041h cmp r15d,r12d                 ; CMP(Cmp_r32_rm32) [R15D,R12D]                        encoding(3 bytes) = 45 3b fc
0044h jne short 00abh               ; JNE(Jne_rel8_64) [ABh:jmp64]                         encoding(2 bytes) = 75 65
0046h movsxd rdx,r15d               ; MOVSXD(Movsxd_r64_rm32) [RDX,R15D]                   encoding(3 bytes) = 49 63 d7
0049h mov rcx,7FFC7C245DC8h         ; MOV(Mov_r64_imm64) [RCX,7ffc7c245dc8h:imm64]         encoding(10 bytes) = 48 b9 c8 5d 24 7c fc 7f 00 00
0053h call 7FFCDBBA24A0h            ; CALL(Call_rel32_64) [5FB05380h:jmp64]                encoding(5 bytes) = e8 28 53 b0 5f
0058h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
005ch mov edx,[rax+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 50 08
005fh mov r8,rbx                    ; MOV(Mov_r64_rm64) [R8,RBX]                           encoding(3 bytes) = 4c 8b c3
0062h vmovdqu xmm0,xmmword ptr [rsi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 06
0066h vmovdqu xmmword ptr [rsp+48h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 48
006ch vmovdqu xmm0,xmmword ptr [rdi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RDI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 07
0070h vmovdqu xmmword ptr [rsp+38h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 38
0076h lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
007bh mov [r9],rcx                  ; MOV(Mov_rm64_r64) [mem(64u,R9:br,DS:sr),RCX]         encoding(3 bytes) = 49 89 09
007eh mov [r9+8],edx                ; MOV(Mov_rm32_r32) [mem(32u,R9:br,DS:sr),EDX]         encoding(4 bytes) = 41 89 51 08
0082h mov rcx,r8                    ; MOV(Mov_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 8b c8
0085h lea rdx,[rsp+48h]             ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 54 24 48
008ah lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
008fh lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
0094h call 7FFC7C09C680h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFF560h:jmp64]        encoding(5 bytes) = e8 c7 f4 ff ff
0099h mov rax,rbx                   ; MOV(Mov_r64_rm64) [RAX,RBX]                          encoding(3 bytes) = 48 8b c3
009ch add rsp,60h                   ; ADD(Add_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 c4 60
00a0h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
00a1h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
00a2h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
00a3h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
00a4h pop r12                       ; POP(Pop_r64) [R12]                                   encoding(2 bytes) = 41 5c
00a6h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
00a8h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
00aah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
00abh mov ecx,0CBFh                 ; MOV(Mov_r32_imm32) [ECX,cbfh:imm32]                  encoding(5 bytes) = b9 bf 0c 00 00
00b0h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
00bah call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC36D00h:jmp64]                encoding(5 bytes) = e8 41 6c c3 5f
00bfh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
00c2h mov ecx,0CC5h                 ; MOV(Mov_r32_imm32) [ECX,cc5h:imm32]                  encoding(5 bytes) = b9 c5 0c 00 00
00c7h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
00d1h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC36D00h:jmp64]                encoding(5 bytes) = e8 2a 6c c3 5f
00d6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00d9h lea r8,[rsp+58h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 58
00deh mov [r8],r14b                 ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),R14L]           encoding(3 bytes) = 45 88 30
00e1h mov [r8+4],ebp                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBP]         encoding(4 bytes) = 41 89 68 04
00e5h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00e8h mov ecx,r15d                  ; MOV(Mov_r32_rm32) [ECX,R15D]                         encoding(3 bytes) = 41 8b cf
00ebh mov edx,r12d                  ; MOV(Mov_r32_rm32) [EDX,R12D]                         encoding(3 bytes) = 41 8b d4
00eeh mov rax,[rsp+58h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 58
00f3h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00f8h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFF0EF8h:jmp64]        encoding(5 bytes) = e8 fb 0d ff ff
00fdh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
0100h call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAEC770h:jmp64]                encoding(5 bytes) = e8 6b c6 ae 5f
0105h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> ltBytes => new byte[262]{0x41,0x57,0x41,0x56,0x41,0x54,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x60,0xC5,0xF8,0x77,0x48,0x8B,0xF1,0x48,0x8D,0x7C,0x24,0x28,0xB9,0x0C,0x00,0x00,0x00,0x33,0xC0,0xF3,0xAB,0x48,0x8B,0xCE,0x48,0x8B,0xD9,0x48,0x8B,0xF2,0x49,0x8B,0xF8,0xBD,0xA3,0x00,0x00,0x00,0x41,0xBE,0x01,0x00,0x00,0x00,0x44,0x8B,0x7E,0x08,0x44,0x8B,0x67,0x08,0x45,0x3B,0xFC,0x75,0x65,0x49,0x63,0xD7,0x48,0xB9,0xC8,0x5D,0x24,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x28,0x53,0xB0,0x5F,0x48,0x8D,0x48,0x10,0x8B,0x50,0x08,0x4C,0x8B,0xC3,0xC5,0xFA,0x6F,0x06,0xC5,0xFA,0x7F,0x44,0x24,0x48,0xC5,0xFA,0x6F,0x07,0xC5,0xFA,0x7F,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0x49,0x89,0x09,0x41,0x89,0x51,0x08,0x49,0x8B,0xC8,0x48,0x8D,0x54,0x24,0x48,0x4C,0x8D,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0xE8,0xC7,0xF4,0xFF,0xFF,0x48,0x8B,0xC3,0x48,0x83,0xC4,0x60,0x5B,0x5D,0x5E,0x5F,0x41,0x5C,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0xBF,0x0C,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x41,0x6C,0xC3,0x5F,0x48,0x8B,0xF0,0xB9,0xC5,0x0C,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x2A,0x6C,0xC3,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x58,0x45,0x88,0x30,0x41,0x89,0x68,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCF,0x41,0x8B,0xD4,0x48,0x8B,0x44,0x24,0x58,0x48,0x89,0x44,0x24,0x20,0xE8,0xFB,0x0D,0xFF,0xFF,0x48,0x8B,0xC8,0xE8,0x6B,0xC6,0xAE,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> lt(ReadOnlySpan<double> lhs, ReadOnlySpan<double> rhs)
; location: [7FFC7C09D250h, 7FFC7C09D355h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push r12                      ; PUSH(Push_r64) [R12]                                 encoding(2 bytes) = 41 54
0006h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0007h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0008h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0009h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
000ah sub rsp,60h                   ; SUB(Sub_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 ec 60
000eh vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0011h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0014h lea rdi,[rsp+28h]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 7c 24 28
0019h mov ecx,0Ch                   ; MOV(Mov_r32_imm32) [ECX,ch:imm32]                    encoding(5 bytes) = b9 0c 00 00 00
001eh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0020h rep stosd                     ; STOSD(Stosd_m32_EAX) [mem(32u),EAX]                  encoding(2 bytes) = f3 ab
0022h mov rcx,rsi                   ; MOV(Mov_r64_rm64) [RCX,RSI]                          encoding(3 bytes) = 48 8b ce
0025h mov rbx,rcx                   ; MOV(Mov_r64_rm64) [RBX,RCX]                          encoding(3 bytes) = 48 8b d9
0028h mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
002bh mov rdi,r8                    ; MOV(Mov_r64_rm64) [RDI,R8]                           encoding(3 bytes) = 49 8b f8
002eh mov ebp,0A7h                  ; MOV(Mov_r32_imm32) [EBP,a7h:imm32]                   encoding(5 bytes) = bd a7 00 00 00
0033h mov r14d,1                    ; MOV(Mov_r32_imm32) [R14D,1h:imm32]                   encoding(6 bytes) = 41 be 01 00 00 00
0039h mov r15d,[rsi+8]              ; MOV(Mov_r32_rm32) [R15D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 8b 7e 08
003dh mov r12d,[rdi+8]              ; MOV(Mov_r32_rm32) [R12D,mem(32u,RDI:br,DS:sr)]       encoding(4 bytes) = 44 8b 67 08
0041h cmp r15d,r12d                 ; CMP(Cmp_r32_rm32) [R15D,R12D]                        encoding(3 bytes) = 45 3b fc
0044h jne short 00abh               ; JNE(Jne_rel8_64) [ABh:jmp64]                         encoding(2 bytes) = 75 65
0046h movsxd rdx,r15d               ; MOVSXD(Movsxd_r64_rm32) [RDX,R15D]                   encoding(3 bytes) = 49 63 d7
0049h mov rcx,7FFC7C245DC8h         ; MOV(Mov_r64_imm64) [RCX,7ffc7c245dc8h:imm64]         encoding(10 bytes) = 48 b9 c8 5d 24 7c fc 7f 00 00
0053h call 7FFCDBBA24A0h            ; CALL(Call_rel32_64) [5FB05250h:jmp64]                encoding(5 bytes) = e8 f8 51 b0 5f
0058h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
005ch mov edx,[rax+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 50 08
005fh mov r8,rbx                    ; MOV(Mov_r64_rm64) [R8,RBX]                           encoding(3 bytes) = 4c 8b c3
0062h vmovdqu xmm0,xmmword ptr [rsi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 06
0066h vmovdqu xmmword ptr [rsp+48h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 48
006ch vmovdqu xmm0,xmmword ptr [rdi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RDI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 07
0070h vmovdqu xmmword ptr [rsp+38h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 38
0076h lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
007bh mov [r9],rcx                  ; MOV(Mov_rm64_r64) [mem(64u,R9:br,DS:sr),RCX]         encoding(3 bytes) = 49 89 09
007eh mov [r9+8],edx                ; MOV(Mov_rm32_r32) [mem(32u,R9:br,DS:sr),EDX]         encoding(4 bytes) = 41 89 51 08
0082h mov rcx,r8                    ; MOV(Mov_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 8b c8
0085h lea rdx,[rsp+48h]             ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 54 24 48
008ah lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
008fh lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
0094h call 7FFC7C09C710h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFF4C0h:jmp64]        encoding(5 bytes) = e8 27 f4 ff ff
0099h mov rax,rbx                   ; MOV(Mov_r64_rm64) [RAX,RBX]                          encoding(3 bytes) = 48 8b c3
009ch add rsp,60h                   ; ADD(Add_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 c4 60
00a0h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
00a1h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
00a2h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
00a3h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
00a4h pop r12                       ; POP(Pop_r64) [R12]                                   encoding(2 bytes) = 41 5c
00a6h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
00a8h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
00aah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
00abh mov ecx,0CBFh                 ; MOV(Mov_r32_imm32) [ECX,cbfh:imm32]                  encoding(5 bytes) = b9 bf 0c 00 00
00b0h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
00bah call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC36BD0h:jmp64]                encoding(5 bytes) = e8 11 6b c3 5f
00bfh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
00c2h mov ecx,0CC5h                 ; MOV(Mov_r32_imm32) [ECX,cc5h:imm32]                  encoding(5 bytes) = b9 c5 0c 00 00
00c7h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
00d1h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC36BD0h:jmp64]                encoding(5 bytes) = e8 fa 6a c3 5f
00d6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00d9h lea r8,[rsp+58h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 58
00deh mov [r8],r14b                 ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),R14L]           encoding(3 bytes) = 45 88 30
00e1h mov [r8+4],ebp                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBP]         encoding(4 bytes) = 41 89 68 04
00e5h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00e8h mov ecx,r15d                  ; MOV(Mov_r32_rm32) [ECX,R15D]                         encoding(3 bytes) = 41 8b cf
00ebh mov edx,r12d                  ; MOV(Mov_r32_rm32) [EDX,R12D]                         encoding(3 bytes) = 41 8b d4
00eeh mov rax,[rsp+58h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 58
00f3h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00f8h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFF0DC8h:jmp64]        encoding(5 bytes) = e8 cb 0c ff ff
00fdh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
0100h call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAEC640h:jmp64]                encoding(5 bytes) = e8 3b c5 ae 5f
0105h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> ltBytes => new byte[262]{0x41,0x57,0x41,0x56,0x41,0x54,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x60,0xC5,0xF8,0x77,0x48,0x8B,0xF1,0x48,0x8D,0x7C,0x24,0x28,0xB9,0x0C,0x00,0x00,0x00,0x33,0xC0,0xF3,0xAB,0x48,0x8B,0xCE,0x48,0x8B,0xD9,0x48,0x8B,0xF2,0x49,0x8B,0xF8,0xBD,0xA7,0x00,0x00,0x00,0x41,0xBE,0x01,0x00,0x00,0x00,0x44,0x8B,0x7E,0x08,0x44,0x8B,0x67,0x08,0x45,0x3B,0xFC,0x75,0x65,0x49,0x63,0xD7,0x48,0xB9,0xC8,0x5D,0x24,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xF8,0x51,0xB0,0x5F,0x48,0x8D,0x48,0x10,0x8B,0x50,0x08,0x4C,0x8B,0xC3,0xC5,0xFA,0x6F,0x06,0xC5,0xFA,0x7F,0x44,0x24,0x48,0xC5,0xFA,0x6F,0x07,0xC5,0xFA,0x7F,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0x49,0x89,0x09,0x41,0x89,0x51,0x08,0x49,0x8B,0xC8,0x48,0x8D,0x54,0x24,0x48,0x4C,0x8D,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0xE8,0x27,0xF4,0xFF,0xFF,0x48,0x8B,0xC3,0x48,0x83,0xC4,0x60,0x5B,0x5D,0x5E,0x5F,0x41,0x5C,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0xBF,0x0C,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x11,0x6B,0xC3,0x5F,0x48,0x8B,0xF0,0xB9,0xC5,0x0C,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xFA,0x6A,0xC3,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x58,0x45,0x88,0x30,0x41,0x89,0x68,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCF,0x41,0x8B,0xD4,0x48,0x8B,0x44,0x24,0x58,0x48,0x89,0x44,0x24,0x20,0xE8,0xCB,0x0C,0xFF,0xFF,0x48,0x8B,0xC8,0xE8,0x3B,0xC5,0xAE,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool lteq(byte lhs, byte rhs)
; location: [7FFC7C09D3B0h, 7FFC7C09D3C3h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0008h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
000bh cmp eax,edx                   ; CMP(Cmp_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 3b c2
000dh setle al                      ; SETLE(Setle_rm8) [AL]                                encoding(3 bytes) = 0f 9e c0
0010h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> lteqBytes => new byte[20]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC1,0x0F,0xB6,0xD2,0x3B,0xC2,0x0F,0x9E,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool lteq(short lhs, short rhs)
; location: [7FFC7C09D3E0h, 7FFC7C09D3F5h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cx                  ; MOVSX(Movsx_r64_rm16) [RAX,CX]                       encoding(4 bytes) = 48 0f bf c1
0009h movsx rdx,dx                  ; MOVSX(Movsx_r64_rm16) [RDX,DX]                       encoding(4 bytes) = 48 0f bf d2
000dh cmp eax,edx                   ; CMP(Cmp_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 3b c2
000fh setle al                      ; SETLE(Setle_rm8) [AL]                                encoding(3 bytes) = 0f 9e c0
0012h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0015h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> lteqBytes => new byte[22]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBF,0xC1,0x48,0x0F,0xBF,0xD2,0x3B,0xC2,0x0F,0x9E,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool lteq(ushort lhs, ushort rhs)
; location: [7FFC7C09D410h, 7FFC7C09D423h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cx                  ; MOVZX(Movzx_r32_rm16) [EAX,CX]                       encoding(3 bytes) = 0f b7 c1
0008h movzx edx,dx                  ; MOVZX(Movzx_r32_rm16) [EDX,DX]                       encoding(3 bytes) = 0f b7 d2
000bh cmp eax,edx                   ; CMP(Cmp_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 3b c2
000dh setle al                      ; SETLE(Setle_rm8) [AL]                                encoding(3 bytes) = 0f 9e c0
0010h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> lteqBytes => new byte[20]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB7,0xC1,0x0F,0xB7,0xD2,0x3B,0xC2,0x0F,0x9E,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool lteq(int lhs, int rhs)
; location: [7FFC7C09D440h, 7FFC7C09D44Dh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h cmp ecx,edx                   ; CMP(Cmp_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 3b ca
0007h setle al                      ; SETLE(Setle_rm8) [AL]                                encoding(3 bytes) = 0f 9e c0
000ah movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> lteqBytes => new byte[14]{0x0F,0x1F,0x44,0x00,0x00,0x3B,0xCA,0x0F,0x9E,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> lteq(ReadOnlySpan<byte> lhs, ReadOnlySpan<byte> rhs, Span<bool> dst)
; location: [7FFC7C09D5B0h, 7FFC7C09D614h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0003h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0004h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0008h mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000bh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000fh mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0012h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0015h xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
0018h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
001ah jle short 004ch               ; JLE(Jle_rel8_64) [4Ch:jmp64]                         encoding(2 bytes) = 7e 30
001ch cmp r11d,r9d                  ; CMP(Cmp_r32_rm32) [R11D,R9D]                         encoding(3 bytes) = 45 3b d9
001fh jae short 005fh               ; JAE(Jae_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 73 3e
0021h movsxd rsi,r11d               ; MOVSXD(Movsxd_r64_rm32) [RSI,R11D]                   encoding(3 bytes) = 49 63 f3
0024h lea rdi,[rax+rsi]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 30
0028h movzx ebx,byte ptr [r10+rsi]  ; MOVZX(Movzx_r32_rm8) [EBX,mem(8u,R10:br,DS:sr)]      encoding(5 bytes) = 41 0f b6 1c 32
002dh cmp r11d,[r8+8]               ; CMP(Cmp_r32_rm32) [R11D,mem(32u,R8:br,DS:sr)]        encoding(4 bytes) = 45 3b 58 08
0031h jae short 005fh               ; JAE(Jae_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 73 2c
0033h mov rbp,[r8]                  ; MOV(Mov_r64_rm64) [RBP,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 28
0036h movzx esi,byte ptr [rsi+rbp]  ; MOVZX(Movzx_r32_rm8) [ESI,mem(8u,RSI:br,DS:sr)]      encoding(5 bytes) = 40 0f b6 34 2e
003bh cmp ebx,esi                   ; CMP(Cmp_r32_rm32) [EBX,ESI]                          encoding(2 bytes) = 3b de
003dh setle sil                     ; SETLE(Setle_rm8) [SIL]                               encoding(4 bytes) = 40 0f 9e c6
0041h mov [rdi],sil                 ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),SIL]           encoding(3 bytes) = 40 88 37
0044h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
0047h cmp r11d,edx                  ; CMP(Cmp_r32_rm32) [R11D,EDX]                         encoding(3 bytes) = 44 3b da
004ah jl short 001ch                ; JL(Jl_rel8_64) [1Ch:jmp64]                           encoding(2 bytes) = 7c d0
004ch mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
004fh mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0053h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0056h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
005ah pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
005bh pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
005ch pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
005dh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
005eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
005fh call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC36090h:jmp64]                encoding(5 bytes) = e8 2c 60 c3 5f
0064h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> lteqBytes => new byte[101]{0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x12,0x8B,0x52,0x08,0x45,0x33,0xDB,0x85,0xD2,0x7E,0x30,0x45,0x3B,0xD9,0x73,0x3E,0x49,0x63,0xF3,0x48,0x8D,0x3C,0x30,0x41,0x0F,0xB6,0x1C,0x32,0x45,0x3B,0x58,0x08,0x73,0x2C,0x49,0x8B,0x28,0x40,0x0F,0xB6,0x34,0x2E,0x3B,0xDE,0x40,0x0F,0x9E,0xC6,0x40,0x88,0x37,0x41,0xFF,0xC3,0x44,0x3B,0xDA,0x7C,0xD0,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0xC3,0xE8,0x2C,0x60,0xC3,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> lteq(ReadOnlySpan<sbyte> lhs, ReadOnlySpan<sbyte> rhs)
; location: [7FFC7C09DAA0h, 7FFC7C09DBA5h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push r12                      ; PUSH(Push_r64) [R12]                                 encoding(2 bytes) = 41 54
0006h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0007h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0008h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0009h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
000ah sub rsp,60h                   ; SUB(Sub_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 ec 60
000eh vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0011h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0014h lea rdi,[rsp+28h]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 7c 24 28
0019h mov ecx,0Ch                   ; MOV(Mov_r32_imm32) [ECX,ch:imm32]                    encoding(5 bytes) = b9 0c 00 00 00
001eh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0020h rep stosd                     ; STOSD(Stosd_m32_EAX) [mem(32u),EAX]                  encoding(2 bytes) = f3 ab
0022h mov rcx,rsi                   ; MOV(Mov_r64_rm64) [RCX,RSI]                          encoding(3 bytes) = 48 8b ce
0025h mov rbx,rcx                   ; MOV(Mov_r64_rm64) [RBX,RCX]                          encoding(3 bytes) = 48 8b d9
0028h mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
002bh mov rdi,r8                    ; MOV(Mov_r64_rm64) [RDI,R8]                           encoding(3 bytes) = 49 8b f8
002eh mov ebp,82h                   ; MOV(Mov_r32_imm32) [EBP,82h:imm32]                   encoding(5 bytes) = bd 82 00 00 00
0033h mov r14d,1                    ; MOV(Mov_r32_imm32) [R14D,1h:imm32]                   encoding(6 bytes) = 41 be 01 00 00 00
0039h mov r15d,[rsi+8]              ; MOV(Mov_r32_rm32) [R15D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 8b 7e 08
003dh mov r12d,[rdi+8]              ; MOV(Mov_r32_rm32) [R12D,mem(32u,RDI:br,DS:sr)]       encoding(4 bytes) = 44 8b 67 08
0041h cmp r15d,r12d                 ; CMP(Cmp_r32_rm32) [R15D,R12D]                        encoding(3 bytes) = 45 3b fc
0044h jne short 00abh               ; JNE(Jne_rel8_64) [ABh:jmp64]                         encoding(2 bytes) = 75 65
0046h movsxd rdx,r15d               ; MOVSXD(Movsxd_r64_rm32) [RDX,R15D]                   encoding(3 bytes) = 49 63 d7
0049h mov rcx,7FFC7C245DC8h         ; MOV(Mov_r64_imm64) [RCX,7ffc7c245dc8h:imm64]         encoding(10 bytes) = 48 b9 c8 5d 24 7c fc 7f 00 00
0053h call 7FFCDBBA24A0h            ; CALL(Call_rel32_64) [5FB04A00h:jmp64]                encoding(5 bytes) = e8 a8 49 b0 5f
0058h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
005ch mov edx,[rax+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 50 08
005fh mov r8,rbx                    ; MOV(Mov_r64_rm64) [R8,RBX]                           encoding(3 bytes) = 4c 8b c3
0062h vmovdqu xmm0,xmmword ptr [rsi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 06
0066h vmovdqu xmmword ptr [rsp+48h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 48
006ch vmovdqu xmm0,xmmword ptr [rdi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RDI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 07
0070h vmovdqu xmmword ptr [rsp+38h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 38
0076h lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
007bh mov [r9],rcx                  ; MOV(Mov_rm64_r64) [mem(64u,R9:br,DS:sr),RCX]         encoding(3 bytes) = 49 89 09
007eh mov [r9+8],edx                ; MOV(Mov_rm32_r32) [mem(32u,R9:br,DS:sr),EDX]         encoding(4 bytes) = 41 89 51 08
0082h mov rcx,r8                    ; MOV(Mov_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 8b c8
0085h lea rdx,[rsp+48h]             ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 54 24 48
008ah lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
008fh lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
0094h call 7FFC7C09D520h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFFA80h:jmp64]        encoding(5 bytes) = e8 e7 f9 ff ff
0099h mov rax,rbx                   ; MOV(Mov_r64_rm64) [RAX,RBX]                          encoding(3 bytes) = 48 8b c3
009ch add rsp,60h                   ; ADD(Add_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 c4 60
00a0h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
00a1h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
00a2h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
00a3h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
00a4h pop r12                       ; POP(Pop_r64) [R12]                                   encoding(2 bytes) = 41 5c
00a6h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
00a8h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
00aah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
00abh mov ecx,0D19h                 ; MOV(Mov_r32_imm32) [ECX,d19h:imm32]                  encoding(5 bytes) = b9 19 0d 00 00
00b0h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
00bah call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC36380h:jmp64]                encoding(5 bytes) = e8 c1 62 c3 5f
00bfh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
00c2h mov ecx,0D23h                 ; MOV(Mov_r32_imm32) [ECX,d23h:imm32]                  encoding(5 bytes) = b9 23 0d 00 00
00c7h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
00d1h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC36380h:jmp64]                encoding(5 bytes) = e8 aa 62 c3 5f
00d6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00d9h lea r8,[rsp+58h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 58
00deh mov [r8],r14b                 ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),R14L]           encoding(3 bytes) = 45 88 30
00e1h mov [r8+4],ebp                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBP]         encoding(4 bytes) = 41 89 68 04
00e5h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00e8h mov ecx,r15d                  ; MOV(Mov_r32_rm32) [ECX,R15D]                         encoding(3 bytes) = 41 8b cf
00ebh mov edx,r12d                  ; MOV(Mov_r32_rm32) [EDX,R12D]                         encoding(3 bytes) = 41 8b d4
00eeh mov rax,[rsp+58h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 58
00f3h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00f8h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFF0578h:jmp64]        encoding(5 bytes) = e8 7b 04 ff ff
00fdh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
0100h call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAEBDF0h:jmp64]                encoding(5 bytes) = e8 eb bc ae 5f
0105h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> lteqBytes => new byte[262]{0x41,0x57,0x41,0x56,0x41,0x54,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x60,0xC5,0xF8,0x77,0x48,0x8B,0xF1,0x48,0x8D,0x7C,0x24,0x28,0xB9,0x0C,0x00,0x00,0x00,0x33,0xC0,0xF3,0xAB,0x48,0x8B,0xCE,0x48,0x8B,0xD9,0x48,0x8B,0xF2,0x49,0x8B,0xF8,0xBD,0x82,0x00,0x00,0x00,0x41,0xBE,0x01,0x00,0x00,0x00,0x44,0x8B,0x7E,0x08,0x44,0x8B,0x67,0x08,0x45,0x3B,0xFC,0x75,0x65,0x49,0x63,0xD7,0x48,0xB9,0xC8,0x5D,0x24,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xA8,0x49,0xB0,0x5F,0x48,0x8D,0x48,0x10,0x8B,0x50,0x08,0x4C,0x8B,0xC3,0xC5,0xFA,0x6F,0x06,0xC5,0xFA,0x7F,0x44,0x24,0x48,0xC5,0xFA,0x6F,0x07,0xC5,0xFA,0x7F,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0x49,0x89,0x09,0x41,0x89,0x51,0x08,0x49,0x8B,0xC8,0x48,0x8D,0x54,0x24,0x48,0x4C,0x8D,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0xE8,0xE7,0xF9,0xFF,0xFF,0x48,0x8B,0xC3,0x48,0x83,0xC4,0x60,0x5B,0x5D,0x5E,0x5F,0x41,0x5C,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0x19,0x0D,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xC1,0x62,0xC3,0x5F,0x48,0x8B,0xF0,0xB9,0x23,0x0D,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xAA,0x62,0xC3,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x58,0x45,0x88,0x30,0x41,0x89,0x68,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCF,0x41,0x8B,0xD4,0x48,0x8B,0x44,0x24,0x58,0x48,0x89,0x44,0x24,0x20,0xE8,0x7B,0x04,0xFF,0xFF,0x48,0x8B,0xC8,0xE8,0xEB,0xBC,0xAE,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> lteq(ReadOnlySpan<uint> lhs, ReadOnlySpan<uint> rhs)
; location: [7FFC7C09E090h, 7FFC7C09E195h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push r12                      ; PUSH(Push_r64) [R12]                                 encoding(2 bytes) = 41 54
0006h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0007h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0008h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0009h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
000ah sub rsp,60h                   ; SUB(Sub_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 ec 60
000eh vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0011h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0014h lea rdi,[rsp+28h]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 7c 24 28
0019h mov ecx,0Ch                   ; MOV(Mov_r32_imm32) [ECX,ch:imm32]                    encoding(5 bytes) = b9 0c 00 00 00
001eh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0020h rep stosd                     ; STOSD(Stosd_m32_EAX) [mem(32u),EAX]                  encoding(2 bytes) = f3 ab
0022h mov rcx,rsi                   ; MOV(Mov_r64_rm64) [RCX,RSI]                          encoding(3 bytes) = 48 8b ce
0025h mov rbx,rcx                   ; MOV(Mov_r64_rm64) [RBX,RCX]                          encoding(3 bytes) = 48 8b d9
0028h mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
002bh mov rdi,r8                    ; MOV(Mov_r64_rm64) [RDI,R8]                           encoding(3 bytes) = 49 8b f8
002eh mov ebp,96h                   ; MOV(Mov_r32_imm32) [EBP,96h:imm32]                   encoding(5 bytes) = bd 96 00 00 00
0033h mov r14d,1                    ; MOV(Mov_r32_imm32) [R14D,1h:imm32]                   encoding(6 bytes) = 41 be 01 00 00 00
0039h mov r15d,[rsi+8]              ; MOV(Mov_r32_rm32) [R15D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 8b 7e 08
003dh mov r12d,[rdi+8]              ; MOV(Mov_r32_rm32) [R12D,mem(32u,RDI:br,DS:sr)]       encoding(4 bytes) = 44 8b 67 08
0041h cmp r15d,r12d                 ; CMP(Cmp_r32_rm32) [R15D,R12D]                        encoding(3 bytes) = 45 3b fc
0044h jne short 00abh               ; JNE(Jne_rel8_64) [ABh:jmp64]                         encoding(2 bytes) = 75 65
0046h movsxd rdx,r15d               ; MOVSXD(Movsxd_r64_rm32) [RDX,R15D]                   encoding(3 bytes) = 49 63 d7
0049h mov rcx,7FFC7C245DC8h         ; MOV(Mov_r64_imm64) [RCX,7ffc7c245dc8h:imm64]         encoding(10 bytes) = 48 b9 c8 5d 24 7c fc 7f 00 00
0053h call 7FFCDBBA24A0h            ; CALL(Call_rel32_64) [5FB04410h:jmp64]                encoding(5 bytes) = e8 b8 43 b0 5f
0058h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
005ch mov edx,[rax+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 50 08
005fh mov r8,rbx                    ; MOV(Mov_r64_rm64) [R8,RBX]                           encoding(3 bytes) = 4c 8b c3
0062h vmovdqu xmm0,xmmword ptr [rsi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 06
0066h vmovdqu xmmword ptr [rsp+48h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 48
006ch vmovdqu xmm0,xmmword ptr [rdi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RDI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 07
0070h vmovdqu xmmword ptr [rsp+38h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 38
0076h lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
007bh mov [r9],rcx                  ; MOV(Mov_rm64_r64) [mem(64u,R9:br,DS:sr),RCX]         encoding(3 bytes) = 49 89 09
007eh mov [r9+8],edx                ; MOV(Mov_rm32_r32) [mem(32u,R9:br,DS:sr),EDX]         encoding(4 bytes) = 41 89 51 08
0082h mov rcx,r8                    ; MOV(Mov_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 8b c8
0085h lea rdx,[rsp+48h]             ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 54 24 48
008ah lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
008fh lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
0094h call 7FFC7C09D7E0h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFF750h:jmp64]        encoding(5 bytes) = e8 b7 f6 ff ff
0099h mov rax,rbx                   ; MOV(Mov_r64_rm64) [RAX,RBX]                          encoding(3 bytes) = 48 8b c3
009ch add rsp,60h                   ; ADD(Add_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 c4 60
00a0h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
00a1h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
00a2h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
00a3h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
00a4h pop r12                       ; POP(Pop_r64) [R12]                                   encoding(2 bytes) = 41 5c
00a6h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
00a8h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
00aah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
00abh mov ecx,0D19h                 ; MOV(Mov_r32_imm32) [ECX,d19h:imm32]                  encoding(5 bytes) = b9 19 0d 00 00
00b0h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
00bah call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC35D90h:jmp64]                encoding(5 bytes) = e8 d1 5c c3 5f
00bfh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
00c2h mov ecx,0D23h                 ; MOV(Mov_r32_imm32) [ECX,d23h:imm32]                  encoding(5 bytes) = b9 23 0d 00 00
00c7h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
00d1h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC35D90h:jmp64]                encoding(5 bytes) = e8 ba 5c c3 5f
00d6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00d9h lea r8,[rsp+58h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 58
00deh mov [r8],r14b                 ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),R14L]           encoding(3 bytes) = 45 88 30
00e1h mov [r8+4],ebp                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBP]         encoding(4 bytes) = 41 89 68 04
00e5h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00e8h mov ecx,r15d                  ; MOV(Mov_r32_rm32) [ECX,R15D]                         encoding(3 bytes) = 41 8b cf
00ebh mov edx,r12d                  ; MOV(Mov_r32_rm32) [EDX,R12D]                         encoding(3 bytes) = 41 8b d4
00eeh mov rax,[rsp+58h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 58
00f3h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00f8h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFEFF88h:jmp64]        encoding(5 bytes) = e8 8b fe fe ff
00fdh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
0100h call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAEB800h:jmp64]                encoding(5 bytes) = e8 fb b6 ae 5f
0105h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> lteqBytes => new byte[262]{0x41,0x57,0x41,0x56,0x41,0x54,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x60,0xC5,0xF8,0x77,0x48,0x8B,0xF1,0x48,0x8D,0x7C,0x24,0x28,0xB9,0x0C,0x00,0x00,0x00,0x33,0xC0,0xF3,0xAB,0x48,0x8B,0xCE,0x48,0x8B,0xD9,0x48,0x8B,0xF2,0x49,0x8B,0xF8,0xBD,0x96,0x00,0x00,0x00,0x41,0xBE,0x01,0x00,0x00,0x00,0x44,0x8B,0x7E,0x08,0x44,0x8B,0x67,0x08,0x45,0x3B,0xFC,0x75,0x65,0x49,0x63,0xD7,0x48,0xB9,0xC8,0x5D,0x24,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xB8,0x43,0xB0,0x5F,0x48,0x8D,0x48,0x10,0x8B,0x50,0x08,0x4C,0x8B,0xC3,0xC5,0xFA,0x6F,0x06,0xC5,0xFA,0x7F,0x44,0x24,0x48,0xC5,0xFA,0x6F,0x07,0xC5,0xFA,0x7F,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0x49,0x89,0x09,0x41,0x89,0x51,0x08,0x49,0x8B,0xC8,0x48,0x8D,0x54,0x24,0x48,0x4C,0x8D,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0xE8,0xB7,0xF6,0xFF,0xFF,0x48,0x8B,0xC3,0x48,0x83,0xC4,0x60,0x5B,0x5D,0x5E,0x5F,0x41,0x5C,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0x19,0x0D,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xD1,0x5C,0xC3,0x5F,0x48,0x8B,0xF0,0xB9,0x23,0x0D,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xBA,0x5C,0xC3,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x58,0x45,0x88,0x30,0x41,0x89,0x68,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCF,0x41,0x8B,0xD4,0x48,0x8B,0x44,0x24,0x58,0x48,0x89,0x44,0x24,0x20,0xE8,0x8B,0xFE,0xFE,0xFF,0x48,0x8B,0xC8,0xE8,0xFB,0xB6,0xAE,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> lteq(ReadOnlySpan<long> lhs, ReadOnlySpan<long> rhs)
; location: [7FFC7C09E1C0h, 7FFC7C09E2C5h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push r12                      ; PUSH(Push_r64) [R12]                                 encoding(2 bytes) = 41 54
0006h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0007h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0008h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0009h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
000ah sub rsp,60h                   ; SUB(Sub_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 ec 60
000eh vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0011h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0014h lea rdi,[rsp+28h]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 7c 24 28
0019h mov ecx,0Ch                   ; MOV(Mov_r32_imm32) [ECX,ch:imm32]                    encoding(5 bytes) = b9 0c 00 00 00
001eh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0020h rep stosd                     ; STOSD(Stosd_m32_EAX) [mem(32u),EAX]                  encoding(2 bytes) = f3 ab
0022h mov rcx,rsi                   ; MOV(Mov_r64_rm64) [RCX,RSI]                          encoding(3 bytes) = 48 8b ce
0025h mov rbx,rcx                   ; MOV(Mov_r64_rm64) [RBX,RCX]                          encoding(3 bytes) = 48 8b d9
0028h mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
002bh mov rdi,r8                    ; MOV(Mov_r64_rm64) [RDI,R8]                           encoding(3 bytes) = 49 8b f8
002eh mov ebp,9Ah                   ; MOV(Mov_r32_imm32) [EBP,9ah:imm32]                   encoding(5 bytes) = bd 9a 00 00 00
0033h mov r14d,1                    ; MOV(Mov_r32_imm32) [R14D,1h:imm32]                   encoding(6 bytes) = 41 be 01 00 00 00
0039h mov r15d,[rsi+8]              ; MOV(Mov_r32_rm32) [R15D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 8b 7e 08
003dh mov r12d,[rdi+8]              ; MOV(Mov_r32_rm32) [R12D,mem(32u,RDI:br,DS:sr)]       encoding(4 bytes) = 44 8b 67 08
0041h cmp r15d,r12d                 ; CMP(Cmp_r32_rm32) [R15D,R12D]                        encoding(3 bytes) = 45 3b fc
0044h jne short 00abh               ; JNE(Jne_rel8_64) [ABh:jmp64]                         encoding(2 bytes) = 75 65
0046h movsxd rdx,r15d               ; MOVSXD(Movsxd_r64_rm32) [RDX,R15D]                   encoding(3 bytes) = 49 63 d7
0049h mov rcx,7FFC7C245DC8h         ; MOV(Mov_r64_imm64) [RCX,7ffc7c245dc8h:imm64]         encoding(10 bytes) = 48 b9 c8 5d 24 7c fc 7f 00 00
0053h call 7FFCDBBA24A0h            ; CALL(Call_rel32_64) [5FB042E0h:jmp64]                encoding(5 bytes) = e8 88 42 b0 5f
0058h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
005ch mov edx,[rax+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 50 08
005fh mov r8,rbx                    ; MOV(Mov_r64_rm64) [R8,RBX]                           encoding(3 bytes) = 4c 8b c3
0062h vmovdqu xmm0,xmmword ptr [rsi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 06
0066h vmovdqu xmmword ptr [rsp+48h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 48
006ch vmovdqu xmm0,xmmword ptr [rdi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RDI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 07
0070h vmovdqu xmmword ptr [rsp+38h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 38
0076h lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
007bh mov [r9],rcx                  ; MOV(Mov_rm64_r64) [mem(64u,R9:br,DS:sr),RCX]         encoding(3 bytes) = 49 89 09
007eh mov [r9+8],edx                ; MOV(Mov_rm32_r32) [mem(32u,R9:br,DS:sr),EDX]         encoding(4 bytes) = 41 89 51 08
0082h mov rcx,r8                    ; MOV(Mov_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 8b c8
0085h lea rdx,[rsp+48h]             ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 54 24 48
008ah lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
008fh lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
0094h call 7FFC7C09D860h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFF6A0h:jmp64]        encoding(5 bytes) = e8 07 f6 ff ff
0099h mov rax,rbx                   ; MOV(Mov_r64_rm64) [RAX,RBX]                          encoding(3 bytes) = 48 8b c3
009ch add rsp,60h                   ; ADD(Add_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 c4 60
00a0h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
00a1h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
00a2h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
00a3h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
00a4h pop r12                       ; POP(Pop_r64) [R12]                                   encoding(2 bytes) = 41 5c
00a6h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
00a8h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
00aah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
00abh mov ecx,0D19h                 ; MOV(Mov_r32_imm32) [ECX,d19h:imm32]                  encoding(5 bytes) = b9 19 0d 00 00
00b0h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
00bah call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC35C60h:jmp64]                encoding(5 bytes) = e8 a1 5b c3 5f
00bfh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
00c2h mov ecx,0D23h                 ; MOV(Mov_r32_imm32) [ECX,d23h:imm32]                  encoding(5 bytes) = b9 23 0d 00 00
00c7h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
00d1h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC35C60h:jmp64]                encoding(5 bytes) = e8 8a 5b c3 5f
00d6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00d9h lea r8,[rsp+58h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 58
00deh mov [r8],r14b                 ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),R14L]           encoding(3 bytes) = 45 88 30
00e1h mov [r8+4],ebp                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBP]         encoding(4 bytes) = 41 89 68 04
00e5h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00e8h mov ecx,r15d                  ; MOV(Mov_r32_rm32) [ECX,R15D]                         encoding(3 bytes) = 41 8b cf
00ebh mov edx,r12d                  ; MOV(Mov_r32_rm32) [EDX,R12D]                         encoding(3 bytes) = 41 8b d4
00eeh mov rax,[rsp+58h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 58
00f3h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00f8h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFEFE58h:jmp64]        encoding(5 bytes) = e8 5b fd fe ff
00fdh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
0100h call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAEB6D0h:jmp64]                encoding(5 bytes) = e8 cb b5 ae 5f
0105h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> lteqBytes => new byte[262]{0x41,0x57,0x41,0x56,0x41,0x54,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x60,0xC5,0xF8,0x77,0x48,0x8B,0xF1,0x48,0x8D,0x7C,0x24,0x28,0xB9,0x0C,0x00,0x00,0x00,0x33,0xC0,0xF3,0xAB,0x48,0x8B,0xCE,0x48,0x8B,0xD9,0x48,0x8B,0xF2,0x49,0x8B,0xF8,0xBD,0x9A,0x00,0x00,0x00,0x41,0xBE,0x01,0x00,0x00,0x00,0x44,0x8B,0x7E,0x08,0x44,0x8B,0x67,0x08,0x45,0x3B,0xFC,0x75,0x65,0x49,0x63,0xD7,0x48,0xB9,0xC8,0x5D,0x24,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x88,0x42,0xB0,0x5F,0x48,0x8D,0x48,0x10,0x8B,0x50,0x08,0x4C,0x8B,0xC3,0xC5,0xFA,0x6F,0x06,0xC5,0xFA,0x7F,0x44,0x24,0x48,0xC5,0xFA,0x6F,0x07,0xC5,0xFA,0x7F,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0x49,0x89,0x09,0x41,0x89,0x51,0x08,0x49,0x8B,0xC8,0x48,0x8D,0x54,0x24,0x48,0x4C,0x8D,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0xE8,0x07,0xF6,0xFF,0xFF,0x48,0x8B,0xC3,0x48,0x83,0xC4,0x60,0x5B,0x5D,0x5E,0x5F,0x41,0x5C,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0x19,0x0D,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xA1,0x5B,0xC3,0x5F,0x48,0x8B,0xF0,0xB9,0x23,0x0D,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x8A,0x5B,0xC3,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x58,0x45,0x88,0x30,0x41,0x89,0x68,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCF,0x41,0x8B,0xD4,0x48,0x8B,0x44,0x24,0x58,0x48,0x89,0x44,0x24,0x20,0xE8,0x5B,0xFD,0xFE,0xFF,0x48,0x8B,0xC8,0xE8,0xCB,0xB5,0xAE,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> lteq(ReadOnlySpan<double> lhs, ReadOnlySpan<double> rhs)
; location: [7FFC7C09E550h, 7FFC7C09E655h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push r12                      ; PUSH(Push_r64) [R12]                                 encoding(2 bytes) = 41 54
0006h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0007h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0008h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0009h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
000ah sub rsp,60h                   ; SUB(Sub_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 ec 60
000eh vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0011h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0014h lea rdi,[rsp+28h]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 7c 24 28
0019h mov ecx,0Ch                   ; MOV(Mov_r32_imm32) [ECX,ch:imm32]                    encoding(5 bytes) = b9 0c 00 00 00
001eh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0020h rep stosd                     ; STOSD(Stosd_m32_EAX) [mem(32u),EAX]                  encoding(2 bytes) = f3 ab
0022h mov rcx,rsi                   ; MOV(Mov_r64_rm64) [RCX,RSI]                          encoding(3 bytes) = 48 8b ce
0025h mov rbx,rcx                   ; MOV(Mov_r64_rm64) [RBX,RCX]                          encoding(3 bytes) = 48 8b d9
0028h mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
002bh mov rdi,r8                    ; MOV(Mov_r64_rm64) [RDI,R8]                           encoding(3 bytes) = 49 8b f8
002eh mov ebp,0A6h                  ; MOV(Mov_r32_imm32) [EBP,a6h:imm32]                   encoding(5 bytes) = bd a6 00 00 00
0033h mov r14d,1                    ; MOV(Mov_r32_imm32) [R14D,1h:imm32]                   encoding(6 bytes) = 41 be 01 00 00 00
0039h mov r15d,[rsi+8]              ; MOV(Mov_r32_rm32) [R15D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 8b 7e 08
003dh mov r12d,[rdi+8]              ; MOV(Mov_r32_rm32) [R12D,mem(32u,RDI:br,DS:sr)]       encoding(4 bytes) = 44 8b 67 08
0041h cmp r15d,r12d                 ; CMP(Cmp_r32_rm32) [R15D,R12D]                        encoding(3 bytes) = 45 3b fc
0044h jne short 00abh               ; JNE(Jne_rel8_64) [ABh:jmp64]                         encoding(2 bytes) = 75 65
0046h movsxd rdx,r15d               ; MOVSXD(Movsxd_r64_rm32) [RDX,R15D]                   encoding(3 bytes) = 49 63 d7
0049h mov rcx,7FFC7C245DC8h         ; MOV(Mov_r64_imm64) [RCX,7ffc7c245dc8h:imm64]         encoding(10 bytes) = 48 b9 c8 5d 24 7c fc 7f 00 00
0053h call 7FFCDBBA24A0h            ; CALL(Call_rel32_64) [5FB03F50h:jmp64]                encoding(5 bytes) = e8 f8 3e b0 5f
0058h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
005ch mov edx,[rax+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 50 08
005fh mov r8,rbx                    ; MOV(Mov_r64_rm64) [R8,RBX]                           encoding(3 bytes) = 4c 8b c3
0062h vmovdqu xmm0,xmmword ptr [rsi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 06
0066h vmovdqu xmmword ptr [rsp+48h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 48
006ch vmovdqu xmm0,xmmword ptr [rdi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RDI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 07
0070h vmovdqu xmmword ptr [rsp+38h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 38
0076h lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
007bh mov [r9],rcx                  ; MOV(Mov_rm64_r64) [mem(64u,R9:br,DS:sr),RCX]         encoding(3 bytes) = 49 89 09
007eh mov [r9+8],edx                ; MOV(Mov_rm32_r32) [mem(32u,R9:br,DS:sr),EDX]         encoding(4 bytes) = 41 89 51 08
0082h mov rcx,r8                    ; MOV(Mov_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 8b c8
0085h lea rdx,[rsp+48h]             ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 54 24 48
008ah lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
008fh lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
0094h call 7FFC7C09DA10h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFF4C0h:jmp64]        encoding(5 bytes) = e8 27 f4 ff ff
0099h mov rax,rbx                   ; MOV(Mov_r64_rm64) [RAX,RBX]                          encoding(3 bytes) = 48 8b c3
009ch add rsp,60h                   ; ADD(Add_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 c4 60
00a0h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
00a1h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
00a2h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
00a3h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
00a4h pop r12                       ; POP(Pop_r64) [R12]                                   encoding(2 bytes) = 41 5c
00a6h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
00a8h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
00aah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
00abh mov ecx,0D19h                 ; MOV(Mov_r32_imm32) [ECX,d19h:imm32]                  encoding(5 bytes) = b9 19 0d 00 00
00b0h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
00bah call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC358D0h:jmp64]                encoding(5 bytes) = e8 11 58 c3 5f
00bfh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
00c2h mov ecx,0D23h                 ; MOV(Mov_r32_imm32) [ECX,d23h:imm32]                  encoding(5 bytes) = b9 23 0d 00 00
00c7h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
00d1h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC358D0h:jmp64]                encoding(5 bytes) = e8 fa 57 c3 5f
00d6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00d9h lea r8,[rsp+58h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 58
00deh mov [r8],r14b                 ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),R14L]           encoding(3 bytes) = 45 88 30
00e1h mov [r8+4],ebp                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBP]         encoding(4 bytes) = 41 89 68 04
00e5h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00e8h mov ecx,r15d                  ; MOV(Mov_r32_rm32) [ECX,R15D]                         encoding(3 bytes) = 41 8b cf
00ebh mov edx,r12d                  ; MOV(Mov_r32_rm32) [EDX,R12D]                         encoding(3 bytes) = 41 8b d4
00eeh mov rax,[rsp+58h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 58
00f3h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00f8h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFEFAC8h:jmp64]        encoding(5 bytes) = e8 cb f9 fe ff
00fdh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
0100h call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAEB340h:jmp64]                encoding(5 bytes) = e8 3b b2 ae 5f
0105h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> lteqBytes => new byte[262]{0x41,0x57,0x41,0x56,0x41,0x54,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x60,0xC5,0xF8,0x77,0x48,0x8B,0xF1,0x48,0x8D,0x7C,0x24,0x28,0xB9,0x0C,0x00,0x00,0x00,0x33,0xC0,0xF3,0xAB,0x48,0x8B,0xCE,0x48,0x8B,0xD9,0x48,0x8B,0xF2,0x49,0x8B,0xF8,0xBD,0xA6,0x00,0x00,0x00,0x41,0xBE,0x01,0x00,0x00,0x00,0x44,0x8B,0x7E,0x08,0x44,0x8B,0x67,0x08,0x45,0x3B,0xFC,0x75,0x65,0x49,0x63,0xD7,0x48,0xB9,0xC8,0x5D,0x24,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xF8,0x3E,0xB0,0x5F,0x48,0x8D,0x48,0x10,0x8B,0x50,0x08,0x4C,0x8B,0xC3,0xC5,0xFA,0x6F,0x06,0xC5,0xFA,0x7F,0x44,0x24,0x48,0xC5,0xFA,0x6F,0x07,0xC5,0xFA,0x7F,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0x49,0x89,0x09,0x41,0x89,0x51,0x08,0x49,0x8B,0xC8,0x48,0x8D,0x54,0x24,0x48,0x4C,0x8D,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0xE8,0x27,0xF4,0xFF,0xFF,0x48,0x8B,0xC3,0x48,0x83,0xC4,0x60,0x5B,0x5D,0x5E,0x5F,0x41,0x5C,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0x19,0x0D,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x11,0x58,0xC3,0x5F,0x48,0x8B,0xF0,0xB9,0x23,0x0D,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xFA,0x57,0xC3,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x58,0x45,0x88,0x30,0x41,0x89,0x68,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCF,0x41,0x8B,0xD4,0x48,0x8B,0x44,0x24,0x58,0x48,0x89,0x44,0x24,0x20,0xE8,0xCB,0xF9,0xFE,0xFF,0x48,0x8B,0xC8,0xE8,0x3B,0xB2,0xAE,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: short max(short lhs, short rhs)
; location: [7FFC7C09E6E0h, 7FFC7C09E6F4h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cx                  ; MOVSX(Movsx_r64_rm16) [RAX,CX]                       encoding(4 bytes) = 48 0f bf c1
0009h movsx rdx,dx                  ; MOVSX(Movsx_r64_rm16) [RDX,DX]                       encoding(4 bytes) = 48 0f bf d2
000dh cmp eax,edx                   ; CMP(Cmp_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 3b c2
000fh jg short 0014h                ; JG(Jg_rel8_64) [14h:jmp64]                           encoding(2 bytes) = 7f 03
0011h mov eax,edx                   ; MOV(Mov_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 8b c2
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0014h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> maxBytes => new byte[21]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBF,0xC1,0x48,0x0F,0xBF,0xD2,0x3B,0xC2,0x7F,0x03,0x8B,0xC2,0xC3,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: int max(int lhs, int rhs)
; location: [7FFC7C09E740h, 7FFC7C09E74Eh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h cmp ecx,edx                   ; CMP(Cmp_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 3b ca
0007h jg short 000ch                ; JG(Jg_rel8_64) [Ch:jmp64]                            encoding(2 bytes) = 7f 03
0009h mov eax,edx                   ; MOV(Mov_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 8b c2
000bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
000ch mov eax,ecx                   ; MOV(Mov_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 8b c1
000eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> maxBytes => new byte[15]{0x0F,0x1F,0x44,0x00,0x00,0x3B,0xCA,0x7F,0x03,0x8B,0xC2,0xC3,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: uint max(uint lhs, uint rhs)
; location: [7FFC7C09E760h, 7FFC7C09E76Eh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h cmp ecx,edx                   ; CMP(Cmp_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 3b ca
0007h ja short 000ch                ; JA(Ja_rel8_64) [Ch:jmp64]                            encoding(2 bytes) = 77 03
0009h mov eax,edx                   ; MOV(Mov_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 8b c2
000bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
000ch mov eax,ecx                   ; MOV(Mov_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 8b c1
000eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> maxBytes => new byte[15]{0x0F,0x1F,0x44,0x00,0x00,0x3B,0xCA,0x77,0x03,0x8B,0xC2,0xC3,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: long max(long lhs, long rhs)
; location: [7FFC7C09E780h, 7FFC7C09E791h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h cmp rcx,rdx                   ; CMP(Cmp_r64_rm64) [RCX,RDX]                          encoding(3 bytes) = 48 3b ca
0008h jg short 000eh                ; JG(Jg_rel8_64) [Eh:jmp64]                            encoding(2 bytes) = 7f 04
000ah mov rax,rdx                   ; MOV(Mov_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 8b c2
000dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
000eh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> maxBytes => new byte[18]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x3B,0xCA,0x7F,0x04,0x48,0x8B,0xC2,0xC3,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ulong max(ulong lhs, ulong rhs)
; location: [7FFC7C09E7B0h, 7FFC7C09E7C1h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h cmp rcx,rdx                   ; CMP(Cmp_r64_rm64) [RCX,RDX]                          encoding(3 bytes) = 48 3b ca
0008h ja short 000eh                ; JA(Ja_rel8_64) [Eh:jmp64]                            encoding(2 bytes) = 77 04
000ah mov rax,rdx                   ; MOV(Mov_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 8b c2
000dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
000eh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> maxBytes => new byte[18]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x3B,0xCA,0x77,0x04,0x48,0x8B,0xC2,0xC3,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ushort max(ReadOnlySpan<ushort> src)
; location: [7FFC7C09E930h, 7FFC7C09E968h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rdx,[rcx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 11
0008h mov ecx,[rcx+8]               ; MOV(Mov_r32_rm32) [ECX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 49 08
000bh test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
000dh ja short 0012h                ; JA(Ja_rel8_64) [12h:jmp64]                           encoding(2 bytes) = 77 03
000fh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0012h movzx eax,word ptr [rdx]      ; MOVZX(Movzx_r32_rm16) [EAX,mem(16u,RDX:br,DS:sr)]    encoding(3 bytes) = 0f b7 02
0015h mov r8d,1                     ; MOV(Mov_r32_imm32) [R8D,1h:imm32]                    encoding(6 bytes) = 41 b8 01 00 00 00
001bh cmp ecx,1                     ; CMP(Cmp_rm32_imm8) [ECX,1h:imm32]                    encoding(3 bytes) = 83 f9 01
001eh jle short 0038h               ; JLE(Jle_rel8_64) [38h:jmp64]                         encoding(2 bytes) = 7e 18
0020h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0023h movzx r9d,word ptr [rdx+r9*2] ; MOVZX(Movzx_r32_rm16) [R9D,mem(16u,RDX:br,DS:sr)]    encoding(5 bytes) = 46 0f b7 0c 4a
0028h cmp r9d,eax                   ; CMP(Cmp_r32_rm32) [R9D,EAX]                          encoding(3 bytes) = 44 3b c8
002bh jle short 0030h               ; JLE(Jle_rel8_64) [30h:jmp64]                         encoding(2 bytes) = 7e 03
002dh mov eax,r9d                   ; MOV(Mov_r32_rm32) [EAX,R9D]                          encoding(3 bytes) = 41 8b c1
0030h inc r8d                       ; INC(Inc_rm32) [R8D]                                  encoding(3 bytes) = 41 ff c0
0033h cmp r8d,ecx                   ; CMP(Cmp_r32_rm32) [R8D,ECX]                          encoding(3 bytes) = 44 3b c1
0036h jl short 0020h                ; JL(Jl_rel8_64) [20h:jmp64]                           encoding(2 bytes) = 7c e8
0038h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> maxBytes => new byte[57]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x11,0x8B,0x49,0x08,0x85,0xC9,0x77,0x03,0x33,0xC0,0xC3,0x0F,0xB7,0x02,0x41,0xB8,0x01,0x00,0x00,0x00,0x83,0xF9,0x01,0x7E,0x18,0x4D,0x63,0xC8,0x46,0x0F,0xB7,0x0C,0x4A,0x44,0x3B,0xC8,0x7E,0x03,0x41,0x8B,0xC1,0x41,0xFF,0xC0,0x44,0x3B,0xC1,0x7C,0xE8,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: uint max(ReadOnlySpan<uint> src)
; location: [7FFC7C09E9D0h, 7FFC7C09EA06h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rdx,[rcx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 11
0008h mov ecx,[rcx+8]               ; MOV(Mov_r32_rm32) [ECX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 49 08
000bh test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
000dh ja short 0012h                ; JA(Ja_rel8_64) [12h:jmp64]                           encoding(2 bytes) = 77 03
000fh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0012h mov eax,[rdx]                 ; MOV(Mov_r32_rm32) [EAX,mem(32u,RDX:br,DS:sr)]        encoding(2 bytes) = 8b 02
0014h mov r8d,1                     ; MOV(Mov_r32_imm32) [R8D,1h:imm32]                    encoding(6 bytes) = 41 b8 01 00 00 00
001ah cmp ecx,1                     ; CMP(Cmp_rm32_imm8) [ECX,1h:imm32]                    encoding(3 bytes) = 83 f9 01
001dh jle short 0036h               ; JLE(Jle_rel8_64) [36h:jmp64]                         encoding(2 bytes) = 7e 17
001fh movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0022h mov r9d,[rdx+r9*4]            ; MOV(Mov_r32_rm32) [R9D,mem(32u,RDX:br,DS:sr)]        encoding(4 bytes) = 46 8b 0c 8a
0026h cmp r9d,eax                   ; CMP(Cmp_r32_rm32) [R9D,EAX]                          encoding(3 bytes) = 44 3b c8
0029h jbe short 002eh               ; JBE(Jbe_rel8_64) [2Eh:jmp64]                         encoding(2 bytes) = 76 03
002bh mov eax,r9d                   ; MOV(Mov_r32_rm32) [EAX,R9D]                          encoding(3 bytes) = 41 8b c1
002eh inc r8d                       ; INC(Inc_rm32) [R8D]                                  encoding(3 bytes) = 41 ff c0
0031h cmp r8d,ecx                   ; CMP(Cmp_r32_rm32) [R8D,ECX]                          encoding(3 bytes) = 44 3b c1
0034h jl short 001fh                ; JL(Jl_rel8_64) [1Fh:jmp64]                           encoding(2 bytes) = 7c e9
0036h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> maxBytes => new byte[55]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x11,0x8B,0x49,0x08,0x85,0xC9,0x77,0x03,0x33,0xC0,0xC3,0x8B,0x02,0x41,0xB8,0x01,0x00,0x00,0x00,0x83,0xF9,0x01,0x7E,0x17,0x4D,0x63,0xC8,0x46,0x8B,0x0C,0x8A,0x44,0x3B,0xC8,0x76,0x03,0x41,0x8B,0xC1,0x41,0xFF,0xC0,0x44,0x3B,0xC1,0x7C,0xE9,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: float max(ReadOnlySpan<float> src)
; location: [7FFC7C09EAC0h, 7FFC7C09EAFBh]
0000h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0003h xchg ax,ax                    ; NOP(Nopw)                                            encoding(2 bytes) = 66 90
0005h mov rax,[rcx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 01
0008h mov edx,[rcx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 51 08
000bh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
000dh ja short 0014h                ; JA(Ja_rel8_64) [14h:jmp64]                           encoding(2 bytes) = 77 05
000fh vxorps xmm0,xmm0,xmm0         ; VXORPS(VEX_Vxorps_xmm_xmm_xmmm128) [XMM0,XMM0,XMM0]  encoding(VEX, 4 bytes) = c5 f8 57 c0
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0014h vmovss xmm0,dword ptr [rax]   ; VMOVSS(VEX_Vmovss_xmm_m32) [XMM0,mem(Float32,RAX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 10 00
0018h mov ecx,1                     ; MOV(Mov_r32_imm32) [ECX,1h:imm32]                    encoding(5 bytes) = b9 01 00 00 00
001dh cmp edx,1                     ; CMP(Cmp_rm32_imm8) [EDX,1h:imm32]                    encoding(3 bytes) = 83 fa 01
0020h jle short 003bh               ; JLE(Jle_rel8_64) [3Bh:jmp64]                         encoding(2 bytes) = 7e 19
0022h movsxd r8,ecx                 ; MOVSXD(Movsxd_r64_rm32) [R8,ECX]                     encoding(3 bytes) = 4c 63 c1
0025h vmovss xmm1,dword ptr [rax+r8*4]; VMOVSS(VEX_Vmovss_xmm_m32) [XMM1,mem(Float32,RAX:br,DS:sr)] encoding(VEX, 6 bytes) = c4 a1 7a 10 0c 80
002bh vucomiss xmm1,xmm0            ; VUCOMISS(VEX_Vucomiss_xmm_xmmm32) [XMM1,XMM0]        encoding(VEX, 4 bytes) = c5 f8 2e c8
002fh jbe short 0035h               ; JBE(Jbe_rel8_64) [35h:jmp64]                         encoding(2 bytes) = 76 04
0031h vmovaps xmm0,xmm1             ; VMOVAPS(VEX_Vmovaps_xmm_xmmm128) [XMM0,XMM1]         encoding(VEX, 4 bytes) = c5 f8 28 c1
0035h inc ecx                       ; INC(Inc_rm32) [ECX]                                  encoding(2 bytes) = ff c1
0037h cmp ecx,edx                   ; CMP(Cmp_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 3b ca
0039h jl short 0022h                ; JL(Jl_rel8_64) [22h:jmp64]                           encoding(2 bytes) = 7c e7
003bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> maxBytes => new byte[60]{0xC5,0xF8,0x77,0x66,0x90,0x48,0x8B,0x01,0x8B,0x51,0x08,0x85,0xD2,0x77,0x05,0xC5,0xF8,0x57,0xC0,0xC3,0xC5,0xFA,0x10,0x00,0xB9,0x01,0x00,0x00,0x00,0x83,0xFA,0x01,0x7E,0x19,0x4C,0x63,0xC1,0xC4,0xA1,0x7A,0x10,0x0C,0x80,0xC5,0xF8,0x2E,0xC8,0x76,0x04,0xC5,0xF8,0x28,0xC1,0xFF,0xC1,0x3B,0xCA,0x7C,0xE7,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: double max(ReadOnlySpan<double> src)
; location: [7FFC7C09EB10h, 7FFC7C09EB4Bh]
0000h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0003h xchg ax,ax                    ; NOP(Nopw)                                            encoding(2 bytes) = 66 90
0005h mov rax,[rcx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 01
0008h mov edx,[rcx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 51 08
000bh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
000dh ja short 0014h                ; JA(Ja_rel8_64) [14h:jmp64]                           encoding(2 bytes) = 77 05
000fh vxorps xmm0,xmm0,xmm0         ; VXORPS(VEX_Vxorps_xmm_xmm_xmmm128) [XMM0,XMM0,XMM0]  encoding(VEX, 4 bytes) = c5 f8 57 c0
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0014h vmovsd xmm0,qword ptr [rax]   ; VMOVSD(VEX_Vmovsd_xmm_m64) [XMM0,mem(Float64,RAX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fb 10 00
0018h mov ecx,1                     ; MOV(Mov_r32_imm32) [ECX,1h:imm32]                    encoding(5 bytes) = b9 01 00 00 00
001dh cmp edx,1                     ; CMP(Cmp_rm32_imm8) [EDX,1h:imm32]                    encoding(3 bytes) = 83 fa 01
0020h jle short 003bh               ; JLE(Jle_rel8_64) [3Bh:jmp64]                         encoding(2 bytes) = 7e 19
0022h movsxd r8,ecx                 ; MOVSXD(Movsxd_r64_rm32) [R8,ECX]                     encoding(3 bytes) = 4c 63 c1
0025h vmovsd xmm1,qword ptr [rax+r8*8]; VMOVSD(VEX_Vmovsd_xmm_m64) [XMM1,mem(Float64,RAX:br,DS:sr)] encoding(VEX, 6 bytes) = c4 a1 7b 10 0c c0
002bh vucomisd xmm1,xmm0            ; VUCOMISD(VEX_Vucomisd_xmm_xmmm64) [XMM1,XMM0]        encoding(VEX, 4 bytes) = c5 f9 2e c8
002fh jbe short 0035h               ; JBE(Jbe_rel8_64) [35h:jmp64]                         encoding(2 bytes) = 76 04
0031h vmovaps xmm0,xmm1             ; VMOVAPS(VEX_Vmovaps_xmm_xmmm128) [XMM0,XMM1]         encoding(VEX, 4 bytes) = c5 f8 28 c1
0035h inc ecx                       ; INC(Inc_rm32) [ECX]                                  encoding(2 bytes) = ff c1
0037h cmp ecx,edx                   ; CMP(Cmp_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 3b ca
0039h jl short 0022h                ; JL(Jl_rel8_64) [22h:jmp64]                           encoding(2 bytes) = 7c e7
003bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> maxBytes => new byte[60]{0xC5,0xF8,0x77,0x66,0x90,0x48,0x8B,0x01,0x8B,0x51,0x08,0x85,0xD2,0x77,0x05,0xC5,0xF8,0x57,0xC0,0xC3,0xC5,0xFB,0x10,0x00,0xB9,0x01,0x00,0x00,0x00,0x83,0xFA,0x01,0x7E,0x19,0x4C,0x63,0xC1,0xC4,0xA1,0x7B,0x10,0x0C,0xC0,0xC5,0xF9,0x2E,0xC8,0x76,0x04,0xC5,0xF8,0x28,0xC1,0xFF,0xC1,0x3B,0xCA,0x7C,0xE7,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: sbyte min(sbyte lhs, sbyte rhs)
; location: [7FFC7C09EB60h, 7FFC7C09EB74h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cl                  ; MOVSX(Movsx_r64_rm8) [RAX,CL]                        encoding(4 bytes) = 48 0f be c1
0009h movsx rdx,dl                  ; MOVSX(Movsx_r64_rm8) [RDX,DL]                        encoding(4 bytes) = 48 0f be d2
000dh cmp eax,edx                   ; CMP(Cmp_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 3b c2
000fh jl short 0014h                ; JL(Jl_rel8_64) [14h:jmp64]                           encoding(2 bytes) = 7c 03
0011h mov eax,edx                   ; MOV(Mov_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 8b c2
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0014h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> minBytes => new byte[21]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBE,0xC1,0x48,0x0F,0xBE,0xD2,0x3B,0xC2,0x7C,0x03,0x8B,0xC2,0xC3,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ushort min(ushort lhs, ushort rhs)
; location: [7FFC7C09EBF0h, 7FFC7C09EC02h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cx                  ; MOVZX(Movzx_r32_rm16) [EAX,CX]                       encoding(3 bytes) = 0f b7 c1
0008h movzx edx,dx                  ; MOVZX(Movzx_r32_rm16) [EDX,DX]                       encoding(3 bytes) = 0f b7 d2
000bh cmp eax,edx                   ; CMP(Cmp_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 3b c2
000dh jl short 0012h                ; JL(Jl_rel8_64) [12h:jmp64]                           encoding(2 bytes) = 7c 03
000fh mov eax,edx                   ; MOV(Mov_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 8b c2
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0012h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> minBytes => new byte[19]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB7,0xC1,0x0F,0xB7,0xD2,0x3B,0xC2,0x7C,0x03,0x8B,0xC2,0xC3,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: int min(int lhs, int rhs)
; location: [7FFC7C09EC20h, 7FFC7C09EC2Eh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h cmp ecx,edx                   ; CMP(Cmp_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 3b ca
0007h jl short 000ch                ; JL(Jl_rel8_64) [Ch:jmp64]                            encoding(2 bytes) = 7c 03
0009h mov eax,edx                   ; MOV(Mov_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 8b c2
000bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
000ch mov eax,ecx                   ; MOV(Mov_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 8b c1
000eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> minBytes => new byte[15]{0x0F,0x1F,0x44,0x00,0x00,0x3B,0xCA,0x7C,0x03,0x8B,0xC2,0xC3,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: uint min(uint lhs, uint rhs)
; location: [7FFC7C09EC40h, 7FFC7C09EC4Eh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h cmp ecx,edx                   ; CMP(Cmp_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 3b ca
0007h jb short 000ch                ; JB(Jb_rel8_64) [Ch:jmp64]                            encoding(2 bytes) = 72 03
0009h mov eax,edx                   ; MOV(Mov_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 8b c2
000bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
000ch mov eax,ecx                   ; MOV(Mov_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 8b c1
000eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> minBytes => new byte[15]{0x0F,0x1F,0x44,0x00,0x00,0x3B,0xCA,0x72,0x03,0x8B,0xC2,0xC3,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ulong min(ulong lhs, ulong rhs)
; location: [7FFC7C09EC90h, 7FFC7C09ECA1h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h cmp rcx,rdx                   ; CMP(Cmp_r64_rm64) [RCX,RDX]                          encoding(3 bytes) = 48 3b ca
0008h jb short 000eh                ; JB(Jb_rel8_64) [Eh:jmp64]                            encoding(2 bytes) = 72 04
000ah mov rax,rdx                   ; MOV(Mov_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 8b c2
000dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
000eh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> minBytes => new byte[18]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x3B,0xCA,0x72,0x04,0x48,0x8B,0xC2,0xC3,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: sbyte min(ReadOnlySpan<sbyte> src)
; location: [7FFC7C09ECC0h, 7FFC7C09ECF9h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rdx,[rcx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 11
0008h mov ecx,[rcx+8]               ; MOV(Mov_r32_rm32) [ECX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 49 08
000bh test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
000dh ja short 0012h                ; JA(Ja_rel8_64) [12h:jmp64]                           encoding(2 bytes) = 77 03
000fh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0012h movsx rax,byte ptr [rdx]      ; MOVSX(Movsx_r64_rm8) [RAX,mem(8i,RDX:br,DS:sr)]      encoding(4 bytes) = 48 0f be 02
0016h mov r8d,1                     ; MOV(Mov_r32_imm32) [R8D,1h:imm32]                    encoding(6 bytes) = 41 b8 01 00 00 00
001ch cmp ecx,1                     ; CMP(Cmp_rm32_imm8) [ECX,1h:imm32]                    encoding(3 bytes) = 83 f9 01
001fh jle short 0039h               ; JLE(Jle_rel8_64) [39h:jmp64]                         encoding(2 bytes) = 7e 18
0021h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0024h movsx r9,byte ptr [rdx+r9]    ; MOVSX(Movsx_r64_rm8) [R9,mem(8i,RDX:br,DS:sr)]       encoding(5 bytes) = 4e 0f be 0c 0a
0029h cmp r9d,eax                   ; CMP(Cmp_r32_rm32) [R9D,EAX]                          encoding(3 bytes) = 44 3b c8
002ch jge short 0031h               ; JGE(Jge_rel8_64) [31h:jmp64]                         encoding(2 bytes) = 7d 03
002eh mov eax,r9d                   ; MOV(Mov_r32_rm32) [EAX,R9D]                          encoding(3 bytes) = 41 8b c1
0031h inc r8d                       ; INC(Inc_rm32) [R8D]                                  encoding(3 bytes) = 41 ff c0
0034h cmp r8d,ecx                   ; CMP(Cmp_r32_rm32) [R8D,ECX]                          encoding(3 bytes) = 44 3b c1
0037h jl short 0021h                ; JL(Jl_rel8_64) [21h:jmp64]                           encoding(2 bytes) = 7c e8
0039h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> minBytes => new byte[58]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x11,0x8B,0x49,0x08,0x85,0xC9,0x77,0x03,0x33,0xC0,0xC3,0x48,0x0F,0xBE,0x02,0x41,0xB8,0x01,0x00,0x00,0x00,0x83,0xF9,0x01,0x7E,0x18,0x4D,0x63,0xC8,0x4E,0x0F,0xBE,0x0C,0x0A,0x44,0x3B,0xC8,0x7D,0x03,0x41,0x8B,0xC1,0x41,0xFF,0xC0,0x44,0x3B,0xC1,0x7C,0xE8,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: byte min(ReadOnlySpan<byte> src)
; location: [7FFC7C09ED10h, 7FFC7C09ED48h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rdx,[rcx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 11
0008h mov ecx,[rcx+8]               ; MOV(Mov_r32_rm32) [ECX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 49 08
000bh test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
000dh ja short 0012h                ; JA(Ja_rel8_64) [12h:jmp64]                           encoding(2 bytes) = 77 03
000fh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0012h movzx eax,byte ptr [rdx]      ; MOVZX(Movzx_r32_rm8) [EAX,mem(8u,RDX:br,DS:sr)]      encoding(3 bytes) = 0f b6 02
0015h mov r8d,1                     ; MOV(Mov_r32_imm32) [R8D,1h:imm32]                    encoding(6 bytes) = 41 b8 01 00 00 00
001bh cmp ecx,1                     ; CMP(Cmp_rm32_imm8) [ECX,1h:imm32]                    encoding(3 bytes) = 83 f9 01
001eh jle short 0038h               ; JLE(Jle_rel8_64) [38h:jmp64]                         encoding(2 bytes) = 7e 18
0020h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0023h movzx r9d,byte ptr [rdx+r9]   ; MOVZX(Movzx_r32_rm8) [R9D,mem(8u,RDX:br,DS:sr)]      encoding(5 bytes) = 46 0f b6 0c 0a
0028h cmp r9d,eax                   ; CMP(Cmp_r32_rm32) [R9D,EAX]                          encoding(3 bytes) = 44 3b c8
002bh jge short 0030h               ; JGE(Jge_rel8_64) [30h:jmp64]                         encoding(2 bytes) = 7d 03
002dh mov eax,r9d                   ; MOV(Mov_r32_rm32) [EAX,R9D]                          encoding(3 bytes) = 41 8b c1
0030h inc r8d                       ; INC(Inc_rm32) [R8D]                                  encoding(3 bytes) = 41 ff c0
0033h cmp r8d,ecx                   ; CMP(Cmp_r32_rm32) [R8D,ECX]                          encoding(3 bytes) = 44 3b c1
0036h jl short 0020h                ; JL(Jl_rel8_64) [20h:jmp64]                           encoding(2 bytes) = 7c e8
0038h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> minBytes => new byte[57]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x11,0x8B,0x49,0x08,0x85,0xC9,0x77,0x03,0x33,0xC0,0xC3,0x0F,0xB6,0x02,0x41,0xB8,0x01,0x00,0x00,0x00,0x83,0xF9,0x01,0x7E,0x18,0x4D,0x63,0xC8,0x46,0x0F,0xB6,0x0C,0x0A,0x44,0x3B,0xC8,0x7D,0x03,0x41,0x8B,0xC1,0x41,0xFF,0xC0,0x44,0x3B,0xC1,0x7C,0xE8,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: sbyte gcd(sbyte lhs, sbyte rhs)
; location: [7FFC7C09EE00h, 7FFC7C09EE43h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cl                  ; MOVSX(Movsx_r64_rm8) [RAX,CL]                        encoding(4 bytes) = 48 0f be c1
0009h mov ecx,eax                   ; MOV(Mov_r32_rm32) [ECX,EAX]                          encoding(2 bytes) = 8b c8
000bh sar ecx,7                     ; SAR(Sar_rm32_imm8) [ECX,7h:imm8]                     encoding(3 bytes) = c1 f9 07
000eh add eax,ecx                   ; ADD(Add_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 03 c1
0010h xor eax,ecx                   ; XOR(Xor_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 33 c1
0012h movsx rax,al                  ; MOVSX(Movsx_r64_rm8) [RAX,AL]                        encoding(4 bytes) = 48 0f be c0
0016h movsx rdx,dl                  ; MOVSX(Movsx_r64_rm8) [RDX,DL]                        encoding(4 bytes) = 48 0f be d2
001ah mov ecx,edx                   ; MOV(Mov_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 8b ca
001ch sar ecx,7                     ; SAR(Sar_rm32_imm8) [ECX,7h:imm8]                     encoding(3 bytes) = c1 f9 07
001fh add edx,ecx                   ; ADD(Add_r32_rm32) [EDX,ECX]                          encoding(2 bytes) = 03 d1
0021h xor edx,ecx                   ; XOR(Xor_r32_rm32) [EDX,ECX]                          encoding(2 bytes) = 33 d1
0023h movsx rcx,dl                  ; MOVSX(Movsx_r64_rm8) [RCX,DL]                        encoding(4 bytes) = 48 0f be ca
0027h test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
0029h je short 0041h                ; JE(Je_rel8_64) [41h:jmp64]                           encoding(2 bytes) = 74 16
002bh cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
002ch idiv ecx                      ; IDIV(Idiv_rm32) [ECX]                                encoding(2 bytes) = f7 f9
002eh movsx rax,dl                  ; MOVSX(Movsx_r64_rm8) [RAX,DL]                        encoding(4 bytes) = 48 0f be c2
0032h mov edx,ecx                   ; MOV(Mov_r32_rm32) [EDX,ECX]                          encoding(2 bytes) = 8b d1
0034h mov ecx,eax                   ; MOV(Mov_r32_rm32) [ECX,EAX]                          encoding(2 bytes) = 8b c8
0036h test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
0038h jne short 003dh               ; JNE(Jne_rel8_64) [3Dh:jmp64]                         encoding(2 bytes) = 75 03
003ah mov eax,edx                   ; MOV(Mov_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 8b c2
003ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
003dh mov eax,edx                   ; MOV(Mov_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 8b c2
003fh jmp short 002bh               ; JMP(Jmp_rel8_64) [2Bh:jmp64]                         encoding(2 bytes) = eb ea
0041h mov edx,eax                   ; MOV(Mov_r32_rm32) [EDX,EAX]                          encoding(2 bytes) = 8b d0
0043h jmp short 003ah               ; JMP(Jmp_rel8_64) [3Ah:jmp64]                         encoding(2 bytes) = eb f5
; static ReadOnlySpan<byte> gcdBytes => new byte[69]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBE,0xC1,0x8B,0xC8,0xC1,0xF9,0x07,0x03,0xC1,0x33,0xC1,0x48,0x0F,0xBE,0xC0,0x48,0x0F,0xBE,0xD2,0x8B,0xCA,0xC1,0xF9,0x07,0x03,0xD1,0x33,0xD1,0x48,0x0F,0xBE,0xCA,0x85,0xC9,0x74,0x16,0x99,0xF7,0xF9,0x48,0x0F,0xBE,0xC2,0x8B,0xD1,0x8B,0xC8,0x85,0xC9,0x75,0x03,0x8B,0xC2,0xC3,0x8B,0xC2,0xEB,0xEA,0x8B,0xD0,0xEB,0xF5};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: byte gcd(byte lhs, byte rhs)
; location: [7FFC7C09EE60h, 7FFC7C09EE7Ch]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h test dl,dl                    ; TEST(Test_rm8_r8) [DL,DL]                            encoding(2 bytes) = 84 d2
0007h je short 0019h                ; JE(Je_rel8_64) [19h:jmp64]                           encoding(2 bytes) = 74 10
0009h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
000ch movzx ecx,dl                  ; MOVZX(Movzx_r32_rm8) [ECX,DL]                        encoding(3 bytes) = 0f b6 ca
000fh cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
0010h idiv ecx                      ; IDIV(Idiv_rm32) [ECX]                                encoding(2 bytes) = f7 f9
0012h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
0015h test dl,dl                    ; TEST(Test_rm8_r8) [DL,DL]                            encoding(2 bytes) = 84 d2
0017h jne short 0009h               ; JNE(Jne_rel8_64) [9h:jmp64]                          encoding(2 bytes) = 75 f0
0019h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
001ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> gcdBytes => new byte[29]{0x0F,0x1F,0x44,0x00,0x00,0x84,0xD2,0x74,0x10,0x0F,0xB6,0xC1,0x0F,0xB6,0xCA,0x99,0xF7,0xF9,0x0F,0xB6,0xD2,0x84,0xD2,0x75,0xF0,0x0F,0xB6,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: short gcd(short lhs, short rhs)
; location: [7FFC7C09EE90h, 7FFC7C09EED3h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cx                  ; MOVSX(Movsx_r64_rm16) [RAX,CX]                       encoding(4 bytes) = 48 0f bf c1
0009h mov ecx,eax                   ; MOV(Mov_r32_rm32) [ECX,EAX]                          encoding(2 bytes) = 8b c8
000bh sar ecx,0Fh                   ; SAR(Sar_rm32_imm8) [ECX,fh:imm8]                     encoding(3 bytes) = c1 f9 0f
000eh add eax,ecx                   ; ADD(Add_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 03 c1
0010h xor eax,ecx                   ; XOR(Xor_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 33 c1
0012h movsx rax,ax                  ; MOVSX(Movsx_r64_rm16) [RAX,AX]                       encoding(4 bytes) = 48 0f bf c0
0016h movsx rdx,dx                  ; MOVSX(Movsx_r64_rm16) [RDX,DX]                       encoding(4 bytes) = 48 0f bf d2
001ah mov ecx,edx                   ; MOV(Mov_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 8b ca
001ch sar ecx,0Fh                   ; SAR(Sar_rm32_imm8) [ECX,fh:imm8]                     encoding(3 bytes) = c1 f9 0f
001fh add edx,ecx                   ; ADD(Add_r32_rm32) [EDX,ECX]                          encoding(2 bytes) = 03 d1
0021h xor edx,ecx                   ; XOR(Xor_r32_rm32) [EDX,ECX]                          encoding(2 bytes) = 33 d1
0023h movsx rcx,dx                  ; MOVSX(Movsx_r64_rm16) [RCX,DX]                       encoding(4 bytes) = 48 0f bf ca
0027h test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
0029h je short 0041h                ; JE(Je_rel8_64) [41h:jmp64]                           encoding(2 bytes) = 74 16
002bh cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
002ch idiv ecx                      ; IDIV(Idiv_rm32) [ECX]                                encoding(2 bytes) = f7 f9
002eh movsx rax,dx                  ; MOVSX(Movsx_r64_rm16) [RAX,DX]                       encoding(4 bytes) = 48 0f bf c2
0032h mov edx,ecx                   ; MOV(Mov_r32_rm32) [EDX,ECX]                          encoding(2 bytes) = 8b d1
0034h mov ecx,eax                   ; MOV(Mov_r32_rm32) [ECX,EAX]                          encoding(2 bytes) = 8b c8
0036h test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
0038h jne short 003dh               ; JNE(Jne_rel8_64) [3Dh:jmp64]                         encoding(2 bytes) = 75 03
003ah mov eax,edx                   ; MOV(Mov_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 8b c2
003ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
003dh mov eax,edx                   ; MOV(Mov_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 8b c2
003fh jmp short 002bh               ; JMP(Jmp_rel8_64) [2Bh:jmp64]                         encoding(2 bytes) = eb ea
0041h mov edx,eax                   ; MOV(Mov_r32_rm32) [EDX,EAX]                          encoding(2 bytes) = 8b d0
0043h jmp short 003ah               ; JMP(Jmp_rel8_64) [3Ah:jmp64]                         encoding(2 bytes) = eb f5
; static ReadOnlySpan<byte> gcdBytes => new byte[69]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBF,0xC1,0x8B,0xC8,0xC1,0xF9,0x0F,0x03,0xC1,0x33,0xC1,0x48,0x0F,0xBF,0xC0,0x48,0x0F,0xBF,0xD2,0x8B,0xCA,0xC1,0xF9,0x0F,0x03,0xD1,0x33,0xD1,0x48,0x0F,0xBF,0xCA,0x85,0xC9,0x74,0x16,0x99,0xF7,0xF9,0x48,0x0F,0xBF,0xC2,0x8B,0xD1,0x8B,0xC8,0x85,0xC9,0x75,0x03,0x8B,0xC2,0xC3,0x8B,0xC2,0xEB,0xEA,0x8B,0xD0,0xEB,0xF5};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ushort gcd(ushort lhs, ushort rhs)
; location: [7FFC7C09EEF0h, 7FFC7C09EF12h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,dx                  ; MOVZX(Movzx_r32_rm16) [EAX,DX]                       encoding(3 bytes) = 0f b7 c2
0008h test eax,eax                  ; TEST(Test_rm32_r32) [EAX,EAX]                        encoding(2 bytes) = 85 c0
000ah je short 001fh                ; JE(Je_rel8_64) [1Fh:jmp64]                           encoding(2 bytes) = 74 13
000ch movzx eax,cx                  ; MOVZX(Movzx_r32_rm16) [EAX,CX]                       encoding(3 bytes) = 0f b7 c1
000fh movzx ecx,dx                  ; MOVZX(Movzx_r32_rm16) [ECX,DX]                       encoding(3 bytes) = 0f b7 ca
0012h cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
0013h idiv ecx                      ; IDIV(Idiv_rm32) [ECX]                                encoding(2 bytes) = f7 f9
0015h movzx edx,dx                  ; MOVZX(Movzx_r32_rm16) [EDX,DX]                       encoding(3 bytes) = 0f b7 d2
0018h movzx eax,dx                  ; MOVZX(Movzx_r32_rm16) [EAX,DX]                       encoding(3 bytes) = 0f b7 c2
001bh test eax,eax                  ; TEST(Test_rm32_r32) [EAX,EAX]                        encoding(2 bytes) = 85 c0
001dh jne short 000ch               ; JNE(Jne_rel8_64) [Ch:jmp64]                          encoding(2 bytes) = 75 ed
001fh movzx eax,cx                  ; MOVZX(Movzx_r32_rm16) [EAX,CX]                       encoding(3 bytes) = 0f b7 c1
0022h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> gcdBytes => new byte[35]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB7,0xC2,0x85,0xC0,0x74,0x13,0x0F,0xB7,0xC1,0x0F,0xB7,0xCA,0x99,0xF7,0xF9,0x0F,0xB7,0xD2,0x0F,0xB7,0xC2,0x85,0xC0,0x75,0xED,0x0F,0xB7,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: int gcd(int lhs, int rhs)
; location: [7FFC7C09EF30h, 7FFC7C09EF59h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov eax,ecx                   ; MOV(Mov_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 8b c1
0007h sar eax,1Fh                   ; SAR(Sar_rm32_imm8) [EAX,1fh:imm8]                    encoding(3 bytes) = c1 f8 1f
000ah add ecx,eax                   ; ADD(Add_r32_rm32) [ECX,EAX]                          encoding(2 bytes) = 03 c8
000ch xor eax,ecx                   ; XOR(Xor_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 33 c1
000eh mov ecx,edx                   ; MOV(Mov_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 8b ca
0010h sar ecx,1Fh                   ; SAR(Sar_rm32_imm8) [ECX,1fh:imm8]                    encoding(3 bytes) = c1 f9 1f
0013h lea r8d,[rdx+rcx]             ; LEA(Lea_r32_m) [R8D,mem(Unknown,RDX:br,DS:sr)]       encoding(4 bytes) = 44 8d 04 0a
0017h xor ecx,r8d                   ; XOR(Xor_r32_rm32) [ECX,R8D]                          encoding(3 bytes) = 41 33 c8
001ah test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
001ch je short 0029h                ; JE(Je_rel8_64) [29h:jmp64]                           encoding(2 bytes) = 74 0b
001eh cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
001fh idiv ecx                      ; IDIV(Idiv_rm32) [ECX]                                encoding(2 bytes) = f7 f9
0021h mov eax,ecx                   ; MOV(Mov_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 8b c1
0023h mov ecx,edx                   ; MOV(Mov_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 8b ca
0025h test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
0027h jne short 001eh               ; JNE(Jne_rel8_64) [1Eh:jmp64]                         encoding(2 bytes) = 75 f5
0029h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> gcdBytes => new byte[42]{0x0F,0x1F,0x44,0x00,0x00,0x8B,0xC1,0xC1,0xF8,0x1F,0x03,0xC8,0x33,0xC1,0x8B,0xCA,0xC1,0xF9,0x1F,0x44,0x8D,0x04,0x0A,0x41,0x33,0xC8,0x85,0xC9,0x74,0x0B,0x99,0xF7,0xF9,0x8B,0xC1,0x8B,0xCA,0x85,0xC9,0x75,0xF5,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: uint gcd(uint lhs, uint rhs)
; location: [7FFC7C09EF70h, 7FFC7C09EF8Ah]
0000h mov eax,ecx                   ; MOV(Mov_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 8b c1
0002h mov r8d,edx                   ; MOV(Mov_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 8b c2
0005h test r8d,r8d                  ; TEST(Test_rm32_r32) [R8D,R8D]                        encoding(3 bytes) = 45 85 c0
0008h je short 001ah                ; JE(Je_rel8_64) [1Ah:jmp64]                           encoding(2 bytes) = 74 10
000ah xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
000ch div r8d                       ; DIV(Div_rm32) [R8D]                                  encoding(3 bytes) = 41 f7 f0
000fh mov eax,r8d                   ; MOV(Mov_r32_rm32) [EAX,R8D]                          encoding(3 bytes) = 41 8b c0
0012h mov r8d,edx                   ; MOV(Mov_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 8b c2
0015h test r8d,r8d                  ; TEST(Test_rm32_r32) [R8D,R8D]                        encoding(3 bytes) = 45 85 c0
0018h jne short 000ah               ; JNE(Jne_rel8_64) [Ah:jmp64]                          encoding(2 bytes) = 75 f0
001ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> gcdBytes => new byte[27]{0x8B,0xC1,0x44,0x8B,0xC2,0x45,0x85,0xC0,0x74,0x10,0x33,0xD2,0x41,0xF7,0xF0,0x41,0x8B,0xC0,0x44,0x8B,0xC2,0x45,0x85,0xC0,0x75,0xF0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: long gcd(long lhs, long rhs)
; location: [7FFC7C09EFA0h, 7FFC7C09EFD5h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0008h sar rax,3Fh                   ; SAR(Sar_rm64_imm8) [RAX,3fh:imm8]                    encoding(4 bytes) = 48 c1 f8 3f
000ch add rcx,rax                   ; ADD(Add_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 03 c8
000fh xor rax,rcx                   ; XOR(Xor_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 33 c1
0012h mov rcx,rdx                   ; MOV(Mov_r64_rm64) [RCX,RDX]                          encoding(3 bytes) = 48 8b ca
0015h sar rcx,3Fh                   ; SAR(Sar_rm64_imm8) [RCX,3fh:imm8]                    encoding(4 bytes) = 48 c1 f9 3f
0019h lea r8,[rdx+rcx]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RDX:br,DS:sr)]        encoding(4 bytes) = 4c 8d 04 0a
001dh xor rcx,r8                    ; XOR(Xor_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 33 c8
0020h test rcx,rcx                  ; TEST(Test_rm64_r64) [RCX,RCX]                        encoding(3 bytes) = 48 85 c9
0023h je short 0035h                ; JE(Je_rel8_64) [35h:jmp64]                           encoding(2 bytes) = 74 10
0025h cqo                           ; CQO(Cqo)                                             encoding(2 bytes) = 48 99
0027h idiv rcx                      ; IDIV(Idiv_rm64) [RCX]                                encoding(3 bytes) = 48 f7 f9
002ah mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
002dh mov rcx,rdx                   ; MOV(Mov_r64_rm64) [RCX,RDX]                          encoding(3 bytes) = 48 8b ca
0030h test rcx,rcx                  ; TEST(Test_rm64_r64) [RCX,RCX]                        encoding(3 bytes) = 48 85 c9
0033h jne short 0025h               ; JNE(Jne_rel8_64) [25h:jmp64]                         encoding(2 bytes) = 75 f0
0035h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> gcdBytes => new byte[54]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0xC1,0x48,0xC1,0xF8,0x3F,0x48,0x03,0xC8,0x48,0x33,0xC1,0x48,0x8B,0xCA,0x48,0xC1,0xF9,0x3F,0x4C,0x8D,0x04,0x0A,0x49,0x33,0xC8,0x48,0x85,0xC9,0x74,0x10,0x48,0x99,0x48,0xF7,0xF9,0x48,0x8B,0xC1,0x48,0x8B,0xCA,0x48,0x85,0xC9,0x75,0xF0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ulong gcd(ulong lhs, ulong rhs)
; location: [7FFC7C09EFF0h, 7FFC7C09F00Bh]
0000h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0003h mov r8,rdx                    ; MOV(Mov_r64_rm64) [R8,RDX]                           encoding(3 bytes) = 4c 8b c2
0006h test r8,r8                    ; TEST(Test_rm64_r64) [R8,R8]                          encoding(3 bytes) = 4d 85 c0
0009h je short 001bh                ; JE(Je_rel8_64) [1Bh:jmp64]                           encoding(2 bytes) = 74 10
000bh xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
000dh div r8                        ; DIV(Div_rm64) [R8]                                   encoding(3 bytes) = 49 f7 f0
0010h mov rax,r8                    ; MOV(Mov_r64_rm64) [RAX,R8]                           encoding(3 bytes) = 49 8b c0
0013h mov r8,rdx                    ; MOV(Mov_r64_rm64) [R8,RDX]                           encoding(3 bytes) = 4c 8b c2
0016h test r8,r8                    ; TEST(Test_rm64_r64) [R8,R8]                          encoding(3 bytes) = 4d 85 c0
0019h jne short 000bh               ; JNE(Jne_rel8_64) [Bh:jmp64]                          encoding(2 bytes) = 75 f0
001bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> gcdBytes => new byte[28]{0x48,0x8B,0xC1,0x4C,0x8B,0xC2,0x4D,0x85,0xC0,0x74,0x10,0x33,0xD2,0x49,0xF7,0xF0,0x49,0x8B,0xC0,0x4C,0x8B,0xC2,0x4D,0x85,0xC0,0x75,0xF0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool gt(ushort lhs, ushort rhs)
; location: [7FFC7C09F0B0h, 7FFC7C09F0C3h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cx                  ; MOVZX(Movzx_r32_rm16) [EAX,CX]                       encoding(3 bytes) = 0f b7 c1
0008h movzx edx,dx                  ; MOVZX(Movzx_r32_rm16) [EDX,DX]                       encoding(3 bytes) = 0f b7 d2
000bh cmp eax,edx                   ; CMP(Cmp_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 3b c2
000dh setg al                       ; SETG(Setg_rm8) [AL]                                  encoding(3 bytes) = 0f 9f c0
0010h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> gtBytes => new byte[20]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB7,0xC1,0x0F,0xB7,0xD2,0x3B,0xC2,0x0F,0x9F,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool gt(uint lhs, uint rhs)
; location: [7FFC7C09F100h, 7FFC7C09F10Dh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h cmp ecx,edx                   ; CMP(Cmp_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 3b ca
0007h seta al                       ; SETA(Seta_rm8) [AL]                                  encoding(3 bytes) = 0f 97 c0
000ah movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> gtBytes => new byte[14]{0x0F,0x1F,0x44,0x00,0x00,0x3B,0xCA,0x0F,0x97,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool gt(long lhs, long rhs)
; location: [7FFC7C09F120h, 7FFC7C09F12Eh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h cmp rcx,rdx                   ; CMP(Cmp_r64_rm64) [RCX,RDX]                          encoding(3 bytes) = 48 3b ca
0008h setg al                       ; SETG(Setg_rm8) [AL]                                  encoding(3 bytes) = 0f 9f c0
000bh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> gtBytes => new byte[15]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x3B,0xCA,0x0F,0x9F,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> gt(ReadOnlySpan<byte> lhs, ReadOnlySpan<byte> rhs, Span<bool> dst)
; location: [7FFC7C09F1F0h, 7FFC7C09F254h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0003h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0004h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0008h mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000bh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000fh mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0012h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0015h xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
0018h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
001ah jle short 004ch               ; JLE(Jle_rel8_64) [4Ch:jmp64]                         encoding(2 bytes) = 7e 30
001ch cmp r11d,r9d                  ; CMP(Cmp_r32_rm32) [R11D,R9D]                         encoding(3 bytes) = 45 3b d9
001fh jae short 005fh               ; JAE(Jae_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 73 3e
0021h movsxd rsi,r11d               ; MOVSXD(Movsxd_r64_rm32) [RSI,R11D]                   encoding(3 bytes) = 49 63 f3
0024h lea rdi,[rax+rsi]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 30
0028h movzx ebx,byte ptr [r10+rsi]  ; MOVZX(Movzx_r32_rm8) [EBX,mem(8u,R10:br,DS:sr)]      encoding(5 bytes) = 41 0f b6 1c 32
002dh cmp r11d,[r8+8]               ; CMP(Cmp_r32_rm32) [R11D,mem(32u,R8:br,DS:sr)]        encoding(4 bytes) = 45 3b 58 08
0031h jae short 005fh               ; JAE(Jae_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 73 2c
0033h mov rbp,[r8]                  ; MOV(Mov_r64_rm64) [RBP,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 28
0036h movzx esi,byte ptr [rsi+rbp]  ; MOVZX(Movzx_r32_rm8) [ESI,mem(8u,RSI:br,DS:sr)]      encoding(5 bytes) = 40 0f b6 34 2e
003bh cmp ebx,esi                   ; CMP(Cmp_r32_rm32) [EBX,ESI]                          encoding(2 bytes) = 3b de
003dh setg sil                      ; SETG(Setg_rm8) [SIL]                                 encoding(4 bytes) = 40 0f 9f c6
0041h mov [rdi],sil                 ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),SIL]           encoding(3 bytes) = 40 88 37
0044h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
0047h cmp r11d,edx                  ; CMP(Cmp_r32_rm32) [R11D,EDX]                         encoding(3 bytes) = 44 3b da
004ah jl short 001ch                ; JL(Jl_rel8_64) [1Ch:jmp64]                           encoding(2 bytes) = 7c d0
004ch mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
004fh mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0053h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0056h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
005ah pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
005bh pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
005ch pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
005dh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
005eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
005fh call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC34450h:jmp64]                encoding(5 bytes) = e8 ec 43 c3 5f
0064h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> gtBytes => new byte[101]{0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x12,0x8B,0x52,0x08,0x45,0x33,0xDB,0x85,0xD2,0x7E,0x30,0x45,0x3B,0xD9,0x73,0x3E,0x49,0x63,0xF3,0x48,0x8D,0x3C,0x30,0x41,0x0F,0xB6,0x1C,0x32,0x45,0x3B,0x58,0x08,0x73,0x2C,0x49,0x8B,0x28,0x40,0x0F,0xB6,0x34,0x2E,0x3B,0xDE,0x40,0x0F,0x9F,0xC6,0x40,0x88,0x37,0x41,0xFF,0xC3,0x44,0x3B,0xDA,0x7C,0xD0,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0xC3,0xE8,0xEC,0x43,0xC3,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> gt(ReadOnlySpan<short> lhs, ReadOnlySpan<short> rhs, Span<bool> dst)
; location: [7FFC7C09F280h, 7FFC7C09F2E5h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0003h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0004h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0008h mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000bh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000fh mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0012h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0015h xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
0018h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
001ah jle short 004dh               ; JLE(Jle_rel8_64) [4Dh:jmp64]                         encoding(2 bytes) = 7e 31
001ch cmp r11d,r9d                  ; CMP(Cmp_r32_rm32) [R11D,R9D]                         encoding(3 bytes) = 45 3b d9
001fh jae short 0060h               ; JAE(Jae_rel8_64) [60h:jmp64]                         encoding(2 bytes) = 73 3f
0021h movsxd rsi,r11d               ; MOVSXD(Movsxd_r64_rm32) [RSI,R11D]                   encoding(3 bytes) = 49 63 f3
0024h lea rdi,[rax+rsi]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 30
0028h movsx rbx,word ptr [r10+rsi*2]; MOVSX(Movsx_r64_rm16) [RBX,mem(16i,R10:br,DS:sr)]    encoding(5 bytes) = 49 0f bf 1c 72
002dh cmp r11d,[r8+8]               ; CMP(Cmp_r32_rm32) [R11D,mem(32u,R8:br,DS:sr)]        encoding(4 bytes) = 45 3b 58 08
0031h jae short 0060h               ; JAE(Jae_rel8_64) [60h:jmp64]                         encoding(2 bytes) = 73 2d
0033h mov rbp,[r8]                  ; MOV(Mov_r64_rm64) [RBP,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 28
0036h movsx rsi,word ptr [rbp+rsi*2]; MOVSX(Movsx_r64_rm16) [RSI,mem(16i,RBP:br,SS:sr)]    encoding(6 bytes) = 48 0f bf 74 75 00
003ch cmp ebx,esi                   ; CMP(Cmp_r32_rm32) [EBX,ESI]                          encoding(2 bytes) = 3b de
003eh setg sil                      ; SETG(Setg_rm8) [SIL]                                 encoding(4 bytes) = 40 0f 9f c6
0042h mov [rdi],sil                 ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),SIL]           encoding(3 bytes) = 40 88 37
0045h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
0048h cmp r11d,edx                  ; CMP(Cmp_r32_rm32) [R11D,EDX]                         encoding(3 bytes) = 44 3b da
004bh jl short 001ch                ; JL(Jl_rel8_64) [1Ch:jmp64]                           encoding(2 bytes) = 7c cf
004dh mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0050h mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0054h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0057h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
005bh pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
005ch pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
005dh pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
005eh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
005fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0060h call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC343C0h:jmp64]                encoding(5 bytes) = e8 5b 43 c3 5f
0065h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> gtBytes => new byte[102]{0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x12,0x8B,0x52,0x08,0x45,0x33,0xDB,0x85,0xD2,0x7E,0x31,0x45,0x3B,0xD9,0x73,0x3F,0x49,0x63,0xF3,0x48,0x8D,0x3C,0x30,0x49,0x0F,0xBF,0x1C,0x72,0x45,0x3B,0x58,0x08,0x73,0x2D,0x49,0x8B,0x28,0x48,0x0F,0xBF,0x74,0x75,0x00,0x3B,0xDE,0x40,0x0F,0x9F,0xC6,0x40,0x88,0x37,0x41,0xFF,0xC3,0x44,0x3B,0xDA,0x7C,0xCF,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0xC3,0xE8,0x5B,0x43,0xC3,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> gt(ReadOnlySpan<uint> lhs, ReadOnlySpan<uint> rhs, Span<bool> dst)
; location: [7FFC7C09F420h, 7FFC7C09F482h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0003h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0004h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0008h mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000bh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000fh mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0012h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0015h xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
0018h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
001ah jle short 004ah               ; JLE(Jle_rel8_64) [4Ah:jmp64]                         encoding(2 bytes) = 7e 2e
001ch cmp r11d,r9d                  ; CMP(Cmp_r32_rm32) [R11D,R9D]                         encoding(3 bytes) = 45 3b d9
001fh jae short 005dh               ; JAE(Jae_rel8_64) [5Dh:jmp64]                         encoding(2 bytes) = 73 3c
0021h movsxd rsi,r11d               ; MOVSXD(Movsxd_r64_rm32) [RSI,R11D]                   encoding(3 bytes) = 49 63 f3
0024h lea rdi,[rax+rsi]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 30
0028h mov ebx,[r10+rsi*4]           ; MOV(Mov_r32_rm32) [EBX,mem(32u,R10:br,DS:sr)]        encoding(4 bytes) = 41 8b 1c b2
002ch cmp r11d,[r8+8]               ; CMP(Cmp_r32_rm32) [R11D,mem(32u,R8:br,DS:sr)]        encoding(4 bytes) = 45 3b 58 08
0030h jae short 005dh               ; JAE(Jae_rel8_64) [5Dh:jmp64]                         encoding(2 bytes) = 73 2b
0032h mov rbp,[r8]                  ; MOV(Mov_r64_rm64) [RBP,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 28
0035h mov esi,[rbp+rsi*4]           ; MOV(Mov_r32_rm32) [ESI,mem(32u,RBP:br,SS:sr)]        encoding(4 bytes) = 8b 74 b5 00
0039h cmp ebx,esi                   ; CMP(Cmp_r32_rm32) [EBX,ESI]                          encoding(2 bytes) = 3b de
003bh seta sil                      ; SETA(Seta_rm8) [SIL]                                 encoding(4 bytes) = 40 0f 97 c6
003fh mov [rdi],sil                 ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),SIL]           encoding(3 bytes) = 40 88 37
0042h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
0045h cmp r11d,edx                  ; CMP(Cmp_r32_rm32) [R11D,EDX]                         encoding(3 bytes) = 44 3b da
0048h jl short 001ch                ; JL(Jl_rel8_64) [1Ch:jmp64]                           encoding(2 bytes) = 7c d2
004ah mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
004dh mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0051h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0054h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
0058h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0059h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
005ah pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
005bh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
005ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
005dh call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC34220h:jmp64]                encoding(5 bytes) = e8 be 41 c3 5f
0062h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> gtBytes => new byte[99]{0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x12,0x8B,0x52,0x08,0x45,0x33,0xDB,0x85,0xD2,0x7E,0x2E,0x45,0x3B,0xD9,0x73,0x3C,0x49,0x63,0xF3,0x48,0x8D,0x3C,0x30,0x41,0x8B,0x1C,0xB2,0x45,0x3B,0x58,0x08,0x73,0x2B,0x49,0x8B,0x28,0x8B,0x74,0xB5,0x00,0x3B,0xDE,0x40,0x0F,0x97,0xC6,0x40,0x88,0x37,0x41,0xFF,0xC3,0x44,0x3B,0xDA,0x7C,0xD2,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0xC3,0xE8,0xBE,0x41,0xC3,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> gt(ReadOnlySpan<long> lhs, ReadOnlySpan<long> rhs, Span<bool> dst)
; location: [7FFC7C09F4A0h, 7FFC7C09F504h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0003h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0004h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0008h mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000bh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000fh mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0012h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0015h xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
0018h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
001ah jle short 004ch               ; JLE(Jle_rel8_64) [4Ch:jmp64]                         encoding(2 bytes) = 7e 30
001ch cmp r11d,r9d                  ; CMP(Cmp_r32_rm32) [R11D,R9D]                         encoding(3 bytes) = 45 3b d9
001fh jae short 005fh               ; JAE(Jae_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 73 3e
0021h movsxd rsi,r11d               ; MOVSXD(Movsxd_r64_rm32) [RSI,R11D]                   encoding(3 bytes) = 49 63 f3
0024h lea rdi,[rax+rsi]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 30
0028h mov rbx,[r10+rsi*8]           ; MOV(Mov_r64_rm64) [RBX,mem(64u,R10:br,DS:sr)]        encoding(4 bytes) = 49 8b 1c f2
002ch cmp r11d,[r8+8]               ; CMP(Cmp_r32_rm32) [R11D,mem(32u,R8:br,DS:sr)]        encoding(4 bytes) = 45 3b 58 08
0030h jae short 005fh               ; JAE(Jae_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 73 2d
0032h mov rbp,[r8]                  ; MOV(Mov_r64_rm64) [RBP,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 28
0035h mov rsi,[rbp+rsi*8]           ; MOV(Mov_r64_rm64) [RSI,mem(64u,RBP:br,SS:sr)]        encoding(5 bytes) = 48 8b 74 f5 00
003ah cmp rbx,rsi                   ; CMP(Cmp_r64_rm64) [RBX,RSI]                          encoding(3 bytes) = 48 3b de
003dh setg sil                      ; SETG(Setg_rm8) [SIL]                                 encoding(4 bytes) = 40 0f 9f c6
0041h mov [rdi],sil                 ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),SIL]           encoding(3 bytes) = 40 88 37
0044h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
0047h cmp r11d,edx                  ; CMP(Cmp_r32_rm32) [R11D,EDX]                         encoding(3 bytes) = 44 3b da
004ah jl short 001ch                ; JL(Jl_rel8_64) [1Ch:jmp64]                           encoding(2 bytes) = 7c d0
004ch mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
004fh mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0053h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0056h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
005ah pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
005bh pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
005ch pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
005dh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
005eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
005fh call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC341A0h:jmp64]                encoding(5 bytes) = e8 3c 41 c3 5f
0064h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> gtBytes => new byte[101]{0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x12,0x8B,0x52,0x08,0x45,0x33,0xDB,0x85,0xD2,0x7E,0x30,0x45,0x3B,0xD9,0x73,0x3E,0x49,0x63,0xF3,0x48,0x8D,0x3C,0x30,0x49,0x8B,0x1C,0xF2,0x45,0x3B,0x58,0x08,0x73,0x2D,0x49,0x8B,0x28,0x48,0x8B,0x74,0xF5,0x00,0x48,0x3B,0xDE,0x40,0x0F,0x9F,0xC6,0x40,0x88,0x37,0x41,0xFF,0xC3,0x44,0x3B,0xDA,0x7C,0xD0,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0xC3,0xE8,0x3C,0x41,0xC3,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> gt(ReadOnlySpan<ulong> lhs, ReadOnlySpan<ulong> rhs, Span<bool> dst)
; location: [7FFC7C09F530h, 7FFC7C09F594h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0003h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0004h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0008h mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000bh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000fh mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0012h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0015h xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
0018h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
001ah jle short 004ch               ; JLE(Jle_rel8_64) [4Ch:jmp64]                         encoding(2 bytes) = 7e 30
001ch cmp r11d,r9d                  ; CMP(Cmp_r32_rm32) [R11D,R9D]                         encoding(3 bytes) = 45 3b d9
001fh jae short 005fh               ; JAE(Jae_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 73 3e
0021h movsxd rsi,r11d               ; MOVSXD(Movsxd_r64_rm32) [RSI,R11D]                   encoding(3 bytes) = 49 63 f3
0024h lea rdi,[rax+rsi]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 30
0028h mov rbx,[r10+rsi*8]           ; MOV(Mov_r64_rm64) [RBX,mem(64u,R10:br,DS:sr)]        encoding(4 bytes) = 49 8b 1c f2
002ch cmp r11d,[r8+8]               ; CMP(Cmp_r32_rm32) [R11D,mem(32u,R8:br,DS:sr)]        encoding(4 bytes) = 45 3b 58 08
0030h jae short 005fh               ; JAE(Jae_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 73 2d
0032h mov rbp,[r8]                  ; MOV(Mov_r64_rm64) [RBP,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 28
0035h mov rsi,[rbp+rsi*8]           ; MOV(Mov_r64_rm64) [RSI,mem(64u,RBP:br,SS:sr)]        encoding(5 bytes) = 48 8b 74 f5 00
003ah cmp rbx,rsi                   ; CMP(Cmp_r64_rm64) [RBX,RSI]                          encoding(3 bytes) = 48 3b de
003dh seta sil                      ; SETA(Seta_rm8) [SIL]                                 encoding(4 bytes) = 40 0f 97 c6
0041h mov [rdi],sil                 ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),SIL]           encoding(3 bytes) = 40 88 37
0044h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
0047h cmp r11d,edx                  ; CMP(Cmp_r32_rm32) [R11D,EDX]                         encoding(3 bytes) = 44 3b da
004ah jl short 001ch                ; JL(Jl_rel8_64) [1Ch:jmp64]                           encoding(2 bytes) = 7c d0
004ch mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
004fh mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0053h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0056h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
005ah pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
005bh pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
005ch pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
005dh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
005eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
005fh call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC34110h:jmp64]                encoding(5 bytes) = e8 ac 40 c3 5f
0064h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> gtBytes => new byte[101]{0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x12,0x8B,0x52,0x08,0x45,0x33,0xDB,0x85,0xD2,0x7E,0x30,0x45,0x3B,0xD9,0x73,0x3E,0x49,0x63,0xF3,0x48,0x8D,0x3C,0x30,0x49,0x8B,0x1C,0xF2,0x45,0x3B,0x58,0x08,0x73,0x2D,0x49,0x8B,0x28,0x48,0x8B,0x74,0xF5,0x00,0x48,0x3B,0xDE,0x40,0x0F,0x97,0xC6,0x40,0x88,0x37,0x41,0xFF,0xC3,0x44,0x3B,0xDA,0x7C,0xD0,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0xC3,0xE8,0xAC,0x40,0xC3,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> gt(ReadOnlySpan<sbyte> lhs, ReadOnlySpan<sbyte> rhs)
; location: [7FFC7C09F5C0h, 7FFC7C09F6C5h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push r12                      ; PUSH(Push_r64) [R12]                                 encoding(2 bytes) = 41 54
0006h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0007h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0008h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0009h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
000ah sub rsp,60h                   ; SUB(Sub_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 ec 60
000eh vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0011h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0014h lea rdi,[rsp+28h]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 7c 24 28
0019h mov ecx,0Ch                   ; MOV(Mov_r32_imm32) [ECX,ch:imm32]                    encoding(5 bytes) = b9 0c 00 00 00
001eh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0020h rep stosd                     ; STOSD(Stosd_m32_EAX) [mem(32u),EAX]                  encoding(2 bytes) = f3 ab
0022h mov rcx,rsi                   ; MOV(Mov_r64_rm64) [RCX,RSI]                          encoding(3 bytes) = 48 8b ce
0025h mov rbx,rcx                   ; MOV(Mov_r64_rm64) [RBX,RCX]                          encoding(3 bytes) = 48 8b d9
0028h mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
002bh mov rdi,r8                    ; MOV(Mov_r64_rm64) [RDI,R8]                           encoding(3 bytes) = 49 8b f8
002eh mov ebp,6Eh                   ; MOV(Mov_r32_imm32) [EBP,6eh:imm32]                   encoding(5 bytes) = bd 6e 00 00 00
0033h mov r14d,1                    ; MOV(Mov_r32_imm32) [R14D,1h:imm32]                   encoding(6 bytes) = 41 be 01 00 00 00
0039h mov r15d,[rsi+8]              ; MOV(Mov_r32_rm32) [R15D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 8b 7e 08
003dh mov r12d,[rdi+8]              ; MOV(Mov_r32_rm32) [R12D,mem(32u,RDI:br,DS:sr)]       encoding(4 bytes) = 44 8b 67 08
0041h cmp r15d,r12d                 ; CMP(Cmp_r32_rm32) [R15D,R12D]                        encoding(3 bytes) = 45 3b fc
0044h jne short 00abh               ; JNE(Jne_rel8_64) [ABh:jmp64]                         encoding(2 bytes) = 75 65
0046h movsxd rdx,r15d               ; MOVSXD(Movsxd_r64_rm32) [RDX,R15D]                   encoding(3 bytes) = 49 63 d7
0049h mov rcx,7FFC7C245DC8h         ; MOV(Mov_r64_imm64) [RCX,7ffc7c245dc8h:imm64]         encoding(10 bytes) = 48 b9 c8 5d 24 7c fc 7f 00 00
0053h call 7FFCDBBA24A0h            ; CALL(Call_rel32_64) [5FB02EE0h:jmp64]                encoding(5 bytes) = e8 88 2e b0 5f
0058h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
005ch mov edx,[rax+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 50 08
005fh mov r8,rbx                    ; MOV(Mov_r64_rm64) [R8,RBX]                           encoding(3 bytes) = 4c 8b c3
0062h vmovdqu xmm0,xmmword ptr [rsi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 06
0066h vmovdqu xmmword ptr [rsp+48h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 48
006ch vmovdqu xmm0,xmmword ptr [rdi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RDI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 07
0070h vmovdqu xmmword ptr [rsp+38h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 38
0076h lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
007bh mov [r9],rcx                  ; MOV(Mov_rm64_r64) [mem(64u,R9:br,DS:sr),RCX]         encoding(3 bytes) = 49 89 09
007eh mov [r9+8],edx                ; MOV(Mov_rm32_r32) [mem(32u,R9:br,DS:sr),EDX]         encoding(4 bytes) = 41 89 51 08
0082h mov rcx,r8                    ; MOV(Mov_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 8b c8
0085h lea rdx,[rsp+48h]             ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 54 24 48
008ah lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
008fh lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
0094h call 7FFC7C09F160h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFFBA0h:jmp64]        encoding(5 bytes) = e8 07 fb ff ff
0099h mov rax,rbx                   ; MOV(Mov_r64_rm64) [RAX,RBX]                          encoding(3 bytes) = 48 8b c3
009ch add rsp,60h                   ; ADD(Add_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 c4 60
00a0h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
00a1h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
00a2h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
00a3h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
00a4h pop r12                       ; POP(Pop_r64) [R12]                                   encoding(2 bytes) = 41 5c
00a6h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
00a8h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
00aah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
00abh mov ecx,3BBh                  ; MOV(Mov_r32_imm32) [ECX,3bbh:imm32]                  encoding(5 bytes) = b9 bb 03 00 00
00b0h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
00bah call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC34860h:jmp64]                encoding(5 bytes) = e8 a1 47 c3 5f
00bfh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
00c2h mov ecx,0B5Bh                 ; MOV(Mov_r32_imm32) [ECX,b5bh:imm32]                  encoding(5 bytes) = b9 5b 0b 00 00
00c7h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
00d1h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC34860h:jmp64]                encoding(5 bytes) = e8 8a 47 c3 5f
00d6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00d9h lea r8,[rsp+58h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 58
00deh mov [r8],r14b                 ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),R14L]           encoding(3 bytes) = 45 88 30
00e1h mov [r8+4],ebp                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBP]         encoding(4 bytes) = 41 89 68 04
00e5h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00e8h mov ecx,r15d                  ; MOV(Mov_r32_rm32) [ECX,R15D]                         encoding(3 bytes) = 41 8b cf
00ebh mov edx,r12d                  ; MOV(Mov_r32_rm32) [EDX,R12D]                         encoding(3 bytes) = 41 8b d4
00eeh mov rax,[rsp+58h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 58
00f3h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00f8h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFEEA58h:jmp64]        encoding(5 bytes) = e8 5b e9 fe ff
00fdh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
0100h call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAEA2D0h:jmp64]                encoding(5 bytes) = e8 cb a1 ae 5f
0105h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> gtBytes => new byte[262]{0x41,0x57,0x41,0x56,0x41,0x54,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x60,0xC5,0xF8,0x77,0x48,0x8B,0xF1,0x48,0x8D,0x7C,0x24,0x28,0xB9,0x0C,0x00,0x00,0x00,0x33,0xC0,0xF3,0xAB,0x48,0x8B,0xCE,0x48,0x8B,0xD9,0x48,0x8B,0xF2,0x49,0x8B,0xF8,0xBD,0x6E,0x00,0x00,0x00,0x41,0xBE,0x01,0x00,0x00,0x00,0x44,0x8B,0x7E,0x08,0x44,0x8B,0x67,0x08,0x45,0x3B,0xFC,0x75,0x65,0x49,0x63,0xD7,0x48,0xB9,0xC8,0x5D,0x24,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x88,0x2E,0xB0,0x5F,0x48,0x8D,0x48,0x10,0x8B,0x50,0x08,0x4C,0x8B,0xC3,0xC5,0xFA,0x6F,0x06,0xC5,0xFA,0x7F,0x44,0x24,0x48,0xC5,0xFA,0x6F,0x07,0xC5,0xFA,0x7F,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0x49,0x89,0x09,0x41,0x89,0x51,0x08,0x49,0x8B,0xC8,0x48,0x8D,0x54,0x24,0x48,0x4C,0x8D,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0xE8,0x07,0xFB,0xFF,0xFF,0x48,0x8B,0xC3,0x48,0x83,0xC4,0x60,0x5B,0x5D,0x5E,0x5F,0x41,0x5C,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0xBB,0x03,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xA1,0x47,0xC3,0x5F,0x48,0x8B,0xF0,0xB9,0x5B,0x0B,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x8A,0x47,0xC3,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x58,0x45,0x88,0x30,0x41,0x89,0x68,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCF,0x41,0x8B,0xD4,0x48,0x8B,0x44,0x24,0x58,0x48,0x89,0x44,0x24,0x20,0xE8,0x5B,0xE9,0xFE,0xFF,0x48,0x8B,0xC8,0xE8,0xCB,0xA1,0xAE,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> gt(ReadOnlySpan<short> lhs, ReadOnlySpan<short> rhs)
; location: [7FFC7C09F820h, 7FFC7C09F925h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push r12                      ; PUSH(Push_r64) [R12]                                 encoding(2 bytes) = 41 54
0006h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0007h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0008h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0009h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
000ah sub rsp,60h                   ; SUB(Sub_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 ec 60
000eh vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0011h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0014h lea rdi,[rsp+28h]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 7c 24 28
0019h mov ecx,0Ch                   ; MOV(Mov_r32_imm32) [ECX,ch:imm32]                    encoding(5 bytes) = b9 0c 00 00 00
001eh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0020h rep stosd                     ; STOSD(Stosd_m32_EAX) [mem(32u),EAX]                  encoding(2 bytes) = f3 ab
0022h mov rcx,rsi                   ; MOV(Mov_r64_rm64) [RCX,RSI]                          encoding(3 bytes) = 48 8b ce
0025h mov rbx,rcx                   ; MOV(Mov_r64_rm64) [RBX,RCX]                          encoding(3 bytes) = 48 8b d9
0028h mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
002bh mov rdi,r8                    ; MOV(Mov_r64_rm64) [RDI,R8]                           encoding(3 bytes) = 49 8b f8
002eh mov ebp,76h                   ; MOV(Mov_r32_imm32) [EBP,76h:imm32]                   encoding(5 bytes) = bd 76 00 00 00
0033h mov r14d,1                    ; MOV(Mov_r32_imm32) [R14D,1h:imm32]                   encoding(6 bytes) = 41 be 01 00 00 00
0039h mov r15d,[rsi+8]              ; MOV(Mov_r32_rm32) [R15D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 8b 7e 08
003dh mov r12d,[rdi+8]              ; MOV(Mov_r32_rm32) [R12D,mem(32u,RDI:br,DS:sr)]       encoding(4 bytes) = 44 8b 67 08
0041h cmp r15d,r12d                 ; CMP(Cmp_r32_rm32) [R15D,R12D]                        encoding(3 bytes) = 45 3b fc
0044h jne short 00abh               ; JNE(Jne_rel8_64) [ABh:jmp64]                         encoding(2 bytes) = 75 65
0046h movsxd rdx,r15d               ; MOVSXD(Movsxd_r64_rm32) [RDX,R15D]                   encoding(3 bytes) = 49 63 d7
0049h mov rcx,7FFC7C245DC8h         ; MOV(Mov_r64_imm64) [RCX,7ffc7c245dc8h:imm64]         encoding(10 bytes) = 48 b9 c8 5d 24 7c fc 7f 00 00
0053h call 7FFCDBBA24A0h            ; CALL(Call_rel32_64) [5FB02C80h:jmp64]                encoding(5 bytes) = e8 28 2c b0 5f
0058h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
005ch mov edx,[rax+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 50 08
005fh mov r8,rbx                    ; MOV(Mov_r64_rm64) [R8,RBX]                           encoding(3 bytes) = 4c 8b c3
0062h vmovdqu xmm0,xmmword ptr [rsi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 06
0066h vmovdqu xmmword ptr [rsp+48h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 48
006ch vmovdqu xmm0,xmmword ptr [rdi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RDI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 07
0070h vmovdqu xmmword ptr [rsp+38h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 38
0076h lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
007bh mov [r9],rcx                  ; MOV(Mov_rm64_r64) [mem(64u,R9:br,DS:sr),RCX]         encoding(3 bytes) = 49 89 09
007eh mov [r9+8],edx                ; MOV(Mov_rm32_r32) [mem(32u,R9:br,DS:sr),EDX]         encoding(4 bytes) = 41 89 51 08
0082h mov rcx,r8                    ; MOV(Mov_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 8b c8
0085h lea rdx,[rsp+48h]             ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 54 24 48
008ah lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
008fh lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
0094h call 7FFC7C09F280h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFFA60h:jmp64]        encoding(5 bytes) = e8 c7 f9 ff ff
0099h mov rax,rbx                   ; MOV(Mov_r64_rm64) [RAX,RBX]                          encoding(3 bytes) = 48 8b c3
009ch add rsp,60h                   ; ADD(Add_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 c4 60
00a0h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
00a1h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
00a2h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
00a3h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
00a4h pop r12                       ; POP(Pop_r64) [R12]                                   encoding(2 bytes) = 41 5c
00a6h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
00a8h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
00aah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
00abh mov ecx,3BBh                  ; MOV(Mov_r32_imm32) [ECX,3bbh:imm32]                  encoding(5 bytes) = b9 bb 03 00 00
00b0h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
00bah call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC34600h:jmp64]                encoding(5 bytes) = e8 41 45 c3 5f
00bfh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
00c2h mov ecx,0B5Bh                 ; MOV(Mov_r32_imm32) [ECX,b5bh:imm32]                  encoding(5 bytes) = b9 5b 0b 00 00
00c7h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
00d1h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC34600h:jmp64]                encoding(5 bytes) = e8 2a 45 c3 5f
00d6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00d9h lea r8,[rsp+58h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 58
00deh mov [r8],r14b                 ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),R14L]           encoding(3 bytes) = 45 88 30
00e1h mov [r8+4],ebp                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBP]         encoding(4 bytes) = 41 89 68 04
00e5h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00e8h mov ecx,r15d                  ; MOV(Mov_r32_rm32) [ECX,R15D]                         encoding(3 bytes) = 41 8b cf
00ebh mov edx,r12d                  ; MOV(Mov_r32_rm32) [EDX,R12D]                         encoding(3 bytes) = 41 8b d4
00eeh mov rax,[rsp+58h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 58
00f3h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00f8h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFEE7F8h:jmp64]        encoding(5 bytes) = e8 fb e6 fe ff
00fdh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
0100h call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAEA070h:jmp64]                encoding(5 bytes) = e8 6b 9f ae 5f
0105h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> gtBytes => new byte[262]{0x41,0x57,0x41,0x56,0x41,0x54,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x60,0xC5,0xF8,0x77,0x48,0x8B,0xF1,0x48,0x8D,0x7C,0x24,0x28,0xB9,0x0C,0x00,0x00,0x00,0x33,0xC0,0xF3,0xAB,0x48,0x8B,0xCE,0x48,0x8B,0xD9,0x48,0x8B,0xF2,0x49,0x8B,0xF8,0xBD,0x76,0x00,0x00,0x00,0x41,0xBE,0x01,0x00,0x00,0x00,0x44,0x8B,0x7E,0x08,0x44,0x8B,0x67,0x08,0x45,0x3B,0xFC,0x75,0x65,0x49,0x63,0xD7,0x48,0xB9,0xC8,0x5D,0x24,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x28,0x2C,0xB0,0x5F,0x48,0x8D,0x48,0x10,0x8B,0x50,0x08,0x4C,0x8B,0xC3,0xC5,0xFA,0x6F,0x06,0xC5,0xFA,0x7F,0x44,0x24,0x48,0xC5,0xFA,0x6F,0x07,0xC5,0xFA,0x7F,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0x49,0x89,0x09,0x41,0x89,0x51,0x08,0x49,0x8B,0xC8,0x48,0x8D,0x54,0x24,0x48,0x4C,0x8D,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0xE8,0xC7,0xF9,0xFF,0xFF,0x48,0x8B,0xC3,0x48,0x83,0xC4,0x60,0x5B,0x5D,0x5E,0x5F,0x41,0x5C,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0xBB,0x03,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x41,0x45,0xC3,0x5F,0x48,0x8B,0xF0,0xB9,0x5B,0x0B,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x2A,0x45,0xC3,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x58,0x45,0x88,0x30,0x41,0x89,0x68,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCF,0x41,0x8B,0xD4,0x48,0x8B,0x44,0x24,0x58,0x48,0x89,0x44,0x24,0x20,0xE8,0xFB,0xE6,0xFE,0xFF,0x48,0x8B,0xC8,0xE8,0x6B,0x9F,0xAE,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> gt(ReadOnlySpan<ushort> lhs, ReadOnlySpan<ushort> rhs)
; location: [7FFC7C09F950h, 7FFC7C09FA55h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push r12                      ; PUSH(Push_r64) [R12]                                 encoding(2 bytes) = 41 54
0006h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0007h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0008h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0009h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
000ah sub rsp,60h                   ; SUB(Sub_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 ec 60
000eh vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0011h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0014h lea rdi,[rsp+28h]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 7c 24 28
0019h mov ecx,0Ch                   ; MOV(Mov_r32_imm32) [ECX,ch:imm32]                    encoding(5 bytes) = b9 0c 00 00 00
001eh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0020h rep stosd                     ; STOSD(Stosd_m32_EAX) [mem(32u),EAX]                  encoding(2 bytes) = f3 ab
0022h mov rcx,rsi                   ; MOV(Mov_r64_rm64) [RCX,RSI]                          encoding(3 bytes) = 48 8b ce
0025h mov rbx,rcx                   ; MOV(Mov_r64_rm64) [RBX,RCX]                          encoding(3 bytes) = 48 8b d9
0028h mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
002bh mov rdi,r8                    ; MOV(Mov_r64_rm64) [RDI,R8]                           encoding(3 bytes) = 49 8b f8
002eh mov ebp,7Ah                   ; MOV(Mov_r32_imm32) [EBP,7ah:imm32]                   encoding(5 bytes) = bd 7a 00 00 00
0033h mov r14d,1                    ; MOV(Mov_r32_imm32) [R14D,1h:imm32]                   encoding(6 bytes) = 41 be 01 00 00 00
0039h mov r15d,[rsi+8]              ; MOV(Mov_r32_rm32) [R15D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 8b 7e 08
003dh mov r12d,[rdi+8]              ; MOV(Mov_r32_rm32) [R12D,mem(32u,RDI:br,DS:sr)]       encoding(4 bytes) = 44 8b 67 08
0041h cmp r15d,r12d                 ; CMP(Cmp_r32_rm32) [R15D,R12D]                        encoding(3 bytes) = 45 3b fc
0044h jne short 00abh               ; JNE(Jne_rel8_64) [ABh:jmp64]                         encoding(2 bytes) = 75 65
0046h movsxd rdx,r15d               ; MOVSXD(Movsxd_r64_rm32) [RDX,R15D]                   encoding(3 bytes) = 49 63 d7
0049h mov rcx,7FFC7C245DC8h         ; MOV(Mov_r64_imm64) [RCX,7ffc7c245dc8h:imm64]         encoding(10 bytes) = 48 b9 c8 5d 24 7c fc 7f 00 00
0053h call 7FFCDBBA24A0h            ; CALL(Call_rel32_64) [5FB02B50h:jmp64]                encoding(5 bytes) = e8 f8 2a b0 5f
0058h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
005ch mov edx,[rax+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 50 08
005fh mov r8,rbx                    ; MOV(Mov_r64_rm64) [R8,RBX]                           encoding(3 bytes) = 4c 8b c3
0062h vmovdqu xmm0,xmmword ptr [rsi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 06
0066h vmovdqu xmmword ptr [rsp+48h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 48
006ch vmovdqu xmm0,xmmword ptr [rdi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RDI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 07
0070h vmovdqu xmmword ptr [rsp+38h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 38
0076h lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
007bh mov [r9],rcx                  ; MOV(Mov_rm64_r64) [mem(64u,R9:br,DS:sr),RCX]         encoding(3 bytes) = 49 89 09
007eh mov [r9+8],edx                ; MOV(Mov_rm32_r32) [mem(32u,R9:br,DS:sr),EDX]         encoding(4 bytes) = 41 89 51 08
0082h mov rcx,r8                    ; MOV(Mov_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 8b c8
0085h lea rdx,[rsp+48h]             ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 54 24 48
008ah lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
008fh lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
0094h call 7FFC7C09F310h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFF9C0h:jmp64]        encoding(5 bytes) = e8 27 f9 ff ff
0099h mov rax,rbx                   ; MOV(Mov_r64_rm64) [RAX,RBX]                          encoding(3 bytes) = 48 8b c3
009ch add rsp,60h                   ; ADD(Add_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 c4 60
00a0h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
00a1h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
00a2h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
00a3h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
00a4h pop r12                       ; POP(Pop_r64) [R12]                                   encoding(2 bytes) = 41 5c
00a6h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
00a8h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
00aah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
00abh mov ecx,3BBh                  ; MOV(Mov_r32_imm32) [ECX,3bbh:imm32]                  encoding(5 bytes) = b9 bb 03 00 00
00b0h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
00bah call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC344D0h:jmp64]                encoding(5 bytes) = e8 11 44 c3 5f
00bfh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
00c2h mov ecx,0B5Bh                 ; MOV(Mov_r32_imm32) [ECX,b5bh:imm32]                  encoding(5 bytes) = b9 5b 0b 00 00
00c7h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
00d1h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC344D0h:jmp64]                encoding(5 bytes) = e8 fa 43 c3 5f
00d6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00d9h lea r8,[rsp+58h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 58
00deh mov [r8],r14b                 ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),R14L]           encoding(3 bytes) = 45 88 30
00e1h mov [r8+4],ebp                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBP]         encoding(4 bytes) = 41 89 68 04
00e5h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00e8h mov ecx,r15d                  ; MOV(Mov_r32_rm32) [ECX,R15D]                         encoding(3 bytes) = 41 8b cf
00ebh mov edx,r12d                  ; MOV(Mov_r32_rm32) [EDX,R12D]                         encoding(3 bytes) = 41 8b d4
00eeh mov rax,[rsp+58h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 58
00f3h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00f8h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFEE6C8h:jmp64]        encoding(5 bytes) = e8 cb e5 fe ff
00fdh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
0100h call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAE9F40h:jmp64]                encoding(5 bytes) = e8 3b 9e ae 5f
0105h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> gtBytes => new byte[262]{0x41,0x57,0x41,0x56,0x41,0x54,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x60,0xC5,0xF8,0x77,0x48,0x8B,0xF1,0x48,0x8D,0x7C,0x24,0x28,0xB9,0x0C,0x00,0x00,0x00,0x33,0xC0,0xF3,0xAB,0x48,0x8B,0xCE,0x48,0x8B,0xD9,0x48,0x8B,0xF2,0x49,0x8B,0xF8,0xBD,0x7A,0x00,0x00,0x00,0x41,0xBE,0x01,0x00,0x00,0x00,0x44,0x8B,0x7E,0x08,0x44,0x8B,0x67,0x08,0x45,0x3B,0xFC,0x75,0x65,0x49,0x63,0xD7,0x48,0xB9,0xC8,0x5D,0x24,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xF8,0x2A,0xB0,0x5F,0x48,0x8D,0x48,0x10,0x8B,0x50,0x08,0x4C,0x8B,0xC3,0xC5,0xFA,0x6F,0x06,0xC5,0xFA,0x7F,0x44,0x24,0x48,0xC5,0xFA,0x6F,0x07,0xC5,0xFA,0x7F,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0x49,0x89,0x09,0x41,0x89,0x51,0x08,0x49,0x8B,0xC8,0x48,0x8D,0x54,0x24,0x48,0x4C,0x8D,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0xE8,0x27,0xF9,0xFF,0xFF,0x48,0x8B,0xC3,0x48,0x83,0xC4,0x60,0x5B,0x5D,0x5E,0x5F,0x41,0x5C,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0xBB,0x03,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x11,0x44,0xC3,0x5F,0x48,0x8B,0xF0,0xB9,0x5B,0x0B,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xFA,0x43,0xC3,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x58,0x45,0x88,0x30,0x41,0x89,0x68,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCF,0x41,0x8B,0xD4,0x48,0x8B,0x44,0x24,0x58,0x48,0x89,0x44,0x24,0x20,0xE8,0xCB,0xE5,0xFE,0xFF,0x48,0x8B,0xC8,0xE8,0x3B,0x9E,0xAE,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> gt(ReadOnlySpan<int> lhs, ReadOnlySpan<int> rhs)
; location: [7FFC7C09FA80h, 7FFC7C09FB85h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push r12                      ; PUSH(Push_r64) [R12]                                 encoding(2 bytes) = 41 54
0006h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0007h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0008h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0009h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
000ah sub rsp,60h                   ; SUB(Sub_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 ec 60
000eh vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0011h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0014h lea rdi,[rsp+28h]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 7c 24 28
0019h mov ecx,0Ch                   ; MOV(Mov_r32_imm32) [ECX,ch:imm32]                    encoding(5 bytes) = b9 0c 00 00 00
001eh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0020h rep stosd                     ; STOSD(Stosd_m32_EAX) [mem(32u),EAX]                  encoding(2 bytes) = f3 ab
0022h mov rcx,rsi                   ; MOV(Mov_r64_rm64) [RCX,RSI]                          encoding(3 bytes) = 48 8b ce
0025h mov rbx,rcx                   ; MOV(Mov_r64_rm64) [RBX,RCX]                          encoding(3 bytes) = 48 8b d9
0028h mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
002bh mov rdi,r8                    ; MOV(Mov_r64_rm64) [RDI,R8]                           encoding(3 bytes) = 49 8b f8
002eh mov ebp,7Eh                   ; MOV(Mov_r32_imm32) [EBP,7eh:imm32]                   encoding(5 bytes) = bd 7e 00 00 00
0033h mov r14d,1                    ; MOV(Mov_r32_imm32) [R14D,1h:imm32]                   encoding(6 bytes) = 41 be 01 00 00 00
0039h mov r15d,[rsi+8]              ; MOV(Mov_r32_rm32) [R15D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 8b 7e 08
003dh mov r12d,[rdi+8]              ; MOV(Mov_r32_rm32) [R12D,mem(32u,RDI:br,DS:sr)]       encoding(4 bytes) = 44 8b 67 08
0041h cmp r15d,r12d                 ; CMP(Cmp_r32_rm32) [R15D,R12D]                        encoding(3 bytes) = 45 3b fc
0044h jne short 00abh               ; JNE(Jne_rel8_64) [ABh:jmp64]                         encoding(2 bytes) = 75 65
0046h movsxd rdx,r15d               ; MOVSXD(Movsxd_r64_rm32) [RDX,R15D]                   encoding(3 bytes) = 49 63 d7
0049h mov rcx,7FFC7C245DC8h         ; MOV(Mov_r64_imm64) [RCX,7ffc7c245dc8h:imm64]         encoding(10 bytes) = 48 b9 c8 5d 24 7c fc 7f 00 00
0053h call 7FFCDBBA24A0h            ; CALL(Call_rel32_64) [5FB02A20h:jmp64]                encoding(5 bytes) = e8 c8 29 b0 5f
0058h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
005ch mov edx,[rax+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 50 08
005fh mov r8,rbx                    ; MOV(Mov_r64_rm64) [R8,RBX]                           encoding(3 bytes) = 4c 8b c3
0062h vmovdqu xmm0,xmmword ptr [rsi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 06
0066h vmovdqu xmmword ptr [rsp+48h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 48
006ch vmovdqu xmm0,xmmword ptr [rdi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RDI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 07
0070h vmovdqu xmmword ptr [rsp+38h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 38
0076h lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
007bh mov [r9],rcx                  ; MOV(Mov_rm64_r64) [mem(64u,R9:br,DS:sr),RCX]         encoding(3 bytes) = 49 89 09
007eh mov [r9+8],edx                ; MOV(Mov_rm32_r32) [mem(32u,R9:br,DS:sr),EDX]         encoding(4 bytes) = 41 89 51 08
0082h mov rcx,r8                    ; MOV(Mov_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 8b c8
0085h lea rdx,[rsp+48h]             ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 54 24 48
008ah lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
008fh lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
0094h call 7FFC7C09F3A0h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFF920h:jmp64]        encoding(5 bytes) = e8 87 f8 ff ff
0099h mov rax,rbx                   ; MOV(Mov_r64_rm64) [RAX,RBX]                          encoding(3 bytes) = 48 8b c3
009ch add rsp,60h                   ; ADD(Add_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 c4 60
00a0h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
00a1h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
00a2h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
00a3h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
00a4h pop r12                       ; POP(Pop_r64) [R12]                                   encoding(2 bytes) = 41 5c
00a6h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
00a8h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
00aah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
00abh mov ecx,3BBh                  ; MOV(Mov_r32_imm32) [ECX,3bbh:imm32]                  encoding(5 bytes) = b9 bb 03 00 00
00b0h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
00bah call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC343A0h:jmp64]                encoding(5 bytes) = e8 e1 42 c3 5f
00bfh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
00c2h mov ecx,0B5Bh                 ; MOV(Mov_r32_imm32) [ECX,b5bh:imm32]                  encoding(5 bytes) = b9 5b 0b 00 00
00c7h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
00d1h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC343A0h:jmp64]                encoding(5 bytes) = e8 ca 42 c3 5f
00d6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00d9h lea r8,[rsp+58h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 58
00deh mov [r8],r14b                 ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),R14L]           encoding(3 bytes) = 45 88 30
00e1h mov [r8+4],ebp                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBP]         encoding(4 bytes) = 41 89 68 04
00e5h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00e8h mov ecx,r15d                  ; MOV(Mov_r32_rm32) [ECX,R15D]                         encoding(3 bytes) = 41 8b cf
00ebh mov edx,r12d                  ; MOV(Mov_r32_rm32) [EDX,R12D]                         encoding(3 bytes) = 41 8b d4
00eeh mov rax,[rsp+58h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 58
00f3h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00f8h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFEE598h:jmp64]        encoding(5 bytes) = e8 9b e4 fe ff
00fdh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
0100h call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAE9E10h:jmp64]                encoding(5 bytes) = e8 0b 9d ae 5f
0105h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> gtBytes => new byte[262]{0x41,0x57,0x41,0x56,0x41,0x54,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x60,0xC5,0xF8,0x77,0x48,0x8B,0xF1,0x48,0x8D,0x7C,0x24,0x28,0xB9,0x0C,0x00,0x00,0x00,0x33,0xC0,0xF3,0xAB,0x48,0x8B,0xCE,0x48,0x8B,0xD9,0x48,0x8B,0xF2,0x49,0x8B,0xF8,0xBD,0x7E,0x00,0x00,0x00,0x41,0xBE,0x01,0x00,0x00,0x00,0x44,0x8B,0x7E,0x08,0x44,0x8B,0x67,0x08,0x45,0x3B,0xFC,0x75,0x65,0x49,0x63,0xD7,0x48,0xB9,0xC8,0x5D,0x24,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xC8,0x29,0xB0,0x5F,0x48,0x8D,0x48,0x10,0x8B,0x50,0x08,0x4C,0x8B,0xC3,0xC5,0xFA,0x6F,0x06,0xC5,0xFA,0x7F,0x44,0x24,0x48,0xC5,0xFA,0x6F,0x07,0xC5,0xFA,0x7F,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0x49,0x89,0x09,0x41,0x89,0x51,0x08,0x49,0x8B,0xC8,0x48,0x8D,0x54,0x24,0x48,0x4C,0x8D,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0xE8,0x87,0xF8,0xFF,0xFF,0x48,0x8B,0xC3,0x48,0x83,0xC4,0x60,0x5B,0x5D,0x5E,0x5F,0x41,0x5C,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0xBB,0x03,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xE1,0x42,0xC3,0x5F,0x48,0x8B,0xF0,0xB9,0x5B,0x0B,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xCA,0x42,0xC3,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x58,0x45,0x88,0x30,0x41,0x89,0x68,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCF,0x41,0x8B,0xD4,0x48,0x8B,0x44,0x24,0x58,0x48,0x89,0x44,0x24,0x20,0xE8,0x9B,0xE4,0xFE,0xFF,0x48,0x8B,0xC8,0xE8,0x0B,0x9D,0xAE,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> gt(ReadOnlySpan<long> lhs, ReadOnlySpan<long> rhs)
; location: [7FFC7C09FCE0h, 7FFC7C09FDE5h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push r12                      ; PUSH(Push_r64) [R12]                                 encoding(2 bytes) = 41 54
0006h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0007h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0008h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0009h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
000ah sub rsp,60h                   ; SUB(Sub_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 ec 60
000eh vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0011h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0014h lea rdi,[rsp+28h]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 7c 24 28
0019h mov ecx,0Ch                   ; MOV(Mov_r32_imm32) [ECX,ch:imm32]                    encoding(5 bytes) = b9 0c 00 00 00
001eh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0020h rep stosd                     ; STOSD(Stosd_m32_EAX) [mem(32u),EAX]                  encoding(2 bytes) = f3 ab
0022h mov rcx,rsi                   ; MOV(Mov_r64_rm64) [RCX,RSI]                          encoding(3 bytes) = 48 8b ce
0025h mov rbx,rcx                   ; MOV(Mov_r64_rm64) [RBX,RCX]                          encoding(3 bytes) = 48 8b d9
0028h mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
002bh mov rdi,r8                    ; MOV(Mov_r64_rm64) [RDI,R8]                           encoding(3 bytes) = 49 8b f8
002eh mov ebp,86h                   ; MOV(Mov_r32_imm32) [EBP,86h:imm32]                   encoding(5 bytes) = bd 86 00 00 00
0033h mov r14d,1                    ; MOV(Mov_r32_imm32) [R14D,1h:imm32]                   encoding(6 bytes) = 41 be 01 00 00 00
0039h mov r15d,[rsi+8]              ; MOV(Mov_r32_rm32) [R15D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 8b 7e 08
003dh mov r12d,[rdi+8]              ; MOV(Mov_r32_rm32) [R12D,mem(32u,RDI:br,DS:sr)]       encoding(4 bytes) = 44 8b 67 08
0041h cmp r15d,r12d                 ; CMP(Cmp_r32_rm32) [R15D,R12D]                        encoding(3 bytes) = 45 3b fc
0044h jne short 00abh               ; JNE(Jne_rel8_64) [ABh:jmp64]                         encoding(2 bytes) = 75 65
0046h movsxd rdx,r15d               ; MOVSXD(Movsxd_r64_rm32) [RDX,R15D]                   encoding(3 bytes) = 49 63 d7
0049h mov rcx,7FFC7C245DC8h         ; MOV(Mov_r64_imm64) [RCX,7ffc7c245dc8h:imm64]         encoding(10 bytes) = 48 b9 c8 5d 24 7c fc 7f 00 00
0053h call 7FFCDBBA24A0h            ; CALL(Call_rel32_64) [5FB027C0h:jmp64]                encoding(5 bytes) = e8 68 27 b0 5f
0058h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
005ch mov edx,[rax+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 50 08
005fh mov r8,rbx                    ; MOV(Mov_r64_rm64) [R8,RBX]                           encoding(3 bytes) = 4c 8b c3
0062h vmovdqu xmm0,xmmword ptr [rsi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 06
0066h vmovdqu xmmword ptr [rsp+48h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 48
006ch vmovdqu xmm0,xmmword ptr [rdi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RDI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 07
0070h vmovdqu xmmword ptr [rsp+38h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 38
0076h lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
007bh mov [r9],rcx                  ; MOV(Mov_rm64_r64) [mem(64u,R9:br,DS:sr),RCX]         encoding(3 bytes) = 49 89 09
007eh mov [r9+8],edx                ; MOV(Mov_rm32_r32) [mem(32u,R9:br,DS:sr),EDX]         encoding(4 bytes) = 41 89 51 08
0082h mov rcx,r8                    ; MOV(Mov_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 8b c8
0085h lea rdx,[rsp+48h]             ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 54 24 48
008ah lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
008fh lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
0094h call 7FFC7C09F4A0h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFF7C0h:jmp64]        encoding(5 bytes) = e8 27 f7 ff ff
0099h mov rax,rbx                   ; MOV(Mov_r64_rm64) [RAX,RBX]                          encoding(3 bytes) = 48 8b c3
009ch add rsp,60h                   ; ADD(Add_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 c4 60
00a0h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
00a1h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
00a2h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
00a3h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
00a4h pop r12                       ; POP(Pop_r64) [R12]                                   encoding(2 bytes) = 41 5c
00a6h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
00a8h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
00aah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
00abh mov ecx,3BBh                  ; MOV(Mov_r32_imm32) [ECX,3bbh:imm32]                  encoding(5 bytes) = b9 bb 03 00 00
00b0h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
00bah call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC34140h:jmp64]                encoding(5 bytes) = e8 81 40 c3 5f
00bfh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
00c2h mov ecx,0B5Bh                 ; MOV(Mov_r32_imm32) [ECX,b5bh:imm32]                  encoding(5 bytes) = b9 5b 0b 00 00
00c7h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
00d1h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC34140h:jmp64]                encoding(5 bytes) = e8 6a 40 c3 5f
00d6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00d9h lea r8,[rsp+58h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 58
00deh mov [r8],r14b                 ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),R14L]           encoding(3 bytes) = 45 88 30
00e1h mov [r8+4],ebp                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBP]         encoding(4 bytes) = 41 89 68 04
00e5h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00e8h mov ecx,r15d                  ; MOV(Mov_r32_rm32) [ECX,R15D]                         encoding(3 bytes) = 41 8b cf
00ebh mov edx,r12d                  ; MOV(Mov_r32_rm32) [EDX,R12D]                         encoding(3 bytes) = 41 8b d4
00eeh mov rax,[rsp+58h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 58
00f3h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00f8h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFEE338h:jmp64]        encoding(5 bytes) = e8 3b e2 fe ff
00fdh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
0100h call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAE9BB0h:jmp64]                encoding(5 bytes) = e8 ab 9a ae 5f
0105h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> gtBytes => new byte[262]{0x41,0x57,0x41,0x56,0x41,0x54,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x60,0xC5,0xF8,0x77,0x48,0x8B,0xF1,0x48,0x8D,0x7C,0x24,0x28,0xB9,0x0C,0x00,0x00,0x00,0x33,0xC0,0xF3,0xAB,0x48,0x8B,0xCE,0x48,0x8B,0xD9,0x48,0x8B,0xF2,0x49,0x8B,0xF8,0xBD,0x86,0x00,0x00,0x00,0x41,0xBE,0x01,0x00,0x00,0x00,0x44,0x8B,0x7E,0x08,0x44,0x8B,0x67,0x08,0x45,0x3B,0xFC,0x75,0x65,0x49,0x63,0xD7,0x48,0xB9,0xC8,0x5D,0x24,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x68,0x27,0xB0,0x5F,0x48,0x8D,0x48,0x10,0x8B,0x50,0x08,0x4C,0x8B,0xC3,0xC5,0xFA,0x6F,0x06,0xC5,0xFA,0x7F,0x44,0x24,0x48,0xC5,0xFA,0x6F,0x07,0xC5,0xFA,0x7F,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0x49,0x89,0x09,0x41,0x89,0x51,0x08,0x49,0x8B,0xC8,0x48,0x8D,0x54,0x24,0x48,0x4C,0x8D,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0xE8,0x27,0xF7,0xFF,0xFF,0x48,0x8B,0xC3,0x48,0x83,0xC4,0x60,0x5B,0x5D,0x5E,0x5F,0x41,0x5C,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0xBB,0x03,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x81,0x40,0xC3,0x5F,0x48,0x8B,0xF0,0xB9,0x5B,0x0B,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x6A,0x40,0xC3,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x58,0x45,0x88,0x30,0x41,0x89,0x68,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCF,0x41,0x8B,0xD4,0x48,0x8B,0x44,0x24,0x58,0x48,0x89,0x44,0x24,0x20,0xE8,0x3B,0xE2,0xFE,0xFF,0x48,0x8B,0xC8,0xE8,0xAB,0x9A,0xAE,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool gteq(short lhs, short rhs)
; location: [7FFC7C09FFA0h, 7FFC7C09FFB5h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cx                  ; MOVSX(Movsx_r64_rm16) [RAX,CX]                       encoding(4 bytes) = 48 0f bf c1
0009h movsx rdx,dx                  ; MOVSX(Movsx_r64_rm16) [RDX,DX]                       encoding(4 bytes) = 48 0f bf d2
000dh cmp eax,edx                   ; CMP(Cmp_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 3b c2
000fh setge al                      ; SETGE(Setge_rm8) [AL]                                encoding(3 bytes) = 0f 9d c0
0012h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0015h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> gteqBytes => new byte[22]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBF,0xC1,0x48,0x0F,0xBF,0xD2,0x3B,0xC2,0x0F,0x9D,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool gteq(ushort lhs, ushort rhs)
; location: [7FFC7C09FFD0h, 7FFC7C09FFE3h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cx                  ; MOVZX(Movzx_r32_rm16) [EAX,CX]                       encoding(3 bytes) = 0f b7 c1
0008h movzx edx,dx                  ; MOVZX(Movzx_r32_rm16) [EDX,DX]                       encoding(3 bytes) = 0f b7 d2
000bh cmp eax,edx                   ; CMP(Cmp_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 3b c2
000dh setge al                      ; SETGE(Setge_rm8) [AL]                                encoding(3 bytes) = 0f 9d c0
0010h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> gteqBytes => new byte[20]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB7,0xC1,0x0F,0xB7,0xD2,0x3B,0xC2,0x0F,0x9D,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> gteq(ReadOnlySpan<sbyte> lhs, ReadOnlySpan<sbyte> rhs, Span<bool> dst)
; location: [7FFC7C0A0080h, 7FFC7C0A00E4h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0003h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0004h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0008h mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000bh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000fh mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0012h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0015h xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
0018h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
001ah jle short 004ch               ; JLE(Jle_rel8_64) [4Ch:jmp64]                         encoding(2 bytes) = 7e 30
001ch cmp r11d,r9d                  ; CMP(Cmp_r32_rm32) [R11D,R9D]                         encoding(3 bytes) = 45 3b d9
001fh jae short 005fh               ; JAE(Jae_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 73 3e
0021h movsxd rsi,r11d               ; MOVSXD(Movsxd_r64_rm32) [RSI,R11D]                   encoding(3 bytes) = 49 63 f3
0024h lea rdi,[rax+rsi]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 30
0028h movsx rbx,byte ptr [r10+rsi]  ; MOVSX(Movsx_r64_rm8) [RBX,mem(8i,R10:br,DS:sr)]      encoding(5 bytes) = 49 0f be 1c 32
002dh cmp r11d,[r8+8]               ; CMP(Cmp_r32_rm32) [R11D,mem(32u,R8:br,DS:sr)]        encoding(4 bytes) = 45 3b 58 08
0031h jae short 005fh               ; JAE(Jae_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 73 2c
0033h mov rbp,[r8]                  ; MOV(Mov_r64_rm64) [RBP,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 28
0036h movsx rsi,byte ptr [rsi+rbp]  ; MOVSX(Movsx_r64_rm8) [RSI,mem(8i,RSI:br,DS:sr)]      encoding(5 bytes) = 48 0f be 34 2e
003bh cmp ebx,esi                   ; CMP(Cmp_r32_rm32) [EBX,ESI]                          encoding(2 bytes) = 3b de
003dh setge sil                     ; SETGE(Setge_rm8) [SIL]                               encoding(4 bytes) = 40 0f 9d c6
0041h mov [rdi],sil                 ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),SIL]           encoding(3 bytes) = 40 88 37
0044h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
0047h cmp r11d,edx                  ; CMP(Cmp_r32_rm32) [R11D,EDX]                         encoding(3 bytes) = 44 3b da
004ah jl short 001ch                ; JL(Jl_rel8_64) [1Ch:jmp64]                           encoding(2 bytes) = 7c d0
004ch mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
004fh mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0053h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0056h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
005ah pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
005bh pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
005ch pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
005dh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
005eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
005fh call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC335C0h:jmp64]                encoding(5 bytes) = e8 5c 35 c3 5f
0064h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> gteqBytes => new byte[101]{0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x12,0x8B,0x52,0x08,0x45,0x33,0xDB,0x85,0xD2,0x7E,0x30,0x45,0x3B,0xD9,0x73,0x3E,0x49,0x63,0xF3,0x48,0x8D,0x3C,0x30,0x49,0x0F,0xBE,0x1C,0x32,0x45,0x3B,0x58,0x08,0x73,0x2C,0x49,0x8B,0x28,0x48,0x0F,0xBE,0x34,0x2E,0x3B,0xDE,0x40,0x0F,0x9D,0xC6,0x40,0x88,0x37,0x41,0xFF,0xC3,0x44,0x3B,0xDA,0x7C,0xD0,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0xC3,0xE8,0x5C,0x35,0xC3,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> gteq(ReadOnlySpan<int> lhs, ReadOnlySpan<int> rhs, Span<bool> dst)
; location: [7FFC7C0A02C0h, 7FFC7C0A0322h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0003h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0004h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0008h mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000bh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000fh mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0012h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0015h xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
0018h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
001ah jle short 004ah               ; JLE(Jle_rel8_64) [4Ah:jmp64]                         encoding(2 bytes) = 7e 2e
001ch cmp r11d,r9d                  ; CMP(Cmp_r32_rm32) [R11D,R9D]                         encoding(3 bytes) = 45 3b d9
001fh jae short 005dh               ; JAE(Jae_rel8_64) [5Dh:jmp64]                         encoding(2 bytes) = 73 3c
0021h movsxd rsi,r11d               ; MOVSXD(Movsxd_r64_rm32) [RSI,R11D]                   encoding(3 bytes) = 49 63 f3
0024h lea rdi,[rax+rsi]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 30
0028h mov ebx,[r10+rsi*4]           ; MOV(Mov_r32_rm32) [EBX,mem(32u,R10:br,DS:sr)]        encoding(4 bytes) = 41 8b 1c b2
002ch cmp r11d,[r8+8]               ; CMP(Cmp_r32_rm32) [R11D,mem(32u,R8:br,DS:sr)]        encoding(4 bytes) = 45 3b 58 08
0030h jae short 005dh               ; JAE(Jae_rel8_64) [5Dh:jmp64]                         encoding(2 bytes) = 73 2b
0032h mov rbp,[r8]                  ; MOV(Mov_r64_rm64) [RBP,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 28
0035h mov esi,[rbp+rsi*4]           ; MOV(Mov_r32_rm32) [ESI,mem(32u,RBP:br,SS:sr)]        encoding(4 bytes) = 8b 74 b5 00
0039h cmp ebx,esi                   ; CMP(Cmp_r32_rm32) [EBX,ESI]                          encoding(2 bytes) = 3b de
003bh setge sil                     ; SETGE(Setge_rm8) [SIL]                               encoding(4 bytes) = 40 0f 9d c6
003fh mov [rdi],sil                 ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),SIL]           encoding(3 bytes) = 40 88 37
0042h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
0045h cmp r11d,edx                  ; CMP(Cmp_r32_rm32) [R11D,EDX]                         encoding(3 bytes) = 44 3b da
0048h jl short 001ch                ; JL(Jl_rel8_64) [1Ch:jmp64]                           encoding(2 bytes) = 7c d2
004ah mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
004dh mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0051h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0054h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
0058h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0059h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
005ah pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
005bh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
005ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
005dh call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC33380h:jmp64]                encoding(5 bytes) = e8 1e 33 c3 5f
0062h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> gteqBytes => new byte[99]{0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x12,0x8B,0x52,0x08,0x45,0x33,0xDB,0x85,0xD2,0x7E,0x2E,0x45,0x3B,0xD9,0x73,0x3C,0x49,0x63,0xF3,0x48,0x8D,0x3C,0x30,0x41,0x8B,0x1C,0xB2,0x45,0x3B,0x58,0x08,0x73,0x2B,0x49,0x8B,0x28,0x8B,0x74,0xB5,0x00,0x3B,0xDE,0x40,0x0F,0x9D,0xC6,0x40,0x88,0x37,0x41,0xFF,0xC3,0x44,0x3B,0xDA,0x7C,0xD2,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0xC3,0xE8,0x1E,0x33,0xC3,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> gteq(ReadOnlySpan<uint> lhs, ReadOnlySpan<uint> rhs, Span<bool> dst)
; location: [7FFC7C0A0340h, 7FFC7C0A03A2h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0003h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0004h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0008h mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000bh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000fh mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0012h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0015h xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
0018h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
001ah jle short 004ah               ; JLE(Jle_rel8_64) [4Ah:jmp64]                         encoding(2 bytes) = 7e 2e
001ch cmp r11d,r9d                  ; CMP(Cmp_r32_rm32) [R11D,R9D]                         encoding(3 bytes) = 45 3b d9
001fh jae short 005dh               ; JAE(Jae_rel8_64) [5Dh:jmp64]                         encoding(2 bytes) = 73 3c
0021h movsxd rsi,r11d               ; MOVSXD(Movsxd_r64_rm32) [RSI,R11D]                   encoding(3 bytes) = 49 63 f3
0024h lea rdi,[rax+rsi]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 30
0028h mov ebx,[r10+rsi*4]           ; MOV(Mov_r32_rm32) [EBX,mem(32u,R10:br,DS:sr)]        encoding(4 bytes) = 41 8b 1c b2
002ch cmp r11d,[r8+8]               ; CMP(Cmp_r32_rm32) [R11D,mem(32u,R8:br,DS:sr)]        encoding(4 bytes) = 45 3b 58 08
0030h jae short 005dh               ; JAE(Jae_rel8_64) [5Dh:jmp64]                         encoding(2 bytes) = 73 2b
0032h mov rbp,[r8]                  ; MOV(Mov_r64_rm64) [RBP,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 28
0035h mov esi,[rbp+rsi*4]           ; MOV(Mov_r32_rm32) [ESI,mem(32u,RBP:br,SS:sr)]        encoding(4 bytes) = 8b 74 b5 00
0039h cmp ebx,esi                   ; CMP(Cmp_r32_rm32) [EBX,ESI]                          encoding(2 bytes) = 3b de
003bh setae sil                     ; SETAE(Setae_rm8) [SIL]                               encoding(4 bytes) = 40 0f 93 c6
003fh mov [rdi],sil                 ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),SIL]           encoding(3 bytes) = 40 88 37
0042h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
0045h cmp r11d,edx                  ; CMP(Cmp_r32_rm32) [R11D,EDX]                         encoding(3 bytes) = 44 3b da
0048h jl short 001ch                ; JL(Jl_rel8_64) [1Ch:jmp64]                           encoding(2 bytes) = 7c d2
004ah mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
004dh mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0051h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0054h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
0058h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0059h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
005ah pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
005bh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
005ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
005dh call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC33300h:jmp64]                encoding(5 bytes) = e8 9e 32 c3 5f
0062h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> gteqBytes => new byte[99]{0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x12,0x8B,0x52,0x08,0x45,0x33,0xDB,0x85,0xD2,0x7E,0x2E,0x45,0x3B,0xD9,0x73,0x3C,0x49,0x63,0xF3,0x48,0x8D,0x3C,0x30,0x41,0x8B,0x1C,0xB2,0x45,0x3B,0x58,0x08,0x73,0x2B,0x49,0x8B,0x28,0x8B,0x74,0xB5,0x00,0x3B,0xDE,0x40,0x0F,0x93,0xC6,0x40,0x88,0x37,0x41,0xFF,0xC3,0x44,0x3B,0xDA,0x7C,0xD2,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0xC3,0xE8,0x9E,0x32,0xC3,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> gteq(ReadOnlySpan<long> lhs, ReadOnlySpan<long> rhs, Span<bool> dst)
; location: [7FFC7C0A03C0h, 7FFC7C0A0424h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0003h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0004h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0008h mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000bh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000fh mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0012h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0015h xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
0018h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
001ah jle short 004ch               ; JLE(Jle_rel8_64) [4Ch:jmp64]                         encoding(2 bytes) = 7e 30
001ch cmp r11d,r9d                  ; CMP(Cmp_r32_rm32) [R11D,R9D]                         encoding(3 bytes) = 45 3b d9
001fh jae short 005fh               ; JAE(Jae_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 73 3e
0021h movsxd rsi,r11d               ; MOVSXD(Movsxd_r64_rm32) [RSI,R11D]                   encoding(3 bytes) = 49 63 f3
0024h lea rdi,[rax+rsi]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 30
0028h mov rbx,[r10+rsi*8]           ; MOV(Mov_r64_rm64) [RBX,mem(64u,R10:br,DS:sr)]        encoding(4 bytes) = 49 8b 1c f2
002ch cmp r11d,[r8+8]               ; CMP(Cmp_r32_rm32) [R11D,mem(32u,R8:br,DS:sr)]        encoding(4 bytes) = 45 3b 58 08
0030h jae short 005fh               ; JAE(Jae_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 73 2d
0032h mov rbp,[r8]                  ; MOV(Mov_r64_rm64) [RBP,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 28
0035h mov rsi,[rbp+rsi*8]           ; MOV(Mov_r64_rm64) [RSI,mem(64u,RBP:br,SS:sr)]        encoding(5 bytes) = 48 8b 74 f5 00
003ah cmp rbx,rsi                   ; CMP(Cmp_r64_rm64) [RBX,RSI]                          encoding(3 bytes) = 48 3b de
003dh setge sil                     ; SETGE(Setge_rm8) [SIL]                               encoding(4 bytes) = 40 0f 9d c6
0041h mov [rdi],sil                 ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),SIL]           encoding(3 bytes) = 40 88 37
0044h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
0047h cmp r11d,edx                  ; CMP(Cmp_r32_rm32) [R11D,EDX]                         encoding(3 bytes) = 44 3b da
004ah jl short 001ch                ; JL(Jl_rel8_64) [1Ch:jmp64]                           encoding(2 bytes) = 7c d0
004ch mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
004fh mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0053h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0056h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
005ah pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
005bh pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
005ch pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
005dh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
005eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
005fh call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC33280h:jmp64]                encoding(5 bytes) = e8 1c 32 c3 5f
0064h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> gteqBytes => new byte[101]{0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x12,0x8B,0x52,0x08,0x45,0x33,0xDB,0x85,0xD2,0x7E,0x30,0x45,0x3B,0xD9,0x73,0x3E,0x49,0x63,0xF3,0x48,0x8D,0x3C,0x30,0x49,0x8B,0x1C,0xF2,0x45,0x3B,0x58,0x08,0x73,0x2D,0x49,0x8B,0x28,0x48,0x8B,0x74,0xF5,0x00,0x48,0x3B,0xDE,0x40,0x0F,0x9D,0xC6,0x40,0x88,0x37,0x41,0xFF,0xC3,0x44,0x3B,0xDA,0x7C,0xD0,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0xC3,0xE8,0x1C,0x32,0xC3,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> gteq(ReadOnlySpan<ulong> lhs, ReadOnlySpan<ulong> rhs, Span<bool> dst)
; location: [7FFC7C0A0450h, 7FFC7C0A04B4h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0003h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0004h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0008h mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000bh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
000fh mov r10,[rdx]                 ; MOV(Mov_r64_rm64) [R10,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 12
0012h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0015h xor r11d,r11d                 ; XOR(Xor_r32_rm32) [R11D,R11D]                        encoding(3 bytes) = 45 33 db
0018h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
001ah jle short 004ch               ; JLE(Jle_rel8_64) [4Ch:jmp64]                         encoding(2 bytes) = 7e 30
001ch cmp r11d,r9d                  ; CMP(Cmp_r32_rm32) [R11D,R9D]                         encoding(3 bytes) = 45 3b d9
001fh jae short 005fh               ; JAE(Jae_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 73 3e
0021h movsxd rsi,r11d               ; MOVSXD(Movsxd_r64_rm32) [RSI,R11D]                   encoding(3 bytes) = 49 63 f3
0024h lea rdi,[rax+rsi]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 30
0028h mov rbx,[r10+rsi*8]           ; MOV(Mov_r64_rm64) [RBX,mem(64u,R10:br,DS:sr)]        encoding(4 bytes) = 49 8b 1c f2
002ch cmp r11d,[r8+8]               ; CMP(Cmp_r32_rm32) [R11D,mem(32u,R8:br,DS:sr)]        encoding(4 bytes) = 45 3b 58 08
0030h jae short 005fh               ; JAE(Jae_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 73 2d
0032h mov rbp,[r8]                  ; MOV(Mov_r64_rm64) [RBP,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 28
0035h mov rsi,[rbp+rsi*8]           ; MOV(Mov_r64_rm64) [RSI,mem(64u,RBP:br,SS:sr)]        encoding(5 bytes) = 48 8b 74 f5 00
003ah cmp rbx,rsi                   ; CMP(Cmp_r64_rm64) [RBX,RSI]                          encoding(3 bytes) = 48 3b de
003dh setae sil                     ; SETAE(Setae_rm8) [SIL]                               encoding(4 bytes) = 40 0f 93 c6
0041h mov [rdi],sil                 ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),SIL]           encoding(3 bytes) = 40 88 37
0044h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
0047h cmp r11d,edx                  ; CMP(Cmp_r32_rm32) [R11D,EDX]                         encoding(3 bytes) = 44 3b da
004ah jl short 001ch                ; JL(Jl_rel8_64) [1Ch:jmp64]                           encoding(2 bytes) = 7c d0
004ch mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
004fh mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0053h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0056h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
005ah pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
005bh pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
005ch pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
005dh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
005eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
005fh call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC331F0h:jmp64]                encoding(5 bytes) = e8 8c 31 c3 5f
0064h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> gteqBytes => new byte[101]{0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x28,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4C,0x8B,0x12,0x8B,0x52,0x08,0x45,0x33,0xDB,0x85,0xD2,0x7E,0x30,0x45,0x3B,0xD9,0x73,0x3E,0x49,0x63,0xF3,0x48,0x8D,0x3C,0x30,0x49,0x8B,0x1C,0xF2,0x45,0x3B,0x58,0x08,0x73,0x2D,0x49,0x8B,0x28,0x48,0x8B,0x74,0xF5,0x00,0x48,0x3B,0xDE,0x40,0x0F,0x93,0xC6,0x40,0x88,0x37,0x41,0xFF,0xC3,0x44,0x3B,0xDA,0x7C,0xD0,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x28,0x5B,0x5D,0x5E,0x5F,0xC3,0xE8,0x8C,0x31,0xC3,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> gteq(ReadOnlySpan<sbyte> lhs, ReadOnlySpan<sbyte> rhs)
; location: [7FFC7C0A04E0h, 7FFC7C0A05E5h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push r12                      ; PUSH(Push_r64) [R12]                                 encoding(2 bytes) = 41 54
0006h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0007h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0008h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0009h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
000ah sub rsp,60h                   ; SUB(Sub_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 ec 60
000eh vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0011h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0014h lea rdi,[rsp+28h]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 7c 24 28
0019h mov ecx,0Ch                   ; MOV(Mov_r32_imm32) [ECX,ch:imm32]                    encoding(5 bytes) = b9 0c 00 00 00
001eh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0020h rep stosd                     ; STOSD(Stosd_m32_EAX) [mem(32u),EAX]                  encoding(2 bytes) = f3 ab
0022h mov rcx,rsi                   ; MOV(Mov_r64_rm64) [RCX,RSI]                          encoding(3 bytes) = 48 8b ce
0025h mov rbx,rcx                   ; MOV(Mov_r64_rm64) [RBX,RCX]                          encoding(3 bytes) = 48 8b d9
0028h mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
002bh mov rdi,r8                    ; MOV(Mov_r64_rm64) [RDI,R8]                           encoding(3 bytes) = 49 8b f8
002eh mov ebp,6Dh                   ; MOV(Mov_r32_imm32) [EBP,6dh:imm32]                   encoding(5 bytes) = bd 6d 00 00 00
0033h mov r14d,1                    ; MOV(Mov_r32_imm32) [R14D,1h:imm32]                   encoding(6 bytes) = 41 be 01 00 00 00
0039h mov r15d,[rsi+8]              ; MOV(Mov_r32_rm32) [R15D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 8b 7e 08
003dh mov r12d,[rdi+8]              ; MOV(Mov_r32_rm32) [R12D,mem(32u,RDI:br,DS:sr)]       encoding(4 bytes) = 44 8b 67 08
0041h cmp r15d,r12d                 ; CMP(Cmp_r32_rm32) [R15D,R12D]                        encoding(3 bytes) = 45 3b fc
0044h jne short 00abh               ; JNE(Jne_rel8_64) [ABh:jmp64]                         encoding(2 bytes) = 75 65
0046h movsxd rdx,r15d               ; MOVSXD(Movsxd_r64_rm32) [RDX,R15D]                   encoding(3 bytes) = 49 63 d7
0049h mov rcx,7FFC7C245DC8h         ; MOV(Mov_r64_imm64) [RCX,7ffc7c245dc8h:imm64]         encoding(10 bytes) = 48 b9 c8 5d 24 7c fc 7f 00 00
0053h call 7FFCDBBA24A0h            ; CALL(Call_rel32_64) [5FB01FC0h:jmp64]                encoding(5 bytes) = e8 68 1f b0 5f
0058h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
005ch mov edx,[rax+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 50 08
005fh mov r8,rbx                    ; MOV(Mov_r64_rm64) [R8,RBX]                           encoding(3 bytes) = 4c 8b c3
0062h vmovdqu xmm0,xmmword ptr [rsi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 06
0066h vmovdqu xmmword ptr [rsp+48h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 48
006ch vmovdqu xmm0,xmmword ptr [rdi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RDI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 07
0070h vmovdqu xmmword ptr [rsp+38h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 38
0076h lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
007bh mov [r9],rcx                  ; MOV(Mov_rm64_r64) [mem(64u,R9:br,DS:sr),RCX]         encoding(3 bytes) = 49 89 09
007eh mov [r9+8],edx                ; MOV(Mov_rm32_r32) [mem(32u,R9:br,DS:sr),EDX]         encoding(4 bytes) = 41 89 51 08
0082h mov rcx,r8                    ; MOV(Mov_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 8b c8
0085h lea rdx,[rsp+48h]             ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 54 24 48
008ah lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
008fh lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
0094h call 7FFC7C0A0080h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFFBA0h:jmp64]        encoding(5 bytes) = e8 07 fb ff ff
0099h mov rax,rbx                   ; MOV(Mov_r64_rm64) [RAX,RBX]                          encoding(3 bytes) = 48 8b c3
009ch add rsp,60h                   ; ADD(Add_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 c4 60
00a0h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
00a1h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
00a2h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
00a3h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
00a4h pop r12                       ; POP(Pop_r64) [R12]                                   encoding(2 bytes) = 41 5c
00a6h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
00a8h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
00aah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
00abh mov ecx,413h                  ; MOV(Mov_r32_imm32) [ECX,413h:imm32]                  encoding(5 bytes) = b9 13 04 00 00
00b0h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
00bah call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC33940h:jmp64]                encoding(5 bytes) = e8 81 38 c3 5f
00bfh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
00c2h mov ecx,0BAFh                 ; MOV(Mov_r32_imm32) [ECX,bafh:imm32]                  encoding(5 bytes) = b9 af 0b 00 00
00c7h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
00d1h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC33940h:jmp64]                encoding(5 bytes) = e8 6a 38 c3 5f
00d6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00d9h lea r8,[rsp+58h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 58
00deh mov [r8],r14b                 ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),R14L]           encoding(3 bytes) = 45 88 30
00e1h mov [r8+4],ebp                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBP]         encoding(4 bytes) = 41 89 68 04
00e5h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00e8h mov ecx,r15d                  ; MOV(Mov_r32_rm32) [ECX,R15D]                         encoding(3 bytes) = 41 8b cf
00ebh mov edx,r12d                  ; MOV(Mov_r32_rm32) [EDX,R12D]                         encoding(3 bytes) = 41 8b d4
00eeh mov rax,[rsp+58h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 58
00f3h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00f8h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFEDB38h:jmp64]        encoding(5 bytes) = e8 3b da fe ff
00fdh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
0100h call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAE93B0h:jmp64]                encoding(5 bytes) = e8 ab 92 ae 5f
0105h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> gteqBytes => new byte[262]{0x41,0x57,0x41,0x56,0x41,0x54,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x60,0xC5,0xF8,0x77,0x48,0x8B,0xF1,0x48,0x8D,0x7C,0x24,0x28,0xB9,0x0C,0x00,0x00,0x00,0x33,0xC0,0xF3,0xAB,0x48,0x8B,0xCE,0x48,0x8B,0xD9,0x48,0x8B,0xF2,0x49,0x8B,0xF8,0xBD,0x6D,0x00,0x00,0x00,0x41,0xBE,0x01,0x00,0x00,0x00,0x44,0x8B,0x7E,0x08,0x44,0x8B,0x67,0x08,0x45,0x3B,0xFC,0x75,0x65,0x49,0x63,0xD7,0x48,0xB9,0xC8,0x5D,0x24,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x68,0x1F,0xB0,0x5F,0x48,0x8D,0x48,0x10,0x8B,0x50,0x08,0x4C,0x8B,0xC3,0xC5,0xFA,0x6F,0x06,0xC5,0xFA,0x7F,0x44,0x24,0x48,0xC5,0xFA,0x6F,0x07,0xC5,0xFA,0x7F,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0x49,0x89,0x09,0x41,0x89,0x51,0x08,0x49,0x8B,0xC8,0x48,0x8D,0x54,0x24,0x48,0x4C,0x8D,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0xE8,0x07,0xFB,0xFF,0xFF,0x48,0x8B,0xC3,0x48,0x83,0xC4,0x60,0x5B,0x5D,0x5E,0x5F,0x41,0x5C,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0x13,0x04,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x81,0x38,0xC3,0x5F,0x48,0x8B,0xF0,0xB9,0xAF,0x0B,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x6A,0x38,0xC3,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x58,0x45,0x88,0x30,0x41,0x89,0x68,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCF,0x41,0x8B,0xD4,0x48,0x8B,0x44,0x24,0x58,0x48,0x89,0x44,0x24,0x20,0xE8,0x3B,0xDA,0xFE,0xFF,0x48,0x8B,0xC8,0xE8,0xAB,0x92,0xAE,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> gteq(ReadOnlySpan<byte> lhs, ReadOnlySpan<byte> rhs)
; location: [7FFC7C0A0610h, 7FFC7C0A0715h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push r12                      ; PUSH(Push_r64) [R12]                                 encoding(2 bytes) = 41 54
0006h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0007h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0008h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0009h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
000ah sub rsp,60h                   ; SUB(Sub_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 ec 60
000eh vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0011h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0014h lea rdi,[rsp+28h]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 7c 24 28
0019h mov ecx,0Ch                   ; MOV(Mov_r32_imm32) [ECX,ch:imm32]                    encoding(5 bytes) = b9 0c 00 00 00
001eh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0020h rep stosd                     ; STOSD(Stosd_m32_EAX) [mem(32u),EAX]                  encoding(2 bytes) = f3 ab
0022h mov rcx,rsi                   ; MOV(Mov_r64_rm64) [RCX,RSI]                          encoding(3 bytes) = 48 8b ce
0025h mov rbx,rcx                   ; MOV(Mov_r64_rm64) [RBX,RCX]                          encoding(3 bytes) = 48 8b d9
0028h mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
002bh mov rdi,r8                    ; MOV(Mov_r64_rm64) [RDI,R8]                           encoding(3 bytes) = 49 8b f8
002eh mov ebp,71h                   ; MOV(Mov_r32_imm32) [EBP,71h:imm32]                   encoding(5 bytes) = bd 71 00 00 00
0033h mov r14d,1                    ; MOV(Mov_r32_imm32) [R14D,1h:imm32]                   encoding(6 bytes) = 41 be 01 00 00 00
0039h mov r15d,[rsi+8]              ; MOV(Mov_r32_rm32) [R15D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 8b 7e 08
003dh mov r12d,[rdi+8]              ; MOV(Mov_r32_rm32) [R12D,mem(32u,RDI:br,DS:sr)]       encoding(4 bytes) = 44 8b 67 08
0041h cmp r15d,r12d                 ; CMP(Cmp_r32_rm32) [R15D,R12D]                        encoding(3 bytes) = 45 3b fc
0044h jne short 00abh               ; JNE(Jne_rel8_64) [ABh:jmp64]                         encoding(2 bytes) = 75 65
0046h movsxd rdx,r15d               ; MOVSXD(Movsxd_r64_rm32) [RDX,R15D]                   encoding(3 bytes) = 49 63 d7
0049h mov rcx,7FFC7C245DC8h         ; MOV(Mov_r64_imm64) [RCX,7ffc7c245dc8h:imm64]         encoding(10 bytes) = 48 b9 c8 5d 24 7c fc 7f 00 00
0053h call 7FFCDBBA24A0h            ; CALL(Call_rel32_64) [5FB01E90h:jmp64]                encoding(5 bytes) = e8 38 1e b0 5f
0058h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
005ch mov edx,[rax+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 50 08
005fh mov r8,rbx                    ; MOV(Mov_r64_rm64) [R8,RBX]                           encoding(3 bytes) = 4c 8b c3
0062h vmovdqu xmm0,xmmword ptr [rsi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 06
0066h vmovdqu xmmword ptr [rsp+48h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 48
006ch vmovdqu xmm0,xmmword ptr [rdi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RDI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 07
0070h vmovdqu xmmword ptr [rsp+38h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 38
0076h lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
007bh mov [r9],rcx                  ; MOV(Mov_rm64_r64) [mem(64u,R9:br,DS:sr),RCX]         encoding(3 bytes) = 49 89 09
007eh mov [r9+8],edx                ; MOV(Mov_rm32_r32) [mem(32u,R9:br,DS:sr),EDX]         encoding(4 bytes) = 41 89 51 08
0082h mov rcx,r8                    ; MOV(Mov_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 8b c8
0085h lea rdx,[rsp+48h]             ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 54 24 48
008ah lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
008fh lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
0094h call 7FFC7C0A0110h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFFB00h:jmp64]        encoding(5 bytes) = e8 67 fa ff ff
0099h mov rax,rbx                   ; MOV(Mov_r64_rm64) [RAX,RBX]                          encoding(3 bytes) = 48 8b c3
009ch add rsp,60h                   ; ADD(Add_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 c4 60
00a0h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
00a1h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
00a2h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
00a3h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
00a4h pop r12                       ; POP(Pop_r64) [R12]                                   encoding(2 bytes) = 41 5c
00a6h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
00a8h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
00aah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
00abh mov ecx,413h                  ; MOV(Mov_r32_imm32) [ECX,413h:imm32]                  encoding(5 bytes) = b9 13 04 00 00
00b0h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
00bah call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC33810h:jmp64]                encoding(5 bytes) = e8 51 37 c3 5f
00bfh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
00c2h mov ecx,0BAFh                 ; MOV(Mov_r32_imm32) [ECX,bafh:imm32]                  encoding(5 bytes) = b9 af 0b 00 00
00c7h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
00d1h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC33810h:jmp64]                encoding(5 bytes) = e8 3a 37 c3 5f
00d6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00d9h lea r8,[rsp+58h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 58
00deh mov [r8],r14b                 ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),R14L]           encoding(3 bytes) = 45 88 30
00e1h mov [r8+4],ebp                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBP]         encoding(4 bytes) = 41 89 68 04
00e5h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00e8h mov ecx,r15d                  ; MOV(Mov_r32_rm32) [ECX,R15D]                         encoding(3 bytes) = 41 8b cf
00ebh mov edx,r12d                  ; MOV(Mov_r32_rm32) [EDX,R12D]                         encoding(3 bytes) = 41 8b d4
00eeh mov rax,[rsp+58h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 58
00f3h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00f8h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFEDA08h:jmp64]        encoding(5 bytes) = e8 0b d9 fe ff
00fdh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
0100h call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAE9280h:jmp64]                encoding(5 bytes) = e8 7b 91 ae 5f
0105h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> gteqBytes => new byte[262]{0x41,0x57,0x41,0x56,0x41,0x54,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x60,0xC5,0xF8,0x77,0x48,0x8B,0xF1,0x48,0x8D,0x7C,0x24,0x28,0xB9,0x0C,0x00,0x00,0x00,0x33,0xC0,0xF3,0xAB,0x48,0x8B,0xCE,0x48,0x8B,0xD9,0x48,0x8B,0xF2,0x49,0x8B,0xF8,0xBD,0x71,0x00,0x00,0x00,0x41,0xBE,0x01,0x00,0x00,0x00,0x44,0x8B,0x7E,0x08,0x44,0x8B,0x67,0x08,0x45,0x3B,0xFC,0x75,0x65,0x49,0x63,0xD7,0x48,0xB9,0xC8,0x5D,0x24,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x38,0x1E,0xB0,0x5F,0x48,0x8D,0x48,0x10,0x8B,0x50,0x08,0x4C,0x8B,0xC3,0xC5,0xFA,0x6F,0x06,0xC5,0xFA,0x7F,0x44,0x24,0x48,0xC5,0xFA,0x6F,0x07,0xC5,0xFA,0x7F,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0x49,0x89,0x09,0x41,0x89,0x51,0x08,0x49,0x8B,0xC8,0x48,0x8D,0x54,0x24,0x48,0x4C,0x8D,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0xE8,0x67,0xFA,0xFF,0xFF,0x48,0x8B,0xC3,0x48,0x83,0xC4,0x60,0x5B,0x5D,0x5E,0x5F,0x41,0x5C,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0x13,0x04,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x51,0x37,0xC3,0x5F,0x48,0x8B,0xF0,0xB9,0xAF,0x0B,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x3A,0x37,0xC3,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x58,0x45,0x88,0x30,0x41,0x89,0x68,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCF,0x41,0x8B,0xD4,0x48,0x8B,0x44,0x24,0x58,0x48,0x89,0x44,0x24,0x20,0xE8,0x0B,0xD9,0xFE,0xFF,0x48,0x8B,0xC8,0xE8,0x7B,0x91,0xAE,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> gteq(ReadOnlySpan<short> lhs, ReadOnlySpan<short> rhs)
; location: [7FFC7C0A0740h, 7FFC7C0A0845h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push r12                      ; PUSH(Push_r64) [R12]                                 encoding(2 bytes) = 41 54
0006h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0007h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0008h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0009h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
000ah sub rsp,60h                   ; SUB(Sub_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 ec 60
000eh vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0011h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0014h lea rdi,[rsp+28h]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 7c 24 28
0019h mov ecx,0Ch                   ; MOV(Mov_r32_imm32) [ECX,ch:imm32]                    encoding(5 bytes) = b9 0c 00 00 00
001eh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0020h rep stosd                     ; STOSD(Stosd_m32_EAX) [mem(32u),EAX]                  encoding(2 bytes) = f3 ab
0022h mov rcx,rsi                   ; MOV(Mov_r64_rm64) [RCX,RSI]                          encoding(3 bytes) = 48 8b ce
0025h mov rbx,rcx                   ; MOV(Mov_r64_rm64) [RBX,RCX]                          encoding(3 bytes) = 48 8b d9
0028h mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
002bh mov rdi,r8                    ; MOV(Mov_r64_rm64) [RDI,R8]                           encoding(3 bytes) = 49 8b f8
002eh mov ebp,75h                   ; MOV(Mov_r32_imm32) [EBP,75h:imm32]                   encoding(5 bytes) = bd 75 00 00 00
0033h mov r14d,1                    ; MOV(Mov_r32_imm32) [R14D,1h:imm32]                   encoding(6 bytes) = 41 be 01 00 00 00
0039h mov r15d,[rsi+8]              ; MOV(Mov_r32_rm32) [R15D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 8b 7e 08
003dh mov r12d,[rdi+8]              ; MOV(Mov_r32_rm32) [R12D,mem(32u,RDI:br,DS:sr)]       encoding(4 bytes) = 44 8b 67 08
0041h cmp r15d,r12d                 ; CMP(Cmp_r32_rm32) [R15D,R12D]                        encoding(3 bytes) = 45 3b fc
0044h jne short 00abh               ; JNE(Jne_rel8_64) [ABh:jmp64]                         encoding(2 bytes) = 75 65
0046h movsxd rdx,r15d               ; MOVSXD(Movsxd_r64_rm32) [RDX,R15D]                   encoding(3 bytes) = 49 63 d7
0049h mov rcx,7FFC7C245DC8h         ; MOV(Mov_r64_imm64) [RCX,7ffc7c245dc8h:imm64]         encoding(10 bytes) = 48 b9 c8 5d 24 7c fc 7f 00 00
0053h call 7FFCDBBA24A0h            ; CALL(Call_rel32_64) [5FB01D60h:jmp64]                encoding(5 bytes) = e8 08 1d b0 5f
0058h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
005ch mov edx,[rax+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 50 08
005fh mov r8,rbx                    ; MOV(Mov_r64_rm64) [R8,RBX]                           encoding(3 bytes) = 4c 8b c3
0062h vmovdqu xmm0,xmmword ptr [rsi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 06
0066h vmovdqu xmmword ptr [rsp+48h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 48
006ch vmovdqu xmm0,xmmword ptr [rdi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RDI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 07
0070h vmovdqu xmmword ptr [rsp+38h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 38
0076h lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
007bh mov [r9],rcx                  ; MOV(Mov_rm64_r64) [mem(64u,R9:br,DS:sr),RCX]         encoding(3 bytes) = 49 89 09
007eh mov [r9+8],edx                ; MOV(Mov_rm32_r32) [mem(32u,R9:br,DS:sr),EDX]         encoding(4 bytes) = 41 89 51 08
0082h mov rcx,r8                    ; MOV(Mov_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 8b c8
0085h lea rdx,[rsp+48h]             ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 54 24 48
008ah lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
008fh lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
0094h call 7FFC7C0A01A0h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFFA60h:jmp64]        encoding(5 bytes) = e8 c7 f9 ff ff
0099h mov rax,rbx                   ; MOV(Mov_r64_rm64) [RAX,RBX]                          encoding(3 bytes) = 48 8b c3
009ch add rsp,60h                   ; ADD(Add_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 c4 60
00a0h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
00a1h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
00a2h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
00a3h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
00a4h pop r12                       ; POP(Pop_r64) [R12]                                   encoding(2 bytes) = 41 5c
00a6h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
00a8h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
00aah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
00abh mov ecx,413h                  ; MOV(Mov_r32_imm32) [ECX,413h:imm32]                  encoding(5 bytes) = b9 13 04 00 00
00b0h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
00bah call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC336E0h:jmp64]                encoding(5 bytes) = e8 21 36 c3 5f
00bfh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
00c2h mov ecx,0BAFh                 ; MOV(Mov_r32_imm32) [ECX,bafh:imm32]                  encoding(5 bytes) = b9 af 0b 00 00
00c7h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
00d1h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC336E0h:jmp64]                encoding(5 bytes) = e8 0a 36 c3 5f
00d6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00d9h lea r8,[rsp+58h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 58
00deh mov [r8],r14b                 ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),R14L]           encoding(3 bytes) = 45 88 30
00e1h mov [r8+4],ebp                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBP]         encoding(4 bytes) = 41 89 68 04
00e5h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00e8h mov ecx,r15d                  ; MOV(Mov_r32_rm32) [ECX,R15D]                         encoding(3 bytes) = 41 8b cf
00ebh mov edx,r12d                  ; MOV(Mov_r32_rm32) [EDX,R12D]                         encoding(3 bytes) = 41 8b d4
00eeh mov rax,[rsp+58h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 58
00f3h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00f8h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFED8D8h:jmp64]        encoding(5 bytes) = e8 db d7 fe ff
00fdh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
0100h call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAE9150h:jmp64]                encoding(5 bytes) = e8 4b 90 ae 5f
0105h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> gteqBytes => new byte[262]{0x41,0x57,0x41,0x56,0x41,0x54,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x60,0xC5,0xF8,0x77,0x48,0x8B,0xF1,0x48,0x8D,0x7C,0x24,0x28,0xB9,0x0C,0x00,0x00,0x00,0x33,0xC0,0xF3,0xAB,0x48,0x8B,0xCE,0x48,0x8B,0xD9,0x48,0x8B,0xF2,0x49,0x8B,0xF8,0xBD,0x75,0x00,0x00,0x00,0x41,0xBE,0x01,0x00,0x00,0x00,0x44,0x8B,0x7E,0x08,0x44,0x8B,0x67,0x08,0x45,0x3B,0xFC,0x75,0x65,0x49,0x63,0xD7,0x48,0xB9,0xC8,0x5D,0x24,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x08,0x1D,0xB0,0x5F,0x48,0x8D,0x48,0x10,0x8B,0x50,0x08,0x4C,0x8B,0xC3,0xC5,0xFA,0x6F,0x06,0xC5,0xFA,0x7F,0x44,0x24,0x48,0xC5,0xFA,0x6F,0x07,0xC5,0xFA,0x7F,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0x49,0x89,0x09,0x41,0x89,0x51,0x08,0x49,0x8B,0xC8,0x48,0x8D,0x54,0x24,0x48,0x4C,0x8D,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0xE8,0xC7,0xF9,0xFF,0xFF,0x48,0x8B,0xC3,0x48,0x83,0xC4,0x60,0x5B,0x5D,0x5E,0x5F,0x41,0x5C,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0x13,0x04,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x21,0x36,0xC3,0x5F,0x48,0x8B,0xF0,0xB9,0xAF,0x0B,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x0A,0x36,0xC3,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x58,0x45,0x88,0x30,0x41,0x89,0x68,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCF,0x41,0x8B,0xD4,0x48,0x8B,0x44,0x24,0x58,0x48,0x89,0x44,0x24,0x20,0xE8,0xDB,0xD7,0xFE,0xFF,0x48,0x8B,0xC8,0xE8,0x4B,0x90,0xAE,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> gteq(ReadOnlySpan<int> lhs, ReadOnlySpan<int> rhs)
; location: [7FFC7C0A09A0h, 7FFC7C0A0AA5h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push r12                      ; PUSH(Push_r64) [R12]                                 encoding(2 bytes) = 41 54
0006h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0007h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0008h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0009h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
000ah sub rsp,60h                   ; SUB(Sub_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 ec 60
000eh vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0011h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0014h lea rdi,[rsp+28h]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 7c 24 28
0019h mov ecx,0Ch                   ; MOV(Mov_r32_imm32) [ECX,ch:imm32]                    encoding(5 bytes) = b9 0c 00 00 00
001eh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0020h rep stosd                     ; STOSD(Stosd_m32_EAX) [mem(32u),EAX]                  encoding(2 bytes) = f3 ab
0022h mov rcx,rsi                   ; MOV(Mov_r64_rm64) [RCX,RSI]                          encoding(3 bytes) = 48 8b ce
0025h mov rbx,rcx                   ; MOV(Mov_r64_rm64) [RBX,RCX]                          encoding(3 bytes) = 48 8b d9
0028h mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
002bh mov rdi,r8                    ; MOV(Mov_r64_rm64) [RDI,R8]                           encoding(3 bytes) = 49 8b f8
002eh mov ebp,7Dh                   ; MOV(Mov_r32_imm32) [EBP,7dh:imm32]                   encoding(5 bytes) = bd 7d 00 00 00
0033h mov r14d,1                    ; MOV(Mov_r32_imm32) [R14D,1h:imm32]                   encoding(6 bytes) = 41 be 01 00 00 00
0039h mov r15d,[rsi+8]              ; MOV(Mov_r32_rm32) [R15D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 8b 7e 08
003dh mov r12d,[rdi+8]              ; MOV(Mov_r32_rm32) [R12D,mem(32u,RDI:br,DS:sr)]       encoding(4 bytes) = 44 8b 67 08
0041h cmp r15d,r12d                 ; CMP(Cmp_r32_rm32) [R15D,R12D]                        encoding(3 bytes) = 45 3b fc
0044h jne short 00abh               ; JNE(Jne_rel8_64) [ABh:jmp64]                         encoding(2 bytes) = 75 65
0046h movsxd rdx,r15d               ; MOVSXD(Movsxd_r64_rm32) [RDX,R15D]                   encoding(3 bytes) = 49 63 d7
0049h mov rcx,7FFC7C245DC8h         ; MOV(Mov_r64_imm64) [RCX,7ffc7c245dc8h:imm64]         encoding(10 bytes) = 48 b9 c8 5d 24 7c fc 7f 00 00
0053h call 7FFCDBBA24A0h            ; CALL(Call_rel32_64) [5FB01B00h:jmp64]                encoding(5 bytes) = e8 a8 1a b0 5f
0058h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
005ch mov edx,[rax+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 50 08
005fh mov r8,rbx                    ; MOV(Mov_r64_rm64) [R8,RBX]                           encoding(3 bytes) = 4c 8b c3
0062h vmovdqu xmm0,xmmword ptr [rsi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 06
0066h vmovdqu xmmword ptr [rsp+48h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 48
006ch vmovdqu xmm0,xmmword ptr [rdi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RDI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 07
0070h vmovdqu xmmword ptr [rsp+38h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 38
0076h lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
007bh mov [r9],rcx                  ; MOV(Mov_rm64_r64) [mem(64u,R9:br,DS:sr),RCX]         encoding(3 bytes) = 49 89 09
007eh mov [r9+8],edx                ; MOV(Mov_rm32_r32) [mem(32u,R9:br,DS:sr),EDX]         encoding(4 bytes) = 41 89 51 08
0082h mov rcx,r8                    ; MOV(Mov_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 8b c8
0085h lea rdx,[rsp+48h]             ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 54 24 48
008ah lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
008fh lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
0094h call 7FFC7C0A02C0h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFF920h:jmp64]        encoding(5 bytes) = e8 87 f8 ff ff
0099h mov rax,rbx                   ; MOV(Mov_r64_rm64) [RAX,RBX]                          encoding(3 bytes) = 48 8b c3
009ch add rsp,60h                   ; ADD(Add_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 c4 60
00a0h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
00a1h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
00a2h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
00a3h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
00a4h pop r12                       ; POP(Pop_r64) [R12]                                   encoding(2 bytes) = 41 5c
00a6h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
00a8h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
00aah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
00abh mov ecx,413h                  ; MOV(Mov_r32_imm32) [ECX,413h:imm32]                  encoding(5 bytes) = b9 13 04 00 00
00b0h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
00bah call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC33480h:jmp64]                encoding(5 bytes) = e8 c1 33 c3 5f
00bfh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
00c2h mov ecx,0BAFh                 ; MOV(Mov_r32_imm32) [ECX,bafh:imm32]                  encoding(5 bytes) = b9 af 0b 00 00
00c7h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
00d1h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC33480h:jmp64]                encoding(5 bytes) = e8 aa 33 c3 5f
00d6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00d9h lea r8,[rsp+58h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 58
00deh mov [r8],r14b                 ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),R14L]           encoding(3 bytes) = 45 88 30
00e1h mov [r8+4],ebp                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBP]         encoding(4 bytes) = 41 89 68 04
00e5h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00e8h mov ecx,r15d                  ; MOV(Mov_r32_rm32) [ECX,R15D]                         encoding(3 bytes) = 41 8b cf
00ebh mov edx,r12d                  ; MOV(Mov_r32_rm32) [EDX,R12D]                         encoding(3 bytes) = 41 8b d4
00eeh mov rax,[rsp+58h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 58
00f3h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00f8h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFED678h:jmp64]        encoding(5 bytes) = e8 7b d5 fe ff
00fdh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
0100h call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAE8EF0h:jmp64]                encoding(5 bytes) = e8 eb 8d ae 5f
0105h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> gteqBytes => new byte[262]{0x41,0x57,0x41,0x56,0x41,0x54,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x60,0xC5,0xF8,0x77,0x48,0x8B,0xF1,0x48,0x8D,0x7C,0x24,0x28,0xB9,0x0C,0x00,0x00,0x00,0x33,0xC0,0xF3,0xAB,0x48,0x8B,0xCE,0x48,0x8B,0xD9,0x48,0x8B,0xF2,0x49,0x8B,0xF8,0xBD,0x7D,0x00,0x00,0x00,0x41,0xBE,0x01,0x00,0x00,0x00,0x44,0x8B,0x7E,0x08,0x44,0x8B,0x67,0x08,0x45,0x3B,0xFC,0x75,0x65,0x49,0x63,0xD7,0x48,0xB9,0xC8,0x5D,0x24,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xA8,0x1A,0xB0,0x5F,0x48,0x8D,0x48,0x10,0x8B,0x50,0x08,0x4C,0x8B,0xC3,0xC5,0xFA,0x6F,0x06,0xC5,0xFA,0x7F,0x44,0x24,0x48,0xC5,0xFA,0x6F,0x07,0xC5,0xFA,0x7F,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0x49,0x89,0x09,0x41,0x89,0x51,0x08,0x49,0x8B,0xC8,0x48,0x8D,0x54,0x24,0x48,0x4C,0x8D,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0xE8,0x87,0xF8,0xFF,0xFF,0x48,0x8B,0xC3,0x48,0x83,0xC4,0x60,0x5B,0x5D,0x5E,0x5F,0x41,0x5C,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0x13,0x04,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xC1,0x33,0xC3,0x5F,0x48,0x8B,0xF0,0xB9,0xAF,0x0B,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xAA,0x33,0xC3,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x58,0x45,0x88,0x30,0x41,0x89,0x68,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCF,0x41,0x8B,0xD4,0x48,0x8B,0x44,0x24,0x58,0x48,0x89,0x44,0x24,0x20,0xE8,0x7B,0xD5,0xFE,0xFF,0x48,0x8B,0xC8,0xE8,0xEB,0x8D,0xAE,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> gteq(ReadOnlySpan<long> lhs, ReadOnlySpan<long> rhs)
; location: [7FFC7C0A0C00h, 7FFC7C0A0D05h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push r12                      ; PUSH(Push_r64) [R12]                                 encoding(2 bytes) = 41 54
0006h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0007h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0008h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0009h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
000ah sub rsp,60h                   ; SUB(Sub_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 ec 60
000eh vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0011h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0014h lea rdi,[rsp+28h]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 7c 24 28
0019h mov ecx,0Ch                   ; MOV(Mov_r32_imm32) [ECX,ch:imm32]                    encoding(5 bytes) = b9 0c 00 00 00
001eh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0020h rep stosd                     ; STOSD(Stosd_m32_EAX) [mem(32u),EAX]                  encoding(2 bytes) = f3 ab
0022h mov rcx,rsi                   ; MOV(Mov_r64_rm64) [RCX,RSI]                          encoding(3 bytes) = 48 8b ce
0025h mov rbx,rcx                   ; MOV(Mov_r64_rm64) [RBX,RCX]                          encoding(3 bytes) = 48 8b d9
0028h mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
002bh mov rdi,r8                    ; MOV(Mov_r64_rm64) [RDI,R8]                           encoding(3 bytes) = 49 8b f8
002eh mov ebp,85h                   ; MOV(Mov_r32_imm32) [EBP,85h:imm32]                   encoding(5 bytes) = bd 85 00 00 00
0033h mov r14d,1                    ; MOV(Mov_r32_imm32) [R14D,1h:imm32]                   encoding(6 bytes) = 41 be 01 00 00 00
0039h mov r15d,[rsi+8]              ; MOV(Mov_r32_rm32) [R15D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 8b 7e 08
003dh mov r12d,[rdi+8]              ; MOV(Mov_r32_rm32) [R12D,mem(32u,RDI:br,DS:sr)]       encoding(4 bytes) = 44 8b 67 08
0041h cmp r15d,r12d                 ; CMP(Cmp_r32_rm32) [R15D,R12D]                        encoding(3 bytes) = 45 3b fc
0044h jne short 00abh               ; JNE(Jne_rel8_64) [ABh:jmp64]                         encoding(2 bytes) = 75 65
0046h movsxd rdx,r15d               ; MOVSXD(Movsxd_r64_rm32) [RDX,R15D]                   encoding(3 bytes) = 49 63 d7
0049h mov rcx,7FFC7C245DC8h         ; MOV(Mov_r64_imm64) [RCX,7ffc7c245dc8h:imm64]         encoding(10 bytes) = 48 b9 c8 5d 24 7c fc 7f 00 00
0053h call 7FFCDBBA24A0h            ; CALL(Call_rel32_64) [5FB018A0h:jmp64]                encoding(5 bytes) = e8 48 18 b0 5f
0058h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
005ch mov edx,[rax+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 50 08
005fh mov r8,rbx                    ; MOV(Mov_r64_rm64) [R8,RBX]                           encoding(3 bytes) = 4c 8b c3
0062h vmovdqu xmm0,xmmword ptr [rsi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 06
0066h vmovdqu xmmword ptr [rsp+48h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 48
006ch vmovdqu xmm0,xmmword ptr [rdi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RDI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 07
0070h vmovdqu xmmword ptr [rsp+38h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 38
0076h lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
007bh mov [r9],rcx                  ; MOV(Mov_rm64_r64) [mem(64u,R9:br,DS:sr),RCX]         encoding(3 bytes) = 49 89 09
007eh mov [r9+8],edx                ; MOV(Mov_rm32_r32) [mem(32u,R9:br,DS:sr),EDX]         encoding(4 bytes) = 41 89 51 08
0082h mov rcx,r8                    ; MOV(Mov_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 8b c8
0085h lea rdx,[rsp+48h]             ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 54 24 48
008ah lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
008fh lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
0094h call 7FFC7C0A03C0h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFF7C0h:jmp64]        encoding(5 bytes) = e8 27 f7 ff ff
0099h mov rax,rbx                   ; MOV(Mov_r64_rm64) [RAX,RBX]                          encoding(3 bytes) = 48 8b c3
009ch add rsp,60h                   ; ADD(Add_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 c4 60
00a0h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
00a1h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
00a2h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
00a3h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
00a4h pop r12                       ; POP(Pop_r64) [R12]                                   encoding(2 bytes) = 41 5c
00a6h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
00a8h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
00aah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
00abh mov ecx,413h                  ; MOV(Mov_r32_imm32) [ECX,413h:imm32]                  encoding(5 bytes) = b9 13 04 00 00
00b0h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
00bah call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC33220h:jmp64]                encoding(5 bytes) = e8 61 31 c3 5f
00bfh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
00c2h mov ecx,0BAFh                 ; MOV(Mov_r32_imm32) [ECX,bafh:imm32]                  encoding(5 bytes) = b9 af 0b 00 00
00c7h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
00d1h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC33220h:jmp64]                encoding(5 bytes) = e8 4a 31 c3 5f
00d6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00d9h lea r8,[rsp+58h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 58
00deh mov [r8],r14b                 ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),R14L]           encoding(3 bytes) = 45 88 30
00e1h mov [r8+4],ebp                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBP]         encoding(4 bytes) = 41 89 68 04
00e5h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00e8h mov ecx,r15d                  ; MOV(Mov_r32_rm32) [ECX,R15D]                         encoding(3 bytes) = 41 8b cf
00ebh mov edx,r12d                  ; MOV(Mov_r32_rm32) [EDX,R12D]                         encoding(3 bytes) = 41 8b d4
00eeh mov rax,[rsp+58h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 58
00f3h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00f8h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFED418h:jmp64]        encoding(5 bytes) = e8 1b d3 fe ff
00fdh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
0100h call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAE8C90h:jmp64]                encoding(5 bytes) = e8 8b 8b ae 5f
0105h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> gteqBytes => new byte[262]{0x41,0x57,0x41,0x56,0x41,0x54,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x60,0xC5,0xF8,0x77,0x48,0x8B,0xF1,0x48,0x8D,0x7C,0x24,0x28,0xB9,0x0C,0x00,0x00,0x00,0x33,0xC0,0xF3,0xAB,0x48,0x8B,0xCE,0x48,0x8B,0xD9,0x48,0x8B,0xF2,0x49,0x8B,0xF8,0xBD,0x85,0x00,0x00,0x00,0x41,0xBE,0x01,0x00,0x00,0x00,0x44,0x8B,0x7E,0x08,0x44,0x8B,0x67,0x08,0x45,0x3B,0xFC,0x75,0x65,0x49,0x63,0xD7,0x48,0xB9,0xC8,0x5D,0x24,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x48,0x18,0xB0,0x5F,0x48,0x8D,0x48,0x10,0x8B,0x50,0x08,0x4C,0x8B,0xC3,0xC5,0xFA,0x6F,0x06,0xC5,0xFA,0x7F,0x44,0x24,0x48,0xC5,0xFA,0x6F,0x07,0xC5,0xFA,0x7F,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0x49,0x89,0x09,0x41,0x89,0x51,0x08,0x49,0x8B,0xC8,0x48,0x8D,0x54,0x24,0x48,0x4C,0x8D,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0xE8,0x27,0xF7,0xFF,0xFF,0x48,0x8B,0xC3,0x48,0x83,0xC4,0x60,0x5B,0x5D,0x5E,0x5F,0x41,0x5C,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0x13,0x04,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x61,0x31,0xC3,0x5F,0x48,0x8B,0xF0,0xB9,0xAF,0x0B,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x4A,0x31,0xC3,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x58,0x45,0x88,0x30,0x41,0x89,0x68,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCF,0x41,0x8B,0xD4,0x48,0x8B,0x44,0x24,0x58,0x48,0x89,0x44,0x24,0x20,0xE8,0x1B,0xD3,0xFE,0xFF,0x48,0x8B,0xC8,0xE8,0x8B,0x8B,0xAE,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<bool> gteq(ReadOnlySpan<ulong> lhs, ReadOnlySpan<ulong> rhs)
; location: [7FFC7C0A0D30h, 7FFC7C0A0E35h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push r12                      ; PUSH(Push_r64) [R12]                                 encoding(2 bytes) = 41 54
0006h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0007h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0008h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0009h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
000ah sub rsp,60h                   ; SUB(Sub_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 ec 60
000eh vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0011h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0014h lea rdi,[rsp+28h]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 7c 24 28
0019h mov ecx,0Ch                   ; MOV(Mov_r32_imm32) [ECX,ch:imm32]                    encoding(5 bytes) = b9 0c 00 00 00
001eh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0020h rep stosd                     ; STOSD(Stosd_m32_EAX) [mem(32u),EAX]                  encoding(2 bytes) = f3 ab
0022h mov rcx,rsi                   ; MOV(Mov_r64_rm64) [RCX,RSI]                          encoding(3 bytes) = 48 8b ce
0025h mov rbx,rcx                   ; MOV(Mov_r64_rm64) [RBX,RCX]                          encoding(3 bytes) = 48 8b d9
0028h mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
002bh mov rdi,r8                    ; MOV(Mov_r64_rm64) [RDI,R8]                           encoding(3 bytes) = 49 8b f8
002eh mov ebp,89h                   ; MOV(Mov_r32_imm32) [EBP,89h:imm32]                   encoding(5 bytes) = bd 89 00 00 00
0033h mov r14d,1                    ; MOV(Mov_r32_imm32) [R14D,1h:imm32]                   encoding(6 bytes) = 41 be 01 00 00 00
0039h mov r15d,[rsi+8]              ; MOV(Mov_r32_rm32) [R15D,mem(32u,RSI:br,DS:sr)]       encoding(4 bytes) = 44 8b 7e 08
003dh mov r12d,[rdi+8]              ; MOV(Mov_r32_rm32) [R12D,mem(32u,RDI:br,DS:sr)]       encoding(4 bytes) = 44 8b 67 08
0041h cmp r15d,r12d                 ; CMP(Cmp_r32_rm32) [R15D,R12D]                        encoding(3 bytes) = 45 3b fc
0044h jne short 00abh               ; JNE(Jne_rel8_64) [ABh:jmp64]                         encoding(2 bytes) = 75 65
0046h movsxd rdx,r15d               ; MOVSXD(Movsxd_r64_rm32) [RDX,R15D]                   encoding(3 bytes) = 49 63 d7
0049h mov rcx,7FFC7C245DC8h         ; MOV(Mov_r64_imm64) [RCX,7ffc7c245dc8h:imm64]         encoding(10 bytes) = 48 b9 c8 5d 24 7c fc 7f 00 00
0053h call 7FFCDBBA24A0h            ; CALL(Call_rel32_64) [5FB01770h:jmp64]                encoding(5 bytes) = e8 18 17 b0 5f
0058h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
005ch mov edx,[rax+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 50 08
005fh mov r8,rbx                    ; MOV(Mov_r64_rm64) [R8,RBX]                           encoding(3 bytes) = 4c 8b c3
0062h vmovdqu xmm0,xmmword ptr [rsi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 06
0066h vmovdqu xmmword ptr [rsp+48h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 48
006ch vmovdqu xmm0,xmmword ptr [rdi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RDI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 07
0070h vmovdqu xmmword ptr [rsp+38h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 38
0076h lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
007bh mov [r9],rcx                  ; MOV(Mov_rm64_r64) [mem(64u,R9:br,DS:sr),RCX]         encoding(3 bytes) = 49 89 09
007eh mov [r9+8],edx                ; MOV(Mov_rm32_r32) [mem(32u,R9:br,DS:sr),EDX]         encoding(4 bytes) = 41 89 51 08
0082h mov rcx,r8                    ; MOV(Mov_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 8b c8
0085h lea rdx,[rsp+48h]             ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 54 24 48
008ah lea r8,[rsp+38h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 38
008fh lea r9,[rsp+28h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 28
0094h call 7FFC7C0A0450h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFF720h:jmp64]        encoding(5 bytes) = e8 87 f6 ff ff
0099h mov rax,rbx                   ; MOV(Mov_r64_rm64) [RAX,RBX]                          encoding(3 bytes) = 48 8b c3
009ch add rsp,60h                   ; ADD(Add_rm64_imm8) [RSP,60h:imm64]                   encoding(4 bytes) = 48 83 c4 60
00a0h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
00a1h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
00a2h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
00a3h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
00a4h pop r12                       ; POP(Pop_r64) [R12]                                   encoding(2 bytes) = 41 5c
00a6h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
00a8h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
00aah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
00abh mov ecx,413h                  ; MOV(Mov_r32_imm32) [ECX,413h:imm32]                  encoding(5 bytes) = b9 13 04 00 00
00b0h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
00bah call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC330F0h:jmp64]                encoding(5 bytes) = e8 31 30 c3 5f
00bfh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
00c2h mov ecx,0BAFh                 ; MOV(Mov_r32_imm32) [ECX,bafh:imm32]                  encoding(5 bytes) = b9 af 0b 00 00
00c7h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
00d1h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC330F0h:jmp64]                encoding(5 bytes) = e8 1a 30 c3 5f
00d6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00d9h lea r8,[rsp+58h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 58
00deh mov [r8],r14b                 ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),R14L]           encoding(3 bytes) = 45 88 30
00e1h mov [r8+4],ebp                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBP]         encoding(4 bytes) = 41 89 68 04
00e5h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00e8h mov ecx,r15d                  ; MOV(Mov_r32_rm32) [ECX,R15D]                         encoding(3 bytes) = 41 8b cf
00ebh mov edx,r12d                  ; MOV(Mov_r32_rm32) [EDX,R12D]                         encoding(3 bytes) = 41 8b d4
00eeh mov rax,[rsp+58h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 58
00f3h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00f8h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFED2E8h:jmp64]        encoding(5 bytes) = e8 eb d1 fe ff
00fdh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
0100h call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAE8B60h:jmp64]                encoding(5 bytes) = e8 5b 8a ae 5f
0105h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> gteqBytes => new byte[262]{0x41,0x57,0x41,0x56,0x41,0x54,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x60,0xC5,0xF8,0x77,0x48,0x8B,0xF1,0x48,0x8D,0x7C,0x24,0x28,0xB9,0x0C,0x00,0x00,0x00,0x33,0xC0,0xF3,0xAB,0x48,0x8B,0xCE,0x48,0x8B,0xD9,0x48,0x8B,0xF2,0x49,0x8B,0xF8,0xBD,0x89,0x00,0x00,0x00,0x41,0xBE,0x01,0x00,0x00,0x00,0x44,0x8B,0x7E,0x08,0x44,0x8B,0x67,0x08,0x45,0x3B,0xFC,0x75,0x65,0x49,0x63,0xD7,0x48,0xB9,0xC8,0x5D,0x24,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x18,0x17,0xB0,0x5F,0x48,0x8D,0x48,0x10,0x8B,0x50,0x08,0x4C,0x8B,0xC3,0xC5,0xFA,0x6F,0x06,0xC5,0xFA,0x7F,0x44,0x24,0x48,0xC5,0xFA,0x6F,0x07,0xC5,0xFA,0x7F,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0x49,0x89,0x09,0x41,0x89,0x51,0x08,0x49,0x8B,0xC8,0x48,0x8D,0x54,0x24,0x48,0x4C,0x8D,0x44,0x24,0x38,0x4C,0x8D,0x4C,0x24,0x28,0xE8,0x87,0xF6,0xFF,0xFF,0x48,0x8B,0xC3,0x48,0x83,0xC4,0x60,0x5B,0x5D,0x5E,0x5F,0x41,0x5C,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0x13,0x04,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x31,0x30,0xC3,0x5F,0x48,0x8B,0xF0,0xB9,0xAF,0x0B,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x1A,0x30,0xC3,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x58,0x45,0x88,0x30,0x41,0x89,0x68,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCF,0x41,0x8B,0xD4,0x48,0x8B,0x44,0x24,0x58,0x48,0x89,0x44,0x24,0x20,0xE8,0xEB,0xD1,0xFE,0xFF,0x48,0x8B,0xC8,0xE8,0x5B,0x8A,0xAE,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: byte idiv(byte lhs, byte rhs)
; location: [7FFC7C0A0E90h, 7FFC7C0A0EA1h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0008h movzx ecx,dl                  ; MOVZX(Movzx_r32_rm8) [ECX,DL]                        encoding(3 bytes) = 0f b6 ca
000bh cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
000ch idiv ecx                      ; IDIV(Idiv_rm32) [ECX]                                encoding(2 bytes) = f7 f9
000eh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> idivBytes => new byte[18]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC1,0x0F,0xB6,0xCA,0x99,0xF7,0xF9,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: short idiv(short lhs, short rhs)
; location: [7FFC7C0A0EC0h, 7FFC7C0A0ED4h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cx                  ; MOVSX(Movsx_r64_rm16) [RAX,CX]                       encoding(4 bytes) = 48 0f bf c1
0009h movsx rcx,dx                  ; MOVSX(Movsx_r64_rm16) [RCX,DX]                       encoding(4 bytes) = 48 0f bf ca
000dh cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
000eh idiv ecx                      ; IDIV(Idiv_rm32) [ECX]                                encoding(2 bytes) = f7 f9
0010h movsx rax,ax                  ; MOVSX(Movsx_r64_rm16) [RAX,AX]                       encoding(4 bytes) = 48 0f bf c0
0014h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> idivBytes => new byte[21]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBF,0xC1,0x48,0x0F,0xBF,0xCA,0x99,0xF7,0xF9,0x48,0x0F,0xBF,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ushort idiv(ushort lhs, ushort rhs)
; location: [7FFC7C0A0EF0h, 7FFC7C0A0F01h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cx                  ; MOVZX(Movzx_r32_rm16) [EAX,CX]                       encoding(3 bytes) = 0f b7 c1
0008h movzx ecx,dx                  ; MOVZX(Movzx_r32_rm16) [ECX,DX]                       encoding(3 bytes) = 0f b7 ca
000bh cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
000ch idiv ecx                      ; IDIV(Idiv_rm32) [ECX]                                encoding(2 bytes) = f7 f9
000eh movzx eax,ax                  ; MOVZX(Movzx_r32_rm16) [EAX,AX]                       encoding(3 bytes) = 0f b7 c0
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> idivBytes => new byte[18]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB7,0xC1,0x0F,0xB7,0xCA,0x99,0xF7,0xF9,0x0F,0xB7,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: int idiv(int lhs, int rhs)
; location: [7FFC7C0A0F20h, 7FFC7C0A0F2Eh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov r8d,edx                   ; MOV(Mov_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 8b c2
0008h mov eax,ecx                   ; MOV(Mov_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 8b c1
000ah cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
000bh idiv r8d                      ; IDIV(Idiv_rm32) [R8D]                                encoding(3 bytes) = 41 f7 f8
000eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> idivBytes => new byte[15]{0x0F,0x1F,0x44,0x00,0x00,0x44,0x8B,0xC2,0x8B,0xC1,0x99,0x41,0xF7,0xF8,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: uint idiv(uint lhs, uint rhs)
; location: [7FFC7C0A0F40h, 7FFC7C0A0F4Fh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov r8d,edx                   ; MOV(Mov_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 8b c2
0008h mov eax,ecx                   ; MOV(Mov_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 8b c1
000ah xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
000ch div r8d                       ; DIV(Div_rm32) [R8D]                                  encoding(3 bytes) = 41 f7 f0
000fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> idivBytes => new byte[16]{0x0F,0x1F,0x44,0x00,0x00,0x44,0x8B,0xC2,0x8B,0xC1,0x33,0xD2,0x41,0xF7,0xF0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: long idiv(long lhs, long rhs)
; location: [7FFC7C0A0F60h, 7FFC7C0A0F70h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov r8,rdx                    ; MOV(Mov_r64_rm64) [R8,RDX]                           encoding(3 bytes) = 4c 8b c2
0008h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000bh cqo                           ; CQO(Cqo)                                             encoding(2 bytes) = 48 99
000dh idiv r8                       ; IDIV(Idiv_rm64) [R8]                                 encoding(3 bytes) = 49 f7 f8
0010h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> idivBytes => new byte[17]{0x0F,0x1F,0x44,0x00,0x00,0x4C,0x8B,0xC2,0x48,0x8B,0xC1,0x48,0x99,0x49,0xF7,0xF8,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ulong idiv(ulong lhs, ulong rhs)
; location: [7FFC7C0A0F90h, 7FFC7C0A0FA0h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov r8,rdx                    ; MOV(Mov_r64_rm64) [R8,RDX]                           encoding(3 bytes) = 4c 8b c2
0008h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000bh xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
000dh div r8                        ; DIV(Div_rm64) [R8]                                   encoding(3 bytes) = 49 f7 f0
0010h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> idivBytes => new byte[17]{0x0F,0x1F,0x44,0x00,0x00,0x4C,0x8B,0xC2,0x48,0x8B,0xC1,0x33,0xD2,0x49,0xF7,0xF0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref sbyte idiv(ref sbyte lhs, in sbyte rhs)
; location: [7FFC7C0A0FC0h, 7FFC7C0A0FD6h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,byte ptr [rcx]      ; MOVSX(Movsx_r64_rm8) [RAX,mem(8i,RCX:br,DS:sr)]      encoding(4 bytes) = 48 0f be 01
0009h movsx r8,byte ptr [rdx]       ; MOVSX(Movsx_r64_rm8) [R8,mem(8i,RDX:br,DS:sr)]       encoding(4 bytes) = 4c 0f be 02
000dh cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
000eh idiv r8d                      ; IDIV(Idiv_rm32) [R8D]                                encoding(3 bytes) = 41 f7 f8
0011h mov [rcx],al                  ; MOV(Mov_rm8_r8) [mem(8u,RCX:br,DS:sr),AL]            encoding(2 bytes) = 88 01
0013h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0016h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> idivBytes => new byte[23]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBE,0x01,0x4C,0x0F,0xBE,0x02,0x99,0x41,0xF7,0xF8,0x88,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref byte idiv(ref byte lhs, in byte rhs)
; location: [7FFC7C0A0FF0h, 7FFC7C0A1005h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,byte ptr [rcx]      ; MOVZX(Movzx_r32_rm8) [EAX,mem(8u,RCX:br,DS:sr)]      encoding(3 bytes) = 0f b6 01
0008h movzx r8d,byte ptr [rdx]      ; MOVZX(Movzx_r32_rm8) [R8D,mem(8u,RDX:br,DS:sr)]      encoding(4 bytes) = 44 0f b6 02
000ch cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
000dh idiv r8d                      ; IDIV(Idiv_rm32) [R8D]                                encoding(3 bytes) = 41 f7 f8
0010h mov [rcx],al                  ; MOV(Mov_rm8_r8) [mem(8u,RCX:br,DS:sr),AL]            encoding(2 bytes) = 88 01
0012h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0015h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> idivBytes => new byte[22]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0x01,0x44,0x0F,0xB6,0x02,0x99,0x41,0xF7,0xF8,0x88,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref ushort idiv(ref ushort lhs, in ushort rhs)
; location: [7FFC7C0A1050h, 7FFC7C0A1066h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,word ptr [rcx]      ; MOVZX(Movzx_r32_rm16) [EAX,mem(16u,RCX:br,DS:sr)]    encoding(3 bytes) = 0f b7 01
0008h movzx r8d,word ptr [rdx]      ; MOVZX(Movzx_r32_rm16) [R8D,mem(16u,RDX:br,DS:sr)]    encoding(4 bytes) = 44 0f b7 02
000ch cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
000dh idiv r8d                      ; IDIV(Idiv_rm32) [R8D]                                encoding(3 bytes) = 41 f7 f8
0010h mov [rcx],ax                  ; MOV(Mov_rm16_r16) [mem(16u,RCX:br,DS:sr),AX]         encoding(3 bytes) = 66 89 01
0013h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0016h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> idivBytes => new byte[23]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB7,0x01,0x44,0x0F,0xB7,0x02,0x99,0x41,0xF7,0xF8,0x66,0x89,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref int idiv(ref int lhs, in int rhs)
; location: [7FFC7C0A1080h, 7FFC7C0A1093h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov r8,rdx                    ; MOV(Mov_r64_rm64) [R8,RDX]                           encoding(3 bytes) = 4c 8b c2
0008h mov eax,[rcx]                 ; MOV(Mov_r32_rm32) [EAX,mem(32u,RCX:br,DS:sr)]        encoding(2 bytes) = 8b 01
000ah cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
000bh idiv dword ptr [r8]           ; IDIV(Idiv_rm32) [mem(32i,R8:br,DS:sr)]               encoding(3 bytes) = 41 f7 38
000eh mov [rcx],eax                 ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EAX]        encoding(2 bytes) = 89 01
0010h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> idivBytes => new byte[20]{0x0F,0x1F,0x44,0x00,0x00,0x4C,0x8B,0xC2,0x8B,0x01,0x99,0x41,0xF7,0x38,0x89,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref uint idiv(ref uint lhs, in uint rhs)
; location: [7FFC7C0A10B0h, 7FFC7C0A10C4h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov r8,rdx                    ; MOV(Mov_r64_rm64) [R8,RDX]                           encoding(3 bytes) = 4c 8b c2
0008h mov eax,[rcx]                 ; MOV(Mov_r32_rm32) [EAX,mem(32u,RCX:br,DS:sr)]        encoding(2 bytes) = 8b 01
000ah xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
000ch div dword ptr [r8]            ; DIV(Div_rm32) [mem(32u,R8:br,DS:sr)]                 encoding(3 bytes) = 41 f7 30
000fh mov [rcx],eax                 ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EAX]        encoding(2 bytes) = 89 01
0011h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0014h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> idivBytes => new byte[21]{0x0F,0x1F,0x44,0x00,0x00,0x4C,0x8B,0xC2,0x8B,0x01,0x33,0xD2,0x41,0xF7,0x30,0x89,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref long idiv(ref long lhs, in long rhs)
; location: [7FFC7C0A10E0h, 7FFC7C0A10F6h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov r8,rdx                    ; MOV(Mov_r64_rm64) [R8,RDX]                           encoding(3 bytes) = 4c 8b c2
0008h mov rax,[rcx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 01
000bh cqo                           ; CQO(Cqo)                                             encoding(2 bytes) = 48 99
000dh idiv qword ptr [r8]           ; IDIV(Idiv_rm64) [mem(64i,R8:br,DS:sr)]               encoding(3 bytes) = 49 f7 38
0010h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0013h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0016h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> idivBytes => new byte[23]{0x0F,0x1F,0x44,0x00,0x00,0x4C,0x8B,0xC2,0x48,0x8B,0x01,0x48,0x99,0x49,0xF7,0x38,0x48,0x89,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<sbyte> idiv(ReadOnlySpan<sbyte> lhs, ReadOnlySpan<sbyte> rhs, Span<sbyte> dst)
; location: [7FFC7C0A1140h, 7FFC7C0A1226h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0005h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0006h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0007h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0008h sub rsp,38h                   ; SUB(Sub_rm64_imm8) [RSP,38h:imm64]                   encoding(4 bytes) = 48 83 ec 38
000ch mov r10,[r9]                  ; MOV(Mov_r64_rm64) [R10,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 4d 8b 11
000fh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
0013h mov r11,[r8]                  ; MOV(Mov_r64_rm64) [R11,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 4d 8b 18
0016h mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
001ah mov rsi,[rdx]                 ; MOV(Mov_r64_rm64) [RSI,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 32
001dh mov edi,[rdx+8]               ; MOV(Mov_r32_rm32) [EDI,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 7a 08
0020h mov ebx,6Fh                   ; MOV(Mov_r32_imm32) [EBX,6fh:imm32]                   encoding(5 bytes) = bb 6f 00 00 00
0025h mov ebp,1                     ; MOV(Mov_r32_imm32) [EBP,1h:imm32]                    encoding(5 bytes) = bd 01 00 00 00
002ah mov r14d,edi                  ; MOV(Mov_r32_rm32) [R14D,EDI]                         encoding(3 bytes) = 44 8b f7
002dh mov r15d,r8d                  ; MOV(Mov_r32_rm32) [R15D,R8D]                         encoding(3 bytes) = 45 8b f8
0030h cmp edi,r8d                   ; CMP(Cmp_r32_rm32) [EDI,R8D]                          encoding(3 bytes) = 41 3b f8
0033h jne short 0086h               ; JNE(Jne_rel8_64) [86h:jmp64]                         encoding(2 bytes) = 75 51
0035h xor r14d,r14d                 ; XOR(Xor_r32_rm32) [R14D,R14D]                        encoding(3 bytes) = 45 33 f6
0038h test edi,edi                  ; TEST(Test_rm32_r32) [EDI,EDI]                        encoding(2 bytes) = 85 ff
003ah jle short 006fh               ; JLE(Jle_rel8_64) [6Fh:jmp64]                         encoding(2 bytes) = 7e 33
003ch cmp r14d,r9d                  ; CMP(Cmp_r32_rm32) [R14D,R9D]                         encoding(3 bytes) = 45 3b f1
003fh jae near ptr 00e1h            ; JAE(Jae_rel32_64) [E1h:jmp64]                        encoding(6 bytes) = 0f 83 9c 00 00 00
0045h movsxd rax,r14d               ; MOVSXD(Movsxd_r64_rm32) [RAX,R14D]                   encoding(3 bytes) = 49 63 c6
0048h lea r15,[r10+rax]             ; LEA(Lea_r64_m) [R15,mem(Unknown,R10:br,DS:sr)]       encoding(4 bytes) = 4d 8d 3c 02
004ch movsx rdx,byte ptr [rsi+rax]  ; MOVSX(Movsx_r64_rm8) [RDX,mem(8i,RSI:br,DS:sr)]      encoding(5 bytes) = 48 0f be 14 06
0051h cmp r14d,r8d                  ; CMP(Cmp_r32_rm32) [R14D,R8D]                         encoding(3 bytes) = 45 3b f0
0054h jae near ptr 00e1h            ; JAE(Jae_rel32_64) [E1h:jmp64]                        encoding(6 bytes) = 0f 83 87 00 00 00
005ah movsx rbp,byte ptr [r11+rax]  ; MOVSX(Movsx_r64_rm8) [RBP,mem(8i,R11:br,DS:sr)]      encoding(5 bytes) = 49 0f be 2c 03
005fh mov eax,edx                   ; MOV(Mov_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 8b c2
0061h cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
0062h idiv ebp                      ; IDIV(Idiv_rm32) [EBP]                                encoding(2 bytes) = f7 fd
0064h mov [r15],al                  ; MOV(Mov_rm8_r8) [mem(8u,R15:br,DS:sr),AL]            encoding(3 bytes) = 41 88 07
0067h inc r14d                      ; INC(Inc_rm32) [R14D]                                 encoding(3 bytes) = 41 ff c6
006ah cmp r14d,edi                  ; CMP(Cmp_r32_rm32) [R14D,EDI]                         encoding(3 bytes) = 44 3b f7
006dh jl short 003ch                ; JL(Jl_rel8_64) [3Ch:jmp64]                           encoding(2 bytes) = 7c cd
006fh mov [rcx],r10                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R10]        encoding(3 bytes) = 4c 89 11
0072h mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0076h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0079h add rsp,38h                   ; ADD(Add_rm64_imm8) [RSP,38h:imm64]                   encoding(4 bytes) = 48 83 c4 38
007dh pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
007eh pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
007fh pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0080h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0081h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0083h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
0085h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0086h mov ecx,0C07h                 ; MOV(Mov_r32_imm32) [ECX,c07h:imm32]                  encoding(5 bytes) = b9 07 0c 00 00
008bh mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
0095h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC32CE0h:jmp64]                encoding(5 bytes) = e8 46 2c c3 5f
009ah mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
009dh mov ecx,0C11h                 ; MOV(Mov_r32_imm32) [ECX,c11h:imm32]                  encoding(5 bytes) = b9 11 0c 00 00
00a2h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
00ach call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC32CE0h:jmp64]                encoding(5 bytes) = e8 2f 2c c3 5f
00b1h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00b4h lea r8,[rsp+30h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 30
00b9h mov [r8],bpl                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),BPL]            encoding(3 bytes) = 41 88 28
00bch mov [r8+4],ebx                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBX]         encoding(4 bytes) = 41 89 58 04
00c0h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00c3h mov ecx,r14d                  ; MOV(Mov_r32_rm32) [ECX,R14D]                         encoding(3 bytes) = 41 8b ce
00c6h mov edx,r15d                  ; MOV(Mov_r32_rm32) [EDX,R15D]                         encoding(3 bytes) = 41 8b d7
00c9h mov rax,[rsp+30h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 30
00ceh mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00d3h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFECED8h:jmp64]        encoding(5 bytes) = e8 00 ce fe ff
00d8h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00dbh call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAE8750h:jmp64]                encoding(5 bytes) = e8 70 86 ae 5f
00e0h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00e1h call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC32500h:jmp64]                encoding(5 bytes) = e8 1a 24 c3 5f
00e6h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> idivBytes => new byte[231]{0x41,0x57,0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x38,0x4D,0x8B,0x11,0x45,0x8B,0x49,0x08,0x4D,0x8B,0x18,0x45,0x8B,0x40,0x08,0x48,0x8B,0x32,0x8B,0x7A,0x08,0xBB,0x6F,0x00,0x00,0x00,0xBD,0x01,0x00,0x00,0x00,0x44,0x8B,0xF7,0x45,0x8B,0xF8,0x41,0x3B,0xF8,0x75,0x51,0x45,0x33,0xF6,0x85,0xFF,0x7E,0x33,0x45,0x3B,0xF1,0x0F,0x83,0x9C,0x00,0x00,0x00,0x49,0x63,0xC6,0x4D,0x8D,0x3C,0x02,0x48,0x0F,0xBE,0x14,0x06,0x45,0x3B,0xF0,0x0F,0x83,0x87,0x00,0x00,0x00,0x49,0x0F,0xBE,0x2C,0x03,0x8B,0xC2,0x99,0xF7,0xFD,0x41,0x88,0x07,0x41,0xFF,0xC6,0x44,0x3B,0xF7,0x7C,0xCD,0x4C,0x89,0x11,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x38,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0x07,0x0C,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x46,0x2C,0xC3,0x5F,0x48,0x8B,0xF0,0xB9,0x11,0x0C,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x2F,0x2C,0xC3,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x30,0x41,0x88,0x28,0x41,0x89,0x58,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCE,0x41,0x8B,0xD7,0x48,0x8B,0x44,0x24,0x30,0x48,0x89,0x44,0x24,0x20,0xE8,0x00,0xCE,0xFE,0xFF,0x48,0x8B,0xC8,0xE8,0x70,0x86,0xAE,0x5F,0xCC,0xE8,0x1A,0x24,0xC3,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<ushort> idiv(ReadOnlySpan<ushort> lhs, ReadOnlySpan<ushort> rhs, Span<ushort> dst)
; location: [7FFC7C0A1470h, 7FFC7C0A1556h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0005h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0006h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0007h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0008h sub rsp,38h                   ; SUB(Sub_rm64_imm8) [RSP,38h:imm64]                   encoding(4 bytes) = 48 83 ec 38
000ch mov r10,[r9]                  ; MOV(Mov_r64_rm64) [R10,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 4d 8b 11
000fh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
0013h mov r11,[r8]                  ; MOV(Mov_r64_rm64) [R11,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 4d 8b 18
0016h mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
001ah mov rsi,[rdx]                 ; MOV(Mov_r64_rm64) [RSI,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 32
001dh mov edi,[rdx+8]               ; MOV(Mov_r32_rm32) [EDI,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 7a 08
0020h mov ebx,87h                   ; MOV(Mov_r32_imm32) [EBX,87h:imm32]                   encoding(5 bytes) = bb 87 00 00 00
0025h mov ebp,1                     ; MOV(Mov_r32_imm32) [EBP,1h:imm32]                    encoding(5 bytes) = bd 01 00 00 00
002ah mov r14d,edi                  ; MOV(Mov_r32_rm32) [R14D,EDI]                         encoding(3 bytes) = 44 8b f7
002dh mov r15d,r8d                  ; MOV(Mov_r32_rm32) [R15D,R8D]                         encoding(3 bytes) = 45 8b f8
0030h cmp edi,r8d                   ; CMP(Cmp_r32_rm32) [EDI,R8D]                          encoding(3 bytes) = 41 3b f8
0033h jne short 0086h               ; JNE(Jne_rel8_64) [86h:jmp64]                         encoding(2 bytes) = 75 51
0035h xor r14d,r14d                 ; XOR(Xor_r32_rm32) [R14D,R14D]                        encoding(3 bytes) = 45 33 f6
0038h test edi,edi                  ; TEST(Test_rm32_r32) [EDI,EDI]                        encoding(2 bytes) = 85 ff
003ah jle short 006fh               ; JLE(Jle_rel8_64) [6Fh:jmp64]                         encoding(2 bytes) = 7e 33
003ch cmp r14d,r9d                  ; CMP(Cmp_r32_rm32) [R14D,R9D]                         encoding(3 bytes) = 45 3b f1
003fh jae near ptr 00e1h            ; JAE(Jae_rel32_64) [E1h:jmp64]                        encoding(6 bytes) = 0f 83 9c 00 00 00
0045h movsxd rax,r14d               ; MOVSXD(Movsxd_r64_rm32) [RAX,R14D]                   encoding(3 bytes) = 49 63 c6
0048h lea r15,[r10+rax*2]           ; LEA(Lea_r64_m) [R15,mem(Unknown,R10:br,DS:sr)]       encoding(4 bytes) = 4d 8d 3c 42
004ch movzx edx,word ptr [rsi+rax*2]; MOVZX(Movzx_r32_rm16) [EDX,mem(16u,RSI:br,DS:sr)]    encoding(4 bytes) = 0f b7 14 46
0050h cmp r14d,r8d                  ; CMP(Cmp_r32_rm32) [R14D,R8D]                         encoding(3 bytes) = 45 3b f0
0053h jae near ptr 00e1h            ; JAE(Jae_rel32_64) [E1h:jmp64]                        encoding(6 bytes) = 0f 83 88 00 00 00
0059h movzx ebp,word ptr [r11+rax*2]; MOVZX(Movzx_r32_rm16) [EBP,mem(16u,R11:br,DS:sr)]    encoding(5 bytes) = 41 0f b7 2c 43
005eh mov eax,edx                   ; MOV(Mov_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 8b c2
0060h cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
0061h idiv ebp                      ; IDIV(Idiv_rm32) [EBP]                                encoding(2 bytes) = f7 fd
0063h mov [r15],ax                  ; MOV(Mov_rm16_r16) [mem(16u,R15:br,DS:sr),AX]         encoding(4 bytes) = 66 41 89 07
0067h inc r14d                      ; INC(Inc_rm32) [R14D]                                 encoding(3 bytes) = 41 ff c6
006ah cmp r14d,edi                  ; CMP(Cmp_r32_rm32) [R14D,EDI]                         encoding(3 bytes) = 44 3b f7
006dh jl short 003ch                ; JL(Jl_rel8_64) [3Ch:jmp64]                           encoding(2 bytes) = 7c cd
006fh mov [rcx],r10                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R10]        encoding(3 bytes) = 4c 89 11
0072h mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
0076h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0079h add rsp,38h                   ; ADD(Add_rm64_imm8) [RSP,38h:imm64]                   encoding(4 bytes) = 48 83 c4 38
007dh pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
007eh pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
007fh pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0080h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0081h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0083h pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
0085h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0086h mov ecx,0C07h                 ; MOV(Mov_r32_imm32) [ECX,c07h:imm32]                  encoding(5 bytes) = b9 07 0c 00 00
008bh mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
0095h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC329B0h:jmp64]                encoding(5 bytes) = e8 16 29 c3 5f
009ah mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
009dh mov ecx,0C11h                 ; MOV(Mov_r32_imm32) [ECX,c11h:imm32]                  encoding(5 bytes) = b9 11 0c 00 00
00a2h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
00ach call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC329B0h:jmp64]                encoding(5 bytes) = e8 ff 28 c3 5f
00b1h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00b4h lea r8,[rsp+30h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 30
00b9h mov [r8],bpl                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),BPL]            encoding(3 bytes) = 41 88 28
00bch mov [r8+4],ebx                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EBX]         encoding(4 bytes) = 41 89 58 04
00c0h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
00c3h mov ecx,r14d                  ; MOV(Mov_r32_rm32) [ECX,R14D]                         encoding(3 bytes) = 41 8b ce
00c6h mov edx,r15d                  ; MOV(Mov_r32_rm32) [EDX,R15D]                         encoding(3 bytes) = 41 8b d7
00c9h mov rax,[rsp+30h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 30
00ceh mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00d3h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFECBA8h:jmp64]        encoding(5 bytes) = e8 d0 ca fe ff
00d8h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00dbh call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAE8420h:jmp64]                encoding(5 bytes) = e8 40 83 ae 5f
00e0h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00e1h call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC321D0h:jmp64]                encoding(5 bytes) = e8 ea 20 c3 5f
00e6h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> idivBytes => new byte[231]{0x41,0x57,0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x38,0x4D,0x8B,0x11,0x45,0x8B,0x49,0x08,0x4D,0x8B,0x18,0x45,0x8B,0x40,0x08,0x48,0x8B,0x32,0x8B,0x7A,0x08,0xBB,0x87,0x00,0x00,0x00,0xBD,0x01,0x00,0x00,0x00,0x44,0x8B,0xF7,0x45,0x8B,0xF8,0x41,0x3B,0xF8,0x75,0x51,0x45,0x33,0xF6,0x85,0xFF,0x7E,0x33,0x45,0x3B,0xF1,0x0F,0x83,0x9C,0x00,0x00,0x00,0x49,0x63,0xC6,0x4D,0x8D,0x3C,0x42,0x0F,0xB7,0x14,0x46,0x45,0x3B,0xF0,0x0F,0x83,0x88,0x00,0x00,0x00,0x41,0x0F,0xB7,0x2C,0x43,0x8B,0xC2,0x99,0xF7,0xFD,0x66,0x41,0x89,0x07,0x41,0xFF,0xC6,0x44,0x3B,0xF7,0x7C,0xCD,0x4C,0x89,0x11,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x38,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0x41,0x5F,0xC3,0xB9,0x07,0x0C,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x16,0x29,0xC3,0x5F,0x48,0x8B,0xF0,0xB9,0x11,0x0C,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xFF,0x28,0xC3,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x30,0x41,0x88,0x28,0x41,0x89,0x58,0x04,0x4C,0x8B,0xC6,0x41,0x8B,0xCE,0x41,0x8B,0xD7,0x48,0x8B,0x44,0x24,0x30,0x48,0x89,0x44,0x24,0x20,0xE8,0xD0,0xCA,0xFE,0xFF,0x48,0x8B,0xC8,0xE8,0x40,0x83,0xAE,0x5F,0xCC,0xE8,0xEA,0x20,0xC3,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ulong ilog2(uint src)
; location: [7FFC7C0A2340h, 7FFC7C0A23E6h]
0000h push rax                      ; PUSH(Push_r64) [RAX]                                 encoding(1 byte ) = 50
0001h nop dword ptr [rax]           ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(4 bytes) = 0f 1f 40 00
0005h xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0007h mov [rsp],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(4 bytes) = 48 89 04 24
000bh mov [rsp],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(4 bytes) = 48 89 04 24
000fh mov eax,ecx                   ; MOV(Mov_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 8b c1
0011h mov rdx,100000000h            ; MOV(Mov_r64_imm64) [RDX,100000000h:imm64]            encoding(10 bytes) = 48 ba 00 00 00 00 01 00 00 00
001bh cmp rax,rdx                   ; CMP(Cmp_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 3b c2
001eh jb short 0030h                ; JB(Jb_rel8_64) [30h:jmp64]                           encoding(2 bytes) = 72 10
0020h shr rax,20h                   ; SHR(Shr_rm64_imm8) [RAX,20h:imm8]                    encoding(4 bytes) = 48 c1 e8 20
0024h mov rdx,[rsp]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RSP:br,SS:sr)]        encoding(4 bytes) = 48 8b 14 24
0028h or rdx,20h                    ; OR(Or_rm64_imm8) [RDX,20h:imm64]                     encoding(4 bytes) = 48 83 ca 20
002ch mov [rsp],rdx                 ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RDX]        encoding(4 bytes) = 48 89 14 24
0030h cmp rax,10000h                ; CMP(Cmp_RAX_imm32) [RAX,10000h:imm64]                encoding(6 bytes) = 48 3d 00 00 01 00
0036h jb short 0048h                ; JB(Jb_rel8_64) [48h:jmp64]                           encoding(2 bytes) = 72 10
0038h shr rax,10h                   ; SHR(Shr_rm64_imm8) [RAX,10h:imm8]                    encoding(4 bytes) = 48 c1 e8 10
003ch mov rdx,[rsp]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RSP:br,SS:sr)]        encoding(4 bytes) = 48 8b 14 24
0040h or rdx,10h                    ; OR(Or_rm64_imm8) [RDX,10h:imm64]                     encoding(4 bytes) = 48 83 ca 10
0044h mov [rsp],rdx                 ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RDX]        encoding(4 bytes) = 48 89 14 24
0048h cmp rax,100h                  ; CMP(Cmp_RAX_imm32) [RAX,100h:imm64]                  encoding(6 bytes) = 48 3d 00 01 00 00
004eh jb short 0060h                ; JB(Jb_rel8_64) [60h:jmp64]                           encoding(2 bytes) = 72 10
0050h shr rax,8                     ; SHR(Shr_rm64_imm8) [RAX,8h:imm8]                     encoding(4 bytes) = 48 c1 e8 08
0054h mov rdx,[rsp]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RSP:br,SS:sr)]        encoding(4 bytes) = 48 8b 14 24
0058h or rdx,8                      ; OR(Or_rm64_imm8) [RDX,8h:imm64]                      encoding(4 bytes) = 48 83 ca 08
005ch mov [rsp],rdx                 ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RDX]        encoding(4 bytes) = 48 89 14 24
0060h cmp rax,10h                   ; CMP(Cmp_rm64_imm8) [RAX,10h:imm64]                   encoding(4 bytes) = 48 83 f8 10
0064h jb short 0076h                ; JB(Jb_rel8_64) [76h:jmp64]                           encoding(2 bytes) = 72 10
0066h shr rax,4                     ; SHR(Shr_rm64_imm8) [RAX,4h:imm8]                     encoding(4 bytes) = 48 c1 e8 04
006ah mov rdx,[rsp]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RSP:br,SS:sr)]        encoding(4 bytes) = 48 8b 14 24
006eh or rdx,4                      ; OR(Or_rm64_imm8) [RDX,4h:imm64]                      encoding(4 bytes) = 48 83 ca 04
0072h mov [rsp],rdx                 ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RDX]        encoding(4 bytes) = 48 89 14 24
0076h cmp rax,4                     ; CMP(Cmp_rm64_imm8) [RAX,4h:imm64]                    encoding(4 bytes) = 48 83 f8 04
007ah jb short 008ch                ; JB(Jb_rel8_64) [8Ch:jmp64]                           encoding(2 bytes) = 72 10
007ch shr rax,2                     ; SHR(Shr_rm64_imm8) [RAX,2h:imm8]                     encoding(4 bytes) = 48 c1 e8 02
0080h mov rdx,[rsp]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RSP:br,SS:sr)]        encoding(4 bytes) = 48 8b 14 24
0084h or rdx,2                      ; OR(Or_rm64_imm8) [RDX,2h:imm64]                      encoding(4 bytes) = 48 83 ca 02
0088h mov [rsp],rdx                 ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RDX]        encoding(4 bytes) = 48 89 14 24
008ch cmp rax,2                     ; CMP(Cmp_rm64_imm8) [RAX,2h:imm64]                    encoding(4 bytes) = 48 83 f8 02
0090h jb short 009eh                ; JB(Jb_rel8_64) [9Eh:jmp64]                           encoding(2 bytes) = 72 0c
0092h mov rax,[rsp]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(4 bytes) = 48 8b 04 24
0096h or rax,1                      ; OR(Or_rm64_imm8) [RAX,1h:imm64]                      encoding(4 bytes) = 48 83 c8 01
009ah mov [rsp],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(4 bytes) = 48 89 04 24
009eh mov rax,[rsp]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(4 bytes) = 48 8b 04 24
00a2h add rsp,8                     ; ADD(Add_rm64_imm8) [RSP,8h:imm64]                    encoding(4 bytes) = 48 83 c4 08
00a6h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> ilog2Bytes => new byte[167]{0x50,0x0F,0x1F,0x40,0x00,0x33,0xC0,0x48,0x89,0x04,0x24,0x48,0x89,0x04,0x24,0x8B,0xC1,0x48,0xBA,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x48,0x3B,0xC2,0x72,0x10,0x48,0xC1,0xE8,0x20,0x48,0x8B,0x14,0x24,0x48,0x83,0xCA,0x20,0x48,0x89,0x14,0x24,0x48,0x3D,0x00,0x00,0x01,0x00,0x72,0x10,0x48,0xC1,0xE8,0x10,0x48,0x8B,0x14,0x24,0x48,0x83,0xCA,0x10,0x48,0x89,0x14,0x24,0x48,0x3D,0x00,0x01,0x00,0x00,0x72,0x10,0x48,0xC1,0xE8,0x08,0x48,0x8B,0x14,0x24,0x48,0x83,0xCA,0x08,0x48,0x89,0x14,0x24,0x48,0x83,0xF8,0x10,0x72,0x10,0x48,0xC1,0xE8,0x04,0x48,0x8B,0x14,0x24,0x48,0x83,0xCA,0x04,0x48,0x89,0x14,0x24,0x48,0x83,0xF8,0x04,0x72,0x10,0x48,0xC1,0xE8,0x02,0x48,0x8B,0x14,0x24,0x48,0x83,0xCA,0x02,0x48,0x89,0x14,0x24,0x48,0x83,0xF8,0x02,0x72,0x0C,0x48,0x8B,0x04,0x24,0x48,0x83,0xC8,0x01,0x48,0x89,0x04,0x24,0x48,0x8B,0x04,0x24,0x48,0x83,0xC4,0x08,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: sbyte inc(sbyte src)
; location: [7FFC7C0A2400h, 7FFC7C0A2413h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cl                  ; MOVSX(Movsx_r64_rm8) [RAX,CL]                        encoding(4 bytes) = 48 0f be c1
0009h inc eax                       ; INC(Inc_rm32) [EAX]                                  encoding(2 bytes) = ff c0
000bh movsx rax,al                  ; MOVSX(Movsx_r64_rm8) [RAX,AL]                        encoding(4 bytes) = 48 0f be c0
000fh movsx rax,al                  ; MOVSX(Movsx_r64_rm8) [RAX,AL]                        encoding(4 bytes) = 48 0f be c0
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> incBytes => new byte[20]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBE,0xC1,0xFF,0xC0,0x48,0x0F,0xBE,0xC0,0x48,0x0F,0xBE,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref sbyte inc(ref sbyte src)
; location: [7FFC7C0A2540h, 7FFC7C0A254Ah]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h inc byte ptr [rcx]            ; INC(Inc_rm8) [mem(8u,RCX:br,DS:sr)]                  encoding(2 bytes) = fe 01
0007h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> incBytes => new byte[11]{0x0F,0x1F,0x44,0x00,0x00,0xFE,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref ulong inc(ref ulong src)
; location: [7FFC7C0A2620h, 7FFC7C0A262Bh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h inc qword ptr [rcx]           ; INC(Inc_rm64) [mem(64u,RCX:br,DS:sr)]                encoding(3 bytes) = 48 ff 01
0008h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> incBytes => new byte[12]{0x0F,0x1F,0x44,0x00,0x00,0x48,0xFF,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<byte> inc(ReadOnlySpan<byte> src, Span<byte> dst)
; location: [7FFC7C0A2730h, 7FFC7C0A27FCh]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0014h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0017h mov esi,0B6h                  ; MOV(Mov_r32_imm32) [ESI,b6h:imm32]                   encoding(5 bytes) = be b6 00 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
0023h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0026h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0029h jne short 006eh               ; JNE(Jne_rel8_64) [6Eh:jmp64]                         encoding(2 bytes) = 75 43
002bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
002eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0030h jle short 0059h               ; JLE(Jle_rel8_64) [59h:jmp64]                         encoding(2 bytes) = 7e 27
0032h cmp r10d,r8d                  ; CMP(Cmp_r32_rm32) [R10D,R8D]                         encoding(3 bytes) = 45 3b d0
0035h jae near ptr 00c7h            ; JAE(Jae_rel32_64) [C7h:jmp64]                        encoding(6 bytes) = 0f 83 8c 00 00 00
003bh movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
003eh lea rbx,[rax+r11]             ; LEA(Lea_r64_m) [RBX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 4a 8d 1c 18
0042h movzx r11d,byte ptr [r9+r11]  ; MOVZX(Movzx_r32_rm8) [R11D,mem(8u,R9:br,DS:sr)]      encoding(5 bytes) = 47 0f b6 1c 19
0047h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
004ah movzx r11d,r11b               ; MOVZX(Movzx_r32_rm8) [R11D,R11L]                     encoding(4 bytes) = 45 0f b6 db
004eh mov [rbx],r11b                ; MOV(Mov_rm8_r8) [mem(8u,RBX:br,DS:sr),R11L]          encoding(3 bytes) = 44 88 1b
0051h inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
0054h cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
0057h jl short 0032h                ; JL(Jl_rel8_64) [32h:jmp64]                           encoding(2 bytes) = 7c d9
0059h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
005ch mov [rcx+8],r8d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R8D]        encoding(4 bytes) = 44 89 41 08
0060h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0063h add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0067h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0068h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0069h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
006ah pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
006bh pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
006dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
006eh mov ecx,473h                  ; MOV(Mov_r32_imm32) [ECX,473h:imm32]                  encoding(5 bytes) = b9 73 04 00 00
0073h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
007dh call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC316F0h:jmp64]                encoding(5 bytes) = e8 6e 16 c3 5f
0082h mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0085h mov ecx,0C69h                 ; MOV(Mov_r32_imm32) [ECX,c69h:imm32]                  encoding(5 bytes) = b9 69 0c 00 00
008ah mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
0094h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC316F0h:jmp64]                encoding(5 bytes) = e8 57 16 c3 5f
0099h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
009ch lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
00a1h mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00a4h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00a8h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00abh mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00adh mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00afh mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00b4h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b9h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFEB8E8h:jmp64]        encoding(5 bytes) = e8 2a b8 fe ff
00beh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00c1h call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAE7160h:jmp64]                encoding(5 bytes) = e8 9a 70 ae 5f
00c6h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00c7h call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC30F10h:jmp64]                encoding(5 bytes) = e8 44 0e c3 5f
00cch int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> incBytes => new byte[205]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x00,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0xBE,0xB6,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x43,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x27,0x45,0x3B,0xD0,0x0F,0x83,0x8C,0x00,0x00,0x00,0x4D,0x63,0xDA,0x4A,0x8D,0x1C,0x18,0x47,0x0F,0xB6,0x1C,0x19,0x41,0xFF,0xC3,0x45,0x0F,0xB6,0xDB,0x44,0x88,0x1B,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xD9,0x48,0x89,0x01,0x44,0x89,0x41,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x73,0x04,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x6E,0x16,0xC3,0x5F,0x4C,0x8B,0xF0,0xB9,0x69,0x0C,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x57,0x16,0xC3,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x2A,0xB8,0xFE,0xFF,0x48,0x8B,0xC8,0xE8,0x9A,0x70,0xAE,0x5F,0xCC,0xE8,0x44,0x0E,0xC3,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<short> inc(ReadOnlySpan<short> src, Span<short> dst)
; location: [7FFC7C0A2820h, 7FFC7C0A28EDh]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0014h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0017h mov esi,0BEh                  ; MOV(Mov_r32_imm32) [ESI,beh:imm32]                   encoding(5 bytes) = be be 00 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
0023h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0026h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0029h jne short 006fh               ; JNE(Jne_rel8_64) [6Fh:jmp64]                         encoding(2 bytes) = 75 44
002bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
002eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0030h jle short 005ah               ; JLE(Jle_rel8_64) [5Ah:jmp64]                         encoding(2 bytes) = 7e 28
0032h cmp r10d,r8d                  ; CMP(Cmp_r32_rm32) [R10D,R8D]                         encoding(3 bytes) = 45 3b d0
0035h jae near ptr 00c8h            ; JAE(Jae_rel32_64) [C8h:jmp64]                        encoding(6 bytes) = 0f 83 8d 00 00 00
003bh movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
003eh lea rbx,[rax+r11*2]           ; LEA(Lea_r64_m) [RBX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 4a 8d 1c 58
0042h movsx r11,word ptr [r9+r11*2] ; MOVSX(Movsx_r64_rm16) [R11,mem(16i,R9:br,DS:sr)]     encoding(5 bytes) = 4f 0f bf 1c 59
0047h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
004ah movsx r11,r11w                ; MOVSX(Movsx_r64_rm16) [R11,R11W]                     encoding(4 bytes) = 4d 0f bf db
004eh mov [rbx],r11w                ; MOV(Mov_rm16_r16) [mem(16u,RBX:br,DS:sr),R11W]       encoding(4 bytes) = 66 44 89 1b
0052h inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
0055h cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
0058h jl short 0032h                ; JL(Jl_rel8_64) [32h:jmp64]                           encoding(2 bytes) = 7c d8
005ah mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
005dh mov [rcx+8],r8d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R8D]        encoding(4 bytes) = 44 89 41 08
0061h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0064h add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0068h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0069h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
006ah pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
006bh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
006ch pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
006eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
006fh mov ecx,473h                  ; MOV(Mov_r32_imm32) [ECX,473h:imm32]                  encoding(5 bytes) = b9 73 04 00 00
0074h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
007eh call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC31600h:jmp64]                encoding(5 bytes) = e8 7d 15 c3 5f
0083h mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0086h mov ecx,0C69h                 ; MOV(Mov_r32_imm32) [ECX,c69h:imm32]                  encoding(5 bytes) = b9 69 0c 00 00
008bh mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
0095h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC31600h:jmp64]                encoding(5 bytes) = e8 66 15 c3 5f
009ah mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
009dh lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
00a2h mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00a5h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00a9h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00ach mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00aeh mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00b0h mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00b5h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00bah call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFEB7F8h:jmp64]        encoding(5 bytes) = e8 39 b7 fe ff
00bfh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00c2h call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAE7070h:jmp64]                encoding(5 bytes) = e8 a9 6f ae 5f
00c7h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00c8h call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC30E20h:jmp64]                encoding(5 bytes) = e8 53 0d c3 5f
00cdh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> incBytes => new byte[206]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x00,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0xBE,0xBE,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x44,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x28,0x45,0x3B,0xD0,0x0F,0x83,0x8D,0x00,0x00,0x00,0x4D,0x63,0xDA,0x4A,0x8D,0x1C,0x58,0x4F,0x0F,0xBF,0x1C,0x59,0x41,0xFF,0xC3,0x4D,0x0F,0xBF,0xDB,0x66,0x44,0x89,0x1B,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xD8,0x48,0x89,0x01,0x44,0x89,0x41,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x73,0x04,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x7D,0x15,0xC3,0x5F,0x4C,0x8B,0xF0,0xB9,0x69,0x0C,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x66,0x15,0xC3,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x39,0xB7,0xFE,0xFF,0x48,0x8B,0xC8,0xE8,0xA9,0x6F,0xAE,0x5F,0xCC,0xE8,0x53,0x0D,0xC3,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<int> inc(ReadOnlySpan<int> src, Span<int> dst)
; location: [7FFC7C0A2A00h, 7FFC7C0A2AC7h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0014h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0017h mov esi,0CEh                  ; MOV(Mov_r32_imm32) [ESI,ceh:imm32]                   encoding(5 bytes) = be ce 00 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
0023h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0026h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0029h jne short 0069h               ; JNE(Jne_rel8_64) [69h:jmp64]                         encoding(2 bytes) = 75 3e
002bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
002eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0030h jle short 0054h               ; JLE(Jle_rel8_64) [54h:jmp64]                         encoding(2 bytes) = 7e 22
0032h cmp r10d,r8d                  ; CMP(Cmp_r32_rm32) [R10D,R8D]                         encoding(3 bytes) = 45 3b d0
0035h jae near ptr 00c2h            ; JAE(Jae_rel32_64) [C2h:jmp64]                        encoding(6 bytes) = 0f 83 87 00 00 00
003bh movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
003eh lea rbx,[rax+r11*4]           ; LEA(Lea_r64_m) [RBX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 4a 8d 1c 98
0042h mov r11d,[r9+r11*4]           ; MOV(Mov_r32_rm32) [R11D,mem(32u,R9:br,DS:sr)]        encoding(4 bytes) = 47 8b 1c 99
0046h inc r11d                      ; INC(Inc_rm32) [R11D]                                 encoding(3 bytes) = 41 ff c3
0049h mov [rbx],r11d                ; MOV(Mov_rm32_r32) [mem(32u,RBX:br,DS:sr),R11D]       encoding(3 bytes) = 44 89 1b
004ch inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
004fh cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
0052h jl short 0032h                ; JL(Jl_rel8_64) [32h:jmp64]                           encoding(2 bytes) = 7c de
0054h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0057h mov [rcx+8],r8d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R8D]        encoding(4 bytes) = 44 89 41 08
005bh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
005eh add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0062h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0063h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0064h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0065h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0066h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0068h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0069h mov ecx,473h                  ; MOV(Mov_r32_imm32) [ECX,473h:imm32]                  encoding(5 bytes) = b9 73 04 00 00
006eh mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
0078h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC31420h:jmp64]                encoding(5 bytes) = e8 a3 13 c3 5f
007dh mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0080h mov ecx,0C69h                 ; MOV(Mov_r32_imm32) [ECX,c69h:imm32]                  encoding(5 bytes) = b9 69 0c 00 00
0085h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
008fh call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC31420h:jmp64]                encoding(5 bytes) = e8 8c 13 c3 5f
0094h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
0097h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
009ch mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
009fh mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00a3h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00a6h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00a8h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00aah mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00afh mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b4h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFEB618h:jmp64]        encoding(5 bytes) = e8 5f b5 fe ff
00b9h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00bch call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAE6E90h:jmp64]                encoding(5 bytes) = e8 cf 6d ae 5f
00c1h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00c2h call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC30C40h:jmp64]                encoding(5 bytes) = e8 79 0b c3 5f
00c7h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> incBytes => new byte[200]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x00,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0xBE,0xCE,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x3E,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x22,0x45,0x3B,0xD0,0x0F,0x83,0x87,0x00,0x00,0x00,0x4D,0x63,0xDA,0x4A,0x8D,0x1C,0x98,0x47,0x8B,0x1C,0x99,0x41,0xFF,0xC3,0x44,0x89,0x1B,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xDE,0x48,0x89,0x01,0x44,0x89,0x41,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x73,0x04,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xA3,0x13,0xC3,0x5F,0x4C,0x8B,0xF0,0xB9,0x69,0x0C,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x8C,0x13,0xC3,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x5F,0xB5,0xFE,0xFF,0x48,0x8B,0xC8,0xE8,0xCF,0x6D,0xAE,0x5F,0xCC,0xE8,0x79,0x0B,0xC3,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<long> inc(ReadOnlySpan<long> src, Span<long> dst)
; location: [7FFC7C0A2BE0h, 7FFC7C0A2CA7h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0014h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0017h mov esi,0DEh                  ; MOV(Mov_r32_imm32) [ESI,deh:imm32]                   encoding(5 bytes) = be de 00 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
0023h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0026h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0029h jne short 0069h               ; JNE(Jne_rel8_64) [69h:jmp64]                         encoding(2 bytes) = 75 3e
002bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
002eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0030h jle short 0054h               ; JLE(Jle_rel8_64) [54h:jmp64]                         encoding(2 bytes) = 7e 22
0032h cmp r10d,r8d                  ; CMP(Cmp_r32_rm32) [R10D,R8D]                         encoding(3 bytes) = 45 3b d0
0035h jae near ptr 00c2h            ; JAE(Jae_rel32_64) [C2h:jmp64]                        encoding(6 bytes) = 0f 83 87 00 00 00
003bh movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
003eh lea rbx,[rax+r11*8]           ; LEA(Lea_r64_m) [RBX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 4a 8d 1c d8
0042h mov r11,[r9+r11*8]            ; MOV(Mov_r64_rm64) [R11,mem(64u,R9:br,DS:sr)]         encoding(4 bytes) = 4f 8b 1c d9
0046h inc r11                       ; INC(Inc_rm64) [R11]                                  encoding(3 bytes) = 49 ff c3
0049h mov [rbx],r11                 ; MOV(Mov_rm64_r64) [mem(64u,RBX:br,DS:sr),R11]        encoding(3 bytes) = 4c 89 1b
004ch inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
004fh cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
0052h jl short 0032h                ; JL(Jl_rel8_64) [32h:jmp64]                           encoding(2 bytes) = 7c de
0054h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0057h mov [rcx+8],r8d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R8D]        encoding(4 bytes) = 44 89 41 08
005bh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
005eh add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0062h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0063h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0064h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0065h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0066h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0068h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0069h mov ecx,473h                  ; MOV(Mov_r32_imm32) [ECX,473h:imm32]                  encoding(5 bytes) = b9 73 04 00 00
006eh mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
0078h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC31240h:jmp64]                encoding(5 bytes) = e8 c3 11 c3 5f
007dh mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0080h mov ecx,0C69h                 ; MOV(Mov_r32_imm32) [ECX,c69h:imm32]                  encoding(5 bytes) = b9 69 0c 00 00
0085h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
008fh call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC31240h:jmp64]                encoding(5 bytes) = e8 ac 11 c3 5f
0094h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
0097h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
009ch mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
009fh mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00a3h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00a6h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00a8h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00aah mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00afh mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b4h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFEB438h:jmp64]        encoding(5 bytes) = e8 7f b3 fe ff
00b9h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00bch call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAE6CB0h:jmp64]                encoding(5 bytes) = e8 ef 6b ae 5f
00c1h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00c2h call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC30A60h:jmp64]                encoding(5 bytes) = e8 99 09 c3 5f
00c7h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> incBytes => new byte[200]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x00,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0xBE,0xDE,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x3E,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x22,0x45,0x3B,0xD0,0x0F,0x83,0x87,0x00,0x00,0x00,0x4D,0x63,0xDA,0x4A,0x8D,0x1C,0xD8,0x4F,0x8B,0x1C,0xD9,0x49,0xFF,0xC3,0x4C,0x89,0x1B,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xDE,0x48,0x89,0x01,0x44,0x89,0x41,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x73,0x04,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xC3,0x11,0xC3,0x5F,0x4C,0x8B,0xF0,0xB9,0x69,0x0C,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xAC,0x11,0xC3,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x7F,0xB3,0xFE,0xFF,0x48,0x8B,0xC8,0xE8,0xEF,0x6B,0xAE,0x5F,0xCC,0xE8,0x99,0x09,0xC3,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<ulong> inc(ReadOnlySpan<ulong> src, Span<ulong> dst)
; location: [7FFC7C0A2CD0h, 7FFC7C0A2D97h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0014h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0017h mov esi,0E6h                  ; MOV(Mov_r32_imm32) [ESI,e6h:imm32]                   encoding(5 bytes) = be e6 00 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
0023h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0026h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0029h jne short 0069h               ; JNE(Jne_rel8_64) [69h:jmp64]                         encoding(2 bytes) = 75 3e
002bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
002eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0030h jle short 0054h               ; JLE(Jle_rel8_64) [54h:jmp64]                         encoding(2 bytes) = 7e 22
0032h cmp r10d,r8d                  ; CMP(Cmp_r32_rm32) [R10D,R8D]                         encoding(3 bytes) = 45 3b d0
0035h jae near ptr 00c2h            ; JAE(Jae_rel32_64) [C2h:jmp64]                        encoding(6 bytes) = 0f 83 87 00 00 00
003bh movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
003eh lea rbx,[rax+r11*8]           ; LEA(Lea_r64_m) [RBX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 4a 8d 1c d8
0042h mov r11,[r9+r11*8]            ; MOV(Mov_r64_rm64) [R11,mem(64u,R9:br,DS:sr)]         encoding(4 bytes) = 4f 8b 1c d9
0046h inc r11                       ; INC(Inc_rm64) [R11]                                  encoding(3 bytes) = 49 ff c3
0049h mov [rbx],r11                 ; MOV(Mov_rm64_r64) [mem(64u,RBX:br,DS:sr),R11]        encoding(3 bytes) = 4c 89 1b
004ch inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
004fh cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
0052h jl short 0032h                ; JL(Jl_rel8_64) [32h:jmp64]                           encoding(2 bytes) = 7c de
0054h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0057h mov [rcx+8],r8d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R8D]        encoding(4 bytes) = 44 89 41 08
005bh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
005eh add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0062h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0063h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0064h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0065h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0066h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0068h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0069h mov ecx,473h                  ; MOV(Mov_r32_imm32) [ECX,473h:imm32]                  encoding(5 bytes) = b9 73 04 00 00
006eh mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
0078h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC31150h:jmp64]                encoding(5 bytes) = e8 d3 10 c3 5f
007dh mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0080h mov ecx,0C69h                 ; MOV(Mov_r32_imm32) [ECX,c69h:imm32]                  encoding(5 bytes) = b9 69 0c 00 00
0085h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
008fh call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC31150h:jmp64]                encoding(5 bytes) = e8 bc 10 c3 5f
0094h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
0097h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
009ch mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
009fh mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00a3h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00a6h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00a8h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00aah mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00afh mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b4h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFEB348h:jmp64]        encoding(5 bytes) = e8 8f b2 fe ff
00b9h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00bch call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAE6BC0h:jmp64]                encoding(5 bytes) = e8 ff 6a ae 5f
00c1h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00c2h call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC30970h:jmp64]                encoding(5 bytes) = e8 a9 08 c3 5f
00c7h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> incBytes => new byte[200]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x00,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0xBE,0xE6,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x3E,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x22,0x45,0x3B,0xD0,0x0F,0x83,0x87,0x00,0x00,0x00,0x4D,0x63,0xDA,0x4A,0x8D,0x1C,0xD8,0x4F,0x8B,0x1C,0xD9,0x49,0xFF,0xC3,0x4C,0x89,0x1B,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xDE,0x48,0x89,0x01,0x44,0x89,0x41,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x73,0x04,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xD3,0x10,0xC3,0x5F,0x4C,0x8B,0xF0,0xB9,0x69,0x0C,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xBC,0x10,0xC3,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x8F,0xB2,0xFE,0xFF,0x48,0x8B,0xC8,0xE8,0xFF,0x6A,0xAE,0x5F,0xCC,0xE8,0xA9,0x08,0xC3,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<sbyte> inc(Span<sbyte> src)
; location: [7FFC7C0A2DC0h, 7FFC7C0A2DECh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,[rdx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 02
0008h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
000bh xor r8d,r8d                   ; XOR(Xor_r32_rm32) [R8D,R8D]                          encoding(3 bytes) = 45 33 c0
000eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0010h jle short 0023h               ; JLE(Jle_rel8_64) [23h:jmp64]                         encoding(2 bytes) = 7e 11
0012h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0015h add r9,rax                    ; ADD(Add_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 03 c8
0018h inc byte ptr [r9]             ; INC(Inc_rm8) [mem(8u,R9:br,DS:sr)]                   encoding(3 bytes) = 41 fe 01
001bh inc r8d                       ; INC(Inc_rm32) [R8D]                                  encoding(3 bytes) = 41 ff c0
001eh cmp r8d,edx                   ; CMP(Cmp_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 3b c2
0021h jl short 0012h                ; JL(Jl_rel8_64) [12h:jmp64]                           encoding(2 bytes) = 7c ef
0023h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0026h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
0029h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
002ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> incBytes => new byte[45]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x02,0x8B,0x52,0x08,0x45,0x33,0xC0,0x85,0xD2,0x7E,0x11,0x4D,0x63,0xC8,0x4C,0x03,0xC8,0x41,0xFE,0x01,0x41,0xFF,0xC0,0x44,0x3B,0xC2,0x7C,0xEF,0x48,0x89,0x01,0x89,0x51,0x08,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<byte> inc(Span<byte> src)
; location: [7FFC7C0A2E00h, 7FFC7C0A2E2Ch]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,[rdx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 02
0008h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
000bh xor r8d,r8d                   ; XOR(Xor_r32_rm32) [R8D,R8D]                          encoding(3 bytes) = 45 33 c0
000eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0010h jle short 0023h               ; JLE(Jle_rel8_64) [23h:jmp64]                         encoding(2 bytes) = 7e 11
0012h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0015h add r9,rax                    ; ADD(Add_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 03 c8
0018h inc byte ptr [r9]             ; INC(Inc_rm8) [mem(8u,R9:br,DS:sr)]                   encoding(3 bytes) = 41 fe 01
001bh inc r8d                       ; INC(Inc_rm32) [R8D]                                  encoding(3 bytes) = 41 ff c0
001eh cmp r8d,edx                   ; CMP(Cmp_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 3b c2
0021h jl short 0012h                ; JL(Jl_rel8_64) [12h:jmp64]                           encoding(2 bytes) = 7c ef
0023h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0026h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
0029h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
002ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> incBytes => new byte[45]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x02,0x8B,0x52,0x08,0x45,0x33,0xC0,0x85,0xD2,0x7E,0x11,0x4D,0x63,0xC8,0x4C,0x03,0xC8,0x41,0xFE,0x01,0x41,0xFF,0xC0,0x44,0x3B,0xC2,0x7C,0xEF,0x48,0x89,0x01,0x89,0x51,0x08,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<short> inc(Span<short> src)
; location: [7FFC7C0A2E40h, 7FFC7C0A2E6Eh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,[rdx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 02
0008h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
000bh xor r8d,r8d                   ; XOR(Xor_r32_rm32) [R8D,R8D]                          encoding(3 bytes) = 45 33 c0
000eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0010h jle short 0025h               ; JLE(Jle_rel8_64) [25h:jmp64]                         encoding(2 bytes) = 7e 13
0012h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0015h lea r9,[rax+r9*2]             ; LEA(Lea_r64_m) [R9,mem(Unknown,RAX:br,DS:sr)]        encoding(4 bytes) = 4e 8d 0c 48
0019h inc word ptr [r9]             ; INC(Inc_rm16) [mem(16u,R9:br,DS:sr)]                 encoding(4 bytes) = 66 41 ff 01
001dh inc r8d                       ; INC(Inc_rm32) [R8D]                                  encoding(3 bytes) = 41 ff c0
0020h cmp r8d,edx                   ; CMP(Cmp_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 3b c2
0023h jl short 0012h                ; JL(Jl_rel8_64) [12h:jmp64]                           encoding(2 bytes) = 7c ed
0025h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0028h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
002bh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
002eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> incBytes => new byte[47]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x02,0x8B,0x52,0x08,0x45,0x33,0xC0,0x85,0xD2,0x7E,0x13,0x4D,0x63,0xC8,0x4E,0x8D,0x0C,0x48,0x66,0x41,0xFF,0x01,0x41,0xFF,0xC0,0x44,0x3B,0xC2,0x7C,0xED,0x48,0x89,0x01,0x89,0x51,0x08,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<ulong> inc(Span<ulong> src)
; location: [7FFC7C0A2F80h, 7FFC7C0A2FADh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,[rdx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 02
0008h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
000bh xor r8d,r8d                   ; XOR(Xor_r32_rm32) [R8D,R8D]                          encoding(3 bytes) = 45 33 c0
000eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0010h jle short 0024h               ; JLE(Jle_rel8_64) [24h:jmp64]                         encoding(2 bytes) = 7e 12
0012h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0015h lea r9,[rax+r9*8]             ; LEA(Lea_r64_m) [R9,mem(Unknown,RAX:br,DS:sr)]        encoding(4 bytes) = 4e 8d 0c c8
0019h inc qword ptr [r9]            ; INC(Inc_rm64) [mem(64u,R9:br,DS:sr)]                 encoding(3 bytes) = 49 ff 01
001ch inc r8d                       ; INC(Inc_rm32) [R8D]                                  encoding(3 bytes) = 41 ff c0
001fh cmp r8d,edx                   ; CMP(Cmp_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 3b c2
0022h jl short 0012h                ; JL(Jl_rel8_64) [12h:jmp64]                           encoding(2 bytes) = 7c ee
0024h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0027h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
002ah mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
002dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> incBytes => new byte[46]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x02,0x8B,0x52,0x08,0x45,0x33,0xC0,0x85,0xD2,0x7E,0x12,0x4D,0x63,0xC8,0x4E,0x8D,0x0C,0xC8,0x49,0xFF,0x01,0x41,0xFF,0xC0,0x44,0x3B,0xC2,0x7C,0xEE,0x48,0x89,0x01,0x89,0x51,0x08,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: sbyte ipow(sbyte b, uint exp)
; location: [7FFC7C0A2FC0h, 7FFC7C0A2FFCh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0007h jne short 000fh               ; JNE(Jne_rel8_64) [Fh:jmp64]                          encoding(2 bytes) = 75 06
0009h mov eax,1                     ; MOV(Mov_r32_imm32) [EAX,1h:imm32]                    encoding(5 bytes) = b8 01 00 00 00
000eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
000fh mov eax,1                     ; MOV(Mov_r32_imm32) [EAX,1h:imm32]                    encoding(5 bytes) = b8 01 00 00 00
0014h test dl,1                     ; TEST(Test_rm8_imm8) [DL,1h:imm8]                     encoding(3 bytes) = f6 c2 01
0017h je short 0025h                ; JE(Je_rel8_64) [25h:jmp64]                           encoding(2 bytes) = 74 0c
0019h movsx r8,cl                   ; MOVSX(Movsx_r64_rm8) [R8,CL]                         encoding(4 bytes) = 4c 0f be c1
001dh imul eax,r8d                  ; IMUL(Imul_r32_rm32) [EAX,R8D]                        encoding(4 bytes) = 41 0f af c0
0021h movsx rax,al                  ; MOVSX(Movsx_r64_rm8) [RAX,AL]                        encoding(4 bytes) = 48 0f be c0
0025h shr edx,1                     ; SHR(Shr_rm32_1) [EDX,1h:imm8]                        encoding(2 bytes) = d1 ea
0027h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0029h je short 003ch                ; JE(Je_rel8_64) [3Ch:jmp64]                           encoding(2 bytes) = 74 11
002bh movsx r8,cl                   ; MOVSX(Movsx_r64_rm8) [R8,CL]                         encoding(4 bytes) = 4c 0f be c1
002fh mov ecx,r8d                   ; MOV(Mov_r32_rm32) [ECX,R8D]                          encoding(3 bytes) = 41 8b c8
0032h imul ecx,r8d                  ; IMUL(Imul_r32_rm32) [ECX,R8D]                        encoding(4 bytes) = 41 0f af c8
0036h movsx rcx,cl                  ; MOVSX(Movsx_r64_rm8) [RCX,CL]                        encoding(4 bytes) = 48 0f be c9
003ah jmp short 0014h               ; JMP(Jmp_rel8_64) [14h:jmp64]                         encoding(2 bytes) = eb d8
003ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> ipowBytes => new byte[61]{0x0F,0x1F,0x44,0x00,0x00,0x85,0xD2,0x75,0x06,0xB8,0x01,0x00,0x00,0x00,0xC3,0xB8,0x01,0x00,0x00,0x00,0xF6,0xC2,0x01,0x74,0x0C,0x4C,0x0F,0xBE,0xC1,0x41,0x0F,0xAF,0xC0,0x48,0x0F,0xBE,0xC0,0xD1,0xEA,0x85,0xD2,0x74,0x11,0x4C,0x0F,0xBE,0xC1,0x41,0x8B,0xC8,0x41,0x0F,0xAF,0xC8,0x48,0x0F,0xBE,0xC9,0xEB,0xD8,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: uint avgz(uint lhs, uint rhs)
; location: [7FFC7C0A3100h, 7FFC7C0A310Fh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov eax,ecx                   ; MOV(Mov_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 8b c1
0007h and eax,edx                   ; AND(And_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 23 c2
0009h xor edx,ecx                   ; XOR(Xor_r32_rm32) [EDX,ECX]                          encoding(2 bytes) = 33 d1
000bh shr edx,1                     ; SHR(Shr_rm32_1) [EDX,1h:imm8]                        encoding(2 bytes) = d1 ea
000dh add eax,edx                   ; ADD(Add_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 03 c2
000fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> avgzBytes => new byte[16]{0x0F,0x1F,0x44,0x00,0x00,0x8B,0xC1,0x23,0xC2,0x33,0xD1,0xD1,0xEA,0x03,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ulong avgz(ulong lhs, ulong rhs)
; location: [7FFC7C0A3120h, 7FFC7C0A3134h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0008h and rax,rdx                   ; AND(And_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 23 c2
000bh xor rdx,rcx                   ; XOR(Xor_r64_rm64) [RDX,RCX]                          encoding(3 bytes) = 48 33 d1
000eh shr rdx,1                     ; SHR(Shr_rm64_1) [RDX,1h:imm8]                        encoding(3 bytes) = 48 d1 ea
0011h add rax,rdx                   ; ADD(Add_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 03 c2
0014h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> avgzBytes => new byte[21]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0xC1,0x48,0x23,0xC2,0x48,0x33,0xD1,0x48,0xD1,0xEA,0x48,0x03,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref byte avgz(ref byte lhs, in byte rhs)
; location: [7FFC7C0A3150h, 7FFC7C0A316Dh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,byte ptr [rcx]      ; MOVZX(Movzx_r32_rm8) [EAX,mem(8u,RCX:br,DS:sr)]      encoding(3 bytes) = 0f b6 01
0008h movzx edx,byte ptr [rdx]      ; MOVZX(Movzx_r32_rm8) [EDX,mem(8u,RDX:br,DS:sr)]      encoding(3 bytes) = 0f b6 12
000bh mov r8d,eax                   ; MOV(Mov_r32_rm32) [R8D,EAX]                          encoding(3 bytes) = 44 8b c0
000eh and r8d,edx                   ; AND(And_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 23 c2
0011h xor eax,edx                   ; XOR(Xor_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 33 c2
0013h sar eax,1                     ; SAR(Sar_rm32_1) [EAX,1h:imm8]                        encoding(2 bytes) = d1 f8
0015h add eax,r8d                   ; ADD(Add_r32_rm32) [EAX,R8D]                          encoding(3 bytes) = 41 03 c0
0018h mov [rcx],al                  ; MOV(Mov_rm8_r8) [mem(8u,RCX:br,DS:sr),AL]            encoding(2 bytes) = 88 01
001ah mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
001dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> avgzBytes => new byte[30]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0x01,0x0F,0xB6,0x12,0x44,0x8B,0xC0,0x44,0x23,0xC2,0x33,0xC2,0xD1,0xF8,0x41,0x03,0xC0,0x88,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref ushort avgz(ref ushort lhs, in ushort rhs)
; location: [7FFC7C0A3180h, 7FFC7C0A319Eh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,word ptr [rcx]      ; MOVZX(Movzx_r32_rm16) [EAX,mem(16u,RCX:br,DS:sr)]    encoding(3 bytes) = 0f b7 01
0008h movzx edx,word ptr [rdx]      ; MOVZX(Movzx_r32_rm16) [EDX,mem(16u,RDX:br,DS:sr)]    encoding(3 bytes) = 0f b7 12
000bh mov r8d,eax                   ; MOV(Mov_r32_rm32) [R8D,EAX]                          encoding(3 bytes) = 44 8b c0
000eh and r8d,edx                   ; AND(And_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 23 c2
0011h xor eax,edx                   ; XOR(Xor_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 33 c2
0013h sar eax,1                     ; SAR(Sar_rm32_1) [EAX,1h:imm8]                        encoding(2 bytes) = d1 f8
0015h add eax,r8d                   ; ADD(Add_r32_rm32) [EAX,R8D]                          encoding(3 bytes) = 41 03 c0
0018h mov [rcx],ax                  ; MOV(Mov_rm16_r16) [mem(16u,RCX:br,DS:sr),AX]         encoding(3 bytes) = 66 89 01
001bh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
001eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> avgzBytes => new byte[31]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB7,0x01,0x0F,0xB7,0x12,0x44,0x8B,0xC0,0x44,0x23,0xC2,0x33,0xC2,0xD1,0xF8,0x41,0x03,0xC0,0x66,0x89,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ulong avgz(ReadOnlySpan<ulong> src)
; location: [7FFC7C0A35C0h, 7FFC7C0A3618h]
0000h push rax                      ; PUSH(Push_r64) [RAX]                                 encoding(1 byte ) = 50
0001h xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0003h mov [rsp],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(4 bytes) = 48 89 04 24
0007h mov rdx,[rcx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 11
000ah mov ecx,[rcx+8]               ; MOV(Mov_r32_rm32) [ECX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 49 08
000dh test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
000fh ja short 0018h                ; JA(Ja_rel8_64) [18h:jmp64]                           encoding(2 bytes) = 77 07
0011h xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0013h add rsp,8                     ; ADD(Add_rm64_imm8) [RSP,8h:imm64]                    encoding(4 bytes) = 48 83 c4 08
0017h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0018h mov rax,[rdx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 02
001bh mov [rsp],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(4 bytes) = 48 89 04 24
001fh mov eax,1                     ; MOV(Mov_r32_imm32) [EAX,1h:imm32]                    encoding(5 bytes) = b8 01 00 00 00
0024h cmp ecx,1                     ; CMP(Cmp_rm32_imm8) [ECX,1h:imm32]                    encoding(3 bytes) = 83 f9 01
0027h jle short 0050h               ; JLE(Jle_rel8_64) [50h:jmp64]                         encoding(2 bytes) = 7e 27
0029h movsxd r8,eax                 ; MOVSXD(Movsxd_r64_rm32) [R8,EAX]                     encoding(3 bytes) = 4c 63 c0
002ch lea r8,[rdx+r8*8]             ; LEA(Lea_r64_m) [R8,mem(Unknown,RDX:br,DS:sr)]        encoding(4 bytes) = 4e 8d 04 c2
0030h mov r9,[rsp]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RSP:br,SS:sr)]         encoding(4 bytes) = 4c 8b 0c 24
0034h mov r8,[r8]                   ; MOV(Mov_r64_rm64) [R8,mem(64u,R8:br,DS:sr)]          encoding(3 bytes) = 4d 8b 00
0037h mov r10,r9                    ; MOV(Mov_r64_rm64) [R10,R9]                           encoding(3 bytes) = 4d 8b d1
003ah and r10,r8                    ; AND(And_r64_rm64) [R10,R8]                           encoding(3 bytes) = 4d 23 d0
003dh xor r8,r9                     ; XOR(Xor_r64_rm64) [R8,R9]                            encoding(3 bytes) = 4d 33 c1
0040h shr r8,1                      ; SHR(Shr_rm64_1) [R8,1h:imm8]                         encoding(3 bytes) = 49 d1 e8
0043h add r8,r10                    ; ADD(Add_r64_rm64) [R8,R10]                           encoding(3 bytes) = 4d 03 c2
0046h mov [rsp],r8                  ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),R8]         encoding(4 bytes) = 4c 89 04 24
004ah inc eax                       ; INC(Inc_rm32) [EAX]                                  encoding(2 bytes) = ff c0
004ch cmp eax,ecx                   ; CMP(Cmp_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 3b c1
004eh jl short 0029h                ; JL(Jl_rel8_64) [29h:jmp64]                           encoding(2 bytes) = 7c d9
0050h mov rax,[rsp]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(4 bytes) = 48 8b 04 24
0054h add rsp,8                     ; ADD(Add_rm64_imm8) [RSP,8h:imm64]                    encoding(4 bytes) = 48 83 c4 08
0058h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> avgzBytes => new byte[89]{0x50,0x33,0xC0,0x48,0x89,0x04,0x24,0x48,0x8B,0x11,0x8B,0x49,0x08,0x85,0xC9,0x77,0x07,0x33,0xC0,0x48,0x83,0xC4,0x08,0xC3,0x48,0x8B,0x02,0x48,0x89,0x04,0x24,0xB8,0x01,0x00,0x00,0x00,0x83,0xF9,0x01,0x7E,0x27,0x4C,0x63,0xC0,0x4E,0x8D,0x04,0xC2,0x4C,0x8B,0x0C,0x24,0x4D,0x8B,0x00,0x4D,0x8B,0xD1,0x4D,0x23,0xD0,0x4D,0x33,0xC1,0x49,0xD1,0xE8,0x4D,0x03,0xC2,0x4C,0x89,0x04,0x24,0xFF,0xC0,0x3B,0xC1,0x7C,0xD9,0x48,0x8B,0x04,0x24,0x48,0x83,0xC4,0x08,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: uint avgi(uint lhs, uint rhs)
; location: [7FFC7C0A3690h, 7FFC7C0A369Fh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov eax,ecx                   ; MOV(Mov_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 8b c1
0007h or eax,edx                    ; OR(Or_r32_rm32) [EAX,EDX]                            encoding(2 bytes) = 0b c2
0009h xor edx,ecx                   ; XOR(Xor_r32_rm32) [EDX,ECX]                          encoding(2 bytes) = 33 d1
000bh shr edx,1                     ; SHR(Shr_rm32_1) [EDX,1h:imm8]                        encoding(2 bytes) = d1 ea
000dh sub eax,edx                   ; SUB(Sub_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 2b c2
000fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> avgiBytes => new byte[16]{0x0F,0x1F,0x44,0x00,0x00,0x8B,0xC1,0x0B,0xC2,0x33,0xD1,0xD1,0xEA,0x2B,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: sbyte avg(ReadOnlySpan<sbyte> src)
; location: [7FFC7C0A36E0h, 7FFC7C0A3730h]
0000h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0004h nop                           ; NOP(Nopd)                                            encoding(1 byte ) = 90
0005h mov rax,[rcx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 01
0008h mov edx,[rcx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 51 08
000bh xor ecx,ecx                   ; XOR(Xor_r32_rm32) [ECX,ECX]                          encoding(2 bytes) = 33 c9
000dh xor r8d,r8d                   ; XOR(Xor_r32_rm32) [R8D,R8D]                          encoding(3 bytes) = 45 33 c0
0010h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0012h jle short 002fh               ; JLE(Jle_rel8_64) [2Fh:jmp64]                         encoding(2 bytes) = 7e 1b
0014h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0017h movsx r9,byte ptr [rax+r9]    ; MOVSX(Movsx_r64_rm8) [R9,mem(8i,RAX:br,DS:sr)]       encoding(5 bytes) = 4e 0f be 0c 08
001ch movsxd r9,r9d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R9D]                     encoding(3 bytes) = 4d 63 c9
001fh add rcx,r9                    ; ADD(Add_r64_rm64) [RCX,R9]                           encoding(3 bytes) = 49 03 c9
0022h jo short 004bh                ; JO(Jo_rel8_64) [4Bh:jmp64]                           encoding(2 bytes) = 70 27
0024h add r8d,1                     ; ADD(Add_rm32_imm8) [R8D,1h:imm32]                    encoding(4 bytes) = 41 83 c0 01
0028h jo short 004bh                ; JO(Jo_rel8_64) [4Bh:jmp64]                           encoding(2 bytes) = 70 21
002ah cmp r8d,edx                   ; CMP(Cmp_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 3b c2
002dh jl short 0014h                ; JL(Jl_rel8_64) [14h:jmp64]                           encoding(2 bytes) = 7c e5
002fh movsxd r8,edx                 ; MOVSXD(Movsxd_r64_rm32) [R8,EDX]                     encoding(3 bytes) = 4c 63 c2
0032h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0035h cqo                           ; CQO(Cqo)                                             encoding(2 bytes) = 48 99
0037h idiv r8                       ; IDIV(Idiv_rm64) [R8]                                 encoding(3 bytes) = 49 f7 f8
003ah cmp rax,7Fh                   ; CMP(Cmp_rm64_imm8) [RAX,7fh:imm64]                   encoding(4 bytes) = 48 83 f8 7f
003eh jg short 004bh                ; JG(Jg_rel8_64) [4Bh:jmp64]                           encoding(2 bytes) = 7f 0b
0040h cmp rax,0FFFFFFFFFFFFFF80h    ; CMP(Cmp_rm64_imm8) [RAX,ffffffffffffff80h:imm64]     encoding(4 bytes) = 48 83 f8 80
0044h jl short 004bh                ; JL(Jl_rel8_64) [4Bh:jmp64]                           encoding(2 bytes) = 7c 05
0046h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
004ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
004bh call 7FFCDBCD3490h            ; CALL(Call_rel32_64) [5FC2FDB0h:jmp64]                encoding(5 bytes) = e8 60 fd c2 5f
0050h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> avgBytes => new byte[81]{0x48,0x83,0xEC,0x28,0x90,0x48,0x8B,0x01,0x8B,0x51,0x08,0x33,0xC9,0x45,0x33,0xC0,0x85,0xD2,0x7E,0x1B,0x4D,0x63,0xC8,0x4E,0x0F,0xBE,0x0C,0x08,0x4D,0x63,0xC9,0x49,0x03,0xC9,0x70,0x27,0x41,0x83,0xC0,0x01,0x70,0x21,0x44,0x3B,0xC2,0x7C,0xE5,0x4C,0x63,0xC2,0x48,0x8B,0xC1,0x48,0x99,0x49,0xF7,0xF8,0x48,0x83,0xF8,0x7F,0x7F,0x0B,0x48,0x83,0xF8,0x80,0x7C,0x05,0x48,0x83,0xC4,0x28,0xC3,0xE8,0x60,0xFD,0xC2,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: short avg(ReadOnlySpan<short> src)
; location: [7FFC7C0A37C0h, 7FFC7C0A3814h]
0000h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0004h nop                           ; NOP(Nopd)                                            encoding(1 byte ) = 90
0005h mov rax,[rcx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 01
0008h mov edx,[rcx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 51 08
000bh xor ecx,ecx                   ; XOR(Xor_r32_rm32) [ECX,ECX]                          encoding(2 bytes) = 33 c9
000dh xor r8d,r8d                   ; XOR(Xor_r32_rm32) [R8D,R8D]                          encoding(3 bytes) = 45 33 c0
0010h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0012h jle short 002fh               ; JLE(Jle_rel8_64) [2Fh:jmp64]                         encoding(2 bytes) = 7e 1b
0014h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0017h movsx r9,word ptr [rax+r9*2]  ; MOVSX(Movsx_r64_rm16) [R9,mem(16i,RAX:br,DS:sr)]     encoding(5 bytes) = 4e 0f bf 0c 48
001ch movsxd r9,r9d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R9D]                     encoding(3 bytes) = 4d 63 c9
001fh add rcx,r9                    ; ADD(Add_r64_rm64) [RCX,R9]                           encoding(3 bytes) = 49 03 c9
0022h jo short 004fh                ; JO(Jo_rel8_64) [4Fh:jmp64]                           encoding(2 bytes) = 70 2b
0024h add r8d,1                     ; ADD(Add_rm32_imm8) [R8D,1h:imm32]                    encoding(4 bytes) = 41 83 c0 01
0028h jo short 004fh                ; JO(Jo_rel8_64) [4Fh:jmp64]                           encoding(2 bytes) = 70 25
002ah cmp r8d,edx                   ; CMP(Cmp_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 3b c2
002dh jl short 0014h                ; JL(Jl_rel8_64) [14h:jmp64]                           encoding(2 bytes) = 7c e5
002fh movsxd r8,edx                 ; MOVSXD(Movsxd_r64_rm32) [R8,EDX]                     encoding(3 bytes) = 4c 63 c2
0032h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0035h cqo                           ; CQO(Cqo)                                             encoding(2 bytes) = 48 99
0037h idiv r8                       ; IDIV(Idiv_rm64) [R8]                                 encoding(3 bytes) = 49 f7 f8
003ah cmp rax,7FFFh                 ; CMP(Cmp_RAX_imm32) [RAX,7fffh:imm64]                 encoding(6 bytes) = 48 3d ff 7f 00 00
0040h jg short 004fh                ; JG(Jg_rel8_64) [4Fh:jmp64]                           encoding(2 bytes) = 7f 0d
0042h cmp rax,0FFFFFFFFFFFF8000h    ; CMP(Cmp_RAX_imm32) [RAX,ffffffffffff8000h:imm64]     encoding(6 bytes) = 48 3d 00 80 ff ff
0048h jl short 004fh                ; JL(Jl_rel8_64) [4Fh:jmp64]                           encoding(2 bytes) = 7c 05
004ah add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
004eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
004fh call 7FFCDBCD3490h            ; CALL(Call_rel32_64) [5FC2FCD0h:jmp64]                encoding(5 bytes) = e8 7c fc c2 5f
0054h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> avgBytes => new byte[85]{0x48,0x83,0xEC,0x28,0x90,0x48,0x8B,0x01,0x8B,0x51,0x08,0x33,0xC9,0x45,0x33,0xC0,0x85,0xD2,0x7E,0x1B,0x4D,0x63,0xC8,0x4E,0x0F,0xBF,0x0C,0x48,0x4D,0x63,0xC9,0x49,0x03,0xC9,0x70,0x2B,0x41,0x83,0xC0,0x01,0x70,0x25,0x44,0x3B,0xC2,0x7C,0xE5,0x4C,0x63,0xC2,0x48,0x8B,0xC1,0x48,0x99,0x49,0xF7,0xF8,0x48,0x3D,0xFF,0x7F,0x00,0x00,0x7F,0x0D,0x48,0x3D,0x00,0x80,0xFF,0xFF,0x7C,0x05,0x48,0x83,0xC4,0x28,0xC3,0xE8,0x7C,0xFC,0xC2,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: int avg(ReadOnlySpan<int> src)
; location: [7FFC7C0A38A0h, 7FFC7C0A38F3h]
0000h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0004h nop                           ; NOP(Nopd)                                            encoding(1 byte ) = 90
0005h mov rax,[rcx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 01
0008h mov edx,[rcx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 51 08
000bh xor ecx,ecx                   ; XOR(Xor_r32_rm32) [ECX,ECX]                          encoding(2 bytes) = 33 c9
000dh xor r8d,r8d                   ; XOR(Xor_r32_rm32) [R8D,R8D]                          encoding(3 bytes) = 45 33 c0
0010h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0012h jle short 002eh               ; JLE(Jle_rel8_64) [2Eh:jmp64]                         encoding(2 bytes) = 7e 1a
0014h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0017h mov r9d,[rax+r9*4]            ; MOV(Mov_r32_rm32) [R9D,mem(32u,RAX:br,DS:sr)]        encoding(4 bytes) = 46 8b 0c 88
001bh movsxd r9,r9d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R9D]                     encoding(3 bytes) = 4d 63 c9
001eh add rcx,r9                    ; ADD(Add_r64_rm64) [RCX,R9]                           encoding(3 bytes) = 49 03 c9
0021h jo short 004eh                ; JO(Jo_rel8_64) [4Eh:jmp64]                           encoding(2 bytes) = 70 2b
0023h add r8d,1                     ; ADD(Add_rm32_imm8) [R8D,1h:imm32]                    encoding(4 bytes) = 41 83 c0 01
0027h jo short 004eh                ; JO(Jo_rel8_64) [4Eh:jmp64]                           encoding(2 bytes) = 70 25
0029h cmp r8d,edx                   ; CMP(Cmp_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 3b c2
002ch jl short 0014h                ; JL(Jl_rel8_64) [14h:jmp64]                           encoding(2 bytes) = 7c e6
002eh movsxd r8,edx                 ; MOVSXD(Movsxd_r64_rm32) [R8,EDX]                     encoding(3 bytes) = 4c 63 c2
0031h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0034h cqo                           ; CQO(Cqo)                                             encoding(2 bytes) = 48 99
0036h idiv r8                       ; IDIV(Idiv_rm64) [R8]                                 encoding(3 bytes) = 49 f7 f8
0039h cmp rax,7FFFFFFFh             ; CMP(Cmp_RAX_imm32) [RAX,7fffffffh:imm64]             encoding(6 bytes) = 48 3d ff ff ff 7f
003fh jg short 004eh                ; JG(Jg_rel8_64) [4Eh:jmp64]                           encoding(2 bytes) = 7f 0d
0041h cmp rax,0FFFFFFFF80000000h    ; CMP(Cmp_RAX_imm32) [RAX,ffffffff80000000h:imm64]     encoding(6 bytes) = 48 3d 00 00 00 80
0047h jl short 004eh                ; JL(Jl_rel8_64) [4Eh:jmp64]                           encoding(2 bytes) = 7c 05
0049h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
004dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
004eh call 7FFCDBCD3490h            ; CALL(Call_rel32_64) [5FC2FBF0h:jmp64]                encoding(5 bytes) = e8 9d fb c2 5f
0053h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> avgBytes => new byte[84]{0x48,0x83,0xEC,0x28,0x90,0x48,0x8B,0x01,0x8B,0x51,0x08,0x33,0xC9,0x45,0x33,0xC0,0x85,0xD2,0x7E,0x1A,0x4D,0x63,0xC8,0x46,0x8B,0x0C,0x88,0x4D,0x63,0xC9,0x49,0x03,0xC9,0x70,0x2B,0x41,0x83,0xC0,0x01,0x70,0x25,0x44,0x3B,0xC2,0x7C,0xE6,0x4C,0x63,0xC2,0x48,0x8B,0xC1,0x48,0x99,0x49,0xF7,0xF8,0x48,0x3D,0xFF,0xFF,0xFF,0x7F,0x7F,0x0D,0x48,0x3D,0x00,0x00,0x00,0x80,0x7C,0x05,0x48,0x83,0xC4,0x28,0xC3,0xE8,0x9D,0xFB,0xC2,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: uint avg(ReadOnlySpan<uint> src)
; location: [7FFC7C0A3910h, 7FFC7C0A395Dh]
0000h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0004h nop                           ; NOP(Nopd)                                            encoding(1 byte ) = 90
0005h mov rax,[rcx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 01
0008h mov edx,[rcx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 51 08
000bh xor ecx,ecx                   ; XOR(Xor_r32_rm32) [ECX,ECX]                          encoding(2 bytes) = 33 c9
000dh xor r8d,r8d                   ; XOR(Xor_r32_rm32) [R8D,R8D]                          encoding(3 bytes) = 45 33 c0
0010h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0012h jle short 002bh               ; JLE(Jle_rel8_64) [2Bh:jmp64]                         encoding(2 bytes) = 7e 17
0014h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0017h mov r9d,[rax+r9*4]            ; MOV(Mov_r32_rm32) [R9D,mem(32u,RAX:br,DS:sr)]        encoding(4 bytes) = 46 8b 0c 88
001bh add rcx,r9                    ; ADD(Add_r64_rm64) [RCX,R9]                           encoding(3 bytes) = 49 03 c9
001eh jb short 0048h                ; JB(Jb_rel8_64) [48h:jmp64]                           encoding(2 bytes) = 72 28
0020h add r8d,1                     ; ADD(Add_rm32_imm8) [R8D,1h:imm32]                    encoding(4 bytes) = 41 83 c0 01
0024h jo short 0048h                ; JO(Jo_rel8_64) [48h:jmp64]                           encoding(2 bytes) = 70 22
0026h cmp r8d,edx                   ; CMP(Cmp_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 3b c2
0029h jl short 0014h                ; JL(Jl_rel8_64) [14h:jmp64]                           encoding(2 bytes) = 7c e9
002bh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
002dh jl short 0048h                ; JL(Jl_rel8_64) [48h:jmp64]                           encoding(2 bytes) = 7c 19
002fh mov r8d,edx                   ; MOV(Mov_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 8b c2
0032h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0035h xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
0037h div r8                        ; DIV(Div_rm64) [R8]                                   encoding(3 bytes) = 49 f7 f0
003ah mov rdx,rax                   ; MOV(Mov_r64_rm64) [RDX,RAX]                          encoding(3 bytes) = 48 8b d0
003dh shr rdx,20h                   ; SHR(Shr_rm64_imm8) [RDX,20h:imm8]                    encoding(4 bytes) = 48 c1 ea 20
0041h jne short 0048h               ; JNE(Jne_rel8_64) [48h:jmp64]                         encoding(2 bytes) = 75 05
0043h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
0047h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0048h call 7FFCDBCD3490h            ; CALL(Call_rel32_64) [5FC2FB80h:jmp64]                encoding(5 bytes) = e8 33 fb c2 5f
004dh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> avgBytes => new byte[78]{0x48,0x83,0xEC,0x28,0x90,0x48,0x8B,0x01,0x8B,0x51,0x08,0x33,0xC9,0x45,0x33,0xC0,0x85,0xD2,0x7E,0x17,0x4D,0x63,0xC8,0x46,0x8B,0x0C,0x88,0x49,0x03,0xC9,0x72,0x28,0x41,0x83,0xC0,0x01,0x70,0x22,0x44,0x3B,0xC2,0x7C,0xE9,0x85,0xD2,0x7C,0x19,0x44,0x8B,0xC2,0x48,0x8B,0xC1,0x33,0xD2,0x49,0xF7,0xF0,0x48,0x8B,0xD0,0x48,0xC1,0xEA,0x20,0x75,0x05,0x48,0x83,0xC4,0x28,0xC3,0xE8,0x33,0xFB,0xC2,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: long avg(ReadOnlySpan<long> src)
; location: [7FFC7C0A3980h, 7FFC7C0A39BDh]
0000h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0004h nop                           ; NOP(Nopd)                                            encoding(1 byte ) = 90
0005h mov rax,[rcx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 01
0008h mov edx,[rcx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 51 08
000bh xor ecx,ecx                   ; XOR(Xor_r32_rm32) [ECX,ECX]                          encoding(2 bytes) = 33 c9
000dh xor r8d,r8d                   ; XOR(Xor_r32_rm32) [R8D,R8D]                          encoding(3 bytes) = 45 33 c0
0010h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0012h jle short 0028h               ; JLE(Jle_rel8_64) [28h:jmp64]                         encoding(2 bytes) = 7e 14
0014h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0017h add rcx,[rax+r9*8]            ; ADD(Add_r64_rm64) [RCX,mem(64u,RAX:br,DS:sr)]        encoding(4 bytes) = 4a 03 0c c8
001bh jo short 0038h                ; JO(Jo_rel8_64) [38h:jmp64]                           encoding(2 bytes) = 70 1b
001dh add r8d,1                     ; ADD(Add_rm32_imm8) [R8D,1h:imm32]                    encoding(4 bytes) = 41 83 c0 01
0021h jo short 0038h                ; JO(Jo_rel8_64) [38h:jmp64]                           encoding(2 bytes) = 70 15
0023h cmp r8d,edx                   ; CMP(Cmp_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 3b c2
0026h jl short 0014h                ; JL(Jl_rel8_64) [14h:jmp64]                           encoding(2 bytes) = 7c ec
0028h movsxd r8,edx                 ; MOVSXD(Movsxd_r64_rm32) [R8,EDX]                     encoding(3 bytes) = 4c 63 c2
002bh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
002eh cqo                           ; CQO(Cqo)                                             encoding(2 bytes) = 48 99
0030h idiv r8                       ; IDIV(Idiv_rm64) [R8]                                 encoding(3 bytes) = 49 f7 f8
0033h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
0037h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0038h call 7FFCDBCD3490h            ; CALL(Call_rel32_64) [5FC2FB10h:jmp64]                encoding(5 bytes) = e8 d3 fa c2 5f
003dh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> avgBytes => new byte[62]{0x48,0x83,0xEC,0x28,0x90,0x48,0x8B,0x01,0x8B,0x51,0x08,0x33,0xC9,0x45,0x33,0xC0,0x85,0xD2,0x7E,0x14,0x4D,0x63,0xC8,0x4A,0x03,0x0C,0xC8,0x70,0x1B,0x41,0x83,0xC0,0x01,0x70,0x15,0x44,0x3B,0xC2,0x7C,0xEC,0x4C,0x63,0xC2,0x48,0x8B,0xC1,0x48,0x99,0x49,0xF7,0xF8,0x48,0x83,0xC4,0x28,0xC3,0xE8,0xD3,0xFA,0xC2,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool between(sbyte x, sbyte a, sbyte b)
; location: [7FFC7C0A3B40h, 7FFC7C0A3B60h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cl                  ; MOVSX(Movsx_r64_rm8) [RAX,CL]                        encoding(4 bytes) = 48 0f be c1
0009h movsx rdx,dl                  ; MOVSX(Movsx_r64_rm8) [RDX,DL]                        encoding(4 bytes) = 48 0f be d2
000dh cmp eax,edx                   ; CMP(Cmp_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 3b c2
000fh jl short 001eh                ; JL(Jl_rel8_64) [1Eh:jmp64]                           encoding(2 bytes) = 7c 0d
0011h movsx rdx,r8b                 ; MOVSX(Movsx_r64_rm8) [RDX,R8L]                       encoding(4 bytes) = 49 0f be d0
0015h cmp eax,edx                   ; CMP(Cmp_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 3b c2
0017h setle al                      ; SETLE(Setle_rm8) [AL]                                encoding(3 bytes) = 0f 9e c0
001ah movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
001dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
001eh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0020h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> betweenBytes => new byte[33]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBE,0xC1,0x48,0x0F,0xBE,0xD2,0x3B,0xC2,0x7C,0x0D,0x49,0x0F,0xBE,0xD0,0x3B,0xC2,0x0F,0x9E,0xC0,0x0F,0xB6,0xC0,0xC3,0x33,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool between(short x, short a, short b)
; location: [7FFC7C0A3B80h, 7FFC7C0A3BA0h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cx                  ; MOVSX(Movsx_r64_rm16) [RAX,CX]                       encoding(4 bytes) = 48 0f bf c1
0009h movsx rdx,dx                  ; MOVSX(Movsx_r64_rm16) [RDX,DX]                       encoding(4 bytes) = 48 0f bf d2
000dh cmp eax,edx                   ; CMP(Cmp_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 3b c2
000fh jl short 001eh                ; JL(Jl_rel8_64) [1Eh:jmp64]                           encoding(2 bytes) = 7c 0d
0011h movsx rdx,r8w                 ; MOVSX(Movsx_r64_rm16) [RDX,R8W]                      encoding(4 bytes) = 49 0f bf d0
0015h cmp eax,edx                   ; CMP(Cmp_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 3b c2
0017h setle al                      ; SETLE(Setle_rm8) [AL]                                encoding(3 bytes) = 0f 9e c0
001ah movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
001dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
001eh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0020h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> betweenBytes => new byte[33]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBF,0xC1,0x48,0x0F,0xBF,0xD2,0x3B,0xC2,0x7C,0x0D,0x49,0x0F,0xBF,0xD0,0x3B,0xC2,0x0F,0x9E,0xC0,0x0F,0xB6,0xC0,0xC3,0x33,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool between(ushort x, ushort a, ushort b)
; location: [7FFC7C0A3BC0h, 7FFC7C0A3BDEh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cx                  ; MOVZX(Movzx_r32_rm16) [EAX,CX]                       encoding(3 bytes) = 0f b7 c1
0008h movzx edx,dx                  ; MOVZX(Movzx_r32_rm16) [EDX,DX]                       encoding(3 bytes) = 0f b7 d2
000bh cmp eax,edx                   ; CMP(Cmp_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 3b c2
000dh jl short 001ch                ; JL(Jl_rel8_64) [1Ch:jmp64]                           encoding(2 bytes) = 7c 0d
000fh movzx edx,r8w                 ; MOVZX(Movzx_r32_rm16) [EDX,R8W]                      encoding(4 bytes) = 41 0f b7 d0
0013h cmp eax,edx                   ; CMP(Cmp_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 3b c2
0015h setle al                      ; SETLE(Setle_rm8) [AL]                                encoding(3 bytes) = 0f 9e c0
0018h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
001bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
001ch xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
001eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> betweenBytes => new byte[31]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB7,0xC1,0x0F,0xB7,0xD2,0x3B,0xC2,0x7C,0x0D,0x41,0x0F,0xB7,0xD0,0x3B,0xC2,0x0F,0x9E,0xC0,0x0F,0xB6,0xC0,0xC3,0x33,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool between(uint x, uint a, uint b)
; location: [7FFC7C0A3C20h, 7FFC7C0A3C35h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h cmp ecx,edx                   ; CMP(Cmp_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 3b ca
0007h jb short 0013h                ; JB(Jb_rel8_64) [13h:jmp64]                           encoding(2 bytes) = 72 0a
0009h cmp ecx,r8d                   ; CMP(Cmp_r32_rm32) [ECX,R8D]                          encoding(3 bytes) = 41 3b c8
000ch setbe al                      ; SETBE(Setbe_rm8) [AL]                                encoding(3 bytes) = 0f 96 c0
000fh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0012h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0013h xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0015h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> betweenBytes => new byte[22]{0x0F,0x1F,0x44,0x00,0x00,0x3B,0xCA,0x72,0x0A,0x41,0x3B,0xC8,0x0F,0x96,0xC0,0x0F,0xB6,0xC0,0xC3,0x33,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: sbyte dec(sbyte src)
; location: [7FFC7C0A3CB0h, 7FFC7C0A3CC3h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cl                  ; MOVSX(Movsx_r64_rm8) [RAX,CL]                        encoding(4 bytes) = 48 0f be c1
0009h dec eax                       ; DEC(Dec_rm32) [EAX]                                  encoding(2 bytes) = ff c8
000bh movsx rax,al                  ; MOVSX(Movsx_r64_rm8) [RAX,AL]                        encoding(4 bytes) = 48 0f be c0
000fh movsx rax,al                  ; MOVSX(Movsx_r64_rm8) [RAX,AL]                        encoding(4 bytes) = 48 0f be c0
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> decBytes => new byte[20]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBE,0xC1,0xFF,0xC8,0x48,0x0F,0xBE,0xC0,0x48,0x0F,0xBE,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ushort dec(ushort src)
; location: [7FFC7C0A3D40h, 7FFC7C0A3D50h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cx                  ; MOVZX(Movzx_r32_rm16) [EAX,CX]                       encoding(3 bytes) = 0f b7 c1
0008h dec eax                       ; DEC(Dec_rm32) [EAX]                                  encoding(2 bytes) = ff c8
000ah movzx eax,ax                  ; MOVZX(Movzx_r32_rm16) [EAX,AX]                       encoding(3 bytes) = 0f b7 c0
000dh movzx eax,ax                  ; MOVZX(Movzx_r32_rm16) [EAX,AX]                       encoding(3 bytes) = 0f b7 c0
0010h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> decBytes => new byte[17]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB7,0xC1,0xFF,0xC8,0x0F,0xB7,0xC0,0x0F,0xB7,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref short dec(ref short src)
; location: [7FFC7C0A3E30h, 7FFC7C0A3E3Bh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h dec word ptr [rcx]            ; DEC(Dec_rm16) [mem(16u,RCX:br,DS:sr)]                encoding(3 bytes) = 66 ff 09
0008h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> decBytes => new byte[12]{0x0F,0x1F,0x44,0x00,0x00,0x66,0xFF,0x09,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref int dec(ref int src)
; location: [7FFC7C0A3E70h, 7FFC7C0A3E7Ah]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h dec dword ptr [rcx]           ; DEC(Dec_rm32) [mem(32u,RCX:br,DS:sr)]                encoding(2 bytes) = ff 09
0007h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> decBytes => new byte[11]{0x0F,0x1F,0x44,0x00,0x00,0xFF,0x09,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref uint dec(ref uint src)
; location: [7FFC7C0A3E90h, 7FFC7C0A3E9Ah]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h dec dword ptr [rcx]           ; DEC(Dec_rm32) [mem(32u,RCX:br,DS:sr)]                encoding(2 bytes) = ff 09
0007h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> decBytes => new byte[11]{0x0F,0x1F,0x44,0x00,0x00,0xFF,0x09,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref long dec(ref long src)
; location: [7FFC7C0A3EB0h, 7FFC7C0A3EBBh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h dec qword ptr [rcx]           ; DEC(Dec_rm64) [mem(64u,RCX:br,DS:sr)]                encoding(3 bytes) = 48 ff 09
0008h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> decBytes => new byte[12]{0x0F,0x1F,0x44,0x00,0x00,0x48,0xFF,0x09,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref ulong dec(ref ulong src)
; location: [7FFC7C0A3ED0h, 7FFC7C0A3EDBh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h dec qword ptr [rcx]           ; DEC(Dec_rm64) [mem(64u,RCX:br,DS:sr)]                encoding(3 bytes) = 48 ff 09
0008h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> decBytes => new byte[12]{0x0F,0x1F,0x44,0x00,0x00,0x48,0xFF,0x09,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<sbyte> dec(ReadOnlySpan<sbyte> src, Span<sbyte> dst)
; location: [7FFC7C0A3EF0h, 7FFC7C0A3FBCh]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0014h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0017h mov esi,0AEh                  ; MOV(Mov_r32_imm32) [ESI,aeh:imm32]                   encoding(5 bytes) = be ae 00 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
0023h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0026h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0029h jne short 006eh               ; JNE(Jne_rel8_64) [6Eh:jmp64]                         encoding(2 bytes) = 75 43
002bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
002eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0030h jle short 0059h               ; JLE(Jle_rel8_64) [59h:jmp64]                         encoding(2 bytes) = 7e 27
0032h cmp r10d,r8d                  ; CMP(Cmp_r32_rm32) [R10D,R8D]                         encoding(3 bytes) = 45 3b d0
0035h jae near ptr 00c7h            ; JAE(Jae_rel32_64) [C7h:jmp64]                        encoding(6 bytes) = 0f 83 8c 00 00 00
003bh movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
003eh lea rbx,[rax+r11]             ; LEA(Lea_r64_m) [RBX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 4a 8d 1c 18
0042h movsx r11,byte ptr [r9+r11]   ; MOVSX(Movsx_r64_rm8) [R11,mem(8i,R9:br,DS:sr)]       encoding(5 bytes) = 4f 0f be 1c 19
0047h dec r11d                      ; DEC(Dec_rm32) [R11D]                                 encoding(3 bytes) = 41 ff cb
004ah movsx r11,r11b                ; MOVSX(Movsx_r64_rm8) [R11,R11L]                      encoding(4 bytes) = 4d 0f be db
004eh mov [rbx],r11b                ; MOV(Mov_rm8_r8) [mem(8u,RBX:br,DS:sr),R11L]          encoding(3 bytes) = 44 88 1b
0051h inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
0054h cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
0057h jl short 0032h                ; JL(Jl_rel8_64) [32h:jmp64]                           encoding(2 bytes) = 7c d9
0059h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
005ch mov [rcx+8],r8d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R8D]        encoding(4 bytes) = 44 89 41 08
0060h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0063h add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0067h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0068h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0069h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
006ah pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
006bh pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
006dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
006eh mov ecx,125h                  ; MOV(Mov_r32_imm32) [ECX,125h:imm32]                  encoding(5 bytes) = b9 25 01 00 00
0073h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
007dh call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC2FF30h:jmp64]                encoding(5 bytes) = e8 ae fe c2 5f
0082h mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0085h mov ecx,0AAFh                 ; MOV(Mov_r32_imm32) [ECX,aafh:imm32]                  encoding(5 bytes) = b9 af 0a 00 00
008ah mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
0094h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC2FF30h:jmp64]                encoding(5 bytes) = e8 97 fe c2 5f
0099h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
009ch lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
00a1h mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00a4h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00a8h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00abh mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00adh mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00afh mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00b4h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b9h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFEA128h:jmp64]        encoding(5 bytes) = e8 6a a0 fe ff
00beh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00c1h call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAE59A0h:jmp64]                encoding(5 bytes) = e8 da 58 ae 5f
00c6h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00c7h call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC2F750h:jmp64]                encoding(5 bytes) = e8 84 f6 c2 5f
00cch int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> decBytes => new byte[205]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x00,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0xBE,0xAE,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x43,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x27,0x45,0x3B,0xD0,0x0F,0x83,0x8C,0x00,0x00,0x00,0x4D,0x63,0xDA,0x4A,0x8D,0x1C,0x18,0x4F,0x0F,0xBE,0x1C,0x19,0x41,0xFF,0xCB,0x4D,0x0F,0xBE,0xDB,0x44,0x88,0x1B,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xD9,0x48,0x89,0x01,0x44,0x89,0x41,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x25,0x01,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xAE,0xFE,0xC2,0x5F,0x4C,0x8B,0xF0,0xB9,0xAF,0x0A,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x97,0xFE,0xC2,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x6A,0xA0,0xFE,0xFF,0x48,0x8B,0xC8,0xE8,0xDA,0x58,0xAE,0x5F,0xCC,0xE8,0x84,0xF6,0xC2,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<byte> dec(ReadOnlySpan<byte> src, Span<byte> dst)
; location: [7FFC7C0A3FE0h, 7FFC7C0A40ACh]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0014h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0017h mov esi,0B6h                  ; MOV(Mov_r32_imm32) [ESI,b6h:imm32]                   encoding(5 bytes) = be b6 00 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
0023h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0026h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0029h jne short 006eh               ; JNE(Jne_rel8_64) [6Eh:jmp64]                         encoding(2 bytes) = 75 43
002bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
002eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0030h jle short 0059h               ; JLE(Jle_rel8_64) [59h:jmp64]                         encoding(2 bytes) = 7e 27
0032h cmp r10d,r8d                  ; CMP(Cmp_r32_rm32) [R10D,R8D]                         encoding(3 bytes) = 45 3b d0
0035h jae near ptr 00c7h            ; JAE(Jae_rel32_64) [C7h:jmp64]                        encoding(6 bytes) = 0f 83 8c 00 00 00
003bh movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
003eh lea rbx,[rax+r11]             ; LEA(Lea_r64_m) [RBX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 4a 8d 1c 18
0042h movzx r11d,byte ptr [r9+r11]  ; MOVZX(Movzx_r32_rm8) [R11D,mem(8u,R9:br,DS:sr)]      encoding(5 bytes) = 47 0f b6 1c 19
0047h dec r11d                      ; DEC(Dec_rm32) [R11D]                                 encoding(3 bytes) = 41 ff cb
004ah movzx r11d,r11b               ; MOVZX(Movzx_r32_rm8) [R11D,R11L]                     encoding(4 bytes) = 45 0f b6 db
004eh mov [rbx],r11b                ; MOV(Mov_rm8_r8) [mem(8u,RBX:br,DS:sr),R11L]          encoding(3 bytes) = 44 88 1b
0051h inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
0054h cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
0057h jl short 0032h                ; JL(Jl_rel8_64) [32h:jmp64]                           encoding(2 bytes) = 7c d9
0059h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
005ch mov [rcx+8],r8d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R8D]        encoding(4 bytes) = 44 89 41 08
0060h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0063h add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0067h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0068h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0069h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
006ah pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
006bh pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
006dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
006eh mov ecx,125h                  ; MOV(Mov_r32_imm32) [ECX,125h:imm32]                  encoding(5 bytes) = b9 25 01 00 00
0073h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
007dh call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC2FE40h:jmp64]                encoding(5 bytes) = e8 be fd c2 5f
0082h mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0085h mov ecx,0AAFh                 ; MOV(Mov_r32_imm32) [ECX,aafh:imm32]                  encoding(5 bytes) = b9 af 0a 00 00
008ah mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
0094h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC2FE40h:jmp64]                encoding(5 bytes) = e8 a7 fd c2 5f
0099h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
009ch lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
00a1h mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00a4h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00a8h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00abh mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00adh mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00afh mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00b4h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b9h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFEA038h:jmp64]        encoding(5 bytes) = e8 7a 9f fe ff
00beh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00c1h call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAE58B0h:jmp64]                encoding(5 bytes) = e8 ea 57 ae 5f
00c6h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00c7h call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC2F660h:jmp64]                encoding(5 bytes) = e8 94 f5 c2 5f
00cch int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> decBytes => new byte[205]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x00,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0xBE,0xB6,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x43,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x27,0x45,0x3B,0xD0,0x0F,0x83,0x8C,0x00,0x00,0x00,0x4D,0x63,0xDA,0x4A,0x8D,0x1C,0x18,0x47,0x0F,0xB6,0x1C,0x19,0x41,0xFF,0xCB,0x45,0x0F,0xB6,0xDB,0x44,0x88,0x1B,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xD9,0x48,0x89,0x01,0x44,0x89,0x41,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x25,0x01,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xBE,0xFD,0xC2,0x5F,0x4C,0x8B,0xF0,0xB9,0xAF,0x0A,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xA7,0xFD,0xC2,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x7A,0x9F,0xFE,0xFF,0x48,0x8B,0xC8,0xE8,0xEA,0x57,0xAE,0x5F,0xCC,0xE8,0x94,0xF5,0xC2,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<ushort> dec(ReadOnlySpan<ushort> src, Span<ushort> dst)
; location: [7FFC7C0A41C0h, 7FFC7C0A428Dh]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0014h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0017h mov esi,0C6h                  ; MOV(Mov_r32_imm32) [ESI,c6h:imm32]                   encoding(5 bytes) = be c6 00 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
0023h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0026h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0029h jne short 006fh               ; JNE(Jne_rel8_64) [6Fh:jmp64]                         encoding(2 bytes) = 75 44
002bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
002eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0030h jle short 005ah               ; JLE(Jle_rel8_64) [5Ah:jmp64]                         encoding(2 bytes) = 7e 28
0032h cmp r10d,r8d                  ; CMP(Cmp_r32_rm32) [R10D,R8D]                         encoding(3 bytes) = 45 3b d0
0035h jae near ptr 00c8h            ; JAE(Jae_rel32_64) [C8h:jmp64]                        encoding(6 bytes) = 0f 83 8d 00 00 00
003bh movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
003eh lea rbx,[rax+r11*2]           ; LEA(Lea_r64_m) [RBX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 4a 8d 1c 58
0042h movzx r11d,word ptr [r9+r11*2]; MOVZX(Movzx_r32_rm16) [R11D,mem(16u,R9:br,DS:sr)]    encoding(5 bytes) = 47 0f b7 1c 59
0047h dec r11d                      ; DEC(Dec_rm32) [R11D]                                 encoding(3 bytes) = 41 ff cb
004ah movzx r11d,r11w               ; MOVZX(Movzx_r32_rm16) [R11D,R11W]                    encoding(4 bytes) = 45 0f b7 db
004eh mov [rbx],r11w                ; MOV(Mov_rm16_r16) [mem(16u,RBX:br,DS:sr),R11W]       encoding(4 bytes) = 66 44 89 1b
0052h inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
0055h cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
0058h jl short 0032h                ; JL(Jl_rel8_64) [32h:jmp64]                           encoding(2 bytes) = 7c d8
005ah mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
005dh mov [rcx+8],r8d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R8D]        encoding(4 bytes) = 44 89 41 08
0061h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0064h add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0068h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0069h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
006ah pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
006bh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
006ch pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
006eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
006fh mov ecx,125h                  ; MOV(Mov_r32_imm32) [ECX,125h:imm32]                  encoding(5 bytes) = b9 25 01 00 00
0074h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
007eh call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC2FC60h:jmp64]                encoding(5 bytes) = e8 dd fb c2 5f
0083h mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0086h mov ecx,0AAFh                 ; MOV(Mov_r32_imm32) [ECX,aafh:imm32]                  encoding(5 bytes) = b9 af 0a 00 00
008bh mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
0095h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC2FC60h:jmp64]                encoding(5 bytes) = e8 c6 fb c2 5f
009ah mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
009dh lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
00a2h mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00a5h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00a9h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00ach mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00aeh mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00b0h mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00b5h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00bah call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFE9E58h:jmp64]        encoding(5 bytes) = e8 99 9d fe ff
00bfh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00c2h call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAE56D0h:jmp64]                encoding(5 bytes) = e8 09 56 ae 5f
00c7h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00c8h call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC2F480h:jmp64]                encoding(5 bytes) = e8 b3 f3 c2 5f
00cdh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> decBytes => new byte[206]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x00,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0xBE,0xC6,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x44,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x28,0x45,0x3B,0xD0,0x0F,0x83,0x8D,0x00,0x00,0x00,0x4D,0x63,0xDA,0x4A,0x8D,0x1C,0x58,0x47,0x0F,0xB7,0x1C,0x59,0x41,0xFF,0xCB,0x45,0x0F,0xB7,0xDB,0x66,0x44,0x89,0x1B,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xD8,0x48,0x89,0x01,0x44,0x89,0x41,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x25,0x01,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xDD,0xFB,0xC2,0x5F,0x4C,0x8B,0xF0,0xB9,0xAF,0x0A,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xC6,0xFB,0xC2,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x99,0x9D,0xFE,0xFF,0x48,0x8B,0xC8,0xE8,0x09,0x56,0xAE,0x5F,0xCC,0xE8,0xB3,0xF3,0xC2,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<int> dec(ReadOnlySpan<int> src, Span<int> dst)
; location: [7FFC7C0A42B0h, 7FFC7C0A4377h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0014h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0017h mov esi,0CEh                  ; MOV(Mov_r32_imm32) [ESI,ceh:imm32]                   encoding(5 bytes) = be ce 00 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
0023h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0026h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0029h jne short 0069h               ; JNE(Jne_rel8_64) [69h:jmp64]                         encoding(2 bytes) = 75 3e
002bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
002eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0030h jle short 0054h               ; JLE(Jle_rel8_64) [54h:jmp64]                         encoding(2 bytes) = 7e 22
0032h cmp r10d,r8d                  ; CMP(Cmp_r32_rm32) [R10D,R8D]                         encoding(3 bytes) = 45 3b d0
0035h jae near ptr 00c2h            ; JAE(Jae_rel32_64) [C2h:jmp64]                        encoding(6 bytes) = 0f 83 87 00 00 00
003bh movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
003eh lea rbx,[rax+r11*4]           ; LEA(Lea_r64_m) [RBX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 4a 8d 1c 98
0042h mov r11d,[r9+r11*4]           ; MOV(Mov_r32_rm32) [R11D,mem(32u,R9:br,DS:sr)]        encoding(4 bytes) = 47 8b 1c 99
0046h dec r11d                      ; DEC(Dec_rm32) [R11D]                                 encoding(3 bytes) = 41 ff cb
0049h mov [rbx],r11d                ; MOV(Mov_rm32_r32) [mem(32u,RBX:br,DS:sr),R11D]       encoding(3 bytes) = 44 89 1b
004ch inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
004fh cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
0052h jl short 0032h                ; JL(Jl_rel8_64) [32h:jmp64]                           encoding(2 bytes) = 7c de
0054h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0057h mov [rcx+8],r8d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R8D]        encoding(4 bytes) = 44 89 41 08
005bh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
005eh add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0062h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0063h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0064h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0065h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0066h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0068h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0069h mov ecx,125h                  ; MOV(Mov_r32_imm32) [ECX,125h:imm32]                  encoding(5 bytes) = b9 25 01 00 00
006eh mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
0078h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC2FB70h:jmp64]                encoding(5 bytes) = e8 f3 fa c2 5f
007dh mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0080h mov ecx,0AAFh                 ; MOV(Mov_r32_imm32) [ECX,aafh:imm32]                  encoding(5 bytes) = b9 af 0a 00 00
0085h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
008fh call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC2FB70h:jmp64]                encoding(5 bytes) = e8 dc fa c2 5f
0094h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
0097h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
009ch mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
009fh mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00a3h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00a6h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00a8h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00aah mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00afh mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b4h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFE9D68h:jmp64]        encoding(5 bytes) = e8 af 9c fe ff
00b9h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00bch call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAE55E0h:jmp64]                encoding(5 bytes) = e8 1f 55 ae 5f
00c1h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00c2h call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC2F390h:jmp64]                encoding(5 bytes) = e8 c9 f2 c2 5f
00c7h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> decBytes => new byte[200]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x00,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0xBE,0xCE,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x3E,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x22,0x45,0x3B,0xD0,0x0F,0x83,0x87,0x00,0x00,0x00,0x4D,0x63,0xDA,0x4A,0x8D,0x1C,0x98,0x47,0x8B,0x1C,0x99,0x41,0xFF,0xCB,0x44,0x89,0x1B,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xDE,0x48,0x89,0x01,0x44,0x89,0x41,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x25,0x01,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xF3,0xFA,0xC2,0x5F,0x4C,0x8B,0xF0,0xB9,0xAF,0x0A,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xDC,0xFA,0xC2,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0xAF,0x9C,0xFE,0xFF,0x48,0x8B,0xC8,0xE8,0x1F,0x55,0xAE,0x5F,0xCC,0xE8,0xC9,0xF2,0xC2,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<uint> dec(ReadOnlySpan<uint> src, Span<uint> dst)
; location: [7FFC7C0A43A0h, 7FFC7C0A4467h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0014h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0017h mov esi,0D6h                  ; MOV(Mov_r32_imm32) [ESI,d6h:imm32]                   encoding(5 bytes) = be d6 00 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
0023h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0026h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0029h jne short 0069h               ; JNE(Jne_rel8_64) [69h:jmp64]                         encoding(2 bytes) = 75 3e
002bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
002eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0030h jle short 0054h               ; JLE(Jle_rel8_64) [54h:jmp64]                         encoding(2 bytes) = 7e 22
0032h cmp r10d,r8d                  ; CMP(Cmp_r32_rm32) [R10D,R8D]                         encoding(3 bytes) = 45 3b d0
0035h jae near ptr 00c2h            ; JAE(Jae_rel32_64) [C2h:jmp64]                        encoding(6 bytes) = 0f 83 87 00 00 00
003bh movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
003eh lea rbx,[rax+r11*4]           ; LEA(Lea_r64_m) [RBX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 4a 8d 1c 98
0042h mov r11d,[r9+r11*4]           ; MOV(Mov_r32_rm32) [R11D,mem(32u,R9:br,DS:sr)]        encoding(4 bytes) = 47 8b 1c 99
0046h dec r11d                      ; DEC(Dec_rm32) [R11D]                                 encoding(3 bytes) = 41 ff cb
0049h mov [rbx],r11d                ; MOV(Mov_rm32_r32) [mem(32u,RBX:br,DS:sr),R11D]       encoding(3 bytes) = 44 89 1b
004ch inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
004fh cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
0052h jl short 0032h                ; JL(Jl_rel8_64) [32h:jmp64]                           encoding(2 bytes) = 7c de
0054h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0057h mov [rcx+8],r8d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R8D]        encoding(4 bytes) = 44 89 41 08
005bh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
005eh add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0062h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0063h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0064h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0065h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0066h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0068h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0069h mov ecx,125h                  ; MOV(Mov_r32_imm32) [ECX,125h:imm32]                  encoding(5 bytes) = b9 25 01 00 00
006eh mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
0078h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC2FA80h:jmp64]                encoding(5 bytes) = e8 03 fa c2 5f
007dh mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0080h mov ecx,0AAFh                 ; MOV(Mov_r32_imm32) [ECX,aafh:imm32]                  encoding(5 bytes) = b9 af 0a 00 00
0085h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
008fh call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC2FA80h:jmp64]                encoding(5 bytes) = e8 ec f9 c2 5f
0094h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
0097h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
009ch mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
009fh mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00a3h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00a6h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00a8h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00aah mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00afh mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b4h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFE9C78h:jmp64]        encoding(5 bytes) = e8 bf 9b fe ff
00b9h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00bch call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAE54F0h:jmp64]                encoding(5 bytes) = e8 2f 54 ae 5f
00c1h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00c2h call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC2F2A0h:jmp64]                encoding(5 bytes) = e8 d9 f1 c2 5f
00c7h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> decBytes => new byte[200]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x00,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0xBE,0xD6,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x3E,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x22,0x45,0x3B,0xD0,0x0F,0x83,0x87,0x00,0x00,0x00,0x4D,0x63,0xDA,0x4A,0x8D,0x1C,0x98,0x47,0x8B,0x1C,0x99,0x41,0xFF,0xCB,0x44,0x89,0x1B,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xDE,0x48,0x89,0x01,0x44,0x89,0x41,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x25,0x01,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x03,0xFA,0xC2,0x5F,0x4C,0x8B,0xF0,0xB9,0xAF,0x0A,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xEC,0xF9,0xC2,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0xBF,0x9B,0xFE,0xFF,0x48,0x8B,0xC8,0xE8,0x2F,0x54,0xAE,0x5F,0xCC,0xE8,0xD9,0xF1,0xC2,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<long> dec(ReadOnlySpan<long> src, Span<long> dst)
; location: [7FFC7C0A4490h, 7FFC7C0A4557h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0014h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0017h mov esi,0DEh                  ; MOV(Mov_r32_imm32) [ESI,deh:imm32]                   encoding(5 bytes) = be de 00 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
0023h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0026h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0029h jne short 0069h               ; JNE(Jne_rel8_64) [69h:jmp64]                         encoding(2 bytes) = 75 3e
002bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
002eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0030h jle short 0054h               ; JLE(Jle_rel8_64) [54h:jmp64]                         encoding(2 bytes) = 7e 22
0032h cmp r10d,r8d                  ; CMP(Cmp_r32_rm32) [R10D,R8D]                         encoding(3 bytes) = 45 3b d0
0035h jae near ptr 00c2h            ; JAE(Jae_rel32_64) [C2h:jmp64]                        encoding(6 bytes) = 0f 83 87 00 00 00
003bh movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
003eh lea rbx,[rax+r11*8]           ; LEA(Lea_r64_m) [RBX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 4a 8d 1c d8
0042h mov r11,[r9+r11*8]            ; MOV(Mov_r64_rm64) [R11,mem(64u,R9:br,DS:sr)]         encoding(4 bytes) = 4f 8b 1c d9
0046h dec r11                       ; DEC(Dec_rm64) [R11]                                  encoding(3 bytes) = 49 ff cb
0049h mov [rbx],r11                 ; MOV(Mov_rm64_r64) [mem(64u,RBX:br,DS:sr),R11]        encoding(3 bytes) = 4c 89 1b
004ch inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
004fh cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
0052h jl short 0032h                ; JL(Jl_rel8_64) [32h:jmp64]                           encoding(2 bytes) = 7c de
0054h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0057h mov [rcx+8],r8d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R8D]        encoding(4 bytes) = 44 89 41 08
005bh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
005eh add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0062h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0063h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0064h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0065h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0066h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0068h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0069h mov ecx,125h                  ; MOV(Mov_r32_imm32) [ECX,125h:imm32]                  encoding(5 bytes) = b9 25 01 00 00
006eh mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
0078h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC2F990h:jmp64]                encoding(5 bytes) = e8 13 f9 c2 5f
007dh mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0080h mov ecx,0AAFh                 ; MOV(Mov_r32_imm32) [ECX,aafh:imm32]                  encoding(5 bytes) = b9 af 0a 00 00
0085h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
008fh call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC2F990h:jmp64]                encoding(5 bytes) = e8 fc f8 c2 5f
0094h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
0097h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
009ch mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
009fh mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00a3h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00a6h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00a8h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00aah mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00afh mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b4h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFE9B88h:jmp64]        encoding(5 bytes) = e8 cf 9a fe ff
00b9h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00bch call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAE5400h:jmp64]                encoding(5 bytes) = e8 3f 53 ae 5f
00c1h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00c2h call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC2F1B0h:jmp64]                encoding(5 bytes) = e8 e9 f0 c2 5f
00c7h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> decBytes => new byte[200]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x00,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0xBE,0xDE,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x3E,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x22,0x45,0x3B,0xD0,0x0F,0x83,0x87,0x00,0x00,0x00,0x4D,0x63,0xDA,0x4A,0x8D,0x1C,0xD8,0x4F,0x8B,0x1C,0xD9,0x49,0xFF,0xCB,0x4C,0x89,0x1B,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xDE,0x48,0x89,0x01,0x44,0x89,0x41,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x25,0x01,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x13,0xF9,0xC2,0x5F,0x4C,0x8B,0xF0,0xB9,0xAF,0x0A,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xFC,0xF8,0xC2,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0xCF,0x9A,0xFE,0xFF,0x48,0x8B,0xC8,0xE8,0x3F,0x53,0xAE,0x5F,0xCC,0xE8,0xE9,0xF0,0xC2,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<ulong> dec(ReadOnlySpan<ulong> src, Span<ulong> dst)
; location: [7FFC7C0A4580h, 7FFC7C0A4647h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0014h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0017h mov esi,0E6h                  ; MOV(Mov_r32_imm32) [ESI,e6h:imm32]                   encoding(5 bytes) = be e6 00 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
0023h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0026h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0029h jne short 0069h               ; JNE(Jne_rel8_64) [69h:jmp64]                         encoding(2 bytes) = 75 3e
002bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
002eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0030h jle short 0054h               ; JLE(Jle_rel8_64) [54h:jmp64]                         encoding(2 bytes) = 7e 22
0032h cmp r10d,r8d                  ; CMP(Cmp_r32_rm32) [R10D,R8D]                         encoding(3 bytes) = 45 3b d0
0035h jae near ptr 00c2h            ; JAE(Jae_rel32_64) [C2h:jmp64]                        encoding(6 bytes) = 0f 83 87 00 00 00
003bh movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
003eh lea rbx,[rax+r11*8]           ; LEA(Lea_r64_m) [RBX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 4a 8d 1c d8
0042h mov r11,[r9+r11*8]            ; MOV(Mov_r64_rm64) [R11,mem(64u,R9:br,DS:sr)]         encoding(4 bytes) = 4f 8b 1c d9
0046h dec r11                       ; DEC(Dec_rm64) [R11]                                  encoding(3 bytes) = 49 ff cb
0049h mov [rbx],r11                 ; MOV(Mov_rm64_r64) [mem(64u,RBX:br,DS:sr),R11]        encoding(3 bytes) = 4c 89 1b
004ch inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
004fh cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
0052h jl short 0032h                ; JL(Jl_rel8_64) [32h:jmp64]                           encoding(2 bytes) = 7c de
0054h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0057h mov [rcx+8],r8d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R8D]        encoding(4 bytes) = 44 89 41 08
005bh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
005eh add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0062h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0063h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0064h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0065h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0066h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0068h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0069h mov ecx,125h                  ; MOV(Mov_r32_imm32) [ECX,125h:imm32]                  encoding(5 bytes) = b9 25 01 00 00
006eh mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
0078h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC2F8A0h:jmp64]                encoding(5 bytes) = e8 23 f8 c2 5f
007dh mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0080h mov ecx,0AAFh                 ; MOV(Mov_r32_imm32) [ECX,aafh:imm32]                  encoding(5 bytes) = b9 af 0a 00 00
0085h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
008fh call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC2F8A0h:jmp64]                encoding(5 bytes) = e8 0c f8 c2 5f
0094h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
0097h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
009ch mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
009fh mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00a3h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00a6h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00a8h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00aah mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00afh mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b4h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFE9A98h:jmp64]        encoding(5 bytes) = e8 df 99 fe ff
00b9h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00bch call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAE5310h:jmp64]                encoding(5 bytes) = e8 4f 52 ae 5f
00c1h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00c2h call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC2F0C0h:jmp64]                encoding(5 bytes) = e8 f9 ef c2 5f
00c7h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> decBytes => new byte[200]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x00,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0xBE,0xE6,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x3E,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x22,0x45,0x3B,0xD0,0x0F,0x83,0x87,0x00,0x00,0x00,0x4D,0x63,0xDA,0x4A,0x8D,0x1C,0xD8,0x4F,0x8B,0x1C,0xD9,0x49,0xFF,0xCB,0x4C,0x89,0x1B,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xDE,0x48,0x89,0x01,0x44,0x89,0x41,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x25,0x01,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x23,0xF8,0xC2,0x5F,0x4C,0x8B,0xF0,0xB9,0xAF,0x0A,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x0C,0xF8,0xC2,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0xDF,0x99,0xFE,0xFF,0x48,0x8B,0xC8,0xE8,0x4F,0x52,0xAE,0x5F,0xCC,0xE8,0xF9,0xEF,0xC2,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<sbyte> dec(Span<sbyte> io)
; location: [7FFC7C0A4670h, 7FFC7C0A469Ch]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,[rdx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 02
0008h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
000bh xor r8d,r8d                   ; XOR(Xor_r32_rm32) [R8D,R8D]                          encoding(3 bytes) = 45 33 c0
000eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0010h jle short 0023h               ; JLE(Jle_rel8_64) [23h:jmp64]                         encoding(2 bytes) = 7e 11
0012h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0015h add r9,rax                    ; ADD(Add_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 03 c8
0018h dec byte ptr [r9]             ; DEC(Dec_rm8) [mem(8u,R9:br,DS:sr)]                   encoding(3 bytes) = 41 fe 09
001bh inc r8d                       ; INC(Inc_rm32) [R8D]                                  encoding(3 bytes) = 41 ff c0
001eh cmp r8d,edx                   ; CMP(Cmp_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 3b c2
0021h jl short 0012h                ; JL(Jl_rel8_64) [12h:jmp64]                           encoding(2 bytes) = 7c ef
0023h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0026h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
0029h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
002ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> decBytes => new byte[45]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x02,0x8B,0x52,0x08,0x45,0x33,0xC0,0x85,0xD2,0x7E,0x11,0x4D,0x63,0xC8,0x4C,0x03,0xC8,0x41,0xFE,0x09,0x41,0xFF,0xC0,0x44,0x3B,0xC2,0x7C,0xEF,0x48,0x89,0x01,0x89,0x51,0x08,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<byte> dec(Span<byte> io)
; location: [7FFC7C0A46B0h, 7FFC7C0A46DCh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,[rdx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 02
0008h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
000bh xor r8d,r8d                   ; XOR(Xor_r32_rm32) [R8D,R8D]                          encoding(3 bytes) = 45 33 c0
000eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0010h jle short 0023h               ; JLE(Jle_rel8_64) [23h:jmp64]                         encoding(2 bytes) = 7e 11
0012h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0015h add r9,rax                    ; ADD(Add_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 03 c8
0018h dec byte ptr [r9]             ; DEC(Dec_rm8) [mem(8u,R9:br,DS:sr)]                   encoding(3 bytes) = 41 fe 09
001bh inc r8d                       ; INC(Inc_rm32) [R8D]                                  encoding(3 bytes) = 41 ff c0
001eh cmp r8d,edx                   ; CMP(Cmp_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 3b c2
0021h jl short 0012h                ; JL(Jl_rel8_64) [12h:jmp64]                           encoding(2 bytes) = 7c ef
0023h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0026h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
0029h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
002ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> decBytes => new byte[45]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x02,0x8B,0x52,0x08,0x45,0x33,0xC0,0x85,0xD2,0x7E,0x11,0x4D,0x63,0xC8,0x4C,0x03,0xC8,0x41,0xFE,0x09,0x41,0xFF,0xC0,0x44,0x3B,0xC2,0x7C,0xEF,0x48,0x89,0x01,0x89,0x51,0x08,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<short> dec(Span<short> io)
; location: [7FFC7C0A46F0h, 7FFC7C0A471Eh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,[rdx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 02
0008h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
000bh xor r8d,r8d                   ; XOR(Xor_r32_rm32) [R8D,R8D]                          encoding(3 bytes) = 45 33 c0
000eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0010h jle short 0025h               ; JLE(Jle_rel8_64) [25h:jmp64]                         encoding(2 bytes) = 7e 13
0012h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0015h lea r9,[rax+r9*2]             ; LEA(Lea_r64_m) [R9,mem(Unknown,RAX:br,DS:sr)]        encoding(4 bytes) = 4e 8d 0c 48
0019h dec word ptr [r9]             ; DEC(Dec_rm16) [mem(16u,R9:br,DS:sr)]                 encoding(4 bytes) = 66 41 ff 09
001dh inc r8d                       ; INC(Inc_rm32) [R8D]                                  encoding(3 bytes) = 41 ff c0
0020h cmp r8d,edx                   ; CMP(Cmp_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 3b c2
0023h jl short 0012h                ; JL(Jl_rel8_64) [12h:jmp64]                           encoding(2 bytes) = 7c ed
0025h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0028h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
002bh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
002eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> decBytes => new byte[47]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x02,0x8B,0x52,0x08,0x45,0x33,0xC0,0x85,0xD2,0x7E,0x13,0x4D,0x63,0xC8,0x4E,0x8D,0x0C,0x48,0x66,0x41,0xFF,0x09,0x41,0xFF,0xC0,0x44,0x3B,0xC2,0x7C,0xED,0x48,0x89,0x01,0x89,0x51,0x08,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<ushort> dec(Span<ushort> io)
; location: [7FFC7C0A4730h, 7FFC7C0A475Eh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,[rdx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 02
0008h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
000bh xor r8d,r8d                   ; XOR(Xor_r32_rm32) [R8D,R8D]                          encoding(3 bytes) = 45 33 c0
000eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0010h jle short 0025h               ; JLE(Jle_rel8_64) [25h:jmp64]                         encoding(2 bytes) = 7e 13
0012h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0015h lea r9,[rax+r9*2]             ; LEA(Lea_r64_m) [R9,mem(Unknown,RAX:br,DS:sr)]        encoding(4 bytes) = 4e 8d 0c 48
0019h dec word ptr [r9]             ; DEC(Dec_rm16) [mem(16u,R9:br,DS:sr)]                 encoding(4 bytes) = 66 41 ff 09
001dh inc r8d                       ; INC(Inc_rm32) [R8D]                                  encoding(3 bytes) = 41 ff c0
0020h cmp r8d,edx                   ; CMP(Cmp_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 3b c2
0023h jl short 0012h                ; JL(Jl_rel8_64) [12h:jmp64]                           encoding(2 bytes) = 7c ed
0025h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0028h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
002bh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
002eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> decBytes => new byte[47]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x02,0x8B,0x52,0x08,0x45,0x33,0xC0,0x85,0xD2,0x7E,0x13,0x4D,0x63,0xC8,0x4E,0x8D,0x0C,0x48,0x66,0x41,0xFF,0x09,0x41,0xFF,0xC0,0x44,0x3B,0xC2,0x7C,0xED,0x48,0x89,0x01,0x89,0x51,0x08,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<int> dec(Span<int> io)
; location: [7FFC7C0A4770h, 7FFC7C0A479Dh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,[rdx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 02
0008h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
000bh xor r8d,r8d                   ; XOR(Xor_r32_rm32) [R8D,R8D]                          encoding(3 bytes) = 45 33 c0
000eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0010h jle short 0024h               ; JLE(Jle_rel8_64) [24h:jmp64]                         encoding(2 bytes) = 7e 12
0012h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0015h lea r9,[rax+r9*4]             ; LEA(Lea_r64_m) [R9,mem(Unknown,RAX:br,DS:sr)]        encoding(4 bytes) = 4e 8d 0c 88
0019h dec dword ptr [r9]            ; DEC(Dec_rm32) [mem(32u,R9:br,DS:sr)]                 encoding(3 bytes) = 41 ff 09
001ch inc r8d                       ; INC(Inc_rm32) [R8D]                                  encoding(3 bytes) = 41 ff c0
001fh cmp r8d,edx                   ; CMP(Cmp_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 3b c2
0022h jl short 0012h                ; JL(Jl_rel8_64) [12h:jmp64]                           encoding(2 bytes) = 7c ee
0024h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0027h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
002ah mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
002dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> decBytes => new byte[46]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x02,0x8B,0x52,0x08,0x45,0x33,0xC0,0x85,0xD2,0x7E,0x12,0x4D,0x63,0xC8,0x4E,0x8D,0x0C,0x88,0x41,0xFF,0x09,0x41,0xFF,0xC0,0x44,0x3B,0xC2,0x7C,0xEE,0x48,0x89,0x01,0x89,0x51,0x08,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<uint> dec(Span<uint> io)
; location: [7FFC7C0A47B0h, 7FFC7C0A47DDh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,[rdx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 02
0008h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
000bh xor r8d,r8d                   ; XOR(Xor_r32_rm32) [R8D,R8D]                          encoding(3 bytes) = 45 33 c0
000eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0010h jle short 0024h               ; JLE(Jle_rel8_64) [24h:jmp64]                         encoding(2 bytes) = 7e 12
0012h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0015h lea r9,[rax+r9*4]             ; LEA(Lea_r64_m) [R9,mem(Unknown,RAX:br,DS:sr)]        encoding(4 bytes) = 4e 8d 0c 88
0019h dec dword ptr [r9]            ; DEC(Dec_rm32) [mem(32u,R9:br,DS:sr)]                 encoding(3 bytes) = 41 ff 09
001ch inc r8d                       ; INC(Inc_rm32) [R8D]                                  encoding(3 bytes) = 41 ff c0
001fh cmp r8d,edx                   ; CMP(Cmp_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 3b c2
0022h jl short 0012h                ; JL(Jl_rel8_64) [12h:jmp64]                           encoding(2 bytes) = 7c ee
0024h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0027h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
002ah mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
002dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> decBytes => new byte[46]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x02,0x8B,0x52,0x08,0x45,0x33,0xC0,0x85,0xD2,0x7E,0x12,0x4D,0x63,0xC8,0x4E,0x8D,0x0C,0x88,0x41,0xFF,0x09,0x41,0xFF,0xC0,0x44,0x3B,0xC2,0x7C,0xEE,0x48,0x89,0x01,0x89,0x51,0x08,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<long> dec(Span<long> io)
; location: [7FFC7C0A47F0h, 7FFC7C0A481Dh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,[rdx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 02
0008h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
000bh xor r8d,r8d                   ; XOR(Xor_r32_rm32) [R8D,R8D]                          encoding(3 bytes) = 45 33 c0
000eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0010h jle short 0024h               ; JLE(Jle_rel8_64) [24h:jmp64]                         encoding(2 bytes) = 7e 12
0012h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0015h lea r9,[rax+r9*8]             ; LEA(Lea_r64_m) [R9,mem(Unknown,RAX:br,DS:sr)]        encoding(4 bytes) = 4e 8d 0c c8
0019h dec qword ptr [r9]            ; DEC(Dec_rm64) [mem(64u,R9:br,DS:sr)]                 encoding(3 bytes) = 49 ff 09
001ch inc r8d                       ; INC(Inc_rm32) [R8D]                                  encoding(3 bytes) = 41 ff c0
001fh cmp r8d,edx                   ; CMP(Cmp_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 3b c2
0022h jl short 0012h                ; JL(Jl_rel8_64) [12h:jmp64]                           encoding(2 bytes) = 7c ee
0024h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0027h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
002ah mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
002dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> decBytes => new byte[46]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x02,0x8B,0x52,0x08,0x45,0x33,0xC0,0x85,0xD2,0x7E,0x12,0x4D,0x63,0xC8,0x4E,0x8D,0x0C,0xC8,0x49,0xFF,0x09,0x41,0xFF,0xC0,0x44,0x3B,0xC2,0x7C,0xEE,0x48,0x89,0x01,0x89,0x51,0x08,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<ulong> dec(Span<ulong> io)
; location: [7FFC7C0A4830h, 7FFC7C0A485Dh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,[rdx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 02
0008h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
000bh xor r8d,r8d                   ; XOR(Xor_r32_rm32) [R8D,R8D]                          encoding(3 bytes) = 45 33 c0
000eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0010h jle short 0024h               ; JLE(Jle_rel8_64) [24h:jmp64]                         encoding(2 bytes) = 7e 12
0012h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0015h lea r9,[rax+r9*8]             ; LEA(Lea_r64_m) [R9,mem(Unknown,RAX:br,DS:sr)]        encoding(4 bytes) = 4e 8d 0c c8
0019h dec qword ptr [r9]            ; DEC(Dec_rm64) [mem(64u,R9:br,DS:sr)]                 encoding(3 bytes) = 49 ff 09
001ch inc r8d                       ; INC(Inc_rm32) [R8D]                                  encoding(3 bytes) = 41 ff c0
001fh cmp r8d,edx                   ; CMP(Cmp_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 3b c2
0022h jl short 0012h                ; JL(Jl_rel8_64) [12h:jmp64]                           encoding(2 bytes) = 7c ee
0024h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0027h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
002ah mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
002dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> decBytes => new byte[46]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x02,0x8B,0x52,0x08,0x45,0x33,0xC0,0x85,0xD2,0x7E,0x12,0x4D,0x63,0xC8,0x4E,0x8D,0x0C,0xC8,0x49,0xFF,0x09,0x41,0xFF,0xC0,0x44,0x3B,0xC2,0x7C,0xEE,0x48,0x89,0x01,0x89,0x51,0x08,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool divides(sbyte lhs, sbyte rhs)
; location: [7FFC7C0A4870h, 7FFC7C0A4888h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,dl                  ; MOVSX(Movsx_r64_rm8) [RAX,DL]                        encoding(4 bytes) = 48 0f be c2
0009h movsx rcx,cl                  ; MOVSX(Movsx_r64_rm8) [RCX,CL]                        encoding(4 bytes) = 48 0f be c9
000dh cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
000eh idiv ecx                      ; IDIV(Idiv_rm32) [ECX]                                encoding(2 bytes) = f7 f9
0010h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0012h sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
0015h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0018h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> dividesBytes => new byte[25]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBE,0xC2,0x48,0x0F,0xBE,0xC9,0x99,0xF7,0xF9,0x85,0xD2,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool divides(byte lhs, byte rhs)
; location: [7FFC7C0A48A0h, 7FFC7C0A48B6h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,dl                  ; MOVZX(Movzx_r32_rm8) [EAX,DL]                        encoding(3 bytes) = 0f b6 c2
0008h movzx ecx,cl                  ; MOVZX(Movzx_r32_rm8) [ECX,CL]                        encoding(3 bytes) = 0f b6 c9
000bh cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
000ch idiv ecx                      ; IDIV(Idiv_rm32) [ECX]                                encoding(2 bytes) = f7 f9
000eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0010h sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
0013h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0016h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> dividesBytes => new byte[23]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC2,0x0F,0xB6,0xC9,0x99,0xF7,0xF9,0x85,0xD2,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool divides(short lhs, short rhs)
; location: [7FFC7C0A48D0h, 7FFC7C0A48E8h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,dx                  ; MOVSX(Movsx_r64_rm16) [RAX,DX]                       encoding(4 bytes) = 48 0f bf c2
0009h movsx rcx,cx                  ; MOVSX(Movsx_r64_rm16) [RCX,CX]                       encoding(4 bytes) = 48 0f bf c9
000dh cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
000eh idiv ecx                      ; IDIV(Idiv_rm32) [ECX]                                encoding(2 bytes) = f7 f9
0010h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0012h sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
0015h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0018h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> dividesBytes => new byte[25]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBF,0xC2,0x48,0x0F,0xBF,0xC9,0x99,0xF7,0xF9,0x85,0xD2,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool divides(ushort lhs, ushort rhs)
; location: [7FFC7C0A4900h, 7FFC7C0A4916h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,dx                  ; MOVZX(Movzx_r32_rm16) [EAX,DX]                       encoding(3 bytes) = 0f b7 c2
0008h movzx ecx,cx                  ; MOVZX(Movzx_r32_rm16) [ECX,CX]                       encoding(3 bytes) = 0f b7 c9
000bh cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
000ch idiv ecx                      ; IDIV(Idiv_rm32) [ECX]                                encoding(2 bytes) = f7 f9
000eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0010h sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
0013h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0016h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> dividesBytes => new byte[23]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB7,0xC2,0x0F,0xB7,0xC9,0x99,0xF7,0xF9,0x85,0xD2,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool divides(int lhs, int rhs)
; location: [7FFC7C0A4930h, 7FFC7C0A4942h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov eax,edx                   ; MOV(Mov_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 8b c2
0007h cdq                           ; CDQ(Cdq)                                             encoding(1 byte ) = 99
0008h idiv ecx                      ; IDIV(Idiv_rm32) [ECX]                                encoding(2 bytes) = f7 f9
000ah test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
000ch sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
000fh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0012h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> dividesBytes => new byte[19]{0x0F,0x1F,0x44,0x00,0x00,0x8B,0xC2,0x99,0xF7,0xF9,0x85,0xD2,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool divides(uint lhs, uint rhs)
; location: [7FFC7C0A4960h, 7FFC7C0A4973h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov eax,edx                   ; MOV(Mov_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 8b c2
0007h xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
0009h div ecx                       ; DIV(Div_rm32) [ECX]                                  encoding(2 bytes) = f7 f1
000bh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
000dh sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
0010h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> dividesBytes => new byte[20]{0x0F,0x1F,0x44,0x00,0x00,0x8B,0xC2,0x33,0xD2,0xF7,0xF1,0x85,0xD2,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool eq(byte lhs, byte rhs)
; location: [7FFC7C0A5160h, 7FFC7C0A5173h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0008h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
000bh cmp eax,edx                   ; CMP(Cmp_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 3b c2
000dh sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
0010h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> eqBytes => new byte[20]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC1,0x0F,0xB6,0xD2,0x3B,0xC2,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool eq(ReadOnlySpan<ushort> src, ushort target)
; location: [7FFC7C0A5360h, 7FFC7C0A5391h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov r8,[rcx]                  ; MOV(Mov_r64_rm64) [R8,mem(64u,RCX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 01
0008h mov ecx,[rcx+8]               ; MOV(Mov_r32_rm32) [ECX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 49 08
000bh xor r9d,r9d                   ; XOR(Xor_r32_rm32) [R9D,R9D]                          encoding(3 bytes) = 45 33 c9
000eh test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
0010h jle short 0029h               ; JLE(Jle_rel8_64) [29h:jmp64]                         encoding(2 bytes) = 7e 17
0012h movzx eax,dx                  ; MOVZX(Movzx_r32_rm16) [EAX,DX]                       encoding(3 bytes) = 0f b7 c2
0015h movsxd rdx,r9d                ; MOVSXD(Movsxd_r64_rm32) [RDX,R9D]                    encoding(3 bytes) = 49 63 d1
0018h movzx edx,word ptr [r8+rdx*2] ; MOVZX(Movzx_r32_rm16) [EDX,mem(16u,R8:br,DS:sr)]     encoding(5 bytes) = 41 0f b7 14 50
001dh cmp edx,eax                   ; CMP(Cmp_r32_rm32) [EDX,EAX]                          encoding(2 bytes) = 3b d0
001fh jne short 002fh               ; JNE(Jne_rel8_64) [2Fh:jmp64]                         encoding(2 bytes) = 75 0e
0021h inc r9d                       ; INC(Inc_rm32) [R9D]                                  encoding(3 bytes) = 41 ff c1
0024h cmp r9d,ecx                   ; CMP(Cmp_r32_rm32) [R9D,ECX]                          encoding(3 bytes) = 44 3b c9
0027h jl short 0015h                ; JL(Jl_rel8_64) [15h:jmp64]                           encoding(2 bytes) = 7c ec
0029h mov eax,1                     ; MOV(Mov_r32_imm32) [EAX,1h:imm32]                    encoding(5 bytes) = b8 01 00 00 00
002eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
002fh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0031h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> eqBytes => new byte[50]{0x0F,0x1F,0x44,0x00,0x00,0x4C,0x8B,0x01,0x8B,0x49,0x08,0x45,0x33,0xC9,0x85,0xC9,0x7E,0x17,0x0F,0xB7,0xC2,0x49,0x63,0xD1,0x41,0x0F,0xB7,0x14,0x50,0x3B,0xD0,0x75,0x0E,0x41,0xFF,0xC1,0x44,0x3B,0xC9,0x7C,0xEC,0xB8,0x01,0x00,0x00,0x00,0xC3,0x33,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool eq(ReadOnlySpan<int> src, int target)
; location: [7FFC7C0A53B0h, 7FFC7C0A53DBh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,[rcx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 01
0008h mov ecx,[rcx+8]               ; MOV(Mov_r32_rm32) [ECX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 49 08
000bh xor r8d,r8d                   ; XOR(Xor_r32_rm32) [R8D,R8D]                          encoding(3 bytes) = 45 33 c0
000eh test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
0010h jle short 0023h               ; JLE(Jle_rel8_64) [23h:jmp64]                         encoding(2 bytes) = 7e 11
0012h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0015h cmp [rax+r9*4],edx            ; CMP(Cmp_rm32_r32) [mem(32u,RAX:br,DS:sr),EDX]        encoding(4 bytes) = 42 39 14 88
0019h jne short 0029h               ; JNE(Jne_rel8_64) [29h:jmp64]                         encoding(2 bytes) = 75 0e
001bh inc r8d                       ; INC(Inc_rm32) [R8D]                                  encoding(3 bytes) = 41 ff c0
001eh cmp r8d,ecx                   ; CMP(Cmp_r32_rm32) [R8D,ECX]                          encoding(3 bytes) = 44 3b c1
0021h jl short 0012h                ; JL(Jl_rel8_64) [12h:jmp64]                           encoding(2 bytes) = 7c ef
0023h mov eax,1                     ; MOV(Mov_r32_imm32) [EAX,1h:imm32]                    encoding(5 bytes) = b8 01 00 00 00
0028h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0029h xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
002bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> eqBytes => new byte[44]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x01,0x8B,0x49,0x08,0x45,0x33,0xC0,0x85,0xC9,0x7E,0x11,0x4D,0x63,0xC8,0x42,0x39,0x14,0x88,0x75,0x0E,0x41,0xFF,0xC0,0x44,0x3B,0xC1,0x7C,0xEF,0xB8,0x01,0x00,0x00,0x00,0xC3,0x33,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: int flip(int src)
; location: [7FFC7C0A5530h, 7FFC7C0A5539h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov eax,ecx                   ; MOV(Mov_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 8b c1
0007h not eax                       ; NOT(Not_rm32) [EAX]                                  encoding(2 bytes) = f7 d0
0009h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> flipBytes => new byte[10]{0x0F,0x1F,0x44,0x00,0x00,0x8B,0xC1,0xF7,0xD0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref byte flip(ref byte src)
; location: [7FFC7C0A55D0h, 7FFC7C0A55DAh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h not byte ptr [rcx]            ; NOT(Not_rm8) [mem(8u,RCX:br,DS:sr)]                  encoding(2 bytes) = f6 11
0007h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> flipBytes => new byte[11]{0x0F,0x1F,0x44,0x00,0x00,0xF6,0x11,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref uint flip(ref uint src)
; location: [7FFC7C0A5650h, 7FFC7C0A565Ah]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h not dword ptr [rcx]           ; NOT(Not_rm32) [mem(32u,RCX:br,DS:sr)]                encoding(2 bytes) = f7 11
0007h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> flipBytes => new byte[11]{0x0F,0x1F,0x44,0x00,0x00,0xF7,0x11,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref ulong flip(ref ulong src)
; location: [7FFC7C0A5690h, 7FFC7C0A569Bh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h not qword ptr [rcx]           ; NOT(Not_rm64) [mem(64u,RCX:br,DS:sr)]                encoding(3 bytes) = 48 f7 11
0008h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> flipBytes => new byte[12]{0x0F,0x1F,0x44,0x00,0x00,0x48,0xF7,0x11,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref byte flip(in byte src, ref byte dst)
; location: [7FFC7C0A56E0h, 7FFC7C0A56EFh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,byte ptr [rcx]      ; MOVZX(Movzx_r32_rm8) [EAX,mem(8u,RCX:br,DS:sr)]      encoding(3 bytes) = 0f b6 01
0008h not eax                       ; NOT(Not_rm32) [EAX]                                  encoding(2 bytes) = f7 d0
000ah mov [rdx],al                  ; MOV(Mov_rm8_r8) [mem(8u,RDX:br,DS:sr),AL]            encoding(2 bytes) = 88 02
000ch mov rax,rdx                   ; MOV(Mov_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 8b c2
000fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> flipBytes => new byte[16]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0x01,0xF7,0xD0,0x88,0x02,0x48,0x8B,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref short flip(in short src, ref short dst)
; location: [7FFC7C0A5700h, 7FFC7C0A5711h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,word ptr [rcx]      ; MOVSX(Movsx_r64_rm16) [RAX,mem(16i,RCX:br,DS:sr)]    encoding(4 bytes) = 48 0f bf 01
0009h not eax                       ; NOT(Not_rm32) [EAX]                                  encoding(2 bytes) = f7 d0
000bh mov [rdx],ax                  ; MOV(Mov_rm16_r16) [mem(16u,RDX:br,DS:sr),AX]         encoding(3 bytes) = 66 89 02
000eh mov rax,rdx                   ; MOV(Mov_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 8b c2
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> flipBytes => new byte[18]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBF,0x01,0xF7,0xD0,0x66,0x89,0x02,0x48,0x8B,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref uint flip(in uint src, ref uint dst)
; location: [7FFC7C0A5780h, 7FFC7C0A578Eh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov eax,[rcx]                 ; MOV(Mov_r32_rm32) [EAX,mem(32u,RCX:br,DS:sr)]        encoding(2 bytes) = 8b 01
0007h not eax                       ; NOT(Not_rm32) [EAX]                                  encoding(2 bytes) = f7 d0
0009h mov [rdx],eax                 ; MOV(Mov_rm32_r32) [mem(32u,RDX:br,DS:sr),EAX]        encoding(2 bytes) = 89 02
000bh mov rax,rdx                   ; MOV(Mov_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 8b c2
000eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> flipBytes => new byte[15]{0x0F,0x1F,0x44,0x00,0x00,0x8B,0x01,0xF7,0xD0,0x89,0x02,0x48,0x8B,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref long flip(in long src, ref long dst)
; location: [7FFC7C0A57A0h, 7FFC7C0A57B1h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,[rcx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 01
0008h not rax                       ; NOT(Not_rm64) [RAX]                                  encoding(3 bytes) = 48 f7 d0
000bh mov [rdx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RDX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 02
000eh mov rax,rdx                   ; MOV(Mov_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 8b c2
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> flipBytes => new byte[18]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x01,0x48,0xF7,0xD0,0x48,0x89,0x02,0x48,0x8B,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref ulong flip(in ulong src, ref ulong dst)
; location: [7FFC7C0A57D0h, 7FFC7C0A57E1h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,[rcx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 01
0008h not rax                       ; NOT(Not_rm64) [RAX]                                  encoding(3 bytes) = 48 f7 d0
000bh mov [rdx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RDX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 02
000eh mov rax,rdx                   ; MOV(Mov_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 8b c2
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> flipBytes => new byte[18]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x01,0x48,0xF7,0xD0,0x48,0x89,0x02,0x48,0x8B,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: sbyte fma(sbyte x, sbyte y, sbyte z)
; location: [7FFC7C0A5800h, 7FFC7C0A581Ah]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cl                  ; MOVSX(Movsx_r64_rm8) [RAX,CL]                        encoding(4 bytes) = 48 0f be c1
0009h movsx rdx,dl                  ; MOVSX(Movsx_r64_rm8) [RDX,DL]                        encoding(4 bytes) = 48 0f be d2
000dh imul eax,edx                  ; IMUL(Imul_r32_rm32) [EAX,EDX]                        encoding(3 bytes) = 0f af c2
0010h movsx rdx,r8b                 ; MOVSX(Movsx_r64_rm8) [RDX,R8L]                       encoding(4 bytes) = 49 0f be d0
0014h add eax,edx                   ; ADD(Add_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 03 c2
0016h movsx rax,al                  ; MOVSX(Movsx_r64_rm8) [RAX,AL]                        encoding(4 bytes) = 48 0f be c0
001ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> fmaBytes => new byte[27]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBE,0xC1,0x48,0x0F,0xBE,0xD2,0x0F,0xAF,0xC2,0x49,0x0F,0xBE,0xD0,0x03,0xC2,0x48,0x0F,0xBE,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ushort fma(ushort x, ushort y, ushort z)
; location: [7FFC7C0A5890h, 7FFC7C0A58A7h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cx                  ; MOVZX(Movzx_r32_rm16) [EAX,CX]                       encoding(3 bytes) = 0f b7 c1
0008h movzx edx,dx                  ; MOVZX(Movzx_r32_rm16) [EDX,DX]                       encoding(3 bytes) = 0f b7 d2
000bh imul eax,edx                  ; IMUL(Imul_r32_rm32) [EAX,EDX]                        encoding(3 bytes) = 0f af c2
000eh movzx edx,r8w                 ; MOVZX(Movzx_r32_rm16) [EDX,R8W]                      encoding(4 bytes) = 41 0f b7 d0
0012h add eax,edx                   ; ADD(Add_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 03 c2
0014h movzx eax,ax                  ; MOVZX(Movzx_r32_rm16) [EAX,AX]                       encoding(3 bytes) = 0f b7 c0
0017h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> fmaBytes => new byte[24]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB7,0xC1,0x0F,0xB7,0xD2,0x0F,0xAF,0xC2,0x41,0x0F,0xB7,0xD0,0x03,0xC2,0x0F,0xB7,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: int fma(int x, int y, int z)
; location: [7FFC7C0A58C0h, 7FFC7C0A58CDh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov eax,ecx                   ; MOV(Mov_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 8b c1
0007h imul eax,edx                  ; IMUL(Imul_r32_rm32) [EAX,EDX]                        encoding(3 bytes) = 0f af c2
000ah add eax,r8d                   ; ADD(Add_r32_rm32) [EAX,R8D]                          encoding(3 bytes) = 41 03 c0
000dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> fmaBytes => new byte[14]{0x0F,0x1F,0x44,0x00,0x00,0x8B,0xC1,0x0F,0xAF,0xC2,0x41,0x03,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: uint fma(uint x, uint y, uint z)
; location: [7FFC7C0A58E0h, 7FFC7C0A58EDh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov eax,ecx                   ; MOV(Mov_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 8b c1
0007h imul eax,edx                  ; IMUL(Imul_r32_rm32) [EAX,EDX]                        encoding(3 bytes) = 0f af c2
000ah add eax,r8d                   ; ADD(Add_r32_rm32) [EAX,R8D]                          encoding(3 bytes) = 41 03 c0
000dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> fmaBytes => new byte[14]{0x0F,0x1F,0x44,0x00,0x00,0x8B,0xC1,0x0F,0xAF,0xC2,0x41,0x03,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: long fma(long x, long y, long z)
; location: [7FFC7C0A5900h, 7FFC7C0A590Fh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0008h imul rax,rdx                  ; IMUL(Imul_r64_rm64) [RAX,RDX]                        encoding(4 bytes) = 48 0f af c2
000ch add rax,r8                    ; ADD(Add_r64_rm64) [RAX,R8]                           encoding(3 bytes) = 49 03 c0
000fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> fmaBytes => new byte[16]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0xC1,0x48,0x0F,0xAF,0xC2,0x49,0x03,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: sbyte abs(sbyte src)
; location: [7FFC7C0A5940h, 7FFC7C0A5956h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cl                  ; MOVSX(Movsx_r64_rm8) [RAX,CL]                        encoding(4 bytes) = 48 0f be c1
0009h mov edx,eax                   ; MOV(Mov_r32_rm32) [EDX,EAX]                          encoding(2 bytes) = 8b d0
000bh sar edx,7                     ; SAR(Sar_rm32_imm8) [EDX,7h:imm8]                     encoding(3 bytes) = c1 fa 07
000eh add eax,edx                   ; ADD(Add_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 03 c2
0010h xor eax,edx                   ; XOR(Xor_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 33 c2
0012h movsx rax,al                  ; MOVSX(Movsx_r64_rm8) [RAX,AL]                        encoding(4 bytes) = 48 0f be c0
0016h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> absBytes => new byte[23]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBE,0xC1,0x8B,0xD0,0xC1,0xFA,0x07,0x03,0xC2,0x33,0xC2,0x48,0x0F,0xBE,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: int abs(int src)
; location: [7FFC7C0A59A0h, 7FFC7C0A59AFh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov eax,ecx                   ; MOV(Mov_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 8b c1
0007h sar eax,1Fh                   ; SAR(Sar_rm32_imm8) [EAX,1fh:imm8]                    encoding(3 bytes) = c1 f8 1f
000ah lea edx,[rcx+rax]             ; LEA(Lea_r32_m) [EDX,mem(Unknown,RCX:br,DS:sr)]       encoding(3 bytes) = 8d 14 01
000dh xor eax,edx                   ; XOR(Xor_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 33 c2
000fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> absBytes => new byte[16]{0x0F,0x1F,0x44,0x00,0x00,0x8B,0xC1,0xC1,0xF8,0x1F,0x8D,0x14,0x01,0x33,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: long abs(long src)
; location: [7FFC7C0A59C0h, 7FFC7C0A59D3h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0008h sar rax,3Fh                   ; SAR(Sar_rm64_imm8) [RAX,3fh:imm8]                    encoding(4 bytes) = 48 c1 f8 3f
000ch lea rdx,[rcx+rax]             ; LEA(Lea_r64_m) [RDX,mem(Unknown,RCX:br,DS:sr)]       encoding(4 bytes) = 48 8d 14 01
0010h xor rax,rdx                   ; XOR(Xor_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 33 c2
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> absBytes => new byte[20]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0xC1,0x48,0xC1,0xF8,0x3F,0x48,0x8D,0x14,0x01,0x48,0x33,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: float abs(float src)
; location: [7FFC7C0A5B50h, 7FFC7C0A5B61h]
0000h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0003h xchg ax,ax                    ; NOP(Nopw)                                            encoding(2 bytes) = 66 90
0005h vmovss xmm1,dword ptr [7FFC7C0A5B68h]; VMOVSS(VEX_Vmovss_xmm_m32) [XMM1,mem(Float32,RIP:br,DS:sr)] encoding(VEX, 8 bytes) = c5 fa 10 0d 0b 00 00 00
000dh vandps xmm0,xmm0,xmm1         ; VANDPS(VEX_Vandps_xmm_xmm_xmmm128) [XMM0,XMM0,XMM1]  encoding(VEX, 4 bytes) = c5 f8 54 c1
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> absBytes => new byte[18]{0xC5,0xF8,0x77,0x66,0x90,0xC5,0xFA,0x10,0x0D,0x0B,0x00,0x00,0x00,0xC5,0xF8,0x54,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: double abs(double src)
; location: [7FFC7C0A5B80h, 7FFC7C0A5B91h]
0000h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0003h xchg ax,ax                    ; NOP(Nopw)                                            encoding(2 bytes) = 66 90
0005h vmovsd xmm1,qword ptr [7FFC7C0A5B98h]; VMOVSD(VEX_Vmovsd_xmm_m64) [XMM1,mem(Float64,RIP:br,DS:sr)] encoding(VEX, 8 bytes) = c5 fb 10 0d 0b 00 00 00
000dh vandps xmm0,xmm0,xmm1         ; VANDPS(VEX_Vandps_xmm_xmm_xmmm128) [XMM0,XMM0,XMM1]  encoding(VEX, 4 bytes) = c5 f8 54 c1
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> absBytes => new byte[18]{0xC5,0xF8,0x77,0x66,0x90,0xC5,0xFB,0x10,0x0D,0x0B,0x00,0x00,0x00,0xC5,0xF8,0x54,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref sbyte abs(ref sbyte src)
; location: [7FFC7C0A5BB0h, 7FFC7C0A5BC7h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,byte ptr [rcx]      ; MOVSX(Movsx_r64_rm8) [RAX,mem(8i,RCX:br,DS:sr)]      encoding(4 bytes) = 48 0f be 01
0009h mov edx,eax                   ; MOV(Mov_r32_rm32) [EDX,EAX]                          encoding(2 bytes) = 8b d0
000bh sar edx,7                     ; SAR(Sar_rm32_imm8) [EDX,7h:imm8]                     encoding(3 bytes) = c1 fa 07
000eh add eax,edx                   ; ADD(Add_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 03 c2
0010h xor eax,edx                   ; XOR(Xor_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 33 c2
0012h mov [rcx],al                  ; MOV(Mov_rm8_r8) [mem(8u,RCX:br,DS:sr),AL]            encoding(2 bytes) = 88 01
0014h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0017h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> absBytes => new byte[24]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBE,0x01,0x8B,0xD0,0xC1,0xFA,0x07,0x03,0xC2,0x33,0xC2,0x88,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref short abs(ref short src)
; location: [7FFC7C0A5BE0h, 7FFC7C0A5BF8h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,word ptr [rcx]      ; MOVSX(Movsx_r64_rm16) [RAX,mem(16i,RCX:br,DS:sr)]    encoding(4 bytes) = 48 0f bf 01
0009h mov edx,eax                   ; MOV(Mov_r32_rm32) [EDX,EAX]                          encoding(2 bytes) = 8b d0
000bh sar edx,0Fh                   ; SAR(Sar_rm32_imm8) [EDX,fh:imm8]                     encoding(3 bytes) = c1 fa 0f
000eh add eax,edx                   ; ADD(Add_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 03 c2
0010h xor eax,edx                   ; XOR(Xor_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 33 c2
0012h mov [rcx],ax                  ; MOV(Mov_rm16_r16) [mem(16u,RCX:br,DS:sr),AX]         encoding(3 bytes) = 66 89 01
0015h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0018h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> absBytes => new byte[25]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBF,0x01,0x8B,0xD0,0xC1,0xFA,0x0F,0x03,0xC2,0x33,0xC2,0x66,0x89,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<short> abs(ReadOnlySpan<short> src, Span<short> dst)
; location: [7FFC7C0A5D60h, 7FFC7C0A5E32h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0014h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0017h mov esi,75h                   ; MOV(Mov_r32_imm32) [ESI,75h:imm32]                   encoding(5 bytes) = be 75 00 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
0023h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0026h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0029h jne short 0074h               ; JNE(Jne_rel8_64) [74h:jmp64]                         encoding(2 bytes) = 75 49
002bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
002eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0030h jle short 005fh               ; JLE(Jle_rel8_64) [5Fh:jmp64]                         encoding(2 bytes) = 7e 2d
0032h cmp r10d,r8d                  ; CMP(Cmp_r32_rm32) [R10D,R8D]                         encoding(3 bytes) = 45 3b d0
0035h jae near ptr 00cdh            ; JAE(Jae_rel32_64) [CDh:jmp64]                        encoding(6 bytes) = 0f 83 92 00 00 00
003bh movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
003eh lea rbx,[rax+r11*2]           ; LEA(Lea_r64_m) [RBX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 4a 8d 1c 58
0042h movsx r11,word ptr [r9+r11*2] ; MOVSX(Movsx_r64_rm16) [R11,mem(16i,R9:br,DS:sr)]     encoding(5 bytes) = 4f 0f bf 1c 59
0047h mov ebp,r11d                  ; MOV(Mov_r32_rm32) [EBP,R11D]                         encoding(3 bytes) = 41 8b eb
004ah sar ebp,0Fh                   ; SAR(Sar_rm32_imm8) [EBP,fh:imm8]                     encoding(3 bytes) = c1 fd 0f
004dh add r11d,ebp                  ; ADD(Add_r32_rm32) [R11D,EBP]                         encoding(3 bytes) = 44 03 dd
0050h xor r11d,ebp                  ; XOR(Xor_r32_rm32) [R11D,EBP]                         encoding(3 bytes) = 44 33 dd
0053h mov [rbx],r11w                ; MOV(Mov_rm16_r16) [mem(16u,RBX:br,DS:sr),R11W]       encoding(4 bytes) = 66 44 89 1b
0057h inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
005ah cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
005dh jl short 0032h                ; JL(Jl_rel8_64) [32h:jmp64]                           encoding(2 bytes) = 7c d3
005fh mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0062h mov [rcx+8],r8d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R8D]        encoding(4 bytes) = 44 89 41 08
0066h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0069h add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
006dh pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
006eh pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
006fh pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0070h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0071h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0073h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0074h mov ecx,92Bh                  ; MOV(Mov_r32_imm32) [ECX,92bh:imm32]                  encoding(5 bytes) = b9 2b 09 00 00
0079h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
0083h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC2E0C0h:jmp64]                encoding(5 bytes) = e8 38 e0 c2 5f
0088h mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
008bh mov ecx,933h                  ; MOV(Mov_r32_imm32) [ECX,933h:imm32]                  encoding(5 bytes) = b9 33 09 00 00
0090h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
009ah call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC2E0C0h:jmp64]                encoding(5 bytes) = e8 21 e0 c2 5f
009fh mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00a2h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
00a7h mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00aah mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00aeh mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00b1h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00b3h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00b5h mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00bah mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00bfh call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFE82B8h:jmp64]        encoding(5 bytes) = e8 f4 81 fe ff
00c4h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00c7h call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAE3B30h:jmp64]                encoding(5 bytes) = e8 64 3a ae 5f
00cch int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00cdh call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC2D8E0h:jmp64]                encoding(5 bytes) = e8 0e d8 c2 5f
00d2h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> absBytes => new byte[211]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x00,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0xBE,0x75,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x49,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x2D,0x45,0x3B,0xD0,0x0F,0x83,0x92,0x00,0x00,0x00,0x4D,0x63,0xDA,0x4A,0x8D,0x1C,0x58,0x4F,0x0F,0xBF,0x1C,0x59,0x41,0x8B,0xEB,0xC1,0xFD,0x0F,0x44,0x03,0xDD,0x44,0x33,0xDD,0x66,0x44,0x89,0x1B,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xD3,0x48,0x89,0x01,0x44,0x89,0x41,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x2B,0x09,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x38,0xE0,0xC2,0x5F,0x4C,0x8B,0xF0,0xB9,0x33,0x09,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x21,0xE0,0xC2,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0xF4,0x81,0xFE,0xFF,0x48,0x8B,0xC8,0xE8,0x64,0x3A,0xAE,0x5F,0xCC,0xE8,0x0E,0xD8,0xC2,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<long> abs(ReadOnlySpan<long> src, Span<long> dst)
; location: [7FFC7C0A5F40h, 7FFC7C0A6011h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0014h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0017h mov esi,85h                   ; MOV(Mov_r32_imm32) [ESI,85h:imm32]                   encoding(5 bytes) = be 85 00 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
0023h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0026h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0029h jne short 0073h               ; JNE(Jne_rel8_64) [73h:jmp64]                         encoding(2 bytes) = 75 48
002bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
002eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0030h jle short 005eh               ; JLE(Jle_rel8_64) [5Eh:jmp64]                         encoding(2 bytes) = 7e 2c
0032h cmp r10d,r8d                  ; CMP(Cmp_r32_rm32) [R10D,R8D]                         encoding(3 bytes) = 45 3b d0
0035h jae near ptr 00cch            ; JAE(Jae_rel32_64) [CCh:jmp64]                        encoding(6 bytes) = 0f 83 91 00 00 00
003bh movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
003eh lea rbx,[rax+r11*8]           ; LEA(Lea_r64_m) [RBX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 4a 8d 1c d8
0042h mov r11,[r9+r11*8]            ; MOV(Mov_r64_rm64) [R11,mem(64u,R9:br,DS:sr)]         encoding(4 bytes) = 4f 8b 1c d9
0046h mov rbp,r11                   ; MOV(Mov_r64_rm64) [RBP,R11]                          encoding(3 bytes) = 49 8b eb
0049h sar rbp,3Fh                   ; SAR(Sar_rm64_imm8) [RBP,3fh:imm8]                    encoding(4 bytes) = 48 c1 fd 3f
004dh add r11,rbp                   ; ADD(Add_r64_rm64) [R11,RBP]                          encoding(3 bytes) = 4c 03 dd
0050h xor r11,rbp                   ; XOR(Xor_r64_rm64) [R11,RBP]                          encoding(3 bytes) = 4c 33 dd
0053h mov [rbx],r11                 ; MOV(Mov_rm64_r64) [mem(64u,RBX:br,DS:sr),R11]        encoding(3 bytes) = 4c 89 1b
0056h inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
0059h cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
005ch jl short 0032h                ; JL(Jl_rel8_64) [32h:jmp64]                           encoding(2 bytes) = 7c d4
005eh mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0061h mov [rcx+8],r8d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R8D]        encoding(4 bytes) = 44 89 41 08
0065h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0068h add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
006ch pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
006dh pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
006eh pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
006fh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0070h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0072h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0073h mov ecx,92Bh                  ; MOV(Mov_r32_imm32) [ECX,92bh:imm32]                  encoding(5 bytes) = b9 2b 09 00 00
0078h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
0082h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC2DEE0h:jmp64]                encoding(5 bytes) = e8 59 de c2 5f
0087h mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
008ah mov ecx,933h                  ; MOV(Mov_r32_imm32) [ECX,933h:imm32]                  encoding(5 bytes) = b9 33 09 00 00
008fh mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
0099h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC2DEE0h:jmp64]                encoding(5 bytes) = e8 42 de c2 5f
009eh mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00a1h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
00a6h mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00a9h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00adh mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00b0h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00b2h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00b4h mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00b9h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00beh call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFE80D8h:jmp64]        encoding(5 bytes) = e8 15 80 fe ff
00c3h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00c6h call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAE3950h:jmp64]                encoding(5 bytes) = e8 85 38 ae 5f
00cbh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00cch call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC2D700h:jmp64]                encoding(5 bytes) = e8 2f d6 c2 5f
00d1h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> absBytes => new byte[210]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x00,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0xBE,0x85,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x48,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x2C,0x45,0x3B,0xD0,0x0F,0x83,0x91,0x00,0x00,0x00,0x4D,0x63,0xDA,0x4A,0x8D,0x1C,0xD8,0x4F,0x8B,0x1C,0xD9,0x49,0x8B,0xEB,0x48,0xC1,0xFD,0x3F,0x4C,0x03,0xDD,0x4C,0x33,0xDD,0x4C,0x89,0x1B,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xD4,0x48,0x89,0x01,0x44,0x89,0x41,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x2B,0x09,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x59,0xDE,0xC2,0x5F,0x4C,0x8B,0xF0,0xB9,0x33,0x09,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x42,0xDE,0xC2,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x15,0x80,0xFE,0xFF,0x48,0x8B,0xC8,0xE8,0x85,0x38,0xAE,0x5F,0xCC,0xE8,0x2F,0xD6,0xC2,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<short> abs(Span<short> src)
; location: [7FFC7C0A6080h, 7FFC7C0A60BFh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,[rdx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 02
0008h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
000bh xor r8d,r8d                   ; XOR(Xor_r32_rm32) [R8D,R8D]                          encoding(3 bytes) = 45 33 c0
000eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0010h jle short 0036h               ; JLE(Jle_rel8_64) [36h:jmp64]                         encoding(2 bytes) = 7e 24
0012h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0015h lea r9,[rax+r9*2]             ; LEA(Lea_r64_m) [R9,mem(Unknown,RAX:br,DS:sr)]        encoding(4 bytes) = 4e 8d 0c 48
0019h movsx r10,word ptr [r9]       ; MOVSX(Movsx_r64_rm16) [R10,mem(16i,R9:br,DS:sr)]     encoding(4 bytes) = 4d 0f bf 11
001dh mov r11d,r10d                 ; MOV(Mov_r32_rm32) [R11D,R10D]                        encoding(3 bytes) = 45 8b da
0020h sar r11d,0Fh                  ; SAR(Sar_rm32_imm8) [R11D,fh:imm8]                    encoding(4 bytes) = 41 c1 fb 0f
0024h add r10d,r11d                 ; ADD(Add_r32_rm32) [R10D,R11D]                        encoding(3 bytes) = 45 03 d3
0027h xor r10d,r11d                 ; XOR(Xor_r32_rm32) [R10D,R11D]                        encoding(3 bytes) = 45 33 d3
002ah mov [r9],r10w                 ; MOV(Mov_rm16_r16) [mem(16u,R9:br,DS:sr),R10W]        encoding(4 bytes) = 66 45 89 11
002eh inc r8d                       ; INC(Inc_rm32) [R8D]                                  encoding(3 bytes) = 41 ff c0
0031h cmp r8d,edx                   ; CMP(Cmp_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 3b c2
0034h jl short 0012h                ; JL(Jl_rel8_64) [12h:jmp64]                           encoding(2 bytes) = 7c dc
0036h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0039h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
003ch mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
003fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> absBytes => new byte[64]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x02,0x8B,0x52,0x08,0x45,0x33,0xC0,0x85,0xD2,0x7E,0x24,0x4D,0x63,0xC8,0x4E,0x8D,0x0C,0x48,0x4D,0x0F,0xBF,0x11,0x45,0x8B,0xDA,0x41,0xC1,0xFB,0x0F,0x45,0x03,0xD3,0x45,0x33,0xD3,0x66,0x45,0x89,0x11,0x41,0xFF,0xC0,0x44,0x3B,0xC2,0x7C,0xDC,0x48,0x89,0x01,0x89,0x51,0x08,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<int> abs(Span<int> src)
; location: [7FFC7C0A60D0h, 7FFC7C0A610Dh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,[rdx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 02
0008h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
000bh xor r8d,r8d                   ; XOR(Xor_r32_rm32) [R8D,R8D]                          encoding(3 bytes) = 45 33 c0
000eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0010h jle short 0034h               ; JLE(Jle_rel8_64) [34h:jmp64]                         encoding(2 bytes) = 7e 22
0012h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0015h lea r9,[rax+r9*4]             ; LEA(Lea_r64_m) [R9,mem(Unknown,RAX:br,DS:sr)]        encoding(4 bytes) = 4e 8d 0c 88
0019h mov r10d,[r9]                 ; MOV(Mov_r32_rm32) [R10D,mem(32u,R9:br,DS:sr)]        encoding(3 bytes) = 45 8b 11
001ch mov r11d,r10d                 ; MOV(Mov_r32_rm32) [R11D,R10D]                        encoding(3 bytes) = 45 8b da
001fh sar r11d,1Fh                  ; SAR(Sar_rm32_imm8) [R11D,1fh:imm8]                   encoding(4 bytes) = 41 c1 fb 1f
0023h add r10d,r11d                 ; ADD(Add_r32_rm32) [R10D,R11D]                        encoding(3 bytes) = 45 03 d3
0026h xor r10d,r11d                 ; XOR(Xor_r32_rm32) [R10D,R11D]                        encoding(3 bytes) = 45 33 d3
0029h mov [r9],r10d                 ; MOV(Mov_rm32_r32) [mem(32u,R9:br,DS:sr),R10D]        encoding(3 bytes) = 45 89 11
002ch inc r8d                       ; INC(Inc_rm32) [R8D]                                  encoding(3 bytes) = 41 ff c0
002fh cmp r8d,edx                   ; CMP(Cmp_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 3b c2
0032h jl short 0012h                ; JL(Jl_rel8_64) [12h:jmp64]                           encoding(2 bytes) = 7c de
0034h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0037h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
003ah mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
003dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> absBytes => new byte[62]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x02,0x8B,0x52,0x08,0x45,0x33,0xC0,0x85,0xD2,0x7E,0x22,0x4D,0x63,0xC8,0x4E,0x8D,0x0C,0x88,0x45,0x8B,0x11,0x45,0x8B,0xDA,0x41,0xC1,0xFB,0x1F,0x45,0x03,0xD3,0x45,0x33,0xD3,0x45,0x89,0x11,0x41,0xFF,0xC0,0x44,0x3B,0xC2,0x7C,0xDE,0x48,0x89,0x01,0x89,0x51,0x08,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: sbyte add(sbyte lhs, sbyte rhs)
; location: [7FFC7C0A6170h, 7FFC7C0A6183h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cl                  ; MOVSX(Movsx_r64_rm8) [RAX,CL]                        encoding(4 bytes) = 48 0f be c1
0009h movsx rdx,dl                  ; MOVSX(Movsx_r64_rm8) [RDX,DL]                        encoding(4 bytes) = 48 0f be d2
000dh add eax,edx                   ; ADD(Add_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 03 c2
000fh movsx rax,al                  ; MOVSX(Movsx_r64_rm8) [RAX,AL]                        encoding(4 bytes) = 48 0f be c0
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> addBytes => new byte[20]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBE,0xC1,0x48,0x0F,0xBE,0xD2,0x03,0xC2,0x48,0x0F,0xBE,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: byte add(byte lhs, byte rhs)
; location: [7FFC7C0A61A0h, 7FFC7C0A61B0h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0008h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
000bh add eax,edx                   ; ADD(Add_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 03 c2
000dh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0010h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> addBytes => new byte[17]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC1,0x0F,0xB6,0xD2,0x03,0xC2,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ushort add(ushort lhs, ushort rhs)
; location: [7FFC7C0A6200h, 7FFC7C0A6210h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cx                  ; MOVZX(Movzx_r32_rm16) [EAX,CX]                       encoding(3 bytes) = 0f b7 c1
0008h movzx edx,dx                  ; MOVZX(Movzx_r32_rm16) [EDX,DX]                       encoding(3 bytes) = 0f b7 d2
000bh add eax,edx                   ; ADD(Add_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 03 c2
000dh movzx eax,ax                  ; MOVZX(Movzx_r32_rm16) [EAX,AX]                       encoding(3 bytes) = 0f b7 c0
0010h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> addBytes => new byte[17]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB7,0xC1,0x0F,0xB7,0xD2,0x03,0xC2,0x0F,0xB7,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: int add(int lhs, int rhs)
; location: [7FFC7C0A6230h, 7FFC7C0A6238h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h lea eax,[rcx+rdx]             ; LEA(Lea_r32_m) [EAX,mem(Unknown,RCX:br,DS:sr)]       encoding(3 bytes) = 8d 04 11
0008h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> addBytes => new byte[9]{0x0F,0x1F,0x44,0x00,0x00,0x8D,0x04,0x11,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ulong add(ulong lhs, ulong rhs)
; location: [7FFC7C0A6290h, 7FFC7C0A6299h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h lea rax,[rcx+rdx]             ; LEA(Lea_r64_m) [RAX,mem(Unknown,RCX:br,DS:sr)]       encoding(4 bytes) = 48 8d 04 11
0009h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> addBytes => new byte[10]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8D,0x04,0x11,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref sbyte add(ref sbyte lhs, sbyte rhs)
; location: [7FFC7C0A62B0h, 7FFC7C0A62BEh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,dl                  ; MOVSX(Movsx_r64_rm8) [RAX,DL]                        encoding(4 bytes) = 48 0f be c2
0009h add [rcx],al                  ; ADD(Add_rm8_r8) [mem(8u,RCX:br,DS:sr),AL]            encoding(2 bytes) = 00 01
000bh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> addBytes => new byte[15]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBE,0xC2,0x00,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref byte add(ref byte lhs, byte rhs)
; location: [7FFC7C0A62D0h, 7FFC7C0A62DDh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,dl                  ; MOVZX(Movzx_r32_rm8) [EAX,DL]                        encoding(3 bytes) = 0f b6 c2
0008h add [rcx],al                  ; ADD(Add_rm8_r8) [mem(8u,RCX:br,DS:sr),AL]            encoding(2 bytes) = 00 01
000ah mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> addBytes => new byte[14]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC2,0x00,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref ushort add(ref ushort lhs, ushort rhs)
; location: [7FFC7C0A6310h, 7FFC7C0A631Eh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,dx                  ; MOVZX(Movzx_r32_rm16) [EAX,DX]                       encoding(3 bytes) = 0f b7 c2
0008h add [rcx],ax                  ; ADD(Add_rm16_r16) [mem(16u,RCX:br,DS:sr),AX]         encoding(3 bytes) = 66 01 01
000bh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> addBytes => new byte[15]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB7,0xC2,0x66,0x01,0x01,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref int add(ref int lhs, int rhs)
; location: [7FFC7C0A6330h, 7FFC7C0A633Ah]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h add [rcx],edx                 ; ADD(Add_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(2 bytes) = 01 11
0007h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> addBytes => new byte[11]{0x0F,0x1F,0x44,0x00,0x00,0x01,0x11,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref long add(ref long lhs, long rhs)
; location: [7FFC7C0A6370h, 7FFC7C0A637Bh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h add [rcx],rdx                 ; ADD(Add_rm64_r64) [mem(64u,RCX:br,DS:sr),RDX]        encoding(3 bytes) = 48 01 11
0008h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> addBytes => new byte[12]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x01,0x11,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref ulong add(ref ulong lhs, ulong rhs)
; location: [7FFC7C0A6390h, 7FFC7C0A639Bh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h add [rcx],rdx                 ; ADD(Add_rm64_r64) [mem(64u,RCX:br,DS:sr),RDX]        encoding(3 bytes) = 48 01 11
0008h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> addBytes => new byte[12]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x01,0x11,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ulong add(ulong lhs, ulong rhs, out ulong dst)
; location: [7FFC7C0A64D0h, 7FFC7C0A64DCh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h lea rax,[rcx+rdx]             ; LEA(Lea_r64_m) [RAX,mem(Unknown,RCX:br,DS:sr)]       encoding(4 bytes) = 48 8d 04 11
0009h mov [r8],rax                  ; MOV(Mov_rm64_r64) [mem(64u,R8:br,DS:sr),RAX]         encoding(3 bytes) = 49 89 00
000ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> addBytes => new byte[13]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8D,0x04,0x11,0x49,0x89,0x00,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<sbyte> add(ReadOnlySpan<sbyte> lhs, ReadOnlySpan<sbyte> rhs, Span<sbyte> dst)
; location: [7FFC7C0A64F0h, 7FFC7C0A65C9h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000dh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
0011h mov r10,[r8]                  ; MOV(Mov_r64_rm64) [R10,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 4d 8b 10
0014h mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0018h mov r11,[rdx]                 ; MOV(Mov_r64_rm64) [R11,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 1a
001bh mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
001eh mov esi,8Dh                   ; MOV(Mov_r32_imm32) [ESI,8dh:imm32]                   encoding(5 bytes) = be 8d 00 00 00
0023h mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0028h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
002ah mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
002dh cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0030h jne short 007bh               ; JNE(Jne_rel8_64) [7Bh:jmp64]                         encoding(2 bytes) = 75 49
0032h xor ebx,ebx                   ; XOR(Xor_r32_rm32) [EBX,EBX]                          encoding(2 bytes) = 33 db
0034h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0036h jle short 0066h               ; JLE(Jle_rel8_64) [66h:jmp64]                         encoding(2 bytes) = 7e 2e
0038h cmp ebx,r9d                   ; CMP(Cmp_r32_rm32) [EBX,R9D]                          encoding(3 bytes) = 41 3b d9
003bh jae near ptr 00d4h            ; JAE(Jae_rel32_64) [D4h:jmp64]                        encoding(6 bytes) = 0f 83 93 00 00 00
0041h movsxd rbp,ebx                ; MOVSXD(Movsxd_r64_rm32) [RBP,EBX]                    encoding(3 bytes) = 48 63 eb
0044h lea rdi,[rax+rbp]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 28
0048h movsx rsi,byte ptr [r11+rbp]  ; MOVSX(Movsx_r64_rm8) [RSI,mem(8i,R11:br,DS:sr)]      encoding(5 bytes) = 49 0f be 34 2b
004dh cmp ebx,r8d                   ; CMP(Cmp_r32_rm32) [EBX,R8D]                          encoding(3 bytes) = 41 3b d8
0050h jae near ptr 00d4h            ; JAE(Jae_rel32_64) [D4h:jmp64]                        encoding(6 bytes) = 0f 83 7e 00 00 00
0056h movsx rbp,byte ptr [r10+rbp]  ; MOVSX(Movsx_r64_rm8) [RBP,mem(8i,R10:br,DS:sr)]      encoding(5 bytes) = 49 0f be 2c 2a
005bh add esi,ebp                   ; ADD(Add_r32_rm32) [ESI,EBP]                          encoding(2 bytes) = 03 f5
005dh mov [rdi],sil                 ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),SIL]           encoding(3 bytes) = 40 88 37
0060h inc ebx                       ; INC(Inc_rm32) [EBX]                                  encoding(2 bytes) = ff c3
0062h cmp ebx,edx                   ; CMP(Cmp_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 3b da
0064h jl short 0038h                ; JL(Jl_rel8_64) [38h:jmp64]                           encoding(2 bytes) = 7c d2
0066h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0069h mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
006dh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0070h add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0074h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0075h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0076h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0077h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0078h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
007ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
007bh mov ecx,989h                  ; MOV(Mov_r32_imm32) [ECX,989h:imm32]                  encoding(5 bytes) = b9 89 09 00 00
0080h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
008ah call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC2D930h:jmp64]                encoding(5 bytes) = e8 a1 d8 c2 5f
008fh mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0092h mov ecx,991h                  ; MOV(Mov_r32_imm32) [ECX,991h:imm32]                  encoding(5 bytes) = b9 91 09 00 00
0097h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
00a1h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC2D930h:jmp64]                encoding(5 bytes) = e8 8a d8 c2 5f
00a6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00a9h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
00aeh mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00b1h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00b5h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00b8h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00bah mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00bch mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00c1h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00c6h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFE7B28h:jmp64]        encoding(5 bytes) = e8 5d 7a fe ff
00cbh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00ceh call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAE33A0h:jmp64]                encoding(5 bytes) = e8 cd 32 ae 5f
00d3h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00d4h call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC2D150h:jmp64]                encoding(5 bytes) = e8 77 d0 c2 5f
00d9h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> addBytes => new byte[218]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4D,0x8B,0x10,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x1A,0x8B,0x52,0x08,0xBE,0x8D,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x49,0x33,0xDB,0x85,0xD2,0x7E,0x2E,0x41,0x3B,0xD9,0x0F,0x83,0x93,0x00,0x00,0x00,0x48,0x63,0xEB,0x48,0x8D,0x3C,0x28,0x49,0x0F,0xBE,0x34,0x2B,0x41,0x3B,0xD8,0x0F,0x83,0x7E,0x00,0x00,0x00,0x49,0x0F,0xBE,0x2C,0x2A,0x03,0xF5,0x40,0x88,0x37,0xFF,0xC3,0x3B,0xDA,0x7C,0xD2,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x89,0x09,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xA1,0xD8,0xC2,0x5F,0x4C,0x8B,0xF0,0xB9,0x91,0x09,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x8A,0xD8,0xC2,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x5D,0x7A,0xFE,0xFF,0x48,0x8B,0xC8,0xE8,0xCD,0x32,0xAE,0x5F,0xCC,0xE8,0x77,0xD0,0xC2,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<byte> add(ReadOnlySpan<byte> lhs, ReadOnlySpan<byte> rhs, Span<byte> dst)
; location: [7FFC7C0A65F0h, 7FFC7C0A66C6h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000dh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
0011h mov r10,[r8]                  ; MOV(Mov_r64_rm64) [R10,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 4d 8b 10
0014h mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0018h mov r11,[rdx]                 ; MOV(Mov_r64_rm64) [R11,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 1a
001bh mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
001eh mov esi,95h                   ; MOV(Mov_r32_imm32) [ESI,95h:imm32]                   encoding(5 bytes) = be 95 00 00 00
0023h mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0028h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
002ah mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
002dh cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0030h jne short 0078h               ; JNE(Jne_rel8_64) [78h:jmp64]                         encoding(2 bytes) = 75 46
0032h xor ebx,ebx                   ; XOR(Xor_r32_rm32) [EBX,EBX]                          encoding(2 bytes) = 33 db
0034h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0036h jle short 0063h               ; JLE(Jle_rel8_64) [63h:jmp64]                         encoding(2 bytes) = 7e 2b
0038h cmp ebx,r9d                   ; CMP(Cmp_r32_rm32) [EBX,R9D]                          encoding(3 bytes) = 41 3b d9
003bh jae near ptr 00d1h            ; JAE(Jae_rel32_64) [D1h:jmp64]                        encoding(6 bytes) = 0f 83 90 00 00 00
0041h movsxd rbp,ebx                ; MOVSXD(Movsxd_r64_rm32) [RBP,EBX]                    encoding(3 bytes) = 48 63 eb
0044h movzx edi,byte ptr [r11+rbp]  ; MOVZX(Movzx_r32_rm8) [EDI,mem(8u,R11:br,DS:sr)]      encoding(5 bytes) = 41 0f b6 3c 2b
0049h cmp ebx,r8d                   ; CMP(Cmp_r32_rm32) [EBX,R8D]                          encoding(3 bytes) = 41 3b d8
004ch jae near ptr 00d1h            ; JAE(Jae_rel32_64) [D1h:jmp64]                        encoding(6 bytes) = 0f 83 7f 00 00 00
0052h movzx esi,byte ptr [r10+rbp]  ; MOVZX(Movzx_r32_rm8) [ESI,mem(8u,R10:br,DS:sr)]      encoding(5 bytes) = 41 0f b6 34 2a
0057h add esi,edi                   ; ADD(Add_r32_rm32) [ESI,EDI]                          encoding(2 bytes) = 03 f7
0059h mov [rax+rbp],sil             ; MOV(Mov_rm8_r8) [mem(8u,RAX:br,DS:sr),SIL]           encoding(4 bytes) = 40 88 34 28
005dh inc ebx                       ; INC(Inc_rm32) [EBX]                                  encoding(2 bytes) = ff c3
005fh cmp ebx,edx                   ; CMP(Cmp_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 3b da
0061h jl short 0038h                ; JL(Jl_rel8_64) [38h:jmp64]                           encoding(2 bytes) = 7c d5
0063h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0066h mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
006ah mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
006dh add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0071h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0072h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0073h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0074h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0075h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0077h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0078h mov ecx,989h                  ; MOV(Mov_r32_imm32) [ECX,989h:imm32]                  encoding(5 bytes) = b9 89 09 00 00
007dh mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
0087h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC2D830h:jmp64]                encoding(5 bytes) = e8 a4 d7 c2 5f
008ch mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
008fh mov ecx,991h                  ; MOV(Mov_r32_imm32) [ECX,991h:imm32]                  encoding(5 bytes) = b9 91 09 00 00
0094h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
009eh call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC2D830h:jmp64]                encoding(5 bytes) = e8 8d d7 c2 5f
00a3h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00a6h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
00abh mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00aeh mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00b2h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00b5h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00b7h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00b9h mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00beh mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00c3h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFE7A28h:jmp64]        encoding(5 bytes) = e8 60 79 fe ff
00c8h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00cbh call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAE32A0h:jmp64]                encoding(5 bytes) = e8 d0 31 ae 5f
00d0h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00d1h call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC2D050h:jmp64]                encoding(5 bytes) = e8 7a cf c2 5f
00d6h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> addBytes => new byte[215]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4D,0x8B,0x10,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x1A,0x8B,0x52,0x08,0xBE,0x95,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x46,0x33,0xDB,0x85,0xD2,0x7E,0x2B,0x41,0x3B,0xD9,0x0F,0x83,0x90,0x00,0x00,0x00,0x48,0x63,0xEB,0x41,0x0F,0xB6,0x3C,0x2B,0x41,0x3B,0xD8,0x0F,0x83,0x7F,0x00,0x00,0x00,0x41,0x0F,0xB6,0x34,0x2A,0x03,0xF7,0x40,0x88,0x34,0x28,0xFF,0xC3,0x3B,0xDA,0x7C,0xD5,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x89,0x09,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xA4,0xD7,0xC2,0x5F,0x4C,0x8B,0xF0,0xB9,0x91,0x09,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x8D,0xD7,0xC2,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x60,0x79,0xFE,0xFF,0x48,0x8B,0xC8,0xE8,0xD0,0x31,0xAE,0x5F,0xCC,0xE8,0x7A,0xCF,0xC2,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<short> add(ReadOnlySpan<short> lhs, ReadOnlySpan<short> rhs, Span<short> dst)
; location: [7FFC7C0A66F0h, 7FFC7C0A67C9h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000dh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
0011h mov r10,[r8]                  ; MOV(Mov_r64_rm64) [R10,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 4d 8b 10
0014h mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0018h mov r11,[rdx]                 ; MOV(Mov_r64_rm64) [R11,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 1a
001bh mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
001eh mov esi,9Dh                   ; MOV(Mov_r32_imm32) [ESI,9dh:imm32]                   encoding(5 bytes) = be 9d 00 00 00
0023h mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0028h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
002ah mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
002dh cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0030h jne short 007bh               ; JNE(Jne_rel8_64) [7Bh:jmp64]                         encoding(2 bytes) = 75 49
0032h xor ebx,ebx                   ; XOR(Xor_r32_rm32) [EBX,EBX]                          encoding(2 bytes) = 33 db
0034h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0036h jle short 0066h               ; JLE(Jle_rel8_64) [66h:jmp64]                         encoding(2 bytes) = 7e 2e
0038h cmp ebx,r9d                   ; CMP(Cmp_r32_rm32) [EBX,R9D]                          encoding(3 bytes) = 41 3b d9
003bh jae near ptr 00d4h            ; JAE(Jae_rel32_64) [D4h:jmp64]                        encoding(6 bytes) = 0f 83 93 00 00 00
0041h movsxd rbp,ebx                ; MOVSXD(Movsxd_r64_rm32) [RBP,EBX]                    encoding(3 bytes) = 48 63 eb
0044h lea rdi,[rax+rbp*2]           ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c 68
0048h movsx rsi,word ptr [r11+rbp*2]; MOVSX(Movsx_r64_rm16) [RSI,mem(16i,R11:br,DS:sr)]    encoding(5 bytes) = 49 0f bf 34 6b
004dh cmp ebx,r8d                   ; CMP(Cmp_r32_rm32) [EBX,R8D]                          encoding(3 bytes) = 41 3b d8
0050h jae near ptr 00d4h            ; JAE(Jae_rel32_64) [D4h:jmp64]                        encoding(6 bytes) = 0f 83 7e 00 00 00
0056h movsx rbp,word ptr [r10+rbp*2]; MOVSX(Movsx_r64_rm16) [RBP,mem(16i,R10:br,DS:sr)]    encoding(5 bytes) = 49 0f bf 2c 6a
005bh add esi,ebp                   ; ADD(Add_r32_rm32) [ESI,EBP]                          encoding(2 bytes) = 03 f5
005dh mov [rdi],si                  ; MOV(Mov_rm16_r16) [mem(16u,RDI:br,DS:sr),SI]         encoding(3 bytes) = 66 89 37
0060h inc ebx                       ; INC(Inc_rm32) [EBX]                                  encoding(2 bytes) = ff c3
0062h cmp ebx,edx                   ; CMP(Cmp_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 3b da
0064h jl short 0038h                ; JL(Jl_rel8_64) [38h:jmp64]                           encoding(2 bytes) = 7c d2
0066h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0069h mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
006dh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0070h add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0074h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0075h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0076h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0077h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0078h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
007ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
007bh mov ecx,989h                  ; MOV(Mov_r32_imm32) [ECX,989h:imm32]                  encoding(5 bytes) = b9 89 09 00 00
0080h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
008ah call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC2D730h:jmp64]                encoding(5 bytes) = e8 a1 d6 c2 5f
008fh mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0092h mov ecx,991h                  ; MOV(Mov_r32_imm32) [ECX,991h:imm32]                  encoding(5 bytes) = b9 91 09 00 00
0097h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
00a1h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC2D730h:jmp64]                encoding(5 bytes) = e8 8a d6 c2 5f
00a6h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00a9h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
00aeh mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00b1h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00b5h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00b8h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00bah mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00bch mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00c1h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00c6h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFE7928h:jmp64]        encoding(5 bytes) = e8 5d 78 fe ff
00cbh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00ceh call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAE31A0h:jmp64]                encoding(5 bytes) = e8 cd 30 ae 5f
00d3h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00d4h call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC2CF50h:jmp64]                encoding(5 bytes) = e8 77 ce c2 5f
00d9h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> addBytes => new byte[218]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4D,0x8B,0x10,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x1A,0x8B,0x52,0x08,0xBE,0x9D,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x49,0x33,0xDB,0x85,0xD2,0x7E,0x2E,0x41,0x3B,0xD9,0x0F,0x83,0x93,0x00,0x00,0x00,0x48,0x63,0xEB,0x48,0x8D,0x3C,0x68,0x49,0x0F,0xBF,0x34,0x6B,0x41,0x3B,0xD8,0x0F,0x83,0x7E,0x00,0x00,0x00,0x49,0x0F,0xBF,0x2C,0x6A,0x03,0xF5,0x66,0x89,0x37,0xFF,0xC3,0x3B,0xDA,0x7C,0xD2,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x89,0x09,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xA1,0xD6,0xC2,0x5F,0x4C,0x8B,0xF0,0xB9,0x91,0x09,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x8A,0xD6,0xC2,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x5D,0x78,0xFE,0xFF,0x48,0x8B,0xC8,0xE8,0xCD,0x30,0xAE,0x5F,0xCC,0xE8,0x77,0xCE,0xC2,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<int> add(ReadOnlySpan<int> lhs, ReadOnlySpan<int> rhs, Span<int> dst)
; location: [7FFC7C0A68F0h, 7FFC7C0A69C6h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000dh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
0011h mov r10,[r8]                  ; MOV(Mov_r64_rm64) [R10,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 4d 8b 10
0014h mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0018h mov r11,[rdx]                 ; MOV(Mov_r64_rm64) [R11,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 1a
001bh mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
001eh mov esi,0ADh                  ; MOV(Mov_r32_imm32) [ESI,adh:imm32]                   encoding(5 bytes) = be ad 00 00 00
0023h mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0028h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
002ah mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
002dh cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0030h jne short 0078h               ; JNE(Jne_rel8_64) [78h:jmp64]                         encoding(2 bytes) = 75 46
0032h xor ebx,ebx                   ; XOR(Xor_r32_rm32) [EBX,EBX]                          encoding(2 bytes) = 33 db
0034h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0036h jle short 0063h               ; JLE(Jle_rel8_64) [63h:jmp64]                         encoding(2 bytes) = 7e 2b
0038h cmp ebx,r9d                   ; CMP(Cmp_r32_rm32) [EBX,R9D]                          encoding(3 bytes) = 41 3b d9
003bh jae near ptr 00d1h            ; JAE(Jae_rel32_64) [D1h:jmp64]                        encoding(6 bytes) = 0f 83 90 00 00 00
0041h movsxd rbp,ebx                ; MOVSXD(Movsxd_r64_rm32) [RBP,EBX]                    encoding(3 bytes) = 48 63 eb
0044h lea rdi,[rax+rbp*4]           ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c a8
0048h mov esi,[r11+rbp*4]           ; MOV(Mov_r32_rm32) [ESI,mem(32u,R11:br,DS:sr)]        encoding(4 bytes) = 41 8b 34 ab
004ch cmp ebx,r8d                   ; CMP(Cmp_r32_rm32) [EBX,R8D]                          encoding(3 bytes) = 41 3b d8
004fh jae near ptr 00d1h            ; JAE(Jae_rel32_64) [D1h:jmp64]                        encoding(6 bytes) = 0f 83 7c 00 00 00
0055h mov ebp,[r10+rbp*4]           ; MOV(Mov_r32_rm32) [EBP,mem(32u,R10:br,DS:sr)]        encoding(4 bytes) = 41 8b 2c aa
0059h add esi,ebp                   ; ADD(Add_r32_rm32) [ESI,EBP]                          encoding(2 bytes) = 03 f5
005bh mov [rdi],esi                 ; MOV(Mov_rm32_r32) [mem(32u,RDI:br,DS:sr),ESI]        encoding(2 bytes) = 89 37
005dh inc ebx                       ; INC(Inc_rm32) [EBX]                                  encoding(2 bytes) = ff c3
005fh cmp ebx,edx                   ; CMP(Cmp_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 3b da
0061h jl short 0038h                ; JL(Jl_rel8_64) [38h:jmp64]                           encoding(2 bytes) = 7c d5
0063h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0066h mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
006ah mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
006dh add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0071h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0072h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0073h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0074h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0075h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0077h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0078h mov ecx,989h                  ; MOV(Mov_r32_imm32) [ECX,989h:imm32]                  encoding(5 bytes) = b9 89 09 00 00
007dh mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
0087h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC2D530h:jmp64]                encoding(5 bytes) = e8 a4 d4 c2 5f
008ch mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
008fh mov ecx,991h                  ; MOV(Mov_r32_imm32) [ECX,991h:imm32]                  encoding(5 bytes) = b9 91 09 00 00
0094h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
009eh call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC2D530h:jmp64]                encoding(5 bytes) = e8 8d d4 c2 5f
00a3h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00a6h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
00abh mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00aeh mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00b2h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00b5h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00b7h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00b9h mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00beh mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00c3h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFE7728h:jmp64]        encoding(5 bytes) = e8 60 76 fe ff
00c8h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00cbh call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAE2FA0h:jmp64]                encoding(5 bytes) = e8 d0 2e ae 5f
00d0h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00d1h call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC2CD50h:jmp64]                encoding(5 bytes) = e8 7a cc c2 5f
00d6h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> addBytes => new byte[215]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4D,0x8B,0x10,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x1A,0x8B,0x52,0x08,0xBE,0xAD,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x46,0x33,0xDB,0x85,0xD2,0x7E,0x2B,0x41,0x3B,0xD9,0x0F,0x83,0x90,0x00,0x00,0x00,0x48,0x63,0xEB,0x48,0x8D,0x3C,0xA8,0x41,0x8B,0x34,0xAB,0x41,0x3B,0xD8,0x0F,0x83,0x7C,0x00,0x00,0x00,0x41,0x8B,0x2C,0xAA,0x03,0xF5,0x89,0x37,0xFF,0xC3,0x3B,0xDA,0x7C,0xD5,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x89,0x09,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xA4,0xD4,0xC2,0x5F,0x4C,0x8B,0xF0,0xB9,0x91,0x09,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x8D,0xD4,0xC2,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x60,0x76,0xFE,0xFF,0x48,0x8B,0xC8,0xE8,0xD0,0x2E,0xAE,0x5F,0xCC,0xE8,0x7A,0xCC,0xC2,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<ulong> add(ReadOnlySpan<ulong> lhs, ReadOnlySpan<ulong> rhs, Span<ulong> dst)
; location: [7FFC7C0A6BF0h, 7FFC7C0A6CC8h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
000dh mov r9d,[r9+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R9:br,DS:sr)]         encoding(4 bytes) = 45 8b 49 08
0011h mov r10,[r8]                  ; MOV(Mov_r64_rm64) [R10,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 4d 8b 10
0014h mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0018h mov r11,[rdx]                 ; MOV(Mov_r64_rm64) [R11,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 1a
001bh mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
001eh mov esi,0C5h                  ; MOV(Mov_r32_imm32) [ESI,c5h:imm32]                   encoding(5 bytes) = be c5 00 00 00
0023h mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0028h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
002ah mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
002dh cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0030h jne short 007ah               ; JNE(Jne_rel8_64) [7Ah:jmp64]                         encoding(2 bytes) = 75 48
0032h xor ebx,ebx                   ; XOR(Xor_r32_rm32) [EBX,EBX]                          encoding(2 bytes) = 33 db
0034h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0036h jle short 0065h               ; JLE(Jle_rel8_64) [65h:jmp64]                         encoding(2 bytes) = 7e 2d
0038h cmp ebx,r9d                   ; CMP(Cmp_r32_rm32) [EBX,R9D]                          encoding(3 bytes) = 41 3b d9
003bh jae near ptr 00d3h            ; JAE(Jae_rel32_64) [D3h:jmp64]                        encoding(6 bytes) = 0f 83 92 00 00 00
0041h movsxd rbp,ebx                ; MOVSXD(Movsxd_r64_rm32) [RBP,EBX]                    encoding(3 bytes) = 48 63 eb
0044h lea rdi,[rax+rbp*8]           ; LEA(Lea_r64_m) [RDI,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 3c e8
0048h mov rsi,[r11+rbp*8]           ; MOV(Mov_r64_rm64) [RSI,mem(64u,R11:br,DS:sr)]        encoding(4 bytes) = 49 8b 34 eb
004ch cmp ebx,r8d                   ; CMP(Cmp_r32_rm32) [EBX,R8D]                          encoding(3 bytes) = 41 3b d8
004fh jae near ptr 00d3h            ; JAE(Jae_rel32_64) [D3h:jmp64]                        encoding(6 bytes) = 0f 83 7e 00 00 00
0055h mov rbp,[r10+rbp*8]           ; MOV(Mov_r64_rm64) [RBP,mem(64u,R10:br,DS:sr)]        encoding(4 bytes) = 49 8b 2c ea
0059h add rsi,rbp                   ; ADD(Add_r64_rm64) [RSI,RBP]                          encoding(3 bytes) = 48 03 f5
005ch mov [rdi],rsi                 ; MOV(Mov_rm64_r64) [mem(64u,RDI:br,DS:sr),RSI]        encoding(3 bytes) = 48 89 37
005fh inc ebx                       ; INC(Inc_rm32) [EBX]                                  encoding(2 bytes) = ff c3
0061h cmp ebx,edx                   ; CMP(Cmp_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 3b da
0063h jl short 0038h                ; JL(Jl_rel8_64) [38h:jmp64]                           encoding(2 bytes) = 7c d3
0065h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0068h mov [rcx+8],r9d               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),R9D]        encoding(4 bytes) = 44 89 49 08
006ch mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
006fh add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0073h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0074h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0075h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0076h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0077h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0079h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
007ah mov ecx,989h                  ; MOV(Mov_r32_imm32) [ECX,989h:imm32]                  encoding(5 bytes) = b9 89 09 00 00
007fh mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
0089h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC2D230h:jmp64]                encoding(5 bytes) = e8 a2 d1 c2 5f
008eh mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
0091h mov ecx,991h                  ; MOV(Mov_r32_imm32) [ECX,991h:imm32]                  encoding(5 bytes) = b9 91 09 00 00
0096h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
00a0h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC2D230h:jmp64]                encoding(5 bytes) = e8 8b d1 c2 5f
00a5h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00a8h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
00adh mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00b0h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00b4h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00b7h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00b9h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00bbh mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00c0h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00c5h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFE7428h:jmp64]        encoding(5 bytes) = e8 5e 73 fe ff
00cah mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00cdh call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAE2CA0h:jmp64]                encoding(5 bytes) = e8 ce 2b ae 5f
00d2h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00d3h call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC2CA50h:jmp64]                encoding(5 bytes) = e8 78 c9 c2 5f
00d8h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> addBytes => new byte[217]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x01,0x45,0x8B,0x49,0x08,0x4D,0x8B,0x10,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x1A,0x8B,0x52,0x08,0xBE,0xC5,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x48,0x33,0xDB,0x85,0xD2,0x7E,0x2D,0x41,0x3B,0xD9,0x0F,0x83,0x92,0x00,0x00,0x00,0x48,0x63,0xEB,0x48,0x8D,0x3C,0xE8,0x49,0x8B,0x34,0xEB,0x41,0x3B,0xD8,0x0F,0x83,0x7E,0x00,0x00,0x00,0x49,0x8B,0x2C,0xEA,0x48,0x03,0xF5,0x48,0x89,0x37,0xFF,0xC3,0x3B,0xDA,0x7C,0xD3,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x89,0x09,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xA2,0xD1,0xC2,0x5F,0x4C,0x8B,0xF0,0xB9,0x91,0x09,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x8B,0xD1,0xC2,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x5E,0x73,0xFE,0xFF,0x48,0x8B,0xC8,0xE8,0xCE,0x2B,0xAE,0x5F,0xCC,0xE8,0x78,0xC9,0xC2,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<sbyte> add(Span<sbyte> lhs, ReadOnlySpan<sbyte> rhs)
; location: [7FFC7C0A6CF0h, 7FFC7C0A6DB4h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0014h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0017h mov esi,0CDh                  ; MOV(Mov_r32_imm32) [ESI,cdh:imm32]                   encoding(5 bytes) = be cd 00 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
0023h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0026h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0029h jne short 0066h               ; JNE(Jne_rel8_64) [66h:jmp64]                         encoding(2 bytes) = 75 3b
002bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
002eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0030h jle short 0052h               ; JLE(Jle_rel8_64) [52h:jmp64]                         encoding(2 bytes) = 7e 20
0032h movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
0035h lea rbx,[r9+r11]              ; LEA(Lea_r64_m) [RBX,mem(Unknown,R9:br,DS:sr)]        encoding(4 bytes) = 4b 8d 1c 19
0039h cmp r10d,r8d                  ; CMP(Cmp_r32_rm32) [R10D,R8D]                         encoding(3 bytes) = 45 3b d0
003ch jae near ptr 00bfh            ; JAE(Jae_rel32_64) [BFh:jmp64]                        encoding(6 bytes) = 0f 83 7d 00 00 00
0042h movsx r11,byte ptr [rax+r11]  ; MOVSX(Movsx_r64_rm8) [R11,mem(8i,RAX:br,DS:sr)]      encoding(5 bytes) = 4e 0f be 1c 18
0047h add [rbx],r11b                ; ADD(Add_rm8_r8) [mem(8u,RBX:br,DS:sr),R11L]          encoding(3 bytes) = 44 00 1b
004ah inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
004dh cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
0050h jl short 0032h                ; JL(Jl_rel8_64) [32h:jmp64]                           encoding(2 bytes) = 7c e0
0052h mov [rcx],r9                  ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R9]         encoding(3 bytes) = 4c 89 09
0055h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
0058h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
005bh add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
005fh pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0060h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0061h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0062h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0063h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0065h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0066h mov ecx,989h                  ; MOV(Mov_r32_imm32) [ECX,989h:imm32]                  encoding(5 bytes) = b9 89 09 00 00
006bh mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
0075h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC2D130h:jmp64]                encoding(5 bytes) = e8 b6 d0 c2 5f
007ah mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
007dh mov ecx,991h                  ; MOV(Mov_r32_imm32) [ECX,991h:imm32]                  encoding(5 bytes) = b9 91 09 00 00
0082h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
008ch call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC2D130h:jmp64]                encoding(5 bytes) = e8 9f d0 c2 5f
0091h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
0094h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
0099h mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
009ch mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00a0h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00a3h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00a5h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00a7h mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00ach mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b1h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFE7328h:jmp64]        encoding(5 bytes) = e8 72 72 fe ff
00b6h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00b9h call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAE2BA0h:jmp64]                encoding(5 bytes) = e8 e2 2a ae 5f
00beh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00bfh call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC2C950h:jmp64]                encoding(5 bytes) = e8 8c c8 c2 5f
00c4h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> addBytes => new byte[197]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x00,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0xBE,0xCD,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x3B,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x20,0x4D,0x63,0xDA,0x4B,0x8D,0x1C,0x19,0x45,0x3B,0xD0,0x0F,0x83,0x7D,0x00,0x00,0x00,0x4E,0x0F,0xBE,0x1C,0x18,0x44,0x00,0x1B,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xE0,0x4C,0x89,0x09,0x89,0x51,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x89,0x09,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xB6,0xD0,0xC2,0x5F,0x4C,0x8B,0xF0,0xB9,0x91,0x09,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x9F,0xD0,0xC2,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x72,0x72,0xFE,0xFF,0x48,0x8B,0xC8,0xE8,0xE2,0x2A,0xAE,0x5F,0xCC,0xE8,0x8C,0xC8,0xC2,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<ushort> add(Span<ushort> lhs, ReadOnlySpan<ushort> rhs)
; location: [7FFC7C0A6FC0h, 7FFC7C0A7085h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0014h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0017h mov esi,0E5h                  ; MOV(Mov_r32_imm32) [ESI,e5h:imm32]                   encoding(5 bytes) = be e5 00 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
0023h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0026h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0029h jne short 0067h               ; JNE(Jne_rel8_64) [67h:jmp64]                         encoding(2 bytes) = 75 3c
002bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
002eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0030h jle short 0053h               ; JLE(Jle_rel8_64) [53h:jmp64]                         encoding(2 bytes) = 7e 21
0032h movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
0035h lea rbx,[r9+r11*2]            ; LEA(Lea_r64_m) [RBX,mem(Unknown,R9:br,DS:sr)]        encoding(4 bytes) = 4b 8d 1c 59
0039h cmp r10d,r8d                  ; CMP(Cmp_r32_rm32) [R10D,R8D]                         encoding(3 bytes) = 45 3b d0
003ch jae near ptr 00c0h            ; JAE(Jae_rel32_64) [C0h:jmp64]                        encoding(6 bytes) = 0f 83 7e 00 00 00
0042h movzx r11d,word ptr [rax+r11*2]; MOVZX(Movzx_r32_rm16) [R11D,mem(16u,RAX:br,DS:sr)]  encoding(5 bytes) = 46 0f b7 1c 58
0047h add [rbx],r11w                ; ADD(Add_rm16_r16) [mem(16u,RBX:br,DS:sr),R11W]       encoding(4 bytes) = 66 44 01 1b
004bh inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
004eh cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
0051h jl short 0032h                ; JL(Jl_rel8_64) [32h:jmp64]                           encoding(2 bytes) = 7c df
0053h mov [rcx],r9                  ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R9]         encoding(3 bytes) = 4c 89 09
0056h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
0059h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
005ch add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0060h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0061h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0062h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0063h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0064h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0066h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0067h mov ecx,989h                  ; MOV(Mov_r32_imm32) [ECX,989h:imm32]                  encoding(5 bytes) = b9 89 09 00 00
006ch mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
0076h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC2CE60h:jmp64]                encoding(5 bytes) = e8 e5 cd c2 5f
007bh mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
007eh mov ecx,991h                  ; MOV(Mov_r32_imm32) [ECX,991h:imm32]                  encoding(5 bytes) = b9 91 09 00 00
0083h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
008dh call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC2CE60h:jmp64]                encoding(5 bytes) = e8 ce cd c2 5f
0092h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
0095h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
009ah mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
009dh mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00a1h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00a4h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00a6h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00a8h mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00adh mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b2h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFE7058h:jmp64]        encoding(5 bytes) = e8 a1 6f fe ff
00b7h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00bah call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAE28D0h:jmp64]                encoding(5 bytes) = e8 11 28 ae 5f
00bfh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00c0h call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC2C680h:jmp64]                encoding(5 bytes) = e8 bb c5 c2 5f
00c5h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> addBytes => new byte[198]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x00,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0xBE,0xE5,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x3C,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x21,0x4D,0x63,0xDA,0x4B,0x8D,0x1C,0x59,0x45,0x3B,0xD0,0x0F,0x83,0x7E,0x00,0x00,0x00,0x46,0x0F,0xB7,0x1C,0x58,0x66,0x44,0x01,0x1B,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xDF,0x4C,0x89,0x09,0x89,0x51,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x89,0x09,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xE5,0xCD,0xC2,0x5F,0x4C,0x8B,0xF0,0xB9,0x91,0x09,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xCE,0xCD,0xC2,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0xA1,0x6F,0xFE,0xFF,0x48,0x8B,0xC8,0xE8,0x11,0x28,0xAE,0x5F,0xCC,0xE8,0xBB,0xC5,0xC2,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<int> add(Span<int> lhs, ReadOnlySpan<int> rhs)
; location: [7FFC7C0A70B0h, 7FFC7C0A7173h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0014h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0017h mov esi,0EDh                  ; MOV(Mov_r32_imm32) [ESI,edh:imm32]                   encoding(5 bytes) = be ed 00 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
0023h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0026h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0029h jne short 0065h               ; JNE(Jne_rel8_64) [65h:jmp64]                         encoding(2 bytes) = 75 3a
002bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
002eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0030h jle short 0051h               ; JLE(Jle_rel8_64) [51h:jmp64]                         encoding(2 bytes) = 7e 1f
0032h movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
0035h lea rbx,[r9+r11*4]            ; LEA(Lea_r64_m) [RBX,mem(Unknown,R9:br,DS:sr)]        encoding(4 bytes) = 4b 8d 1c 99
0039h cmp r10d,r8d                  ; CMP(Cmp_r32_rm32) [R10D,R8D]                         encoding(3 bytes) = 45 3b d0
003ch jae near ptr 00beh            ; JAE(Jae_rel32_64) [BEh:jmp64]                        encoding(6 bytes) = 0f 83 7c 00 00 00
0042h mov r11d,[rax+r11*4]          ; MOV(Mov_r32_rm32) [R11D,mem(32u,RAX:br,DS:sr)]       encoding(4 bytes) = 46 8b 1c 98
0046h add [rbx],r11d                ; ADD(Add_rm32_r32) [mem(32u,RBX:br,DS:sr),R11D]       encoding(3 bytes) = 44 01 1b
0049h inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
004ch cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
004fh jl short 0032h                ; JL(Jl_rel8_64) [32h:jmp64]                           encoding(2 bytes) = 7c e1
0051h mov [rcx],r9                  ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R9]         encoding(3 bytes) = 4c 89 09
0054h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
0057h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
005ah add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
005eh pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
005fh pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0060h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0061h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0062h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0064h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0065h mov ecx,989h                  ; MOV(Mov_r32_imm32) [ECX,989h:imm32]                  encoding(5 bytes) = b9 89 09 00 00
006ah mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
0074h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC2CD70h:jmp64]                encoding(5 bytes) = e8 f7 cc c2 5f
0079h mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
007ch mov ecx,991h                  ; MOV(Mov_r32_imm32) [ECX,991h:imm32]                  encoding(5 bytes) = b9 91 09 00 00
0081h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
008bh call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC2CD70h:jmp64]                encoding(5 bytes) = e8 e0 cc c2 5f
0090h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
0093h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
0098h mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
009bh mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
009fh mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00a2h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00a4h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00a6h mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00abh mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b0h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFE6F68h:jmp64]        encoding(5 bytes) = e8 b3 6e fe ff
00b5h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00b8h call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAE27E0h:jmp64]                encoding(5 bytes) = e8 23 27 ae 5f
00bdh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00beh call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC2C590h:jmp64]                encoding(5 bytes) = e8 cd c4 c2 5f
00c3h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> addBytes => new byte[196]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x00,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0xBE,0xED,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x3A,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x1F,0x4D,0x63,0xDA,0x4B,0x8D,0x1C,0x99,0x45,0x3B,0xD0,0x0F,0x83,0x7C,0x00,0x00,0x00,0x46,0x8B,0x1C,0x98,0x44,0x01,0x1B,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xE1,0x4C,0x89,0x09,0x89,0x51,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x89,0x09,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xF7,0xCC,0xC2,0x5F,0x4C,0x8B,0xF0,0xB9,0x91,0x09,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xE0,0xCC,0xC2,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0xB3,0x6E,0xFE,0xFF,0x48,0x8B,0xC8,0xE8,0x23,0x27,0xAE,0x5F,0xCC,0xE8,0xCD,0xC4,0xC2,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<uint> add(Span<uint> lhs, ReadOnlySpan<uint> rhs)
; location: [7FFC7C0A7190h, 7FFC7C0A7253h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0014h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0017h mov esi,0F5h                  ; MOV(Mov_r32_imm32) [ESI,f5h:imm32]                   encoding(5 bytes) = be f5 00 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
0023h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0026h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0029h jne short 0065h               ; JNE(Jne_rel8_64) [65h:jmp64]                         encoding(2 bytes) = 75 3a
002bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
002eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0030h jle short 0051h               ; JLE(Jle_rel8_64) [51h:jmp64]                         encoding(2 bytes) = 7e 1f
0032h movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
0035h lea rbx,[r9+r11*4]            ; LEA(Lea_r64_m) [RBX,mem(Unknown,R9:br,DS:sr)]        encoding(4 bytes) = 4b 8d 1c 99
0039h cmp r10d,r8d                  ; CMP(Cmp_r32_rm32) [R10D,R8D]                         encoding(3 bytes) = 45 3b d0
003ch jae near ptr 00beh            ; JAE(Jae_rel32_64) [BEh:jmp64]                        encoding(6 bytes) = 0f 83 7c 00 00 00
0042h mov r11d,[rax+r11*4]          ; MOV(Mov_r32_rm32) [R11D,mem(32u,RAX:br,DS:sr)]       encoding(4 bytes) = 46 8b 1c 98
0046h add [rbx],r11d                ; ADD(Add_rm32_r32) [mem(32u,RBX:br,DS:sr),R11D]       encoding(3 bytes) = 44 01 1b
0049h inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
004ch cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
004fh jl short 0032h                ; JL(Jl_rel8_64) [32h:jmp64]                           encoding(2 bytes) = 7c e1
0051h mov [rcx],r9                  ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R9]         encoding(3 bytes) = 4c 89 09
0054h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
0057h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
005ah add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
005eh pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
005fh pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0060h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0061h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0062h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0064h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0065h mov ecx,989h                  ; MOV(Mov_r32_imm32) [ECX,989h:imm32]                  encoding(5 bytes) = b9 89 09 00 00
006ah mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
0074h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC2CC90h:jmp64]                encoding(5 bytes) = e8 17 cc c2 5f
0079h mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
007ch mov ecx,991h                  ; MOV(Mov_r32_imm32) [ECX,991h:imm32]                  encoding(5 bytes) = b9 91 09 00 00
0081h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
008bh call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC2CC90h:jmp64]                encoding(5 bytes) = e8 00 cc c2 5f
0090h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
0093h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
0098h mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
009bh mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
009fh mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00a2h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00a4h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00a6h mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00abh mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b0h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFE6E88h:jmp64]        encoding(5 bytes) = e8 d3 6d fe ff
00b5h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00b8h call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAE2700h:jmp64]                encoding(5 bytes) = e8 43 26 ae 5f
00bdh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00beh call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC2C4B0h:jmp64]                encoding(5 bytes) = e8 ed c3 c2 5f
00c3h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> addBytes => new byte[196]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x00,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0xBE,0xF5,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x3A,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x1F,0x4D,0x63,0xDA,0x4B,0x8D,0x1C,0x99,0x45,0x3B,0xD0,0x0F,0x83,0x7C,0x00,0x00,0x00,0x46,0x8B,0x1C,0x98,0x44,0x01,0x1B,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xE1,0x4C,0x89,0x09,0x89,0x51,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x89,0x09,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x17,0xCC,0xC2,0x5F,0x4C,0x8B,0xF0,0xB9,0x91,0x09,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x00,0xCC,0xC2,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0xD3,0x6D,0xFE,0xFF,0x48,0x8B,0xC8,0xE8,0x43,0x26,0xAE,0x5F,0xCC,0xE8,0xED,0xC3,0xC2,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<long> add(Span<long> lhs, ReadOnlySpan<long> rhs)
; location: [7FFC7C0A7270h, 7FFC7C0A7333h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0014h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0017h mov esi,0FDh                  ; MOV(Mov_r32_imm32) [ESI,fdh:imm32]                   encoding(5 bytes) = be fd 00 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
0023h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0026h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0029h jne short 0065h               ; JNE(Jne_rel8_64) [65h:jmp64]                         encoding(2 bytes) = 75 3a
002bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
002eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0030h jle short 0051h               ; JLE(Jle_rel8_64) [51h:jmp64]                         encoding(2 bytes) = 7e 1f
0032h movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
0035h lea rbx,[r9+r11*8]            ; LEA(Lea_r64_m) [RBX,mem(Unknown,R9:br,DS:sr)]        encoding(4 bytes) = 4b 8d 1c d9
0039h cmp r10d,r8d                  ; CMP(Cmp_r32_rm32) [R10D,R8D]                         encoding(3 bytes) = 45 3b d0
003ch jae near ptr 00beh            ; JAE(Jae_rel32_64) [BEh:jmp64]                        encoding(6 bytes) = 0f 83 7c 00 00 00
0042h mov r11,[rax+r11*8]           ; MOV(Mov_r64_rm64) [R11,mem(64u,RAX:br,DS:sr)]        encoding(4 bytes) = 4e 8b 1c d8
0046h add [rbx],r11                 ; ADD(Add_rm64_r64) [mem(64u,RBX:br,DS:sr),R11]        encoding(3 bytes) = 4c 01 1b
0049h inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
004ch cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
004fh jl short 0032h                ; JL(Jl_rel8_64) [32h:jmp64]                           encoding(2 bytes) = 7c e1
0051h mov [rcx],r9                  ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R9]         encoding(3 bytes) = 4c 89 09
0054h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
0057h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
005ah add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
005eh pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
005fh pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0060h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0061h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0062h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0064h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0065h mov ecx,989h                  ; MOV(Mov_r32_imm32) [ECX,989h:imm32]                  encoding(5 bytes) = b9 89 09 00 00
006ah mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
0074h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC2CBB0h:jmp64]                encoding(5 bytes) = e8 37 cb c2 5f
0079h mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
007ch mov ecx,991h                  ; MOV(Mov_r32_imm32) [ECX,991h:imm32]                  encoding(5 bytes) = b9 91 09 00 00
0081h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
008bh call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC2CBB0h:jmp64]                encoding(5 bytes) = e8 20 cb c2 5f
0090h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
0093h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
0098h mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
009bh mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
009fh mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00a2h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00a4h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00a6h mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00abh mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b0h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFE6DA8h:jmp64]        encoding(5 bytes) = e8 f3 6c fe ff
00b5h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00b8h call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAE2620h:jmp64]                encoding(5 bytes) = e8 63 25 ae 5f
00bdh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00beh call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC2C3D0h:jmp64]                encoding(5 bytes) = e8 0d c3 c2 5f
00c3h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> addBytes => new byte[196]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x00,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0xBE,0xFD,0x00,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x3A,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x1F,0x4D,0x63,0xDA,0x4B,0x8D,0x1C,0xD9,0x45,0x3B,0xD0,0x0F,0x83,0x7C,0x00,0x00,0x00,0x4E,0x8B,0x1C,0xD8,0x4C,0x01,0x1B,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xE1,0x4C,0x89,0x09,0x89,0x51,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x89,0x09,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x37,0xCB,0xC2,0x5F,0x4C,0x8B,0xF0,0xB9,0x91,0x09,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x20,0xCB,0xC2,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0xF3,0x6C,0xFE,0xFF,0x48,0x8B,0xC8,0xE8,0x63,0x25,0xAE,0x5F,0xCC,0xE8,0x0D,0xC3,0xC2,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<ulong> add(Span<ulong> lhs, ReadOnlySpan<ulong> rhs)
; location: [7FFC7C0A7350h, 7FFC7C0A7413h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0014h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0017h mov esi,105h                  ; MOV(Mov_r32_imm32) [ESI,105h:imm32]                  encoding(5 bytes) = be 05 01 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
0023h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0026h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0029h jne short 0065h               ; JNE(Jne_rel8_64) [65h:jmp64]                         encoding(2 bytes) = 75 3a
002bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
002eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0030h jle short 0051h               ; JLE(Jle_rel8_64) [51h:jmp64]                         encoding(2 bytes) = 7e 1f
0032h movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
0035h lea rbx,[r9+r11*8]            ; LEA(Lea_r64_m) [RBX,mem(Unknown,R9:br,DS:sr)]        encoding(4 bytes) = 4b 8d 1c d9
0039h cmp r10d,r8d                  ; CMP(Cmp_r32_rm32) [R10D,R8D]                         encoding(3 bytes) = 45 3b d0
003ch jae near ptr 00beh            ; JAE(Jae_rel32_64) [BEh:jmp64]                        encoding(6 bytes) = 0f 83 7c 00 00 00
0042h mov r11,[rax+r11*8]           ; MOV(Mov_r64_rm64) [R11,mem(64u,RAX:br,DS:sr)]        encoding(4 bytes) = 4e 8b 1c d8
0046h add [rbx],r11                 ; ADD(Add_rm64_r64) [mem(64u,RBX:br,DS:sr),R11]        encoding(3 bytes) = 4c 01 1b
0049h inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
004ch cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
004fh jl short 0032h                ; JL(Jl_rel8_64) [32h:jmp64]                           encoding(2 bytes) = 7c e1
0051h mov [rcx],r9                  ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R9]         encoding(3 bytes) = 4c 89 09
0054h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
0057h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
005ah add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
005eh pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
005fh pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0060h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0061h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0062h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0064h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0065h mov ecx,989h                  ; MOV(Mov_r32_imm32) [ECX,989h:imm32]                  encoding(5 bytes) = b9 89 09 00 00
006ah mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
0074h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC2CAD0h:jmp64]                encoding(5 bytes) = e8 57 ca c2 5f
0079h mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
007ch mov ecx,991h                  ; MOV(Mov_r32_imm32) [ECX,991h:imm32]                  encoding(5 bytes) = b9 91 09 00 00
0081h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
008bh call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC2CAD0h:jmp64]                encoding(5 bytes) = e8 40 ca c2 5f
0090h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
0093h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
0098h mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
009bh mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
009fh mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00a2h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00a4h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00a6h mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00abh mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b0h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFE6CC8h:jmp64]        encoding(5 bytes) = e8 13 6c fe ff
00b5h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00b8h call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAE2540h:jmp64]                encoding(5 bytes) = e8 83 24 ae 5f
00bdh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00beh call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC2C2F0h:jmp64]                encoding(5 bytes) = e8 2d c2 c2 5f
00c3h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> addBytes => new byte[196]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x00,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0xBE,0x05,0x01,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x3A,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x1F,0x4D,0x63,0xDA,0x4B,0x8D,0x1C,0xD9,0x45,0x3B,0xD0,0x0F,0x83,0x7C,0x00,0x00,0x00,0x4E,0x8B,0x1C,0xD8,0x4C,0x01,0x1B,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xE1,0x4C,0x89,0x09,0x89,0x51,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0x89,0x09,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x57,0xCA,0xC2,0x5F,0x4C,0x8B,0xF0,0xB9,0x91,0x09,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x40,0xCA,0xC2,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x13,0x6C,0xFE,0xFF,0x48,0x8B,0xC8,0xE8,0x83,0x24,0xAE,0x5F,0xCC,0xE8,0x2D,0xC2,0xC2,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<sbyte> add(Span<sbyte> lhs, sbyte rhs)
; location: [7FFC7C0A7430h, 7FFC7C0A7460h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0008h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
000bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
000eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0010h jle short 0027h               ; JLE(Jle_rel8_64) [27h:jmp64]                         encoding(2 bytes) = 7e 15
0012h movsx rax,r8b                 ; MOVSX(Movsx_r64_rm8) [RAX,R8L]                       encoding(4 bytes) = 49 0f be c0
0016h movsxd r8,r10d                ; MOVSXD(Movsxd_r64_rm32) [R8,R10D]                    encoding(3 bytes) = 4d 63 c2
0019h add r8,r9                     ; ADD(Add_r64_rm64) [R8,R9]                            encoding(3 bytes) = 4d 03 c1
001ch add [r8],al                   ; ADD(Add_rm8_r8) [mem(8u,R8:br,DS:sr),AL]             encoding(3 bytes) = 41 00 00
001fh inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
0022h cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
0025h jl short 0016h                ; JL(Jl_rel8_64) [16h:jmp64]                           encoding(2 bytes) = 7c ef
0027h mov [rcx],r9                  ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R9]         encoding(3 bytes) = 4c 89 09
002ah mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
002dh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0030h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> addBytes => new byte[49]{0x0F,0x1F,0x44,0x00,0x00,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x15,0x49,0x0F,0xBE,0xC0,0x4D,0x63,0xC2,0x4D,0x03,0xC1,0x41,0x00,0x00,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xEF,0x4C,0x89,0x09,0x89,0x51,0x08,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<byte> add(Span<byte> lhs, byte rhs)
; location: [7FFC7C0A7480h, 7FFC7C0A74B0h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0008h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
000bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
000eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0010h jle short 0027h               ; JLE(Jle_rel8_64) [27h:jmp64]                         encoding(2 bytes) = 7e 15
0012h movzx eax,r8b                 ; MOVZX(Movzx_r32_rm8) [EAX,R8L]                       encoding(4 bytes) = 41 0f b6 c0
0016h movsxd r8,r10d                ; MOVSXD(Movsxd_r64_rm32) [R8,R10D]                    encoding(3 bytes) = 4d 63 c2
0019h add r8,r9                     ; ADD(Add_r64_rm64) [R8,R9]                            encoding(3 bytes) = 4d 03 c1
001ch add [r8],al                   ; ADD(Add_rm8_r8) [mem(8u,R8:br,DS:sr),AL]             encoding(3 bytes) = 41 00 00
001fh inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
0022h cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
0025h jl short 0016h                ; JL(Jl_rel8_64) [16h:jmp64]                           encoding(2 bytes) = 7c ef
0027h mov [rcx],r9                  ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R9]         encoding(3 bytes) = 4c 89 09
002ah mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
002dh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0030h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> addBytes => new byte[49]{0x0F,0x1F,0x44,0x00,0x00,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x15,0x41,0x0F,0xB6,0xC0,0x4D,0x63,0xC2,0x4D,0x03,0xC1,0x41,0x00,0x00,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xEF,0x4C,0x89,0x09,0x89,0x51,0x08,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<short> add(Span<short> lhs, short rhs)
; location: [7FFC7C0A74D0h, 7FFC7C0A7502h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0008h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
000bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
000eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0010h jle short 0029h               ; JLE(Jle_rel8_64) [29h:jmp64]                         encoding(2 bytes) = 7e 17
0012h movsx rax,r8w                 ; MOVSX(Movsx_r64_rm16) [RAX,R8W]                      encoding(4 bytes) = 49 0f bf c0
0016h movsxd r8,r10d                ; MOVSXD(Movsxd_r64_rm32) [R8,R10D]                    encoding(3 bytes) = 4d 63 c2
0019h lea r8,[r9+r8*2]              ; LEA(Lea_r64_m) [R8,mem(Unknown,R9:br,DS:sr)]         encoding(4 bytes) = 4f 8d 04 41
001dh add [r8],ax                   ; ADD(Add_rm16_r16) [mem(16u,R8:br,DS:sr),AX]          encoding(4 bytes) = 66 41 01 00
0021h inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
0024h cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
0027h jl short 0016h                ; JL(Jl_rel8_64) [16h:jmp64]                           encoding(2 bytes) = 7c ed
0029h mov [rcx],r9                  ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R9]         encoding(3 bytes) = 4c 89 09
002ch mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
002fh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0032h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> addBytes => new byte[51]{0x0F,0x1F,0x44,0x00,0x00,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x17,0x49,0x0F,0xBF,0xC0,0x4D,0x63,0xC2,0x4F,0x8D,0x04,0x41,0x66,0x41,0x01,0x00,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xED,0x4C,0x89,0x09,0x89,0x51,0x08,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<ushort> add(Span<ushort> lhs, ushort rhs)
; location: [7FFC7C0A7520h, 7FFC7C0A7552h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0008h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
000bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
000eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0010h jle short 0029h               ; JLE(Jle_rel8_64) [29h:jmp64]                         encoding(2 bytes) = 7e 17
0012h movzx eax,r8w                 ; MOVZX(Movzx_r32_rm16) [EAX,R8W]                      encoding(4 bytes) = 41 0f b7 c0
0016h movsxd r8,r10d                ; MOVSXD(Movsxd_r64_rm32) [R8,R10D]                    encoding(3 bytes) = 4d 63 c2
0019h lea r8,[r9+r8*2]              ; LEA(Lea_r64_m) [R8,mem(Unknown,R9:br,DS:sr)]         encoding(4 bytes) = 4f 8d 04 41
001dh add [r8],ax                   ; ADD(Add_rm16_r16) [mem(16u,R8:br,DS:sr),AX]          encoding(4 bytes) = 66 41 01 00
0021h inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
0024h cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
0027h jl short 0016h                ; JL(Jl_rel8_64) [16h:jmp64]                           encoding(2 bytes) = 7c ed
0029h mov [rcx],r9                  ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R9]         encoding(3 bytes) = 4c 89 09
002ch mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
002fh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0032h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> addBytes => new byte[51]{0x0F,0x1F,0x44,0x00,0x00,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x17,0x41,0x0F,0xB7,0xC0,0x4D,0x63,0xC2,0x4F,0x8D,0x04,0x41,0x66,0x41,0x01,0x00,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xED,0x4C,0x89,0x09,0x89,0x51,0x08,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<int> add(Span<int> lhs, int rhs)
; location: [7FFC7C0A7570h, 7FFC7C0A759Dh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,[rdx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 02
0008h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
000bh xor r9d,r9d                   ; XOR(Xor_r32_rm32) [R9D,R9D]                          encoding(3 bytes) = 45 33 c9
000eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0010h jle short 0024h               ; JLE(Jle_rel8_64) [24h:jmp64]                         encoding(2 bytes) = 7e 12
0012h movsxd r10,r9d                ; MOVSXD(Movsxd_r64_rm32) [R10,R9D]                    encoding(3 bytes) = 4d 63 d1
0015h lea r10,[rax+r10*4]           ; LEA(Lea_r64_m) [R10,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 4e 8d 14 90
0019h add [r10],r8d                 ; ADD(Add_rm32_r32) [mem(32u,R10:br,DS:sr),R8D]        encoding(3 bytes) = 45 01 02
001ch inc r9d                       ; INC(Inc_rm32) [R9D]                                  encoding(3 bytes) = 41 ff c1
001fh cmp r9d,edx                   ; CMP(Cmp_r32_rm32) [R9D,EDX]                          encoding(3 bytes) = 44 3b ca
0022h jl short 0012h                ; JL(Jl_rel8_64) [12h:jmp64]                           encoding(2 bytes) = 7c ee
0024h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0027h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
002ah mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
002dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> addBytes => new byte[46]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x02,0x8B,0x52,0x08,0x45,0x33,0xC9,0x85,0xD2,0x7E,0x12,0x4D,0x63,0xD1,0x4E,0x8D,0x14,0x90,0x45,0x01,0x02,0x41,0xFF,0xC1,0x44,0x3B,0xCA,0x7C,0xEE,0x48,0x89,0x01,0x89,0x51,0x08,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<uint> add(Span<uint> lhs, uint rhs)
; location: [7FFC7C0A75B0h, 7FFC7C0A75DDh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,[rdx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 02
0008h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
000bh xor r9d,r9d                   ; XOR(Xor_r32_rm32) [R9D,R9D]                          encoding(3 bytes) = 45 33 c9
000eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0010h jle short 0024h               ; JLE(Jle_rel8_64) [24h:jmp64]                         encoding(2 bytes) = 7e 12
0012h movsxd r10,r9d                ; MOVSXD(Movsxd_r64_rm32) [R10,R9D]                    encoding(3 bytes) = 4d 63 d1
0015h lea r10,[rax+r10*4]           ; LEA(Lea_r64_m) [R10,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 4e 8d 14 90
0019h add [r10],r8d                 ; ADD(Add_rm32_r32) [mem(32u,R10:br,DS:sr),R8D]        encoding(3 bytes) = 45 01 02
001ch inc r9d                       ; INC(Inc_rm32) [R9D]                                  encoding(3 bytes) = 41 ff c1
001fh cmp r9d,edx                   ; CMP(Cmp_r32_rm32) [R9D,EDX]                          encoding(3 bytes) = 44 3b ca
0022h jl short 0012h                ; JL(Jl_rel8_64) [12h:jmp64]                           encoding(2 bytes) = 7c ee
0024h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0027h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
002ah mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
002dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> addBytes => new byte[46]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x02,0x8B,0x52,0x08,0x45,0x33,0xC9,0x85,0xD2,0x7E,0x12,0x4D,0x63,0xD1,0x4E,0x8D,0x14,0x90,0x45,0x01,0x02,0x41,0xFF,0xC1,0x44,0x3B,0xCA,0x7C,0xEE,0x48,0x89,0x01,0x89,0x51,0x08,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<long> add(Span<long> lhs, long rhs)
; location: [7FFC7C0A75F0h, 7FFC7C0A761Dh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,[rdx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 02
0008h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
000bh xor r9d,r9d                   ; XOR(Xor_r32_rm32) [R9D,R9D]                          encoding(3 bytes) = 45 33 c9
000eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0010h jle short 0024h               ; JLE(Jle_rel8_64) [24h:jmp64]                         encoding(2 bytes) = 7e 12
0012h movsxd r10,r9d                ; MOVSXD(Movsxd_r64_rm32) [R10,R9D]                    encoding(3 bytes) = 4d 63 d1
0015h lea r10,[rax+r10*8]           ; LEA(Lea_r64_m) [R10,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 4e 8d 14 d0
0019h add [r10],r8                  ; ADD(Add_rm64_r64) [mem(64u,R10:br,DS:sr),R8]         encoding(3 bytes) = 4d 01 02
001ch inc r9d                       ; INC(Inc_rm32) [R9D]                                  encoding(3 bytes) = 41 ff c1
001fh cmp r9d,edx                   ; CMP(Cmp_r32_rm32) [R9D,EDX]                          encoding(3 bytes) = 44 3b ca
0022h jl short 0012h                ; JL(Jl_rel8_64) [12h:jmp64]                           encoding(2 bytes) = 7c ee
0024h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0027h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
002ah mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
002dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> addBytes => new byte[46]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x02,0x8B,0x52,0x08,0x45,0x33,0xC9,0x85,0xD2,0x7E,0x12,0x4D,0x63,0xD1,0x4E,0x8D,0x14,0xD0,0x4D,0x01,0x02,0x41,0xFF,0xC1,0x44,0x3B,0xCA,0x7C,0xEE,0x48,0x89,0x01,0x89,0x51,0x08,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<ulong> add(Span<ulong> lhs, ulong rhs)
; location: [7FFC7C0A7630h, 7FFC7C0A765Dh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,[rdx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 02
0008h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
000bh xor r9d,r9d                   ; XOR(Xor_r32_rm32) [R9D,R9D]                          encoding(3 bytes) = 45 33 c9
000eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0010h jle short 0024h               ; JLE(Jle_rel8_64) [24h:jmp64]                         encoding(2 bytes) = 7e 12
0012h movsxd r10,r9d                ; MOVSXD(Movsxd_r64_rm32) [R10,R9D]                    encoding(3 bytes) = 4d 63 d1
0015h lea r10,[rax+r10*8]           ; LEA(Lea_r64_m) [R10,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 4e 8d 14 d0
0019h add [r10],r8                  ; ADD(Add_rm64_r64) [mem(64u,R10:br,DS:sr),R8]         encoding(3 bytes) = 4d 01 02
001ch inc r9d                       ; INC(Inc_rm32) [R9D]                                  encoding(3 bytes) = 41 ff c1
001fh cmp r9d,edx                   ; CMP(Cmp_r32_rm32) [R9D,EDX]                          encoding(3 bytes) = 44 3b ca
0022h jl short 0012h                ; JL(Jl_rel8_64) [12h:jmp64]                           encoding(2 bytes) = 7c ee
0024h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0027h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
002ah mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
002dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> addBytes => new byte[46]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x02,0x8B,0x52,0x08,0x45,0x33,0xC9,0x85,0xD2,0x7E,0x12,0x4D,0x63,0xD1,0x4E,0x8D,0x14,0xD0,0x4D,0x01,0x02,0x41,0xFF,0xC1,0x44,0x3B,0xCA,0x7C,0xEE,0x48,0x89,0x01,0x89,0x51,0x08,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: sbyte and(sbyte lhs, sbyte rhs)
; location: [7FFC7C0A7670h, 7FFC7C0A7683h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cl                  ; MOVSX(Movsx_r64_rm8) [RAX,CL]                        encoding(4 bytes) = 48 0f be c1
0009h movsx rdx,dl                  ; MOVSX(Movsx_r64_rm8) [RDX,DL]                        encoding(4 bytes) = 48 0f be d2
000dh and eax,edx                   ; AND(And_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 23 c2
000fh movsx rax,al                  ; MOVSX(Movsx_r64_rm8) [RAX,AL]                        encoding(4 bytes) = 48 0f be c0
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> andBytes => new byte[20]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBE,0xC1,0x48,0x0F,0xBE,0xD2,0x23,0xC2,0x48,0x0F,0xBE,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: byte and(byte lhs, byte rhs)
; location: [7FFC7C0A76A0h, 7FFC7C0A76B0h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0008h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
000bh and eax,edx                   ; AND(And_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 23 c2
000dh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0010h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> andBytes => new byte[17]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC1,0x0F,0xB6,0xD2,0x23,0xC2,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: short and(short lhs, short rhs)
; location: [7FFC7C0A76D0h, 7FFC7C0A76E3h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movsx rax,cx                  ; MOVSX(Movsx_r64_rm16) [RAX,CX]                       encoding(4 bytes) = 48 0f bf c1
0009h movsx rdx,dx                  ; MOVSX(Movsx_r64_rm16) [RDX,DX]                       encoding(4 bytes) = 48 0f bf d2
000dh and eax,edx                   ; AND(And_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 23 c2
000fh movsx rax,ax                  ; MOVSX(Movsx_r64_rm16) [RAX,AX]                       encoding(4 bytes) = 48 0f bf c0
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> andBytes => new byte[20]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x0F,0xBF,0xC1,0x48,0x0F,0xBF,0xD2,0x23,0xC2,0x48,0x0F,0xBF,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ushort and(ushort lhs, ushort rhs)
; location: [7FFC7C0A7700h, 7FFC7C0A7710h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cx                  ; MOVZX(Movzx_r32_rm16) [EAX,CX]                       encoding(3 bytes) = 0f b7 c1
0008h movzx edx,dx                  ; MOVZX(Movzx_r32_rm16) [EDX,DX]                       encoding(3 bytes) = 0f b7 d2
000bh and eax,edx                   ; AND(And_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 23 c2
000dh movzx eax,ax                  ; MOVZX(Movzx_r32_rm16) [EAX,AX]                       encoding(3 bytes) = 0f b7 c0
0010h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> andBytes => new byte[17]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB7,0xC1,0x0F,0xB7,0xD2,0x23,0xC2,0x0F,0xB7,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref int and(in int lhs, in int rhs, ref int dst)
; location: [7FFC7C0A7910h, 7FFC7C0A791Fh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov eax,[rcx]                 ; MOV(Mov_r32_rm32) [EAX,mem(32u,RCX:br,DS:sr)]        encoding(2 bytes) = 8b 01
0007h and eax,[rdx]                 ; AND(And_r32_rm32) [EAX,mem(32u,RDX:br,DS:sr)]        encoding(2 bytes) = 23 02
0009h mov [r8],eax                  ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EAX]         encoding(3 bytes) = 41 89 00
000ch mov rax,r8                    ; MOV(Mov_r64_rm64) [RAX,R8]                           encoding(3 bytes) = 49 8b c0
000fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> andBytes => new byte[16]{0x0F,0x1F,0x44,0x00,0x00,0x8B,0x01,0x23,0x02,0x41,0x89,0x00,0x49,0x8B,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref uint and(in uint lhs, in uint rhs, ref uint dst)
; location: [7FFC7C0A7930h, 7FFC7C0A793Fh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov eax,[rcx]                 ; MOV(Mov_r32_rm32) [EAX,mem(32u,RCX:br,DS:sr)]        encoding(2 bytes) = 8b 01
0007h and eax,[rdx]                 ; AND(And_r32_rm32) [EAX,mem(32u,RDX:br,DS:sr)]        encoding(2 bytes) = 23 02
0009h mov [r8],eax                  ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),EAX]         encoding(3 bytes) = 41 89 00
000ch mov rax,r8                    ; MOV(Mov_r64_rm64) [RAX,R8]                           encoding(3 bytes) = 49 8b c0
000fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> andBytes => new byte[16]{0x0F,0x1F,0x44,0x00,0x00,0x8B,0x01,0x23,0x02,0x41,0x89,0x00,0x49,0x8B,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref long and(ref long lhs, long rhs)
; location: [7FFC7C0A7B30h, 7FFC7C0A7B3Bh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h and [rcx],rdx                 ; AND(And_rm64_r64) [mem(64u,RCX:br,DS:sr),RDX]        encoding(3 bytes) = 48 21 11
0008h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
000bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> andBytes => new byte[12]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x21,0x11,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<ushort> and(Span<ushort> lhs, ReadOnlySpan<ushort> rhs)
; location: [7FFC7C0A8920h, 7FFC7C0A89E5h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0014h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0017h mov esi,131h                  ; MOV(Mov_r32_imm32) [ESI,131h:imm32]                  encoding(5 bytes) = be 31 01 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
0023h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0026h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0029h jne short 0067h               ; JNE(Jne_rel8_64) [67h:jmp64]                         encoding(2 bytes) = 75 3c
002bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
002eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0030h jle short 0053h               ; JLE(Jle_rel8_64) [53h:jmp64]                         encoding(2 bytes) = 7e 21
0032h movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
0035h lea rbx,[r9+r11*2]            ; LEA(Lea_r64_m) [RBX,mem(Unknown,R9:br,DS:sr)]        encoding(4 bytes) = 4b 8d 1c 59
0039h cmp r10d,r8d                  ; CMP(Cmp_r32_rm32) [R10D,R8D]                         encoding(3 bytes) = 45 3b d0
003ch jae near ptr 00c0h            ; JAE(Jae_rel32_64) [C0h:jmp64]                        encoding(6 bytes) = 0f 83 7e 00 00 00
0042h movzx r11d,word ptr [rax+r11*2]; MOVZX(Movzx_r32_rm16) [R11D,mem(16u,RAX:br,DS:sr)]  encoding(5 bytes) = 46 0f b7 1c 58
0047h and [rbx],r11w                ; AND(And_rm16_r16) [mem(16u,RBX:br,DS:sr),R11W]       encoding(4 bytes) = 66 44 21 1b
004bh inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
004eh cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
0051h jl short 0032h                ; JL(Jl_rel8_64) [32h:jmp64]                           encoding(2 bytes) = 7c df
0053h mov [rcx],r9                  ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R9]         encoding(3 bytes) = 4c 89 09
0056h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
0059h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
005ch add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0060h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0061h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0062h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0063h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0064h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0066h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0067h mov ecx,9E7h                  ; MOV(Mov_r32_imm32) [ECX,9e7h:imm32]                  encoding(5 bytes) = b9 e7 09 00 00
006ch mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
0076h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC2B500h:jmp64]                encoding(5 bytes) = e8 85 b4 c2 5f
007bh mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
007eh mov ecx,9EFh                  ; MOV(Mov_r32_imm32) [ECX,9efh:imm32]                  encoding(5 bytes) = b9 ef 09 00 00
0083h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
008dh call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC2B500h:jmp64]                encoding(5 bytes) = e8 6e b4 c2 5f
0092h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
0095h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
009ah mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
009dh mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00a1h mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00a4h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00a6h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00a8h mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00adh mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b2h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFE56F8h:jmp64]        encoding(5 bytes) = e8 41 56 fe ff
00b7h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00bah call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAE0F70h:jmp64]                encoding(5 bytes) = e8 b1 0e ae 5f
00bfh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00c0h call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC2AD20h:jmp64]                encoding(5 bytes) = e8 5b ac c2 5f
00c5h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> andBytes => new byte[198]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x00,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0xBE,0x31,0x01,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x3C,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x21,0x4D,0x63,0xDA,0x4B,0x8D,0x1C,0x59,0x45,0x3B,0xD0,0x0F,0x83,0x7E,0x00,0x00,0x00,0x46,0x0F,0xB7,0x1C,0x58,0x66,0x44,0x21,0x1B,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xDF,0x4C,0x89,0x09,0x89,0x51,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0xE7,0x09,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x85,0xB4,0xC2,0x5F,0x4C,0x8B,0xF0,0xB9,0xEF,0x09,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x6E,0xB4,0xC2,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x41,0x56,0xFE,0xFF,0x48,0x8B,0xC8,0xE8,0xB1,0x0E,0xAE,0x5F,0xCC,0xE8,0x5B,0xAC,0xC2,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<int> and(Span<int> lhs, ReadOnlySpan<int> rhs)
; location: [7FFC7C0A8A10h, 7FFC7C0A8AD3h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0014h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0017h mov esi,139h                  ; MOV(Mov_r32_imm32) [ESI,139h:imm32]                  encoding(5 bytes) = be 39 01 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
0023h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0026h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0029h jne short 0065h               ; JNE(Jne_rel8_64) [65h:jmp64]                         encoding(2 bytes) = 75 3a
002bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
002eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0030h jle short 0051h               ; JLE(Jle_rel8_64) [51h:jmp64]                         encoding(2 bytes) = 7e 1f
0032h movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
0035h lea rbx,[r9+r11*4]            ; LEA(Lea_r64_m) [RBX,mem(Unknown,R9:br,DS:sr)]        encoding(4 bytes) = 4b 8d 1c 99
0039h cmp r10d,r8d                  ; CMP(Cmp_r32_rm32) [R10D,R8D]                         encoding(3 bytes) = 45 3b d0
003ch jae near ptr 00beh            ; JAE(Jae_rel32_64) [BEh:jmp64]                        encoding(6 bytes) = 0f 83 7c 00 00 00
0042h mov r11d,[rax+r11*4]          ; MOV(Mov_r32_rm32) [R11D,mem(32u,RAX:br,DS:sr)]       encoding(4 bytes) = 46 8b 1c 98
0046h and [rbx],r11d                ; AND(And_rm32_r32) [mem(32u,RBX:br,DS:sr),R11D]       encoding(3 bytes) = 44 21 1b
0049h inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
004ch cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
004fh jl short 0032h                ; JL(Jl_rel8_64) [32h:jmp64]                           encoding(2 bytes) = 7c e1
0051h mov [rcx],r9                  ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R9]         encoding(3 bytes) = 4c 89 09
0054h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
0057h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
005ah add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
005eh pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
005fh pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0060h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0061h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0062h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0064h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0065h mov ecx,9E7h                  ; MOV(Mov_r32_imm32) [ECX,9e7h:imm32]                  encoding(5 bytes) = b9 e7 09 00 00
006ah mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
0074h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC2B410h:jmp64]                encoding(5 bytes) = e8 97 b3 c2 5f
0079h mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
007ch mov ecx,9EFh                  ; MOV(Mov_r32_imm32) [ECX,9efh:imm32]                  encoding(5 bytes) = b9 ef 09 00 00
0081h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
008bh call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC2B410h:jmp64]                encoding(5 bytes) = e8 80 b3 c2 5f
0090h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
0093h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
0098h mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
009bh mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
009fh mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00a2h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00a4h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00a6h mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00abh mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b0h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFE5608h:jmp64]        encoding(5 bytes) = e8 53 55 fe ff
00b5h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00b8h call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAE0E80h:jmp64]                encoding(5 bytes) = e8 c3 0d ae 5f
00bdh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00beh call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC2AC30h:jmp64]                encoding(5 bytes) = e8 6d ab c2 5f
00c3h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> andBytes => new byte[196]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x00,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0xBE,0x39,0x01,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x3A,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x1F,0x4D,0x63,0xDA,0x4B,0x8D,0x1C,0x99,0x45,0x3B,0xD0,0x0F,0x83,0x7C,0x00,0x00,0x00,0x46,0x8B,0x1C,0x98,0x44,0x21,0x1B,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xE1,0x4C,0x89,0x09,0x89,0x51,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0xE7,0x09,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x97,0xB3,0xC2,0x5F,0x4C,0x8B,0xF0,0xB9,0xEF,0x09,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0x80,0xB3,0xC2,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x53,0x55,0xFE,0xFF,0x48,0x8B,0xC8,0xE8,0xC3,0x0D,0xAE,0x5F,0xCC,0xE8,0x6D,0xAB,0xC2,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<uint> and(Span<uint> lhs, ReadOnlySpan<uint> rhs)
; location: [7FFC7C0A8AF0h, 7FFC7C0A8BB3h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
000ah mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
000dh mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0011h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0014h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
0017h mov esi,141h                  ; MOV(Mov_r32_imm32) [ESI,141h:imm32]                  encoding(5 bytes) = be 41 01 00 00
001ch mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0021h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
0023h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0026h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
0029h jne short 0065h               ; JNE(Jne_rel8_64) [65h:jmp64]                         encoding(2 bytes) = 75 3a
002bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
002eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0030h jle short 0051h               ; JLE(Jle_rel8_64) [51h:jmp64]                         encoding(2 bytes) = 7e 1f
0032h movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
0035h lea rbx,[r9+r11*4]            ; LEA(Lea_r64_m) [RBX,mem(Unknown,R9:br,DS:sr)]        encoding(4 bytes) = 4b 8d 1c 99
0039h cmp r10d,r8d                  ; CMP(Cmp_r32_rm32) [R10D,R8D]                         encoding(3 bytes) = 45 3b d0
003ch jae near ptr 00beh            ; JAE(Jae_rel32_64) [BEh:jmp64]                        encoding(6 bytes) = 0f 83 7c 00 00 00
0042h mov r11d,[rax+r11*4]          ; MOV(Mov_r32_rm32) [R11D,mem(32u,RAX:br,DS:sr)]       encoding(4 bytes) = 46 8b 1c 98
0046h and [rbx],r11d                ; AND(And_rm32_r32) [mem(32u,RBX:br,DS:sr),R11D]       encoding(3 bytes) = 44 21 1b
0049h inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
004ch cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
004fh jl short 0032h                ; JL(Jl_rel8_64) [32h:jmp64]                           encoding(2 bytes) = 7c e1
0051h mov [rcx],r9                  ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R9]         encoding(3 bytes) = 4c 89 09
0054h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
0057h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
005ah add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
005eh pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
005fh pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0060h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0061h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0062h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0064h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0065h mov ecx,9E7h                  ; MOV(Mov_r32_imm32) [ECX,9e7h:imm32]                  encoding(5 bytes) = b9 e7 09 00 00
006ah mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
0074h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC2B330h:jmp64]                encoding(5 bytes) = e8 b7 b2 c2 5f
0079h mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
007ch mov ecx,9EFh                  ; MOV(Mov_r32_imm32) [ECX,9efh:imm32]                  encoding(5 bytes) = b9 ef 09 00 00
0081h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
008bh call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC2B330h:jmp64]                encoding(5 bytes) = e8 a0 b2 c2 5f
0090h mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
0093h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
0098h mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
009bh mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
009fh mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00a2h mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00a4h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00a6h mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00abh mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00b0h call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFE5528h:jmp64]        encoding(5 bytes) = e8 73 54 fe ff
00b5h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00b8h call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAE0DA0h:jmp64]                encoding(5 bytes) = e8 e3 0c ae 5f
00bdh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00beh call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC2AB50h:jmp64]                encoding(5 bytes) = e8 8d aa c2 5f
00c3h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> andBytes => new byte[196]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x30,0x49,0x8B,0x00,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0xBE,0x41,0x01,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x3A,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x1F,0x4D,0x63,0xDA,0x4B,0x8D,0x1C,0x99,0x45,0x3B,0xD0,0x0F,0x83,0x7C,0x00,0x00,0x00,0x46,0x8B,0x1C,0x98,0x44,0x21,0x1B,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xE1,0x4C,0x89,0x09,0x89,0x51,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x30,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0xE7,0x09,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xB7,0xB2,0xC2,0x5F,0x4C,0x8B,0xF0,0xB9,0xEF,0x09,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xA0,0xB2,0xC2,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0x73,0x54,0xFE,0xFF,0x48,0x8B,0xC8,0xE8,0xE3,0x0C,0xAE,0x5F,0xCC,0xE8,0x8D,0xAA,0xC2,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<float> and(Span<float> lhs, ReadOnlySpan<float> rhs)
; location: [7FFC7C0A8D90h, 7FFC7C0A8E80h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,40h                   ; SUB(Sub_rm64_imm8) [RSP,40h:imm64]                   encoding(4 bytes) = 48 83 ec 40
000ah vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
000dh mov rax,[r8]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 00
0010h mov r8d,[r8+8]                ; MOV(Mov_r32_rm32) [R8D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 40 08
0014h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0017h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
001ah mov esi,159h                  ; MOV(Mov_r32_imm32) [ESI,159h:imm32]                  encoding(5 bytes) = be 59 01 00 00
001fh mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0024h mov ebx,edx                   ; MOV(Mov_r32_rm32) [EBX,EDX]                          encoding(2 bytes) = 8b da
0026h mov ebp,r8d                   ; MOV(Mov_r32_rm32) [EBP,R8D]                          encoding(3 bytes) = 41 8b e8
0029h cmp edx,r8d                   ; CMP(Cmp_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 3b d0
002ch jne short 0092h               ; JNE(Jne_rel8_64) [92h:jmp64]                         encoding(2 bytes) = 75 64
002eh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
0031h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0033h jle short 007eh               ; JLE(Jle_rel8_64) [7Eh:jmp64]                         encoding(2 bytes) = 7e 49
0035h movsxd r11,r10d               ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]                   encoding(3 bytes) = 4d 63 da
0038h lea rbx,[r9+r11*4]            ; LEA(Lea_r64_m) [RBX,mem(Unknown,R9:br,DS:sr)]        encoding(4 bytes) = 4b 8d 1c 99
003ch vmovss xmm0,dword ptr [r9+r11*4]; VMOVSS(VEX_Vmovss_xmm_m32) [XMM0,mem(Float32,R9:br,DS:sr)] encoding(VEX, 6 bytes) = c4 81 7a 10 04 99
0042h cmp r10d,r8d                  ; CMP(Cmp_r32_rm32) [R10D,R8D]                         encoding(3 bytes) = 45 3b d0
0045h jae near ptr 00ebh            ; JAE(Jae_rel32_64) [EBh:jmp64]                        encoding(6 bytes) = 0f 83 a0 00 00 00
004bh vmovss xmm1,dword ptr [rax+r11*4]; VMOVSS(VEX_Vmovss_xmm_m32) [XMM1,mem(Float32,RAX:br,DS:sr)] encoding(VEX, 6 bytes) = c4 a1 7a 10 0c 98
0051h vmovss dword ptr [rsp+3Ch],xmm0; VMOVSS(VEX_Vmovss_m32_xmm) [mem(Float32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 11 44 24 3c
0057h mov r11d,[rsp+3Ch]            ; MOV(Mov_r32_rm32) [R11D,mem(32u,RSP:br,SS:sr)]       encoding(5 bytes) = 44 8b 5c 24 3c
005ch vmovss dword ptr [rsp+38h],xmm1; VMOVSS(VEX_Vmovss_m32_xmm) [mem(Float32,RSP:br,SS:sr),XMM1] encoding(VEX, 6 bytes) = c5 fa 11 4c 24 38
0062h and r11d,[rsp+38h]            ; AND(And_r32_rm32) [R11D,mem(32u,RSP:br,SS:sr)]       encoding(5 bytes) = 44 23 5c 24 38
0067h mov [rsp+34h],r11d            ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),R11D]       encoding(5 bytes) = 44 89 5c 24 34
006ch vmovss xmm0,dword ptr [rsp+34h]; VMOVSS(VEX_Vmovss_xmm_m32) [XMM0,mem(Float32,RSP:br,SS:sr)] encoding(VEX, 6 bytes) = c5 fa 10 44 24 34
0072h vmovss dword ptr [rbx],xmm0   ; VMOVSS(VEX_Vmovss_m32_xmm) [mem(Float32,RBX:br,DS:sr),XMM0] encoding(VEX, 4 bytes) = c5 fa 11 03
0076h inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
0079h cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
007ch jl short 0035h                ; JL(Jl_rel8_64) [35h:jmp64]                           encoding(2 bytes) = 7c b7
007eh mov [rcx],r9                  ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R9]         encoding(3 bytes) = 4c 89 09
0081h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
0084h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0087h add rsp,40h                   ; ADD(Add_rm64_imm8) [RSP,40h:imm64]                   encoding(4 bytes) = 48 83 c4 40
008bh pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
008ch pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
008dh pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
008eh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
008fh pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0091h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0092h mov ecx,9E7h                  ; MOV(Mov_r32_imm32) [ECX,9e7h:imm32]                  encoding(5 bytes) = b9 e7 09 00 00
0097h mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
00a1h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC2B090h:jmp64]                encoding(5 bytes) = e8 ea af c2 5f
00a6h mov r14,rax                   ; MOV(Mov_r64_rm64) [R14,RAX]                          encoding(3 bytes) = 4c 8b f0
00a9h mov ecx,9EFh                  ; MOV(Mov_r32_imm32) [ECX,9efh:imm32]                  encoding(5 bytes) = b9 ef 09 00 00
00aeh mov rdx,7FFC7C1BB678h         ; MOV(Mov_r64_imm64) [RDX,7ffc7c1bb678h:imm64]         encoding(10 bytes) = 48 ba 78 b6 1b 7c fc 7f 00 00
00b8h call 7FFCDBCD3E20h            ; CALL(Call_rel32_64) [5FC2B090h:jmp64]                encoding(5 bytes) = e8 d3 af c2 5f
00bdh mov r9,rax                    ; MOV(Mov_r64_rm64) [R9,RAX]                           encoding(3 bytes) = 4c 8b c8
00c0h lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
00c5h mov [r8],dil                  ; MOV(Mov_rm8_r8) [mem(8u,R8:br,DS:sr),DIL]            encoding(3 bytes) = 41 88 38
00c8h mov [r8+4],esi                ; MOV(Mov_rm32_r32) [mem(32u,R8:br,DS:sr),ESI]         encoding(4 bytes) = 41 89 70 04
00cch mov r8,r14                    ; MOV(Mov_r64_rm64) [R8,R14]                           encoding(3 bytes) = 4d 8b c6
00cfh mov ecx,ebx                   ; MOV(Mov_r32_rm32) [ECX,EBX]                          encoding(2 bytes) = 8b cb
00d1h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
00d3h mov rax,[rsp+28h]             ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 44 24 28
00d8h mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
00ddh call 7FFC7C08E018h            ; CALL(Call_rel32_64) [FFFFFFFFFFFE5288h:jmp64]        encoding(5 bytes) = e8 a6 51 fe ff
00e2h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00e5h call 7FFCDBB89890h            ; CALL(Call_rel32_64) [5FAE0B00h:jmp64]                encoding(5 bytes) = e8 16 0a ae 5f
00eah int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
00ebh call 7FFCDBCD3640h            ; CALL(Call_rel32_64) [5FC2A8B0h:jmp64]                encoding(5 bytes) = e8 c0 a7 c2 5f
00f0h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> andBytes => new byte[241]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x83,0xEC,0x40,0xC5,0xF8,0x77,0x49,0x8B,0x00,0x45,0x8B,0x40,0x08,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0xBE,0x59,0x01,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0x8B,0xDA,0x41,0x8B,0xE8,0x41,0x3B,0xD0,0x75,0x64,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x49,0x4D,0x63,0xDA,0x4B,0x8D,0x1C,0x99,0xC4,0x81,0x7A,0x10,0x04,0x99,0x45,0x3B,0xD0,0x0F,0x83,0xA0,0x00,0x00,0x00,0xC4,0xA1,0x7A,0x10,0x0C,0x98,0xC5,0xFA,0x11,0x44,0x24,0x3C,0x44,0x8B,0x5C,0x24,0x3C,0xC5,0xFA,0x11,0x4C,0x24,0x38,0x44,0x23,0x5C,0x24,0x38,0x44,0x89,0x5C,0x24,0x34,0xC5,0xFA,0x10,0x44,0x24,0x34,0xC5,0xFA,0x11,0x03,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xB7,0x4C,0x89,0x09,0x89,0x51,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x40,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xB9,0xE7,0x09,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xEA,0xAF,0xC2,0x5F,0x4C,0x8B,0xF0,0xB9,0xEF,0x09,0x00,0x00,0x48,0xBA,0x78,0xB6,0x1B,0x7C,0xFC,0x7F,0x00,0x00,0xE8,0xD3,0xAF,0xC2,0x5F,0x4C,0x8B,0xC8,0x4C,0x8D,0x44,0x24,0x28,0x41,0x88,0x38,0x41,0x89,0x70,0x04,0x4D,0x8B,0xC6,0x8B,0xCB,0x8B,0xD5,0x48,0x8B,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0xE8,0xA6,0x51,0xFE,0xFF,0x48,0x8B,0xC8,0xE8,0x16,0x0A,0xAE,0x5F,0xCC,0xE8,0xC0,0xA7,0xC2,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<sbyte> and(Span<sbyte> lhs, sbyte rhs)
; location: [7FFC7C0A8FD0h, 7FFC7C0A9000h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0008h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
000bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
000eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0010h jle short 0027h               ; JLE(Jle_rel8_64) [27h:jmp64]                         encoding(2 bytes) = 7e 15
0012h movsx rax,r8b                 ; MOVSX(Movsx_r64_rm8) [RAX,R8L]                       encoding(4 bytes) = 49 0f be c0
0016h movsxd r8,r10d                ; MOVSXD(Movsxd_r64_rm32) [R8,R10D]                    encoding(3 bytes) = 4d 63 c2
0019h add r8,r9                     ; ADD(Add_r64_rm64) [R8,R9]                            encoding(3 bytes) = 4d 03 c1
001ch and [r8],al                   ; AND(And_rm8_r8) [mem(8u,R8:br,DS:sr),AL]             encoding(3 bytes) = 41 20 00
001fh inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
0022h cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
0025h jl short 0016h                ; JL(Jl_rel8_64) [16h:jmp64]                           encoding(2 bytes) = 7c ef
0027h mov [rcx],r9                  ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R9]         encoding(3 bytes) = 4c 89 09
002ah mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
002dh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0030h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> andBytes => new byte[49]{0x0F,0x1F,0x44,0x00,0x00,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x15,0x49,0x0F,0xBE,0xC0,0x4D,0x63,0xC2,0x4D,0x03,0xC1,0x41,0x20,0x00,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xEF,0x4C,0x89,0x09,0x89,0x51,0x08,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<short> and(Span<short> lhs, short rhs)
; location: [7FFC7C0A9070h, 7FFC7C0A90A2h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0008h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
000bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
000eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0010h jle short 0029h               ; JLE(Jle_rel8_64) [29h:jmp64]                         encoding(2 bytes) = 7e 17
0012h movsx rax,r8w                 ; MOVSX(Movsx_r64_rm16) [RAX,R8W]                      encoding(4 bytes) = 49 0f bf c0
0016h movsxd r8,r10d                ; MOVSXD(Movsxd_r64_rm32) [R8,R10D]                    encoding(3 bytes) = 4d 63 c2
0019h lea r8,[r9+r8*2]              ; LEA(Lea_r64_m) [R8,mem(Unknown,R9:br,DS:sr)]         encoding(4 bytes) = 4f 8d 04 41
001dh and [r8],ax                   ; AND(And_rm16_r16) [mem(16u,R8:br,DS:sr),AX]          encoding(4 bytes) = 66 41 21 00
0021h inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
0024h cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
0027h jl short 0016h                ; JL(Jl_rel8_64) [16h:jmp64]                           encoding(2 bytes) = 7c ed
0029h mov [rcx],r9                  ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R9]         encoding(3 bytes) = 4c 89 09
002ch mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
002fh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0032h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> andBytes => new byte[51]{0x0F,0x1F,0x44,0x00,0x00,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x17,0x49,0x0F,0xBF,0xC0,0x4D,0x63,0xC2,0x4F,0x8D,0x04,0x41,0x66,0x41,0x21,0x00,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xED,0x4C,0x89,0x09,0x89,0x51,0x08,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<ushort> and(Span<ushort> lhs, ushort rhs)
; location: [7FFC7C0A90C0h, 7FFC7C0A90F2h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov r9,[rdx]                  ; MOV(Mov_r64_rm64) [R9,mem(64u,RDX:br,DS:sr)]         encoding(3 bytes) = 4c 8b 0a
0008h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
000bh xor r10d,r10d                 ; XOR(Xor_r32_rm32) [R10D,R10D]                        encoding(3 bytes) = 45 33 d2
000eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0010h jle short 0029h               ; JLE(Jle_rel8_64) [29h:jmp64]                         encoding(2 bytes) = 7e 17
0012h movzx eax,r8w                 ; MOVZX(Movzx_r32_rm16) [EAX,R8W]                      encoding(4 bytes) = 41 0f b7 c0
0016h movsxd r8,r10d                ; MOVSXD(Movsxd_r64_rm32) [R8,R10D]                    encoding(3 bytes) = 4d 63 c2
0019h lea r8,[r9+r8*2]              ; LEA(Lea_r64_m) [R8,mem(Unknown,R9:br,DS:sr)]         encoding(4 bytes) = 4f 8d 04 41
001dh and [r8],ax                   ; AND(And_rm16_r16) [mem(16u,R8:br,DS:sr),AX]          encoding(4 bytes) = 66 41 21 00
0021h inc r10d                      ; INC(Inc_rm32) [R10D]                                 encoding(3 bytes) = 41 ff c2
0024h cmp r10d,edx                  ; CMP(Cmp_r32_rm32) [R10D,EDX]                         encoding(3 bytes) = 44 3b d2
0027h jl short 0016h                ; JL(Jl_rel8_64) [16h:jmp64]                           encoding(2 bytes) = 7c ed
0029h mov [rcx],r9                  ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),R9]         encoding(3 bytes) = 4c 89 09
002ch mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
002fh mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0032h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> andBytes => new byte[51]{0x0F,0x1F,0x44,0x00,0x00,0x4C,0x8B,0x0A,0x8B,0x52,0x08,0x45,0x33,0xD2,0x85,0xD2,0x7E,0x17,0x41,0x0F,0xB7,0xC0,0x4D,0x63,0xC2,0x4F,0x8D,0x04,0x41,0x66,0x41,0x21,0x00,0x41,0xFF,0xC2,0x44,0x3B,0xD2,0x7C,0xED,0x4C,0x89,0x09,0x89,0x51,0x08,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<int> and(Span<int> lhs, int rhs)
; location: [7FFC7C0A9110h, 7FFC7C0A913Dh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,[rdx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 02
0008h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
000bh xor r9d,r9d                   ; XOR(Xor_r32_rm32) [R9D,R9D]                          encoding(3 bytes) = 45 33 c9
000eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0010h jle short 0024h               ; JLE(Jle_rel8_64) [24h:jmp64]                         encoding(2 bytes) = 7e 12
0012h movsxd r10,r9d                ; MOVSXD(Movsxd_r64_rm32) [R10,R9D]                    encoding(3 bytes) = 4d 63 d1
0015h lea r10,[rax+r10*4]           ; LEA(Lea_r64_m) [R10,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 4e 8d 14 90
0019h and [r10],r8d                 ; AND(And_rm32_r32) [mem(32u,R10:br,DS:sr),R8D]        encoding(3 bytes) = 45 21 02
001ch inc r9d                       ; INC(Inc_rm32) [R9D]                                  encoding(3 bytes) = 41 ff c1
001fh cmp r9d,edx                   ; CMP(Cmp_r32_rm32) [R9D,EDX]                          encoding(3 bytes) = 44 3b ca
0022h jl short 0012h                ; JL(Jl_rel8_64) [12h:jmp64]                           encoding(2 bytes) = 7c ee
0024h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0027h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
002ah mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
002dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> andBytes => new byte[46]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x02,0x8B,0x52,0x08,0x45,0x33,0xC9,0x85,0xD2,0x7E,0x12,0x4D,0x63,0xD1,0x4E,0x8D,0x14,0x90,0x45,0x21,0x02,0x41,0xFF,0xC1,0x44,0x3B,0xCA,0x7C,0xEE,0x48,0x89,0x01,0x89,0x51,0x08,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<uint> and(Span<uint> lhs, uint rhs)
; location: [7FFC7C0A9150h, 7FFC7C0A917Dh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,[rdx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 02
0008h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
000bh xor r9d,r9d                   ; XOR(Xor_r32_rm32) [R9D,R9D]                          encoding(3 bytes) = 45 33 c9
000eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0010h jle short 0024h               ; JLE(Jle_rel8_64) [24h:jmp64]                         encoding(2 bytes) = 7e 12
0012h movsxd r10,r9d                ; MOVSXD(Movsxd_r64_rm32) [R10,R9D]                    encoding(3 bytes) = 4d 63 d1
0015h lea r10,[rax+r10*4]           ; LEA(Lea_r64_m) [R10,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 4e 8d 14 90
0019h and [r10],r8d                 ; AND(And_rm32_r32) [mem(32u,R10:br,DS:sr),R8D]        encoding(3 bytes) = 45 21 02
001ch inc r9d                       ; INC(Inc_rm32) [R9D]                                  encoding(3 bytes) = 41 ff c1
001fh cmp r9d,edx                   ; CMP(Cmp_r32_rm32) [R9D,EDX]                          encoding(3 bytes) = 44 3b ca
0022h jl short 0012h                ; JL(Jl_rel8_64) [12h:jmp64]                           encoding(2 bytes) = 7c ee
0024h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0027h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
002ah mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
002dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> andBytes => new byte[46]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x02,0x8B,0x52,0x08,0x45,0x33,0xC9,0x85,0xD2,0x7E,0x12,0x4D,0x63,0xD1,0x4E,0x8D,0x14,0x90,0x45,0x21,0x02,0x41,0xFF,0xC1,0x44,0x3B,0xCA,0x7C,0xEE,0x48,0x89,0x01,0x89,0x51,0x08,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<ulong> and(Span<ulong> lhs, ulong rhs)
; location: [7FFC7C0A91D0h, 7FFC7C0A91FDh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,[rdx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 02
0008h mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
000bh xor r9d,r9d                   ; XOR(Xor_r32_rm32) [R9D,R9D]                          encoding(3 bytes) = 45 33 c9
000eh test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0010h jle short 0024h               ; JLE(Jle_rel8_64) [24h:jmp64]                         encoding(2 bytes) = 7e 12
0012h movsxd r10,r9d                ; MOVSXD(Movsxd_r64_rm32) [R10,R9D]                    encoding(3 bytes) = 4d 63 d1
0015h lea r10,[rax+r10*8]           ; LEA(Lea_r64_m) [R10,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 4e 8d 14 d0
0019h and [r10],r8                  ; AND(And_rm64_r64) [mem(64u,R10:br,DS:sr),R8]         encoding(3 bytes) = 4d 21 02
001ch inc r9d                       ; INC(Inc_rm32) [R9D]                                  encoding(3 bytes) = 41 ff c1
001fh cmp r9d,edx                   ; CMP(Cmp_r32_rm32) [R9D,EDX]                          encoding(3 bytes) = 44 3b ca
0022h jl short 0012h                ; JL(Jl_rel8_64) [12h:jmp64]                           encoding(2 bytes) = 7c ee
0024h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0027h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
002ah mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
002dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> andBytes => new byte[46]{0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x02,0x8B,0x52,0x08,0x45,0x33,0xC9,0x85,0xD2,0x7E,0x12,0x4D,0x63,0xD1,0x4E,0x8D,0x14,0xD0,0x4D,0x21,0x02,0x41,0xFF,0xC1,0x44,0x3B,0xCA,0x7C,0xEE,0x48,0x89,0x01,0x89,0x51,0x08,0x48,0x8B,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<float> and(Span<float> lhs, float rhs)
; location: [7FFC7C0A9210h, 7FFC7C0A926Ch]
0000h sub rsp,18h                   ; SUB(Sub_rm64_imm8) [RSP,18h:imm64]                   encoding(4 bytes) = 48 83 ec 18
0004h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0007h mov rax,[rdx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 02
000ah mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
000dh xor r8d,r8d                   ; XOR(Xor_r32_rm32) [R8D,R8D]                          encoding(3 bytes) = 45 33 c0
0010h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0012h jle short 004fh               ; JLE(Jle_rel8_64) [4Fh:jmp64]                         encoding(2 bytes) = 7e 3b
0014h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0017h lea r10,[rax+r9*4]            ; LEA(Lea_r64_m) [R10,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 4e 8d 14 88
001bh vmovss xmm0,dword ptr [rax+r9*4]; VMOVSS(VEX_Vmovss_xmm_m32) [XMM0,mem(Float32,RAX:br,DS:sr)] encoding(VEX, 6 bytes) = c4 a1 7a 10 04 88
0021h vmovss dword ptr [rsp+14h],xmm0; VMOVSS(VEX_Vmovss_m32_xmm) [mem(Float32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 11 44 24 14
0027h mov r9d,[rsp+14h]             ; MOV(Mov_r32_rm32) [R9D,mem(32u,RSP:br,SS:sr)]        encoding(5 bytes) = 44 8b 4c 24 14
002ch vmovss dword ptr [rsp+10h],xmm2; VMOVSS(VEX_Vmovss_m32_xmm) [mem(Float32,RSP:br,SS:sr),XMM2] encoding(VEX, 6 bytes) = c5 fa 11 54 24 10
0032h and r9d,[rsp+10h]             ; AND(And_r32_rm32) [R9D,mem(32u,RSP:br,SS:sr)]        encoding(5 bytes) = 44 23 4c 24 10
0037h mov [rsp+0Ch],r9d             ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),R9D]        encoding(5 bytes) = 44 89 4c 24 0c
003ch vmovss xmm0,dword ptr [rsp+0Ch]; VMOVSS(VEX_Vmovss_xmm_m32) [XMM0,mem(Float32,RSP:br,SS:sr)] encoding(VEX, 6 bytes) = c5 fa 10 44 24 0c
0042h vmovss dword ptr [r10],xmm0   ; VMOVSS(VEX_Vmovss_m32_xmm) [mem(Float32,R10:br,DS:sr),XMM0] encoding(VEX, 5 bytes) = c4 c1 7a 11 02
0047h inc r8d                       ; INC(Inc_rm32) [R8D]                                  encoding(3 bytes) = 41 ff c0
004ah cmp r8d,edx                   ; CMP(Cmp_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 3b c2
004dh jl short 0014h                ; JL(Jl_rel8_64) [14h:jmp64]                           encoding(2 bytes) = 7c c5
004fh mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0052h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
0055h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0058h add rsp,18h                   ; ADD(Add_rm64_imm8) [RSP,18h:imm64]                   encoding(4 bytes) = 48 83 c4 18
005ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> andBytes => new byte[93]{0x48,0x83,0xEC,0x18,0xC5,0xF8,0x77,0x48,0x8B,0x02,0x8B,0x52,0x08,0x45,0x33,0xC0,0x85,0xD2,0x7E,0x3B,0x4D,0x63,0xC8,0x4E,0x8D,0x14,0x88,0xC4,0xA1,0x7A,0x10,0x04,0x88,0xC5,0xFA,0x11,0x44,0x24,0x14,0x44,0x8B,0x4C,0x24,0x14,0xC5,0xFA,0x11,0x54,0x24,0x10,0x44,0x23,0x4C,0x24,0x10,0x44,0x89,0x4C,0x24,0x0C,0xC5,0xFA,0x10,0x44,0x24,0x0C,0xC4,0xC1,0x7A,0x11,0x02,0x41,0xFF,0xC0,0x44,0x3B,0xC2,0x7C,0xC5,0x48,0x89,0x01,0x89,0x51,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x18,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Span<double> and(Span<double> lhs, double rhs)
; location: [7FFC7C0A9290h, 7FFC7C0A92EAh]
0000h sub rsp,18h                   ; SUB(Sub_rm64_imm8) [RSP,18h:imm64]                   encoding(4 bytes) = 48 83 ec 18
0004h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0007h mov rax,[rdx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 02
000ah mov edx,[rdx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 08
000dh xor r8d,r8d                   ; XOR(Xor_r32_rm32) [R8D,R8D]                          encoding(3 bytes) = 45 33 c0
0010h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0012h jle short 004dh               ; JLE(Jle_rel8_64) [4Dh:jmp64]                         encoding(2 bytes) = 7e 39
0014h movsxd r9,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R9,R8D]                     encoding(3 bytes) = 4d 63 c8
0017h lea r10,[rax+r9*8]            ; LEA(Lea_r64_m) [R10,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 4e 8d 14 c8
001bh vmovsd xmm0,qword ptr [rax+r9*8]; VMOVSD(VEX_Vmovsd_xmm_m64) [XMM0,mem(Float64,RAX:br,DS:sr)] encoding(VEX, 6 bytes) = c4 a1 7b 10 04 c8
0021h vmovsd qword ptr [rsp+10h],xmm0; VMOVSD(VEX_Vmovsd_m64_xmm) [mem(Float64,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fb 11 44 24 10
0027h mov r9,[rsp+10h]              ; MOV(Mov_r64_rm64) [R9,mem(64u,RSP:br,SS:sr)]         encoding(5 bytes) = 4c 8b 4c 24 10
002ch vmovsd qword ptr [rsp+8],xmm2 ; VMOVSD(VEX_Vmovsd_m64_xmm) [mem(Float64,RSP:br,SS:sr),XMM2] encoding(VEX, 6 bytes) = c5 fb 11 54 24 08
0032h and r9,[rsp+8]                ; AND(And_r64_rm64) [R9,mem(64u,RSP:br,SS:sr)]         encoding(5 bytes) = 4c 23 4c 24 08
0037h mov [rsp],r9                  ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),R9]         encoding(4 bytes) = 4c 89 0c 24
003bh vmovsd xmm0,qword ptr [rsp]   ; VMOVSD(VEX_Vmovsd_xmm_m64) [XMM0,mem(Float64,RSP:br,SS:sr)] encoding(VEX, 5 bytes) = c5 fb 10 04 24
0040h vmovsd qword ptr [r10],xmm0   ; VMOVSD(VEX_Vmovsd_m64_xmm) [mem(Float64,R10:br,DS:sr),XMM0] encoding(VEX, 5 bytes) = c4 c1 7b 11 02
0045h inc r8d                       ; INC(Inc_rm32) [R8D]                                  encoding(3 bytes) = 41 ff c0
0048h cmp r8d,edx                   ; CMP(Cmp_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 3b c2
004bh jl short 0014h                ; JL(Jl_rel8_64) [14h:jmp64]                           encoding(2 bytes) = 7c c7
004dh mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
0050h mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
0053h mov rax,rcx                   ; MOV(Mov_r64_rm64) [RAX,RCX]                          encoding(3 bytes) = 48 8b c1
0056h add rsp,18h                   ; ADD(Add_rm64_imm8) [RSP,18h:imm64]                   encoding(4 bytes) = 48 83 c4 18
005ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> andBytes => new byte[91]{0x48,0x83,0xEC,0x18,0xC5,0xF8,0x77,0x48,0x8B,0x02,0x8B,0x52,0x08,0x45,0x33,0xC0,0x85,0xD2,0x7E,0x39,0x4D,0x63,0xC8,0x4E,0x8D,0x14,0xC8,0xC4,0xA1,0x7B,0x10,0x04,0xC8,0xC5,0xFB,0x11,0x44,0x24,0x10,0x4C,0x8B,0x4C,0x24,0x10,0xC5,0xFB,0x11,0x54,0x24,0x08,0x4C,0x23,0x4C,0x24,0x08,0x4C,0x89,0x0C,0x24,0xC5,0xFB,0x10,0x04,0x24,0xC4,0xC1,0x7B,0x11,0x02,0x41,0xFF,0xC0,0x44,0x3B,0xC2,0x7C,0xC7,0x48,0x89,0x01,0x89,0x51,0x08,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x18,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: byte avgz(byte lhs, byte rhs)
; location: [7FFC7C0A9310h, 7FFC7C0A9328h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0008h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
000bh mov ecx,eax                   ; MOV(Mov_r32_rm32) [ECX,EAX]                          encoding(2 bytes) = 8b c8
000dh and ecx,edx                   ; AND(And_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 23 ca
000fh xor eax,edx                   ; XOR(Xor_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 33 c2
0011h sar eax,1                     ; SAR(Sar_rm32_1) [EAX,1h:imm8]                        encoding(2 bytes) = d1 f8
0013h add eax,ecx                   ; ADD(Add_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 03 c1
0015h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0018h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> avgzBytes => new byte[25]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC1,0x0F,0xB6,0xD2,0x8B,0xC8,0x23,0xCA,0x33,0xC2,0xD1,0xF8,0x03,0xC1,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ushort avgz(ushort lhs, ushort rhs)
; location: [7FFC7C0A9340h, 7FFC7C0A9358h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cx                  ; MOVZX(Movzx_r32_rm16) [EAX,CX]                       encoding(3 bytes) = 0f b7 c1
0008h movzx edx,dx                  ; MOVZX(Movzx_r32_rm16) [EDX,DX]                       encoding(3 bytes) = 0f b7 d2
000bh mov ecx,eax                   ; MOV(Mov_r32_rm32) [ECX,EAX]                          encoding(2 bytes) = 8b c8
000dh and ecx,edx                   ; AND(And_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 23 ca
000fh xor eax,edx                   ; XOR(Xor_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 33 c2
0011h sar eax,1                     ; SAR(Sar_rm32_1) [EAX,1h:imm8]                        encoding(2 bytes) = d1 f8
0013h add eax,ecx                   ; ADD(Add_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 03 c1
0015h movzx eax,ax                  ; MOVZX(Movzx_r32_rm16) [EAX,AX]                       encoding(3 bytes) = 0f b7 c0
0018h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> avgzBytes => new byte[25]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB7,0xC1,0x0F,0xB7,0xD2,0x8B,0xC8,0x23,0xCA,0x33,0xC2,0xD1,0xF8,0x03,0xC1,0x0F,0xB7,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
